{"code":"import unescapeJS from 'unescape-js';\r\nconst beginsWithLineBreakRegex = /^\\s+|\\s+$/;\r\nexport function sanitizeScript(js, evaluationVersion) {\r\n    // We remove any line breaks from the beginning of the script because that\r\n    // makes the final function invalid. We also unescape any escaped characters\r\n    // so that eval can happen\r\n    //default value of evalutaion version is 2\r\n    evaluationVersion = evaluationVersion ? evaluationVersion : 2;\r\n    const trimmedJS = js.replace(beginsWithLineBreakRegex, '');\r\n    return evaluationVersion > 1 ? trimmedJS : unescapeJS(trimmedJS);\r\n}\r\n// For the times when you need to know if something truly an object like { a: 1, b: 2}\r\n// typeof, lodash.isObject and others will return false positives for things like array, null, etc\r\nexport const isTrueObject = (item) => {\r\n    return Object.prototype.toString.call(item) === '[object Object]';\r\n};\r\n//# sourceMappingURL=utils.js.map","references":["/home/ykrivoshei/IdeaProjects/appsmith-server/app/shared/ast/node_modules/unescape-js/dist/index.js"],"map":"{\"version\":3,\"file\":\"utils.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,UAAU,MAAM,aAAa,CAAC;AAErC,MAAM,wBAAwB,GAAG,WAAW,CAAC;AAE7C,MAAM,UAAU,cAAc,CAAC,EAAU,EAAE,iBAAyB;IAClE,0EAA0E;IAC1E,4EAA4E;IAC5E,0BAA0B;IAC1B,0CAA0C;IAC1C,iBAAiB,GAAG,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,MAAM,SAAS,GAAG,EAAE,CAAC,OAAO,CAAC,wBAAwB,EAAE,EAAE,CAAC,CAAC;IAC3D,OAAO,iBAAiB,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AACnE,CAAC;AAED,sFAAsF;AACtF,kGAAkG;AAClG,MAAM,CAAC,MAAM,YAAY,GAAG,CAC1B,IAAa,EACoB,EAAE;IACnC,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,iBAAiB,CAAC;AACpE,CAAC,CAAC\"}","dts":{"name":"/home/ykrivoshei/IdeaProjects/appsmith-server/app/shared/ast/build/src/utils.d.ts","writeByteOrderMark":false,"text":"export declare function sanitizeScript(js: string, evaluationVersion: number): any;\r\nexport declare const isTrueObject: (item: unknown) => item is Record<string, unknown>;\r\n"}}
