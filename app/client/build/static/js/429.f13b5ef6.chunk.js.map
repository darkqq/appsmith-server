{"version":3,"file":"static/js/429.f13b5ef6.chunk.js","mappings":"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","sources":["../node_modules/@sentry/hub/src/session.ts","../node_modules/@sentry/hub/src/hub.ts","../node_modules/@sentry/hub/src/scope.ts","../node_modules/@sentry/hub/node_modules/tslib/tslib.es6.js","../node_modules/@sentry/minimal/node_modules/tslib/tslib.es6.js","../node_modules/@sentry/minimal/src/index.ts","../node_modules/@sentry/types/src/session.ts","../node_modules/@sentry/utils/src/is.ts","../node_modules/@sentry/utils/src/logger.ts","../node_modules/@sentry/utils/src/misc.ts","../node_modules/@sentry/utils/src/node.ts","../node_modules/@sentry/utils/src/object.ts","../node_modules/@sentry/utils/src/syncpromise.ts","../node_modules/@sentry/utils/src/time.ts","../node_modules/@sentry/utils/node_modules/tslib/tslib.es6.js","../node_modules/jshint/src/jshint.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/_apply.js","../node_modules/lodash/_arrayIncludes.js","../node_modules/lodash/_arrayIncludesWith.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_baseDifference.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/_baseFlatten.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_baseIndexOf.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/_baseIsNaN.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_baseRest.js","../node_modules/lodash/_baseSetToString.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_isFlattenable.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_overRest.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_setToString.js","../node_modules/lodash/_shortOut.js","../node_modules/lodash/_strictIndexOf.js","../node_modules/lodash/constant.js","../node_modules/lodash/difference.js","../node_modules/lodash/get.js","../node_modules/lodash/identity.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/isArrayLikeObject.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/isEmpty.js","../node_modules/lodash/isLength.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/noop.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/toPath.js","../node_modules/toposort/index.js","../node_modules/unescape-js/dist/index.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/klona/full/index.mjs","../node_modules/lib0/map.js","../node_modules/lib0/set.js","../node_modules/lib0/array.js","../node_modules/lib0/observable.js","../node_modules/lib0/math.js","../node_modules/lib0/string.js","../node_modules/lib0/conditions.js","../node_modules/lib0/storage.js","../node_modules/lib0/environment.js","../node_modules/lib0/buffer.js","../node_modules/lib0/binary.js","../node_modules/lib0/number.js","../node_modules/lib0/encoding.js","../node_modules/isomorphic.js/browser.mjs","../node_modules/lib0/random.js","../node_modules/lib0/error.js","../node_modules/lib0/function.js","../node_modules/lib0/symbol.js","../node_modules/lib0/pair.js","../node_modules/lib0/dom.js","../node_modules/lib0/time.js","../node_modules/lib0/logging.js","../node_modules/lib0/iterator.js","../node_modules/lib0/object.js","../node_modules/yjs/src/utils/DeleteSet.js","../node_modules/yjs/src/utils/Doc.js","../node_modules/yjs/src/utils/UpdateEncoder.js","../node_modules/yjs/src/utils/encoding.js","../node_modules/yjs/src/utils/EventHandler.js","../node_modules/yjs/src/utils/ID.js","../node_modules/yjs/src/utils/isParentOf.js","../node_modules/yjs/src/utils/Snapshot.js","../node_modules/yjs/src/utils/StructStore.js","../node_modules/yjs/src/utils/Transaction.js","../node_modules/yjs/src/utils/UndoManager.js","../node_modules/yjs/src/utils/updates.js","../node_modules/yjs/src/utils/YEvent.js","../node_modules/yjs/src/types/AbstractType.js","../node_modules/yjs/src/types/YArray.js","../node_modules/yjs/src/types/YMap.js","../node_modules/yjs/src/types/YText.js","../node_modules/yjs/src/types/YXmlFragment.js","../node_modules/yjs/src/types/YXmlElement.js","../node_modules/yjs/src/types/YXmlEvent.js","../node_modules/yjs/src/structs/AbstractStruct.js","../node_modules/yjs/src/structs/GC.js","../node_modules/yjs/src/structs/ContentBinary.js","../node_modules/yjs/src/structs/ContentDeleted.js","../node_modules/yjs/src/structs/ContentDoc.js","../node_modules/yjs/src/structs/ContentEmbed.js","../node_modules/yjs/src/structs/ContentFormat.js","../node_modules/yjs/src/structs/ContentAny.js","../node_modules/yjs/src/structs/ContentString.js","../node_modules/yjs/src/structs/ContentType.js","../node_modules/yjs/src/structs/Item.js"],"sourcesContent":["import { Session as SessionInterface, SessionContext, SessionStatus } from '@sentry/types';\nimport { dropUndefinedKeys, uuid4 } from '@sentry/utils';\n\n/**\n * @inheritdoc\n */\nexport class Session implements SessionInterface {\n  public userAgent?: string;\n  public errors: number = 0;\n  public release?: string;\n  public sid: string = uuid4();\n  public did?: string;\n  public timestamp: number = Date.now();\n  public started: number = Date.now();\n  public duration: number = 0;\n  public status: SessionStatus = SessionStatus.Ok;\n  public environment?: string;\n  public ipAddress?: string;\n  public init: boolean = true;\n\n  constructor(context?: Omit<SessionContext, 'started' | 'status'>) {\n    if (context) {\n      this.update(context);\n    }\n  }\n\n  /** JSDoc */\n  // eslint-disable-next-line complexity\n  update(context: SessionContext = {}): void {\n    if (context.user) {\n      if (context.user.ip_address) {\n        this.ipAddress = context.user.ip_address;\n      }\n\n      if (!context.did) {\n        this.did = context.user.id || context.user.email || context.user.username;\n      }\n    }\n\n    this.timestamp = context.timestamp || Date.now();\n\n    if (context.sid) {\n      // Good enough uuid validation. — Kamil\n      this.sid = context.sid.length === 32 ? context.sid : uuid4();\n    }\n    if (context.init !== undefined) {\n      this.init = context.init;\n    }\n    if (context.did) {\n      this.did = `${context.did}`;\n    }\n    if (typeof context.started === 'number') {\n      this.started = context.started;\n    }\n    if (typeof context.duration === 'number') {\n      this.duration = context.duration;\n    } else {\n      this.duration = this.timestamp - this.started;\n    }\n    if (context.release) {\n      this.release = context.release;\n    }\n    if (context.environment) {\n      this.environment = context.environment;\n    }\n    if (context.ipAddress) {\n      this.ipAddress = context.ipAddress;\n    }\n    if (context.userAgent) {\n      this.userAgent = context.userAgent;\n    }\n    if (typeof context.errors === 'number') {\n      this.errors = context.errors;\n    }\n    if (context.status) {\n      this.status = context.status;\n    }\n  }\n\n  /** JSDoc */\n  close(status?: Exclude<SessionStatus, SessionStatus.Ok>): void {\n    if (status) {\n      this.update({ status });\n    } else if (this.status === SessionStatus.Ok) {\n      this.update({ status: SessionStatus.Exited });\n    } else {\n      this.update();\n    }\n  }\n\n  /** JSDoc */\n  toJSON(): {\n    init: boolean;\n    sid: string;\n    did?: string;\n    timestamp: string;\n    started: string;\n    duration: number;\n    status: SessionStatus;\n    errors: number;\n    attrs?: {\n      release?: string;\n      environment?: string;\n      user_agent?: string;\n      ip_address?: string;\n    };\n  } {\n    return dropUndefinedKeys({\n      sid: `${this.sid}`,\n      init: this.init,\n      started: new Date(this.started).toISOString(),\n      timestamp: new Date(this.timestamp).toISOString(),\n      status: this.status,\n      errors: this.errors,\n      did: typeof this.did === 'number' || typeof this.did === 'string' ? `${this.did}` : undefined,\n      duration: this.duration,\n      attrs: dropUndefinedKeys({\n        release: this.release,\n        environment: this.environment,\n        ip_address: this.ipAddress,\n        user_agent: this.userAgent,\n      }),\n    });\n  }\n}\n","/* eslint-disable max-lines */\nimport {\n  Breadcrumb,\n  BreadcrumbHint,\n  Client,\n  CustomSamplingContext,\n  Event,\n  EventHint,\n  Extra,\n  Extras,\n  Hub as HubInterface,\n  Integration,\n  IntegrationClass,\n  Primitive,\n  SessionContext,\n  SessionStatus,\n  Severity,\n  Span,\n  SpanContext,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\nimport { consoleSandbox, dateTimestampInSeconds, getGlobalObject, isNodeEnv, logger, uuid4 } from '@sentry/utils';\n\nimport { Carrier, DomainAsCarrier, Layer } from './interfaces';\nimport { Scope } from './scope';\nimport { Session } from './session';\n\n/**\n * API compatibility version of this hub.\n *\n * WARNING: This number should only be increased when the global interface\n * changes and new methods are introduced.\n *\n * @hidden\n */\nexport const API_VERSION = 3;\n\n/**\n * Default maximum number of breadcrumbs added to an event. Can be overwritten\n * with {@link Options.maxBreadcrumbs}.\n */\nconst DEFAULT_BREADCRUMBS = 100;\n\n/**\n * Absolute maximum number of breadcrumbs added to an event. The\n * `maxBreadcrumbs` option cannot be higher than this value.\n */\nconst MAX_BREADCRUMBS = 100;\n\n/**\n * @inheritDoc\n */\nexport class Hub implements HubInterface {\n  /** Is a {@link Layer}[] containing the client and scope */\n  private readonly _stack: Layer[] = [{}];\n\n  /** Contains the last event id of a captured event.  */\n  private _lastEventId?: string;\n\n  /**\n   * Creates a new instance of the hub, will push one {@link Layer} into the\n   * internal stack on creation.\n   *\n   * @param client bound to the hub.\n   * @param scope bound to the hub.\n   * @param version number, higher number means higher priority.\n   */\n  public constructor(client?: Client, scope: Scope = new Scope(), private readonly _version: number = API_VERSION) {\n    this.getStackTop().scope = scope;\n    this.bindClient(client);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public isOlderThan(version: number): boolean {\n    return this._version < version;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public bindClient(client?: Client): void {\n    const top = this.getStackTop();\n    top.client = client;\n    if (client && client.setupIntegrations) {\n      client.setupIntegrations();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public pushScope(): Scope {\n    // We want to clone the content of prev scope\n    const scope = Scope.clone(this.getScope());\n    this.getStack().push({\n      client: this.getClient(),\n      scope,\n    });\n    return scope;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public popScope(): boolean {\n    if (this.getStack().length <= 1) return false;\n    return !!this.getStack().pop();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public withScope(callback: (scope: Scope) => void): void {\n    const scope = this.pushScope();\n    try {\n      callback(scope);\n    } finally {\n      this.popScope();\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getClient<C extends Client>(): C | undefined {\n    return this.getStackTop().client as C;\n  }\n\n  /** Returns the scope of the top stack. */\n  public getScope(): Scope | undefined {\n    return this.getStackTop().scope;\n  }\n\n  /** Returns the scope stack for domains or the process. */\n  public getStack(): Layer[] {\n    return this._stack;\n  }\n\n  /** Returns the topmost scope layer in the order domain > local > process. */\n  public getStackTop(): Layer {\n    return this._stack[this._stack.length - 1];\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  public captureException(exception: any, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error('Sentry syntheticException');\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: exception,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureException', exception, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureMessage(message: string, level?: Severity, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    let finalHint = hint;\n\n    // If there's no explicit hint provided, mimick the same thing that would happen\n    // in the minimal itself to create a consistent behavior.\n    // We don't do this in the client, as it's the lowest level API, and doing this,\n    // would prevent user from having full control over direct calls.\n    if (!hint) {\n      let syntheticException: Error;\n      try {\n        throw new Error(message);\n      } catch (exception) {\n        syntheticException = exception as Error;\n      }\n      finalHint = {\n        originalException: message,\n        syntheticException,\n      };\n    }\n\n    this._invokeClient('captureMessage', message, level, {\n      ...finalHint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureEvent(event: Event, hint?: EventHint): string {\n    const eventId = (this._lastEventId = uuid4());\n    this._invokeClient('captureEvent', event, {\n      ...hint,\n      event_id: eventId,\n    });\n    return eventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public lastEventId(): string | undefined {\n    return this._lastEventId;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, hint?: BreadcrumbHint): void {\n    const { scope, client } = this.getStackTop();\n\n    if (!scope || !client) return;\n\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const { beforeBreadcrumb = null, maxBreadcrumbs = DEFAULT_BREADCRUMBS } =\n      (client.getOptions && client.getOptions()) || {};\n\n    if (maxBreadcrumbs <= 0) return;\n\n    const timestamp = dateTimestampInSeconds();\n    const mergedBreadcrumb = { timestamp, ...breadcrumb };\n    const finalBreadcrumb = beforeBreadcrumb\n      ? (consoleSandbox(() => beforeBreadcrumb(mergedBreadcrumb, hint)) as Breadcrumb | null)\n      : mergedBreadcrumb;\n\n    if (finalBreadcrumb === null) return;\n\n    scope.addBreadcrumb(finalBreadcrumb, Math.min(maxBreadcrumbs, MAX_BREADCRUMBS));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setUser(user);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): void {\n    const scope = this.getScope();\n    if (scope) scope.setTags(tags);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtras(extras);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): void {\n    const scope = this.getScope();\n    if (scope) scope.setTag(key, value);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): void {\n    const scope = this.getScope();\n    if (scope) scope.setExtra(key, extra);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  public setContext(name: string, context: { [key: string]: any } | null): void {\n    const scope = this.getScope();\n    if (scope) scope.setContext(name, context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public configureScope(callback: (scope: Scope) => void): void {\n    const { scope, client } = this.getStackTop();\n    if (scope && client) {\n      callback(scope);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public run(callback: (hub: Hub) => void): void {\n    const oldHub = makeMain(this);\n    try {\n      callback(this);\n    } finally {\n      makeMain(oldHub);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getIntegration<T extends Integration>(integration: IntegrationClass<T>): T | null {\n    const client = this.getClient();\n    if (!client) return null;\n    try {\n      return client.getIntegration(integration);\n    } catch (_oO) {\n      logger.warn(`Cannot retrieve integration ${integration.id} from the current Hub`);\n      return null;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSpan(context: SpanContext): Span {\n    return this._callExtensionMethod('startSpan', context);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startTransaction(context: TransactionContext, customSamplingContext?: CustomSamplingContext): Transaction {\n    return this._callExtensionMethod('startTransaction', context, customSamplingContext);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public traceHeaders(): { [key: string]: string } {\n    return this._callExtensionMethod<{ [key: string]: string }>('traceHeaders');\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public captureSession(endSession: boolean = false): void {\n    // both send the update and pull the session from the scope\n    if (endSession) {\n      return this.endSession();\n    }\n\n    // only send the update\n    this._sendSessionUpdate();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public endSession(): void {\n    this.getStackTop()\n      ?.scope?.getSession()\n      ?.close();\n    this._sendSessionUpdate();\n\n    // the session is over; take it off of the scope\n    this.getStackTop()?.scope?.setSession();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public startSession(context?: SessionContext): Session {\n    const { scope, client } = this.getStackTop();\n    const { release, environment } = (client && client.getOptions()) || {};\n    const session = new Session({\n      release,\n      environment,\n      ...(scope && { user: scope.getUser() }),\n      ...context,\n    });\n\n    if (scope) {\n      // End existing session if there's one\n      const currentSession = scope.getSession && scope.getSession();\n      if (currentSession && currentSession.status === SessionStatus.Ok) {\n        currentSession.update({ status: SessionStatus.Exited });\n      }\n      this.endSession();\n\n      // Afterwards we set the new session on the scope\n      scope.setSession(session);\n    }\n\n    return session;\n  }\n\n  /**\n   * Sends the current Session on the scope\n   */\n  private _sendSessionUpdate(): void {\n    const { scope, client } = this.getStackTop();\n    if (!scope) return;\n\n    const session = scope.getSession && scope.getSession();\n    if (session) {\n      if (client && client.captureSession) {\n        client.captureSession(session);\n      }\n    }\n  }\n\n  /**\n   * Internal helper function to call a method on the top client if it exists.\n   *\n   * @param method The method to call on the client.\n   * @param args Arguments to pass to the client function.\n   */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _invokeClient<M extends keyof Client>(method: M, ...args: any[]): void {\n    const { scope, client } = this.getStackTop();\n    if (client && client[method]) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-explicit-any\n      (client as any)[method](...args, scope);\n    }\n  }\n\n  /**\n   * Calls global extension method and binding current instance to the function call\n   */\n  // @ts-ignore Function lacks ending return statement and return type does not include 'undefined'. ts(2366)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _callExtensionMethod<T>(method: string, ...args: any[]): T {\n    const carrier = getMainCarrier();\n    const sentry = carrier.__SENTRY__;\n    if (sentry && sentry.extensions && typeof sentry.extensions[method] === 'function') {\n      return sentry.extensions[method].apply(this, args);\n    }\n    logger.warn(`Extension method ${method} couldn't be found, doing nothing.`);\n  }\n}\n\n/** Returns the global shim registry. */\nexport function getMainCarrier(): Carrier {\n  const carrier = getGlobalObject();\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {\n    extensions: {},\n    hub: undefined,\n  };\n  return carrier;\n}\n\n/**\n * Replaces the current main hub with the passed one on the global object\n *\n * @returns The old replaced hub\n */\nexport function makeMain(hub: Hub): Hub {\n  const registry = getMainCarrier();\n  const oldHub = getHubFromCarrier(registry);\n  setHubOnCarrier(registry, hub);\n  return oldHub;\n}\n\n/**\n * Returns the default hub instance.\n *\n * If a hub is already registered in the global carrier but this module\n * contains a more recent version, it replaces the registered version.\n * Otherwise, the currently registered hub will be returned.\n */\nexport function getCurrentHub(): Hub {\n  // Get main carrier (global for every environment)\n  const registry = getMainCarrier();\n\n  // If there's no hub, or its an old API, assign a new one\n  if (!hasHubOnCarrier(registry) || getHubFromCarrier(registry).isOlderThan(API_VERSION)) {\n    setHubOnCarrier(registry, new Hub());\n  }\n\n  // Prefer domains over global if they are there (applicable only to Node environment)\n  if (isNodeEnv()) {\n    return getHubFromActiveDomain(registry);\n  }\n  // Return hub that lives on a global object\n  return getHubFromCarrier(registry);\n}\n\n/**\n * Returns the active domain, if one exists\n * @deprecated No longer used; remove in v7\n * @returns The domain, or undefined if there is no active domain\n */\n// eslint-disable-next-line deprecation/deprecation\nexport function getActiveDomain(): DomainAsCarrier | undefined {\n  logger.warn('Function `getActiveDomain` is deprecated and will be removed in a future version.');\n\n  const sentry = getMainCarrier().__SENTRY__;\n\n  return sentry && sentry.extensions && sentry.extensions.domain && sentry.extensions.domain.active;\n}\n\n/**\n * Try to read the hub from an active domain, and fallback to the registry if one doesn't exist\n * @returns discovered hub\n */\nfunction getHubFromActiveDomain(registry: Carrier): Hub {\n  try {\n    const activeDomain = getMainCarrier().__SENTRY__?.extensions?.domain?.active;\n\n    // If there's no active domain, just return global hub\n    if (!activeDomain) {\n      return getHubFromCarrier(registry);\n    }\n\n    // If there's no hub on current domain, or it's an old API, assign a new one\n    if (!hasHubOnCarrier(activeDomain) || getHubFromCarrier(activeDomain).isOlderThan(API_VERSION)) {\n      const registryHubTopStack = getHubFromCarrier(registry).getStackTop();\n      setHubOnCarrier(activeDomain, new Hub(registryHubTopStack.client, Scope.clone(registryHubTopStack.scope)));\n    }\n\n    // Return hub that lives on a domain\n    return getHubFromCarrier(activeDomain);\n  } catch (_Oo) {\n    // Return hub that lives on a global object\n    return getHubFromCarrier(registry);\n  }\n}\n\n/**\n * This will tell whether a carrier has a hub on it or not\n * @param carrier object\n */\nfunction hasHubOnCarrier(carrier: Carrier): boolean {\n  return !!(carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub);\n}\n\n/**\n * This will create a new {@link Hub} and add to the passed object on\n * __SENTRY__.hub.\n * @param carrier object\n * @hidden\n */\nexport function getHubFromCarrier(carrier: Carrier): Hub {\n  if (carrier && carrier.__SENTRY__ && carrier.__SENTRY__.hub) return carrier.__SENTRY__.hub;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = new Hub();\n  return carrier.__SENTRY__.hub;\n}\n\n/**\n * This will set passed {@link Hub} on the passed object's __SENTRY__.hub attribute\n * @param carrier object\n * @param hub Hub\n * @returns A boolean indicating success or failure\n */\nexport function setHubOnCarrier(carrier: Carrier, hub: Hub): boolean {\n  if (!carrier) return false;\n  carrier.__SENTRY__ = carrier.__SENTRY__ || {};\n  carrier.__SENTRY__.hub = hub;\n  return true;\n}\n","/* eslint-disable max-lines */\nimport {\n  Breadcrumb,\n  CaptureContext,\n  Context,\n  Contexts,\n  Event,\n  EventHint,\n  EventProcessor,\n  Extra,\n  Extras,\n  Primitive,\n  Scope as ScopeInterface,\n  ScopeContext,\n  Severity,\n  Span,\n  Transaction,\n  User,\n} from '@sentry/types';\nimport { dateTimestampInSeconds, getGlobalObject, isPlainObject, isThenable, SyncPromise } from '@sentry/utils';\n\nimport { Session } from './session';\n\n/**\n * Holds additional event information. {@link Scope.applyToEvent} will be\n * called by the client before an event will be sent.\n */\nexport class Scope implements ScopeInterface {\n  /** Flag if notifiying is happening. */\n  protected _notifyingListeners: boolean = false;\n\n  /** Callback for client to receive scope changes. */\n  protected _scopeListeners: Array<(scope: Scope) => void> = [];\n\n  /** Callback list that will be called after {@link applyToEvent}. */\n  protected _eventProcessors: EventProcessor[] = [];\n\n  /** Array of breadcrumbs. */\n  protected _breadcrumbs: Breadcrumb[] = [];\n\n  /** User */\n  protected _user: User = {};\n\n  /** Tags */\n  protected _tags: { [key: string]: Primitive } = {};\n\n  /** Extra */\n  protected _extra: Extras = {};\n\n  /** Contexts */\n  protected _contexts: Contexts = {};\n\n  /** Fingerprint */\n  protected _fingerprint?: string[];\n\n  /** Severity */\n  protected _level?: Severity;\n\n  /** Transaction Name */\n  protected _transactionName?: string;\n\n  /** Span */\n  protected _span?: Span;\n\n  /** Session */\n  protected _session?: Session;\n\n  /**\n   * Inherit values from the parent scope.\n   * @param scope to clone.\n   */\n  public static clone(scope?: Scope): Scope {\n    const newScope = new Scope();\n    if (scope) {\n      newScope._breadcrumbs = [...scope._breadcrumbs];\n      newScope._tags = { ...scope._tags };\n      newScope._extra = { ...scope._extra };\n      newScope._contexts = { ...scope._contexts };\n      newScope._user = scope._user;\n      newScope._level = scope._level;\n      newScope._span = scope._span;\n      newScope._session = scope._session;\n      newScope._transactionName = scope._transactionName;\n      newScope._fingerprint = scope._fingerprint;\n      newScope._eventProcessors = [...scope._eventProcessors];\n    }\n    return newScope;\n  }\n\n  /**\n   * Add internal on change listener. Used for sub SDKs that need to store the scope.\n   * @hidden\n   */\n  public addScopeListener(callback: (scope: Scope) => void): void {\n    this._scopeListeners.push(callback);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addEventProcessor(callback: EventProcessor): this {\n    this._eventProcessors.push(callback);\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setUser(user: User | null): this {\n    this._user = user || {};\n    if (this._session) {\n      this._session.update({ user });\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getUser(): User | undefined {\n    return this._user;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTags(tags: { [key: string]: Primitive }): this {\n    this._tags = {\n      ...this._tags,\n      ...tags,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTag(key: string, value: Primitive): this {\n    this._tags = { ...this._tags, [key]: value };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtras(extras: Extras): this {\n    this._extra = {\n      ...this._extra,\n      ...extras,\n    };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setExtra(key: string, extra: Extra): this {\n    this._extra = { ...this._extra, [key]: extra };\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setFingerprint(fingerprint: string[]): this {\n    this._fingerprint = fingerprint;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setLevel(level: Severity): this {\n    this._level = level;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setTransactionName(name?: string): this {\n    this._transactionName = name;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Can be removed in major version.\n   * @deprecated in favor of {@link this.setTransactionName}\n   */\n  public setTransaction(name?: string): this {\n    return this.setTransactionName(name);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setContext(key: string, context: Context | null): this {\n    if (context === null) {\n      // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n      delete this._contexts[key];\n    } else {\n      this._contexts = { ...this._contexts, [key]: context };\n    }\n\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSpan(span?: Span): this {\n    this._span = span;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSpan(): Span | undefined {\n    return this._span;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getTransaction(): Transaction | undefined {\n    // often, this span will be a transaction, but it's not guaranteed to be\n    const span = this.getSpan() as undefined | (Span & { spanRecorder: { spans: Span[] } });\n\n    // try it the new way first\n    if (span?.transaction) {\n      return span?.transaction;\n    }\n\n    // fallback to the old way (known bug: this only finds transactions with sampled = true)\n    if (span?.spanRecorder?.spans[0]) {\n      return span.spanRecorder.spans[0] as Transaction;\n    }\n\n    // neither way found a transaction\n    return undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public setSession(session?: Session): this {\n    if (!session) {\n      delete this._session;\n    } else {\n      this._session = session;\n    }\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public getSession(): Session | undefined {\n    return this._session;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public update(captureContext?: CaptureContext): this {\n    if (!captureContext) {\n      return this;\n    }\n\n    if (typeof captureContext === 'function') {\n      const updatedScope = (captureContext as <T>(scope: T) => T)(this);\n      return updatedScope instanceof Scope ? updatedScope : this;\n    }\n\n    if (captureContext instanceof Scope) {\n      this._tags = { ...this._tags, ...captureContext._tags };\n      this._extra = { ...this._extra, ...captureContext._extra };\n      this._contexts = { ...this._contexts, ...captureContext._contexts };\n      if (captureContext._user && Object.keys(captureContext._user).length) {\n        this._user = captureContext._user;\n      }\n      if (captureContext._level) {\n        this._level = captureContext._level;\n      }\n      if (captureContext._fingerprint) {\n        this._fingerprint = captureContext._fingerprint;\n      }\n    } else if (isPlainObject(captureContext)) {\n      // eslint-disable-next-line no-param-reassign\n      captureContext = captureContext as ScopeContext;\n      this._tags = { ...this._tags, ...captureContext.tags };\n      this._extra = { ...this._extra, ...captureContext.extra };\n      this._contexts = { ...this._contexts, ...captureContext.contexts };\n      if (captureContext.user) {\n        this._user = captureContext.user;\n      }\n      if (captureContext.level) {\n        this._level = captureContext.level;\n      }\n      if (captureContext.fingerprint) {\n        this._fingerprint = captureContext.fingerprint;\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clear(): this {\n    this._breadcrumbs = [];\n    this._tags = {};\n    this._extra = {};\n    this._user = {};\n    this._contexts = {};\n    this._level = undefined;\n    this._transactionName = undefined;\n    this._fingerprint = undefined;\n    this._span = undefined;\n    this._session = undefined;\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public addBreadcrumb(breadcrumb: Breadcrumb, maxBreadcrumbs?: number): this {\n    const mergedBreadcrumb = {\n      timestamp: dateTimestampInSeconds(),\n      ...breadcrumb,\n    };\n\n    this._breadcrumbs =\n      maxBreadcrumbs !== undefined && maxBreadcrumbs >= 0\n        ? [...this._breadcrumbs, mergedBreadcrumb].slice(-maxBreadcrumbs)\n        : [...this._breadcrumbs, mergedBreadcrumb];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  public clearBreadcrumbs(): this {\n    this._breadcrumbs = [];\n    this._notifyScopeListeners();\n    return this;\n  }\n\n  /**\n   * Applies the current context and fingerprint to the event.\n   * Note that breadcrumbs will be added by the client.\n   * Also if the event has already breadcrumbs on it, we do not merge them.\n   * @param event Event\n   * @param hint May contain additional informartion about the original exception.\n   * @hidden\n   */\n  public applyToEvent(event: Event, hint?: EventHint): PromiseLike<Event | null> {\n    if (this._extra && Object.keys(this._extra).length) {\n      event.extra = { ...this._extra, ...event.extra };\n    }\n    if (this._tags && Object.keys(this._tags).length) {\n      event.tags = { ...this._tags, ...event.tags };\n    }\n    if (this._user && Object.keys(this._user).length) {\n      event.user = { ...this._user, ...event.user };\n    }\n    if (this._contexts && Object.keys(this._contexts).length) {\n      event.contexts = { ...this._contexts, ...event.contexts };\n    }\n    if (this._level) {\n      event.level = this._level;\n    }\n    if (this._transactionName) {\n      event.transaction = this._transactionName;\n    }\n    // We want to set the trace context for normal events only if there isn't already\n    // a trace context on the event. There is a product feature in place where we link\n    // errors with transaction and it relys on that.\n    if (this._span) {\n      event.contexts = { trace: this._span.getTraceContext(), ...event.contexts };\n      const transactionName = this._span.transaction?.name;\n      if (transactionName) {\n        event.tags = { transaction: transactionName, ...event.tags };\n      }\n    }\n\n    this._applyFingerprint(event);\n\n    event.breadcrumbs = [...(event.breadcrumbs || []), ...this._breadcrumbs];\n    event.breadcrumbs = event.breadcrumbs.length > 0 ? event.breadcrumbs : undefined;\n\n    return this._notifyEventProcessors([...getGlobalEventProcessors(), ...this._eventProcessors], event, hint);\n  }\n\n  /**\n   * This will be called after {@link applyToEvent} is finished.\n   */\n  protected _notifyEventProcessors(\n    processors: EventProcessor[],\n    event: Event | null,\n    hint?: EventHint,\n    index: number = 0,\n  ): PromiseLike<Event | null> {\n    return new SyncPromise<Event | null>((resolve, reject) => {\n      const processor = processors[index];\n      if (event === null || typeof processor !== 'function') {\n        resolve(event);\n      } else {\n        const result = processor({ ...event }, hint) as Event | null;\n        if (isThenable(result)) {\n          (result as PromiseLike<Event | null>)\n            .then(final => this._notifyEventProcessors(processors, final, hint, index + 1).then(resolve))\n            .then(null, reject);\n        } else {\n          this._notifyEventProcessors(processors, result, hint, index + 1)\n            .then(resolve)\n            .then(null, reject);\n        }\n      }\n    });\n  }\n\n  /**\n   * This will be called on every set call.\n   */\n  protected _notifyScopeListeners(): void {\n    // We need this check for this._notifyingListeners to be able to work on scope during updates\n    // If this check is not here we'll produce endless recursion when something is done with the scope\n    // during the callback.\n    if (!this._notifyingListeners) {\n      this._notifyingListeners = true;\n      this._scopeListeners.forEach(callback => {\n        callback(this);\n      });\n      this._notifyingListeners = false;\n    }\n  }\n\n  /**\n   * Applies fingerprint from the scope to the event if there's one,\n   * uses message if there's one instead or get rid of empty fingerprint\n   */\n  private _applyFingerprint(event: Event): void {\n    // Make sure it's an array first and we actually have something in place\n    event.fingerprint = event.fingerprint\n      ? Array.isArray(event.fingerprint)\n        ? event.fingerprint\n        : [event.fingerprint]\n      : [];\n\n    // If we have something on the scope, then merge it with event\n    if (this._fingerprint) {\n      event.fingerprint = event.fingerprint.concat(this._fingerprint);\n    }\n\n    // If we have no data at all, remove empty array default\n    if (event.fingerprint && !event.fingerprint.length) {\n      delete event.fingerprint;\n    }\n  }\n}\n\n/**\n * Retruns the global event processors.\n */\nfunction getGlobalEventProcessors(): EventProcessor[] {\n  /* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access  */\n  const global = getGlobalObject<any>();\n  global.__SENTRY__ = global.__SENTRY__ || {};\n  global.__SENTRY__.globalEventProcessors = global.__SENTRY__.globalEventProcessors || [];\n  return global.__SENTRY__.globalEventProcessors;\n  /* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n}\n\n/**\n * Add a EventProcessor to be kept globally.\n * @param callback EventProcessor to add\n */\nexport function addGlobalEventProcessor(callback: EventProcessor): void {\n  getGlobalEventProcessors().push(callback);\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { getCurrentHub, Hub, Scope } from '@sentry/hub';\nimport {\n  Breadcrumb,\n  CaptureContext,\n  CustomSamplingContext,\n  Event,\n  Extra,\n  Extras,\n  Primitive,\n  Severity,\n  Transaction,\n  TransactionContext,\n  User,\n} from '@sentry/types';\n\n/**\n * This calls a function on the current hub.\n * @param method function to call on hub.\n * @param args to pass to function.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction callOnHub<T>(method: string, ...args: any[]): T {\n  const hub = getCurrentHub();\n  if (hub && hub[method as keyof Hub]) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return (hub[method as keyof Hub] as any)(...args);\n  }\n  throw new Error(`No hub defined or ${method} was not found on the hub, please open a bug report.`);\n}\n\n/**\n * Captures an exception event and sends it to Sentry.\n *\n * @param exception An exception-like object.\n * @returns The generated eventId.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function captureException(exception: any, captureContext?: CaptureContext): string {\n  let syntheticException: Error;\n  try {\n    throw new Error('Sentry syntheticException');\n  } catch (exception) {\n    syntheticException = exception as Error;\n  }\n  return callOnHub('captureException', exception, {\n    captureContext,\n    originalException: exception,\n    syntheticException,\n  });\n}\n\n/**\n * Captures a message event and sends it to Sentry.\n *\n * @param message The message to send to Sentry.\n * @param level Define the level of the message.\n * @returns The generated eventId.\n */\nexport function captureMessage(message: string, captureContext?: CaptureContext | Severity): string {\n  let syntheticException: Error;\n  try {\n    throw new Error(message);\n  } catch (exception) {\n    syntheticException = exception as Error;\n  }\n\n  // This is necessary to provide explicit scopes upgrade, without changing the original\n  // arity of the `captureMessage(message, level)` method.\n  const level = typeof captureContext === 'string' ? captureContext : undefined;\n  const context = typeof captureContext !== 'string' ? { captureContext } : undefined;\n\n  return callOnHub('captureMessage', message, level, {\n    originalException: message,\n    syntheticException,\n    ...context,\n  });\n}\n\n/**\n * Captures a manually created event and sends it to Sentry.\n *\n * @param event The event to send to Sentry.\n * @returns The generated eventId.\n */\nexport function captureEvent(event: Event): string {\n  return callOnHub('captureEvent', event);\n}\n\n/**\n * Callback to set context information onto the scope.\n * @param callback Callback function that receives Scope.\n */\nexport function configureScope(callback: (scope: Scope) => void): void {\n  callOnHub<void>('configureScope', callback);\n}\n\n/**\n * Records a new breadcrumb which will be attached to future events.\n *\n * Breadcrumbs will be added to subsequent events to provide more context on\n * user's actions prior to an error or crash.\n *\n * @param breadcrumb The breadcrumb to record.\n */\nexport function addBreadcrumb(breadcrumb: Breadcrumb): void {\n  callOnHub<void>('addBreadcrumb', breadcrumb);\n}\n\n/**\n * Sets context data with the given name.\n * @param name of the context\n * @param context Any kind of data. This data will be normalized.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setContext(name: string, context: { [key: string]: any } | null): void {\n  callOnHub<void>('setContext', name, context);\n}\n\n/**\n * Set an object that will be merged sent as extra data with the event.\n * @param extras Extras object to merge into current context.\n */\nexport function setExtras(extras: Extras): void {\n  callOnHub<void>('setExtras', extras);\n}\n\n/**\n * Set an object that will be merged sent as tags data with the event.\n * @param tags Tags context object to merge into current context.\n */\nexport function setTags(tags: { [key: string]: Primitive }): void {\n  callOnHub<void>('setTags', tags);\n}\n\n/**\n * Set key:value that will be sent as extra data with the event.\n * @param key String of extra\n * @param extra Any kind of data. This data will be normalized.\n */\nexport function setExtra(key: string, extra: Extra): void {\n  callOnHub<void>('setExtra', key, extra);\n}\n\n/**\n * Set key:value that will be sent as tags data with the event.\n *\n * Can also be used to unset a tag, by passing `undefined`.\n *\n * @param key String key of tag\n * @param value Value of tag\n */\nexport function setTag(key: string, value: Primitive): void {\n  callOnHub<void>('setTag', key, value);\n}\n\n/**\n * Updates user context information for future events.\n *\n * @param user User context object to be set in the current context. Pass `null` to unset the user.\n */\nexport function setUser(user: User | null): void {\n  callOnHub<void>('setUser', user);\n}\n\n/**\n * Creates a new scope with and executes the given operation within.\n * The scope is automatically removed once the operation\n * finishes or throws.\n *\n * This is essentially a convenience function for:\n *\n *     pushScope();\n *     callback();\n *     popScope();\n *\n * @param callback that will be enclosed into push/popScope.\n */\nexport function withScope(callback: (scope: Scope) => void): void {\n  callOnHub<void>('withScope', callback);\n}\n\n/**\n * Calls a function on the latest client. Use this with caution, it's meant as\n * in \"internal\" helper so we don't need to expose every possible function in\n * the shim. It is not guaranteed that the client actually implements the\n * function.\n *\n * @param method The method to call on the client/client.\n * @param args Arguments to pass to the client/fontend.\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function _callOnClient(method: string, ...args: any[]): void {\n  callOnHub<void>('_invokeClient', method, ...args);\n}\n\n/**\n * Starts a new `Transaction` and returns it. This is the entry point to manual tracing instrumentation.\n *\n * A tree structure can be built by adding child spans to the transaction, and child spans to other spans. To start a\n * new child span within the transaction or any span, call the respective `.startChild()` method.\n *\n * Every child span must be finished before the transaction is finished, otherwise the unfinished spans are discarded.\n *\n * The transaction must be finished with a call to its `.finish()` method, at which point the transaction with all its\n * finished child spans will be sent to Sentry.\n *\n * @param context Properties of the new `Transaction`.\n * @param customSamplingContext Information given to the transaction sampling function (along with context-dependent\n * default values). See {@link Options.tracesSampler}.\n *\n * @returns The transaction which was just started\n */\nexport function startTransaction(\n  context: TransactionContext,\n  customSamplingContext?: CustomSamplingContext,\n): Transaction {\n  return callOnHub('startTransaction', { ...context }, customSamplingContext);\n}\n","import { User } from './user';\n\n/**\n * @inheritdoc\n */\nexport interface Session extends SessionContext {\n  /** JSDoc */\n  update(context?: SessionContext): void;\n\n  /** JSDoc */\n  close(status?: SessionStatus): void;\n\n  /** JSDoc */\n  toJSON(): {\n    init: boolean;\n    sid: string;\n    did?: string;\n    timestamp: string;\n    started: string;\n    duration: number;\n    status: SessionStatus;\n    errors: number;\n    attrs?: {\n      release?: string;\n      environment?: string;\n      user_agent?: string;\n      ip_address?: string;\n    };\n  };\n}\n\n/**\n * Session Context\n */\nexport interface SessionContext {\n  sid?: string;\n  did?: string;\n  init?: boolean;\n  timestamp?: number;\n  started?: number;\n  duration?: number;\n  status?: SessionStatus;\n  release?: string;\n  environment?: string;\n  userAgent?: string;\n  ipAddress?: string;\n  errors?: number;\n  user?: User | null;\n}\n\n/**\n * Session Status\n */\nexport enum SessionStatus {\n  /** JSDoc */\n  Ok = 'ok',\n  /** JSDoc */\n  Exited = 'exited',\n  /** JSDoc */\n  Crashed = 'crashed',\n  /** JSDoc */\n  Abnormal = 'abnormal',\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n\nimport { Primitive } from '@sentry/types';\n/**\n * Checks whether given value's type is one of a few Error or Error-like\n * {@link isError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isError(wat: any): boolean {\n  switch (Object.prototype.toString.call(wat)) {\n    case '[object Error]':\n      return true;\n    case '[object Exception]':\n      return true;\n    case '[object DOMException]':\n      return true;\n    default:\n      return isInstanceOf(wat, Error);\n  }\n}\n\n/**\n * Checks whether given value's type is ErrorEvent\n * {@link isErrorEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isErrorEvent(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object ErrorEvent]';\n}\n\n/**\n * Checks whether given value's type is DOMError\n * {@link isDOMError}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMError(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMError]';\n}\n\n/**\n * Checks whether given value's type is DOMException\n * {@link isDOMException}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isDOMException(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object DOMException]';\n}\n\n/**\n * Checks whether given value's type is a string\n * {@link isString}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isString(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object String]';\n}\n\n/**\n * Checks whether given value's is a primitive (undefined, null, number, boolean, string, bigint, symbol)\n * {@link isPrimitive}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPrimitive(wat: any): wat is Primitive {\n  return wat === null || (typeof wat !== 'object' && typeof wat !== 'function');\n}\n\n/**\n * Checks whether given value's type is an object literal\n * {@link isPlainObject}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isPlainObject(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object Object]';\n}\n\n/**\n * Checks whether given value's type is an Event instance\n * {@link isEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isEvent(wat: any): boolean {\n  return typeof Event !== 'undefined' && isInstanceOf(wat, Event);\n}\n\n/**\n * Checks whether given value's type is an Element instance\n * {@link isElement}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isElement(wat: any): boolean {\n  return typeof Element !== 'undefined' && isInstanceOf(wat, Element);\n}\n\n/**\n * Checks whether given value's type is an regexp\n * {@link isRegExp}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isRegExp(wat: any): boolean {\n  return Object.prototype.toString.call(wat) === '[object RegExp]';\n}\n\n/**\n * Checks whether given value has a then function.\n * @param wat A value to be checked.\n */\nexport function isThenable(wat: any): boolean {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return Boolean(wat && wat.then && typeof wat.then === 'function');\n}\n\n/**\n * Checks whether given value's type is a SyntheticEvent\n * {@link isSyntheticEvent}.\n *\n * @param wat A value to be checked.\n * @returns A boolean representing the result.\n */\nexport function isSyntheticEvent(wat: any): boolean {\n  return isPlainObject(wat) && 'nativeEvent' in wat && 'preventDefault' in wat && 'stopPropagation' in wat;\n}\n/**\n * Checks whether given value's type is an instance of provided constructor.\n * {@link isInstanceOf}.\n *\n * @param wat A value to be checked.\n * @param base A constructor to be used in a check.\n * @returns A boolean representing the result.\n */\nexport function isInstanceOf(wat: any, base: any): boolean {\n  try {\n    return wat instanceof base;\n  } catch (_e) {\n    return false;\n  }\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { consoleSandbox, getGlobalObject } from './misc';\n\n// TODO: Implement different loggers for different environments\nconst global = getGlobalObject<Window | NodeJS.Global>();\n\n/** Prefix for logging strings */\nconst PREFIX = 'Sentry Logger ';\n\n/** JSDoc */\nclass Logger {\n  /** JSDoc */\n  private _enabled: boolean;\n\n  /** JSDoc */\n  public constructor() {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public disable(): void {\n    this._enabled = false;\n  }\n\n  /** JSDoc */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  /** JSDoc */\n  public log(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.log(`${PREFIX}[Log]: ${args.join(' ')}`);\n    });\n  }\n\n  /** JSDoc */\n  public warn(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.warn(`${PREFIX}[Warn]: ${args.join(' ')}`);\n    });\n  }\n\n  /** JSDoc */\n  public error(...args: any[]): void {\n    if (!this._enabled) {\n      return;\n    }\n    consoleSandbox(() => {\n      global.console.error(`${PREFIX}[Error]: ${args.join(' ')}`);\n    });\n  }\n}\n\n// Ensure we only have a single logger instance, even if multiple versions of @sentry/utils are being used\nglobal.__SENTRY__ = global.__SENTRY__ || {};\nconst logger = (global.__SENTRY__.logger as Logger) || (global.__SENTRY__.logger = new Logger());\n\nexport { logger };\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Event, Integration, StackFrame, WrappedFunction } from '@sentry/types';\n\nimport { isNodeEnv } from './node';\nimport { snipLine } from './string';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (isNodeEnv()\n    ? global\n    : typeof window !== 'undefined'\n    ? window\n    : typeof self !== 'undefined'\n    ? self\n    : fallbackGlobalObject) as T & SentryGlobal;\n}\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    const arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    // eslint-disable-next-line no-bitwise\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // eslint-disable-next-line no-bitwise\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    const pad = (num: number): string => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    // eslint-disable-next-line no-bitwise\n    const r = (Math.random() * 16) | 0;\n    // eslint-disable-next-line no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(\n  url: string,\n): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  if (event.message) {\n    return event.message;\n  }\n  if (event.exception && event.exception.values && event.exception.values[0]) {\n    const exception = event.exception.values[0];\n\n    if (exception.type && exception.value) {\n      return `${exception.type}: ${exception.value}`;\n    }\n    return exception.type || exception.value || event.event_id || '<unknown>';\n  }\n  return event.event_id || '<unknown>';\n}\n\n/** JSDoc */\ninterface ExtensibleConsole extends Console {\n  [key: string]: any;\n}\n\n/** JSDoc */\nexport function consoleSandbox(callback: () => any): any {\n  const global = getGlobalObject<Window>();\n  const levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const originalConsole = (global as any).console as ExtensibleConsole;\n  const wrappedLevels: { [key: string]: any } = {};\n\n  // Restore all wrapped console methods\n  levels.forEach(level => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (level in (global as any).console && (originalConsole[level] as WrappedFunction).__sentry_original__) {\n      wrappedLevels[level] = originalConsole[level] as WrappedFunction;\n      originalConsole[level] = (originalConsole[level] as WrappedFunction).__sentry_original__;\n    }\n  });\n\n  // Perform callback manipulations\n  const result = callback();\n\n  // Revert restoration to wrapped state\n  Object.keys(wrappedLevels).forEach(level => {\n    originalConsole[level] = wrappedLevels[level];\n  });\n\n  return result;\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  event.exception = event.exception || {};\n  event.exception.values = event.exception.values || [];\n  event.exception.values[0] = event.exception.values[0] || {};\n  event.exception.values[0].value = event.exception.values[0].value || value || '';\n  event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\nexport function addExceptionMechanism(\n  event: Event,\n  mechanism: {\n    [key: string]: any;\n  } = {},\n): void {\n  // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n  try {\n    // @ts-ignore Type 'Mechanism | {}' is not assignable to type 'Mechanism | undefined'\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values![0].mechanism = event.exception!.values![0].mechanism || {};\n    Object.keys(mechanism).forEach(key => {\n      // @ts-ignore Mechanism has no index signature\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception!.values![0].mechanism[key] = mechanism[key];\n    });\n  } catch (_oO) {\n    // no-empty\n  }\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\nconst defaultRetryAfter = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\nexport function parseRetryAfterHeader(now: number, header?: string | number | null): number {\n  if (!header) {\n    return defaultRetryAfter;\n  }\n\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return defaultRetryAfter;\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  const lineno = frame.lineno || 0;\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n","/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { ExtendedError, WrappedFunction } from '@sentry/types';\n\nimport { htmlTreeAsString } from './browser';\nimport { isElement, isError, isEvent, isInstanceOf, isPlainObject, isPrimitive, isSyntheticEvent } from './is';\nimport { Memo } from './memo';\nimport { getFunctionName } from './stacktrace';\nimport { truncate } from './string';\n\n/**\n * Wrap a given object method with a higher-order function\n *\n * @param source An object that contains a method to be wrapped.\n * @param name A name of method to be wrapped.\n * @param replacementFactory A function that should be used to wrap a given method, returning the wrapped method which\n * will be substituted in for `source[name]`.\n * @returns void\n */\nexport function fill(source: { [key: string]: any }, name: string, replacementFactory: (...args: any[]) => any): void {\n  if (!(name in source)) {\n    return;\n  }\n\n  const original = source[name] as () => any;\n  const wrapped = replacementFactory(original) as WrappedFunction;\n\n  // Make sure it's a function first, as we need to attach an empty prototype for `defineProperties` to work\n  // otherwise it'll throw \"TypeError: Object.defineProperties called on non-object\"\n  if (typeof wrapped === 'function') {\n    try {\n      wrapped.prototype = wrapped.prototype || {};\n      Object.defineProperties(wrapped, {\n        __sentry_original__: {\n          enumerable: false,\n          value: original,\n        },\n      });\n    } catch (_Oo) {\n      // This can throw if multiple fill happens on a global object like XMLHttpRequest\n      // Fixes https://github.com/getsentry/sentry-javascript/issues/2043\n    }\n  }\n\n  source[name] = wrapped;\n}\n\n/**\n * Encodes given object into url-friendly format\n *\n * @param object An object that contains serializable values\n * @returns string Encoded\n */\nexport function urlEncode(object: { [key: string]: any }): string {\n  return Object.keys(object)\n    .map(key => `${encodeURIComponent(key)}=${encodeURIComponent(object[key])}`)\n    .join('&');\n}\n\n/**\n * Transforms any object into an object literal with all its attributes\n * attached to it.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n */\nfunction getWalkSource(\n  value: any,\n): {\n  [key: string]: any;\n} {\n  if (isError(value)) {\n    const error = value as ExtendedError;\n    const err: {\n      [key: string]: any;\n      stack: string | undefined;\n      message: string;\n      name: string;\n    } = {\n      message: error.message,\n      name: error.name,\n      stack: error.stack,\n    };\n\n    for (const i in error) {\n      if (Object.prototype.hasOwnProperty.call(error, i)) {\n        err[i] = error[i];\n      }\n    }\n\n    return err;\n  }\n\n  if (isEvent(value)) {\n    /**\n     * Event-like interface that's usable in browser and node\n     */\n    interface SimpleEvent {\n      [key: string]: unknown;\n      type: string;\n      target?: unknown;\n      currentTarget?: unknown;\n    }\n\n    const event = value as SimpleEvent;\n\n    const source: {\n      [key: string]: any;\n    } = {};\n\n    source.type = event.type;\n\n    // Accessing event.target can throw (see getsentry/raven-js#838, #768)\n    try {\n      source.target = isElement(event.target)\n        ? htmlTreeAsString(event.target)\n        : Object.prototype.toString.call(event.target);\n    } catch (_oO) {\n      source.target = '<unknown>';\n    }\n\n    try {\n      source.currentTarget = isElement(event.currentTarget)\n        ? htmlTreeAsString(event.currentTarget)\n        : Object.prototype.toString.call(event.currentTarget);\n    } catch (_oO) {\n      source.currentTarget = '<unknown>';\n    }\n\n    if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n      source.detail = event.detail;\n    }\n\n    for (const i in event) {\n      if (Object.prototype.hasOwnProperty.call(event, i)) {\n        source[i] = event;\n      }\n    }\n\n    return source;\n  }\n\n  return value as {\n    [key: string]: any;\n  };\n}\n\n/** Calculates bytes size of input string */\nfunction utf8Length(value: string): number {\n  // eslint-disable-next-line no-bitwise\n  return ~-encodeURI(value).split(/%..|./).length;\n}\n\n/** Calculates bytes size of input object */\nfunction jsonSize(value: any): number {\n  return utf8Length(JSON.stringify(value));\n}\n\n/** JSDoc */\nexport function normalizeToSize<T>(\n  object: { [key: string]: any },\n  // Default Node.js REPL depth\n  depth: number = 3,\n  // 100kB, as 200kB is max payload size, so half sounds reasonable\n  maxSize: number = 100 * 1024,\n): T {\n  const serialized = normalize(object, depth);\n\n  if (jsonSize(serialized) > maxSize) {\n    return normalizeToSize(object, depth - 1, maxSize);\n  }\n\n  return serialized as T;\n}\n\n/**\n * Transform any non-primitive, BigInt, or Symbol-type value into a string. Acts as a no-op on strings, numbers,\n * booleans, null, and undefined.\n *\n * @param value The value to stringify\n * @returns For non-primitive, BigInt, and Symbol-type values, a string denoting the value's type, type and value, or\n *  type and `description` property, respectively. For non-BigInt, non-Symbol primitives, returns the original value,\n *  unchanged.\n */\nfunction serializeValue(value: any): any {\n  const type = Object.prototype.toString.call(value);\n\n  // Node.js REPL notation\n  if (typeof value === 'string') {\n    return value;\n  }\n  if (type === '[object Object]') {\n    return '[Object]';\n  }\n  if (type === '[object Array]') {\n    return '[Array]';\n  }\n\n  const normalized = normalizeValue(value);\n  return isPrimitive(normalized) ? normalized : type;\n}\n\n/**\n * normalizeValue()\n *\n * Takes unserializable input and make it serializable friendly\n *\n * - translates undefined/NaN values to \"[undefined]\"/\"[NaN]\" respectively,\n * - serializes Error objects\n * - filter global objects\n */\nfunction normalizeValue<T>(value: T, key?: any): T | string {\n  if (key === 'domain' && value && typeof value === 'object' && ((value as unknown) as { _events: any })._events) {\n    return '[Domain]';\n  }\n\n  if (key === 'domainEmitter') {\n    return '[DomainEmitter]';\n  }\n\n  if (typeof (global as any) !== 'undefined' && (value as unknown) === global) {\n    return '[Global]';\n  }\n\n  if (typeof (window as any) !== 'undefined' && (value as unknown) === window) {\n    return '[Window]';\n  }\n\n  if (typeof (document as any) !== 'undefined' && (value as unknown) === document) {\n    return '[Document]';\n  }\n\n  // React's SyntheticEvent thingy\n  if (isSyntheticEvent(value)) {\n    return '[SyntheticEvent]';\n  }\n\n  if (typeof value === 'number' && value !== value) {\n    return '[NaN]';\n  }\n\n  if (value === void 0) {\n    return '[undefined]';\n  }\n\n  if (typeof value === 'function') {\n    return `[Function: ${getFunctionName(value)}]`;\n  }\n\n  // symbols and bigints are considered primitives by TS, but aren't natively JSON-serilaizable\n\n  if (typeof value === 'symbol') {\n    return `[${String(value)}]`;\n  }\n\n  if (typeof value === 'bigint') {\n    return `[BigInt: ${String(value)}]`;\n  }\n\n  return value;\n}\n\n/**\n * Walks an object to perform a normalization on it\n *\n * @param key of object that's walked in current iteration\n * @param value object to be walked\n * @param depth Optional number indicating how deep should walking be performed\n * @param memo Optional Memo class handling decycling\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function walk(key: string, value: any, depth: number = +Infinity, memo: Memo = new Memo()): any {\n  // If we reach the maximum depth, serialize whatever has left\n  if (depth === 0) {\n    return serializeValue(value);\n  }\n\n  /* eslint-disable @typescript-eslint/no-unsafe-member-access */\n  // If value implements `toJSON` method, call it and return early\n  if (value !== null && value !== undefined && typeof value.toJSON === 'function') {\n    return value.toJSON();\n  }\n  /* eslint-enable @typescript-eslint/no-unsafe-member-access */\n\n  // If normalized value is a primitive, there are no branches left to walk, so we can just bail out, as theres no point in going down that branch any further\n  const normalized = normalizeValue(value, key);\n  if (isPrimitive(normalized)) {\n    return normalized;\n  }\n\n  // Create source that we will use for next itterations, either objectified error object (Error type with extracted keys:value pairs) or the input itself\n  const source = getWalkSource(value);\n\n  // Create an accumulator that will act as a parent for all future itterations of that branch\n  const acc = Array.isArray(value) ? [] : {};\n\n  // If we already walked that branch, bail out, as it's circular reference\n  if (memo.memoize(value)) {\n    return '[Circular ~]';\n  }\n\n  // Walk all keys of the source\n  for (const innerKey in source) {\n    // Avoid iterating over fields in the prototype if they've somehow been exposed to enumeration.\n    if (!Object.prototype.hasOwnProperty.call(source, innerKey)) {\n      continue;\n    }\n    // Recursively walk through all the child nodes\n    (acc as { [key: string]: any })[innerKey] = walk(innerKey, source[innerKey], depth - 1, memo);\n  }\n\n  // Once walked through all the branches, remove the parent from memo storage\n  memo.unmemoize(value);\n\n  // Return accumulated values\n  return acc;\n}\n\n/**\n * normalize()\n *\n * - Creates a copy to prevent original input mutation\n * - Skip non-enumerablers\n * - Calls `toJSON` if implemented\n * - Removes circular references\n * - Translates non-serializeable values (undefined/NaN/Functions) to serializable format\n * - Translates known global objects/Classes to a string representations\n * - Takes care of Error objects serialization\n * - Optionally limit depth of final output\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function normalize(input: any, depth?: number): any {\n  try {\n    return JSON.parse(JSON.stringify(input, (key: string, value: any) => walk(key, value, depth)));\n  } catch (_oO) {\n    return '**non-serializable**';\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function extractExceptionKeysForMessage(exception: any, maxLength: number = 40): string {\n  const keys = Object.keys(getWalkSource(exception));\n  keys.sort();\n\n  if (!keys.length) {\n    return '[object has no keys]';\n  }\n\n  if (keys[0].length >= maxLength) {\n    return truncate(keys[0], maxLength);\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ');\n    if (serialized.length > maxLength) {\n      continue;\n    }\n    if (includedKeys === keys.length) {\n      return serialized;\n    }\n    return truncate(serialized, maxLength);\n  }\n\n  return '';\n}\n\n/**\n * Given any object, return the new object with removed keys that value was `undefined`.\n * Works recursively on objects and arrays.\n */\nexport function dropUndefinedKeys<T>(val: T): T {\n  if (isPlainObject(val)) {\n    const obj = val as { [key: string]: any };\n    const rv: { [key: string]: any } = {};\n    for (const key of Object.keys(obj)) {\n      if (typeof obj[key] !== 'undefined') {\n        rv[key] = dropUndefinedKeys(obj[key]);\n      }\n    }\n    return rv as T;\n  }\n\n  if (Array.isArray(val)) {\n    return (val as any[]).map(dropUndefinedKeys) as any;\n  }\n\n  return val;\n}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/* eslint-disable @typescript-eslint/typedef */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { isThenable } from './is';\n\n/** SyncPromise internal states */\nenum States {\n  /** Pending */\n  PENDING = 'PENDING',\n  /** Resolved / OK */\n  RESOLVED = 'RESOLVED',\n  /** Rejected / Error */\n  REJECTED = 'REJECTED',\n}\n\n/**\n * Thenable class that behaves like a Promise and follows it's interface\n * but is not async internally\n */\nclass SyncPromise<T> implements PromiseLike<T> {\n  private _state: States = States.PENDING;\n  private _handlers: Array<{\n    done: boolean;\n    onfulfilled?: ((value: T) => T | PromiseLike<T>) | null;\n    onrejected?: ((reason: any) => any) | null;\n  }> = [];\n  private _value: any;\n\n  public constructor(\n    executor: (resolve: (value?: T | PromiseLike<T> | null) => void, reject: (reason?: any) => void) => void,\n  ) {\n    try {\n      executor(this._resolve, this._reject);\n    } catch (e) {\n      this._reject(e);\n    }\n  }\n\n  /** JSDoc */\n  public static resolve<T>(value: T | PromiseLike<T>): PromiseLike<T> {\n    return new SyncPromise(resolve => {\n      resolve(value);\n    });\n  }\n\n  /** JSDoc */\n  public static reject<T = never>(reason?: any): PromiseLike<T> {\n    return new SyncPromise((_, reject) => {\n      reject(reason);\n    });\n  }\n\n  /** JSDoc */\n  public static all<U = any>(collection: Array<U | PromiseLike<U>>): PromiseLike<U[]> {\n    return new SyncPromise<U[]>((resolve, reject) => {\n      if (!Array.isArray(collection)) {\n        reject(new TypeError(`Promise.all requires an array as input.`));\n        return;\n      }\n\n      if (collection.length === 0) {\n        resolve([]);\n        return;\n      }\n\n      let counter = collection.length;\n      const resolvedCollection: U[] = [];\n\n      collection.forEach((item, index) => {\n        SyncPromise.resolve(item)\n          .then(value => {\n            resolvedCollection[index] = value;\n            counter -= 1;\n\n            if (counter !== 0) {\n              return;\n            }\n            resolve(resolvedCollection);\n          })\n          .then(null, reject);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public then<TResult1 = T, TResult2 = never>(\n    onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null,\n  ): PromiseLike<TResult1 | TResult2> {\n    return new SyncPromise((resolve, reject) => {\n      this._attachHandler({\n        done: false,\n        onfulfilled: result => {\n          if (!onfulfilled) {\n            // TODO: ¯\\_(ツ)_/¯\n            // TODO: FIXME\n            resolve(result as any);\n            return;\n          }\n          try {\n            resolve(onfulfilled(result));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n        onrejected: reason => {\n          if (!onrejected) {\n            reject(reason);\n            return;\n          }\n          try {\n            resolve(onrejected(reason));\n            return;\n          } catch (e) {\n            reject(e);\n            return;\n          }\n        },\n      });\n    });\n  }\n\n  /** JSDoc */\n  public catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null,\n  ): PromiseLike<T | TResult> {\n    return this.then(val => val, onrejected);\n  }\n\n  /** JSDoc */\n  public finally<TResult>(onfinally?: (() => void) | null): PromiseLike<TResult> {\n    return new SyncPromise<TResult>((resolve, reject) => {\n      let val: TResult | any;\n      let isRejected: boolean;\n\n      return this.then(\n        value => {\n          isRejected = false;\n          val = value;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n        reason => {\n          isRejected = true;\n          val = reason;\n          if (onfinally) {\n            onfinally();\n          }\n        },\n      ).then(() => {\n        if (isRejected) {\n          reject(val);\n          return;\n        }\n\n        resolve((val as unknown) as any);\n      });\n    });\n  }\n\n  /** JSDoc */\n  public toString(): string {\n    return '[object SyncPromise]';\n  }\n\n  /** JSDoc */\n  private readonly _resolve = (value?: T | PromiseLike<T> | null) => {\n    this._setResult(States.RESOLVED, value);\n  };\n\n  /** JSDoc */\n  private readonly _reject = (reason?: any) => {\n    this._setResult(States.REJECTED, reason);\n  };\n\n  /** JSDoc */\n  private readonly _setResult = (state: States, value?: T | PromiseLike<T> | any) => {\n    if (this._state !== States.PENDING) {\n      return;\n    }\n\n    if (isThenable(value)) {\n      (value as PromiseLike<T>).then(this._resolve, this._reject);\n      return;\n    }\n\n    this._state = state;\n    this._value = value;\n\n    this._executeHandlers();\n  };\n\n  // TODO: FIXME\n  /** JSDoc */\n  private readonly _attachHandler = (handler: {\n    /** JSDoc */\n    done: boolean;\n    /** JSDoc */\n    onfulfilled?(value: T): any;\n    /** JSDoc */\n    onrejected?(reason: any): any;\n  }) => {\n    this._handlers = this._handlers.concat(handler);\n    this._executeHandlers();\n  };\n\n  /** JSDoc */\n  private readonly _executeHandlers = () => {\n    if (this._state === States.PENDING) {\n      return;\n    }\n\n    const cachedHandlers = this._handlers.slice();\n    this._handlers = [];\n\n    cachedHandlers.forEach(handler => {\n      if (handler.done) {\n        return;\n      }\n\n      if (this._state === States.RESOLVED) {\n        if (handler.onfulfilled) {\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          handler.onfulfilled((this._value as unknown) as any);\n        }\n      }\n\n      if (this._state === States.REJECTED) {\n        if (handler.onrejected) {\n          handler.onrejected(this._value);\n        }\n      }\n\n      handler.done = true;\n    });\n  };\n}\n\nexport { SyncPromise };\n","import { getGlobalObject } from './misc';\nimport { dynamicRequire, isNodeEnv } from './node';\n\n/**\n * An object that can return the current timestamp in seconds since the UNIX epoch.\n */\ninterface TimestampSource {\n  nowSeconds(): number;\n}\n\n/**\n * A TimestampSource implementation for environments that do not support the Performance Web API natively.\n *\n * Note that this TimestampSource does not use a monotonic clock. A call to `nowSeconds` may return a timestamp earlier\n * than a previously returned value. We do not try to emulate a monotonic behavior in order to facilitate debugging. It\n * is more obvious to explain \"why does my span have negative duration\" than \"why my spans have zero duration\".\n */\nconst dateTimestampSource: TimestampSource = {\n  nowSeconds: () => Date.now() / 1000,\n};\n\n/**\n * A partial definition of the [Performance Web API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Performance}\n * for accessing a high resolution monotonic clock.\n */\ninterface Performance {\n  /**\n   * The millisecond timestamp at which measurement began, measured in Unix time.\n   */\n  timeOrigin: number;\n  /**\n   * Returns the current millisecond timestamp, where 0 represents the start of measurement.\n   */\n  now(): number;\n}\n\n/**\n * Returns a wrapper around the native Performance API browser implementation, or undefined for browsers that do not\n * support the API.\n *\n * Wrapping the native API works around differences in behavior from different browsers.\n */\nfunction getBrowserPerformance(): Performance | undefined {\n  const { performance } = getGlobalObject<Window>();\n  if (!performance || !performance.now) {\n    return undefined;\n  }\n\n  // Replace performance.timeOrigin with our own timeOrigin based on Date.now().\n  //\n  // This is a partial workaround for browsers reporting performance.timeOrigin such that performance.timeOrigin +\n  // performance.now() gives a date arbitrarily in the past.\n  //\n  // Additionally, computing timeOrigin in this way fills the gap for browsers where performance.timeOrigin is\n  // undefined.\n  //\n  // The assumption that performance.timeOrigin + performance.now() ~= Date.now() is flawed, but we depend on it to\n  // interact with data coming out of performance entries.\n  //\n  // Note that despite recommendations against it in the spec, browsers implement the Performance API with a clock that\n  // might stop when the computer is asleep (and perhaps under other circumstances). Such behavior causes\n  // performance.timeOrigin + performance.now() to have an arbitrary skew over Date.now(). In laptop computers, we have\n  // observed skews that can be as long as days, weeks or months.\n  //\n  // See https://github.com/getsentry/sentry-javascript/issues/2590.\n  //\n  // BUG: despite our best intentions, this workaround has its limitations. It mostly addresses timings of pageload\n  // transactions, but ignores the skew built up over time that can aversely affect timestamps of navigation\n  // transactions of long-lived web pages.\n  const timeOrigin = Date.now() - performance.now();\n\n  return {\n    now: () => performance.now(),\n    timeOrigin,\n  };\n}\n\n/**\n * Returns the native Performance API implementation from Node.js. Returns undefined in old Node.js versions that don't\n * implement the API.\n */\nfunction getNodePerformance(): Performance | undefined {\n  try {\n    const perfHooks = dynamicRequire(module, 'perf_hooks') as { performance: Performance };\n    return perfHooks.performance;\n  } catch (_) {\n    return undefined;\n  }\n}\n\n/**\n * The Performance API implementation for the current platform, if available.\n */\nconst platformPerformance: Performance | undefined = isNodeEnv() ? getNodePerformance() : getBrowserPerformance();\n\nconst timestampSource: TimestampSource =\n  platformPerformance === undefined\n    ? dateTimestampSource\n    : {\n        nowSeconds: () => (platformPerformance.timeOrigin + platformPerformance.now()) / 1000,\n      };\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using the Date API.\n */\nexport const dateTimestampInSeconds = dateTimestampSource.nowSeconds.bind(dateTimestampSource);\n\n/**\n * Returns a timestamp in seconds since the UNIX epoch using either the Performance or Date APIs, depending on the\n * availability of the Performance API.\n *\n * See `usingPerformanceAPI` to test whether the Performance API is used.\n *\n * BUG: Note that because of how browsers implement the Performance API, the clock might stop when the computer is\n * asleep. This creates a skew between `dateTimestampInSeconds` and `timestampInSeconds`. The\n * skew can grow to arbitrary amounts like days, weeks or months.\n * See https://github.com/getsentry/sentry-javascript/issues/2590.\n */\nexport const timestampInSeconds = timestampSource.nowSeconds.bind(timestampSource);\n\n// Re-exported with an old name for backwards-compatibility.\nexport const timestampWithMs = timestampInSeconds;\n\n/**\n * A boolean that is true when timestampInSeconds uses the Performance API to produce monotonic timestamps.\n */\nexport const usingPerformanceAPI = platformPerformance !== undefined;\n\n/**\n * The number of milliseconds since the UNIX epoch. This value is only usable in a browser, and only when the\n * performance API is available.\n */\nexport const browserPerformanceTimeOrigin = ((): number | undefined => {\n  const { performance } = getGlobalObject<Window>();\n  if (!performance) {\n    return undefined;\n  }\n  if (performance.timeOrigin) {\n    return performance.timeOrigin;\n  }\n  // While performance.timing.navigationStart is deprecated in favor of performance.timeOrigin, performance.timeOrigin\n  // is not as widely supported. Namely, performance.timeOrigin is undefined in Safari as of writing.\n  // Also as of writing, performance.timing is not available in Web Workers in mainstream browsers, so it is not always\n  // a valid fallback. In the absence of an initial time provided by the browser, fallback to the current time from the\n  // Date API.\n  // eslint-disable-next-line deprecation/deprecation\n  return (performance.timing && performance.timing.navigationStart) || Date.now();\n})();\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*!\n * JSHint, by JSHint Community.\n *\n * Licensed under the MIT license.\n *\n * JSHint is a derivative work of JSLint:\n *\n *   Copyright (c) 2002 Douglas Crockford  (www.JSLint.com)\n *\n *   Permission is hereby granted, free of charge, to any person obtaining\n *   a copy of this software and associated documentation files (the \"Software\"),\n *   to deal in the Software without restriction, including without limitation\n *   the rights to use, copy, modify, merge, publish, distribute, sublicense,\n *   and/or sell copies of the Software, and to permit persons to whom\n *   the Software is furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included\n *   in all copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n *   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n *   DEALINGS IN THE SOFTWARE.\n *\n */\n\n/*jshint quotmark:double */\n/*exported console */\n\nvar _            = require(\"lodash\");\nvar events       = require(\"events\");\nvar vars         = require(\"./vars.js\");\nvar messages     = require(\"./messages.js\");\nvar Lexer        = require(\"./lex.js\").Lexer;\nvar reg          = require(\"./reg.js\");\nvar state        = require(\"./state.js\").state;\nvar style        = require(\"./style.js\");\nvar options      = require(\"./options.js\");\nvar scopeManager = require(\"./scope-manager.js\");\nvar prodParams   = require(\"./prod-params.js\");\n\n// We need this module here because environments such as IE and Rhino\n// don't necessarilly expose the 'console' API and browserify uses\n// it to log things. It's a sad state of affair, really.\nvar console = require(\"console-browserify\");\n\n// We build the application inside a function so that we produce only a singleton\n// variable. That function will be invoked immediately, and its return value is\n// the JSHINT function itself.\n\nvar JSHINT = (function() {\n  \"use strict\";\n\n  var api, // Extension API\n\n    // These are operators that should not be used with the ! operator.\n    bang = {\n      \"<\"  : true,\n      \"<=\" : true,\n      \"==\" : true,\n      \"===\": true,\n      \"!==\": true,\n      \"!=\" : true,\n      \">\"  : true,\n      \">=\" : true,\n      \"+\"  : true,\n      \"-\"  : true,\n      \"*\"  : true,\n      \"/\"  : true,\n      \"%\"  : true\n    },\n\n    declared, // Globals that were declared using /*global ... */ syntax.\n\n    functions, // All of the functions\n\n    inblock,\n    indent,\n    lookahead,\n    lex,\n    member,\n    membersOnly,\n    predefined,    // Global variables defined by option\n\n    extraModules = [],\n    emitter = new events.EventEmitter();\n\n  function checkOption(name, isStable, t) {\n    var type, validNames;\n\n    if (isStable) {\n      type = \"\";\n      validNames = options.validNames;\n    } else {\n      type = \"unstable \";\n      validNames = options.unstableNames;\n    }\n\n    name = name.trim();\n\n    if (/^[+-]W\\d{3}$/g.test(name)) {\n      return true;\n    }\n\n    if (validNames.indexOf(name) === -1) {\n      if (t.type !== \"jslint\" && !_.has(options.removed, name)) {\n        error(\"E001\", t, type, name);\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function isString(obj) {\n    return Object.prototype.toString.call(obj) === \"[object String]\";\n  }\n\n  function isIdentifier(tkn, value) {\n    if (!tkn)\n      return false;\n\n    if (!tkn.identifier || tkn.value !== value)\n      return false;\n\n    return true;\n  }\n\n  /**\n   * ES3 defined a set of \"FutureReservedWords\" in order \"to allow for the\n   * possibility of future adoption of [proposed] extensions.\"\n   *\n   * ES5 reduced the set of FutureReservedWords, in some cases by using them to\n   * define new syntactic forms (e.g. `class` and `const`) and in other cases\n   * by simply allowing their use as Identifiers (e.g. `int` and `goto`).\n   * Separately, ES5 introduced new restrictions on certain tokens, but limited\n   * the restriction to strict mode code (e.g. `let` and `yield`).\n   *\n   * This function determines if a given token describes a reserved word\n   * according to the current state of the parser.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   * @param {Token} token\n   */\n  function isReserved(context, token) {\n    if (!token.reserved) {\n      return false;\n    }\n    var meta = token.meta;\n\n    if (meta && meta.isFutureReservedWord) {\n      if (state.inES5()) {\n        // ES3 FutureReservedWord in an ES5 environment.\n        if (!meta.es5) {\n          return false;\n        }\n\n        if (token.isProperty) {\n          return false;\n        }\n      }\n    } else if (meta && meta.es5 && !state.inES5()) {\n      return false;\n    }\n\n    // Some identifiers are reserved only within a strict mode environment.\n    if (meta && meta.strictOnly && state.inES5()) {\n      if (!state.option.strict && !state.isStrict()) {\n        return false;\n      }\n    }\n\n    if (token.id === \"await\" && (!(context & prodParams.async) && !state.option.module)) {\n      return false;\n    }\n\n    if (token.id === \"yield\" && (!(context & prodParams.yield))) {\n      return state.isStrict();\n    }\n\n    return true;\n  }\n\n  function supplant(str, data) {\n    return str.replace(/\\{([^{}]*)\\}/g, function(a, b) {\n      var r = data[b];\n      return typeof r === \"string\" || typeof r === \"number\" ? r : a;\n    });\n  }\n\n  function combine(dest, src) {\n    Object.keys(src).forEach(function(name) {\n      if (_.has(JSHINT.blacklist, name)) return;\n      dest[name] = src[name];\n    });\n  }\n\n  function processenforceall() {\n    if (state.option.enforceall) {\n      for (var enforceopt in options.bool.enforcing) {\n        if (state.option[enforceopt] === undefined &&\n            !options.noenforceall[enforceopt]) {\n          state.option[enforceopt] = true;\n        }\n      }\n      for (var relaxopt in options.bool.relaxing) {\n        if (state.option[relaxopt] === undefined) {\n          state.option[relaxopt] = false;\n        }\n      }\n    }\n  }\n\n  /**\n   * Apply all linting options according to the status of the `state` object.\n   */\n  function applyOptions() {\n    var badESOpt = null;\n    processenforceall();\n\n    /**\n     * TODO: Remove in JSHint 3\n     */\n    badESOpt = state.inferEsVersion();\n    if (badESOpt) {\n      quit(\"E059\", state.tokens.next, \"esversion\", badESOpt);\n    }\n\n    if (state.inES5()) {\n      combine(predefined, vars.ecmaIdentifiers[5]);\n    }\n\n    if (state.inES6()) {\n      combine(predefined, vars.ecmaIdentifiers[6]);\n    }\n\n    if (state.inES8()) {\n      combine(predefined, vars.ecmaIdentifiers[8]);\n    }\n\n    if (state.inES11()) {\n      combine(predefined, vars.ecmaIdentifiers[11]);\n    }\n\n    /**\n     * Use `in` to check for the presence of any explicitly-specified value for\n     * `globalstrict` because both `true` and `false` should trigger an error.\n     */\n    if (state.option.strict === \"global\" && \"globalstrict\" in state.option) {\n      quit(\"E059\", state.tokens.next, \"strict\", \"globalstrict\");\n    }\n\n    if (state.option.module) {\n      /**\n       * TODO: Extend this restriction to *all* ES6-specific options.\n       */\n      if (!state.inES6()) {\n        warning(\"W134\", state.tokens.next, \"module\", 6);\n      }\n    }\n\n    if (state.option.regexpu) {\n      /**\n       * TODO: Extend this restriction to *all* ES6-specific options.\n       */\n      if (!state.inES6()) {\n        warning(\"W134\", state.tokens.next, \"regexpu\", 6);\n      }\n    }\n\n    if (state.option.couch) {\n      combine(predefined, vars.couch);\n    }\n\n    if (state.option.qunit) {\n      combine(predefined, vars.qunit);\n    }\n\n    if (state.option.rhino) {\n      combine(predefined, vars.rhino);\n    }\n\n    if (state.option.shelljs) {\n      combine(predefined, vars.shelljs);\n      combine(predefined, vars.node);\n    }\n    if (state.option.typed) {\n      combine(predefined, vars.typed);\n    }\n\n    if (state.option.phantom) {\n      combine(predefined, vars.phantom);\n    }\n\n    if (state.option.prototypejs) {\n      combine(predefined, vars.prototypejs);\n    }\n\n    if (state.option.node) {\n      combine(predefined, vars.node);\n      combine(predefined, vars.typed);\n    }\n\n    if (state.option.devel) {\n      combine(predefined, vars.devel);\n    }\n\n    if (state.option.dojo) {\n      combine(predefined, vars.dojo);\n    }\n\n    if (state.option.browser) {\n      combine(predefined, vars.browser);\n      combine(predefined, vars.typed);\n    }\n\n    if (state.option.browserify) {\n      combine(predefined, vars.browser);\n      combine(predefined, vars.typed);\n      combine(predefined, vars.browserify);\n    }\n\n    if (state.option.nonstandard) {\n      combine(predefined, vars.nonstandard);\n    }\n\n    if (state.option.jasmine) {\n      combine(predefined, vars.jasmine);\n    }\n\n    if (state.option.jquery) {\n      combine(predefined, vars.jquery);\n    }\n\n    if (state.option.mootools) {\n      combine(predefined, vars.mootools);\n    }\n\n    if (state.option.worker) {\n      combine(predefined, vars.worker);\n    }\n\n    if (state.option.wsh) {\n      combine(predefined, vars.wsh);\n    }\n\n    if (state.option.yui) {\n      combine(predefined, vars.yui);\n    }\n\n    if (state.option.mocha) {\n      combine(predefined, vars.mocha);\n    }\n  }\n\n  // Produce an error warning.\n  function quit(code, token, a, b) {\n    var percentage = Math.floor((token.line / state.lines.length) * 100);\n    var message = messages.errors[code].desc;\n\n    var exception = {\n      name: \"JSHintError\",\n      line: token.line,\n      character: token.from,\n      message: message + \" (\" + percentage + \"% scanned).\",\n      raw: message,\n      code: code,\n      a: a,\n      b: b\n    };\n\n    exception.reason = supplant(message, exception) + \" (\" + percentage +\n      \"% scanned).\";\n\n    throw exception;\n  }\n\n  function removeIgnoredMessages() {\n    var ignored = state.ignoredLines;\n\n    if (_.isEmpty(ignored)) return;\n    JSHINT.errors = _.reject(JSHINT.errors, function(err) { return ignored[err.line] });\n  }\n\n  function warning(code, t, a, b, c, d) {\n    var ch, l, w, msg;\n\n    if (/^W\\d{3}$/.test(code)) {\n      if (state.ignored[code])\n        return;\n\n      msg = messages.warnings[code];\n    } else if (/E\\d{3}/.test(code)) {\n      msg = messages.errors[code];\n    } else if (/I\\d{3}/.test(code)) {\n      msg = messages.info[code];\n    }\n\n    t = t || state.tokens.next || {};\n    if (t.id === \"(end)\") {  // `~\n      t = state.tokens.curr;\n    }\n\n    l = t.line;\n    ch = t.from;\n\n    w = {\n      id: \"(error)\",\n      raw: msg.desc,\n      code: msg.code,\n      evidence: state.lines[l - 1] || \"\",\n      line: l,\n      character: ch,\n      scope: JSHINT.scope,\n      a: a,\n      b: b,\n      c: c,\n      d: d\n    };\n\n    w.reason = supplant(msg.desc, w);\n    JSHINT.errors.push(w);\n\n    removeIgnoredMessages();\n\n    var errors = JSHINT.errors.filter(function(e) { return /E\\d{3}/.test(e.code); });\n    if (errors.length >= state.option.maxerr) {\n      quit(\"E043\", t);\n    }\n    return w;\n  }\n\n  function warningAt(m, l, ch, a, b, c, d) {\n    return warning(m, {\n      line: l,\n      from: ch\n    }, a, b, c, d);\n  }\n\n  function error(m, t, a, b, c, d) {\n    warning(m, t, a, b, c, d);\n  }\n\n  function errorAt(m, l, ch, a, b, c, d) {\n    return error(m, {\n      line: l,\n      from: ch\n    }, a, b, c, d);\n  }\n\n  // Tracking of \"internal\" scripts, like eval containing a static string\n  function addEvalCode(elem, token) {\n    JSHINT.internals.push({\n      id: \"(internal)\",\n      elem: elem,\n      token: token,\n      code: token.value.replace(/([^\\\\])(\\\\*)\\2\\\\n/g, \"$1\\n\")\n    });\n  }\n\n  /**\n   * Process an inline linting directive\n   *\n   * @param {Token} directiveToken - the directive-bearing comment token\n   * @param {Token} previous - the token that preceeds the directive\n   */\n  function lintingDirective(directiveToken, previous) {\n    var body = directiveToken.body.split(\",\")\n      .map(function(s) { return s.trim(); });\n    var predef = {};\n\n    if (directiveToken.type === \"falls through\") {\n      previous.caseFallsThrough = true;\n      return;\n    }\n\n    if (directiveToken.type === \"globals\") {\n      body.forEach(function(item, idx) {\n        var parts = item.split(\":\");\n        var key = parts[0].trim();\n\n        if (key === \"-\" || !key.length) {\n          // Ignore trailing comma\n          if (idx > 0 && idx === body.length - 1) {\n            return;\n          }\n          error(\"E002\", directiveToken);\n          return;\n        }\n\n        if (key.charAt(0) === \"-\") {\n          key = key.slice(1);\n\n          JSHINT.blacklist[key] = key;\n          delete predefined[key];\n        } else {\n          predef[key] = parts.length > 1 && parts[1].trim() === \"true\";\n        }\n      });\n\n      combine(predefined, predef);\n\n      for (var key in predef) {\n        if (_.has(predef, key)) {\n          declared[key] = directiveToken;\n        }\n      }\n    }\n\n    if (directiveToken.type === \"exported\") {\n      body.forEach(function(e, idx) {\n        if (!e.length) {\n          // Ignore trailing comma\n          if (idx > 0 && idx === body.length - 1) {\n            return;\n          }\n          error(\"E002\", directiveToken);\n          return;\n        }\n\n        state.funct[\"(scope)\"].addExported(e);\n      });\n    }\n\n    if (directiveToken.type === \"members\") {\n      membersOnly = membersOnly || {};\n\n      body.forEach(function(m) {\n        var ch1 = m.charAt(0);\n        var ch2 = m.charAt(m.length - 1);\n\n        if (ch1 === ch2 && (ch1 === \"\\\"\" || ch1 === \"'\")) {\n          m = m\n            .substr(1, m.length - 2)\n            .replace(\"\\\\\\\"\", \"\\\"\");\n        }\n\n        membersOnly[m] = false;\n      });\n    }\n\n    var numvals = [\n      \"maxstatements\",\n      \"maxparams\",\n      \"maxdepth\",\n      \"maxcomplexity\",\n      \"maxerr\",\n      \"maxlen\",\n      \"indent\"\n    ];\n\n    if (directiveToken.type === \"jshint\" || directiveToken.type === \"jslint\" ||\n      directiveToken.type === \"jshint.unstable\") {\n      body.forEach(function(item) {\n        var parts = item.split(\":\");\n        var key = parts[0].trim();\n        var val = parts.length > 1 ? parts[1].trim() : \"\";\n        var numberVal;\n\n        if (!checkOption(key, directiveToken.type !== \"jshint.unstable\", directiveToken)) {\n          return;\n        }\n\n        if (numvals.indexOf(key) >= 0) {\n          // GH988 - numeric options can be disabled by setting them to `false`\n          if (val !== \"false\") {\n            numberVal = +val;\n\n            if (typeof numberVal !== \"number\" || !isFinite(numberVal) ||\n              numberVal <= 0 || Math.floor(numberVal) !== numberVal) {\n              error(\"E032\", directiveToken, val);\n              return;\n            }\n\n            state.option[key] = numberVal;\n          } else {\n            state.option[key] = key === \"indent\" ? 4 : false;\n          }\n\n          return;\n        }\n\n        if (key === \"validthis\") {\n          // `validthis` is valid only within a function scope.\n\n          if (state.funct[\"(global)\"])\n            return void error(\"E009\");\n\n          if (val !== \"true\" && val !== \"false\")\n            return void error(\"E002\", directiveToken);\n\n          state.option.validthis = (val === \"true\");\n          return;\n        }\n\n        if (key === \"quotmark\") {\n          switch (val) {\n          case \"true\":\n          case \"false\":\n            state.option.quotmark = (val === \"true\");\n            break;\n          case \"double\":\n          case \"single\":\n            state.option.quotmark = val;\n            break;\n          default:\n            error(\"E002\", directiveToken);\n          }\n          return;\n        }\n\n        if (key === \"shadow\") {\n          switch (val) {\n          case \"true\":\n            state.option.shadow = true;\n            break;\n          case \"outer\":\n            state.option.shadow = \"outer\";\n            break;\n          case \"false\":\n          case \"inner\":\n            state.option.shadow = \"inner\";\n            break;\n          default:\n            error(\"E002\", directiveToken);\n          }\n          return;\n        }\n\n        if (key === \"unused\") {\n          switch (val) {\n          case \"true\":\n            state.option.unused = true;\n            break;\n          case \"false\":\n            state.option.unused = false;\n            break;\n          case \"vars\":\n          case \"strict\":\n            state.option.unused = val;\n            break;\n          default:\n            error(\"E002\", directiveToken);\n          }\n          return;\n        }\n\n        if (key === \"latedef\") {\n          switch (val) {\n          case \"true\":\n            state.option.latedef = true;\n            break;\n          case \"false\":\n            state.option.latedef = false;\n            break;\n          case \"nofunc\":\n            state.option.latedef = \"nofunc\";\n            break;\n          default:\n            error(\"E002\", directiveToken);\n          }\n          return;\n        }\n\n        if (key === \"ignore\") {\n          switch (val) {\n          case \"line\":\n            state.ignoredLines[directiveToken.line] = true;\n            removeIgnoredMessages();\n            break;\n          default:\n            error(\"E002\", directiveToken);\n          }\n          return;\n        }\n\n        if (key === \"strict\") {\n          switch (val) {\n          case \"true\":\n            state.option.strict = true;\n            break;\n          case \"false\":\n            state.option.strict = false;\n            break;\n          case \"global\":\n          case \"implied\":\n            state.option.strict = val;\n            break;\n          default:\n            error(\"E002\", directiveToken);\n          }\n          return;\n        }\n\n        if (key === \"module\") {\n          /**\n           * TODO: Extend this restriction to *all* \"environmental\" options.\n           */\n          if (!hasParsedCode(state.funct)) {\n            error(\"E055\", directiveToken, \"module\");\n          }\n        }\n\n        if (key === \"esversion\") {\n          switch (val) {\n          case \"3\":\n          case \"5\":\n          case \"6\":\n          case \"7\":\n          case \"8\":\n          case \"9\":\n          case \"10\":\n          case \"11\":\n            state.option.moz = false;\n            state.option.esversion = +val;\n            break;\n          case \"2015\":\n          case \"2016\":\n          case \"2017\":\n          case \"2018\":\n          case \"2019\":\n          case \"2020\":\n            state.option.moz = false;\n            // Translate specification publication year to version number.\n            state.option.esversion = +val - 2009;\n            break;\n          default:\n            error(\"E002\", directiveToken);\n          }\n          if (!hasParsedCode(state.funct)) {\n            error(\"E055\", directiveToken, \"esversion\");\n          }\n          return;\n        }\n\n        var match = /^([+-])(W\\d{3})$/g.exec(key);\n        if (match) {\n          // ignore for -W..., unignore for +W...\n          state.ignored[match[2]] = (match[1] === \"-\");\n          return;\n        }\n\n        var tn;\n        if (val === \"true\" || val === \"false\") {\n          if (directiveToken.type === \"jslint\") {\n            tn = options.renamed[key] || key;\n            state.option[tn] = (val === \"true\");\n\n            if (options.inverted[tn] !== undefined) {\n              state.option[tn] = !state.option[tn];\n            }\n          } else if (directiveToken.type === \"jshint.unstable\") {\n            /* istanbul ignore next */\n            state.option.unstable[key] = (val === \"true\");\n          } else {\n            state.option[key] = (val === \"true\");\n          }\n\n          return;\n        }\n\n        error(\"E002\", directiveToken);\n      });\n\n      applyOptions();\n    }\n  }\n\n  /**\n   * Return a token beyond the token available in `state.tokens.next`. If no\n   * such token exists, return the \"(end)\" token. This function is used to\n   * determine parsing strategies in cases where the value of the next token\n   * does not provide sufficient information, as is the case with `for` loops,\n   * e.g.:\n   *\n   *     for ( var i in ...\n   *\n   * versus:\n   *\n   *     for ( var i = ...\n   *\n   * @param {number} [p] - offset of desired token; defaults to 0\n   *\n   * @returns {token}\n   */\n  function peek(p) {\n    var i = p || 0, j = lookahead.length, t;\n\n    if (i < j) {\n      return lookahead[i];\n    }\n\n    while (j <= i) {\n      t = lex.token();\n\n      // When the lexer is exhausted, this function should produce the \"(end)\"\n      // token, even in cases where the requested token is beyond the end of\n      // the input stream.\n      if (!t) {\n        // If the lookahead buffer is empty, the expected \"(end)\" token was\n        // already emitted by the most recent invocation of `advance` and is\n        // available as the next token.\n        if (!lookahead.length) {\n          return state.tokens.next;\n        }\n\n        return lookahead[j - 1];\n      }\n\n      lookahead[j] = t;\n      j += 1;\n    }\n\n    return t;\n  }\n\n  function peekIgnoreEOL() {\n    var i = 0;\n    var t;\n    do {\n      t = peek(i++);\n    } while (t.id === \"(endline)\");\n    return t;\n  }\n\n  /**\n   * Consume the next token.\n   *\n   * @param {string} [expected] - the expected value of the next token's `id`\n   *                              property (in the case of punctuators) or\n   *                              `value` property (in the case of identifiers\n   *                              and literals); if unspecified, any token will\n   *                              be accepted\n   * @param {object} [relatedToken] - the token that informed the expected\n   *                                  value, if any (for example: the opening\n   *                                  brace when a closing brace is expected);\n   *                                  used to produce more meaningful errors\n   */\n  function advance(expected, relatedToken) {\n    var nextToken = state.tokens.next;\n\n    if (expected && nextToken.id !== expected) {\n      if (relatedToken) {\n        if (nextToken.id === \"(end)\") {\n          error(\"E019\", relatedToken, relatedToken.id);\n        } else {\n          error(\"E020\", nextToken, expected, relatedToken.id,\n            relatedToken.line, nextToken.value);\n        }\n      } else if (nextToken.type !== \"(identifier)\" || nextToken.value !== expected) {\n        error(\"E021\", nextToken, expected, nextToken.value);\n      }\n    }\n\n    state.tokens.prev = state.tokens.curr;\n    state.tokens.curr = state.tokens.next;\n    for (;;) {\n      state.tokens.next = lookahead.shift() || lex.token();\n\n      if (!state.tokens.next) { // No more tokens left, give up\n        quit(\"E041\", state.tokens.curr);\n      }\n\n      if (state.tokens.next.id === \"(end)\" || state.tokens.next.id === \"(error)\") {\n        return;\n      }\n\n      if (state.tokens.next.check) {\n        state.tokens.next.check();\n      }\n\n      if (state.tokens.next.isSpecial) {\n        lintingDirective(state.tokens.next, state.tokens.curr);\n      } else {\n        if (state.tokens.next.id !== \"(endline)\") {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Determine whether a given token is an operator.\n   *\n   * @param {token} token\n   *\n   * @returns {boolean}\n   */\n  function isOperator(token) {\n    return token.first || token.right || token.left || token.id === \"yield\" || token.id === \"await\";\n  }\n\n  function isEndOfExpr(context, curr, next) {\n    if (arguments.length <= 1) {\n      curr = state.tokens.curr;\n      next = state.tokens.next;\n    }\n\n    if (next.id === \"in\" && context & prodParams.noin) {\n      return true;\n    }\n\n    if (next.id === \";\" || next.id === \"}\" || next.id === \":\") {\n      return true;\n    }\n\n    if (next.infix === curr.infix ||\n      // Infix operators which follow `yield` should only be consumed as part\n      // of the current expression if allowed by the syntactic grammar. In\n      // effect, this prevents automatic semicolon insertion when `yield` is\n      // followed by a newline and a comma operator (without enabling it when\n      // `yield` is followed by a newline and a `[` token).\n      (curr.id === \"yield\" && curr.rbp < next.rbp)) {\n      return !sameLine(curr, next);\n    }\n\n    return false;\n  }\n\n  /**\n   * The `expression` function is the heart of JSHint's parsing behaior. It is\n   * based on the Pratt parser, but it extends that model with a `fud` method.\n   * Short for \"first null denotation,\" it it similar to the `nud` (\"null\n   * denotation\") function, but it is only used on the first token of a\n   * statement. This simplifies usage in statement-oriented languages like\n   * JavaScript.\n   *\n   * .nud  Null denotation\n   * .fud  First null denotation\n   * .led  Left denotation\n   *  lbp  Left binding power\n   *  rbp  Right binding power\n   *\n   * They are elements of the parsing method called Top Down Operator Precedence.\n   *\n   * In addition to parsing, this function applies a number of linting patterns.\n   *\n   * @param {number} context - the parsing context (a bitfield describing\n   *                           conditions of the current parsing operation\n   *                           which can influence how the next tokens are\n   *                           interpreted); see `prod-params.js` for more\n   *                           detail)\n   * @param {number} rbp - the right-binding power of the token to be consumed\n   */\n  function expression(context, rbp) {\n    var left, isArray = false, isObject = false;\n    var initial = context & prodParams.initial;\n    var curr;\n\n    context &= ~prodParams.initial;\n\n    state.nameStack.push();\n\n    if (state.tokens.next.id === \"(end)\")\n      error(\"E006\", state.tokens.curr);\n\n    advance();\n\n    if (initial) {\n      state.funct[\"(verb)\"] = state.tokens.curr.value;\n      state.tokens.curr.beginsStmt = true;\n    }\n\n    curr = state.tokens.curr;\n\n    if (initial && curr.fud && (!curr.useFud || curr.useFud(context))) {\n      left = state.tokens.curr.fud(context);\n    } else {\n      if (state.tokens.curr.nud) {\n        left = state.tokens.curr.nud(context, rbp);\n      } else {\n        error(\"E030\", state.tokens.curr, state.tokens.curr.id);\n      }\n\n      while (rbp < state.tokens.next.lbp && !isEndOfExpr(context)) {\n        isArray = state.tokens.curr.value === \"Array\";\n        isObject = state.tokens.curr.value === \"Object\";\n\n        // #527, new Foo.Array(), Foo.Array(), new Foo.Object(), Foo.Object()\n        // Line breaks in IfStatement heads exist to satisfy the checkJSHint\n        // \"Line too long.\" error.\n        if (left && (left.value || (left.first && left.first.value))) {\n          // If the left.value is not \"new\", or the left.first.value is a \".\"\n          // then safely assume that this is not \"new Array()\" and possibly\n          // not \"new Object()\"...\n          if (left.value !== \"new\" ||\n            (left.first && left.first.value && left.first.value === \".\")) {\n            isArray = false;\n            // ...In the case of Object, if the left.value and state.tokens.curr.value\n            // are not equal, then safely assume that this not \"new Object()\"\n            if (left.value !== state.tokens.curr.value) {\n              isObject = false;\n            }\n          }\n        }\n\n        advance();\n\n        if (isArray && state.tokens.curr.id === \"(\" && state.tokens.next.id === \")\") {\n          warning(\"W009\", state.tokens.curr);\n        }\n\n        if (isObject && state.tokens.curr.id === \"(\" && state.tokens.next.id === \")\") {\n          warning(\"W010\", state.tokens.curr);\n        }\n\n        if (left && state.tokens.curr.led) {\n          left = state.tokens.curr.led(context, left);\n        } else {\n          error(\"E033\", state.tokens.curr, state.tokens.curr.id);\n        }\n      }\n    }\n\n    state.nameStack.pop();\n\n    return left;\n  }\n\n\n  // Functions for conformance of style.\n\n  function sameLine(first, second) {\n    return first.line === (second.startLine || second.line);\n  }\n\n  function nobreaknonadjacent(left, right) {\n    if (!state.option.laxbreak && !sameLine(left, right)) {\n      warning(\"W014\", right, right.value);\n    }\n  }\n\n  function nolinebreak(t) {\n    if (!sameLine(t, state.tokens.next)) {\n      warning(\"E022\", t, t.value);\n    }\n  }\n\n  /**\n   * Validate the comma token in the \"current\" position of the token stream.\n   *\n   * @param {object} [opts]\n   * @param {boolean} [opts.property] - flag indicating whether the current\n   *                                    comma token is situated directly within\n   *                                    an object initializer\n   * @param {boolean} [opts.allowTrailing] - flag indicating whether the\n   *                                         current comma token may appear\n   *                                         directly before a delimiter\n   *\n   * @returns {boolean} flag indicating the validity of the current comma\n   *                    token; `false` if the token directly causes a syntax\n   *                    error, `true` otherwise\n   */\n  function checkComma(opts) {\n    var prev = state.tokens.prev;\n    var curr = state.tokens.curr;\n    opts = opts || {};\n\n    if (!sameLine(prev, curr)) {\n      if (!state.option.laxcomma) {\n        if (checkComma.first) {\n          warning(\"I001\", curr);\n          checkComma.first = false;\n        }\n        warning(\"W014\", prev, curr.value);\n      }\n    }\n\n    if (state.tokens.next.identifier && !(opts.property && state.inES5())) {\n      // Keywords that cannot follow a comma operator.\n      switch (state.tokens.next.value) {\n      case \"break\":\n      case \"case\":\n      case \"catch\":\n      case \"continue\":\n      case \"default\":\n      case \"do\":\n      case \"else\":\n      case \"finally\":\n      case \"for\":\n      case \"if\":\n      case \"in\":\n      case \"instanceof\":\n      case \"return\":\n      case \"switch\":\n      case \"throw\":\n      case \"try\":\n      case \"var\":\n      case \"let\":\n      case \"while\":\n      case \"with\":\n        error(\"E024\", state.tokens.next, state.tokens.next.value);\n        return false;\n      }\n    }\n\n    if (state.tokens.next.type === \"(punctuator)\") {\n      switch (state.tokens.next.value) {\n      case \"}\":\n      case \"]\":\n      case \",\":\n      case \")\":\n        if (opts.allowTrailing) {\n          return true;\n        }\n\n        error(\"E024\", state.tokens.next, state.tokens.next.value);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Factory function for creating \"symbols\"--objects that will be inherited by\n   * tokens. The objects created by this function are stored in a symbol table\n   * and set as the prototype of the tokens generated by the lexer.\n   *\n   * Note that this definition of \"symbol\" describes an implementation detail\n   * of JSHint and is not related to the ECMAScript value type introduced in\n   * ES2015.\n   *\n   * @param {string} s - the name of the token; for keywords (e.g. `void`) and\n   *                     delimiters (e.g.. `[`), this is the token's text\n   *                     representation; for literals (e.g. numbers) and other\n   *                     \"special\" tokens (e.g. the end-of-file marker) this is\n   *                     a parenthetical value\n   * @param {number} p - the left-binding power of the token as used by the\n   *                     Pratt parsing semantics\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function symbol(s, p) {\n    var x = state.syntax[s];\n    if (!x || typeof x !== \"object\") {\n      state.syntax[s] = x = {\n        id: s,\n        lbp: p,\n        // Symbols that accept a right-hand side do so with a binding power\n        // that is commonly identical to their left-binding power. (This value\n        // is relevant when determining if the grouping operator is necessary\n        // to override the precedence of surrounding operators.) Because the\n        // exponentiation operator's left-binding power and right-binding power\n        // are distinct, the values must be encoded separately.\n        rbp: p,\n        value: s\n      };\n    }\n    return x;\n  }\n\n  /**\n   * Convenience function for defining delimiter symbols.\n   *\n   * @param {string} s - the name of the symbol\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function delim(s) {\n    var x = symbol(s, 0);\n    x.delim = true;\n    return x;\n  }\n\n  /**\n   * Convenience function for defining statement-denoting symbols.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} f - the first null denotation function for the symbol;\n   *                       see the `expression` function for more detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function stmt(s, f) {\n    var x = delim(s);\n    x.identifier = x.reserved = true;\n    x.fud = f;\n    return x;\n  }\n\n  /**\n   * Convenience function for defining block-statement-denoting symbols.\n   *\n   * A block-statement-denoting symbol is one like 'if' or 'for', which will be\n   * followed by a block and will not have to end with a semicolon.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} - the first null denotation function for the symbol; see\n   *                     the `expression` function for more detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function blockstmt(s, f) {\n    var x = stmt(s, f);\n    x.block = true;\n    return x;\n  }\n  /**\n   * Denote a given JSHint symbol as an identifier and a reserved keyword.\n   *\n   * @param {object} - a JSHint symbol value\n   *\n   * @returns {object} - the provided object\n   */\n  function reserveName(x) {\n    var c = x.id.charAt(0);\n    if ((c >= \"a\" && c <= \"z\") || (c >= \"A\" && c <= \"Z\")) {\n      x.identifier = x.reserved = true;\n    }\n    return x;\n  }\n\n  /**\n   * Convenience function for defining \"prefix\" symbols--operators that accept\n   * expressions as a right-hand side.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - the first null denotation function for the symbol;\n   *                         see the `expression` function for more detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function prefix(s, f) {\n    var x = symbol(s, 150);\n    reserveName(x);\n\n    x.nud = (typeof f === \"function\") ? f : function(context) {\n      this.arity = \"unary\";\n      this.right = expression(context, 150);\n\n      if (this.id === \"++\" || this.id === \"--\") {\n        if (state.option.plusplus) {\n          warning(\"W016\", this, this.id);\n        }\n\n        if (this.right) {\n          checkLeftSideAssign(context, this.right, this);\n        }\n      }\n\n      return this;\n    };\n\n    return x;\n  }\n\n  /**\n   * Convenience function for defining \"type\" symbols--those that describe\n   * literal values.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} f - the first null denotation function for the symbol;\n   *                       see the `expression` function for more detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function type(s, f) {\n    var x = symbol(s, 0);\n    x.type = s;\n    x.nud = f;\n    return x;\n  }\n\n  /**\n   * Convenience function for defining JSHint symbols for reserved\n   * keywords--those that are restricted from use as bindings (and as property\n   * names in ECMAScript 3 environments).\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} func - the first null denotation function for the\n   *                          symbol; see the `expression` function for more\n   *                          detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function reserve(name, func) {\n    var x = type(name, func);\n    x.identifier = true;\n    x.reserved = true;\n    return x;\n  }\n\n  /**\n   * Convenience function for defining JSHint symbols for keywords that are\n   * only reserved in some circumstances.\n   *\n   * @param {string} name - the name of the symbol\n   * @param {object} [meta] - a collection of optional arguments\n   * @param {function} [meta.nud] -the null denotation function for the symbol;\n   *                   see the `expression` function for more detail\n   * @param {boolean} [meta.es5] - `true` if the identifier is reserved\n   *                               in ECMAScript 5 or later\n   * @param {boolean} [meta.strictOnly] - `true` if the identifier is only\n   *                                      reserved in strict mode code.\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function FutureReservedWord(name, meta) {\n    var x = type(name, state.syntax[\"(identifier)\"].nud);\n\n    meta = meta || {};\n    meta.isFutureReservedWord = true;\n\n    x.value = name;\n    x.identifier = true;\n    x.reserved = true;\n    x.meta = meta;\n\n    return x;\n  }\n\n  /**\n   * Convenience function for defining \"infix\" symbols--operators that require\n   * operands as both \"land-hand side\" and \"right-hand side\".\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - a function to be invoked that consumes the\n   *                         right-hand side of the operator\n   * @param {number} p - the left-binding power of the token as used by the\n   *                     Pratt parsing semantics\n   * @param {boolean} [w] - if `true`\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function infix(s, f, p, w) {\n    var x = symbol(s, p);\n    reserveName(x);\n    x.infix = true;\n    x.led = function(context, left) {\n      if (!w) {\n        nobreaknonadjacent(state.tokens.prev, state.tokens.curr);\n      }\n      if ((s === \"in\" || s === \"instanceof\") && left.id === \"!\") {\n        warning(\"W018\", left, \"!\");\n      }\n      if (typeof f === \"function\") {\n        return f(context, left, this);\n      } else {\n        this.left = left;\n        this.right = expression(context, p);\n        return this;\n      }\n    };\n    return x;\n  }\n\n  /**\n   * Convenience function for defining the `=>` token as used in arrow\n   * functions.\n   *\n   * @param {string} s - the name of the symbol\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function application(s) {\n    var x = symbol(s, 42);\n\n    x.infix = true;\n    x.led = function(context, left) {\n      nobreaknonadjacent(state.tokens.prev, state.tokens.curr);\n\n      this.left = left;\n      this.right = doFunction(context, { type: \"arrow\", loneArg: left });\n      return this;\n    };\n    return x;\n  }\n\n  /**\n   * Convenience function for defining JSHint symbols for relation operators.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - a function to be invoked to enforce any additional\n   *                         linting rules.\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function relation(s, f) {\n    var x = symbol(s, 100);\n\n    x.infix = true;\n    x.led = function(context, left) {\n      nobreaknonadjacent(state.tokens.prev, state.tokens.curr);\n      this.left = left;\n      var right = this.right = expression(context, 100);\n\n      if (isIdentifier(left, \"NaN\") || isIdentifier(right, \"NaN\")) {\n        warning(\"W019\", this);\n      } else if (f) {\n        f.apply(this, [context, left, right]);\n      }\n\n      if (!left || !right) {\n        quit(\"E041\", state.tokens.curr);\n      }\n\n      if (left.id === \"!\") {\n        warning(\"W018\", left, \"!\");\n      }\n\n      if (right.id === \"!\") {\n        warning(\"W018\", right, \"!\");\n      }\n\n      return this;\n    };\n    return x;\n  }\n\n  /**\n   * Determine if a given token marks the beginning of a UnaryExpression.\n   *\n   * @param {object} token\n   *\n   * @returns {boolean}\n   */\n  function beginsUnaryExpression(token) {\n    return token.arity === \"unary\" && token.id !== \"++\" && token.id !== \"--\";\n  }\n\n  var typeofValues = {};\n  typeofValues.legacy = [\n    // E4X extended the `typeof` operator to return \"xml\" for the XML and\n    // XMLList types it introduced.\n    // Ref: 11.3.2 The typeof Operator\n    // http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-357.pdf\n    \"xml\",\n    // IE<9 reports \"unknown\" when the `typeof` operator is applied to an\n    // object existing across a COM+ bridge. In lieu of official documentation\n    // (which does not exist), see:\n    // http://robertnyman.com/2005/12/21/what-is-typeof-unknown/\n    \"unknown\"\n  ];\n  typeofValues.es3 = [\n    \"undefined\", \"boolean\", \"number\", \"string\", \"function\", \"object\",\n  ];\n  typeofValues.es3 = typeofValues.es3.concat(typeofValues.legacy);\n  typeofValues.es6 = typeofValues.es3.concat(\"symbol\", \"bigint\");\n\n  /**\n   * Validate comparisons between the result of a `typeof` expression and a\n   * string literal.\n   *\n   * @param {token} [left] - one of the values being compared\n   * @param {token} [right] - the other value being compared\n   * @param {object} state - the global state object (see `state.js`)\n   *\n   * @returns {boolean} - `false` if the second token describes a `typeof`\n   *                       expression and the first token is a string literal\n   *                       whose value is never returned by that operator;\n   *                       `true` otherwise\n   */\n  function isTypoTypeof(left, right, state) {\n    var values;\n\n    if (state.option.notypeof)\n      return false;\n\n    if (!left || !right)\n      return false;\n\n    values = state.inES6() ? typeofValues.es6 : typeofValues.es3;\n\n    if (right.type === \"(identifier)\" && right.value === \"typeof\" && left.type === \"(string)\") {\n      if (left.value === \"bigint\") {\n        if (!state.inES11()) {\n          warning(\"W119\", left, \"BigInt\", \"11\");\n        }\n\n        return false;\n      }\n\n      return !_.includes(values, left.value);\n    }\n\n    return false;\n  }\n\n  /**\n   * Determine if a given token describes the built-in `eval` function.\n   *\n   * @param {token} left\n   * @param {object} state - the global state object (see `state.js`)\n   *\n   * @returns {boolean}\n   */\n  function isGlobalEval(left, state) {\n    var isGlobal = false;\n\n    // permit methods to refer to an \"eval\" key in their own context\n    if (left.type === \"this\" && state.funct[\"(context)\"] === null) {\n      isGlobal = true;\n    }\n    // permit use of \"eval\" members of objects\n    else if (left.type === \"(identifier)\") {\n      if (state.option.node && left.value === \"global\") {\n        isGlobal = true;\n      }\n\n      else if (state.option.browser && (left.value === \"window\" || left.value === \"document\")) {\n        isGlobal = true;\n      }\n    }\n\n    return isGlobal;\n  }\n\n  /**\n   * Determine if a given token describes a property of a built-in object.\n   *\n   * @param {token} left\n   *\n   * @returns {boolean}\n   */\n  function findNativePrototype(left) {\n    var natives = [\n      \"Array\", \"ArrayBuffer\", \"Boolean\", \"Collator\", \"DataView\", \"Date\",\n      \"DateTimeFormat\", \"Error\", \"EvalError\", \"Float32Array\", \"Float64Array\",\n      \"Function\", \"Infinity\", \"Intl\", \"Int16Array\", \"Int32Array\", \"Int8Array\",\n      \"Iterator\", \"Number\", \"NumberFormat\", \"Object\", \"RangeError\",\n      \"ReferenceError\", \"RegExp\", \"StopIteration\", \"String\", \"SyntaxError\",\n      \"TypeError\", \"Uint16Array\", \"Uint32Array\", \"Uint8Array\", \"Uint8ClampedArray\",\n      \"URIError\"\n    ];\n\n    function walkPrototype(obj) {\n      if (typeof obj !== \"object\") return;\n      return obj.right === \"prototype\" ? obj : walkPrototype(obj.left);\n    }\n\n    function walkNative(obj) {\n      while (!obj.identifier && typeof obj.left === \"object\")\n        obj = obj.left;\n\n      if (obj.identifier && natives.indexOf(obj.value) >= 0 &&\n          state.funct[\"(scope)\"].isPredefined(obj.value)) {\n        return obj.value;\n      }\n    }\n\n    var prototype = walkPrototype(left);\n    if (prototype) return walkNative(prototype);\n  }\n\n  /**\n   * Determine if the given token is a valid assignment target; emit errors\n   * and/or warnings as appropriate\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   * @param {token} left - the left hand side of the assignment\n   * @param {token=} assignToken - the token for the assignment, used for\n   *                               reporting\n   * @param {object=} options - optional object\n   * @param {boolean} options.allowDestructuring - whether to allow\n   *                                               destructuring binding\n   *\n   * @returns {boolean} Whether the left hand side is OK\n   */\n  function checkLeftSideAssign(context, left, assignToken, options) {\n\n    var allowDestructuring = options && options.allowDestructuring;\n\n    assignToken = assignToken || left;\n\n    if (state.option.freeze) {\n      var nativeObject = findNativePrototype(left);\n      if (nativeObject)\n        warning(\"W121\", left, nativeObject);\n    }\n\n    if (left.identifier && !left.isMetaProperty) {\n      // The `reassign` method also calls `modify`, but we are specific in\n      // order to catch function re-assignment and globals re-assignment\n      state.funct[\"(scope)\"].block.reassign(left.value, left);\n    }\n\n    if (left.id === \".\") {\n      if (!left.left || left.left.value === \"arguments\" && !state.isStrict()) {\n        warning(\"W143\", assignToken);\n      }\n\n      state.nameStack.set(state.tokens.prev);\n      return true;\n    } else if (left.id === \"{\" || left.id === \"[\") {\n      if (!allowDestructuring || !left.destructAssign) {\n        if (left.id === \"{\" || !left.left) {\n          warning(\"E031\", assignToken);\n        } else if (left.left.value === \"arguments\" && !state.isStrict()) {\n          warning(\"W143\", assignToken);\n        }\n      }\n\n      if (left.id === \"[\") {\n        state.nameStack.set(left.right);\n      }\n\n      return true;\n    } else if (left.identifier && !isReserved(context, left) && !left.isMetaProperty) {\n      if (state.funct[\"(scope)\"].bindingtype(left.value) === \"exception\") {\n        warning(\"W022\", left);\n      }\n\n      if (left.value === \"eval\" && state.isStrict()) {\n        error(\"E031\", assignToken);\n        return false;\n      } else if (left.value === \"arguments\") {\n        if (!state.isStrict()) {\n          warning(\"W143\", assignToken);\n        } else {\n          error(\"E031\", assignToken);\n          return false;\n        }\n      }\n      state.nameStack.set(left);\n      return true;\n    }\n\n    error(\"E031\", assignToken);\n\n    return false;\n  }\n\n  /**\n   * Convenience function for defining JSHint symbols for assignment operators.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - a function to be invoked that consumes the\n   *                         right-hand side of the operator (see the `infix`\n   *                         function)\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function assignop(s, f) {\n    var x = infix(s, typeof f === \"function\" ? f : function(context, left, that) {\n      that.left = left;\n\n      checkLeftSideAssign(context, left, that, { allowDestructuring: true });\n\n      that.right = expression(context, 10);\n\n      return that;\n    }, 20);\n\n    x.exps = true;\n    x.assign = true;\n\n    return x;\n  }\n\n  /**\n   * Convenience function for defining JSHint symbols for bitwise operators.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - the left denotation function for the symbol; see\n   *                         the `expression` function for more detail\n   * @param {number} p - the left-binding power of the token as used by the\n   *                     Pratt parsing semantics\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function bitwise(s, f, p) {\n    var x = symbol(s, p);\n    reserveName(x);\n    x.infix = true;\n    x.led = (typeof f === \"function\") ? f : function(context, left) {\n      if (state.option.bitwise) {\n        warning(\"W016\", this, this.id);\n      }\n      this.left = left;\n      this.right = expression(context, p);\n      return this;\n    };\n    return x;\n  }\n\n  /**\n   * Convenience function for defining JSHint symbols for bitwise assignment\n   * operators. See the `assignop` function for more detail.\n   *\n   * @param {string} s - the name of the symbol\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function bitwiseassignop(s) {\n    symbol(s, 20).exps = true;\n    return infix(s, function(context, left, that) {\n      if (state.option.bitwise) {\n        warning(\"W016\", that, that.id);\n      }\n\n      checkLeftSideAssign(context, left, that);\n\n      that.right = expression(context, 10);\n\n      return that;\n    }, 20);\n  }\n\n  /**\n   * Convenience function for defining JSHint symbols for those operators which\n   * have a single operand that appears before them in the source code.\n   *\n   * @param {string} s - the name of the symbol\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function suffix(s) {\n    var x = symbol(s, 150);\n\n    x.led = function(context, left) {\n      // this = suffix e.g. \"++\" punctuator\n      // left = symbol operated e.g. \"a\" identifier or \"a.b\" punctuator\n      if (state.option.plusplus) {\n        warning(\"W016\", this, this.id);\n      }\n\n      checkLeftSideAssign(context, left, this);\n\n      this.left = left;\n      return this;\n    };\n    return x;\n  }\n\n  /**\n   * Retrieve the value of the next token if it is an identifier and optionally\n   * advance the parser.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   * @param {boolean} [isName] - `true` if an IdentifierName should be consumed\n   *                             (e.g. object properties)\n   * @param {boolean} [preserve] - `true` if the token should not be consumed\n   *\n   * @returns {string|undefined} - the value of the identifier, if present\n   */\n  function optionalidentifier(context, isName, preserve) {\n    if (!state.tokens.next.identifier) {\n      return;\n    }\n\n    if (!preserve) {\n      advance();\n    }\n\n    var curr = state.tokens.curr;\n\n    if (isReserved(context, curr) && !(isName && state.inES5())) {\n      warning(\"W024\", state.tokens.curr, state.tokens.curr.id);\n    }\n\n    return curr.value;\n  }\n\n  /**\n   * Consume the \"...\" token which designates \"spread\" and \"rest\" operations if\n   * it is present. If the operator is repeated, consume every repetition, and\n   * issue a single error describing the syntax error.\n   *\n   * @param {string} operation - either \"spread\" or \"rest\"\n   *\n   * @returns {boolean} a value describing whether or not any tokens were\n   *                    consumed in this way\n   */\n  function spreadrest(operation) {\n    if (!checkPunctuator(state.tokens.next, \"...\")) {\n      return false;\n    }\n\n    if (!state.inES6(true)) {\n      warning(\"W119\", state.tokens.next, operation + \" operator\", \"6\");\n    }\n    advance();\n\n    if (checkPunctuator(state.tokens.next, \"...\")) {\n      warning(\"E024\", state.tokens.next, \"...\");\n      while (checkPunctuator(state.tokens.next, \"...\")) {\n        advance();\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Ensure that the current token is an identifier and retrieve its value.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   * @param {boolean} [isName] - `true` if an IdentifierName should be consumed\n   *                             (e.g. object properties)\n   *\n   * @returns {string|undefined} - the value of the identifier, if present\n   */\n  function identifier(context, isName) {\n    var i = optionalidentifier(context, isName, false);\n    if (i) {\n      return i;\n    }\n\n    error(\"E030\", state.tokens.next, state.tokens.next.value);\n\n    // The token should be consumed after a warning is issued so the parser\n    // can continue as though an identifier were found. The semicolon token\n    // should not be consumed in this way so that the parser interprets it as\n    // a statement delimiter;\n    if (state.tokens.next.id !== \";\") {\n      advance();\n    }\n  }\n\n\n  /**\n   * Determine if the provided token may be evaluated and emit a linting\n   * warning if this is note the case.\n   *\n   * @param {token} controlToken\n   */\n  function reachable(controlToken) {\n    var i = 0, t;\n    if (state.tokens.next.id !== \";\" || controlToken.inBracelessBlock) {\n      return;\n    }\n    for (;;) {\n      do {\n        t = peek(i);\n        i += 1;\n      } while (t.id !== \"(end)\" && t.id === \"(comment)\");\n\n      if (t.reach) {\n        return;\n      }\n      if (t.id !== \"(endline)\") {\n        if (t.id === \"function\") {\n          if (state.option.latedef === true) {\n            warning(\"W026\", t);\n          }\n          break;\n        }\n\n        warning(\"W027\", t, t.value, controlToken.value);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Consume the semicolon that delimits the statement currently being parsed,\n   * emitting relevant warnings/errors as appropriate.\n   *\n   * @param {token} stmt - token describing the statement under consideration\n   */\n  function parseFinalSemicolon(stmt) {\n    if (state.tokens.next.id !== \";\") {\n      // don't complain about unclosed templates / strings\n      if (state.tokens.next.isUnclosed) return advance();\n\n      var isSameLine = sameLine(state.tokens.curr, state.tokens.next) &&\n                       state.tokens.next.id !== \"(end)\";\n      var blockEnd = checkPunctuator(state.tokens.next, \"}\");\n\n      if (isSameLine && !blockEnd && !(stmt.id === \"do\" && state.inES6(true))) {\n        errorAt(\"E058\", state.tokens.curr.line, state.tokens.curr.character);\n      } else if (!state.option.asi) {\n\n        // If this is the last statement in a block that ends on the same line\n        // *and* option lastsemic is on, ignore the warning.  Otherwise, issue\n        // a warning about missing semicolon.\n        if (!(blockEnd && isSameLine && state.option.lastsemic)) {\n          warningAt(\"W033\", state.tokens.curr.line, state.tokens.curr.character);\n        }\n      }\n    } else {\n      advance(\";\");\n    }\n  }\n\n  /**\n   * Consume a statement.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   *\n   * @returns {token} - the token describing the statement\n   */\n  function statement(context) {\n    var i = indent, r, t = state.tokens.next, hasOwnScope = false;\n\n    context |= prodParams.initial;\n\n    if (t.id === \";\") {\n      advance(\";\");\n      return;\n    }\n\n    // Is this a labelled statement?\n    var res = isReserved(context, t);\n\n    // We're being more tolerant here: if someone uses\n    // a FutureReservedWord (that is not meant to start a statement)\n    // as a label, we warn but proceed anyway.\n\n    if (res && t.meta && t.meta.isFutureReservedWord && !t.fud) {\n      warning(\"W024\", t, t.id);\n      res = false;\n    }\n\n    if (t.identifier && !res && peek().id === \":\") {\n      advance();\n      advance(\":\");\n\n      hasOwnScope = true;\n      state.funct[\"(scope)\"].stack();\n      state.funct[\"(scope)\"].block.addLabel(t.value, { token: state.tokens.curr });\n\n      if (!state.tokens.next.labelled && state.tokens.next.value !== \"{\") {\n        warning(\"W028\", state.tokens.next, t.value, state.tokens.next.value);\n      }\n\n      t = state.tokens.next;\n    }\n\n    // Is it a lonely block?\n\n    if (t.id === \"{\") {\n      // Is it a switch case block?\n      //\n      //  switch (foo) {\n      //    case bar: { <= here.\n      //      ...\n      //    }\n      //  }\n      var iscase = (state.funct[\"(verb)\"] === \"case\" && state.tokens.curr.value === \":\");\n      block(context, true, true, false, false, iscase);\n\n      if (hasOwnScope) {\n        state.funct[\"(scope)\"].unstack();\n      }\n\n      return;\n    }\n\n    // Parse the statement.\n\n    r = expression(context, 0);\n\n    if (r && !(r.identifier && r.value === \"function\") &&\n        !(r.type === \"(punctuator)\" && r.left &&\n          r.left.identifier && r.left.value === \"function\")) {\n      if (!state.isStrict() && state.stmtMissingStrict()) {\n        warning(\"E007\");\n      }\n    }\n\n    // Look for the final semicolon.\n\n    if (!t.block) {\n      if (!state.option.expr && (!r || !r.exps)) {\n        warning(\"W030\", state.tokens.curr);\n      } else if (state.option.nonew && r && r.left && r.id === \"(\" && r.left.id === \"new\") {\n        warning(\"W031\", t);\n      }\n\n      parseFinalSemicolon(t);\n    }\n\n\n    // Restore the indentation.\n\n    indent = i;\n    if (hasOwnScope) {\n      state.funct[\"(scope)\"].unstack();\n    }\n    return r;\n  }\n\n  /**\n   * Consume a series of statements until encountering either the end of the\n   * program or a token that interrupts control flow.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   *\n   * @returns {Array<token>} - the tokens consumed\n   */\n  function statements(context) {\n    var a = [], p;\n\n    while (!state.tokens.next.reach && state.tokens.next.id !== \"(end)\") {\n      if (state.tokens.next.id === \";\") {\n        p = peek();\n\n        if (!p || (p.id !== \"(\" && p.id !== \"[\")) {\n          warning(\"W032\");\n        }\n\n        advance(\";\");\n      } else {\n        a.push(statement(context));\n      }\n    }\n    return a;\n  }\n\n\n  /**\n   * Parse any directives in a directive prologue.\n   */\n  function directives() {\n    var current = state.tokens.next;\n    while (state.tokens.next.id === \"(string)\") {\n      var next = peekIgnoreEOL();\n      if (!isEndOfExpr(0, current, next)) {\n        break;\n      }\n      current = next;\n\n      advance();\n      var directive = state.tokens.curr.value;\n      if (state.directive[directive] ||\n          (directive === \"use strict\" && state.option.strict === \"implied\")) {\n        warning(\"W034\", state.tokens.curr, directive);\n      }\n\n      // From ECMAScript 2016:\n      //\n      // > 14.1.2 Static Semantics: Early Errors\n      // >\n      // > [...]\n      // > - It is a Syntax Error if ContainsUseStrict of FunctionBody is true\n      // >   and IsSimpleParameterList of FormalParameters is false.\n      if (directive === \"use strict\" && state.inES7() &&\n        !state.funct[\"(global)\"] && state.funct[\"(hasSimpleParams)\"] === false) {\n        error(\"E065\", state.tokens.curr);\n      }\n\n      state.directive[directive] = state.tokens.curr;\n\n      parseFinalSemicolon(current);\n    }\n\n    if (state.isStrict()) {\n      state.option.undef = true;\n    }\n  }\n\n  /**\n   * Parses a single block. A block is a sequence of statements wrapped in\n   * braces.\n   *\n   * @param {number} context - parsing context\n   * @param {boolean} ordinary - `true` for everything but function bodies and\n   *                             try blocks\n   * @param {boolean} [stmt] - `true` if block can be a single statement (e.g.\n   *                           in if/for/while)\n   * @param {boolean} [isfunc] - `true` if block is a function body\n   * @param {boolean} [isfatarrow] - `true` if its a body of a fat arrow\n   *                                 function\n   * @param {boolean} [iscase] - `true` if block is a switch case block\n   *\n   * @returns {token} - the token describing the block\n   */\n  function block(context, ordinary, stmt, isfunc, isfatarrow, iscase) {\n    var a,\n      b = inblock,\n      old_indent = indent,\n      m,\n      t,\n      d;\n\n    inblock = ordinary;\n\n    t = state.tokens.next;\n\n    var metrics = state.funct[\"(metrics)\"];\n    metrics.nestedBlockDepth += 1;\n    metrics.verifyMaxNestedBlockDepthPerFunction();\n\n    if (state.tokens.next.id === \"{\") {\n      advance(\"{\");\n\n      // create a new block scope\n      state.funct[\"(scope)\"].stack();\n\n      if (state.tokens.next.id !== \"}\") {\n        indent += state.option.indent;\n        while (!ordinary && state.tokens.next.from > indent) {\n          indent += state.option.indent;\n        }\n\n        if (isfunc) {\n          m = {};\n          for (d in state.directive) {\n            m[d] = state.directive[d];\n          }\n          directives();\n\n          state.funct[\"(isStrict)\"] = state.isStrict();\n\n          if (state.option.strict && state.funct[\"(context)\"][\"(global)\"]) {\n            if (!m[\"use strict\"] && !state.isStrict()) {\n              warning(\"E007\");\n            }\n          }\n        }\n\n        a = statements(context);\n\n        metrics.statementCount += a.length;\n\n        indent -= state.option.indent;\n      } else if (isfunc) {\n        // Ensure property is set for functions with empty bodies.\n        state.funct[\"(isStrict)\"] = state.isStrict();\n      }\n\n      advance(\"}\", t);\n\n      if (isfunc) {\n        state.funct[\"(scope)\"].validateParams(isfatarrow);\n        if (m) {\n          state.directive = m;\n        }\n      }\n\n      state.funct[\"(scope)\"].unstack();\n\n      indent = old_indent;\n    } else if (!ordinary) {\n      if (isfunc) {\n        state.funct[\"(scope)\"].stack();\n\n        if (stmt && !isfatarrow && !state.inMoz()) {\n          error(\"W118\", state.tokens.curr, \"function closure expressions\");\n        }\n\n        if (isfatarrow) {\n          state.funct[\"(scope)\"].validateParams(true);\n        }\n\n        var expr = expression(context, 10);\n\n        if (state.option.noreturnawait && context & prodParams.async &&\n            expr.identifier && expr.value === \"await\") {\n          warning(\"W146\", expr);\n        }\n\n        if (state.option.strict && state.funct[\"(context)\"][\"(global)\"]) {\n          if (!state.isStrict()) {\n            warning(\"E007\");\n          }\n        }\n\n        state.funct[\"(scope)\"].unstack();\n      } else {\n        error(\"E021\", state.tokens.next, \"{\", state.tokens.next.value);\n      }\n    } else {\n\n      state.funct[\"(scope)\"].stack();\n\n      if (!stmt || state.option.curly) {\n        warning(\"W116\", state.tokens.next, \"{\", state.tokens.next.value);\n      }\n\n      // JSHint observes Annex B of the ECMAScript specification by default,\n      // where function declarations are permitted in the statement positions\n      // of IfStatements.\n      var supportsFnDecl = state.funct[\"(verb)\"] === \"if\" ||\n        state.tokens.curr.id === \"else\";\n\n      state.tokens.next.inBracelessBlock = true;\n      indent += state.option.indent;\n      // test indentation only if statement is in new line\n      a = [statement(context)];\n      indent -= state.option.indent;\n\n      if (a[0] && a[0].declaration &&\n        !(supportsFnDecl && a[0].id === \"function\")) {\n        error(\"E048\", a[0], a[0].id[0].toUpperCase() + a[0].id.slice(1));\n      }\n\n      state.funct[\"(scope)\"].unstack();\n    }\n\n    // Don't clear and let it propagate out if it is \"break\", \"return\" or\n    // similar in switch case\n    switch (state.funct[\"(verb)\"]) {\n    case \"break\":\n    case \"continue\":\n    case \"return\":\n    case \"throw\":\n      if (iscase) {\n        break;\n      }\n\n      /* falls through */\n    default:\n      state.funct[\"(verb)\"] = null;\n    }\n\n    inblock = b;\n    if (ordinary && state.option.noempty && (!a || a.length === 0)) {\n      warning(\"W035\", state.tokens.prev);\n    }\n    metrics.nestedBlockDepth -= 1;\n    return a;\n  }\n\n\n  /**\n   * Update the global state which tracks all statically-identifiable property\n   * names, and emit a warning if the `members` linting directive is in use and\n   * does not include the given name.\n   *\n   * @param {string} m - the property name\n   */\n  function countMember(m) {\n    if (membersOnly && typeof membersOnly[m] !== \"boolean\") {\n      warning(\"W036\", state.tokens.curr, m);\n    }\n    if (typeof member[m] === \"number\") {\n      member[m] += 1;\n    } else {\n      member[m] = 1;\n    }\n  }\n\n  // Build the syntax table by declaring the syntactic elements of the language.\n\n  type(\"(number)\", function() {\n    if (state.tokens.next.id === \".\") {\n      warning(\"W005\", this);\n    }\n\n    return this;\n  });\n\n  type(\"(string)\", function() {\n    return this;\n  });\n\n  state.syntax[\"(identifier)\"] = {\n    type: \"(identifier)\",\n    lbp: 0,\n    identifier: true,\n\n    nud: function(context) {\n      var v = this.value;\n      // If this identifier is the lone parameter to a shorthand \"fat arrow\"\n      // function definition, i.e.\n      //\n      //     x => x;\n      //\n      // ...it should not be considered as a variable in the current scope. It\n      // will be added to the scope of the new function when the next token is\n      // parsed, so it can be safely ignored for now.\n      var isLoneArrowParam = state.tokens.next.id === \"=>\";\n\n      if (isReserved(context, this)) {\n        warning(\"W024\", this, v);\n      } else if (!isLoneArrowParam && !state.funct[\"(comparray)\"].check(v)) {\n        state.funct[\"(scope)\"].block.use(v, state.tokens.curr);\n      }\n\n      return this;\n    },\n\n    led: function() {\n      /* istanbul ignore next */\n      error(\"E033\", state.tokens.next, state.tokens.next.value);\n    }\n  };\n\n  var baseTemplateSyntax = {\n    identifier: false,\n    template: true,\n  };\n  state.syntax[\"(template)\"] = _.extend({\n    lbp: 155,\n    type: \"(template)\",\n    nud: doTemplateLiteral,\n    led: doTemplateLiteral,\n    noSubst: false\n  }, baseTemplateSyntax);\n\n  state.syntax[\"(template middle)\"] = _.extend({\n    lbp: 0,\n    type: \"(template middle)\",\n    noSubst: false\n  }, baseTemplateSyntax);\n\n  state.syntax[\"(template tail)\"] = _.extend({\n    lbp: 0,\n    type: \"(template tail)\",\n    tail: true,\n    noSubst: false\n  }, baseTemplateSyntax);\n\n  state.syntax[\"(no subst template)\"] = _.extend({\n    lbp: 155,\n    type: \"(template)\",\n    nud: doTemplateLiteral,\n    led: doTemplateLiteral,\n    noSubst: true,\n    tail: true // mark as tail, since it's always the last component\n  }, baseTemplateSyntax);\n\n  type(\"(regexp)\", function() {\n    return this;\n  });\n\n  // ECMAScript parser\n\n  delim(\"(endline)\");\n  (function(x) {\n    x.line = x.from = 0;\n  })(delim(\"(begin)\"));\n  delim(\"(end)\").reach = true;\n  delim(\"(error)\").reach = true;\n  delim(\"}\").reach = true;\n  delim(\")\");\n  delim(\"]\");\n  delim(\"\\\"\").reach = true;\n  delim(\"'\").reach = true;\n  delim(\";\");\n  delim(\":\").reach = true;\n  delim(\"#\");\n\n  reserve(\"else\");\n  reserve(\"case\").reach = true;\n  reserve(\"catch\");\n  reserve(\"default\").reach = true;\n  reserve(\"finally\");\n  reserve(\"true\", function() { return this; });\n  reserve(\"false\", function() { return this; });\n  reserve(\"null\", function() { return this; });\n  reserve(\"this\", function() {\n    if (state.isStrict() && !isMethod() &&\n        !state.option.validthis && ((state.funct[\"(statement)\"] &&\n        state.funct[\"(name)\"].charAt(0) > \"Z\") || state.funct[\"(global)\"])) {\n      warning(\"W040\", this);\n    }\n\n    return this;\n  });\n\n  (function(superSymbol) {\n    superSymbol.rbp = 161;\n  })(reserve(\"super\", function() {\n    superNud.call(state.tokens.curr, this);\n\n    return this;\n  }));\n\n  assignop(\"=\", \"assign\");\n  assignop(\"+=\", \"assignadd\");\n  assignop(\"-=\", \"assignsub\");\n  assignop(\"*=\", \"assignmult\");\n  assignop(\"/=\", \"assigndiv\").nud = function() {\n    /* istanbul ignore next */\n    error(\"E014\");\n  };\n  assignop(\"%=\", \"assignmod\");\n  assignop(\"**=\", function(context, left, that) {\n    if (!state.inES7()) {\n      warning(\"W119\", that, \"Exponentiation operator\", \"7\");\n    }\n\n    that.left = left;\n\n    checkLeftSideAssign(context, left, that);\n\n    that.right = expression(context, 10);\n\n    return that;\n  });\n\n  bitwiseassignop(\"&=\");\n  bitwiseassignop(\"|=\");\n  bitwiseassignop(\"^=\");\n  bitwiseassignop(\"<<=\");\n  bitwiseassignop(\">>=\");\n  bitwiseassignop(\">>>=\");\n  infix(\",\", function(context, left, that) {\n    if (state.option.nocomma) {\n      warning(\"W127\", that);\n    }\n\n    that.left = left;\n\n    if (checkComma()) {\n      that.right = expression(context, 10);\n    } else {\n      that.right = null;\n    }\n\n    return that;\n  }, 10, true);\n\n  infix(\"?\", function(context, left, that) {\n    increaseComplexityCount();\n    that.left = left;\n    that.right = expression(context & ~prodParams.noin, 10);\n    advance(\":\");\n    expression(context, 10);\n    return that;\n  }, 30);\n\n  infix(\"||\", function(context, left, that) {\n    increaseComplexityCount();\n    that.left = left;\n    that.right = expression(context, 40);\n    return that;\n  }, 40);\n\n  var andPrecedence = 50;\n  infix(\"&&\", function(context, left, that) {\n    increaseComplexityCount();\n    that.left = left;\n    that.right = expression(context, andPrecedence);\n    return that;\n  }, andPrecedence);\n\n  infix(\"??\", function(context, left, that) {\n    if (!left.paren && (left.id === \"||\" || left.id === \"&&\")) {\n      error(\"E024\", that, \"??\");\n    }\n\n    if (!state.inES11()) {\n      warning(\"W119\", that, \"nullish coalescing\", \"11\");\n    }\n\n    increaseComplexityCount();\n    that.left = left;\n    var right = that.right = expression(context, 39);\n\n    if (!right) {\n      error(\"E024\", state.tokens.next, state.tokens.next.id);\n    } else if (!right.paren && (right.id === \"||\" || right.id === \"&&\")) {\n      error(\"E024\", that.right, that.right.id);\n    }\n\n    return that;\n  }, 39);\n\n  // The Exponentiation operator, introduced in ECMAScript 2016\n  //\n  // ExponentiationExpression[Yield] :\n  //   UnaryExpression[?Yield]\n  //   UpdateExpression[?Yield] ** ExponentiationExpression[?Yield]\n  infix(\"**\", function(context, left, that) {\n    if (!state.inES7()) {\n      warning(\"W119\", that, \"Exponentiation operator\", \"7\");\n    }\n\n    // Disallow UnaryExpressions which are not wrapped in parenthesis\n    if (!left.paren && beginsUnaryExpression(left)) {\n      error(\"E024\", that, \"**\");\n    }\n\n    that.left = left;\n    that.right = expression(context, that.rbp);\n    return that;\n  }, 150);\n  state.syntax[\"**\"].rbp = 140;\n  bitwise(\"|\", \"bitor\", 70);\n  bitwise(\"^\", \"bitxor\", 80);\n  bitwise(\"&\", \"bitand\", 90);\n  relation(\"==\", function(context, left, right) {\n    var eqnull = state.option.eqnull &&\n      ((left && left.value) === \"null\" || (right && right.value) === \"null\");\n\n    switch (true) {\n      case !eqnull && state.option.eqeqeq:\n        this.from = this.character;\n        warning(\"W116\", this, \"===\", \"==\");\n        break;\n      /* istanbul ignore next */\n      case isTypoTypeof(right, left, state):\n        warning(\"W122\", this, right.value);\n        break;\n      case isTypoTypeof(left, right, state):\n        warning(\"W122\", this, left.value);\n        break;\n    }\n\n    return this;\n  });\n  relation(\"===\", function(context, left, right) {\n    if (isTypoTypeof(right, left, state)) {\n      warning(\"W122\", this, right.value);\n    } else if (isTypoTypeof(left, right, state)) {\n      /* istanbul ignore next */\n      warning(\"W122\", this, left.value);\n    }\n    return this;\n  });\n  relation(\"!=\", function(context, left, right) {\n    var eqnull = state.option.eqnull &&\n        ((left && left.value) === \"null\" || (right && right.value) === \"null\");\n\n    if (!eqnull && state.option.eqeqeq) {\n      this.from = this.character;\n      warning(\"W116\", this, \"!==\", \"!=\");\n    } else if (isTypoTypeof(right, left, state)) {\n      /* istanbul ignore next */\n      warning(\"W122\", this, right.value);\n    } else if (isTypoTypeof(left, right, state)) {\n      warning(\"W122\", this, left.value);\n    }\n    return this;\n  });\n  relation(\"!==\", function(context, left, right) {\n    if (isTypoTypeof(right, left, state)) {\n      warning(\"W122\", this, right.value);\n    } else if (isTypoTypeof(left, right, state)) {\n      /* istanbul ignore next */\n      warning(\"W122\", this, left.value);\n    }\n    return this;\n  });\n  relation(\"<\");\n  relation(\">\");\n  relation(\"<=\");\n  relation(\">=\");\n  bitwise(\"<<\", \"shiftleft\", 120);\n  bitwise(\">>\", \"shiftright\", 120);\n  bitwise(\">>>\", \"shiftrightunsigned\", 120);\n  infix(\"in\", \"in\", 120);\n  infix(\"instanceof\", function(context, left, token) {\n    var right;\n    var scope = state.funct[\"(scope)\"];\n    token.left = left;\n    token.right = right = expression(context, 120);\n\n    // This condition reflects a syntax error which will be reported by the\n    // `expression` function.\n    if (!right) {\n      return token;\n    }\n\n    if (right.id === \"(number)\" ||\n        right.id === \"(string)\" ||\n        right.value === \"null\" ||\n        (right.value === \"undefined\" && !scope.has(\"undefined\")) ||\n        right.arity === \"unary\" ||\n        right.id === \"{\" ||\n        (right.id === \"[\" && !right.right) ||\n        right.id === \"(regexp)\" ||\n        (right.id === \"(template)\" && !right.tag)) {\n      error(\"E060\");\n    }\n\n    if (right.id === \"function\") {\n      warning(\"W139\");\n    }\n\n    return token;\n  }, 120);\n  infix(\"+\", function(context, left, that) {\n    var next = state.tokens.next;\n    var right;\n    that.left = left;\n    that.right = right = expression(context, 130);\n\n    if (left && right && left.id === \"(string)\" && right.id === \"(string)\") {\n      left.value += right.value;\n      left.character = right.character;\n      if (!state.option.scripturl && reg.javascriptURL.test(left.value)) {\n        warning(\"W050\", left);\n      }\n      return left;\n    }\n\n    if (next.id === \"+\" || next.id === \"++\") {\n      warning(\"W007\", that.right);\n    }\n\n    return that;\n  }, 130);\n  prefix(\"+\", function(context) {\n    var next = state.tokens.next;\n    this.arity = \"unary\";\n    this.right = expression(context, 150);\n\n    if (next.id === \"+\" || next.id === \"++\") {\n      warning(\"W007\", this.right);\n    }\n\n    return this;\n  });\n  infix(\"-\", function(context, left, that) {\n    var next = state.tokens.next;\n    that.left = left;\n    that.right = expression(context, 130);\n\n    if (next.id === \"-\" || next.id === \"--\") {\n      warning(\"W006\", that.right);\n    }\n\n    return that;\n  }, 130);\n  prefix(\"-\", function(context) {\n    var next = state.tokens.next;\n    this.arity = \"unary\";\n    this.right = expression(context, 150);\n\n    if (next.id === \"-\" || next.id === \"--\") {\n      warning(\"W006\", this.right);\n    }\n\n    return this;\n  });\n  infix(\"*\", \"mult\", 140);\n  infix(\"/\", \"div\", 140);\n  infix(\"%\", \"mod\", 140);\n\n  suffix(\"++\");\n  prefix(\"++\", \"preinc\");\n  state.syntax[\"++\"].exps = true;\n\n  suffix(\"--\");\n  prefix(\"--\", \"predec\");\n  state.syntax[\"--\"].exps = true;\n\n  prefix(\"delete\", function(context) {\n    this.arity = \"unary\";\n    var p = expression(context, 150);\n    if (!p) {\n      return this;\n    }\n\n    if (p.id !== \".\" && p.id !== \"[\") {\n      warning(\"W051\");\n    }\n    this.first = p;\n\n    // The `delete` operator accepts unresolvable references when not in strict\n    // mode, so the operand may be undefined.\n    if (p.identifier && !state.isStrict()) {\n      p.forgiveUndef = true;\n    }\n    return this;\n  }).exps = true;\n\n  prefix(\"~\", function(context) {\n    if (state.option.bitwise) {\n      warning(\"W016\", this, \"~\");\n    }\n    this.arity = \"unary\";\n    this.right = expression(context, 150);\n    return this;\n  });\n\n  infix(\"...\");\n\n  prefix(\"!\", function(context) {\n    this.arity = \"unary\";\n    this.right = expression(context, 150);\n\n    if (!this.right) { // '!' followed by nothing? Give up.\n      quit(\"E041\", this);\n    }\n\n    if (bang[this.right.id] === true) {\n      warning(\"W018\", this, \"!\");\n    }\n    return this;\n  });\n\n  prefix(\"typeof\", function(context) {\n    this.arity = \"unary\";\n    var p = expression(context, 150);\n    this.first = this.right = p;\n\n    if (!p) { // 'typeof' followed by nothing? Give up.\n      quit(\"E041\", this);\n    }\n\n    // The `typeof` operator accepts unresolvable references, so the operand\n    // may be undefined.\n    if (p.identifier) {\n      p.forgiveUndef = true;\n    }\n    return this;\n  });\n  prefix(\"new\", function(context) {\n    var mp = metaProperty(context, \"target\", function() {\n      if (!state.inES6(true)) {\n        warning(\"W119\", state.tokens.prev, \"new.target\", \"6\");\n      }\n      var inFunction, c = state.funct;\n      while (c) {\n        inFunction = !c[\"(global)\"];\n        if (!c[\"(arrow)\"]) { break; }\n        c = c[\"(context)\"];\n      }\n      if (!inFunction) {\n        warning(\"W136\", state.tokens.prev, \"new.target\");\n      }\n    });\n    if (mp) { return mp; }\n\n    var opening = state.tokens.next;\n    var c = expression(context, 155), i;\n\n    if (!c) {\n      return this;\n    }\n\n    if (!c.paren && c.rbp > 160) {\n      error(\"E024\", opening, opening.value);\n    }\n\n    if (c.id !== \"function\") {\n      if (c.identifier) {\n        switch (c.value) {\n        case \"Number\":\n        case \"String\":\n        case \"Boolean\":\n        case \"Math\":\n        case \"JSON\":\n          warning(\"W053\", state.tokens.prev, c.value);\n          break;\n        case \"Symbol\":\n          if (state.inES6()) {\n            warning(\"W053\", state.tokens.prev, c.value);\n          }\n          break;\n        case \"Function\":\n          if (!state.option.evil) {\n            warning(\"W054\");\n          }\n          break;\n        case \"Date\":\n        case \"RegExp\":\n        case \"this\":\n          break;\n        default:\n          i = c.value.substr(0, 1);\n          if (state.option.newcap && (i < \"A\" || i > \"Z\") &&\n            !state.funct[\"(scope)\"].isPredefined(c.value)) {\n            warning(\"W055\", state.tokens.curr);\n          }\n        }\n      } else {\n        if (c.id === \"?.\" && !c.paren) {\n          error(\"E024\", c, \"?.\");\n        } else if (c.id !== \".\" && c.id !== \"[\" && c.id !== \"(\") {\n          /* istanbul ignore next */\n          warning(\"W056\", state.tokens.curr);\n        }\n      }\n    } else {\n      if (!state.option.supernew)\n        warning(\"W057\", this);\n    }\n    if (state.tokens.next.id !== \"(\" && !state.option.supernew) {\n      warning(\"W058\", state.tokens.curr, state.tokens.curr.value);\n    }\n    this.first = this.right = c;\n    return this;\n  });\n  state.syntax[\"new\"].exps = true;\n\n\n  var classDeclaration = blockstmt(\"class\", function(context) {\n    var className, classNameToken;\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, \"class\", \"6\");\n    }\n    state.inClassBody = true;\n\n    // Class Declaration: 'class <Classname>'\n    if (state.tokens.next.identifier && state.tokens.next.value !== \"extends\") {\n      classNameToken = state.tokens.next;\n      className = classNameToken.value;\n      identifier(context);\n      // unintialized, so that the 'extends' clause is parsed while the class is in TDZ\n      state.funct[\"(scope)\"].addbinding(className, {\n        type: \"class\",\n        initialized: false,\n        token: classNameToken\n      });\n    }\n\n    // Class Declaration: 'class <Classname> extends <Superclass>'\n    if (state.tokens.next.value === \"extends\") {\n      advance(\"extends\");\n      expression(context, 0);\n    }\n\n    if (classNameToken) {\n      this.name = classNameToken;\n      state.funct[\"(scope)\"].initialize(className);\n    } else {\n      this.name = null;\n    }\n\n    state.funct[\"(scope)\"].stack();\n    classBody(this, context);\n    return this;\n  });\n  classDeclaration.exps = true;\n  classDeclaration.declaration = true;\n\n  /*\n    Class expression\n\n    The Block- and Expression- handling for \"class\" are almost identical, except for the ordering of steps.\n    In an expression:, the name should not be saved into the calling scope, but is still accessible inside the definition, so we open a new scope first, then save the name. We also mark it as used.\n  */\n  prefix(\"class\", function(context) {\n    var className, classNameToken;\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, \"class\", \"6\");\n    }\n    state.inClassBody = true;\n\n    // Class Declaration: 'class <Classname>'\n    if (state.tokens.next.identifier && state.tokens.next.value !== \"extends\") {\n      classNameToken = state.tokens.next;\n      className = classNameToken.value;\n      identifier(context);\n    }\n\n    // Class Declaration: 'class <Classname> extends <Superclass>'\n    if (state.tokens.next.value === \"extends\") {\n      advance(\"extends\");\n      expression(context, 0);\n    }\n\n    state.funct[\"(scope)\"].stack();\n    if (classNameToken) {\n      this.name = classNameToken;\n      state.funct[\"(scope)\"].addbinding(className, {\n        type: \"class\",\n        initialized: true,\n        token: classNameToken\n      });\n      state.funct[\"(scope)\"].block.use(className, classNameToken);\n    } else {\n      this.name = null;\n    }\n\n    classBody(this, context);\n    return this;\n  });\n\n  function classBody(classToken, context) {\n    var props = Object.create(null);\n    var name, accessorType, token, isStatic, inGenerator, hasConstructor;\n\n    /* istanbul ignore else */\n    if (state.tokens.next.value === \"{\") {\n      advance(\"{\");\n    } else {\n      warning(\"W116\", state.tokens.curr, \"identifier\", state.tokens.next.type); //?\n      advance();\n    }\n\n    while (state.tokens.next.value !== \"}\") {\n      isStatic = false;\n      inGenerator = false;\n      context &= ~prodParams.preAsync;\n\n      if (state.tokens.next.value === \"static\" &&\n        !checkPunctuator(peek(), \"(\")) {\n        isStatic = true;\n        advance();\n      }\n\n      if (state.tokens.next.value === \"async\") {\n        if (!checkPunctuator(peek(), \"(\")) {\n          context |= prodParams.preAsync;\n          advance();\n\n          nolinebreak(state.tokens.curr);\n\n          if (checkPunctuator(state.tokens.next, \"*\")) {\n            inGenerator = true;\n            advance(\"*\");\n\n            if (!state.inES9()) {\n              warning(\"W119\", state.tokens.next, \"async generators\", \"9\");\n            }\n          }\n\n          if (!state.inES8()) {\n            warning(\"W119\", state.tokens.curr, \"async functions\", \"8\");\n          }\n        }\n      }\n\n      if (state.tokens.next.value === \"*\") {\n        inGenerator = true;\n        advance();\n      }\n\n      token = state.tokens.next;\n\n      if ((token.value === \"set\" || token.value === \"get\") && !checkPunctuator(peek(), \"(\")) {\n        if (inGenerator) {\n          /* istanbul ignore next */\n          error(\"E024\", token, token.value);\n        }\n        accessorType = token.value;\n        advance();\n        token = state.tokens.next;\n\n        if (!isStatic && token.value === \"constructor\") {\n          error(\"E049\", token, \"class \" + accessorType + \"ter method\", token.value);\n        } else if (isStatic && token.value === \"prototype\") {\n          error(\"E049\", token, \"static class \" + accessorType + \"ter method\", token.value);\n        }\n      } else {\n        accessorType = null;\n      }\n\n      switch (token.value) {\n        case \";\":\n          warning(\"W032\", token);\n          advance();\n          break;\n        case \"constructor\":\n          if (isStatic) {\n            // treat like a regular method -- static methods can be called 'constructor'\n            name = propertyName(context);\n            saveProperty(props, name, token, true, isStatic);\n            doMethod(classToken, context, name, inGenerator);\n          } else {\n            if (inGenerator || context & prodParams.preAsync) {\n              error(\"E024\", token, token.value);\n            } else if (hasConstructor) {\n              /* istanbul ignore next */\n              error(\"E024\", token, token.value);\n            } else {\n              hasConstructor = !accessorType && !isStatic;\n            }\n            advance();\n            doMethod(classToken, context, state.nameStack.infer());\n          }\n          break;\n        case \"[\":\n          name = computedPropertyName(context);\n          doMethod(classToken, context, name, inGenerator);\n          // We don't check names (via calling saveProperty()) of computed expressions like [\"Symbol.iterator\"]()\n          break;\n        default:\n          name = propertyName(context);\n          if (name === undefined) {\n            error(\"E024\", token, token.value);\n            advance();\n            break;\n          }\n\n          if (accessorType) {\n            saveAccessor(accessorType, props, name, token, true, isStatic);\n            name = state.nameStack.infer();\n          } else {\n            if (isStatic && name === \"prototype\") {\n              error(\"E049\", token, \"static class method\", name);\n            }\n\n            saveProperty(props, name, token, true, isStatic);\n          }\n\n          doMethod(classToken, context, name, inGenerator);\n          break;\n      }\n    }\n    advance(\"}\");\n    checkProperties(props);\n\n    state.inClassBody = false;\n    state.funct[\"(scope)\"].unstack();\n  }\n\n  function doMethod(classToken, context, name, generator) {\n    if (generator) {\n      if (!state.inES6()) {\n        warning(\"W119\", state.tokens.curr, \"function*\", \"6\");\n      }\n    }\n\n    if (state.tokens.next.value !== \"(\") {\n      error(\"E054\", state.tokens.next, state.tokens.next.value);\n      advance();\n      if (state.tokens.next.value === \"{\") {\n        // manually cheating the test \"invalidClasses\", which asserts this particular behavior when a class is misdefined.\n        advance();\n        if (state.tokens.next.value === \"}\") {\n          warning(\"W116\", state.tokens.next, \"(\", state.tokens.next.value);\n          advance();\n          identifier(context);\n          advance();\n        }\n        /* istanbul ignore next */\n        return;\n      } else {\n        while (state.tokens.next.value !== \"(\") {\n          advance();\n        }\n      }\n    }\n\n    doFunction(context, { name: name,\n        type: generator ? \"generator\" : null,\n        isMethod: true,\n        statement: classToken });\n  }\n\n  prefix(\"void\").exps = true;\n\n  infix(\".\", function(context, left, that) {\n    var m = identifier(context, true);\n\n    if (typeof m === \"string\") {\n      countMember(m);\n    }\n\n    that.left = left;\n    that.right = m;\n\n    if (m && m === \"hasOwnProperty\" && state.tokens.next.value === \"=\") {\n      warning(\"W001\");\n    }\n\n    if (left && left.value === \"arguments\" && (m === \"callee\" || m === \"caller\")) {\n      if (state.option.noarg)\n        warning(\"W059\", left, m);\n      else if (state.isStrict())\n        error(\"E008\");\n    } else if (!state.option.evil && left && left.value === \"document\" &&\n        (m === \"write\" || m === \"writeln\")) {\n      warning(\"W060\", left);\n    }\n\n    if (!state.option.evil && (m === \"eval\" || m === \"execScript\")) {\n      if (isGlobalEval(left, state)) {\n        warning(\"W061\");\n      }\n    }\n\n    return that;\n  }, 160, true);\n\n  infix(\"?.\", function(context, left, that) {\n    if (!state.inES11()) {\n      warning(\"W119\", state.tokens.curr, \"Optional chaining\", \"11\");\n    }\n\n\n    if (checkPunctuator(state.tokens.next, \"[\")) {\n      that.left = left;\n      advance();\n      that.right = state.tokens.curr.led(context, left);\n    } else if (checkPunctuator(state.tokens.next, \"(\")) {\n      that.left = left;\n      advance();\n      that.right = state.tokens.curr.led(context, left);\n      that.exps = true;\n    } else {\n      state.syntax[\".\"].led.call(that, context, left);\n    }\n\n    if (state.tokens.next.type === \"(template)\") {\n      error(\"E024\", state.tokens.next, \"`\");\n    }\n\n    return that;\n  }, 160, true);\n\n\n  /**\n   * Determine if a CallExpression's \"base\" is a type of expression commonly\n   * used in this position.\n   *\n   * @param {token} token - token describing the \"base\" of the CallExpression\n   * @returns {boolean}\n   */\n  function isTypicalCallExpression(token) {\n    return token.identifier || token.id === \".\" || token.id === \"[\" ||\n      token.id === \"=>\" || token.id === \"(\" || token.id === \"&&\" ||\n      token.id === \"||\" || token.id === \"?\" || token.id === \"async\" ||\n      token.id === \"?.\" || (state.inES6() && token[\"(name)\"]);\n  }\n\n  infix(\"(\", function(context, left, that) {\n    if (state.option.immed && left && !left.immed && left.id === \"function\") {\n      warning(\"W062\");\n    }\n\n    if (state.option.asi && checkPunctuators(state.tokens.prev, [\")\", \"]\"]) &&\n      !sameLine(state.tokens.prev, state.tokens.curr)) {\n      warning(\"W014\", state.tokens.curr, state.tokens.curr.id);\n    }\n\n    var n = 0;\n    var p = [];\n\n    if (left) {\n      if (left.type === \"(identifier)\") {\n        var newcapRe = /^[A-Z]([A-Z0-9_$]*[a-z][A-Za-z0-9_$]*)?$/;\n        var newcapIgnore = [\n          \"Array\", \"Boolean\", \"Date\", \"Error\", \"Function\", \"Number\",\n          \"Object\", \"RegExp\", \"String\", \"Symbol\"\n        ];\n        if (newcapRe.test(left.value) && newcapIgnore.indexOf(left.value) === -1) {\n          if (left.value === \"Math\") {\n            /* istanbul ignore next */\n            warning(\"W063\", left);\n          } else if (state.option.newcap) {\n            warning(\"W064\", left);\n          }\n        }\n      }\n    }\n\n    if (state.tokens.next.id !== \")\") {\n      for (;;) {\n        spreadrest(\"spread\");\n\n        p[p.length] = expression(context, 10);\n        n += 1;\n        if (state.tokens.next.id !== \",\") {\n          break;\n        }\n        advance(\",\");\n        checkComma({ allowTrailing: true });\n\n        if (state.tokens.next.id === \")\") {\n          if (!state.inES8()) {\n            warning(\"W119\", state.tokens.curr, \"Trailing comma in arguments lists\", \"8\");\n          }\n\n          break;\n        }\n      }\n    }\n\n    advance(\")\");\n\n    if (typeof left === \"object\") {\n      if (!state.inES5() && left.value === \"parseInt\" && n === 1) {\n        warning(\"W065\", state.tokens.curr);\n      }\n      if (!state.option.evil) {\n        if (left.value === \"eval\" || left.value === \"Function\" ||\n            left.value === \"execScript\") {\n          warning(\"W061\", left);\n\n          // This conditional expression was initially implemented with a typo\n          // which prevented the branch's execution in all cases. While\n          // enabling the code will produce behavior that is consistent with\n          // the other forms of code evaluation that follow, such a change is\n          // also technically incompatable with prior versions of JSHint (due\n          // to the fact that the behavior was never formally documented). This\n          // branch should be enabled as part of a major release.\n          //if (p[0] && p[0].id === \"(string)\") {\n          //  addEvalCode(left, p[0]);\n          //}\n        } else if (p[0] && p[0].id === \"(string)\" &&\n             (left.value === \"setTimeout\" ||\n            left.value === \"setInterval\")) {\n          warning(\"W066\", left);\n          addEvalCode(left, p[0]);\n\n        // window.setTimeout/setInterval\n        } else if (p[0] && p[0].id === \"(string)\" &&\n             left.value === \".\" &&\n             left.left.value === \"window\" &&\n             (left.right === \"setTimeout\" ||\n            left.right === \"setInterval\")) {\n          warning(\"W066\", left);\n          addEvalCode(left, p[0]);\n        }\n      }\n      if (!isTypicalCallExpression(left)) {\n        warning(\"W067\", that);\n      }\n    }\n\n    that.left = left;\n    return that;\n  }, 155, true).exps = true;\n\n  function peekThroughParens(parens) {\n    var pn = state.tokens.next;\n    var i = -1;\n    var pn1;\n\n    do {\n      if (pn.value === \"(\") {\n        parens += 1;\n      } else if (pn.value === \")\") {\n        parens -= 1;\n      }\n\n      i += 1;\n      pn1 = pn;\n      pn = peek(i);\n    } while (!(parens === 0 && pn1.value === \")\") && pn.type !== \"(end)\");\n\n    return pn;\n  }\n\n  prefix(\"(\", function(context, rbp) {\n    var ret, triggerFnExpr, first, last;\n    var opening = state.tokens.curr;\n    var preceeding = state.tokens.prev;\n    var isNecessary = !state.option.singleGroups;\n    var pn = peekThroughParens(1);\n\n    if (state.tokens.next.id === \"function\") {\n      triggerFnExpr = state.tokens.next.immed = true;\n    }\n\n    // If the balanced grouping operator is followed by a \"fat arrow\", the\n    // current token marks the beginning of a \"fat arrow\" function and parsing\n    // should proceed accordingly.\n    if (pn.value === \"=>\") {\n      pn.funct = doFunction(context, { type: \"arrow\", parsedOpening: true });\n      return pn;\n    }\n\n    // The ECMA262 grammar requires an expression between the \"opening\n    // parenthesis\" and \"close parenthesis\" tokens of the grouping operator.\n    // However, the \"ignore\" directive is commonly used to inject values that\n    // are not included in the token stream. For example:\n    //\n    //     return (\n    //       /*jshint ignore:start */\n    //       <div></div>\n    //       /*jshint ignore:end */\n    //     );\n    //\n    // The \"empty\" grouping operator is permitted in order to tolerate this\n    // pattern.\n    if (state.tokens.next.id === \")\") {\n      advance(\")\");\n      return;\n    }\n\n    ret = expression(context, 0);\n\n    advance(\")\", this);\n\n    if (!ret) {\n      return;\n    }\n\n    ret.paren = true;\n\n    if (state.option.immed && ret && ret.id === \"function\") {\n      if (state.tokens.next.id !== \"(\" &&\n        state.tokens.next.id !== \".\" && state.tokens.next.id !== \"[\") {\n        warning(\"W068\", this);\n      }\n    }\n\n    if (ret.id === \",\") {\n      first = ret.left;\n      while (first.id === \",\") {\n        first = first.left;\n      }\n\n      last = ret.right;\n    } else {\n      first = last = ret;\n\n      if (!isNecessary) {\n        // async functions are identified after parsing due to the complexity\n        // of disambiguating the `async` keyword.\n        if (!triggerFnExpr) {\n          triggerFnExpr = ret.id === \"async\";\n        }\n\n        isNecessary =\n          // Used to distinguish from an ExpressionStatement which may not\n          // begin with the `{` and `function` tokens\n          (opening.beginsStmt && (ret.id === \"{\" || triggerFnExpr)) ||\n          // Used to signal that a function expression is being supplied to\n          // some other operator.\n          (triggerFnExpr &&\n            // For parenthesis wrapping a function expression to be considered\n            // necessary, the grouping operator should be the left-hand-side of\n            // some other operator--either within the parenthesis or directly\n            // following them.\n            (!isEndOfExpr() || state.tokens.prev.id !== \"}\")) ||\n          // Used to demarcate an arrow function as the left-hand side of some\n          // operator.\n          (ret.id === \"=>\" && !isEndOfExpr()) ||\n          // Used as the return value of a single-statement arrow function\n          (ret.id === \"{\" && preceeding.id === \"=>\") ||\n          // Used to cover a unary expression as the left-hand side of the\n          // exponentiation operator\n          (beginsUnaryExpression(ret) && state.tokens.next.id === \"**\") ||\n          // Used to cover a logical operator as the right-hand side of the\n          // nullish coalescing operator\n          (preceeding.id === \"??\" && (ret.id === \"&&\" || ret.id === \"||\")) ||\n          // Used to delineate an integer number literal from a dereferencing\n          // punctuator (otherwise interpreted as a decimal point)\n          (ret.type === \"(number)\" &&\n            checkPunctuator(pn, \".\") && /^\\d+$/.test(ret.value)) ||\n          // Used to wrap object destructuring assignment\n          (opening.beginsStmt && ret.id === \"=\" && ret.left.id === \"{\") ||\n          // Used to allow optional chaining with other language features which\n          // are otherwise restricted.\n          (ret.id === \"?.\" &&\n              (preceeding.id === \"new\" || state.tokens.next.type === \"(template)\"));\n      }\n    }\n\n    // The operator may be necessary to override the default binding power of\n    // neighboring operators (whenever there is an operator in use within the\n    // first expression *or* the current group contains multiple expressions)\n    if (!isNecessary && (isOperator(first) || first !== last)) {\n      isNecessary =\n        (rbp > first.lbp) ||\n        (rbp > 0 && rbp === first.lbp) ||\n        (!isEndOfExpr() && last.rbp < state.tokens.next.lbp);\n    }\n\n    if (!isNecessary) {\n      warning(\"W126\", opening);\n    }\n\n    return ret;\n  });\n\n  application(\"=>\").rbp = 161;\n\n  infix(\"[\", function(context, left, that) {\n    var e, s, canUseDot;\n\n    if (state.option.asi && checkPunctuators(state.tokens.prev, [\")\", \"]\"]) &&\n      !sameLine(state.tokens.prev, state.tokens.curr)) {\n      warning(\"W014\", state.tokens.curr, state.tokens.curr.id);\n    }\n\n    e = expression(context & ~prodParams.noin, 0);\n\n    if (e && e.type === \"(string)\") {\n      if (!state.option.evil && (e.value === \"eval\" || e.value === \"execScript\")) {\n        if (isGlobalEval(left, state)) {\n          warning(\"W061\");\n        }\n      }\n\n      countMember(e.value);\n      if (!state.option.sub && reg.identifier.test(e.value)) {\n        s = state.syntax[e.value];\n\n        if (s) {\n          canUseDot = !isReserved(context, s);\n        } else {\n          // This branch exists to preserve legacy behavior with version 2.9.5\n          // and earlier. In those releases, `eval` and `arguments` were\n          // incorrectly interpreted as reserved keywords, so Member\n          // Expressions such as `object[\"eval\"]` did not trigger warning W069.\n          //\n          // TODO: Remove in JSHint 3\n          canUseDot = e.value !== \"eval\" && e.value !== \"arguments\";\n        }\n\n        if (canUseDot) {\n          warning(\"W069\", state.tokens.prev, e.value);\n        }\n      }\n    }\n    advance(\"]\", that);\n\n    if (e && e.value === \"hasOwnProperty\" && state.tokens.next.value === \"=\") {\n      warning(\"W001\");\n    }\n\n    that.left = left;\n    that.right = e;\n    return that;\n  }, 160, true);\n\n  function comprehensiveArrayExpression(context) {\n    var res = {};\n    res.exps = true;\n    state.funct[\"(comparray)\"].stack();\n\n    // Handle reversed for expressions, used in spidermonkey\n    var reversed = false;\n    if (state.tokens.next.value !== \"for\") {\n      reversed = true;\n      if (!state.inMoz()) {\n        warning(\"W116\", state.tokens.next, \"for\", state.tokens.next.value);\n      }\n      state.funct[\"(comparray)\"].setState(\"use\");\n      res.right = expression(context, 10);\n    }\n\n    advance(\"for\");\n    if (state.tokens.next.value === \"each\") {\n      advance(\"each\");\n      if (!state.inMoz()) {\n        warning(\"W118\", state.tokens.curr, \"for each\");\n      }\n    }\n    advance(\"(\");\n    state.funct[\"(comparray)\"].setState(\"define\");\n    res.left = expression(context, 130);\n    if (_.includes([\"in\", \"of\"], state.tokens.next.value)) {\n      advance();\n    } else {\n      /* istanbul ignore next */\n      error(\"E045\", state.tokens.curr);\n    }\n    state.funct[\"(comparray)\"].setState(\"generate\");\n    expression(context, 10);\n\n    advance(\")\");\n    if (state.tokens.next.value === \"if\") {\n      advance(\"if\");\n      advance(\"(\");\n      state.funct[\"(comparray)\"].setState(\"filter\");\n      expression(context, 10);\n      advance(\")\");\n    }\n\n    if (!reversed) {\n      state.funct[\"(comparray)\"].setState(\"use\");\n      res.right = expression(context, 10);\n    }\n\n    advance(\"]\");\n    state.funct[\"(comparray)\"].unstack();\n    return res;\n  }\n\n  prefix(\"[\", function(context) {\n    var blocktype = lookupBlockType();\n    if (blocktype.isCompArray) {\n      if (!state.option.esnext && !state.inMoz()) {\n        warning(\"W118\", state.tokens.curr, \"array comprehension\");\n      }\n      return comprehensiveArrayExpression(context);\n    } else if (blocktype.isDestAssign) {\n      this.destructAssign = destructuringPattern(context, {\n          openingParsed: true,\n          assignment: true\n        });\n      return this;\n    }\n    var b = !sameLine(state.tokens.curr, state.tokens.next);\n    this.first = [];\n    if (b) {\n      indent += state.option.indent;\n      if (state.tokens.next.from === indent + state.option.indent) {\n        /* istanbul ignore next */\n        indent += state.option.indent;\n      }\n    }\n    while (state.tokens.next.id !== \"(end)\") {\n      while (state.tokens.next.id === \",\") {\n        if (!state.option.elision) {\n          if (!state.inES5()) {\n            // Maintain compat with old options --- ES5 mode without\n            // elision=true will warn once per comma\n            warning(\"W070\");\n          } else {\n            warning(\"W128\");\n            do {\n              advance(\",\");\n            } while (state.tokens.next.id === \",\");\n            continue;\n          }\n        }\n        advance(\",\");\n      }\n\n      if (state.tokens.next.id === \"]\") {\n        break;\n      }\n\n      spreadrest(\"spread\");\n\n      this.first.push(expression(context, 10));\n      if (state.tokens.next.id === \",\") {\n        advance(\",\");\n        checkComma({ allowTrailing: true });\n        if (state.tokens.next.id === \"]\" && !state.inES5()) {\n          warning(\"W070\", state.tokens.curr);\n          break;\n        }\n      } else {\n        if (state.option.trailingcomma && state.inES5()) {\n          warningAt(\"W140\", state.tokens.curr.line, state.tokens.curr.character);\n        }\n        break;\n      }\n    }\n    if (b) {\n      indent -= state.option.indent;\n    }\n    advance(\"]\", this);\n    return this;\n  });\n\n\n  function isMethod() {\n    return !!state.funct[\"(method)\"];\n  }\n\n  /**\n   * Retrieve the value of the next token if it is a valid LiteralPropertyName\n   * and optionally advance the parser.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   *\n   * @returns {string|undefined} - the value of the identifier, if present\n   */\n  function propertyName(context) {\n    var id = optionalidentifier(context, true);\n\n    if (!id) {\n      if (state.tokens.next.id === \"(string)\") {\n        id = state.tokens.next.value;\n        advance();\n      } else if (state.tokens.next.id === \"(number)\") {\n        id = state.tokens.next.value.toString();\n        advance();\n      }\n    }\n\n    if (id === \"hasOwnProperty\") {\n      warning(\"W001\");\n    }\n\n    return id;\n  }\n\n  /**\n   * @param {Number} context The parsing context\n   * @param {Object} [options]\n   * @param {token} [options.loneArg] The argument to the function in cases\n   *                                  where it was defined using the\n   *                                  single-argument shorthand.\n   * @param {bool} [options.parsedOpening] Whether the opening parenthesis has\n   *                                       already been parsed.\n   *\n   * @returns {{ arity: number, params: Array.<string>, isSimple: boolean }}\n   */\n  function functionparams(context, options) {\n    var next;\n    var paramsIds = [];\n    var ident;\n    var tokens = [];\n    var t;\n    var pastDefault = false;\n    var pastRest = false;\n    var arity = 0;\n    var loneArg = options && options.loneArg;\n    var hasDestructuring = false;\n\n    if (loneArg && loneArg.identifier === true) {\n      state.funct[\"(scope)\"].addParam(loneArg.value, loneArg);\n      return { arity: 1, params: [ loneArg.value ], isSimple: true };\n    }\n\n    next = state.tokens.next;\n\n    if (!options || !options.parsedOpening) {\n      advance(\"(\");\n    }\n\n    if (state.tokens.next.id === \")\") {\n      advance(\")\");\n      return;\n    }\n\n    function addParam(addParamArgs) {\n      state.funct[\"(scope)\"].addParam.apply(state.funct[\"(scope)\"], addParamArgs);\n    }\n\n    for (;;) {\n      arity++;\n      // are added to the param scope\n      var currentParams = [];\n\n      pastRest = spreadrest(\"rest\");\n\n      if (_.includes([\"{\", \"[\"], state.tokens.next.id)) {\n        hasDestructuring = true;\n        tokens = destructuringPattern(context);\n        for (t in tokens) {\n          t = tokens[t];\n          if (t.id) {\n            paramsIds.push(t.id);\n            currentParams.push([t.id, t.token]);\n          }\n        }\n      } else {\n        ident = identifier(context);\n\n        if (ident) {\n          paramsIds.push(ident);\n          currentParams.push([ident, state.tokens.curr]);\n        } else {\n          // Skip invalid parameter.\n          while (!checkPunctuators(state.tokens.next, [\",\", \")\"])) advance();\n        }\n      }\n\n      // It is valid to have a regular argument after a default argument\n      // since undefined can be used for missing parameters. Still warn as it is\n      // a possible code smell.\n      if (pastDefault) {\n        if (state.tokens.next.id !== \"=\") {\n          error(\"W138\", state.tokens.curr);\n        }\n      }\n      if (state.tokens.next.id === \"=\") {\n        if (!state.inES6()) {\n          warning(\"W119\", state.tokens.next, \"default parameters\", \"6\");\n        }\n\n        if (pastRest) {\n          error(\"E062\", state.tokens.next);\n        }\n\n        advance(\"=\");\n        pastDefault = true;\n        expression(context, 10);\n      }\n\n      // now we have evaluated the default expression, add the variable to the param scope\n      currentParams.forEach(addParam);\n      if (state.tokens.next.id === \",\") {\n        if (pastRest) {\n          warning(\"W131\", state.tokens.next);\n        }\n        advance(\",\");\n        checkComma({ allowTrailing: true });\n      }\n\n      if (state.tokens.next.id === \")\") {\n        if (state.tokens.curr.id === \",\" && !state.inES8()) {\n          warning(\"W119\", state.tokens.curr, \"Trailing comma in function parameters\", \"8\");\n        }\n\n        advance(\")\", next);\n        return {\n          arity: arity,\n          params: paramsIds,\n          isSimple: !hasDestructuring && !pastRest && !pastDefault\n        };\n      }\n    }\n  }\n\n  /**\n   * Factory function for creating objects used to track statistics of function\n   * literals.\n   *\n   * @param {string} name - the identifier name to associate with the function\n   * @param {object} [token] - token responsible for creating the function\n   *                           object\n   * @param {object} [overwrites] - a collection of properties that should\n   *                                override the corresponding default value of\n   *                                the new \"functor\" object\n   */\n  function functor(name, token, overwrites) {\n    var funct = {\n      \"(name)\"      : name,\n      \"(breakage)\"  : 0,\n      \"(loopage)\"   : 0,\n      // The strictness of the function body is tracked via a dedicated\n      // property (as opposed to via the global `state` object) so that the\n      // value can be referenced after the body has been fully parsed (i.e.\n      // when validating the identifier used in function declarations and\n      // function expressions).\n      \"(isStrict)\"  : \"unknown\",\n\n      \"(global)\"    : false,\n\n      \"(line)\"      : null,\n      \"(character)\" : null,\n      \"(metrics)\"   : null,\n      \"(statement)\" : null,\n      \"(context)\"   : null,\n      \"(scope)\"     : null,\n      \"(comparray)\" : null,\n      \"(yielded)\"   : null,\n      \"(arrow)\"     : null,\n      \"(async)\"     : null,\n      \"(params)\"    : null\n    };\n\n    if (token) {\n      _.extend(funct, {\n        \"(line)\"     : token.line,\n        \"(character)\": token.character,\n        \"(metrics)\"  : createMetrics(token)\n      });\n    }\n\n    _.extend(funct, overwrites);\n\n    if (funct[\"(context)\"]) {\n      funct[\"(scope)\"] = funct[\"(context)\"][\"(scope)\"];\n      funct[\"(comparray)\"]  = funct[\"(context)\"][\"(comparray)\"];\n    }\n\n    return funct;\n  }\n\n  /**\n   * Determine if the parser has begun parsing executable code.\n   *\n   * @param {Token} funct - The current \"functor\" token\n   *\n   * @returns {boolean}\n   */\n  function hasParsedCode(funct) {\n    return funct[\"(global)\"] && !funct[\"(verb)\"];\n  }\n\n  /**\n   * This function is used as both a null-denotation method *and* a\n   * left-denotation method, meaning the first parameter is overloaded.\n   */\n  function doTemplateLiteral(context, leftOrRbp) {\n    // ASSERT: this.type === \"(template)\"\n    // jshint validthis: true\n    var ctx = this.context;\n    var noSubst = this.noSubst;\n    var depth = this.depth;\n    var left = typeof leftOrRbp === \"number\" ? null : leftOrRbp;\n\n    if (!noSubst) {\n      while (!end()) {\n        if (!state.tokens.next.template || state.tokens.next.depth > depth) {\n          expression(context, 0); // should probably have different rbp?\n        } else {\n          // skip template start / middle\n          advance();\n        }\n      }\n    }\n\n    return {\n      id: \"(template)\",\n      type: \"(template)\",\n      tag: left\n    };\n\n    function end() {\n      if (state.tokens.curr.template && state.tokens.curr.tail &&\n          state.tokens.curr.context === ctx) {\n        /* istanbul ignore next */\n        return true;\n      }\n      var complete = (state.tokens.next.template && state.tokens.next.tail &&\n                      state.tokens.next.context === ctx);\n      if (complete) advance();\n      return complete || state.tokens.next.isUnclosed;\n    }\n  }\n\n  /**\n   * Parse a function literal.\n   *\n   * @param {Number} context The parsing context\n   * @param {Object} [options]\n   * @param {string} [options.name] The identifier belonging to the function (if\n   *                                any)\n   * @param {token} [options.statement] The statement that triggered creation\n   *                                    of the current function.\n   * @param {string} [options.type] If specified, either \"generator\" or \"arrow\"\n   * @param {token} [options.loneArg] The argument to the function in cases\n   *                                  where it was defined using the\n   *                                  single-argument shorthand\n   * @param {bool} [options.parsedOpening] Whether the opening parenthesis has\n   *                                       already been parsed\n   * @param {string} [options.classExprBinding] Define a function with this\n   *                                            identifier in the new function's\n   *                                            scope, mimicking the bahavior of\n   *                                            class expression names within\n   *                                            the body of member functions.\n   */\n  function doFunction(context, options) {\n    var f, token, name, statement, classExprBinding, isGenerator, isArrow,\n      isMethod, ignoreLoopFunc;\n    var oldOption = state.option;\n    var oldIgnored = state.ignored;\n    var isAsync = context & prodParams.preAsync;\n\n    if (options) {\n      name = options.name;\n      statement = options.statement;\n      classExprBinding = options.classExprBinding;\n      isGenerator = options.type === \"generator\";\n      isArrow = options.type === \"arrow\";\n      isMethod = options.isMethod;\n      ignoreLoopFunc = options.ignoreLoopFunc;\n    }\n\n    context &= ~prodParams.noin;\n    context &= ~prodParams.tryClause;\n\n    if (isAsync) {\n      context |= prodParams.async;\n    } else {\n      context &= ~prodParams.async;\n    }\n\n    if (isGenerator) {\n      context |= prodParams.yield;\n    } else if (!isArrow) {\n      context &= ~prodParams.yield;\n    }\n    context &= ~prodParams.preAsync;\n\n    state.option = Object.create(state.option);\n    state.ignored = Object.create(state.ignored);\n\n    state.funct = functor(name || state.nameStack.infer(), state.tokens.next, {\n      \"(statement)\": statement,\n      \"(context)\":   state.funct,\n      \"(arrow)\":     isArrow,\n      \"(method)\":    isMethod,\n      \"(async)\":     isAsync\n    });\n\n    f = state.funct;\n    token = state.tokens.curr;\n\n    functions.push(state.funct);\n\n    // So that the function is available to itself and referencing itself is not\n    // seen as a closure, add the function name to a new scope, but do not\n    // test for unused (unused: false)\n    // it is a new block scope so that params can override it, it can be block scoped\n    // but declarations inside the function don't cause already declared error\n    state.funct[\"(scope)\"].stack(\"functionouter\");\n    var internallyAccessibleName = !isMethod && (name || classExprBinding);\n    if (internallyAccessibleName) {\n      state.funct[\"(scope)\"].block.add(internallyAccessibleName,\n        classExprBinding ? \"class\" : \"function\", state.tokens.curr, false);\n    }\n\n    if (!isArrow) {\n      state.funct[\"(scope)\"].funct.add(\"arguments\", \"var\", token, false);\n    }\n\n    // create the param scope (params added in functionparams)\n    state.funct[\"(scope)\"].stack(\"functionparams\");\n\n    var paramsInfo = functionparams(context, options);\n\n    if (paramsInfo) {\n      state.funct[\"(params)\"] = paramsInfo.params;\n      state.funct[\"(hasSimpleParams)\"] = paramsInfo.isSimple;\n      state.funct[\"(metrics)\"].arity = paramsInfo.arity;\n      state.funct[\"(metrics)\"].verifyMaxParametersPerFunction();\n    } else {\n      state.funct[\"(params)\"] = [];\n      state.funct[\"(metrics)\"].arity = 0;\n      state.funct[\"(hasSimpleParams)\"] = true;\n    }\n\n    if (isArrow) {\n      context &= ~prodParams.yield;\n\n      if (!state.inES6(true)) {\n        warning(\"W119\", state.tokens.curr, \"arrow function syntax (=>)\", \"6\");\n      }\n\n      if (!options.loneArg) {\n        advance(\"=>\");\n      }\n    }\n\n    block(context, false, true, true, isArrow);\n\n    if (!state.option.noyield && isGenerator && !state.funct[\"(yielded)\"]) {\n      warning(\"W124\", state.tokens.curr);\n    }\n\n    state.funct[\"(metrics)\"].verifyMaxStatementsPerFunction();\n    state.funct[\"(metrics)\"].verifyMaxComplexityPerFunction();\n    state.funct[\"(unusedOption)\"] = state.option.unused;\n    state.option = oldOption;\n    state.ignored = oldIgnored;\n    state.funct[\"(last)\"] = state.tokens.curr.line;\n    state.funct[\"(lastcharacter)\"] = state.tokens.curr.character;\n\n    // unstack the params scope\n    state.funct[\"(scope)\"].unstack(); // also does usage and label checks\n\n    // unstack the function outer stack\n    state.funct[\"(scope)\"].unstack();\n\n    state.funct = state.funct[\"(context)\"];\n\n    if (!ignoreLoopFunc && !state.option.loopfunc && state.funct[\"(loopage)\"]) {\n      // If the function we just parsed accesses any non-local variables\n      // trigger a warning. Otherwise, the function is safe even within\n      // a loop.\n      if (f[\"(outerMutables)\"]) {\n        warning(\"W083\", token, f[\"(outerMutables)\"].join(\", \"));\n      }\n    }\n\n    return f;\n  }\n\n  function createMetrics(functionStartToken) {\n    return {\n      statementCount: 0,\n      nestedBlockDepth: -1,\n      ComplexityCount: 1,\n      arity: 0,\n\n      verifyMaxStatementsPerFunction: function() {\n        if (state.option.maxstatements &&\n          this.statementCount > state.option.maxstatements) {\n          warning(\"W071\", functionStartToken, this.statementCount);\n        }\n      },\n\n      verifyMaxParametersPerFunction: function() {\n        if (_.isNumber(state.option.maxparams) &&\n          this.arity > state.option.maxparams) {\n          warning(\"W072\", functionStartToken, this.arity);\n        }\n      },\n\n      verifyMaxNestedBlockDepthPerFunction: function() {\n        if (state.option.maxdepth &&\n          this.nestedBlockDepth > 0 &&\n          this.nestedBlockDepth === state.option.maxdepth + 1) {\n          warning(\"W073\", null, this.nestedBlockDepth);\n        }\n      },\n\n      verifyMaxComplexityPerFunction: function() {\n        var max = state.option.maxcomplexity;\n        var cc = this.ComplexityCount;\n        if (max && cc > max) {\n          warning(\"W074\", functionStartToken, cc);\n        }\n      }\n    };\n  }\n\n  function increaseComplexityCount() {\n    state.funct[\"(metrics)\"].ComplexityCount += 1;\n  }\n\n  // Parse assignments that were found instead of conditionals.\n  // For example: if (a = 1) { ... }\n\n  function checkCondAssignment(token) {\n    if (!token || token.paren) {\n      return;\n    }\n\n    if (token.id === \",\") {\n      checkCondAssignment(token.right);\n      return;\n    }\n\n    switch (token.id) {\n    case \"=\":\n    case \"+=\":\n    case \"-=\":\n    case \"*=\":\n    case \"%=\":\n    case \"&=\":\n    case \"|=\":\n    case \"^=\":\n    case \"/=\":\n      if (!state.option.boss) {\n        warning(\"W084\", token);\n      }\n    }\n  }\n\n  /**\n   * Validate the properties defined within an object literal or class body.\n   * See the `saveAccessor` and `saveProperty` functions for more detail.\n   *\n   * @param {object} props - Collection of objects describing the properties\n   *                         encountered\n   */\n  function checkProperties(props) {\n    // Check for lonely setters if in the ES5 mode.\n    if (state.inES5()) {\n      for (var name in props) {\n        if (props[name] && props[name].setterToken && !props[name].getterToken &&\n          !props[name].static) {\n          warning(\"W078\", props[name].setterToken);\n        }\n      }\n    }\n  }\n\n  function metaProperty(context, name, c) {\n    if (checkPunctuator(state.tokens.next, \".\")) {\n      var left = state.tokens.curr.id;\n      advance(\".\");\n      var id = identifier(context);\n      state.tokens.curr.isMetaProperty = true;\n      if (name !== id) {\n        error(\"E057\", state.tokens.prev, left, id);\n      } else {\n        c();\n      }\n      return state.tokens.curr;\n    }\n  }\n\n//object literals\n  (function(x) {\n    x.nud = function(context) {\n      var b, f, i, params, t, isGeneratorMethod = false, nextVal;\n      var props = Object.create(null); // All properties, including accessors\n      var isAsyncMethod = false;\n\n      b = !sameLine(state.tokens.curr, state.tokens.next);\n      if (b) {\n        indent += state.option.indent;\n        if (state.tokens.next.from === indent + state.option.indent) {\n          /* istanbul ignore next */\n          indent += state.option.indent;\n        }\n      }\n\n      var blocktype = lookupBlockType();\n      if (blocktype.isDestAssign) {\n        this.destructAssign = destructuringPattern(context, {\n            openingParsed: true,\n            assignment: true\n          });\n        return this;\n      }\n      state.inObjectBody = true;\n      for (;;) {\n        if (state.tokens.next.id === \"}\") {\n          break;\n        }\n\n        nextVal = state.tokens.next.value;\n        if (state.tokens.next.identifier &&\n            (peekIgnoreEOL().id === \",\" || peekIgnoreEOL().id === \"}\")) {\n          if (!state.inES6()) {\n            warning(\"W104\", state.tokens.next, \"object short notation\", \"6\");\n          }\n          t = expression(context, 10);\n          i = t && t.value;\n          if (t) {\n            saveProperty(props, i, t);\n          }\n\n        } else if (peek().id !== \":\" && (nextVal === \"get\" || nextVal === \"set\")) {\n          advance(nextVal);\n\n          if (!state.inES5()) {\n            error(\"E034\");\n          }\n\n          if (state.tokens.next.id === \"[\") {\n            i = computedPropertyName(context);\n          } else {\n            i = propertyName(context);\n\n            // ES6 allows for get() {...} and set() {...} method\n            // definition shorthand syntax, so we don't produce an error\n            // if linting ECMAScript 6 code.\n            if (!i && !state.inES6()) {\n              error(\"E035\");\n            }\n          }\n\n          // We don't want to save this getter unless it's an actual getter\n          // and not an ES6 concise method\n          if (i) {\n            saveAccessor(nextVal, props, i, state.tokens.curr);\n          }\n\n          t = state.tokens.next;\n          f = doFunction(context, { isMethod: true });\n          params = f[\"(params)\"];\n\n          // Don't warn about getter/setter pairs if this is an ES6 concise method\n          if (nextVal === \"get\" && i && params.length) {\n            warning(\"W076\", t, params[0], i);\n          } else if (nextVal === \"set\" && i && f[\"(metrics)\"].arity !== 1) {\n            warning(\"W077\", t, i);\n          }\n\n        } else if (spreadrest(\"spread\")) {\n          if (!state.inES9()) {\n            warning(\"W119\", state.tokens.next, \"object spread property\", \"9\");\n          }\n\n          expression(context, 10);\n        } else {\n          if (state.tokens.next.id === \"async\" && !checkPunctuators(peek(), [\"(\", \":\"])) {\n            if (!state.inES8()) {\n              warning(\"W119\", state.tokens.next, \"async functions\", \"8\");\n            }\n\n            isAsyncMethod = true;\n            advance();\n\n            nolinebreak(state.tokens.curr);\n          } else {\n            isAsyncMethod = false;\n          }\n\n          if (state.tokens.next.value === \"*\" && state.tokens.next.type === \"(punctuator)\") {\n            if (isAsyncMethod && !state.inES9()) {\n              warning(\"W119\", state.tokens.next, \"async generators\", \"9\");\n            } else if (!state.inES6()) {\n              warning(\"W104\", state.tokens.next, \"generator functions\", \"6\");\n            }\n\n            advance(\"*\");\n            isGeneratorMethod = true;\n          } else {\n            isGeneratorMethod = false;\n          }\n\n          if (state.tokens.next.id === \"[\") {\n            i = computedPropertyName(context);\n            state.nameStack.set(i);\n          } else {\n            state.nameStack.set(state.tokens.next);\n            i = propertyName(context);\n            saveProperty(props, i, state.tokens.next);\n\n            if (typeof i !== \"string\") {\n              break;\n            }\n          }\n\n          if (state.tokens.next.value === \"(\") {\n            if (!state.inES6()) {\n              warning(\"W104\", state.tokens.curr, \"concise methods\", \"6\");\n            }\n\n            doFunction(isAsyncMethod ? context | prodParams.preAsync : context, {\n              isMethod: true,\n              type: isGeneratorMethod ? \"generator\" : null\n            });\n          } else {\n            advance(\":\");\n            expression(context, 10);\n          }\n        }\n\n        countMember(i);\n\n        if (state.tokens.next.id === \",\") {\n          advance(\",\");\n          checkComma({ allowTrailing: true, property: true });\n          if (state.tokens.next.id === \",\") {\n            /* istanbul ignore next */\n            warning(\"W070\", state.tokens.curr);\n          } else if (state.tokens.next.id === \"}\" && !state.inES5()) {\n            warning(\"W070\", state.tokens.curr);\n          }\n        } else {\n          if (state.option.trailingcomma && state.inES5()) {\n            warningAt(\"W140\", state.tokens.curr.line, state.tokens.curr.character);\n          }\n          break;\n        }\n      }\n      if (b) {\n        indent -= state.option.indent;\n      }\n      advance(\"}\", this);\n\n      checkProperties(props);\n      state.inObjectBody = false;\n\n      return this;\n    };\n    x.fud = function() {\n      /* istanbul ignore next */\n      error(\"E036\", state.tokens.curr);\n    };\n  }(delim(\"{\")));\n\n  function destructuringPattern(context, options) {\n    var isAssignment = options && options.assignment;\n\n    context &= ~prodParams.noin;\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr,\n        isAssignment ? \"destructuring assignment\" : \"destructuring binding\", \"6\");\n    }\n\n    return destructuringPatternRecursive(context, options);\n  }\n\n  function destructuringPatternRecursive(context, options) {\n    var ids, idx;\n    var identifiers = [];\n    var openingParsed = options && options.openingParsed;\n    var isAssignment = options && options.assignment;\n    var recursiveOptions = isAssignment ? { assignment: isAssignment } : null;\n    var firstToken = openingParsed ? state.tokens.curr : state.tokens.next;\n\n    var nextInnerDE = function() {\n      var ident;\n      if (checkPunctuators(state.tokens.next, [\"[\", \"{\"])) {\n        ids = destructuringPatternRecursive(context, recursiveOptions);\n        for (idx = 0; idx < ids.length; idx++) {\n          identifiers.push({ id: ids[idx].id, token: ids[idx].token });\n        }\n      } else if (checkPunctuator(state.tokens.next, \",\")) {\n        identifiers.push({ id: null, token: state.tokens.curr });\n      } else if (checkPunctuator(state.tokens.next, \"(\")) {\n        advance(\"(\");\n        nextInnerDE();\n        advance(\")\");\n      } else {\n        if (isAssignment) {\n          var assignTarget = expression(context, 20);\n          if (assignTarget) {\n            checkLeftSideAssign(context, assignTarget);\n\n            // if the target was a simple identifier, add it to the list to return\n            if (assignTarget.identifier) {\n              ident = assignTarget.value;\n            }\n          }\n        } else {\n          ident = identifier(context);\n        }\n        if (ident) {\n          identifiers.push({ id: ident, token: state.tokens.curr });\n        }\n      }\n    };\n\n    var assignmentProperty = function(context) {\n      var id, expr;\n\n      if (checkPunctuator(state.tokens.next, \"[\")) {\n        advance(\"[\");\n        expression(context, 10);\n        advance(\"]\");\n        advance(\":\");\n        nextInnerDE();\n      } else if (state.tokens.next.id === \"(string)\" ||\n                 state.tokens.next.id === \"(number)\") {\n        advance();\n        advance(\":\");\n        nextInnerDE();\n      } else {\n        // this id will either be the property name or the property name and the assigning identifier\n        var isRest = spreadrest(\"rest\");\n\n        if (isRest) {\n          if (!state.inES9()) {\n            warning(\"W119\", state.tokens.next, \"object rest property\", \"9\");\n          }\n\n          // Due to visual symmetry with the array rest property (and the early\n          // design of the language feature), developers may mistakenly assume\n          // any expression is valid in this position. If the next token is not\n          // an identifier, attempt to parse an expression and issue an error.\n          // order to recover more gracefully from this condition.\n          if (state.tokens.next.type === \"(identifier)\") {\n            id = identifier(context);\n          } else {\n            expr = expression(context, 10);\n            error(\"E030\", expr, expr.value);\n          }\n        } else {\n          id = identifier(context);\n        }\n\n        if (!isRest && checkPunctuator(state.tokens.next, \":\")) {\n          advance(\":\");\n          nextInnerDE();\n        } else if (id) {\n          // in this case we are assigning (not declaring), so check assignment\n          if (isAssignment) {\n            checkLeftSideAssign(context, state.tokens.curr);\n          }\n          identifiers.push({ id: id, token: state.tokens.curr });\n        }\n\n        if (isRest && checkPunctuator(state.tokens.next, \",\")) {\n          warning(\"W130\", state.tokens.next);\n        }\n      }\n    };\n\n    var id, value;\n    if (checkPunctuator(firstToken, \"[\")) {\n      if (!openingParsed) {\n        advance(\"[\");\n      }\n      if (checkPunctuator(state.tokens.next, \"]\")) {\n        warning(\"W137\", state.tokens.curr);\n      }\n      var element_after_rest = false;\n      while (!checkPunctuator(state.tokens.next, \"]\")) {\n        var isRest = spreadrest(\"rest\");\n\n        nextInnerDE();\n\n        if (isRest && !element_after_rest &&\n            checkPunctuator(state.tokens.next, \",\")) {\n          warning(\"W130\", state.tokens.next);\n          element_after_rest = true;\n        }\n        if (!isRest && checkPunctuator(state.tokens.next, \"=\")) {\n          if (checkPunctuator(state.tokens.prev, \"...\")) {\n            /* istanbul ignore next */\n            advance(\"]\");\n          } else {\n            advance(\"=\");\n          }\n          id = state.tokens.prev;\n          value = expression(context, 10);\n          if (value && value.identifier && value.value === \"undefined\") {\n            warning(\"W080\", id, id.value);\n          }\n        }\n        if (!checkPunctuator(state.tokens.next, \"]\")) {\n          advance(\",\");\n        }\n      }\n      advance(\"]\");\n    } else if (checkPunctuator(firstToken, \"{\")) {\n\n      if (!openingParsed) {\n        advance(\"{\");\n      }\n      if (checkPunctuator(state.tokens.next, \"}\")) {\n        warning(\"W137\", state.tokens.curr);\n      }\n      while (!checkPunctuator(state.tokens.next, \"}\")) {\n        assignmentProperty(context);\n        if (checkPunctuator(state.tokens.next, \"=\")) {\n          advance(\"=\");\n          id = state.tokens.prev;\n          value = expression(context, 10);\n          if (value && value.identifier && value.value === \"undefined\") {\n            warning(\"W080\", id, id.value);\n          }\n        }\n        if (!checkPunctuator(state.tokens.next, \"}\")) {\n          advance(\",\");\n          if (checkPunctuator(state.tokens.next, \"}\")) {\n            // Trailing comma\n            // ObjectBindingPattern: { BindingPropertyList , }\n            break;\n          }\n        }\n      }\n      advance(\"}\");\n    }\n    return identifiers;\n  }\n\n  function destructuringPatternMatch(tokens, value) {\n    var first = value.first;\n\n    if (!first)\n      return;\n\n    _.zip(tokens, Array.isArray(first) ? first : [ first ]).forEach(function(val) {\n      var token = val[0];\n      var value = val[1];\n\n      if (token && value)\n        token.first = value;\n      else if (token && token.first && !value)\n        /* istanbul ignore next */\n        warning(\"W080\", token.first, token.first.value);\n    });\n  }\n\n  function blockVariableStatement(type, statement, context) {\n    // used for both let and const statements\n\n    var noin = context & prodParams.noin;\n    var isLet = type === \"let\";\n    var isConst = type === \"const\";\n    var tokens, lone, value, letblock;\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, type, \"6\");\n    }\n\n    if (isLet && isMozillaLet()) {\n      advance(\"(\");\n      state.funct[\"(scope)\"].stack();\n      letblock = true;\n      statement.declaration = false;\n    }\n\n    statement.first = [];\n    for (;;) {\n      var names = [];\n      if (_.includes([\"{\", \"[\"], state.tokens.next.value)) {\n        tokens = destructuringPattern(context);\n        lone = false;\n      } else {\n        tokens = [ { id: identifier(context), token: state.tokens.curr } ];\n        lone = true;\n      }\n\n      // A `const` declaration without an initializer is permissible within the\n      // head of for-in and for-of statements. If this binding list is being\n      // parsed as part of a `for` statement of any kind, allow the initializer\n      // to be omitted. Although this may erroneously allow such forms from\n      // \"C-style\" `for` statements (i.e. `for (const x;;) {}`, the `for`\n      // statement logic includes dedicated logic to issue the error for such\n      // cases.\n      if (!noin && isConst && state.tokens.next.id !== \"=\") {\n        warning(\"E012\", state.tokens.curr, state.tokens.curr.value);\n      }\n\n      for (var t in tokens) {\n        if (tokens.hasOwnProperty(t)) {\n          t = tokens[t];\n\n          // It is a Syntax Error if the BoundNames of BindingList contains\n          // \"let\".\n          if (t.id === \"let\") {\n            /* istanbul ignore next */\n            warning(\"W024\", t.token, t.id);\n          }\n\n          if (state.funct[\"(scope)\"].block.isGlobal()) {\n            if (predefined[t.id] === false) {\n              warning(\"W079\", t.token, t.id);\n            }\n          }\n          if (t.id) {\n            state.funct[\"(scope)\"].addbinding(t.id, {\n              type: type,\n              token: t.token });\n            names.push(t.token);\n          }\n        }\n      }\n\n      if (state.tokens.next.id === \"=\") {\n        statement.hasInitializer = true;\n\n        advance(\"=\");\n        if (!noin && peek(0).id === \"=\" && state.tokens.next.identifier) {\n          warning(\"W120\", state.tokens.next, state.tokens.next.value);\n        }\n        var id = state.tokens.prev;\n        value = expression(context, 10);\n        if (value) {\n          if (value.identifier && value.value === \"undefined\") {\n            warning(\"W080\", id, id.value);\n          }\n          if (!lone) {\n            destructuringPatternMatch(names, value);\n          }\n        }\n      }\n\n      // Bindings are not immediately initialized in for-in and for-of\n      // statements. As with `const` initializers (described above), the `for`\n      // statement parsing logic includes\n      if (state.tokens.next.value !== \"in\" && state.tokens.next.value !== \"of\") {\n        for (t in tokens) {\n          if (tokens.hasOwnProperty(t)) {\n            t = tokens[t];\n            state.funct[\"(scope)\"].initialize(t.id);\n          }\n        }\n      }\n\n      statement.first = statement.first.concat(names);\n\n      if (state.tokens.next.id !== \",\") {\n        break;\n      }\n\n      statement.hasComma = true;\n      advance(\",\");\n      checkComma();\n    }\n    if (letblock) {\n      advance(\")\");\n      block(context, true, true);\n      statement.block = true;\n      state.funct[\"(scope)\"].unstack();\n    }\n\n    return statement;\n  }\n\n  var conststatement = stmt(\"const\", function(context) {\n    return blockVariableStatement(\"const\", this, context);\n  });\n  conststatement.exps = true;\n  conststatement.declaration = true;\n\n\n  /**\n   * Determine if the current `let` token designates the beginning of a \"let\n   * block\" or \"let expression\" as implemented in the Mozilla SpiderMonkey\n   * engine.\n   *\n   * This function will only return `true` if Mozilla extensions have been\n   * enabled. It would be preferable to detect the language feature regardless\n   * of the parser's state because this would allow JSHint to instruct users to\n   * enable the `moz` option where necessary. This is not possible because the\n   * language extension is not compatible with standard JavaScript. For\n   * example, the following program code may describe a \"let block\" or a\n   * function invocation:\n   *\n   *     let(x)\n   *     {\n   *       typeof x;\n   *     }\n   *\n   * @returns {boolean}\n   */\n  function isMozillaLet() {\n    return state.tokens.next.id === \"(\" && state.inMoz();\n  }\n  var letstatement = stmt(\"let\", function(context) {\n    return blockVariableStatement(\"let\", this, context);\n  });\n  letstatement.nud = function(context, rbp) {\n    if (isMozillaLet()) {\n      // create a new block scope we use only for the current expression\n      state.funct[\"(scope)\"].stack();\n      advance(\"(\");\n      state.tokens.prev.fud(context);\n      advance(\")\");\n      expression(context, rbp);\n      state.funct[\"(scope)\"].unstack();\n    } else {\n      this.exps = false;\n      return state.syntax[\"(identifier)\"].nud.apply(this, arguments);\n    }\n  };\n  letstatement.meta = { es5: true, isFutureReservedWord: false, strictOnly: true };\n  letstatement.exps = true;\n  letstatement.declaration = true;\n  letstatement.useFud = function(context) {\n    var next = state.tokens.next;\n    var nextIsBindingName;\n\n    if (this.line !== next.line && !state.inES6()) {\n      return false;\n    }\n\n    // JSHint generally interprets `let` as a reserved word even though it is\n    // not considered as such by the ECMAScript specification because doing so\n    // simplifies parsing logic. It is special-cased here so that code such as\n    //\n    //     let\n    //     let\n    //\n    // is correctly interpreted as an invalid LexicalBinding. (Without this\n    // consideration, the code above would be parsed as two\n    // IdentifierReferences.)\n    nextIsBindingName = next.identifier && (!isReserved(context, next) ||\n      next.id === \"let\");\n\n    return nextIsBindingName || checkPunctuators(next, [\"{\", \"[\"]) ||\n      isMozillaLet();\n  };\n\n  var varstatement = stmt(\"var\", function(context) {\n    var noin = context & prodParams.noin;\n    var tokens, lone, value, id;\n\n    this.first = [];\n    for (;;) {\n      var names = [];\n      if (_.includes([\"{\", \"[\"], state.tokens.next.value)) {\n        tokens = destructuringPattern(context);\n        lone = false;\n      } else {\n        tokens = [];\n        id = identifier(context);\n\n        if (id) {\n          tokens.push({ id: id, token: state.tokens.curr });\n        }\n\n        lone = true;\n      }\n\n      if (state.option.varstmt) {\n        warning(\"W132\", this);\n      }\n\n\n      for (var t in tokens) {\n        if (tokens.hasOwnProperty(t)) {\n          t = tokens[t];\n          if (state.funct[\"(global)\"] && !state.impliedClosure()) {\n            if (predefined[t.id] === false) {\n              warning(\"W079\", t.token, t.id);\n            } else if (state.option.futurehostile === false) {\n              if ((!state.inES5() && vars.ecmaIdentifiers[5][t.id] === false) ||\n                (!state.inES6() && vars.ecmaIdentifiers[6][t.id] === false)) {\n                warning(\"W129\", t.token, t.id);\n              }\n            }\n          }\n          if (t.id) {\n            state.funct[\"(scope)\"].addbinding(t.id, {\n              type: \"var\",\n              token: t.token });\n\n            names.push(t.token);\n          }\n        }\n      }\n\n      if (state.tokens.next.id === \"=\") {\n        this.hasInitializer = true;\n\n        state.nameStack.set(state.tokens.curr);\n\n        advance(\"=\");\n        if (peek(0).id === \"=\" && state.tokens.next.identifier) {\n          if (!noin &&\n              !state.funct[\"(params)\"] ||\n              state.funct[\"(params)\"].indexOf(state.tokens.next.value) === -1) {\n            warning(\"W120\", state.tokens.next, state.tokens.next.value);\n          }\n        }\n        id = state.tokens.prev;\n        value = expression(context, 10);\n        if (value) {\n          if (!state.funct[\"(loopage)\"] && value.identifier &&\n            value.value === \"undefined\") {\n            warning(\"W080\", id, id.value);\n          }\n          if (!lone) {\n            destructuringPatternMatch(names, value);\n          }\n        }\n      }\n\n      this.first = this.first.concat(names);\n\n      if (state.tokens.next.id !== \",\") {\n        break;\n      }\n      this.hasComma = true;\n      advance(\",\");\n      checkComma();\n    }\n\n    return this;\n  });\n  varstatement.exps = true;\n\n  blockstmt(\"function\", function(context) {\n    var inexport = context & prodParams.export;\n    var generator = false;\n    var isAsync = context & prodParams.preAsync;\n    var labelType = \"\";\n\n    if (isAsync) {\n      labelType = \"async \";\n    }\n\n    if (state.tokens.next.value === \"*\") {\n      if (isAsync && !state.inES9()) {\n        warning(\"W119\", state.tokens.prev, \"async generators\", \"9\");\n      } else if (!isAsync && !state.inES6(true)) {\n        warning(\"W119\", state.tokens.next, \"function*\", \"6\");\n      }\n\n      advance(\"*\");\n      labelType += \"generator \";\n      generator = true;\n    }\n\n    labelType += \"function\";\n\n    if (inblock) {\n      warning(\"W082\", state.tokens.curr);\n    }\n    this.name = optionalidentifier(context) ? state.tokens.curr : null;\n\n    if (!this.name) {\n      if (!inexport) {\n        warning(\"W025\");\n      }\n    } else {\n      state.funct[\"(scope)\"].addbinding(this.name.value, {\n        type: labelType,\n        token: state.tokens.curr,\n        initialized: true });\n    }\n\n    var f = doFunction(context, {\n      name: this.name && this.name.value,\n      statement: this,\n      type: generator ? \"generator\" : null,\n      ignoreLoopFunc: inblock // a declaration may already have warned\n    });\n\n    // If the function declaration is strict because the surrounding code is\n    // strict, the invalid name will trigger E008 when the scope manager\n    // attempts to create a binding in the strict environment record. An error\n    // should only be signaled here when the function itself enables strict\n    // mode (the scope manager will not report an error because a declaration\n    // does not introduce a binding into the function's environment record).\n    var enablesStrictMode = f[\"(isStrict)\"] && !state.isStrict();\n    if (this.name && (f[\"(name)\"] === \"arguments\" || f[\"(name)\"] === \"eval\") &&\n      enablesStrictMode) {\n      error(\"E008\", this.name);\n    }\n\n    // Although the parser correctly recognizes the statement boundary in this\n    // condition, it's support for the invalid \"empty grouping\" expression\n    // makes it tolerant of productions such as `function f() {}();`.\n    if (state.tokens.next.id === \"(\" && peek().id === \")\" && peek(1).id !== \"=>\" &&\n      state.tokens.next.line === state.tokens.curr.line) {\n      error(\"E039\");\n    }\n    return this;\n  }).declaration = true;\n\n  prefix(\"function\", function(context) {\n    var generator = false;\n    var isAsync = context & prodParams.preAsync;\n\n    if (state.tokens.next.value === \"*\") {\n      if (isAsync && !state.inES9()) {\n        warning(\"W119\", state.tokens.prev, \"async generators\", \"9\");\n      } else if (!isAsync && !state.inES6(true)) {\n        warning(\"W119\", state.tokens.curr, \"function*\", \"6\");\n      }\n\n      advance(\"*\");\n      generator = true;\n    }\n\n    // This context modification restricts the use of `await` as the optional\n    // BindingIdentifier in async function expressions.\n    this.name = optionalidentifier(isAsync ? context | prodParams.async : context) ?\n      state.tokens.curr : null;\n\n    var f = doFunction(context, {\n      name: this.name && this.name.value,\n      type: generator ? \"generator\" : null\n    });\n\n    if (generator && this.name && this.name.value === \"yield\") {\n      error(\"E024\", this.name, \"yield\");\n    }\n\n    if (this.name && (f[\"(name)\"] === \"arguments\" || f[\"(name)\"] === \"eval\") &&\n      f[\"(isStrict)\"]) {\n      error(\"E008\", this.name);\n    }\n\n    return this;\n  });\n\n  blockstmt(\"if\", function(context) {\n    var t = state.tokens.next;\n    increaseComplexityCount();\n    advance(\"(\");\n    var expr = expression(context, 0);\n\n    if (!expr) {\n      quit(\"E041\", this);\n    }\n\n    checkCondAssignment(expr);\n\n    // When the if is within a for-in loop, check if the condition\n    // starts with a negation operator\n    var forinifcheck = null;\n    if (state.option.forin && state.forinifcheckneeded) {\n      state.forinifcheckneeded = false; // We only need to analyze the first if inside the loop\n      forinifcheck = state.forinifchecks[state.forinifchecks.length - 1];\n      if (expr.type === \"(punctuator)\" && expr.value === \"!\") {\n        forinifcheck.type = \"(negative)\";\n      } else {\n        forinifcheck.type = \"(positive)\";\n      }\n    }\n\n    advance(\")\", t);\n    var s = block(context, true, true);\n\n    // When the if is within a for-in loop and the condition has a negative form,\n    // check if the body contains nothing but a continue statement\n    if (forinifcheck && forinifcheck.type === \"(negative)\") {\n      if (s && s[0] && s[0].type === \"(identifier)\" && s[0].value === \"continue\") {\n        forinifcheck.type = \"(negative-with-continue)\";\n      }\n    }\n\n    if (state.tokens.next.id === \"else\") {\n      advance(\"else\");\n      if (state.tokens.next.id === \"if\" || state.tokens.next.id === \"switch\") {\n        statement(context);\n      } else {\n        block(context, true, true);\n      }\n    }\n    return this;\n  });\n\n  blockstmt(\"try\", function(context) {\n    var b;\n    var hasParameter = false;\n\n    function catchParameter() {\n      advance(\"(\");\n\n      if (checkPunctuators(state.tokens.next, [\"[\", \"{\"])) {\n        var tokens = destructuringPattern(context);\n        _.each(tokens, function(token) {\n          if (token.id) {\n            state.funct[\"(scope)\"].addParam(token.id, token.token, \"exception\");\n          }\n        });\n      } else if (state.tokens.next.type !== \"(identifier)\") {\n        warning(\"E030\", state.tokens.next, state.tokens.next.value);\n      } else {\n        // only advance if an identifier is present. This allows JSHint to\n        // recover from the case where no value is specified.\n        state.funct[\"(scope)\"].addParam(identifier(context), state.tokens.curr, \"exception\");\n      }\n\n      if (state.tokens.next.value === \"if\") {\n        if (!state.inMoz()) {\n          warning(\"W118\", state.tokens.curr, \"catch filter\");\n        }\n        advance(\"if\");\n        expression(context, 0);\n      }\n\n      advance(\")\");\n    }\n\n    block(context | prodParams.tryClause, true);\n\n    while (state.tokens.next.id === \"catch\") {\n      increaseComplexityCount();\n      if (b && (!state.inMoz())) {\n        warning(\"W118\", state.tokens.next, \"multiple catch blocks\");\n      }\n      advance(\"catch\");\n      if (state.tokens.next.id !== \"{\") {\n        state.funct[\"(scope)\"].stack(\"catchparams\");\n        hasParameter = true;\n        catchParameter();\n      } else if (!state.inES10()) {\n        warning(\"W119\", state.tokens.curr, \"optional catch binding\", \"10\");\n      }\n      block(context, false);\n\n      if (hasParameter) {\n        state.funct[\"(scope)\"].unstack();\n        hasParameter = false;\n      }\n      b = true;\n    }\n\n    if (state.tokens.next.id === \"finally\") {\n      advance(\"finally\");\n      block(context, true);\n      return;\n    }\n\n    if (!b) {\n      error(\"E021\", state.tokens.next, \"catch\", state.tokens.next.value);\n    }\n\n    return this;\n  });\n\n  blockstmt(\"while\", function(context) {\n    var t = state.tokens.next;\n    state.funct[\"(breakage)\"] += 1;\n    state.funct[\"(loopage)\"] += 1;\n    increaseComplexityCount();\n    advance(\"(\");\n    checkCondAssignment(expression(context, 0));\n    advance(\")\", t);\n    block(context, true, true);\n    state.funct[\"(breakage)\"] -= 1;\n    state.funct[\"(loopage)\"] -= 1;\n    return this;\n  }).labelled = true;\n\n  blockstmt(\"with\", function(context) {\n    var t = state.tokens.next;\n    if (state.isStrict()) {\n      error(\"E010\", state.tokens.curr);\n    } else if (!state.option.withstmt) {\n      warning(\"W085\", state.tokens.curr);\n    }\n\n    advance(\"(\");\n    expression(context, 0);\n    advance(\")\", t);\n    block(context, true, true);\n\n    return this;\n  });\n\n  blockstmt(\"switch\", function(context) {\n    var t = state.tokens.next;\n    var g = false;\n    var noindent = false;\n    var seenCase = false;\n\n    state.funct[\"(breakage)\"] += 1;\n    advance(\"(\");\n    checkCondAssignment(expression(context, 0));\n    advance(\")\", t);\n    t = state.tokens.next;\n    advance(\"{\");\n    state.funct[\"(scope)\"].stack();\n\n    if (state.tokens.next.from === indent)\n      noindent = true;\n\n    if (!noindent)\n      indent += state.option.indent;\n\n    for (;;) {\n      switch (state.tokens.next.id) {\n      case \"case\":\n        switch (state.funct[\"(verb)\"]) {\n        case \"yield\":\n        case \"break\":\n        case \"case\":\n        case \"continue\":\n        case \"return\":\n        case \"switch\":\n        case \"throw\":\n          break;\n        case \"default\":\n          if (state.option.leanswitch) {\n            warning(\"W145\", state.tokens.next);\n          }\n\n          break;\n        default:\n          // You can tell JSHint that you don't use break intentionally by\n          // adding a comment /* falls through */ on a line just before\n          // the next `case`.\n          if (!state.tokens.curr.caseFallsThrough) {\n            warning(\"W086\", state.tokens.curr, \"case\");\n          }\n        }\n\n        advance(\"case\");\n        expression(context, 0);\n        seenCase = true;\n        increaseComplexityCount();\n        g = true;\n        advance(\":\");\n        state.funct[\"(verb)\"] = \"case\";\n        break;\n      case \"default\":\n        switch (state.funct[\"(verb)\"]) {\n        case \"yield\":\n        case \"break\":\n        case \"continue\":\n        case \"return\":\n        case \"throw\":\n          break;\n        case \"case\":\n          if (state.option.leanswitch) {\n            warning(\"W145\", state.tokens.curr);\n          }\n\n          break;\n        default:\n          // Do not display a warning if 'default' is the first statement or if\n          // there is a special /* falls through */ comment.\n          if (seenCase && !state.tokens.curr.caseFallsThrough) {\n            warning(\"W086\", state.tokens.curr, \"default\");\n          }\n        }\n\n        advance(\"default\");\n        g = true;\n        advance(\":\");\n        state.funct[\"(verb)\"] = \"default\";\n        break;\n      case \"}\":\n        if (!noindent)\n          indent -= state.option.indent;\n\n        advance(\"}\", t);\n        state.funct[\"(scope)\"].unstack();\n        state.funct[\"(breakage)\"] -= 1;\n        state.funct[\"(verb)\"] = undefined;\n        return;\n      /* istanbul ignore next */\n      case \"(end)\":\n        error(\"E023\", state.tokens.next, \"}\");\n        return;\n      default:\n        indent += state.option.indent;\n        if (g) {\n          switch (state.tokens.curr.id) {\n          /* istanbul ignore next */\n          case \",\":\n            error(\"E040\");\n            return;\n          case \":\":\n            g = false;\n            statements(context);\n            break;\n          /* istanbul ignore next */\n          default:\n            error(\"E025\", state.tokens.curr);\n            return;\n          }\n        } else {\n          /* istanbul ignore else */\n          if (state.tokens.curr.id === \":\") {\n            advance(\":\");\n            error(\"E024\", state.tokens.curr, \":\");\n            statements(context);\n          } else {\n            error(\"E021\", state.tokens.next, \"case\", state.tokens.next.value);\n            return;\n          }\n        }\n        indent -= state.option.indent;\n      }\n    }\n  }).labelled = true;\n\n  stmt(\"debugger\", function() {\n    if (!state.option.debug) {\n      warning(\"W087\", this);\n    }\n    return this;\n  }).exps = true;\n\n  (function() {\n    var x = stmt(\"do\", function(context) {\n      state.funct[\"(breakage)\"] += 1;\n      state.funct[\"(loopage)\"] += 1;\n      increaseComplexityCount();\n\n      this.first = block(context, true, true);\n      advance(\"while\");\n      var t = state.tokens.next;\n      advance(\"(\");\n      checkCondAssignment(expression(context, 0));\n      advance(\")\", t);\n      state.funct[\"(breakage)\"] -= 1;\n      state.funct[\"(loopage)\"] -= 1;\n      return this;\n    });\n    x.labelled = true;\n    x.exps = true;\n  }());\n\n  blockstmt(\"for\", function(context) {\n    var s, t = state.tokens.next;\n    var letscope = false;\n    var isAsync = false;\n    var foreachtok = null;\n\n    if (t.value === \"each\") {\n      foreachtok = t;\n      advance(\"each\");\n      if (!state.inMoz()) {\n        warning(\"W118\", state.tokens.curr, \"for each\");\n      }\n    }\n\n    if (state.tokens.next.identifier && state.tokens.next.value === \"await\") {\n      advance(\"await\");\n      isAsync = true;\n\n      if (!(context & prodParams.async)) {\n        error(\"E024\", state.tokens.curr, \"await\");\n      } else if (!state.inES9()) {\n        warning(\"W119\", state.tokens.curr, \"asynchronous iteration\", \"9\");\n      }\n    }\n\n    increaseComplexityCount();\n    advance(\"(\");\n\n    // what kind of for(…) statement it is? for(…of…)? for(…in…)? for(…;…;…)?\n    var nextop; // contains the token of the \"in\" or \"of\" operator\n    var comma; // First comma punctuator at level 0\n    var initializer; // First initializer at level 0\n    var bindingPower;\n    var targets;\n    var target;\n    var decl;\n    var afterNext = peek();\n\n    var headContext = context | prodParams.noin;\n\n    if (state.tokens.next.id === \"var\") {\n      advance(\"var\");\n      decl = state.tokens.curr.fud(headContext);\n      comma = decl.hasComma ? decl : null;\n      initializer = decl.hasInitializer ? decl : null;\n    } else if (state.tokens.next.id === \"const\" ||\n      // The \"let\" keyword only signals a lexical binding if it is followed by\n      // an identifier, `{`, or `[`. Otherwise, it should be parsed as an\n      // IdentifierReference (i.e. in a subsquent branch).\n      (state.tokens.next.id === \"let\" &&\n        ((afterNext.identifier && afterNext.id !== \"in\") ||\n         checkPunctuators(afterNext, [\"{\", \"[\"])))) {\n      advance(state.tokens.next.id);\n      // create a new block scope\n      letscope = true;\n      state.funct[\"(scope)\"].stack();\n      decl = state.tokens.curr.fud(headContext);\n      comma = decl.hasComma ? decl : null;\n      initializer = decl.hasInitializer ? decl : null;\n    } else if (!checkPunctuator(state.tokens.next, \";\")) {\n      targets = [];\n\n      while (state.tokens.next.value !== \"in\" &&\n        state.tokens.next.value !== \"of\" &&\n        !checkPunctuator(state.tokens.next, \";\")) {\n\n        if (checkPunctuators(state.tokens.next, [\"{\", \"[\"])) {\n          destructuringPattern(headContext, { assignment: true })\n            .forEach(function(elem) {\n              this.push(elem.token);\n            }, targets);\n          if (checkPunctuator(state.tokens.next, \"=\")) {\n            advance(\"=\");\n            initializer = state.tokens.curr;\n            expression(headContext, 10);\n          }\n        } else {\n          target = expression(headContext, 10);\n\n          if (target) {\n            if (target.type === \"(identifier)\") {\n              targets.push(target);\n            } else if (checkPunctuator(target, \"=\")) {\n              initializer = target;\n              targets.push(target);\n            }\n          }\n        }\n\n        if (checkPunctuator(state.tokens.next, \",\")) {\n          advance(\",\");\n\n          if (!comma) {\n            comma = state.tokens.curr;\n          }\n        }\n      }\n\n      //checkLeftSideAssign(target, nextop);\n\n      // In the event of a syntax error, do not issue warnings regarding the\n      // implicit creation of bindings.\n      if (!initializer && !comma) {\n        targets.forEach(function(token) {\n          if (!state.funct[\"(scope)\"].has(token.value)) {\n            warning(\"W088\", token, token.value);\n          }\n        });\n      }\n    }\n\n    nextop = state.tokens.next;\n\n    if (isAsync && nextop.value !== \"of\") {\n      error(\"E066\", nextop);\n    }\n\n    // if we're in a for (… in|of …) statement\n    if (_.includes([\"in\", \"of\"], nextop.value)) {\n      if (nextop.value === \"of\") {\n        bindingPower = 20;\n\n        if (!state.inES6()) {\n          warning(\"W104\", nextop, \"for of\", \"6\");\n        }\n      } else {\n        bindingPower = 0;\n      }\n      if (comma) {\n        error(\"W133\", comma, nextop.value, \"more than one ForBinding\");\n      }\n      if (initializer) {\n        error(\"W133\", initializer, nextop.value, \"initializer is forbidden\");\n      }\n      if (target && !comma && !initializer) {\n        checkLeftSideAssign(context, target, nextop);\n      }\n\n      advance(nextop.value);\n\n      // The binding power is variable because for-in statements accept any\n      // Expression in this position, while for-of statements are limited to\n      // AssignmentExpressions. For example:\n      //\n      //     for ( LeftHandSideExpression in Expression ) Statement\n      //     for ( LeftHandSideExpression of AssignmentExpression ) Statement\n      expression(context, bindingPower);\n      advance(\")\", t);\n\n      if (nextop.value === \"in\" && state.option.forin) {\n        state.forinifcheckneeded = true;\n\n        if (state.forinifchecks === undefined) {\n          state.forinifchecks = [];\n        }\n\n        // Push a new for-in-if check onto the stack. The type will be modified\n        // when the loop's body is parsed and a suitable if statement exists.\n        state.forinifchecks.push({\n          type: \"(none)\"\n        });\n      }\n\n      state.funct[\"(breakage)\"] += 1;\n      state.funct[\"(loopage)\"] += 1;\n\n      s = block(context, true, true);\n\n      if (nextop.value === \"in\" && state.option.forin) {\n        if (state.forinifchecks && state.forinifchecks.length > 0) {\n          var check = state.forinifchecks.pop();\n\n          if (// No if statement or not the first statement in loop body\n              s && s.length > 0 && (typeof s[0] !== \"object\" || s[0].value !== \"if\") ||\n              // Positive if statement is not the only one in loop body\n              check.type === \"(positive)\" && s.length > 1 ||\n              // Negative if statement but no continue\n              check.type === \"(negative)\") {\n            warning(\"W089\", this);\n          }\n        }\n\n        // Reset the flag in case no if statement was contained in the loop body\n        state.forinifcheckneeded = false;\n      }\n\n      state.funct[\"(breakage)\"] -= 1;\n      state.funct[\"(loopage)\"] -= 1;\n\n    } else {\n      if (foreachtok) {\n        error(\"E045\", foreachtok);\n      }\n\n      advance(\";\");\n      if (decl && decl.first && decl.first[0]) {\n        if (decl.value === \"const\"  && !decl.hasInitializer) {\n          warning(\"E012\", decl, decl.first[0].value);\n        }\n\n        decl.first.forEach(function(token) {\n          state.funct[\"(scope)\"].initialize(token.value);\n        });\n      }\n\n      // start loopage after the first ; as the next two expressions are executed\n      // on every loop\n      state.funct[\"(loopage)\"] += 1;\n      if (state.tokens.next.id !== \";\") {\n        checkCondAssignment(expression(context, 0));\n      }\n\n      advance(\";\");\n      if (state.tokens.next.id === \";\") {\n        error(\"E021\", state.tokens.next, \")\", \";\");\n      }\n      if (state.tokens.next.id !== \")\") {\n        for (;;) {\n          expression(context, 0);\n          if (state.tokens.next.id !== \",\") {\n            break;\n          }\n          advance(\",\");\n          checkComma();\n        }\n      }\n      advance(\")\", t);\n      state.funct[\"(breakage)\"] += 1;\n      block(context, true, true);\n      state.funct[\"(breakage)\"] -= 1;\n      state.funct[\"(loopage)\"] -= 1;\n    }\n\n    // unstack loop blockscope\n    if (letscope) {\n      state.funct[\"(scope)\"].unstack();\n    }\n    return this;\n  }).labelled = true;\n\n\n  stmt(\"break\", function() {\n    var v = state.tokens.next.value;\n\n    if (state.tokens.next.identifier &&\n        sameLine(state.tokens.curr, state.tokens.next)) {\n      if (!state.funct[\"(scope)\"].funct.hasLabel(v)) {\n        warning(\"W090\", state.tokens.next, v);\n      }\n      this.first = state.tokens.next;\n      advance();\n    } else {\n      if (state.funct[\"(breakage)\"] === 0)\n        warning(\"W052\", state.tokens.next, this.value);\n    }\n\n    reachable(this);\n\n    return this;\n  }).exps = true;\n\n\n  stmt(\"continue\", function() {\n    var v = state.tokens.next.value;\n\n    if (state.funct[\"(breakage)\"] === 0 || !state.funct[\"(loopage)\"]) {\n      warning(\"W052\", state.tokens.next, this.value);\n    }\n\n    if (state.tokens.next.identifier) {\n      if (sameLine(state.tokens.curr, state.tokens.next)) {\n        if (!state.funct[\"(scope)\"].funct.hasLabel(v)) {\n          warning(\"W090\", state.tokens.next, v);\n        }\n        this.first = state.tokens.next;\n        advance();\n      }\n    }\n\n    reachable(this);\n\n    return this;\n  }).exps = true;\n\n\n  stmt(\"return\", function(context) {\n    if (sameLine(this, state.tokens.next)) {\n      if (state.tokens.next.id !== \";\" && !state.tokens.next.reach) {\n        this.first = expression(context, 0);\n\n        if (this.first &&\n            this.first.type === \"(punctuator)\" && this.first.value === \"=\" &&\n            !this.first.paren && !state.option.boss) {\n          warning(\"W093\", this.first);\n        }\n\n        if (state.option.noreturnawait && context & prodParams.async &&\n            !(context & prodParams.tryClause) &&\n            this.first.identifier && this.first.value === \"await\") {\n          warning(\"W146\", this.first);\n        }\n      }\n    } else {\n      if (state.tokens.next.type === \"(punctuator)\" &&\n        [\"[\", \"{\", \"+\", \"-\"].indexOf(state.tokens.next.value) > -1) {\n        nolinebreak(this); // always warn (Line breaking error)\n      }\n    }\n\n    reachable(this);\n\n    return this;\n  }).exps = true;\n\n  prefix(\"await\", function(context) {\n    if (context & prodParams.async) {\n      // If the parameters of the current function scope have not been defined,\n      // it is because the current expression is contained within the parameter\n      // list.\n      if (!state.funct[\"(params)\"]) {\n        error(\"E024\", this, \"await\");\n      }\n\n      expression(context, 10);\n      return this;\n    } else {\n      this.exps = false;\n      return state.syntax[\"(identifier)\"].nud.apply(this, arguments);\n    }\n  }).exps = true;\n\n  (function(asyncSymbol) {\n    asyncSymbol.meta = { es5: true, isFutureReservedWord: true, strictOnly: true };\n    asyncSymbol.isFunc = function() {\n      var next = state.tokens.next;\n      var afterParens;\n\n      if (this.line !== next.line) {\n        return false;\n      }\n\n      if (next.id === \"function\") {\n        return true;\n      }\n\n      if (next.id === \"(\") {\n        afterParens = peekThroughParens(0);\n\n        return afterParens.id === \"=>\";\n      }\n\n      if (next.identifier) {\n        return peek().id === \"=>\";\n      }\n\n      return false;\n    };\n    asyncSymbol.useFud = asyncSymbol.isFunc;\n    // async function declaration\n    asyncSymbol.fud = function(context) {\n      if (!state.inES8()) {\n        warning(\"W119\", this, \"async functions\", \"8\");\n      }\n      context |= prodParams.preAsync;\n      context |= prodParams.initial;\n      this.func = expression(context, 0);\n      this.block = this.func.block;\n      this.exps = this.func.exps;\n      return this;\n    };\n    asyncSymbol.exps = true;\n    delete asyncSymbol.reserved;\n  }(prefix(\"async\", function(context, rbp) {\n    if (this.isFunc(context)) {\n      if (!state.inES8()) {\n        warning(\"W119\", this, \"async functions\", \"8\");\n      }\n\n      context |= prodParams.preAsync;\n      this.func = expression(context, rbp);\n      this.identifier = false;\n      return this;\n    }\n\n    this.exps = false;\n    return state.syntax[\"(identifier)\"].nud.apply(this, arguments);\n  })));\n\n  (function(yieldSymbol) {\n    yieldSymbol.rbp = yieldSymbol.lbp = 25;\n    yieldSymbol.exps = true;\n  })(prefix(\"yield\", function(context) {\n    if (state.inMoz()) {\n      return mozYield.call(this, context);\n    }\n\n    if (!(context & prodParams.yield)) {\n      this.exps = false;\n      return state.syntax[\"(identifier)\"].nud.apply(this, arguments);\n    }\n\n    var prev = state.tokens.prev;\n\n    // If the parameters of the current function scope have not been defined,\n    // it is because the current expression is contained within the parameter\n    // list.\n    if (!state.funct[\"(params)\"]) {\n      error(\"E024\", this, \"yield\");\n    }\n\n    if (!this.beginsStmt && prev.lbp > 30 && !checkPunctuators(prev, [\"(\"])) {\n      error(\"E061\", this);\n    }\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, \"yield\", \"6\");\n    }\n    state.funct[\"(yielded)\"] = true;\n\n    if (state.tokens.next.value === \"*\") {\n      advance(\"*\");\n    }\n\n    // Parse operand\n    if (state.tokens.curr.value === \"*\" || sameLine(state.tokens.curr, state.tokens.next)) {\n      if (state.tokens.next.nud) {\n\n        nobreaknonadjacent(state.tokens.curr, state.tokens.next);\n        this.first = expression(context, 10);\n\n        if (this.first.type === \"(punctuator)\" && this.first.value === \"=\" &&\n            !this.first.paren && !state.option.boss) {\n          warning(\"W093\", this.first);\n        }\n      } else if (state.tokens.next.led) {\n        if (state.tokens.next.id !== \",\") {\n          error(\"W017\", state.tokens.next);\n        }\n      }\n    }\n\n    return this;\n  }));\n\n  /**\n   * Parsing logic for non-standard Mozilla implementation of `yield`\n   * expressions.\n   */\n  var mozYield = function(context) {\n    var prev = state.tokens.prev;\n    if (state.inES6(true) && !(context & prodParams.yield)) {\n      error(\"E046\", state.tokens.curr, \"yield\");\n    }\n    state.funct[\"(yielded)\"] = true;\n    var delegatingYield = false;\n\n    if (state.tokens.next.value === \"*\") {\n      delegatingYield = true;\n      advance(\"*\");\n    }\n\n    if (sameLine(this, state.tokens.next)) {\n      if (delegatingYield ||\n          (state.tokens.next.id !== \";\" && !state.option.asi &&\n           !state.tokens.next.reach && state.tokens.next.nud)) {\n\n        nobreaknonadjacent(state.tokens.curr, state.tokens.next);\n        this.first = expression(context, 10);\n\n        if (this.first.type === \"(punctuator)\" && this.first.value === \"=\" &&\n            !this.first.paren && !state.option.boss) {\n          warning(\"W093\", this.first);\n        }\n      }\n      if (state.tokens.next.id !== \")\" &&\n          (prev.lbp > 30 || (!prev.assign && !isEndOfExpr()))) {\n        error(\"E050\", this);\n      }\n    } else if (!state.option.asi) {\n      nolinebreak(this); // always warn (Line breaking error)\n    }\n    return this;\n  };\n\n  stmt(\"throw\", function(context) {\n    nolinebreak(this);\n    this.first = expression(context, 20);\n\n    reachable(this);\n\n    return this;\n  }).exps = true;\n\n  prefix(\"import\", function(context) {\n    var mp = metaProperty(context, \"meta\", function() {\n      if (!state.inES11(true)) {\n        warning(\"W119\", state.tokens.prev, \"import.meta\", \"11\");\n      }\n      if (!state.option.module) {\n        error(\"E070\", state.tokens.prev);\n      }\n    });\n\n    if (mp) {\n      return mp;\n    }\n\n    if (!checkPunctuator(state.tokens.next, \"(\")) {\n      return state.syntax[\"(identifier)\"].nud.call(this, context);\n    }\n\n    if (!state.inES11()) {\n      warning(\"W119\", state.tokens.curr, \"dynamic import\", \"11\");\n    }\n\n    advance(\"(\");\n    expression(context, 10);\n    advance(\")\");\n    return this;\n  });\n\n  var importSymbol = stmt(\"import\", function(context) {\n    if (!state.funct[\"(scope)\"].block.isGlobal()) {\n      error(\"E053\", state.tokens.curr, \"Import\");\n    }\n\n    if (!state.inES6()) {\n      warning(\"W119\", state.tokens.curr, \"import\", \"6\");\n    }\n\n    if (state.tokens.next.type === \"(string)\") {\n      // ModuleSpecifier :: StringLiteral\n      advance(\"(string)\");\n      return this;\n    }\n\n    if (state.tokens.next.identifier) {\n      // ImportClause :: ImportedDefaultBinding\n      this.name = identifier(context);\n      // Import bindings are immutable (see ES6 8.1.1.5.5)\n      state.funct[\"(scope)\"].addbinding(this.name, {\n        type: \"import\",\n        initialized: true,\n        token: state.tokens.curr });\n\n      if (state.tokens.next.value === \",\") {\n        // ImportClause :: ImportedDefaultBinding , NameSpaceImport\n        // ImportClause :: ImportedDefaultBinding , NamedImports\n        advance(\",\");\n        // At this point, we intentionally fall through to continue matching\n        // either NameSpaceImport or NamedImports.\n        // Discussion:\n        // https://github.com/jshint/jshint/pull/2144#discussion_r23978406\n      } else {\n        advance(\"from\");\n        advance(\"(string)\");\n        return this;\n      }\n    }\n\n    if (state.tokens.next.id === \"*\") {\n      // ImportClause :: NameSpaceImport\n      advance(\"*\");\n      advance(\"as\");\n      if (state.tokens.next.identifier) {\n        this.name = identifier(context);\n        // Import bindings are immutable (see ES6 8.1.1.5.5)\n        state.funct[\"(scope)\"].addbinding(this.name, {\n          type: \"import\",\n          initialized: true,\n          token: state.tokens.curr });\n      }\n    } else {\n      // ImportClause :: NamedImports\n      advance(\"{\");\n      for (;;) {\n        if (state.tokens.next.value === \"}\") {\n          advance(\"}\");\n          break;\n        }\n        var importName;\n        if (peek().value === \"as\") {\n          identifier(context, true);\n          advance(\"as\");\n          importName = identifier(context);\n        } else {\n          importName = identifier(context);\n        }\n\n        // Import bindings are immutable (see ES6 8.1.1.5.5)\n        state.funct[\"(scope)\"].addbinding(importName, {\n          type: \"import\",\n          initialized: true,\n          token: state.tokens.curr });\n\n        if (state.tokens.next.value === \",\") {\n          advance(\",\");\n        } else if (state.tokens.next.value === \"}\") {\n          advance(\"}\");\n          break;\n        } else {\n          error(\"E024\", state.tokens.next, state.tokens.next.value);\n          break;\n        }\n      }\n    }\n\n    // FromClause\n    advance(\"from\");\n    advance(\"(string)\");\n\n    // Support for ES2015 modules was released without warning for `import`\n    // declarations that lack bindings. Issuing a warning would therefor\n    // constitute a breaking change.\n    // TODO: enable this warning in JSHint 3\n    // if (hasBindings) {\n    //   warning(\"W142\", this, \"import\", moduleSpecifier);\n    // }\n\n    return this;\n  });\n  importSymbol.exps = true;\n  importSymbol.reserved = true;\n  importSymbol.meta = { isFutureReservedWord: true, es5: true };\n  importSymbol.useFud = function() {\n    return !(checkPunctuators(state.tokens.next, [\".\", \"(\"]));\n  };\n  importSymbol.rbp = 161;\n\n  stmt(\"export\", function(context) {\n    var ok = true;\n    var token;\n    var moduleSpecifier;\n    context = context | prodParams.export;\n\n    if (!state.inES6()) {\n      warning(\"W119\", state.tokens.curr, \"export\", \"6\");\n      ok = false;\n    }\n\n    if (!state.funct[\"(scope)\"].block.isGlobal()) {\n      error(\"E053\", state.tokens.curr, \"Export\");\n      ok = false;\n    }\n\n    if (state.tokens.next.value === \"*\") {\n      // ExportDeclaration :: export * FromClause\n      // ExportDeclaration :: export * as IdentifierName FromClause\n      advance(\"*\");\n\n      if (state.tokens.next.value === \"as\") {\n        if (!state.inES11()) {\n          warning(\"W119\", state.tokens.curr, \"export * as ns from\", \"11\");\n        }\n        advance(\"as\");\n        identifier(context, true);\n        state.funct[\"(scope)\"].setExported(null, state.tokens.curr);\n      }\n\n      advance(\"from\");\n      advance(\"(string)\");\n      return this;\n    }\n\n    if (state.tokens.next.type === \"default\") {\n      // ExportDeclaration ::\n      //      export default [lookahead ∉ { function, class }] AssignmentExpression[In] ;\n      //      export default HoistableDeclaration\n      //      export default ClassDeclaration\n\n      // because the 'name' of a default-exported function is, confusingly, 'default'\n      // see https://bocoup.com/blog/whats-in-a-function-name\n      state.nameStack.set(state.tokens.next);\n\n      advance(\"default\");\n      var def = state.tokens.curr;\n      var exportType = state.tokens.next.id;\n      if (exportType === \"function\") {\n        this.block = true;\n        advance(\"function\");\n        token = state.syntax[\"function\"].fud(context);\n        state.funct[\"(scope)\"].setExported(token.name, def);\n      } else if (exportType === \"async\" && peek().id === \"function\") {\n        this.block = true;\n        advance(\"async\");\n        advance(\"function\");\n        token = state.syntax[\"function\"].fud(context | prodParams.preAsync);\n        state.funct[\"(scope)\"].setExported(token.name, def);\n      } else if (exportType === \"class\") {\n        this.block = true;\n        advance(\"class\");\n        token = state.syntax[\"class\"].fud(context);\n        state.funct[\"(scope)\"].setExported(token.name, def);\n      } else {\n        expression(context, 10);\n        state.funct[\"(scope)\"].setExported(null, def);\n      }\n      return this;\n    }\n    if (state.tokens.next.value === \"{\") {\n      // ExportDeclaration :: export ExportClause\n      advance(\"{\");\n      var exportedTokens = [];\n      while (!checkPunctuator(state.tokens.next, \"}\")) {\n        if (!state.tokens.next.identifier) {\n          /* istanbul ignore next */\n          error(\"E030\", state.tokens.next, state.tokens.next.value);\n        }\n        advance();\n\n        if (state.tokens.next.value === \"as\") {\n          advance(\"as\");\n          if (!state.tokens.next.identifier) {\n            /* istanbul ignore next */\n            error(\"E030\", state.tokens.next, state.tokens.next.value);\n          }\n          exportedTokens.push({\n            local: state.tokens.prev,\n            export: state.tokens.next\n          });\n          advance();\n        } else {\n          exportedTokens.push({\n            local: state.tokens.curr,\n            export: state.tokens.curr\n          });\n        }\n\n        if (!checkPunctuator(state.tokens.next, \"}\")) {\n          advance(\",\");\n        }\n      }\n      advance(\"}\");\n      if (state.tokens.next.value === \"from\") {\n        // ExportDeclaration :: export ExportClause FromClause\n        advance(\"from\");\n        moduleSpecifier = state.tokens.next;\n        advance(\"(string)\");\n      } else if (ok) {\n        exportedTokens.forEach(function(x) {\n          state.funct[\"(scope)\"].setExported(x.local, x.export);\n        });\n      }\n\n      if (exportedTokens.length === 0) {\n        if (moduleSpecifier) {\n          warning(\"W142\", this, \"export\", moduleSpecifier.value);\n        } else {\n          warning(\"W141\", this, \"export\");\n        }\n      }\n\n      return this;\n    } else if (state.tokens.next.id === \"var\") {\n      // ExportDeclaration :: export VariableStatement\n      advance(\"var\");\n      token = state.tokens.curr.fud(context);\n      token.first.forEach(function(binding) {\n        state.funct[\"(scope)\"].setExported(binding, binding);\n      });\n    } else if (state.tokens.next.id === \"let\") {\n      // ExportDeclaration :: export VariableStatement\n      advance(\"let\");\n      token = state.tokens.curr.fud(context);\n      token.first.forEach(function(binding) {\n        state.funct[\"(scope)\"].setExported(binding, binding);\n      });\n    } else if (state.tokens.next.id === \"const\") {\n      // ExportDeclaration :: export VariableStatement\n      advance(\"const\");\n      token = state.tokens.curr.fud(context);\n      token.first.forEach(function(binding) {\n        state.funct[\"(scope)\"].setExported(binding, binding);\n      });\n    } else if (state.tokens.next.id === \"function\") {\n      // ExportDeclaration :: export Declaration\n      this.block = true;\n      advance(\"function\");\n      token = state.syntax[\"function\"].fud(context);\n      state.funct[\"(scope)\"].setExported(token.name, token.name);\n    } else if (state.tokens.next.id === \"async\" && peek().id === \"function\") {\n      // ExportDeclaration :: export Declaration\n      this.block = true;\n      advance(\"async\");\n      advance(\"function\");\n      token = state.syntax[\"function\"].fud(context | prodParams.preAsync);\n      state.funct[\"(scope)\"].setExported(token.name, token.name);\n    } else if (state.tokens.next.id === \"class\") {\n      // ExportDeclaration :: export Declaration\n      this.block = true;\n      advance(\"class\");\n      token = state.syntax[\"class\"].fud(context);\n      state.funct[\"(scope)\"].setExported(token.name, token.name);\n    } else {\n      /* istanbul ignore next */\n      error(\"E024\", state.tokens.next, state.tokens.next.value);\n    }\n\n    return this;\n  }).exps = true;\n\n  /**\n   * Determine if SuperCall or SuperProperty may be used in the current context\n   * (as described by the provided \"functor\" object).\n   *\n   * @param {string} type - one of \"property\" or \"call\"\n   * @param {object} funct - a \"functor\" object describing the current function\n   *                         context\n   *\n   * @returns {boolean}\n   */\n  function supportsSuper(type, funct) {\n    if (type === \"call\" && funct[\"(async)\"]) {\n      return false;\n    }\n\n    if (type === \"property\" && funct[\"(method)\"]) {\n      return true;\n    }\n\n    if (type === \"call\" && funct[\"(statement)\"] &&\n      funct[\"(statement)\"].id === \"class\") {\n      return true;\n    }\n\n    if (funct[\"(arrow)\"]) {\n      return supportsSuper(type, funct[\"(context)\"]);\n    }\n\n    return false;\n  }\n\n  var superNud = function() {\n    var next = state.tokens.next;\n\n    if (checkPunctuators(next, [\"[\", \".\"])) {\n      if (!supportsSuper(\"property\", state.funct)) {\n        error(\"E063\", this);\n      }\n    } else if (checkPunctuator(next, \"(\")) {\n      if (!supportsSuper(\"call\", state.funct)) {\n        error(\"E064\", this);\n      }\n    } else {\n      error(\"E024\", next, next.value || next.id);\n    }\n\n    return this;\n  };\n\n  // Future Reserved Words\n\n  FutureReservedWord(\"abstract\");\n  FutureReservedWord(\"boolean\");\n  FutureReservedWord(\"byte\");\n  FutureReservedWord(\"char\");\n  FutureReservedWord(\"double\");\n  FutureReservedWord(\"enum\", { es5: true });\n  FutureReservedWord(\"export\", { es5: true });\n  FutureReservedWord(\"extends\", { es5: true });\n  FutureReservedWord(\"final\");\n  FutureReservedWord(\"float\");\n  FutureReservedWord(\"goto\");\n  FutureReservedWord(\"implements\", { es5: true, strictOnly: true });\n  FutureReservedWord(\"int\");\n  FutureReservedWord(\"interface\", { es5: true, strictOnly: true });\n  FutureReservedWord(\"long\");\n  FutureReservedWord(\"native\");\n  FutureReservedWord(\"package\", { es5: true, strictOnly: true });\n  FutureReservedWord(\"private\", { es5: true, strictOnly: true });\n  FutureReservedWord(\"protected\", { es5: true, strictOnly: true });\n  FutureReservedWord(\"public\", { es5: true, strictOnly: true });\n  FutureReservedWord(\"short\");\n  FutureReservedWord(\"static\", { es5: true, strictOnly: true });\n  FutureReservedWord(\"synchronized\");\n  FutureReservedWord(\"transient\");\n  FutureReservedWord(\"volatile\");\n\n  // this function is used to determine whether a squarebracket or a curlybracket\n  // expression is a comprehension array, destructuring assignment or a json value.\n\n  var lookupBlockType = function() {\n    var pn, pn1, prev;\n    var i = -1;\n    var bracketStack = 0;\n    var ret = {};\n    if (checkPunctuators(state.tokens.curr, [\"[\", \"{\"])) {\n      bracketStack += 1;\n    }\n    do {\n      prev = i === -1 ? state.tokens.curr : pn;\n      pn = i === -1 ? state.tokens.next : peek(i);\n      pn1 = peek(i + 1);\n      i = i + 1;\n      if (checkPunctuators(pn, [\"[\", \"{\"])) {\n        bracketStack += 1;\n      } else if (checkPunctuators(pn, [\"]\", \"}\"])) {\n        bracketStack -= 1;\n      }\n      if (bracketStack === 1 && pn.identifier && pn.value === \"for\" &&\n          !checkPunctuator(prev, \".\")) {\n        ret.isCompArray = true;\n        ret.notJson = true;\n        break;\n      }\n      if (bracketStack === 0 && checkPunctuators(pn, [\"}\", \"]\"])) {\n        if (pn1.value === \"=\") {\n          ret.isDestAssign = true;\n          ret.notJson = true;\n          break;\n        } else if (pn1.value === \".\") {\n          ret.notJson = true;\n          break;\n        }\n      }\n      if (checkPunctuator(pn, \";\")) {\n        ret.notJson = true;\n      }\n    } while (bracketStack > 0 && pn.id !== \"(end)\");\n    return ret;\n  };\n\n  /**\n   * Update an object used to track property names within object initializers\n   * and class bodies. Produce warnings in response to duplicated names.\n   *\n   * @param {object} props - a collection of all properties of the object or\n   *                         class to which the current property is being\n   *                         assigned\n   * @param {string} name - the property name\n   * @param {object} tkn - the token defining the property\n   * @param {boolean} [isClass] - whether the accessor is part of an ES6 Class\n   *                              definition\n   * @param {boolean} [isStatic] - whether the accessor is a static method\n   * @param {boolean} [isComputed] - whether the property is a computed expression like [Symbol.iterator]\n   */\n  function saveProperty(props, name, tkn, isClass, isStatic, isComputed) {\n    if (tkn.identifier) {\n      name = tkn.value;\n    }\n    var key = name;\n    if (isClass && isStatic) {\n      key = \"static \" + name;\n    }\n\n    if (props[key] && name !== \"__proto__\" && !isComputed) {\n      var msg = [\"key\", \"class method\", \"static class method\"];\n      msg = msg[(isClass || false) + (isStatic || false)];\n      warning(\"W075\", state.tokens.next, msg, name);\n    } else {\n      props[key] = Object.create(null);\n    }\n\n    props[key].basic = true;\n    props[key].basictkn = tkn;\n  }\n\n  /**\n   * Update an object used to track property names within object initializers\n   * and class bodies. Produce warnings in response to duplicated names.\n   *\n   * @param {string} accessorType - Either \"get\" or \"set\"\n   * @param {object} props - a collection of all properties of the object or\n   *                         class to which the current accessor is being\n   *                         assigned\n   * @param {object} tkn - the identifier token representing the accessor name\n   * @param {boolean} [isClass] - whether the accessor is part of an ES6 Class\n   *                              definition\n   * @param {boolean} [isStatic] - whether the accessor is a static method\n   */\n  function saveAccessor(accessorType, props, name, tkn, isClass, isStatic) {\n    var flagName = accessorType === \"get\" ? \"getterToken\" : \"setterToken\";\n    var key = name;\n    state.tokens.curr.accessorType = accessorType;\n    state.nameStack.set(tkn);\n    if (isClass && isStatic) {\n      key = \"static \" + name;\n    }\n\n    if (props[key]) {\n      if ((props[key].basic || props[key][flagName]) && name !== \"__proto__\") {\n        var msg = \"\";\n        if (isClass) {\n          if (isStatic) {\n            msg += \"static \";\n          }\n          msg += accessorType + \"ter method\";\n        } else {\n          msg = \"key\";\n        }\n        warning(\"W075\", state.tokens.next, msg, name);\n      }\n    } else {\n      props[key] = Object.create(null);\n    }\n\n    props[key][flagName] = tkn;\n    if (isStatic) {\n      props[key].static = true;\n    }\n  }\n\n  /**\n   * Parse a computed property name within object initializers and class bodies\n   * as introduced by ES2015. For example:\n   *\n   *     void {\n   *       [object.method()]: null\n   *     };\n   *\n   * @param {number} context - the parsing context\n   *\n   * @returns {object} - the token value that describes the expression which\n   *                     defines the property name\n   */\n  function computedPropertyName(context) {\n    advance(\"[\");\n\n    // Explicitly reclassify token as a delimeter to prevent its later\n    // interpretation as an \"infix\" operator.\n    state.tokens.curr.delim = true;\n    state.tokens.curr.lbp = 0;\n\n    if (!state.inES6()) {\n      warning(\"W119\", state.tokens.curr, \"computed property names\", \"6\");\n    }\n    var value = expression(context & ~prodParams.noin, 10);\n    advance(\"]\");\n    return value;\n  }\n\n  /**\n   * Test whether a given token is a punctuator whose `value` property matches\n   * one of the specified values. This function explicitly verifies the token's\n   * `type` property so that like-valued string literals (e.g. `\";\"`) do not\n   * produce false positives.\n   *\n   * @param {Token} token\n   * @param {Array.<string>} values\n   *\n   * @returns {boolean}\n   */\n  function checkPunctuators(token, values) {\n    if (token.type === \"(punctuator)\") {\n      return _.includes(values, token.value);\n    }\n    return false;\n  }\n\n  /**\n   * Test whether a given token is a punctuator whose `value` property matches\n   * the specified value. This function explicitly verifies the token's `type`\n   * property so that like-valued string literals (e.g. `\";\"`) do not produce\n   * false positives.\n   *\n   * @param {Token} token\n   * @param {string} value\n   *\n   * @returns {boolean}\n   */\n  function checkPunctuator(token, value) {\n    return token.type === \"(punctuator)\" && token.value === value;\n  }\n\n  // Check whether this function has been reached for a destructuring assign with undeclared values\n  function destructuringAssignOrJsonValue(context) {\n    // lookup for the assignment (ECMAScript 6 only)\n    // if it has semicolons, it is a block, so go parse it as a block\n    // or it's not a block, but there are assignments, check for undeclared variables\n\n    var block = lookupBlockType();\n    if (block.notJson) {\n      if (!state.inES6() && block.isDestAssign) {\n        /* istanbul ignore next */\n        warning(\"W104\", state.tokens.curr, \"destructuring assignment\", \"6\");\n      }\n      statements(context);\n    // otherwise parse json value\n    } else {\n      state.option.laxbreak = true;\n      state.jsonMode = true;\n      jsonValue();\n    }\n  }\n\n  /**\n   * Parse and define the three states of a list comprehension in order to\n   * avoid defining global variables, but keeping them to the list\n   * comprehension scope only. The order of the states are as follows:\n   *\n   * - \"use\" - which will be the returned iterative part of the list\n   *   comprehension\n   * - \"define\" - which will define the variables local to the list\n   *   comprehension\n   * - \"filter\" - which will help filter out values\n   */\n  var arrayComprehension = function() {\n    var CompArray = function() {\n      this.mode = \"use\";\n      this.variables = [];\n    };\n    var _carrays = [];\n    var _current;\n    function declare(v) {\n      var l = _current.variables.filter(function(elt) {\n        // if it has, change its undef state\n        if (elt.value === v) {\n          elt.undef = false;\n          return v;\n        }\n      }).length;\n      return l !== 0;\n    }\n    function use(v) {\n      var l = _current.variables.filter(function(elt) {\n        // and if it has been defined\n        if (elt.value === v && !elt.undef) {\n          if (elt.unused === true) {\n            elt.unused = false;\n          }\n          return v;\n        }\n      }).length;\n      // otherwise we warn about it\n      return (l === 0);\n    }\n    return { stack: function() {\n          _current = new CompArray();\n          _carrays.push(_current);\n        },\n        unstack: function() {\n          _current.variables.filter(function(v) {\n            if (v.unused)\n              warning(\"W098\", v.token, v.token.raw_text || v.value);\n            if (v.undef)\n              state.funct[\"(scope)\"].block.use(v.value, v.token);\n          });\n          _carrays.splice(-1, 1);\n          _current = _carrays[_carrays.length - 1];\n        },\n        setState: function(s) {\n          if (_.includes([\"use\", \"define\", \"generate\", \"filter\"], s))\n            _current.mode = s;\n        },\n        check: function(v) {\n          if (!_current) {\n            return;\n          }\n          // When we are in \"use\" state of the list comp, we enqueue that var\n          if (_current && _current.mode === \"use\") {\n            if (use(v)) {\n              _current.variables.push({\n                token: state.tokens.curr,\n                value: v,\n                undef: true,\n                unused: false\n              });\n            }\n            return true;\n          // When we are in \"define\" state of the list comp,\n          } else if (_current && _current.mode === \"define\") {\n            // check if the variable has been used previously\n            if (!declare(v)) {\n              _current.variables.push({\n                token: state.tokens.curr,\n                value: v,\n                undef: false,\n                unused: true\n              });\n            }\n            return true;\n          // When we are in the \"generate\" state of the list comp,\n          } else if (_current && _current.mode === \"generate\") {\n            state.funct[\"(scope)\"].block.use(v, state.tokens.curr);\n            return true;\n          // When we are in \"filter\" state,\n          } else if (_current && _current.mode === \"filter\") {\n            // we check whether current variable has been declared\n            if (use(v)) {\n              // if not we warn about it\n              /* istanbul ignore next */\n              state.funct[\"(scope)\"].block.use(v, state.tokens.curr);\n            }\n            return true;\n          }\n          /* istanbul ignore next */\n          return false;\n        }\n        };\n  };\n\n\n  /**\n   * Parse input according to the JSON format.\n   *\n   * http://json.org/\n   */\n  function jsonValue() {\n    function jsonObject() {\n      var o = {}, t = state.tokens.next;\n      advance(\"{\");\n      if (state.tokens.next.id !== \"}\") {\n        for (;;) {\n          if (state.tokens.next.id === \"(end)\") {\n            error(\"E026\", state.tokens.next, t.line);\n          } else if (state.tokens.next.id === \"}\") {\n            warning(\"W094\", state.tokens.curr);\n            break;\n          } else if (state.tokens.next.id === \",\") {\n            error(\"E028\", state.tokens.next);\n          } else if (state.tokens.next.id !== \"(string)\") {\n            warning(\"W095\", state.tokens.next, state.tokens.next.value);\n          }\n          if (o[state.tokens.next.value] === true) {\n            warning(\"W075\", state.tokens.next, \"key\", state.tokens.next.value);\n          } else if ((state.tokens.next.value === \"__proto__\" &&\n            !state.option.proto) || (state.tokens.next.value === \"__iterator__\" &&\n            !state.option.iterator)) {\n            warning(\"W096\", state.tokens.next, state.tokens.next.value);\n          } else {\n            o[state.tokens.next.value] = true;\n          }\n          advance();\n          advance(\":\");\n          jsonValue();\n          if (state.tokens.next.id !== \",\") {\n            break;\n          }\n          advance(\",\");\n        }\n      }\n      advance(\"}\");\n    }\n\n    function jsonArray() {\n      var t = state.tokens.next;\n      advance(\"[\");\n      if (state.tokens.next.id !== \"]\") {\n        for (;;) {\n          if (state.tokens.next.id === \"(end)\") {\n            error(\"E027\", state.tokens.next, t.line);\n          } else if (state.tokens.next.id === \"]\") {\n            warning(\"W094\", state.tokens.curr);\n            break;\n          } else if (state.tokens.next.id === \",\") {\n            error(\"E028\", state.tokens.next);\n          }\n          jsonValue();\n          if (state.tokens.next.id !== \",\") {\n            break;\n          }\n          advance(\",\");\n        }\n      }\n      advance(\"]\");\n    }\n\n    switch (state.tokens.next.id) {\n    case \"{\":\n      jsonObject();\n      break;\n    case \"[\":\n      jsonArray();\n      break;\n    case \"true\":\n    case \"false\":\n    case \"null\":\n    case \"(number)\":\n    case \"(string)\":\n      advance();\n      break;\n    case \"-\":\n      advance(\"-\");\n      advance(\"(number)\");\n      break;\n    default:\n      error(\"E003\", state.tokens.next);\n    }\n  }\n\n  /**\n   * Lint dynamically-evaluated code, appending any resulting errors/warnings\n   * into the global `errors` array.\n   *\n   * @param {array} internals - collection of \"internals\" objects describing\n   *                            string tokens that contain evaluated code\n   * @param {object} options - linting options to apply\n   * @param {object} globals - globally-defined bindings for the evaluated code\n   */\n  function lintEvalCode(internals, options, globals) {\n    var priorErrorCount, idx, jdx, internal;\n\n    for (idx = 0; idx < internals.length; idx += 1) {\n      internal = internals[idx];\n      options.scope = internal.elem;\n      priorErrorCount = JSHINT.errors.length;\n\n      itself(internal.code, options, globals);\n\n      for (jdx = priorErrorCount; jdx < JSHINT.errors.length; jdx += 1) {\n        JSHINT.errors[jdx].line += internal.token.line - 1;\n      }\n    }\n  }\n\n  var escapeRegex = function(str) {\n    return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n  };\n\n  // The actual JSHINT function itself.\n  var itself = function(s, o, g) {\n    var x, reIgnoreStr, reIgnore;\n    var optionKeys, newOptionObj, newIgnoredObj;\n\n    o = _.clone(o);\n    state.reset();\n    newOptionObj = state.option;\n    newIgnoredObj = state.ignored;\n\n    if (o && o.scope) {\n      JSHINT.scope = o.scope;\n    } else {\n      JSHINT.errors = [];\n      JSHINT.internals = [];\n      JSHINT.blacklist = {};\n      JSHINT.scope = \"(main)\";\n    }\n\n    predefined = Object.create(null);\n    combine(predefined, vars.ecmaIdentifiers[3]);\n    combine(predefined, vars.reservedVars);\n\n    declared = Object.create(null);\n    var exported = Object.create(null); // Variables that live outside the current file\n\n    function each(obj, cb) {\n      if (!obj)\n        return;\n\n      if (!Array.isArray(obj) && typeof obj === \"object\")\n        obj = Object.keys(obj);\n\n      obj.forEach(cb);\n    }\n\n    if (o) {\n\n      each([o.predef, o.globals], function(dict) {\n        each(dict, function(item) {\n          var slice, prop;\n\n          if (item[0] === \"-\") {\n            slice = item.slice(1);\n            JSHINT.blacklist[slice] = slice;\n            // remove from predefined if there\n            delete predefined[slice];\n          } else {\n            prop = Object.getOwnPropertyDescriptor(dict, item);\n            predefined[item] = prop ? prop.value : false;\n          }\n        });\n      });\n\n      each(o.exported || null, function(item) {\n        exported[item] = true;\n      });\n\n      delete o.predef;\n      delete o.exported;\n\n      optionKeys = Object.keys(o);\n      for (x = 0; x < optionKeys.length; x++) {\n        if (/^-W\\d{3}$/g.test(optionKeys[x])) {\n          newIgnoredObj[optionKeys[x].slice(1)] = true;\n        } else {\n          var optionKey = optionKeys[x];\n          newOptionObj[optionKey] = o[optionKey];\n        }\n      }\n    }\n\n    state.option = newOptionObj;\n    state.ignored = newIgnoredObj;\n\n    state.option.indent = state.option.indent || 4;\n    state.option.maxerr = state.option.maxerr || 50;\n\n    indent = 1;\n\n    var scopeManagerInst = scopeManager(state, predefined, exported, declared);\n    scopeManagerInst.on(\"warning\", function(ev) {\n      warning.apply(null, [ ev.code, ev.token].concat(ev.data));\n    });\n\n    scopeManagerInst.on(\"error\", function(ev) {\n      /* istanbul ignore next */\n      error.apply(null, [ ev.code, ev.token ].concat(ev.data));\n    });\n\n    state.funct = functor(\"(global)\", null, {\n      \"(global)\"    : true,\n      \"(scope)\"     : scopeManagerInst,\n      \"(comparray)\" : arrayComprehension(),\n      \"(metrics)\"   : createMetrics(state.tokens.next)\n    });\n\n    functions = [state.funct];\n    member = {};\n    membersOnly = null;\n    inblock = false;\n    lookahead = [];\n\n    if (!isString(s) && !Array.isArray(s)) {\n      errorAt(\"E004\", 0);\n      return false;\n    }\n\n    api = {\n      get isJSON() {\n        /* istanbul ignore next */\n        return state.jsonMode;\n      },\n\n      getOption: function(name) {\n        return state.option[name] || null;\n      },\n\n      getCache: function(name) {\n        return state.cache[name];\n      },\n\n      setCache: function(name, value) {\n        state.cache[name] = value;\n      },\n\n      warn: function(code, data) {\n        warningAt.apply(null, [ code, data.line, data.char ].concat(data.data));\n      },\n\n      on: function(names, listener) {\n        names.split(\" \").forEach(function(name) {\n          emitter.on(name, listener);\n        }.bind(this));\n      }\n    };\n\n    emitter.removeAllListeners();\n    (extraModules || []).forEach(function(func) {\n      func(api);\n    });\n\n    state.tokens.prev = state.tokens.curr = state.tokens.next = state.syntax[\"(begin)\"];\n    if (o && o.ignoreDelimiters) {\n\n      if (!Array.isArray(o.ignoreDelimiters)) {\n        /* istanbul ignore next */\n        o.ignoreDelimiters = [o.ignoreDelimiters];\n      }\n\n      o.ignoreDelimiters.forEach(function(delimiterPair) {\n        if (!delimiterPair.start || !delimiterPair.end)\n            return;\n\n        reIgnoreStr = escapeRegex(delimiterPair.start) +\n                      \"[\\\\s\\\\S]*?\" +\n                      escapeRegex(delimiterPair.end);\n\n        reIgnore = new RegExp(reIgnoreStr, \"ig\");\n\n        s = s.replace(reIgnore, function(match) {\n          return match.replace(/./g, \" \");\n        });\n      });\n    }\n\n    lex = new Lexer(s);\n\n    lex.on(\"warning\", function(ev) {\n      warningAt.apply(null, [ ev.code, ev.line, ev.character].concat(ev.data));\n    });\n\n    lex.on(\"error\", function(ev) {\n      errorAt.apply(null, [ ev.code, ev.line, ev.character ].concat(ev.data));\n    });\n\n    lex.on(\"fatal\", function(ev) {\n      quit(\"E041\", ev);\n    });\n\n    lex.on(\"Identifier\", function(ev) {\n      emitter.emit(\"Identifier\", ev);\n    });\n\n    lex.on(\"String\", function(ev) {\n      emitter.emit(\"String\", ev);\n    });\n\n    lex.on(\"Number\", function(ev) {\n      emitter.emit(\"Number\", ev);\n    });\n\n    // Check options\n    var name;\n    for (name in o) {\n      if (_.has(o, name)) {\n        checkOption(name, true, state.tokens.curr);\n      }\n    }\n    if (o) {\n      for (name in o.unstable) {\n        if (_.has(o.unstable, name)) {\n          checkOption(name, false, state.tokens.curr);\n        }\n      }\n    }\n\n    try {\n      applyOptions();\n\n      // combine the passed globals after we've assumed all our options\n      combine(predefined, g || {});\n\n      //reset values\n      checkComma.first = true;\n\n      advance();\n      switch (state.tokens.next.id) {\n      case \"{\":\n      case \"[\":\n        destructuringAssignOrJsonValue(0);\n        break;\n      default:\n        directives();\n\n        if (state.directive[\"use strict\"]) {\n          if (!state.allowsGlobalUsd()) {\n            warning(\"W097\", state.directive[\"use strict\"]);\n          }\n        }\n\n        statements(0);\n      }\n\n      if (state.tokens.next.id !== \"(end)\") {\n        quit(\"E041\", state.tokens.curr);\n      }\n\n      state.funct[\"(scope)\"].unstack();\n\n    } catch (err) {\n      if (err && err.name === \"JSHintError\") {\n        var nt = state.tokens.next || {};\n        JSHINT.errors.push({\n          scope     : \"(main)\",\n          raw       : err.raw,\n          code      : err.code,\n          reason    : err.reason,\n          line      : err.line || nt.line,\n          character : err.character || nt.from\n        });\n      } else {\n        /* istanbul ignore next */\n        throw err;\n      }\n    }\n\n    // Loop over the listed \"internals\", and check them as well.\n    if (JSHINT.scope === \"(main)\") {\n      lintEvalCode(JSHINT.internals, o || {}, g);\n    }\n\n    return JSHINT.errors.length === 0;\n  };\n\n  // Modules.\n  itself.addModule = function(func) {\n    extraModules.push(func);\n  };\n\n  itself.addModule(style.register);\n\n  // Data summary.\n  itself.data = function() {\n    var data = {\n      functions: [],\n      options: state.option\n    };\n\n    var fu, f, i, n, globals;\n\n    if (itself.errors.length) {\n      data.errors = itself.errors;\n    }\n\n    if (state.jsonMode) {\n      /* istanbul ignore next */\n      data.json = true;\n    }\n\n    var impliedGlobals = state.funct[\"(scope)\"].getImpliedGlobals();\n    if (impliedGlobals.length > 0) {\n      data.implieds = impliedGlobals;\n    }\n\n    globals = state.funct[\"(scope)\"].getUsedOrDefinedGlobals();\n    if (globals.length > 0) {\n      data.globals = globals;\n    }\n\n    for (i = 1; i < functions.length; i += 1) {\n      f = functions[i];\n      fu = {};\n\n      fu.name = f[\"(name)\"];\n      fu.param = f[\"(params)\"];\n      fu.line = f[\"(line)\"];\n      fu.character = f[\"(character)\"];\n      fu.last = f[\"(last)\"];\n      fu.lastcharacter = f[\"(lastcharacter)\"];\n\n      fu.metrics = {\n        complexity: f[\"(metrics)\"].ComplexityCount,\n        parameters: f[\"(metrics)\"].arity,\n        statements: f[\"(metrics)\"].statementCount\n      };\n\n      data.functions.push(fu);\n    }\n\n    var unuseds = state.funct[\"(scope)\"].getUnuseds();\n    if (unuseds.length > 0) {\n      data.unused = unuseds;\n    }\n\n    for (n in member) {\n      if (typeof member[n] === \"number\") {\n        data.member = member;\n        break;\n      }\n    }\n\n    return data;\n  };\n\n  itself.jshint = itself;\n\n  return itself;\n}());\n\n// Make JSHINT a Node module, if possible.\nif (typeof exports === \"object\" && exports) {\n  exports.JSHINT = JSHINT;\n}\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n","var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n","var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n","var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n","var arrayMap = require('./_arrayMap'),\n    copyArray = require('./_copyArray'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol'),\n    stringToPath = require('./_stringToPath'),\n    toKey = require('./_toKey'),\n    toString = require('./toString');\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return arrayMap(value, toKey);\n  }\n  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n}\n\nmodule.exports = toPath;\n","\n/**\n * Topological sorting function\n *\n * @param {Array} edges\n * @returns {Array}\n */\n\nmodule.exports = function(edges) {\n  return toposort(uniqueNodes(edges), edges)\n}\n\nmodule.exports.array = toposort\n\nfunction toposort(nodes, edges) {\n  var cursor = nodes.length\n    , sorted = new Array(cursor)\n    , visited = {}\n    , i = cursor\n    // Better data structures make algorithm much faster.\n    , outgoingEdges = makeOutgoingEdges(edges)\n    , nodesHash = makeNodesHash(nodes)\n\n  // check for unknown nodes\n  edges.forEach(function(edge) {\n    if (!nodesHash.has(edge[0]) || !nodesHash.has(edge[1])) {\n      throw new Error('Unknown node. There is an unknown node in the supplied edges.')\n    }\n  })\n\n  while (i--) {\n    if (!visited[i]) visit(nodes[i], i, new Set())\n  }\n\n  return sorted\n\n  function visit(node, i, predecessors) {\n    if(predecessors.has(node)) {\n      var nodeRep\n      try {\n        nodeRep = \", node was:\" + JSON.stringify(node)\n      } catch(e) {\n        nodeRep = \"\"\n      }\n      throw new Error('Cyclic dependency' + nodeRep)\n    }\n\n    if (!nodesHash.has(node)) {\n      throw new Error('Found unknown node. Make sure to provided all involved nodes. Unknown node: '+JSON.stringify(node))\n    }\n\n    if (visited[i]) return;\n    visited[i] = true\n\n    var outgoing = outgoingEdges.get(node) || new Set()\n    outgoing = Array.from(outgoing)\n\n    if (i = outgoing.length) {\n      predecessors.add(node)\n      do {\n        var child = outgoing[--i]\n        visit(child, nodesHash.get(child), predecessors)\n      } while (i)\n      predecessors.delete(node)\n    }\n\n    sorted[--cursor] = node\n  }\n}\n\nfunction uniqueNodes(arr){\n  var res = new Set()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    res.add(edge[0])\n    res.add(edge[1])\n  }\n  return Array.from(res)\n}\n\nfunction makeOutgoingEdges(arr){\n  var edges = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    if (!edges.has(edge[0])) edges.set(edge[0], new Set())\n    if (!edges.has(edge[1])) edges.set(edge[1], new Set())\n    edges.get(edge[0]).add(edge[1])\n  }\n  return edges\n}\n\nfunction makeNodesHash(arr){\n  var res = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res.set(arr[i], i)\n  }\n  return res\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"string.fromcodepoint\");\n\n/**\n * \\\\ - matches the backslash which indicates the beginning of an escape sequence\n * (\n *   u\\{([0-9A-Fa-f]+)\\} - first alternative; matches the variable-length hexadecimal escape sequence (\\u{ABCD0})\n * |\n *   u([0-9A-Fa-f]{4}) - second alternative; matches the 4-digit hexadecimal escape sequence (\\uABCD)\n * |\n *   x([0-9A-Fa-f]{2}) - third alternative; matches the 2-digit hexadecimal escape sequence (\\xA5)\n * |\n *   ([1-7][0-7]{0,2}|[0-7]{2,3}) - fourth alternative; matches the up-to-3-digit octal escape sequence (\\5 or \\512)\n * |\n *   (['\"tbrnfv0\\\\]) - fifth alternative; matches the special escape characters (\\t, \\n and so on)\n * |\n *   \\U([0-9A-Fa-f]+) - sixth alternative; matches the 8-digit hexadecimal escape sequence used by python (\\U0001F3B5)\n * )\n */\nvar jsEscapeRegex = /\\\\(u\\{([0-9A-Fa-f]+)\\}|u([0-9A-Fa-f]{4})|x([0-9A-Fa-f]{2})|([1-7][0-7]{0,2}|[0-7]{2,3})|(['\"tbrnfv0\\\\]))|\\\\U([0-9A-Fa-f]{8})/g;\nvar usualEscapeSequences = {\n  '0': '\\0',\n  'b': '\\b',\n  'f': '\\f',\n  'n': '\\n',\n  'r': '\\r',\n  't': '\\t',\n  'v': '\\v',\n  '\\'': '\\'',\n  '\"': '\"',\n  '\\\\': '\\\\'\n};\n\nvar fromHex = function fromHex(str) {\n  return String.fromCodePoint(parseInt(str, 16));\n};\n\nvar fromOct = function fromOct(str) {\n  return String.fromCodePoint(parseInt(str, 8));\n};\n\nvar _default = function _default(string) {\n  return string.replace(jsEscapeRegex, function (_, __, varHex, longHex, shortHex, octal, specialCharacter, python) {\n    if (varHex !== undefined) {\n      return fromHex(varHex);\n    } else if (longHex !== undefined) {\n      return fromHex(longHex);\n    } else if (shortHex !== undefined) {\n      return fromHex(shortHex);\n    } else if (octal !== undefined) {\n      return fromOct(octal);\n    } else if (python !== undefined) {\n      return fromHex(python);\n    } else {\n      return usualEscapeSequences[specialCharacter];\n    }\n  });\n};\n\nexports.default = _default;\nmodule.exports = exports.default;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","function set(obj, key, val) {\n\tif (typeof val.value === 'object') val.value = klona(val.value);\n\tif (!val.enumerable || val.get || val.set || !val.configurable || !val.writable || key === '__proto__') {\n\t\tObject.defineProperty(obj, key, val);\n\t} else obj[key] = val.value;\n}\n\nexport function klona(x) {\n\tif (typeof x !== 'object') return x;\n\n\tvar i=0, k, list, tmp, str=Object.prototype.toString.call(x);\n\n\tif (str === '[object Object]') {\n\t\ttmp = Object.create(x.__proto__ || null);\n\t} else if (str === '[object Array]') {\n\t\ttmp = Array(x.length);\n\t} else if (str === '[object Set]') {\n\t\ttmp = new Set;\n\t\tx.forEach(function (val) {\n\t\t\ttmp.add(klona(val));\n\t\t});\n\t} else if (str === '[object Map]') {\n\t\ttmp = new Map;\n\t\tx.forEach(function (val, key) {\n\t\t\ttmp.set(klona(key), klona(val));\n\t\t});\n\t} else if (str === '[object Date]') {\n\t\ttmp = new Date(+x);\n\t} else if (str === '[object RegExp]') {\n\t\ttmp = new RegExp(x.source, x.flags);\n\t} else if (str === '[object DataView]') {\n\t\ttmp = new x.constructor( klona(x.buffer) );\n\t} else if (str === '[object ArrayBuffer]') {\n\t\ttmp = x.slice(0);\n\t} else if (str.slice(-6) === 'Array]') {\n\t\t// ArrayBuffer.isView(x)\n\t\t// ~> `new` bcuz `Buffer.slice` => ref\n\t\ttmp = new x.constructor(x);\n\t}\n\n\tif (tmp) {\n\t\tfor (list=Object.getOwnPropertySymbols(x); i < list.length; i++) {\n\t\t\tset(tmp, list[i], Object.getOwnPropertyDescriptor(x, list[i]));\n\t\t}\n\n\t\tfor (i=0, list=Object.getOwnPropertyNames(x); i < list.length; i++) {\n\t\t\tif (Object.hasOwnProperty.call(tmp, k=list[i]) && tmp[k] === x[k]) continue;\n\t\t\tset(tmp, k, Object.getOwnPropertyDescriptor(x, k));\n\t\t}\n\t}\n\n\treturn tmp || x;\n}\n","/**\n * Utility module to work with key-value stores.\n *\n * @module map\n */\n\n/**\n * Creates a new Map instance.\n *\n * @function\n * @return {Map<any, any>}\n *\n * @function\n */\nexport const create = () => new Map()\n\n/**\n * Copy a Map object into a fresh Map object.\n *\n * @function\n * @template X,Y\n * @param {Map<X,Y>} m\n * @return {Map<X,Y>}\n */\nexport const copy = m => {\n  const r = create()\n  m.forEach((v, k) => { r.set(k, v) })\n  return r\n}\n\n/**\n * Get map property. Create T if property is undefined and set T on map.\n *\n * ```js\n * const listeners = map.setIfUndefined(events, 'eventName', set.create)\n * listeners.add(listener)\n * ```\n *\n * @function\n * @template T,K\n * @param {Map<K, T>} map\n * @param {K} key\n * @param {function():T} createT\n * @return {T}\n */\nexport const setIfUndefined = (map, key, createT) => {\n  let set = map.get(key)\n  if (set === undefined) {\n    map.set(key, set = createT())\n  }\n  return set\n}\n\n/**\n * Creates an Array and populates it with the content of all key-value pairs using the `f(value, key)` function.\n *\n * @function\n * @template K\n * @template V\n * @template R\n * @param {Map<K,V>} m\n * @param {function(V,K):R} f\n * @return {Array<R>}\n */\nexport const map = (m, f) => {\n  const res = []\n  for (const [key, value] of m) {\n    res.push(f(value, key))\n  }\n  return res\n}\n\n/**\n * Tests whether any key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @todo should rename to some - similarly to Array.some\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const any = (m, f) => {\n  for (const [key, value] of m) {\n    if (f(value, key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * Tests whether all key-value pairs pass the test implemented by `f(value, key)`.\n *\n * @function\n * @template K\n * @template V\n * @param {Map<K,V>} m\n * @param {function(V,K):boolean} f\n * @return {boolean}\n */\nexport const all = (m, f) => {\n  for (const [key, value] of m) {\n    if (!f(value, key)) {\n      return false\n    }\n  }\n  return true\n}\n","/**\n * Utility module to work with sets.\n *\n * @module set\n */\n\nexport const create = () => new Set()\n\n/**\n * @template T\n * @param {Set<T>} set\n * @return {Array<T>}\n */\nexport const toArray = set => Array.from(set)\n","/**\n * Utility module to work with Arrays.\n *\n * @module array\n */\n\n/**\n * Return the last element of an array. The element must exist\n *\n * @template L\n * @param {Array<L>} arr\n * @return {L}\n */\nexport const last = arr => arr[arr.length - 1]\n\n/**\n * @template C\n * @return {Array<C>}\n */\nexport const create = () => /** @type {Array<C>} */ ([])\n\n/**\n * @template D\n * @param {Array<D>} a\n * @return {Array<D>}\n */\nexport const copy = a => /** @type {Array<D>} */ (a.slice())\n\n/**\n * Append elements from src to dest\n *\n * @template M\n * @param {Array<M>} dest\n * @param {Array<M>} src\n */\nexport const appendTo = (dest, src) => {\n  for (let i = 0; i < src.length; i++) {\n    dest.push(src[i])\n  }\n}\n\n/**\n * Transforms something array-like to an actual Array.\n *\n * @function\n * @template T\n * @param {ArrayLike<T>|Iterable<T>} arraylike\n * @return {T}\n */\nexport const from = Array.from\n\n/**\n * True iff condition holds on every element in the Array.\n *\n * @function\n * @template ITEM\n *\n * @param {Array<ITEM>} arr\n * @param {function(ITEM, number, Array<ITEM>):boolean} f\n * @return {boolean}\n */\nexport const every = (arr, f) => arr.every(f)\n\n/**\n * True iff condition holds on some element in the Array.\n *\n * @function\n * @template S\n * @param {Array<S>} arr\n * @param {function(S, number, Array<S>):boolean} f\n * @return {boolean}\n */\nexport const some = (arr, f) => arr.some(f)\n\n/**\n * @template ELEM\n *\n * @param {Array<ELEM>} a\n * @param {Array<ELEM>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a.length === b.length && every(a, (item, index) => item === b[index])\n\n/**\n * @template ELEM\n * @param {Array<Array<ELEM>>} arr\n * @return {Array<ELEM>}\n */\nexport const flatten = arr => arr.reduce((acc, val) => acc.concat(val), [])\n","/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n","/**\n * Common Math expressions.\n *\n * @module math\n */\n\nexport const floor = Math.floor\nexport const ceil = Math.ceil\nexport const abs = Math.abs\nexport const imul = Math.imul\nexport const round = Math.round\nexport const log10 = Math.log10\nexport const log2 = Math.log2\nexport const log = Math.log\nexport const sqrt = Math.sqrt\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The sum of a and b\n */\nexport const add = (a, b) => a + b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The smaller element of a and b\n */\nexport const min = (a, b) => a < b ? a : b\n\n/**\n * @function\n * @param {number} a\n * @param {number} b\n * @return {number} The bigger element of a and b\n */\nexport const max = (a, b) => a > b ? a : b\n\nexport const isNaN = Number.isNaN\n\nexport const pow = Math.pow\n/**\n * Base 10 exponential function. Returns the value of 10 raised to the power of pow.\n *\n * @param {number} exp\n * @return {number}\n */\nexport const exp10 = exp => Math.pow(10, exp)\n\nexport const sign = Math.sign\n\n/**\n * @param {number} n\n * @return {boolean} Wether n is negative. This function also differentiates between -0 and +0\n */\nexport const isNegativeZero = n => n !== 0 ? n < 0 : 1 / n < 0\n","/**\n * Utility module to work with strings.\n *\n * @module string\n */\n\nexport const fromCharCode = String.fromCharCode\nexport const fromCodePoint = String.fromCodePoint\n\n/**\n * @param {string} s\n * @return {string}\n */\nconst toLowerCase = s => s.toLowerCase()\n\nconst trimLeftRegex = /^\\s*/g\n\n/**\n * @param {string} s\n * @return {string}\n */\nexport const trimLeft = s => s.replace(trimLeftRegex, '')\n\nconst fromCamelCaseRegex = /([A-Z])/g\n\n/**\n * @param {string} s\n * @param {string} separator\n * @return {string}\n */\nexport const fromCamelCase = (s, separator) => trimLeft(s.replace(fromCamelCaseRegex, match => `${separator}${toLowerCase(match)}`))\n\n/**\n * Compute the utf8ByteLength\n * @param {string} str\n * @return {number}\n */\nexport const utf8ByteLength = str => unescape(encodeURIComponent(str)).length\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Polyfill = str => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  const buf = new Uint8Array(len)\n  for (let i = 0; i < len; i++) {\n    buf[i] = /** @type {number} */ (encodedString.codePointAt(i))\n  }\n  return buf\n}\n\n/* istanbul ignore next */\nexport const utf8TextEncoder = /** @type {TextEncoder} */ (typeof TextEncoder !== 'undefined' ? new TextEncoder() : null)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\nexport const _encodeUtf8Native = str => utf8TextEncoder.encode(str)\n\n/**\n * @param {string} str\n * @return {Uint8Array}\n */\n/* istanbul ignore next */\nexport const encodeUtf8 = utf8TextEncoder ? _encodeUtf8Native : _encodeUtf8Polyfill\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Polyfill = buf => {\n  let remainingLen = buf.length\n  let encodedString = ''\n  let bufPos = 0\n  while (remainingLen > 0) {\n    const nextLen = remainingLen < 10000 ? remainingLen : 10000\n    const bytes = buf.subarray(bufPos, bufPos + nextLen)\n    bufPos += nextLen\n    // Starting with ES5.1 we can supply a generic array-like object as arguments\n    encodedString += String.fromCodePoint.apply(null, /** @type {any} */ (bytes))\n    remainingLen -= nextLen\n  }\n  return decodeURIComponent(escape(encodedString))\n}\n\n/* istanbul ignore next */\nexport let utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf-8', { fatal: true, ignoreBOM: true })\n\n/* istanbul ignore next */\nif (utf8TextDecoder && utf8TextDecoder.decode(new Uint8Array()).length === 1) {\n  // Safari doesn't handle BOM correctly.\n  // This fixes a bug in Safari 13.0.5 where it produces a BOM the first time it is called.\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the first call and\n  // utf8TextDecoder.decode(new Uint8Array()).length === 1 on the second call\n  // Another issue is that from then on no BOM chars are recognized anymore\n  /* istanbul ignore next */\n  utf8TextDecoder = null\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\nexport const _decodeUtf8Native = buf => /** @type {TextDecoder} */ (utf8TextDecoder).decode(buf)\n\n/**\n * @param {Uint8Array} buf\n * @return {string}\n */\n/* istanbul ignore next */\nexport const decodeUtf8 = utf8TextDecoder ? _decodeUtf8Native : _decodeUtf8Polyfill\n","/**\n * Often used conditions.\n *\n * @module conditions\n */\n\n/**\n * @template T\n * @param {T|null|undefined} v\n * @return {T|null}\n */\n/* istanbul ignore next */\nexport const undefinedToNull = v => v === undefined ? null : v\n","/* global localStorage, addEventListener */\n\n/**\n * Isomorphic variable storage.\n *\n * Uses LocalStorage in the browser and falls back to in-memory storage.\n *\n * @module storage\n */\n\n/* istanbul ignore next */\nclass VarStoragePolyfill {\n  constructor () {\n    this.map = new Map()\n  }\n\n  /**\n   * @param {string} key\n   * @param {any} newValue\n   */\n  setItem (key, newValue) {\n    this.map.set(key, newValue)\n  }\n\n  /**\n   * @param {string} key\n   */\n  getItem (key) {\n    return this.map.get(key)\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @type {any}\n */\nlet _localStorage = new VarStoragePolyfill()\nlet usePolyfill = true\n\ntry {\n  // if the same-origin rule is violated, accessing localStorage might thrown an error\n  /* istanbul ignore next */\n  if (typeof localStorage !== 'undefined') {\n    _localStorage = localStorage\n    usePolyfill = false\n  }\n} catch (e) { }\n\n/* istanbul ignore next */\n/**\n * This is basically localStorage in browser, or a polyfill in nodejs\n */\nexport const varStorage = _localStorage\n\n/* istanbul ignore next */\n/**\n * A polyfill for `addEventListener('storage', event => {..})` that does nothing if the polyfill is being used.\n *\n * @param {function({ key: string, newValue: string, oldValue: string }): void} eventHandler\n * @function\n */\nexport const onChange = eventHandler => usePolyfill || addEventListener('storage', /** @type {any} */ (eventHandler))\n","/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\n\n/* istanbul ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name)\n/* istanbul ignore next */\nexport const isBrowser = typeof window !== 'undefined' && !isNode\n/* istanbul ignore next */\nexport const isMac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* istanbul ignore next */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      /* istanbul ignore next */\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n    // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create()\n      // eslint-disable-next-line no-undef\n      ;(location.search || '?').slice(1).split('&').forEach(kv => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasParam = name => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* istanbul ignore next */\nexport const getParam = (name, defaultVal) => computeParams().get(name) || defaultVal\n// export const getArgs = name => computeParams() && args\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* istanbul ignore next */\nexport const getVariable = name => isNode ? conditions.undefinedToNull(process.env[name.toUpperCase()]) : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\nexport const getConf = name => computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* istanbul ignore next */\nexport const hasConf = name => hasParam('--' + name) || getVariable(name) !== null\n\n/* istanbul ignore next */\nexport const production = hasConf('production')\n","/**\n * Utility functions to work with buffers (Uint8Array).\n *\n * @module buffer\n */\n\nimport * as string from './string.js'\nimport * as env from './environment.js'\nimport * as encoding from './encoding.js'\nimport * as decoding from './decoding.js'\n\n/**\n * @param {number} len\n */\nexport const createUint8ArrayFromLen = len => new Uint8Array(len)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n * @param {number} byteOffset\n * @param {number} length\n */\nexport const createUint8ArrayViewFromArrayBuffer = (buffer, byteOffset, length) => new Uint8Array(buffer, byteOffset, length)\n\n/**\n * Create Uint8Array with initial content from buffer\n *\n * @param {ArrayBuffer} buffer\n */\nexport const createUint8ArrayFromArrayBuffer = buffer => new Uint8Array(buffer)\n\n/* istanbul ignore next */\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Browser = bytes => {\n  let s = ''\n  for (let i = 0; i < bytes.byteLength; i++) {\n    s += string.fromCharCode(bytes[i])\n  }\n  // eslint-disable-next-line no-undef\n  return btoa(s)\n}\n\n/**\n * @param {Uint8Array} bytes\n * @return {string}\n */\nconst toBase64Node = bytes => Buffer.from(bytes.buffer, bytes.byteOffset, bytes.byteLength).toString('base64')\n\n/* istanbul ignore next */\n/**\n * @param {string} s\n * @return {Uint8Array}\n */\nconst fromBase64Browser = s => {\n  // eslint-disable-next-line no-undef\n  const a = atob(s)\n  const bytes = createUint8ArrayFromLen(a.length)\n  for (let i = 0; i < a.length; i++) {\n    bytes[i] = a.charCodeAt(i)\n  }\n  return bytes\n}\n\n/**\n * @param {string} s\n */\nconst fromBase64Node = s => {\n  const buf = Buffer.from(s, 'base64')\n  return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength)\n}\n\n/* istanbul ignore next */\nexport const toBase64 = env.isBrowser ? toBase64Browser : toBase64Node\n\n/* istanbul ignore next */\nexport const fromBase64 = env.isBrowser ? fromBase64Browser : fromBase64Node\n\n/**\n * Copy the content of an Uint8Array view to a new ArrayBuffer.\n *\n * @param {Uint8Array} uint8Array\n * @return {Uint8Array}\n */\nexport const copyUint8Array = uint8Array => {\n  const newBuf = createUint8ArrayFromLen(uint8Array.byteLength)\n  newBuf.set(uint8Array)\n  return newBuf\n}\n\n/**\n * Encode anything as a UInt8Array. It's a pun on typescripts's `any` type.\n * See encoding.writeAny for more information.\n *\n * @param {any} data\n * @return {Uint8Array}\n */\nexport const encodeAny = data => {\n  const encoder = encoding.createEncoder()\n  encoding.writeAny(encoder, data)\n  return encoding.toUint8Array(encoder)\n}\n\n/**\n * Decode an any-encoded value.\n *\n * @param {Uint8Array} buf\n * @return {any}\n */\nexport const decodeAny = buf => decoding.readAny(decoding.createDecoder(buf))\n","/* eslint-env browser */\n\n/**\n * Binary data constants.\n *\n * @module binary\n */\n\n/**\n * n-th bit activated.\n *\n * @type {number}\n */\nexport const BIT1 = 1\nexport const BIT2 = 2\nexport const BIT3 = 4\nexport const BIT4 = 8\nexport const BIT5 = 16\nexport const BIT6 = 32\nexport const BIT7 = 64\nexport const BIT8 = 128\nexport const BIT9 = 256\nexport const BIT10 = 512\nexport const BIT11 = 1024\nexport const BIT12 = 2048\nexport const BIT13 = 4096\nexport const BIT14 = 8192\nexport const BIT15 = 16384\nexport const BIT16 = 32768\nexport const BIT17 = 65536\nexport const BIT18 = 1 << 17\nexport const BIT19 = 1 << 18\nexport const BIT20 = 1 << 19\nexport const BIT21 = 1 << 20\nexport const BIT22 = 1 << 21\nexport const BIT23 = 1 << 22\nexport const BIT24 = 1 << 23\nexport const BIT25 = 1 << 24\nexport const BIT26 = 1 << 25\nexport const BIT27 = 1 << 26\nexport const BIT28 = 1 << 27\nexport const BIT29 = 1 << 28\nexport const BIT30 = 1 << 29\nexport const BIT31 = 1 << 30\nexport const BIT32 = 1 << 31\n\n/**\n * First n bits activated.\n *\n * @type {number}\n */\nexport const BITS0 = 0\nexport const BITS1 = 1\nexport const BITS2 = 3\nexport const BITS3 = 7\nexport const BITS4 = 15\nexport const BITS5 = 31\nexport const BITS6 = 63\nexport const BITS7 = 127\nexport const BITS8 = 255\nexport const BITS9 = 511\nexport const BITS10 = 1023\nexport const BITS11 = 2047\nexport const BITS12 = 4095\nexport const BITS13 = 8191\nexport const BITS14 = 16383\nexport const BITS15 = 32767\nexport const BITS16 = 65535\nexport const BITS17 = BIT18 - 1\nexport const BITS18 = BIT19 - 1\nexport const BITS19 = BIT20 - 1\nexport const BITS20 = BIT21 - 1\nexport const BITS21 = BIT22 - 1\nexport const BITS22 = BIT23 - 1\nexport const BITS23 = BIT24 - 1\nexport const BITS24 = BIT25 - 1\nexport const BITS25 = BIT26 - 1\nexport const BITS26 = BIT27 - 1\nexport const BITS27 = BIT28 - 1\nexport const BITS28 = BIT29 - 1\nexport const BITS29 = BIT30 - 1\nexport const BITS30 = BIT31 - 1\n/**\n * @type {number}\n */\nexport const BITS31 = 0x7FFFFFFF\n/**\n * @type {number}\n */\nexport const BITS32 = 0xFFFFFFFF\n","/**\n * Utility helpers for working with numbers.\n *\n * @module number\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\n\nexport const MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER\nexport const MIN_SAFE_INTEGER = Number.MIN_SAFE_INTEGER\n\nexport const LOWEST_INT32 = 1 << 31\n/**\n * @type {number}\n */\nexport const HIGHEST_INT32 = binary.BITS31\n\n/**\n * @module number\n */\n\n/* istanbul ignore next */\nexport const isInteger = Number.isInteger || (num => typeof num === 'number' && isFinite(num) && math.floor(num) === num)\nexport const isNaN = Number.isNaN\n","/**\n * Efficient schema-less binary encoding with support for variable length encoding.\n *\n * Use [lib0/encoding] with [lib0/decoding]. Every encoding function has a corresponding decoding function.\n *\n * Encodes numbers in little-endian order (least to most significant byte order)\n * and is compatible with Golang's binary encoding (https://golang.org/pkg/encoding/binary/)\n * which is also used in Protocol Buffers.\n *\n * ```js\n * // encoding step\n * const encoder = new encoding.createEncoder()\n * encoding.writeVarUint(encoder, 256)\n * encoding.writeVarString(encoder, 'Hello world!')\n * const buf = encoding.toUint8Array(encoder)\n * ```\n *\n * ```js\n * // decoding step\n * const decoder = new decoding.createDecoder(buf)\n * decoding.readVarUint(decoder) // => 256\n * decoding.readVarString(decoder) // => 'Hello world!'\n * decoding.hasContent(decoder) // => false - all data is read\n * ```\n *\n * @module encoding\n */\n\nimport * as buffer from './buffer.js'\nimport * as math from './math.js'\nimport * as number from './number.js'\nimport * as binary from './binary.js'\n\n/**\n * A BinaryEncoder handles the encoding to an Uint8Array.\n */\nexport class Encoder {\n  constructor () {\n    this.cpos = 0\n    this.cbuf = new Uint8Array(100)\n    /**\n     * @type {Array<Uint8Array>}\n     */\n    this.bufs = []\n  }\n}\n\n/**\n * @function\n * @return {Encoder}\n */\nexport const createEncoder = () => new Encoder()\n\n/**\n * The current length of the encoded data.\n *\n * @function\n * @param {Encoder} encoder\n * @return {number}\n */\nexport const length = encoder => {\n  let len = encoder.cpos\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    len += encoder.bufs[i].length\n  }\n  return len\n}\n\n/**\n * Transform to Uint8Array.\n *\n * @function\n * @param {Encoder} encoder\n * @return {Uint8Array} The created ArrayBuffer.\n */\nexport const toUint8Array = encoder => {\n  const uint8arr = new Uint8Array(length(encoder))\n  let curPos = 0\n  for (let i = 0; i < encoder.bufs.length; i++) {\n    const d = encoder.bufs[i]\n    uint8arr.set(d, curPos)\n    curPos += d.length\n  }\n  uint8arr.set(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos), curPos)\n  return uint8arr\n}\n\n/**\n * Verify that it is possible to write `len` bytes wtihout checking. If\n * necessary, a new Buffer with the required length is attached.\n *\n * @param {Encoder} encoder\n * @param {number} len\n */\nconst verifyLen = (encoder, len) => {\n  const bufferLen = encoder.cbuf.length\n  if (bufferLen - encoder.cpos < len) {\n    encoder.bufs.push(buffer.createUint8ArrayViewFromArrayBuffer(encoder.cbuf.buffer, 0, encoder.cpos))\n    encoder.cbuf = new Uint8Array(math.max(bufferLen, len) * 2)\n    encoder.cpos = 0\n  }\n}\n\n/**\n * Write one byte to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The byte that is to be encoded.\n */\nexport const write = (encoder, num) => {\n  const bufferLen = encoder.cbuf.length\n  if (encoder.cpos === bufferLen) {\n    encoder.bufs.push(encoder.cbuf)\n    encoder.cbuf = new Uint8Array(bufferLen * 2)\n    encoder.cpos = 0\n  }\n  encoder.cbuf[encoder.cpos++] = num\n}\n\n/**\n * Write one byte at a specific position.\n * Position must already be written (i.e. encoder.length > pos)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos Position to which to write data\n * @param {number} num Unsigned 8-bit integer\n */\nexport const set = (encoder, pos, num) => {\n  let buffer = null\n  // iterate all buffers and adjust position\n  for (let i = 0; i < encoder.bufs.length && buffer === null; i++) {\n    const b = encoder.bufs[i]\n    if (pos < b.length) {\n      buffer = b // found buffer\n    } else {\n      pos -= b.length\n    }\n  }\n  if (buffer === null) {\n    // use current buffer\n    buffer = encoder.cbuf\n  }\n  buffer[pos] = num\n}\n\n/**\n * Write one byte as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint8 = write\n\n/**\n * Write one byte as an unsigned Integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint8 = set\n\n/**\n * Write two bytes as an unsigned integer.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint16 = (encoder, num) => {\n  write(encoder, num & binary.BITS8)\n  write(encoder, (num >>> 8) & binary.BITS8)\n}\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint16 = (encoder, pos, num) => {\n  set(encoder, pos, num & binary.BITS8)\n  set(encoder, pos + 1, (num >>> 8) & binary.BITS8)\n}\n\n/**\n * Write two bytes as an unsigned integer\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32 = (encoder, num) => {\n  for (let i = 0; i < 4; i++) {\n    write(encoder, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer in big endian order.\n * (most significant byte first)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeUint32BigEndian = (encoder, num) => {\n  for (let i = 3; i >= 0; i--) {\n    write(encoder, (num >>> (8 * i)) & binary.BITS8)\n  }\n}\n\n/**\n * Write two bytes as an unsigned integer at a specific location.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} pos The location where the data will be written.\n * @param {number} num The number that is to be encoded.\n */\nexport const setUint32 = (encoder, pos, num) => {\n  for (let i = 0; i < 4; i++) {\n    set(encoder, pos + i, num & binary.BITS8)\n    num >>>= 8\n  }\n}\n\n/**\n * Write a variable length unsigned integer.\n *\n * Encodes integers in the range from [0, 4294967295] / [0, 0xffffffff]. (max 32 bit unsigned integer)\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarUint = (encoder, num) => {\n  while (num > binary.BITS7) {\n    write(encoder, binary.BIT8 | (binary.BITS7 & num))\n    num >>>= 7\n  }\n  write(encoder, binary.BITS7 & num)\n}\n\n/**\n * Write a variable length integer.\n *\n * Encodes integers in the range from [-2147483648, -2147483647].\n *\n * We don't use zig-zag encoding because we want to keep the option open\n * to use the same function for BigInt and 53bit integers (doubles).\n *\n * We use the 7th bit instead for signaling that this is a negative number.\n *\n * @function\n * @param {Encoder} encoder\n * @param {number} num The number that is to be encoded.\n */\nexport const writeVarInt = (encoder, num) => {\n  const isNegative = math.isNegativeZero(num)\n  if (isNegative) {\n    num = -num\n  }\n  //             |- whether to continue reading         |- whether is negative     |- number\n  write(encoder, (num > binary.BITS6 ? binary.BIT8 : 0) | (isNegative ? binary.BIT7 : 0) | (binary.BITS6 & num))\n  num >>>= 6\n  // We don't need to consider the case of num === 0 so we can use a different\n  // pattern here than above.\n  while (num > 0) {\n    write(encoder, (num > binary.BITS7 ? binary.BIT8 : 0) | (binary.BITS7 & num))\n    num >>>= 7\n  }\n}\n\n/**\n * Write a variable length string.\n *\n * @function\n * @param {Encoder} encoder\n * @param {String} str The string that is to be encoded.\n */\nexport const writeVarString = (encoder, str) => {\n  const encodedString = unescape(encodeURIComponent(str))\n  const len = encodedString.length\n  writeVarUint(encoder, len)\n  for (let i = 0; i < len; i++) {\n    write(encoder, /** @type {number} */ (encodedString.codePointAt(i)))\n  }\n}\n\n/**\n * Write the content of another Encoder.\n *\n * @TODO: can be improved!\n *        - Note: Should consider that when appending a lot of small Encoders, we should rather clone than referencing the old structure.\n *                Encoders start with a rather big initial buffer.\n *\n * @function\n * @param {Encoder} encoder The enUint8Arr\n * @param {Encoder} append The BinaryEncoder to be written.\n */\nexport const writeBinaryEncoder = (encoder, append) => writeUint8Array(encoder, toUint8Array(append))\n\n/**\n * Append fixed-length Uint8Array to the encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeUint8Array = (encoder, uint8Array) => {\n  const bufferLen = encoder.cbuf.length\n  const cpos = encoder.cpos\n  const leftCopyLen = math.min(bufferLen - cpos, uint8Array.length)\n  const rightCopyLen = uint8Array.length - leftCopyLen\n  encoder.cbuf.set(uint8Array.subarray(0, leftCopyLen), cpos)\n  encoder.cpos += leftCopyLen\n  if (rightCopyLen > 0) {\n    // Still something to write, write right half..\n    // Append new buffer\n    encoder.bufs.push(encoder.cbuf)\n    // must have at least size of remaining buffer\n    encoder.cbuf = new Uint8Array(math.max(bufferLen * 2, rightCopyLen))\n    // copy array\n    encoder.cbuf.set(uint8Array.subarray(leftCopyLen))\n    encoder.cpos = rightCopyLen\n  }\n}\n\n/**\n * Append an Uint8Array to Encoder.\n *\n * @function\n * @param {Encoder} encoder\n * @param {Uint8Array} uint8Array\n */\nexport const writeVarUint8Array = (encoder, uint8Array) => {\n  writeVarUint(encoder, uint8Array.byteLength)\n  writeUint8Array(encoder, uint8Array)\n}\n\n/**\n * Create an DataView of the next `len` bytes. Use it to write data after\n * calling this function.\n *\n * ```js\n * // write float32 using DataView\n * const dv = writeOnDataView(encoder, 4)\n * dv.setFloat32(0, 1.1)\n * // read float32 using DataView\n * const dv = readFromDataView(encoder, 4)\n * dv.getFloat32(0) // => 1.100000023841858 (leaving it to the reader to find out why this is the correct result)\n * ```\n *\n * @param {Encoder} encoder\n * @param {number} len\n * @return {DataView}\n */\nexport const writeOnDataView = (encoder, len) => {\n  verifyLen(encoder, len)\n  const dview = new DataView(encoder.cbuf.buffer, encoder.cpos, len)\n  encoder.cpos += len\n  return dview\n}\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat32 = (encoder, num) => writeOnDataView(encoder, 4).setFloat32(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {number} num\n */\nexport const writeFloat64 = (encoder, num) => writeOnDataView(encoder, 8).setFloat64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigInt64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigInt64(0, num, false)\n\n/**\n * @param {Encoder} encoder\n * @param {bigint} num\n */\nexport const writeBigUint64 = (encoder, num) => /** @type {any} */ (writeOnDataView(encoder, 8)).setBigUint64(0, num, false)\n\nconst floatTestBed = new DataView(new ArrayBuffer(4))\n/**\n * Check if a number can be encoded as a 32 bit float.\n *\n * @param {number} num\n * @return {boolean}\n */\nconst isFloat32 = num => {\n  floatTestBed.setFloat32(0, num)\n  return floatTestBed.getFloat32(0) === num\n}\n\n/**\n * Encode data with efficient binary format.\n *\n * Differences to JSON:\n * • Transforms data to a binary format (not to a string)\n * • Encodes undefined, NaN, and ArrayBuffer (these can't be represented in JSON)\n * • Numbers are efficiently encoded either as a variable length integer, as a\n *   32 bit float, as a 64 bit float, or as a 64 bit bigint.\n *\n * Encoding table:\n *\n * | Data Type           | Prefix   | Encoding Method    | Comment |\n * | ------------------- | -------- | ------------------ | ------- |\n * | undefined           | 127      |                    | Functions, symbol, and everything that cannot be identified is encoded as undefined |\n * | null                | 126      |                    | |\n * | integer             | 125      | writeVarInt        | Only encodes 32 bit signed integers |\n * | float32             | 124      | writeFloat32       | |\n * | float64             | 123      | writeFloat64       | |\n * | bigint              | 122      | writeBigInt64      | |\n * | boolean (false)     | 121      |                    | True and false are different data types so we save the following byte |\n * | boolean (true)      | 120      |                    | - 0b01111000 so the last bit determines whether true or false |\n * | string              | 119      | writeVarString     | |\n * | object<string,any>  | 118      | custom             | Writes {length} then {length} key-value pairs |\n * | array<any>          | 117      | custom             | Writes {length} then {length} json values |\n * | Uint8Array          | 116      | writeVarUint8Array | We use Uint8Array for any kind of binary data |\n *\n * Reasons for the decreasing prefix:\n * We need the first bit for extendability (later we may want to encode the\n * prefix with writeVarUint). The remaining 7 bits are divided as follows:\n * [0-30]   the beginning of the data range is used for custom purposes\n *          (defined by the function that uses this library)\n * [31-127] the end of the data range is used for data encoding by\n *          lib0/encoding.js\n *\n * @param {Encoder} encoder\n * @param {undefined|null|number|bigint|boolean|string|Object<string,any>|Array<any>|Uint8Array} data\n */\nexport const writeAny = (encoder, data) => {\n  switch (typeof data) {\n    case 'string':\n      // TYPE 119: STRING\n      write(encoder, 119)\n      writeVarString(encoder, data)\n      break\n    case 'number':\n      if (number.isInteger(data) && data <= binary.BITS31) {\n        // TYPE 125: INTEGER\n        write(encoder, 125)\n        writeVarInt(encoder, data)\n      } else if (isFloat32(data)) {\n        // TYPE 124: FLOAT32\n        write(encoder, 124)\n        writeFloat32(encoder, data)\n      } else {\n        // TYPE 123: FLOAT64\n        write(encoder, 123)\n        writeFloat64(encoder, data)\n      }\n      break\n    case 'bigint':\n      // TYPE 122: BigInt\n      write(encoder, 122)\n      writeBigInt64(encoder, data)\n      break\n    case 'object':\n      if (data === null) {\n        // TYPE 126: null\n        write(encoder, 126)\n      } else if (data instanceof Array) {\n        // TYPE 117: Array\n        write(encoder, 117)\n        writeVarUint(encoder, data.length)\n        for (let i = 0; i < data.length; i++) {\n          writeAny(encoder, data[i])\n        }\n      } else if (data instanceof Uint8Array) {\n        // TYPE 116: ArrayBuffer\n        write(encoder, 116)\n        writeVarUint8Array(encoder, data)\n      } else {\n        // TYPE 118: Object\n        write(encoder, 118)\n        const keys = Object.keys(data)\n        writeVarUint(encoder, keys.length)\n        for (let i = 0; i < keys.length; i++) {\n          const key = keys[i]\n          writeVarString(encoder, key)\n          writeAny(encoder, data[key])\n        }\n      }\n      break\n    case 'boolean':\n      // TYPE 120/121: boolean (true/false)\n      write(encoder, data ? 120 : 121)\n      break\n    default:\n      // TYPE 127: undefined\n      write(encoder, 127)\n  }\n}\n\n/**\n * Now come a few stateful encoder that have their own classes.\n */\n\n/**\n * Basic Run Length Encoder - a basic compression implementation.\n *\n * Encodes [1,1,1,7] to [1,3,7,1] (3 times 1, 1 time 7). This encoder might do more harm than good if there are a lot of values that are not repeated.\n *\n * It was originally used for image compression. Cool .. article http://csbruce.com/cbm/transactor/pdfs/trans_v7_i06.pdf\n *\n * @note T must not be null!\n *\n * @template T\n */\nexport class RleEncoder extends Encoder {\n  /**\n   * @param {function(Encoder, T):void} writer\n   */\n  constructor (writer) {\n    super()\n    /**\n     * The writer\n     */\n    this.w = writer\n    /**\n     * Current state\n     * @type {T|null}\n     */\n    this.s = null\n    this.count = 0\n  }\n\n  /**\n   * @param {T} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      this.w(this, v)\n      this.s = v\n    }\n  }\n}\n\n/**\n * Basic diff decoder using variable length encoding.\n *\n * Encodes the values [3, 1100, 1101, 1050, 0] to [3, 1097, 1, -51, -1050] using writeVarInt.\n */\nexport class IntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    writeVarInt(this, v - this.s)\n    this.s = v\n  }\n}\n\n/**\n * A combination of IntDiffEncoder and RleEncoder.\n *\n * Basically first writes the IntDiffEncoder and then counts duplicate diffs using RleEncoding.\n *\n * Encodes the values [1,1,1,2,3,4,5,6] as [1,1,0,2,1,5] (RLE([1,0,0,1,1,1,1,1]) ⇒ RleIntDiff[1,1,0,2,1,5])\n */\nexport class RleIntDiffEncoder extends Encoder {\n  /**\n   * @param {number} start\n   */\n  constructor (start) {\n    super()\n    /**\n     * Current state\n     * @type {number}\n     */\n    this.s = start\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v && this.count > 0) {\n      this.count++\n    } else {\n      if (this.count > 0) {\n        // flush counter, unless this is the first value (count = 0)\n        writeVarUint(this, this.count - 1) // since count is always > 0, we can decrement by one. non-standard encoding ftw\n      }\n      this.count = 1\n      // write first value\n      writeVarInt(this, v - this.s)\n      this.s = v\n    }\n  }\n}\n\n/**\n * @param {UintOptRleEncoder} encoder\n */\nconst flushUintOptRleEncoder = encoder => {\n  /* istanbul ignore else */\n  if (encoder.count > 0) {\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set sign to positive\n    // case 2: write several values. set sign to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encoder.count === 1 ? encoder.s : -encoder.s)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * Optimized Rle encoder that does not suffer from the mentioned problem of the basic Rle encoder.\n *\n * Internally uses VarInt encoder to write unsigned integers. If the input occurs multiple times, we write\n * write it as a negative number. The UintOptRleDecoder then understands that it needs to read a count.\n *\n * Encodes [1,2,3,3,3] as [1,2,-3,3] (once 1, once 2, three times 3)\n */\nexport class UintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Increasing Uint Optimized RLE Encoder\n *\n * The RLE encoder counts the number of same occurences of the same value.\n * The IncUintOptRle encoder counts if the value increases.\n * I.e. 7, 8, 9, 10 will be encoded as [-7, 4]. 1, 3, 5 will be encoded\n * as [1, 3, 5].\n */\nexport class IncUintOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.s + this.count === v) {\n      this.count++\n    } else {\n      flushUintOptRleEncoder(this)\n      this.count = 1\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushUintOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * @param {IntDiffOptRleEncoder} encoder\n */\nconst flushIntDiffOptRleEncoder = encoder => {\n  if (encoder.count > 0) {\n    //          31 bit making up the diff | wether to write the counter\n    const encodedDiff = encoder.diff << 1 | (encoder.count === 1 ? 0 : 1)\n    // flush counter, unless this is the first value (count = 0)\n    // case 1: just a single value. set first bit to positive\n    // case 2: write several values. set first bit to negative to indicate that there is a length coming\n    writeVarInt(encoder.encoder, encodedDiff)\n    if (encoder.count > 1) {\n      writeVarUint(encoder.encoder, encoder.count - 2) // since count is always > 1, we can decrement by one. non-standard encoding ftw\n    }\n  }\n}\n\n/**\n * A combination of the IntDiffEncoder and the UintOptRleEncoder.\n *\n * The count approach is similar to the UintDiffOptRleEncoder, but instead of using the negative bitflag, it encodes\n * in the LSB whether a count is to be read. Therefore this Encoder only supports 31 bit integers!\n *\n * Encodes [1, 2, 3, 2] as [3, 1, 6, -1] (more specifically [(1 << 1) | 1, (3 << 0) | 0, -1])\n *\n * Internally uses variable length encoding. Contrary to normal UintVar encoding, the first byte contains:\n * * 1 bit that denotes whether the next value is a count (LSB)\n * * 1 bit that denotes whether this value is negative (MSB - 1)\n * * 1 bit that denotes whether to continue reading the variable length integer (MSB)\n *\n * Therefore, only five bits remain to encode diff ranges.\n *\n * Use this Encoder only when appropriate. In most cases, this is probably a bad idea.\n */\nexport class IntDiffOptRleEncoder {\n  constructor () {\n    this.encoder = new Encoder()\n    /**\n     * @type {number}\n     */\n    this.s = 0\n    this.count = 0\n    this.diff = 0\n  }\n\n  /**\n   * @param {number} v\n   */\n  write (v) {\n    if (this.diff === v - this.s) {\n      this.s = v\n      this.count++\n    } else {\n      flushIntDiffOptRleEncoder(this)\n      this.count = 1\n      this.diff = v - this.s\n      this.s = v\n    }\n  }\n\n  toUint8Array () {\n    flushIntDiffOptRleEncoder(this)\n    return toUint8Array(this.encoder)\n  }\n}\n\n/**\n * Optimized String Encoder.\n *\n * Encoding many small strings in a simple Encoder is not very efficient. The function call to decode a string takes some time and creates references that must be eventually deleted.\n * In practice, when decoding several million small strings, the GC will kick in more and more often to collect orphaned string objects (or maybe there is another reason?).\n *\n * This string encoder solves the above problem. All strings are concatenated and written as a single string using a single encoding call.\n *\n * The lengths are encoded using a UintOptRleEncoder.\n */\nexport class StringEncoder {\n  constructor () {\n    /**\n     * @type {Array<string>}\n     */\n    this.sarr = []\n    this.s = ''\n    this.lensE = new UintOptRleEncoder()\n  }\n\n  /**\n   * @param {string} string\n   */\n  write (string) {\n    this.s += string\n    if (this.s.length > 19) {\n      this.sarr.push(this.s)\n      this.s = ''\n    }\n    this.lensE.write(string.length)\n  }\n\n  toUint8Array () {\n    const encoder = new Encoder()\n    this.sarr.push(this.s)\n    this.s = ''\n    writeVarString(encoder, this.sarr.join(''))\n    writeUint8Array(encoder, this.lensE.toUint8Array())\n    return toUint8Array(encoder)\n  }\n}\n","/* eslint-env browser */\nexport const performance = typeof window === 'undefined' ? null : (typeof window.performance !== 'undefined' && window.performance) || null\n\nconst isoCrypto = typeof crypto === 'undefined' ? null : crypto\n\n/**\n * @type {function(number):ArrayBuffer}\n */\nexport const cryptoRandomBuffer = isoCrypto !== null\n  ? len => {\n    // browser\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    isoCrypto.getRandomValues(arr)\n    return buf\n  }\n  : len => {\n    // polyfill\n    const buf = new ArrayBuffer(len)\n    const arr = new Uint8Array(buf)\n    for (let i = 0; i < len; i++) {\n      arr[i] = Math.ceil((Math.random() * 0xFFFFFFFF) >>> 0)\n    }\n    return buf\n  }\n","\n/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport { cryptoRandomBuffer } from './isomorphic.js'\n\nexport const rand = Math.random\n\n/* istanbul ignore next */\nexport const uint32 = () => new Uint32Array(cryptoRandomBuffer(4))[0]\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n","/**\n * Error helpers.\n *\n * @module error\n */\n\n/**\n * @param {string} s\n * @return {Error}\n */\n/* istanbul ignore next */\nexport const create = s => new Error(s)\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* istanbul ignore next */\nexport const methodUnimplemented = () => {\n  throw create('Method unimplemented')\n}\n\n/**\n * @throws {Error}\n * @return {never}\n */\n/* istanbul ignore next */\nexport const unexpectedCase = () => {\n  throw create('Unexpected case')\n}\n","/**\n * Common functions and function call helpers.\n *\n * @module function\n */\n\nimport * as array from './array.js'\nimport * as object from './object.js'\n\n/**\n * Calls all functions in `fs` with args. Only throws after all functions were called.\n *\n * @param {Array<function>} fs\n * @param {Array<any>} args\n */\nexport const callAll = (fs, args, i = 0) => {\n  try {\n    for (; i < fs.length; i++) {\n      fs[i](...args)\n    }\n  } finally {\n    if (i < fs.length) {\n      callAll(fs, args, i + 1)\n    }\n  }\n}\n\nexport const nop = () => {}\n\n/**\n * @template T\n * @param {function():T} f\n * @return {T}\n */\nexport const apply = f => f()\n\n/**\n * @template A\n *\n * @param {A} a\n * @return {A}\n */\nexport const id = a => a\n\n/**\n * @template T\n *\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n */\nexport const equalityStrict = (a, b) => a === b\n\n/**\n * @template T\n *\n * @param {Array<T>|object} a\n * @param {Array<T>|object} b\n * @return {boolean}\n */\nexport const equalityFlat = (a, b) => a === b || (a != null && b != null && a.constructor === b.constructor && ((a instanceof Array && array.equalFlat(a, /** @type {Array<T>} */ (b))) || (typeof a === 'object' && object.equalFlat(a, b))))\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nexport const equalityDeep = (a, b) => {\n  if (a == null || b == null) {\n    return equalityStrict(a, b)\n  }\n  if (a.constructor !== b.constructor) {\n    return false\n  }\n  if (a === b) {\n    return true\n  }\n  switch (a.constructor) {\n    case ArrayBuffer:\n      a = new Uint8Array(a)\n      b = new Uint8Array(b)\n    // eslint-disable-next-line no-fallthrough\n    case Uint8Array: {\n      if (a.byteLength !== b.byteLength) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false\n        }\n      }\n      break\n    }\n    case Set: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const value of a) {\n        if (!b.has(value)) {\n          return false\n        }\n      }\n      break\n    }\n    case Map: {\n      if (a.size !== b.size) {\n        return false\n      }\n      for (const key of a.keys()) {\n        if (!b.has(key) || !equalityDeep(a.get(key), b.get(key))) {\n          return false\n        }\n      }\n      break\n    }\n    case Object:\n      if (object.length(a) !== object.length(b)) {\n        return false\n      }\n      for (const key in a) {\n        if (!object.hasProperty(a, key) || !equalityDeep(a[key], b[key])) {\n          return false\n        }\n      }\n      break\n    case Array:\n      if (a.length !== b.length) {\n        return false\n      }\n      for (let i = 0; i < a.length; i++) {\n        if (!equalityDeep(a[i], b[i])) {\n          return false\n        }\n      }\n      break\n    default:\n      return false\n  }\n  return true\n}\n","/**\n * Utility module to work with EcmaScript Symbols.\n *\n * @module symbol\n */\n\n/**\n * Return fresh symbol.\n *\n * @return {Symbol}\n */\nexport const create = Symbol\n\n/**\n * @param {any} s\n * @return {boolean}\n */\nexport const isSymbol = s => typeof s === 'symbol'\n","/**\n * Working with value pairs.\n *\n * @module pair\n */\n\n/**\n * @template L,R\n */\nexport class Pair {\n  /**\n   * @param {L} left\n   * @param {R} right\n   */\n  constructor (left, right) {\n    this.left = left\n    this.right = right\n  }\n}\n\n/**\n * @template L,R\n * @param {L} left\n * @param {R} right\n * @return {Pair<L,R>}\n */\nexport const create = (left, right) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {R} right\n * @param {L} left\n * @return {Pair<L,R>}\n */\nexport const createReversed = (right, left) => new Pair(left, right)\n\n/**\n * @template L,R\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):any} f\n */\nexport const forEach = (arr, f) => arr.forEach(p => f(p.left, p.right))\n\n/**\n * @template L,R,X\n * @param {Array<Pair<L,R>>} arr\n * @param {function(L, R):X} f\n * @return {Array<X>}\n */\nexport const map = (arr, f) => arr.map(p => f(p.left, p.right))\n","/* eslint-env browser */\n\n/**\n * Utility module to work with the DOM.\n *\n * @module dom\n */\n\nimport * as pair from './pair.js'\nimport * as map from './map.js'\n\n/* istanbul ignore next */\n/**\n * @type {Document}\n */\nexport const doc = /** @type {Document} */ (typeof document !== 'undefined' ? document : {})\n\n/**\n * @param {string} name\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const createElement = name => doc.createElement(name)\n\n/**\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const createDocumentFragment = () => doc.createDocumentFragment()\n\n/**\n * @param {string} text\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const createTextNode = text => doc.createTextNode(text)\n\n/* istanbul ignore next */\nexport const domParser = /** @type {DOMParser} */ (typeof DOMParser !== 'undefined' ? new DOMParser() : null)\n\n/**\n * @param {HTMLElement} el\n * @param {string} name\n * @param {Object} opts\n */\n/* istanbul ignore next */\nexport const emitCustomEvent = (el, name, opts) => el.dispatchEvent(new CustomEvent(name, opts))\n\n/**\n * @param {Element} el\n * @param {Array<pair.Pair<string,string|boolean>>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributes = (el, attrs) => {\n  pair.forEach(attrs, (key, value) => {\n    if (value === false) {\n      el.removeAttribute(key)\n    } else if (value === true) {\n      el.setAttribute(key, '')\n    } else {\n      // @ts-ignore\n      el.setAttribute(key, value)\n    }\n  })\n  return el\n}\n\n/**\n * @param {Element} el\n * @param {Map<string, string>} attrs Array of key-value pairs\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const setAttributesMap = (el, attrs) => {\n  attrs.forEach((value, key) => { el.setAttribute(key, value) })\n  return el\n}\n\n/**\n * @param {Array<Node>|HTMLCollection} children\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const fragment = children => {\n  const fragment = createDocumentFragment()\n  for (let i = 0; i < children.length; i++) {\n    appendChild(fragment, children[i])\n  }\n  return fragment\n}\n\n/**\n * @param {Element} parent\n * @param {Array<Node>} nodes\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const append = (parent, nodes) => {\n  appendChild(parent, fragment(nodes))\n  return parent\n}\n\n/**\n * @param {HTMLElement} el\n */\n/* istanbul ignore next */\nexport const remove = el => el.remove()\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const addEventListener = (el, name, f) => el.addEventListener(name, f)\n\n/**\n * @param {EventTarget} el\n * @param {string} name\n * @param {EventListener} f\n */\n/* istanbul ignore next */\nexport const removeEventListener = (el, name, f) => el.removeEventListener(name, f)\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const addEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => addEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {Node} node\n * @param {Array<pair.Pair<string,EventListener>>} listeners\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const removeEventListeners = (node, listeners) => {\n  pair.forEach(listeners, (name, f) => removeEventListener(node, name, f))\n  return node\n}\n\n/**\n * @param {string} name\n * @param {Array<pair.Pair<string,string>|pair.Pair<string,boolean>>} attrs Array of key-value pairs\n * @param {Array<Node>} children\n * @return {Element}\n */\n/* istanbul ignore next */\nexport const element = (name, attrs = [], children = []) =>\n  append(setAttributes(createElement(name), attrs), children)\n\n/**\n * @param {number} width\n * @param {number} height\n */\n/* istanbul ignore next */\nexport const canvas = (width, height) => {\n  const c = /** @type {HTMLCanvasElement} */ (createElement('canvas'))\n  c.height = height\n  c.width = width\n  return c\n}\n\n/**\n * @param {string} t\n * @return {Text}\n */\n/* istanbul ignore next */\nexport const text = createTextNode\n\n/**\n * @param {pair.Pair<string,string>} pair\n */\n/* istanbul ignore next */\nexport const pairToStyleString = pair => `${pair.left}:${pair.right};`\n\n/**\n * @param {Array<pair.Pair<string,string>>} pairs\n * @return {string}\n */\n/* istanbul ignore next */\nexport const pairsToStyleString = pairs => pairs.map(pairToStyleString).join('')\n\n/**\n * @param {Map<string,string>} m\n * @return {string}\n */\n/* istanbul ignore next */\nexport const mapToStyleString = m => map.map(m, (value, key) => `${key}:${value};`).join('')\n\n/**\n * @todo should always query on a dom element\n *\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {HTMLElement | null}\n */\n/* istanbul ignore next */\nexport const querySelector = (el, query) => el.querySelector(query)\n\n/**\n * @param {HTMLElement|ShadowRoot} el\n * @param {string} query\n * @return {NodeListOf<HTMLElement>}\n */\n/* istanbul ignore next */\nexport const querySelectorAll = (el, query) => el.querySelectorAll(query)\n\n/**\n * @param {string} id\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const getElementById = id => /** @type {HTMLElement} */ (doc.getElementById(id))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nconst _parse = html => domParser.parseFromString(`<html><body>${html}</body></html>`, 'text/html').body\n\n/**\n * @param {string} html\n * @return {DocumentFragment}\n */\n/* istanbul ignore next */\nexport const parseFragment = html => fragment(/** @type {any} */ (_parse(html).childNodes))\n\n/**\n * @param {string} html\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const parseElement = html => /** @type HTMLElement */ (_parse(html).firstElementChild)\n\n/**\n * @param {HTMLElement} oldEl\n * @param {HTMLElement|DocumentFragment} newEl\n */\n/* istanbul ignore next */\nexport const replaceWith = (oldEl, newEl) => oldEl.replaceWith(newEl)\n\n/**\n * @param {HTMLElement} parent\n * @param {HTMLElement} el\n * @param {Node|null} ref\n * @return {HTMLElement}\n */\n/* istanbul ignore next */\nexport const insertBefore = (parent, el, ref) => parent.insertBefore(el, ref)\n\n/**\n * @param {Node} parent\n * @param {Node} child\n * @return {Node}\n */\n/* istanbul ignore next */\nexport const appendChild = (parent, child) => parent.appendChild(child)\n\nexport const ELEMENT_NODE = doc.ELEMENT_NODE\nexport const TEXT_NODE = doc.TEXT_NODE\nexport const CDATA_SECTION_NODE = doc.CDATA_SECTION_NODE\nexport const COMMENT_NODE = doc.COMMENT_NODE\nexport const DOCUMENT_NODE = doc.DOCUMENT_NODE\nexport const DOCUMENT_TYPE_NODE = doc.DOCUMENT_TYPE_NODE\nexport const DOCUMENT_FRAGMENT_NODE = doc.DOCUMENT_FRAGMENT_NODE\n\n/**\n * @param {any} node\n * @param {number} type\n */\nexport const checkNodeType = (node, type) => node.nodeType === type\n\n/**\n * @param {Node} parent\n * @param {HTMLElement} child\n */\nexport const isParentOf = (parent, child) => {\n  let p = child.parentNode\n  while (p && p !== parent) {\n    p = p.parentNode\n  }\n  return p === parent\n}\n","/**\n * Utility module to work with time.\n *\n * @module time\n */\n\nimport * as metric from './metric.js'\nimport * as math from './math.js'\n\n/**\n * Return current time.\n *\n * @return {Date}\n */\nexport const getDate = () => new Date()\n\n/**\n * Return current unix time.\n *\n * @return {number}\n */\nexport const getUnixTime = Date.now\n\n/**\n * Transform time (in ms) to a human readable format. E.g. 1100 => 1.1s. 60s => 1min. .001 => 10μs.\n *\n * @param {number} d duration in milliseconds\n * @return {string} humanized approximation of time\n */\nexport const humanizeDuration = d => {\n  if (d < 60000) {\n    const p = metric.prefix(d, -1)\n    return math.round(p.n * 100) / 100 + p.prefix + 's'\n  }\n  d = math.floor(d / 1000)\n  const seconds = d % 60\n  const minutes = math.floor(d / 60) % 60\n  const hours = math.floor(d / 3600) % 24\n  const days = math.floor(d / 86400)\n  if (days > 0) {\n    return days + 'd' + ((hours > 0 || minutes > 30) ? ' ' + (minutes > 30 ? hours + 1 : hours) + 'h' : '')\n  }\n  if (hours > 0) {\n    /* istanbul ignore next */\n    return hours + 'h' + ((minutes > 0 || seconds > 30) ? ' ' + (seconds > 30 ? minutes + 1 : minutes) + 'min' : '')\n  }\n  return minutes + 'min' + (seconds > 0 ? ' ' + seconds + 's' : '')\n}\n","/**\n * Isomorphic logging module with support for colors!\n *\n * @module logging\n */\n\nimport * as env from './environment.js'\nimport * as symbol from './symbol.js'\nimport * as pair from './pair.js'\nimport * as dom from './dom.js'\nimport * as json from './json.js'\nimport * as map from './map.js'\nimport * as eventloop from './eventloop.js'\nimport * as math from './math.js'\nimport * as time from './time.js'\nimport * as func from './function.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/**\n * @type {Object<Symbol,pair.Pair<string,string>>}\n */\nconst _browserStyleMap = {\n  [BOLD]: pair.create('font-weight', 'bold'),\n  [UNBOLD]: pair.create('font-weight', 'normal'),\n  [BLUE]: pair.create('color', 'blue'),\n  [GREEN]: pair.create('color', 'green'),\n  [GREY]: pair.create('color', 'grey'),\n  [RED]: pair.create('color', 'red'),\n  [PURPLE]: pair.create('color', 'purple'),\n  [ORANGE]: pair.create('color', 'orange'), // not well supported in chrome when debugging node with inspector - TODO: deprecate\n  [UNCOLOR]: pair.create('color', 'black')\n}\n\nconst _nodeStyleMap = {\n  [BOLD]: '\\u001b[1m',\n  [UNBOLD]: '\\u001b[2m',\n  [BLUE]: '\\x1b[34m',\n  [GREEN]: '\\x1b[32m',\n  [GREY]: '\\u001b[37m',\n  [RED]: '\\x1b[31m',\n  [PURPLE]: '\\x1b[35m',\n  [ORANGE]: '\\x1b[38;5;208m',\n  [UNCOLOR]: '\\x1b[0m'\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeBrowserLoggingArgs = args => {\n  const strBuilder = []\n  const styles = []\n  const currentStyle = map.create()\n  /**\n   * @type {Array<string|Object|number>}\n   */\n  let logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        const style = dom.mapToStyleString(currentStyle)\n        if (i > 0 || style.length > 0) {\n          strBuilder.push('%c' + arg)\n          styles.push(style)\n        } else {\n          strBuilder.push(arg)\n        }\n      } else {\n        break\n      }\n    }\n  }\n\n  if (i > 0) {\n    // create logArgs with what we have so far\n    logArgs = styles\n    logArgs.unshift(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nconst computeNodeLoggingArgs = args => {\n  const strBuilder = []\n  const logArgs = []\n\n  // try with formatting until we find something unsupported\n  let i = 0\n\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _nodeStyleMap[arg]\n    if (style !== undefined) {\n      strBuilder.push(style)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        strBuilder.push(arg)\n      } else {\n        break\n      }\n    }\n  }\n  if (i > 0) {\n    // create logArgs with what we have so far\n    strBuilder.push('\\x1b[0m')\n    logArgs.push(strBuilder.join(''))\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    /* istanbul ignore else */\n    if (!(arg instanceof Symbol)) {\n      logArgs.push(arg)\n    }\n  }\n  return logArgs\n}\n\n/* istanbul ignore next */\nconst computeLoggingArgs = env.isNode ? computeNodeLoggingArgs : computeBrowserLoggingArgs\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const print = (...args) => {\n  console.log(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const warn = (...args) => {\n  console.warn(...computeLoggingArgs(args))\n  args.unshift(ORANGE)\n  vconsoles.forEach(vc => vc.print(args))\n}\n\n/* istanbul ignore next */\n/**\n * @param {Error} err\n */\nexport const printError = err => {\n  console.error(err)\n  vconsoles.forEach(vc => vc.printError(err))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} url image location\n * @param {number} height height of the image in pixel\n */\nexport const printImg = (url, height) => {\n  if (env.isBrowser) {\n    console.log('%c                      ', `font-size: ${height}px; background-size: contain; background-repeat: no-repeat; background-image: url(${url})`)\n    // console.log('%c                ', `font-size: ${height}x; background: url(${url}) no-repeat;`)\n  }\n  vconsoles.forEach(vc => vc.printImg(url, height))\n}\n\n/* istanbul ignore next */\n/**\n * @param {string} base64\n * @param {number} height\n */\nexport const printImgBase64 = (base64, height) => printImg(`data:image/gif;base64,${base64}`, height)\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const group = (...args) => {\n  console.group(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.group(args))\n}\n\n/**\n * @param {Array<string|Symbol|Object|number>} args\n */\nexport const groupCollapsed = (...args) => {\n  console.groupCollapsed(...computeLoggingArgs(args))\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupCollapsed(args))\n}\n\nexport const groupEnd = () => {\n  console.groupEnd()\n  /* istanbul ignore next */\n  vconsoles.forEach(vc => vc.groupEnd())\n}\n\n/* istanbul ignore next */\n/**\n * @param {function():Node} createNode\n */\nexport const printDom = createNode =>\n  vconsoles.forEach(vc => vc.printDom(createNode()))\n\n/* istanbul ignore next */\n/**\n * @param {HTMLCanvasElement} canvas\n * @param {number} height\n */\nexport const printCanvas = (canvas, height) => printImg(canvas.toDataURL(), height)\n\nexport const vconsoles = new Set()\n\n/* istanbul ignore next */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<Element>}\n */\nconst _computeLineSpans = args => {\n  const spans = []\n  const currentStyle = new Map()\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    // @ts-ignore\n    const style = _browserStyleMap[arg]\n    if (style !== undefined) {\n      currentStyle.set(style.left, style.right)\n    } else {\n      if (arg.constructor === String || arg.constructor === Number) {\n        // @ts-ignore\n        const span = dom.element('span', [pair.create('style', dom.mapToStyleString(currentStyle))], [dom.text(arg)])\n        if (span.innerHTML === '') {\n          span.innerHTML = '&nbsp;'\n        }\n        spans.push(span)\n      } else {\n        break\n      }\n    }\n  }\n  // append the rest\n  for (; i < args.length; i++) {\n    let content = args[i]\n    if (!(content instanceof Symbol)) {\n      if (content.constructor !== String && content.constructor !== Number) {\n        content = ' ' + json.stringify(content) + ' '\n      }\n      spans.push(dom.element('span', [], [dom.text(/** @type {string} */ (content))]))\n    }\n  }\n  return spans\n}\n\nconst lineStyle = 'font-family:monospace;border-bottom:1px solid #e2e2e2;padding:2px;'\n\n/* istanbul ignore next */\nexport class VConsole {\n  /**\n   * @param {Element} dom\n   */\n  constructor (dom) {\n    this.dom = dom\n    /**\n     * @type {Element}\n     */\n    this.ccontainer = this.dom\n    this.depth = 0\n    vconsoles.add(this)\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   * @param {boolean} collapsed\n   */\n  group (args, collapsed = false) {\n    eventloop.enqueue(() => {\n      const triangleDown = dom.element('span', [pair.create('hidden', collapsed), pair.create('style', 'color:grey;font-size:120%;')], [dom.text('▼')])\n      const triangleRight = dom.element('span', [pair.create('hidden', !collapsed), pair.create('style', 'color:grey;font-size:125%;')], [dom.text('▶')])\n      const content = dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], [triangleDown, triangleRight, dom.text(' ')].concat(_computeLineSpans(args)))\n      const nextContainer = dom.element('div', [pair.create('hidden', collapsed)])\n      const nextLine = dom.element('div', [], [content, nextContainer])\n      dom.append(this.ccontainer, [nextLine])\n      this.ccontainer = nextContainer\n      this.depth++\n      // when header is clicked, collapse/uncollapse container\n      dom.addEventListener(content, 'click', event => {\n        nextContainer.toggleAttribute('hidden')\n        triangleDown.toggleAttribute('hidden')\n        triangleRight.toggleAttribute('hidden')\n      })\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  groupCollapsed (args) {\n    this.group(args, true)\n  }\n\n  groupEnd () {\n    eventloop.enqueue(() => {\n      if (this.depth > 0) {\n        this.depth--\n        // @ts-ignore\n        this.ccontainer = this.ccontainer.parentElement.parentElement\n      }\n    })\n  }\n\n  /**\n   * @param {Array<string|Symbol|Object|number>} args\n   */\n  print (args) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('div', [pair.create('style', `${lineStyle};padding-left:${this.depth * 10}px`)], _computeLineSpans(args))])\n    })\n  }\n\n  /**\n   * @param {Error} err\n   */\n  printError (err) {\n    this.print([RED, BOLD, err.toString()])\n  }\n\n  /**\n   * @param {string} url\n   * @param {number} height\n   */\n  printImg (url, height) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [dom.element('img', [pair.create('src', url), pair.create('height', `${math.round(height * 1.5)}px`)])])\n    })\n  }\n\n  /**\n   * @param {Node} node\n   */\n  printDom (node) {\n    eventloop.enqueue(() => {\n      dom.append(this.ccontainer, [node])\n    })\n  }\n\n  destroy () {\n    eventloop.enqueue(() => {\n      vconsoles.delete(this)\n    })\n  }\n}\n\n/* istanbul ignore next */\n/**\n * @param {Element} dom\n */\nexport const createVConsole = dom => new VConsole(dom)\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/**\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = moduleName => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null && (debugRegexVar === '*' || debugRegexVar === 'true' || new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n\n  return !doLogging ? func.nop : (...args) => {\n    const timeNow = time.getUnixTime()\n    const timeDiff = timeNow - lastLoggingTime\n    lastLoggingTime = timeNow\n    print(color, moduleName, UNCOLOR, ...args.map(arg => (typeof arg === 'string' || typeof arg === 'symbol') ? arg : JSON.stringify(arg)), color, ' +' + timeDiff + 'ms')\n  }\n}\n","/**\n * Utility module to create and manipulate Iterators.\n *\n * @module iterator\n */\n\n/**\n * @template T,R\n * @param {Iterator<T>} iterator\n * @param {function(T):R} f\n * @return {IterableIterator<R>}\n */\nexport const mapIterator = (iterator, f) => ({\n  /**\n   * @param {function(T):R} f\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next () {\n    const r = iterator.next()\n    return { value: r.done ? undefined : f(r.value), done: r.done }\n  }\n})\n\n/**\n * @template T\n * @param {function():IteratorResult<T>} next\n * @return {IterableIterator<T>}\n */\nexport const createIterator = next => ({\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this\n  },\n  // @ts-ignore\n  next\n})\n\n/**\n * @template T\n * @param {Iterator<T>} iterator\n * @param {function(T):boolean} filter\n */\nexport const iteratorFilter = (iterator, filter) => createIterator(() => {\n  let res\n  do {\n    res = iterator.next()\n  } while (!res.done && !filter(res.value))\n  return res\n})\n\n/**\n * @template T,M\n * @param {Iterator<T>} iterator\n * @param {function(T):M} fmap\n */\nexport const iteratorMap = (iterator, fmap) => createIterator(() => {\n  const { done, value } = iterator.next()\n  return { done, value: done ? undefined : fmap(value) }\n})\n","/**\n * Utility functions for working with EcmaScript objects.\n *\n * @module object\n */\n\n/**\n * @return {Object<string,any>} obj\n */\nexport const create = () => Object.create(null)\n\n/**\n * Object.assign\n */\nexport const assign = Object.assign\n\n/**\n * @param {Object<string,any>} obj\n */\nexport const keys = Object.keys\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):any} f\n */\nexport const forEach = (obj, f) => {\n  for (const key in obj) {\n    f(obj[key], key)\n  }\n}\n\n/**\n * @template R\n * @param {Object<string,any>} obj\n * @param {function(any,string):R} f\n * @return {Array<R>}\n */\nexport const map = (obj, f) => {\n  const results = []\n  for (const key in obj) {\n    results.push(f(obj[key], key))\n  }\n  return results\n}\n\n/**\n * @param {Object<string,any>} obj\n * @return {number}\n */\nexport const length = obj => keys(obj).length\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const some = (obj, f) => {\n  for (const key in obj) {\n    if (f(obj[key], key)) {\n      return true\n    }\n  }\n  return false\n}\n\n/**\n * @param {Object<string,any>} obj\n * @param {function(any,string):boolean} f\n * @return {boolean}\n */\nexport const every = (obj, f) => {\n  for (const key in obj) {\n    if (!f(obj[key], key)) {\n      return false\n    }\n  }\n  return true\n}\n\n/**\n * Calls `Object.prototype.hasOwnProperty`.\n *\n * @param {any} obj\n * @param {string|symbol} key\n * @return {boolean}\n */\nexport const hasProperty = (obj, key) => Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * @param {Object<string,any>} a\n * @param {Object<string,any>} b\n * @return {boolean}\n */\nexport const equalFlat = (a, b) => a === b || (length(a) === length(b) && every(a, (val, key) => (val !== undefined || hasProperty(b, key)) && b[key] === val))\n","\nimport {\n  findIndexSS,\n  getState,\n  splitItem,\n  iterateStructs,\n  UpdateEncoderV2,\n  DSDecoderV1, DSEncoderV1, DSDecoderV2, DSEncoderV2, Item, GC, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nimport * as array from 'lib0/array'\nimport * as math from 'lib0/math'\nimport * as map from 'lib0/map'\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\n\nexport class DeleteItem {\n  /**\n   * @param {number} clock\n   * @param {number} len\n   */\n  constructor (clock, len) {\n    /**\n     * @type {number}\n     */\n    this.clock = clock\n    /**\n     * @type {number}\n     */\n    this.len = len\n  }\n}\n\n/**\n * We no longer maintain a DeleteStore. DeleteSet is a temporary object that is created when needed.\n * - When created in a transaction, it must only be accessed after sorting, and merging\n *   - This DeleteSet is send to other clients\n * - We do not create a DeleteSet when we send a sync message. The DeleteSet message is created directly from StructStore\n * - We read a DeleteSet as part of a sync/update message. In this case the DeleteSet is already sorted and merged.\n */\nexport class DeleteSet {\n  constructor () {\n    /**\n     * @type {Map<number,Array<DeleteItem>>}\n     */\n    this.clients = new Map()\n  }\n}\n\n/**\n * Iterate over all structs that the DeleteSet gc's.\n *\n * @param {Transaction} transaction\n * @param {DeleteSet} ds\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateDeletedStructs = (transaction, ds, f) =>\n  ds.clients.forEach((deletes, clientid) => {\n    const structs = /** @type {Array<GC|Item>} */ (transaction.doc.store.clients.get(clientid))\n    for (let i = 0; i < deletes.length; i++) {\n      const del = deletes[i]\n      iterateStructs(transaction, structs, del.clock, del.len, f)\n    }\n  })\n\n/**\n * @param {Array<DeleteItem>} dis\n * @param {number} clock\n * @return {number|null}\n *\n * @private\n * @function\n */\nexport const findIndexDS = (dis, clock) => {\n  let left = 0\n  let right = dis.length - 1\n  while (left <= right) {\n    const midindex = math.floor((left + right) / 2)\n    const mid = dis[midindex]\n    const midclock = mid.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.len) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n  }\n  return null\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {ID} id\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const isDeleted = (ds, id) => {\n  const dis = ds.clients.get(id.client)\n  return dis !== undefined && findIndexDS(dis, id.clock) !== null\n}\n\n/**\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const sortAndMergeDeleteSet = ds => {\n  ds.clients.forEach(dels => {\n    dels.sort((a, b) => a.clock - b.clock)\n    // merge items without filtering or splicing the array\n    // i is the current pointer\n    // j refers to the current insert position for the pointed item\n    // try to merge dels[i] into dels[j-1] or set dels[j]=dels[i]\n    let i, j\n    for (i = 1, j = 1; i < dels.length; i++) {\n      const left = dels[j - 1]\n      const right = dels[i]\n      if (left.clock + left.len >= right.clock) {\n        left.len = math.max(left.len, right.clock + right.len - left.clock)\n      } else {\n        if (j < i) {\n          dels[j] = right\n        }\n        j++\n      }\n    }\n    dels.length = j\n  })\n}\n\n/**\n * @param {Array<DeleteSet>} dss\n * @return {DeleteSet} A fresh DeleteSet\n */\nexport const mergeDeleteSets = dss => {\n  const merged = new DeleteSet()\n  for (let dssI = 0; dssI < dss.length; dssI++) {\n    dss[dssI].clients.forEach((delsLeft, client) => {\n      if (!merged.clients.has(client)) {\n        // Write all missing keys from current ds and all following.\n        // If merged already contains `client` current ds has already been added.\n        /**\n         * @type {Array<DeleteItem>}\n         */\n        const dels = delsLeft.slice()\n        for (let i = dssI + 1; i < dss.length; i++) {\n          array.appendTo(dels, dss[i].clients.get(client) || [])\n        }\n        merged.clients.set(client, dels)\n      }\n    })\n  }\n  sortAndMergeDeleteSet(merged)\n  return merged\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {number} client\n * @param {number} clock\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const addToDeleteSet = (ds, client, clock, length) => {\n  map.setIfUndefined(ds.clients, client, () => []).push(new DeleteItem(clock, length))\n}\n\nexport const createDeleteSet = () => new DeleteSet()\n\n/**\n * @param {StructStore} ss\n * @return {DeleteSet} Merged and sorted DeleteSet\n *\n * @private\n * @function\n */\nexport const createDeleteSetFromStructStore = ss => {\n  const ds = createDeleteSet()\n  ss.clients.forEach((structs, client) => {\n    /**\n     * @type {Array<DeleteItem>}\n     */\n    const dsitems = []\n    for (let i = 0; i < structs.length; i++) {\n      const struct = structs[i]\n      if (struct.deleted) {\n        const clock = struct.id.clock\n        let len = struct.length\n        if (i + 1 < structs.length) {\n          for (let next = structs[i + 1]; i + 1 < structs.length && next.deleted; next = structs[++i + 1]) {\n            len += next.length\n          }\n        }\n        dsitems.push(new DeleteItem(clock, len))\n      }\n    }\n    if (dsitems.length > 0) {\n      ds.clients.set(client, dsitems)\n    }\n  })\n  return ds\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {DeleteSet} ds\n *\n * @private\n * @function\n */\nexport const writeDeleteSet = (encoder, ds) => {\n  encoding.writeVarUint(encoder.restEncoder, ds.clients.size)\n  ds.clients.forEach((dsitems, client) => {\n    encoder.resetDsCurVal()\n    encoding.writeVarUint(encoder.restEncoder, client)\n    const len = dsitems.length\n    encoding.writeVarUint(encoder.restEncoder, len)\n    for (let i = 0; i < len; i++) {\n      const item = dsitems[i]\n      encoder.writeDsClock(item.clock)\n      encoder.writeDsLen(item.len)\n    }\n  })\n}\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {DeleteSet}\n *\n * @private\n * @function\n */\nexport const readDeleteSet = decoder => {\n  const ds = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    if (numberOfDeletes > 0) {\n      const dsField = map.setIfUndefined(ds.clients, client, () => [])\n      for (let i = 0; i < numberOfDeletes; i++) {\n        dsField.push(new DeleteItem(decoder.readDsClock(), decoder.readDsLen()))\n      }\n    }\n  }\n  return ds\n}\n\n/**\n * @todo YDecoder also contains references to String and other Decoders. Would make sense to exchange YDecoder.toUint8Array for YDecoder.DsToUint8Array()..\n */\n\n/**\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @return {Uint8Array|null} Returns a v2 update containing all deletes that couldn't be applied yet; or null if all deletes were applied successfully.\n *\n * @private\n * @function\n */\nexport const readAndApplyDeleteSet = (decoder, transaction, store) => {\n  const unappliedDS = new DeleteSet()\n  const numClients = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numClients; i++) {\n    decoder.resetDsCurVal()\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const numberOfDeletes = decoding.readVarUint(decoder.restDecoder)\n    const structs = store.clients.get(client) || []\n    const state = getState(store, client)\n    for (let i = 0; i < numberOfDeletes; i++) {\n      const clock = decoder.readDsClock()\n      const clockEnd = clock + decoder.readDsLen()\n      if (clock < state) {\n        if (state < clockEnd) {\n          addToDeleteSet(unappliedDS, client, state, clockEnd - state)\n        }\n        let index = findIndexSS(structs, clock)\n        /**\n         * We can ignore the case of GC and Delete structs, because we are going to skip them\n         * @type {Item}\n         */\n        // @ts-ignore\n        let struct = structs[index]\n        // split the first item if necessary\n        if (!struct.deleted && struct.id.clock < clock) {\n          structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n          index++ // increase we now want to use the next struct\n        }\n        while (index < structs.length) {\n          // @ts-ignore\n          struct = structs[index++]\n          if (struct.id.clock < clockEnd) {\n            if (!struct.deleted) {\n              if (clockEnd < struct.id.clock + struct.length) {\n                structs.splice(index, 0, splitItem(transaction, struct, clockEnd - struct.id.clock))\n              }\n              struct.delete(transaction)\n            }\n          } else {\n            break\n          }\n        }\n      } else {\n        addToDeleteSet(unappliedDS, client, clock, clockEnd - clock)\n      }\n    }\n  }\n  if (unappliedDS.clients.size > 0) {\n    const ds = new UpdateEncoderV2()\n    encoding.writeVarUint(ds.restEncoder, 0) // encode 0 structs\n    writeDeleteSet(ds, unappliedDS)\n    return ds.toUint8Array()\n  }\n  return null\n}\n","/**\n * @module Y\n */\n\nimport {\n  StructStore,\n  AbstractType,\n  YArray,\n  YText,\n  YMap,\n  YXmlFragment,\n  transact,\n  ContentDoc, Item, Transaction, YEvent // eslint-disable-line\n} from '../internals.js'\n\nimport { Observable } from 'lib0/observable'\nimport * as random from 'lib0/random'\nimport * as map from 'lib0/map'\nimport * as array from 'lib0/array'\n\nexport const generateNewClientId = random.uint32\n\n/**\n * @typedef {Object} DocOpts\n * @property {boolean} [DocOpts.gc=true] Disable garbage collection (default: gc=true)\n * @property {function(Item):boolean} [DocOpts.gcFilter] Will be called before an Item is garbage collected. Return false to keep the Item.\n * @property {string} [DocOpts.guid] Define a globally unique identifier for this document\n * @property {any} [DocOpts.meta] Any kind of meta information you want to associate with this document. If this is a subdocument, remote peers will store the meta information as well.\n * @property {boolean} [DocOpts.autoLoad] If a subdocument, automatically load document. If this is a subdocument, remote peers will load the document as well automatically.\n */\n\n/**\n * A Yjs instance handles the state of shared data.\n * @extends Observable<string>\n */\nexport class Doc extends Observable {\n  /**\n   * @param {DocOpts} [opts] configuration\n   */\n  constructor ({ guid = random.uuidv4(), gc = true, gcFilter = () => true, meta = null, autoLoad = false } = {}) {\n    super()\n    this.gc = gc\n    this.gcFilter = gcFilter\n    this.clientID = generateNewClientId()\n    this.guid = guid\n    /**\n     * @type {Map<string, AbstractType<YEvent>>}\n     */\n    this.share = new Map()\n    this.store = new StructStore()\n    /**\n     * @type {Transaction | null}\n     */\n    this._transaction = null\n    /**\n     * @type {Array<Transaction>}\n     */\n    this._transactionCleanups = []\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocs = new Set()\n    /**\n     * If this document is a subdocument - a document integrated into another document - then _item is defined.\n     * @type {Item?}\n     */\n    this._item = null\n    this.shouldLoad = autoLoad\n    this.autoLoad = autoLoad\n    this.meta = meta\n  }\n\n  /**\n   * Notify the parent document that you request to load data into this subdocument (if it is a subdocument).\n   *\n   * `load()` might be used in the future to request any provider to load the most current data.\n   *\n   * It is safe to call `load()` multiple times.\n   */\n  load () {\n    const item = this._item\n    if (item !== null && !this.shouldLoad) {\n      transact(/** @type {any} */ (item.parent).doc, transaction => {\n        transaction.subdocsLoaded.add(this)\n      }, null, true)\n    }\n    this.shouldLoad = true\n  }\n\n  getSubdocs () {\n    return this.subdocs\n  }\n\n  getSubdocGuids () {\n    return new Set(Array.from(this.subdocs).map(doc => doc.guid))\n  }\n\n  /**\n   * Changes that happen inside of a transaction are bundled. This means that\n   * the observer fires _after_ the transaction is finished and that all changes\n   * that happened inside of the transaction are sent as one message to the\n   * other peers.\n   *\n   * @param {function(Transaction):void} f The function that should be executed as a transaction\n   * @param {any} [origin] Origin of who started the transaction. Will be stored on transaction.origin\n   *\n   * @public\n   */\n  transact (f, origin = null) {\n    transact(this, f, origin)\n  }\n\n  /**\n   * Define a shared data type.\n   *\n   * Multiple calls of `y.get(name, TypeConstructor)` yield the same result\n   * and do not overwrite each other. I.e.\n   * `y.define(name, Y.Array) === y.define(name, Y.Array)`\n   *\n   * After this method is called, the type is also available on `y.share.get(name)`.\n   *\n   * *Best Practices:*\n   * Define all types right after the Yjs instance is created and store them in a separate object.\n   * Also use the typed methods `getText(name)`, `getArray(name)`, ..\n   *\n   * @example\n   *   const y = new Y(..)\n   *   const appState = {\n   *     document: y.getText('document')\n   *     comments: y.getArray('comments')\n   *   }\n   *\n   * @param {string} name\n   * @param {Function} TypeConstructor The constructor of the type definition. E.g. Y.Text, Y.Array, Y.Map, ...\n   * @return {AbstractType<any>} The created type. Constructed with TypeConstructor\n   *\n   * @public\n   */\n  get (name, TypeConstructor = AbstractType) {\n    const type = map.setIfUndefined(this.share, name, () => {\n      // @ts-ignore\n      const t = new TypeConstructor()\n      t._integrate(this, null)\n      return t\n    })\n    const Constr = type.constructor\n    if (TypeConstructor !== AbstractType && Constr !== TypeConstructor) {\n      if (Constr === AbstractType) {\n        // @ts-ignore\n        const t = new TypeConstructor()\n        t._map = type._map\n        type._map.forEach(/** @param {Item?} n */ n => {\n          for (; n !== null; n = n.left) {\n            // @ts-ignore\n            n.parent = t\n          }\n        })\n        t._start = type._start\n        for (let n = t._start; n !== null; n = n.right) {\n          n.parent = t\n        }\n        t._length = type._length\n        this.share.set(name, t)\n        t._integrate(this, null)\n        return t\n      } else {\n        throw new Error(`Type with the name ${name} has already been defined with a different constructor`)\n      }\n    }\n    return type\n  }\n\n  /**\n   * @template T\n   * @param {string} [name]\n   * @return {YArray<T>}\n   *\n   * @public\n   */\n  getArray (name = '') {\n    // @ts-ignore\n    return this.get(name, YArray)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YText}\n   *\n   * @public\n   */\n  getText (name = '') {\n    // @ts-ignore\n    return this.get(name, YText)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YMap<any>}\n   *\n   * @public\n   */\n  getMap (name = '') {\n    // @ts-ignore\n    return this.get(name, YMap)\n  }\n\n  /**\n   * @param {string} [name]\n   * @return {YXmlFragment}\n   *\n   * @public\n   */\n  getXmlFragment (name = '') {\n    // @ts-ignore\n    return this.get(name, YXmlFragment)\n  }\n\n  /**\n   * Converts the entire document into a js object, recursively traversing each yjs type\n   * Doesn't log types that have not been defined (using ydoc.getType(..)).\n   *\n   * @deprecated Do not use this method and rather call toJSON directly on the shared types.\n   *\n   * @return {Object<string, any>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string, any>}\n     */\n    const doc = {}\n\n    this.share.forEach((value, key) => {\n      doc[key] = value.toJSON()\n    })\n\n    return doc\n  }\n\n  /**\n   * Emit `destroy` event and unregister all event handlers.\n   */\n  destroy () {\n    array.from(this.subdocs).forEach(subdoc => subdoc.destroy())\n    const item = this._item\n    if (item !== null) {\n      this._item = null\n      const content = /** @type {ContentDoc} */ (item.content)\n      if (item.deleted) {\n        // @ts-ignore\n        content.doc = null\n      } else {\n        content.doc = new Doc({ guid: this.guid, ...content.opts })\n        content.doc._item = item\n      }\n      transact(/** @type {any} */ (item).parent.doc, transaction => {\n        if (!item.deleted) {\n          transaction.subdocsAdded.add(content.doc)\n        }\n        transaction.subdocsRemoved.add(this)\n      }, null, true)\n    }\n    this.emit('destroyed', [true])\n    this.emit('destroy', [this])\n    super.destroy()\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function(...any):any} f\n   */\n  on (eventName, f) {\n    super.on(eventName, f)\n  }\n\n  /**\n   * @param {string} eventName\n   * @param {function} f\n   */\n  off (eventName, f) {\n    super.off(eventName, f)\n  }\n}\n","\nimport * as error from 'lib0/error'\nimport * as encoding from 'lib0/encoding'\n\nimport {\n  ID // eslint-disable-line\n} from '../internals.js'\n\nexport class DSEncoderV1 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder()\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    // nop\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    encoding.writeVarUint(this.restEncoder, clock)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n}\n\nexport class UpdateEncoderV1 extends DSEncoderV1 {\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    encoding.writeVarUint(this.restEncoder, id.client)\n    encoding.writeVarUint(this.restEncoder, id.clock)\n  }\n\n  /**\n   * Use writeClient and writeClock instead of writeID if possible.\n   * @param {number} client\n   */\n  writeClient (client) {\n    encoding.writeVarUint(this.restEncoder, client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    encoding.writeUint8(this.restEncoder, info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    encoding.writeVarString(this.restEncoder, s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    encoding.writeVarUint(this.restEncoder, isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    encoding.writeVarUint(this.restEncoder, info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    encoding.writeVarUint(this.restEncoder, len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeVarString(this.restEncoder, JSON.stringify(embed))\n  }\n\n  /**\n   * @param {string} key\n   */\n  writeKey (key) {\n    encoding.writeVarString(this.restEncoder, key)\n  }\n}\n\nexport class DSEncoderV2 {\n  constructor () {\n    this.restEncoder = encoding.createEncoder() // encodes all the rest / non-optimized\n    this.dsCurrVal = 0\n  }\n\n  toUint8Array () {\n    return encoding.toUint8Array(this.restEncoder)\n  }\n\n  resetDsCurVal () {\n    this.dsCurrVal = 0\n  }\n\n  /**\n   * @param {number} clock\n   */\n  writeDsClock (clock) {\n    const diff = clock - this.dsCurrVal\n    this.dsCurrVal = clock\n    encoding.writeVarUint(this.restEncoder, diff)\n  }\n\n  /**\n   * @param {number} len\n   */\n  writeDsLen (len) {\n    if (len === 0) {\n      error.unexpectedCase()\n    }\n    encoding.writeVarUint(this.restEncoder, len - 1)\n    this.dsCurrVal += len\n  }\n}\n\nexport class UpdateEncoderV2 extends DSEncoderV2 {\n  constructor () {\n    super()\n    /**\n     * @type {Map<string,number>}\n     */\n    this.keyMap = new Map()\n    /**\n     * Refers to the next uniqe key-identifier to me used.\n     * See writeKey method for more information.\n     *\n     * @type {number}\n     */\n    this.keyClock = 0\n    this.keyClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.clientEncoder = new encoding.UintOptRleEncoder()\n    this.leftClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.rightClockEncoder = new encoding.IntDiffOptRleEncoder()\n    this.infoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.stringEncoder = new encoding.StringEncoder()\n    this.parentInfoEncoder = new encoding.RleEncoder(encoding.writeUint8)\n    this.typeRefEncoder = new encoding.UintOptRleEncoder()\n    this.lenEncoder = new encoding.UintOptRleEncoder()\n  }\n\n  toUint8Array () {\n    const encoder = encoding.createEncoder()\n    encoding.writeVarUint(encoder, 0) // this is a feature flag that we might use in the future\n    encoding.writeVarUint8Array(encoder, this.keyClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.clientEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.leftClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.rightClockEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.infoEncoder))\n    encoding.writeVarUint8Array(encoder, this.stringEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, encoding.toUint8Array(this.parentInfoEncoder))\n    encoding.writeVarUint8Array(encoder, this.typeRefEncoder.toUint8Array())\n    encoding.writeVarUint8Array(encoder, this.lenEncoder.toUint8Array())\n    // @note The rest encoder is appended! (note the missing var)\n    encoding.writeUint8Array(encoder, encoding.toUint8Array(this.restEncoder))\n    return encoding.toUint8Array(encoder)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeLeftID (id) {\n    this.clientEncoder.write(id.client)\n    this.leftClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {ID} id\n   */\n  writeRightID (id) {\n    this.clientEncoder.write(id.client)\n    this.rightClockEncoder.write(id.clock)\n  }\n\n  /**\n   * @param {number} client\n   */\n  writeClient (client) {\n    this.clientEncoder.write(client)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeInfo (info) {\n    this.infoEncoder.write(info)\n  }\n\n  /**\n   * @param {string} s\n   */\n  writeString (s) {\n    this.stringEncoder.write(s)\n  }\n\n  /**\n   * @param {boolean} isYKey\n   */\n  writeParentInfo (isYKey) {\n    this.parentInfoEncoder.write(isYKey ? 1 : 0)\n  }\n\n  /**\n   * @param {number} info An unsigned 8-bit integer\n   */\n  writeTypeRef (info) {\n    this.typeRefEncoder.write(info)\n  }\n\n  /**\n   * Write len of a struct - well suited for Opt RLE encoder.\n   *\n   * @param {number} len\n   */\n  writeLen (len) {\n    this.lenEncoder.write(len)\n  }\n\n  /**\n   * @param {any} any\n   */\n  writeAny (any) {\n    encoding.writeAny(this.restEncoder, any)\n  }\n\n  /**\n   * @param {Uint8Array} buf\n   */\n  writeBuf (buf) {\n    encoding.writeVarUint8Array(this.restEncoder, buf)\n  }\n\n  /**\n   * This is mainly here for legacy purposes.\n   *\n   * Initial we incoded objects using JSON. Now we use the much faster lib0/any-encoder. This method mainly exists for legacy purposes for the v1 encoder.\n   *\n   * @param {any} embed\n   */\n  writeJSON (embed) {\n    encoding.writeAny(this.restEncoder, embed)\n  }\n\n  /**\n   * Property keys are often reused. For example, in y-prosemirror the key `bold` might\n   * occur very often. For a 3d application, the key `position` might occur very often.\n   *\n   * We cache these keys in a Map and refer to them via a unique number.\n   *\n   * @param {string} key\n   */\n  writeKey (key) {\n    const clock = this.keyMap.get(key)\n    if (clock === undefined) {\n      this.keyClockEncoder.write(this.keyClock++)\n      this.stringEncoder.write(key)\n    } else {\n      this.keyClockEncoder.write(this.keyClock++)\n    }\n  }\n}\n","\n/**\n * @module encoding\n */\n/*\n * We use the first five bits in the info flag for determining the type of the struct.\n *\n * 0: GC\n * 1: Item with Deleted content\n * 2: Item with JSON content\n * 3: Item with Binary content\n * 4: Item with String content\n * 5: Item with Embed content (for richtext content)\n * 6: Item with Format content (a formatting marker for richtext content)\n * 7: Item with Type\n */\n\nimport {\n  findIndexSS,\n  getState,\n  createID,\n  getStateVector,\n  readAndApplyDeleteSet,\n  writeDeleteSet,\n  createDeleteSetFromStructStore,\n  transact,\n  readItemContent,\n  UpdateDecoderV1,\n  UpdateDecoderV2,\n  UpdateEncoderV1,\n  UpdateEncoderV2,\n  DSEncoderV2,\n  DSDecoderV1,\n  DSEncoderV1,\n  mergeUpdates,\n  mergeUpdatesV2,\n  Skip,\n  diffUpdateV2,\n  convertUpdateFormatV2ToV1,\n  DSDecoderV2, Doc, Transaction, GC, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nimport * as encoding from 'lib0/encoding'\nimport * as decoding from 'lib0/decoding'\nimport * as binary from 'lib0/binary'\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Array<GC|Item>} structs All structs by `client`\n * @param {number} client\n * @param {number} clock write structs starting with `ID(client,clock)`\n *\n * @function\n */\nconst writeStructs = (encoder, structs, client, clock) => {\n  // write first id\n  clock = math.max(clock, structs[0].id.clock) // make sure the first id exists\n  const startNewStructs = findIndexSS(structs, clock)\n  // write # encoded structs\n  encoding.writeVarUint(encoder.restEncoder, structs.length - startNewStructs)\n  encoder.writeClient(client)\n  encoding.writeVarUint(encoder.restEncoder, clock)\n  const firstStruct = structs[startNewStructs]\n  // write first struct with an offset\n  firstStruct.write(encoder, clock - firstStruct.id.clock)\n  for (let i = startNewStructs + 1; i < structs.length; i++) {\n    structs[i].write(encoder, 0)\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {StructStore} store\n * @param {Map<number,number>} _sm\n *\n * @private\n * @function\n */\nexport const writeClientsStructs = (encoder, store, _sm) => {\n  // we filter all valid _sm entries into sm\n  const sm = new Map()\n  _sm.forEach((clock, client) => {\n    // only write if new structs are available\n    if (getState(store, client) > clock) {\n      sm.set(client, clock)\n    }\n  })\n  getStateVector(store).forEach((clock, client) => {\n    if (!_sm.has(client)) {\n      sm.set(client, 0)\n    }\n  })\n  // write # states that were updated\n  encoding.writeVarUint(encoder.restEncoder, sm.size)\n  // Write items with higher client ids first\n  // This heavily improves the conflict algorithm.\n  Array.from(sm.entries()).sort((a, b) => b[0] - a[0]).forEach(([client, clock]) => {\n    // @ts-ignore\n    writeStructs(encoder, store.clients.get(client), client, clock)\n  })\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder The decoder object to read data from.\n * @param {Doc} doc\n * @return {Map<number, { i: number, refs: Array<Item | GC> }>}\n *\n * @private\n * @function\n */\nexport const readClientsStructRefs = (decoder, doc) => {\n  /**\n   * @type {Map<number, { i: number, refs: Array<Item | GC> }>}\n   */\n  const clientRefs = map.create()\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    /**\n     * @type {Array<GC|Item>}\n     */\n    const refs = new Array(numberOfStructs)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    // const start = performance.now()\n    clientRefs.set(client, { i: 0, refs })\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      switch (binary.BITS5 & info) {\n        case 0: { // GC\n          const len = decoder.readLen()\n          refs[i] = new GC(createID(client, clock), len)\n          clock += len\n          break\n        }\n        case 10: { // Skip Struct (nothing to apply)\n          // @todo we could reduce the amount of checks by adding Skip struct to clientRefs so we know that something is missing.\n          const len = decoding.readVarUint(decoder.restDecoder)\n          refs[i] = new Skip(createID(client, clock), len)\n          clock += len\n          break\n        }\n        default: { // Item with content\n          /**\n           * The optimized implementation doesn't use any variables because inlining variables is faster.\n           * Below a non-optimized version is shown that implements the basic algorithm with\n           * a few comments\n           */\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n            null, // right\n            (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n            cantCopyParentInfo ? (decoder.readParentInfo() ? doc.get(decoder.readString()) : decoder.readLeftID()) : null, // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          /* A non-optimized implementation of the above algorithm:\n\n          // The item that was originally to the left of this item.\n          const origin = (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null\n          // The item that was originally to the right of this item.\n          const rightOrigin = (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null\n          const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n          const hasParentYKey = cantCopyParentInfo ? decoder.readParentInfo() : false\n          // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n          // and we read the next string as parentYKey.\n          // It indicates how we store/retrieve parent from `y.share`\n          // @type {string|null}\n          const parentYKey = cantCopyParentInfo && hasParentYKey ? decoder.readString() : null\n\n          const struct = new Item(\n            createID(client, clock),\n            null, // leftd\n            origin, // origin\n            null, // right\n            rightOrigin, // right origin\n            cantCopyParentInfo && !hasParentYKey ? decoder.readLeftID() : (parentYKey !== null ? doc.get(parentYKey) : null), // parent\n            cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n            readItemContent(decoder, info) // item content\n          )\n          */\n          refs[i] = struct\n          clock += struct.length\n        }\n      }\n    }\n    // console.log('time to read: ', performance.now() - start) // @todo remove\n  }\n  return clientRefs\n}\n\n/**\n * Resume computing structs generated by struct readers.\n *\n * While there is something to do, we integrate structs in this order\n * 1. top element on stack, if stack is not empty\n * 2. next element from current struct reader (if empty, use next struct reader)\n *\n * If struct causally depends on another struct (ref.missing), we put next reader of\n * `ref.id.client` on top of stack.\n *\n * At some point we find a struct that has no causal dependencies,\n * then we start emptying the stack.\n *\n * It is not possible to have circles: i.e. struct1 (from client1) depends on struct2 (from client2)\n * depends on struct3 (from client1). Therefore the max stack size is eqaul to `structReaders.length`.\n *\n * This method is implemented in a way so that we can resume computation if this update\n * causally depends on another update.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {Map<number, { i: number, refs: (GC | Item)[] }>} clientsStructRefs\n * @return { null | { update: Uint8Array, missing: Map<number,number> } }\n *\n * @private\n * @function\n */\nconst integrateStructs = (transaction, store, clientsStructRefs) => {\n  /**\n   * @type {Array<Item | GC>}\n   */\n  const stack = []\n  // sort them so that we take the higher id first, in case of conflicts the lower id will probably not conflict with the id from the higher user.\n  let clientsStructRefsIds = Array.from(clientsStructRefs.keys()).sort((a, b) => a - b)\n  if (clientsStructRefsIds.length === 0) {\n    return null\n  }\n  const getNextStructTarget = () => {\n    if (clientsStructRefsIds.length === 0) {\n      return null\n    }\n    let nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n    while (nextStructsTarget.refs.length === nextStructsTarget.i) {\n      clientsStructRefsIds.pop()\n      if (clientsStructRefsIds.length > 0) {\n        nextStructsTarget = /** @type {{i:number,refs:Array<GC|Item>}} */ (clientsStructRefs.get(clientsStructRefsIds[clientsStructRefsIds.length - 1]))\n      } else {\n        return null\n      }\n    }\n    return nextStructsTarget\n  }\n  let curStructsTarget = getNextStructTarget()\n  if (curStructsTarget === null && stack.length === 0) {\n    return null\n  }\n\n  /**\n   * @type {StructStore}\n   */\n  const restStructs = new StructStore()\n  const missingSV = new Map()\n  /**\n   * @param {number} client\n   * @param {number} clock\n   */\n  const updateMissingSv = (client, clock) => {\n    const mclock = missingSV.get(client)\n    if (mclock == null || mclock > clock) {\n      missingSV.set(client, clock)\n    }\n  }\n  /**\n   * @type {GC|Item}\n   */\n  let stackHead = /** @type {any} */ (curStructsTarget).refs[/** @type {any} */ (curStructsTarget).i++]\n  // caching the state because it is used very often\n  const state = new Map()\n\n  const addStackToRestSS = () => {\n    for (const item of stack) {\n      const client = item.id.client\n      const unapplicableItems = clientsStructRefs.get(client)\n      if (unapplicableItems) {\n        // decrement because we weren't able to apply previous operation\n        unapplicableItems.i--\n        restStructs.clients.set(client, unapplicableItems.refs.slice(unapplicableItems.i))\n        clientsStructRefs.delete(client)\n        unapplicableItems.i = 0\n        unapplicableItems.refs = []\n      } else {\n        // item was the last item on clientsStructRefs and the field was already cleared. Add item to restStructs and continue\n        restStructs.clients.set(client, [item])\n      }\n      // remove client from clientsStructRefsIds to prevent users from applying the same update again\n      clientsStructRefsIds = clientsStructRefsIds.filter(c => c !== client)\n    }\n    stack.length = 0\n  }\n\n  // iterate over all struct readers until we are done\n  while (true) {\n    if (stackHead.constructor !== Skip) {\n      const localClock = map.setIfUndefined(state, stackHead.id.client, () => getState(store, stackHead.id.client))\n      const offset = localClock - stackHead.id.clock\n      if (offset < 0) {\n        // update from the same client is missing\n        stack.push(stackHead)\n        updateMissingSv(stackHead.id.client, stackHead.id.clock - 1)\n        // hid a dead wall, add all items from stack to restSS\n        addStackToRestSS()\n      } else {\n        const missing = stackHead.getMissing(transaction, store)\n        if (missing !== null) {\n          stack.push(stackHead)\n          // get the struct reader that has the missing struct\n          /**\n           * @type {{ refs: Array<GC|Item>, i: number }}\n           */\n          const structRefs = clientsStructRefs.get(/** @type {number} */ (missing)) || { refs: [], i: 0 }\n          if (structRefs.refs.length === structRefs.i) {\n            // This update message causally depends on another update message that doesn't exist yet\n            updateMissingSv(/** @type {number} */ (missing), getState(store, missing))\n            addStackToRestSS()\n          } else {\n            stackHead = structRefs.refs[structRefs.i++]\n            continue\n          }\n        } else if (offset === 0 || offset < stackHead.length) {\n          // all fine, apply the stackhead\n          stackHead.integrate(transaction, offset)\n          state.set(stackHead.id.client, stackHead.id.clock + stackHead.length)\n        }\n      }\n    }\n    // iterate to next stackHead\n    if (stack.length > 0) {\n      stackHead = /** @type {GC|Item} */ (stack.pop())\n    } else if (curStructsTarget !== null && curStructsTarget.i < curStructsTarget.refs.length) {\n      stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n    } else {\n      curStructsTarget = getNextStructTarget()\n      if (curStructsTarget === null) {\n        // we are done!\n        break\n      } else {\n        stackHead = /** @type {GC|Item} */ (curStructsTarget.refs[curStructsTarget.i++])\n      }\n    }\n  }\n  if (restStructs.clients.size > 0) {\n    const encoder = new UpdateEncoderV2()\n    writeClientsStructs(encoder, restStructs, new Map())\n    // write empty deleteset\n    // writeDeleteSet(encoder, new DeleteSet())\n    encoding.writeVarUint(encoder.restEncoder, 0) // => no need for an extra function call, just write 0 deletes\n    return { missing: missingSV, update: encoder.toUint8Array() }\n  }\n  return null\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const writeStructsFromTransaction = (encoder, transaction) => writeClientsStructs(encoder, transaction.doc.store, transaction.beforeState)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {UpdateDecoderV1 | UpdateDecoderV2} [structDecoder]\n *\n * @function\n */\nexport const readUpdateV2 = (decoder, ydoc, transactionOrigin, structDecoder = new UpdateDecoderV2(decoder)) =>\n  transact(ydoc, transaction => {\n    // force that transaction.local is set to non-local\n    transaction.local = false\n    let retry = false\n    const doc = transaction.doc\n    const store = doc.store\n    // let start = performance.now()\n    const ss = readClientsStructRefs(structDecoder, doc)\n    // console.log('time to read structs: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    // console.log('time to merge: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const restStructs = integrateStructs(transaction, store, ss)\n    const pending = store.pendingStructs\n    if (pending) {\n      // check if we can apply something\n      for (const [client, clock] of pending.missing) {\n        if (clock < getState(store, client)) {\n          retry = true\n          break\n        }\n      }\n      if (restStructs) {\n        // merge restStructs into store.pending\n        for (const [client, clock] of restStructs.missing) {\n          const mclock = pending.missing.get(client)\n          if (mclock == null || mclock > clock) {\n            pending.missing.set(client, clock)\n          }\n        }\n        pending.update = mergeUpdatesV2([pending.update, restStructs.update])\n      }\n    } else {\n      store.pendingStructs = restStructs\n    }\n    // console.log('time to integrate: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    const dsRest = readAndApplyDeleteSet(structDecoder, transaction, store)\n    if (store.pendingDs) {\n      // @todo we could make a lower-bound state-vector check as we do above\n      const pendingDSUpdate = new UpdateDecoderV2(decoding.createDecoder(store.pendingDs))\n      decoding.readVarUint(pendingDSUpdate.restDecoder) // read 0 structs, because we only encode deletes in pendingdsupdate\n      const dsRest2 = readAndApplyDeleteSet(pendingDSUpdate, transaction, store)\n      if (dsRest && dsRest2) {\n        // case 1: ds1 != null && ds2 != null\n        store.pendingDs = mergeUpdatesV2([dsRest, dsRest2])\n      } else {\n        // case 2: ds1 != null\n        // case 3: ds2 != null\n        // case 4: ds1 == null && ds2 == null\n        store.pendingDs = dsRest || dsRest2\n      }\n    } else {\n      // Either dsRest == null && pendingDs == null OR dsRest != null\n      store.pendingDs = dsRest\n    }\n    // console.log('time to cleanup: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n\n    // console.log('time to resume delete readers: ', performance.now() - start) // @todo remove\n    // start = performance.now()\n    if (retry) {\n      const update = /** @type {{update: Uint8Array}} */ (store.pendingStructs).update\n      store.pendingStructs = null\n      applyUpdateV2(transaction.doc, update)\n    }\n  }, transactionOrigin, false)\n\n/**\n * Read and apply a document update.\n *\n * This function has the same effect as `applyUpdate` but accepts an decoder.\n *\n * @param {decoding.Decoder} decoder\n * @param {Doc} ydoc\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const readUpdate = (decoder, ydoc, transactionOrigin) => readUpdateV2(decoder, ydoc, transactionOrigin, new UpdateDecoderV1(decoder))\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n *\n * @function\n */\nexport const applyUpdateV2 = (ydoc, update, transactionOrigin, YDecoder = UpdateDecoderV2) => {\n  const decoder = decoding.createDecoder(update)\n  readUpdateV2(decoder, ydoc, transactionOrigin, new YDecoder(decoder))\n}\n\n/**\n * Apply a document update created by, for example, `y.on('update', update => ..)` or `update = encodeStateAsUpdate()`.\n *\n * This function has the same effect as `readUpdate` but accepts an Uint8Array instead of a Decoder.\n *\n * @param {Doc} ydoc\n * @param {Uint8Array} update\n * @param {any} [transactionOrigin] This will be stored on `transaction.origin` and `.on('update', (update, origin))`\n *\n * @function\n */\nexport const applyUpdate = (ydoc, update, transactionOrigin) => applyUpdateV2(ydoc, update, transactionOrigin, UpdateDecoderV1)\n\n/**\n * Write all the document as a single update message. If you specify the state of the remote client (`targetStateVector`) it will\n * only write the operations that are missing.\n *\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Doc} doc\n * @param {Map<number,number>} [targetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n *\n * @function\n */\nexport const writeStateAsUpdate = (encoder, doc, targetStateVector = new Map()) => {\n  writeClientsStructs(encoder, doc.store, targetStateVector)\n  writeDeleteSet(encoder, createDeleteSetFromStructStore(doc.store))\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @param {UpdateEncoderV1 | UpdateEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdateV2 = (doc, encodedTargetStateVector = new Uint8Array([0]), encoder = new UpdateEncoderV2()) => {\n  const targetStateVector = decodeStateVector(encodedTargetStateVector)\n  writeStateAsUpdate(encoder, doc, targetStateVector)\n  const updates = [encoder.toUint8Array()]\n  // also add the pending updates (if there are any)\n  if (doc.store.pendingDs) {\n    updates.push(doc.store.pendingDs)\n  }\n  if (doc.store.pendingStructs) {\n    updates.push(diffUpdateV2(doc.store.pendingStructs.update, encodedTargetStateVector))\n  }\n  if (updates.length > 1) {\n    if (encoder.constructor === UpdateEncoderV1) {\n      return mergeUpdates(updates.map((update, i) => i === 0 ? update : convertUpdateFormatV2ToV1(update)))\n    } else if (encoder.constructor === UpdateEncoderV2) {\n      return mergeUpdatesV2(updates)\n    }\n  }\n  return updates[0]\n}\n\n/**\n * Write all the document as a single update message that can be applied on the remote document. If you specify the state of the remote client (`targetState`) it will\n * only write the operations that are missing.\n *\n * Use `writeStateAsUpdate` instead if you are working with lib0/encoding.js#Encoder\n *\n * @param {Doc} doc\n * @param {Uint8Array} [encodedTargetStateVector] The state of the target that receives the update. Leave empty to write all known structs\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateAsUpdate = (doc, encodedTargetStateVector) => encodeStateAsUpdateV2(doc, encodedTargetStateVector, new UpdateEncoderV1())\n\n/**\n * Read state vector from Decoder and return as Map\n *\n * @param {DSDecoderV1 | DSDecoderV2} decoder\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const readStateVector = decoder => {\n  const ss = new Map()\n  const ssLength = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < ssLength; i++) {\n    const client = decoding.readVarUint(decoder.restDecoder)\n    const clock = decoding.readVarUint(decoder.restDecoder)\n    ss.set(client, clock)\n  }\n  return ss\n}\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\n// export const decodeStateVectorV2 = decodedState => readStateVector(new DSDecoderV2(decoding.createDecoder(decodedState)))\n\n/**\n * Read decodedState and return State as Map.\n *\n * @param {Uint8Array} decodedState\n * @return {Map<number,number>} Maps `client` to the number next expected `clock` from that client.\n *\n * @function\n */\nexport const decodeStateVector = decodedState => readStateVector(new DSDecoderV1(decoding.createDecoder(decodedState)))\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Map<number,number>} sv\n * @function\n */\nexport const writeStateVector = (encoder, sv) => {\n  encoding.writeVarUint(encoder.restEncoder, sv.size)\n  sv.forEach((clock, client) => {\n    encoding.writeVarUint(encoder.restEncoder, client) // @todo use a special client decoder that is based on mapping\n    encoding.writeVarUint(encoder.restEncoder, clock)\n  })\n  return encoder\n}\n\n/**\n * @param {DSEncoderV1 | DSEncoderV2} encoder\n * @param {Doc} doc\n *\n * @function\n */\nexport const writeDocumentStateVector = (encoder, doc) => writeStateVector(encoder, getStateVector(doc.store))\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVectorV2 = (doc, encoder = new DSEncoderV2()) => {\n  if (doc instanceof Map) {\n    writeStateVector(encoder, doc)\n  } else {\n    writeDocumentStateVector(encoder, doc)\n  }\n  return encoder.toUint8Array()\n}\n\n/**\n * Encode State as Uint8Array.\n *\n * @param {Doc|Map<number,number>} doc\n * @return {Uint8Array}\n *\n * @function\n */\nexport const encodeStateVector = doc => encodeStateVectorV2(doc, new DSEncoderV1())\n","import * as f from 'lib0/function'\n\n/**\n * General event handler implementation.\n *\n * @template ARG0, ARG1\n *\n * @private\n */\nexport class EventHandler {\n  constructor () {\n    /**\n     * @type {Array<function(ARG0, ARG1):void>}\n     */\n    this.l = []\n  }\n}\n\n/**\n * @template ARG0,ARG1\n * @returns {EventHandler<ARG0,ARG1>}\n *\n * @private\n * @function\n */\nexport const createEventHandler = () => new EventHandler()\n\n/**\n * Adds an event listener that is called when\n * {@link EventHandler#callEventListeners} is called.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler.\n *\n * @private\n * @function\n */\nexport const addEventHandlerListener = (eventHandler, f) =>\n  eventHandler.l.push(f)\n\n/**\n * Removes an event listener.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {function(ARG0,ARG1):void} f The event handler that was added with\n *                     {@link EventHandler#addEventListener}\n *\n * @private\n * @function\n */\nexport const removeEventHandlerListener = (eventHandler, f) => {\n  const l = eventHandler.l\n  const len = l.length\n  eventHandler.l = l.filter(g => f !== g)\n  if (len === eventHandler.l.length) {\n    console.error('[yjs] Tried to remove event handler that doesn\\'t exist.')\n  }\n}\n\n/**\n * Removes all event listeners.\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n *\n * @private\n * @function\n */\nexport const removeAllEventHandlerListeners = eventHandler => {\n  eventHandler.l.length = 0\n}\n\n/**\n * Call all event listeners that were added via\n * {@link EventHandler#addEventListener}.\n *\n * @template ARG0,ARG1\n * @param {EventHandler<ARG0,ARG1>} eventHandler\n * @param {ARG0} arg0\n * @param {ARG1} arg1\n *\n * @private\n * @function\n */\nexport const callEventHandlerListeners = (eventHandler, arg0, arg1) =>\n  f.callAll(eventHandler.l, [arg0, arg1])\n","\nimport { AbstractType } from '../internals.js' // eslint-disable-line\n\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as error from 'lib0/error'\n\nexport class ID {\n  /**\n   * @param {number} client client id\n   * @param {number} clock unique per client id, continuous number\n   */\n  constructor (client, clock) {\n    /**\n     * Client id\n     * @type {number}\n     */\n    this.client = client\n    /**\n     * unique per client id, continuous number\n     * @type {number}\n     */\n    this.clock = clock\n  }\n}\n\n/**\n * @param {ID | null} a\n * @param {ID | null} b\n * @return {boolean}\n *\n * @function\n */\nexport const compareIDs = (a, b) => a === b || (a !== null && b !== null && a.client === b.client && a.clock === b.clock)\n\n/**\n * @param {number} client\n * @param {number} clock\n *\n * @private\n * @function\n */\nexport const createID = (client, clock) => new ID(client, clock)\n\n/**\n * @param {encoding.Encoder} encoder\n * @param {ID} id\n *\n * @private\n * @function\n */\nexport const writeID = (encoder, id) => {\n  encoding.writeVarUint(encoder, id.client)\n  encoding.writeVarUint(encoder, id.clock)\n}\n\n/**\n * Read ID.\n * * If first varUint read is 0xFFFFFF a RootID is returned.\n * * Otherwise an ID is returned\n *\n * @param {decoding.Decoder} decoder\n * @return {ID}\n *\n * @private\n * @function\n */\nexport const readID = decoder =>\n  createID(decoding.readVarUint(decoder), decoding.readVarUint(decoder))\n\n/**\n * The top types are mapped from y.share.get(keyname) => type.\n * `type` does not store any information about the `keyname`.\n * This function finds the correct `keyname` for `type` and throws otherwise.\n *\n * @param {AbstractType<any>} type\n * @return {string}\n *\n * @private\n * @function\n */\nexport const findRootTypeKey = type => {\n  // @ts-ignore _y must be defined, otherwise unexpected case\n  for (const [key, value] of type.doc.share.entries()) {\n    if (value === type) {\n      return key\n    }\n  }\n  throw error.unexpectedCase()\n}\n","\nimport { AbstractType, Item } from '../internals.js' // eslint-disable-line\n\n/**\n * Check if `parent` is a parent of `child`.\n *\n * @param {AbstractType<any>} parent\n * @param {Item|null} child\n * @return {Boolean} Whether `parent` is a parent of `child`.\n *\n * @private\n * @function\n */\nexport const isParentOf = (parent, child) => {\n  while (child !== null) {\n    if (child.parent === parent) {\n      return true\n    }\n    child = /** @type {AbstractType<any>} */ (child.parent)._item\n  }\n  return false\n}\n","\nimport {\n  isDeleted,\n  createDeleteSetFromStructStore,\n  getStateVector,\n  getItemCleanStart,\n  iterateDeletedStructs,\n  writeDeleteSet,\n  writeStateVector,\n  readDeleteSet,\n  readStateVector,\n  createDeleteSet,\n  createID,\n  getState,\n  findIndexSS,\n  UpdateEncoderV2,\n  applyUpdateV2,\n  DSEncoderV1, DSEncoderV2, DSDecoderV1, DSDecoderV2, Transaction, Doc, DeleteSet, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as set from 'lib0/set'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\n\nexport class Snapshot {\n  /**\n   * @param {DeleteSet} ds\n   * @param {Map<number,number>} sv state map\n   */\n  constructor (ds, sv) {\n    /**\n     * @type {DeleteSet}\n     */\n    this.ds = ds\n    /**\n     * State Map\n     * @type {Map<number,number>}\n     */\n    this.sv = sv\n  }\n}\n\n/**\n * @param {Snapshot} snap1\n * @param {Snapshot} snap2\n * @return {boolean}\n */\nexport const equalSnapshots = (snap1, snap2) => {\n  const ds1 = snap1.ds.clients\n  const ds2 = snap2.ds.clients\n  const sv1 = snap1.sv\n  const sv2 = snap2.sv\n  if (sv1.size !== sv2.size || ds1.size !== ds2.size) {\n    return false\n  }\n  for (const [key, value] of sv1.entries()) {\n    if (sv2.get(key) !== value) {\n      return false\n    }\n  }\n  for (const [client, dsitems1] of ds1.entries()) {\n    const dsitems2 = ds2.get(client) || []\n    if (dsitems1.length !== dsitems2.length) {\n      return false\n    }\n    for (let i = 0; i < dsitems1.length; i++) {\n      const dsitem1 = dsitems1[i]\n      const dsitem2 = dsitems2[i]\n      if (dsitem1.clock !== dsitem2.clock || dsitem1.len !== dsitem2.len) {\n        return false\n      }\n    }\n  }\n  return true\n}\n\n/**\n * @param {Snapshot} snapshot\n * @param {DSEncoderV1 | DSEncoderV2} [encoder]\n * @return {Uint8Array}\n */\nexport const encodeSnapshotV2 = (snapshot, encoder = new DSEncoderV2()) => {\n  writeDeleteSet(encoder, snapshot.ds)\n  writeStateVector(encoder, snapshot.sv)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Snapshot} snapshot\n * @return {Uint8Array}\n */\nexport const encodeSnapshot = snapshot => encodeSnapshotV2(snapshot, new DSEncoderV1())\n\n/**\n * @param {Uint8Array} buf\n * @param {DSDecoderV1 | DSDecoderV2} [decoder]\n * @return {Snapshot}\n */\nexport const decodeSnapshotV2 = (buf, decoder = new DSDecoderV2(decoding.createDecoder(buf))) => {\n  return new Snapshot(readDeleteSet(decoder), readStateVector(decoder))\n}\n\n/**\n * @param {Uint8Array} buf\n * @return {Snapshot}\n */\nexport const decodeSnapshot = buf => decodeSnapshotV2(buf, new DSDecoderV1(decoding.createDecoder(buf)))\n\n/**\n * @param {DeleteSet} ds\n * @param {Map<number,number>} sm\n * @return {Snapshot}\n */\nexport const createSnapshot = (ds, sm) => new Snapshot(ds, sm)\n\nexport const emptySnapshot = createSnapshot(createDeleteSet(), new Map())\n\n/**\n * @param {Doc} doc\n * @return {Snapshot}\n */\nexport const snapshot = doc => createSnapshot(createDeleteSetFromStructStore(doc.store), getStateVector(doc.store))\n\n/**\n * @param {Item} item\n * @param {Snapshot|undefined} snapshot\n *\n * @protected\n * @function\n */\nexport const isVisible = (item, snapshot) => snapshot === undefined ? !item.deleted : (\n  snapshot.sv.has(item.id.client) && (snapshot.sv.get(item.id.client) || 0) > item.id.clock && !isDeleted(snapshot.ds, item.id)\n)\n\n/**\n * @param {Transaction} transaction\n * @param {Snapshot} snapshot\n */\nexport const splitSnapshotAffectedStructs = (transaction, snapshot) => {\n  const meta = map.setIfUndefined(transaction.meta, splitSnapshotAffectedStructs, set.create)\n  const store = transaction.doc.store\n  // check if we already split for this snapshot\n  if (!meta.has(snapshot)) {\n    snapshot.sv.forEach((clock, client) => {\n      if (clock < getState(store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n    })\n    iterateDeletedStructs(transaction, snapshot.ds, item => {})\n    meta.add(snapshot)\n  }\n}\n\n/**\n * @param {Doc} originDoc\n * @param {Snapshot} snapshot\n * @param {Doc} [newDoc] Optionally, you may define the Yjs document that receives the data from originDoc\n * @return {Doc}\n */\nexport const createDocFromSnapshot = (originDoc, snapshot, newDoc = new Doc()) => {\n  if (originDoc.gc) {\n    // we should not try to restore a GC-ed document, because some of the restored items might have their content deleted\n    throw new Error('originDoc must not be garbage collected')\n  }\n  const { sv, ds } = snapshot\n\n  const encoder = new UpdateEncoderV2()\n  originDoc.transact(transaction => {\n    let size = 0\n    sv.forEach(clock => {\n      if (clock > 0) {\n        size++\n      }\n    })\n    encoding.writeVarUint(encoder.restEncoder, size)\n    // splitting the structs before writing them to the encoder\n    for (const [client, clock] of sv) {\n      if (clock === 0) {\n        continue\n      }\n      if (clock < getState(originDoc.store, client)) {\n        getItemCleanStart(transaction, createID(client, clock))\n      }\n      const structs = originDoc.store.clients.get(client) || []\n      const lastStructIndex = findIndexSS(structs, clock - 1)\n      // write # encoded structs\n      encoding.writeVarUint(encoder.restEncoder, lastStructIndex + 1)\n      encoder.writeClient(client)\n      // first clock written is 0\n      encoding.writeVarUint(encoder.restEncoder, 0)\n      for (let i = 0; i <= lastStructIndex; i++) {\n        structs[i].write(encoder, 0)\n      }\n    }\n    writeDeleteSet(encoder, ds)\n  })\n\n  applyUpdateV2(newDoc, encoder.toUint8Array(), 'snapshot')\n  return newDoc\n}\n","\nimport {\n  GC,\n  splitItem,\n  Transaction, ID, Item, DSDecoderV2 // eslint-disable-line\n} from '../internals.js'\n\nimport * as math from 'lib0/math'\nimport * as error from 'lib0/error'\n\nexport class StructStore {\n  constructor () {\n    /**\n     * @type {Map<number,Array<GC|Item>>}\n     */\n    this.clients = new Map()\n    /**\n     * @type {null | { missing: Map<number, number>, update: Uint8Array }}\n     */\n    this.pendingStructs = null\n    /**\n     * @type {null | Uint8Array}\n     */\n    this.pendingDs = null\n  }\n}\n\n/**\n * Return the states as a Map<client,clock>.\n * Note that clock refers to the next expected clock id.\n *\n * @param {StructStore} store\n * @return {Map<number,number>}\n *\n * @public\n * @function\n */\nexport const getStateVector = store => {\n  const sm = new Map()\n  store.clients.forEach((structs, client) => {\n    const struct = structs[structs.length - 1]\n    sm.set(client, struct.id.clock + struct.length)\n  })\n  return sm\n}\n\n/**\n * @param {StructStore} store\n * @param {number} client\n * @return {number}\n *\n * @public\n * @function\n */\nexport const getState = (store, client) => {\n  const structs = store.clients.get(client)\n  if (structs === undefined) {\n    return 0\n  }\n  const lastStruct = structs[structs.length - 1]\n  return lastStruct.id.clock + lastStruct.length\n}\n\n/**\n * @param {StructStore} store\n *\n * @private\n * @function\n */\nexport const integretyCheck = store => {\n  store.clients.forEach(structs => {\n    for (let i = 1; i < structs.length; i++) {\n      const l = structs[i - 1]\n      const r = structs[i]\n      if (l.id.clock + l.length !== r.id.clock) {\n        throw new Error('StructStore failed integrety check')\n      }\n    }\n  })\n}\n\n/**\n * @param {StructStore} store\n * @param {GC|Item} struct\n *\n * @private\n * @function\n */\nexport const addStruct = (store, struct) => {\n  let structs = store.clients.get(struct.id.client)\n  if (structs === undefined) {\n    structs = []\n    store.clients.set(struct.id.client, structs)\n  } else {\n    const lastStruct = structs[structs.length - 1]\n    if (lastStruct.id.clock + lastStruct.length !== struct.id.clock) {\n      throw error.unexpectedCase()\n    }\n  }\n  structs.push(struct)\n}\n\n/**\n * Perform a binary search on a sorted array\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n * @return {number}\n *\n * @private\n * @function\n */\nexport const findIndexSS = (structs, clock) => {\n  let left = 0\n  let right = structs.length - 1\n  let mid = structs[right]\n  let midclock = mid.id.clock\n  if (midclock === clock) {\n    return right\n  }\n  // @todo does it even make sense to pivot the search?\n  // If a good split misses, it might actually increase the time to find the correct item.\n  // Currently, the only advantage is that search with pivoting might find the item on the first try.\n  let midindex = math.floor((clock / (midclock + mid.length - 1)) * right) // pivoting the search\n  while (left <= right) {\n    mid = structs[midindex]\n    midclock = mid.id.clock\n    if (midclock <= clock) {\n      if (clock < midclock + mid.length) {\n        return midindex\n      }\n      left = midindex + 1\n    } else {\n      right = midindex - 1\n    }\n    midindex = math.floor((left + right) / 2)\n  }\n  // Always check state before looking for a struct in StructStore\n  // Therefore the case of not finding a struct is unexpected\n  throw error.unexpectedCase()\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {GC|Item}\n *\n * @private\n * @function\n */\nexport const find = (store, id) => {\n  /**\n   * @type {Array<GC|Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  return structs[findIndexSS(structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n * @private\n * @function\n */\nexport const getItem = /** @type {function(StructStore,ID):Item} */ (find)\n\n/**\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clock\n */\nexport const findIndexCleanStart = (transaction, structs, clock) => {\n  const index = findIndexSS(structs, clock)\n  const struct = structs[index]\n  if (struct.id.clock < clock && struct instanceof Item) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, clock - struct.id.clock))\n    return index + 1\n  }\n  return index\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanStart = (transaction, id) => {\n  const structs = /** @type {Array<Item>} */ (transaction.doc.store.clients.get(id.client))\n  return structs[findIndexCleanStart(transaction, structs, id.clock)]\n}\n\n/**\n * Expects that id is actually in store. This function throws or is an infinite loop otherwise.\n *\n * @param {Transaction} transaction\n * @param {StructStore} store\n * @param {ID} id\n * @return {Item}\n *\n * @private\n * @function\n */\nexport const getItemCleanEnd = (transaction, store, id) => {\n  /**\n   * @type {Array<Item>}\n   */\n  // @ts-ignore\n  const structs = store.clients.get(id.client)\n  const index = findIndexSS(structs, id.clock)\n  const struct = structs[index]\n  if (id.clock !== struct.id.clock + struct.length - 1 && struct.constructor !== GC) {\n    structs.splice(index + 1, 0, splitItem(transaction, struct, id.clock - struct.id.clock + 1))\n  }\n  return struct\n}\n\n/**\n * Replace `item` with `newitem` in store\n * @param {StructStore} store\n * @param {GC|Item} struct\n * @param {GC|Item} newStruct\n *\n * @private\n * @function\n */\nexport const replaceStruct = (store, struct, newStruct) => {\n  const structs = /** @type {Array<GC|Item>} */ (store.clients.get(struct.id.client))\n  structs[findIndexSS(structs, struct.id.clock)] = newStruct\n}\n\n/**\n * Iterate over a range of structs\n *\n * @param {Transaction} transaction\n * @param {Array<Item|GC>} structs\n * @param {number} clockStart Inclusive start\n * @param {number} len\n * @param {function(GC|Item):void} f\n *\n * @function\n */\nexport const iterateStructs = (transaction, structs, clockStart, len, f) => {\n  if (len === 0) {\n    return\n  }\n  const clockEnd = clockStart + len\n  let index = findIndexCleanStart(transaction, structs, clockStart)\n  let struct\n  do {\n    struct = structs[index++]\n    if (clockEnd < struct.id.clock + struct.length) {\n      findIndexCleanStart(transaction, structs, clockEnd)\n    }\n    f(struct)\n  } while (index < structs.length && structs[index].id.clock < clockEnd)\n}\n","\nimport {\n  getState,\n  writeStructsFromTransaction,\n  writeDeleteSet,\n  DeleteSet,\n  sortAndMergeDeleteSet,\n  getStateVector,\n  findIndexSS,\n  callEventHandlerListeners,\n  Item,\n  generateNewClientId,\n  createID,\n  UpdateEncoderV1, UpdateEncoderV2, GC, StructStore, AbstractType, AbstractStruct, YEvent, Doc // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as math from 'lib0/math'\nimport * as set from 'lib0/set'\nimport * as logging from 'lib0/logging'\nimport { callAll } from 'lib0/function'\n\n/**\n * A transaction is created for every change on the Yjs model. It is possible\n * to bundle changes on the Yjs model in a single transaction to\n * minimize the number on messages sent and the number of observer calls.\n * If possible the user of this library should bundle as many changes as\n * possible. Here is an example to illustrate the advantages of bundling:\n *\n * @example\n * const map = y.define('map', YMap)\n * // Log content when change is triggered\n * map.observe(() => {\n *   console.log('change triggered')\n * })\n * // Each change on the map type triggers a log message:\n * map.set('a', 0) // => \"change triggered\"\n * map.set('b', 0) // => \"change triggered\"\n * // When put in a transaction, it will trigger the log after the transaction:\n * y.transact(() => {\n *   map.set('a', 1)\n *   map.set('b', 1)\n * }) // => \"change triggered\"\n *\n * @public\n */\nexport class Transaction {\n  /**\n   * @param {Doc} doc\n   * @param {any} origin\n   * @param {boolean} local\n   */\n  constructor (doc, origin, local) {\n    /**\n     * The Yjs instance.\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * Describes the set of deleted items by ids\n     * @type {DeleteSet}\n     */\n    this.deleteSet = new DeleteSet()\n    /**\n     * Holds the state before the transaction started.\n     * @type {Map<Number,Number>}\n     */\n    this.beforeState = getStateVector(doc.store)\n    /**\n     * Holds the state after the transaction.\n     * @type {Map<Number,Number>}\n     */\n    this.afterState = new Map()\n    /**\n     * All types that were directly modified (property added or child\n     * inserted/deleted). New types are not included in this Set.\n     * Maps from type to parentSubs (`item.parentSub = null` for YArray)\n     * @type {Map<AbstractType<YEvent>,Set<String|null>>}\n     */\n    this.changed = new Map()\n    /**\n     * Stores the events for the types that observe also child elements.\n     * It is mainly used by `observeDeep`.\n     * @type {Map<AbstractType<YEvent>,Array<YEvent>>}\n     */\n    this.changedParentTypes = new Map()\n    /**\n     * @type {Array<AbstractStruct>}\n     */\n    this._mergeStructs = []\n    /**\n     * @type {any}\n     */\n    this.origin = origin\n    /**\n     * Stores meta information on the transaction\n     * @type {Map<any,any>}\n     */\n    this.meta = new Map()\n    /**\n     * Whether this change originates from this doc.\n     * @type {boolean}\n     */\n    this.local = local\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsAdded = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsRemoved = new Set()\n    /**\n     * @type {Set<Doc>}\n     */\n    this.subdocsLoaded = new Set()\n  }\n}\n\n/**\n * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n * @param {Transaction} transaction\n * @return {boolean} Whether data was written.\n */\nexport const writeUpdateMessageFromTransaction = (encoder, transaction) => {\n  if (transaction.deleteSet.clients.size === 0 && !map.any(transaction.afterState, (clock, client) => transaction.beforeState.get(client) !== clock)) {\n    return false\n  }\n  sortAndMergeDeleteSet(transaction.deleteSet)\n  writeStructsFromTransaction(encoder, transaction)\n  writeDeleteSet(encoder, transaction.deleteSet)\n  return true\n}\n\n/**\n * @param {Transaction} transaction\n *\n * @private\n * @function\n */\nexport const nextID = transaction => {\n  const y = transaction.doc\n  return createID(y.clientID, getState(y.store, y.clientID))\n}\n\n/**\n * If `type.parent` was added in current transaction, `type` technically\n * did not change, it was just added and we should not fire events for `type`.\n *\n * @param {Transaction} transaction\n * @param {AbstractType<YEvent>} type\n * @param {string|null} parentSub\n */\nexport const addChangedTypeToTransaction = (transaction, type, parentSub) => {\n  const item = type._item\n  if (item === null || (item.id.clock < (transaction.beforeState.get(item.id.client) || 0) && !item.deleted)) {\n    map.setIfUndefined(transaction.changed, type, set.create).add(parentSub)\n  }\n}\n\n/**\n * @param {Array<AbstractStruct>} structs\n * @param {number} pos\n */\nconst tryToMergeWithLeft = (structs, pos) => {\n  const left = structs[pos - 1]\n  const right = structs[pos]\n  if (left.deleted === right.deleted && left.constructor === right.constructor) {\n    if (left.mergeWith(right)) {\n      structs.splice(pos, 1)\n      if (right instanceof Item && right.parentSub !== null && /** @type {AbstractType<any>} */ (right.parent)._map.get(right.parentSub) === right) {\n        /** @type {AbstractType<any>} */ (right.parent)._map.set(right.parentSub, /** @type {Item} */ (left))\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nconst tryGcDeleteSet = (ds, store, gcFilter) => {\n  for (const [client, deleteItems] of ds.clients.entries()) {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      const endDeleteItemClock = deleteItem.clock + deleteItem.len\n      for (\n        let si = findIndexSS(structs, deleteItem.clock), struct = structs[si];\n        si < structs.length && struct.id.clock < endDeleteItemClock;\n        struct = structs[++si]\n      ) {\n        const struct = structs[si]\n        if (deleteItem.clock + deleteItem.len <= struct.id.clock) {\n          break\n        }\n        if (struct instanceof Item && struct.deleted && !struct.keep && gcFilter(struct)) {\n          struct.gc(store, false)\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n */\nconst tryMergeDeleteSet = (ds, store) => {\n  // try to merge deleted / gc'd items\n  // merge from right to left for better efficiecy and so we don't miss any merge targets\n  ds.clients.forEach((deleteItems, client) => {\n    const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n    for (let di = deleteItems.length - 1; di >= 0; di--) {\n      const deleteItem = deleteItems[di]\n      // start with merging the item next to the last deleted item\n      const mostRightIndexToCheck = math.min(structs.length - 1, 1 + findIndexSS(structs, deleteItem.clock + deleteItem.len - 1))\n      for (\n        let si = mostRightIndexToCheck, struct = structs[si];\n        si > 0 && struct.id.clock >= deleteItem.clock;\n        struct = structs[--si]\n      ) {\n        tryToMergeWithLeft(structs, si)\n      }\n    }\n  })\n}\n\n/**\n * @param {DeleteSet} ds\n * @param {StructStore} store\n * @param {function(Item):boolean} gcFilter\n */\nexport const tryGc = (ds, store, gcFilter) => {\n  tryGcDeleteSet(ds, store, gcFilter)\n  tryMergeDeleteSet(ds, store)\n}\n\n/**\n * @param {Array<Transaction>} transactionCleanups\n * @param {number} i\n */\nconst cleanupTransactions = (transactionCleanups, i) => {\n  if (i < transactionCleanups.length) {\n    const transaction = transactionCleanups[i]\n    const doc = transaction.doc\n    const store = doc.store\n    const ds = transaction.deleteSet\n    const mergeStructs = transaction._mergeStructs\n    try {\n      sortAndMergeDeleteSet(ds)\n      transaction.afterState = getStateVector(transaction.doc.store)\n      doc._transaction = null\n      doc.emit('beforeObserverCalls', [transaction, doc])\n      /**\n       * An array of event callbacks.\n       *\n       * Each callback is called even if the other ones throw errors.\n       *\n       * @type {Array<function():void>}\n       */\n      const fs = []\n      // observe events on changed types\n      transaction.changed.forEach((subs, itemtype) =>\n        fs.push(() => {\n          if (itemtype._item === null || !itemtype._item.deleted) {\n            itemtype._callObserver(transaction, subs)\n          }\n        })\n      )\n      fs.push(() => {\n        // deep observe events\n        transaction.changedParentTypes.forEach((events, type) =>\n          fs.push(() => {\n            // We need to think about the possibility that the user transforms the\n            // Y.Doc in the event.\n            if (type._item === null || !type._item.deleted) {\n              events = events\n                .filter(event =>\n                  event.target._item === null || !event.target._item.deleted\n                )\n              events\n                .forEach(event => {\n                  event.currentTarget = type\n                })\n              // sort events by path length so that top-level events are fired first.\n              events\n                .sort((event1, event2) => event1.path.length - event2.path.length)\n              // We don't need to check for events.length\n              // because we know it has at least one element\n              callEventHandlerListeners(type._dEH, events, transaction)\n            }\n          })\n        )\n        fs.push(() => doc.emit('afterTransaction', [transaction, doc]))\n      })\n      callAll(fs, [])\n    } finally {\n      // Replace deleted items with ItemDeleted / GC.\n      // This is where content is actually remove from the Yjs Doc.\n      if (doc.gc) {\n        tryGcDeleteSet(ds, store, doc.gcFilter)\n      }\n      tryMergeDeleteSet(ds, store)\n\n      // on all affected store.clients props, try to merge\n      transaction.afterState.forEach((clock, client) => {\n        const beforeClock = transaction.beforeState.get(client) || 0\n        if (beforeClock !== clock) {\n          const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n          // we iterate from right to left so we can safely remove entries\n          const firstChangePos = math.max(findIndexSS(structs, beforeClock), 1)\n          for (let i = structs.length - 1; i >= firstChangePos; i--) {\n            tryToMergeWithLeft(structs, i)\n          }\n        }\n      })\n      // try to merge mergeStructs\n      // @todo: it makes more sense to transform mergeStructs to a DS, sort it, and merge from right to left\n      //        but at the moment DS does not handle duplicates\n      for (let i = 0; i < mergeStructs.length; i++) {\n        const { client, clock } = mergeStructs[i].id\n        const structs = /** @type {Array<GC|Item>} */ (store.clients.get(client))\n        const replacedStructPos = findIndexSS(structs, clock)\n        if (replacedStructPos + 1 < structs.length) {\n          tryToMergeWithLeft(structs, replacedStructPos + 1)\n        }\n        if (replacedStructPos > 0) {\n          tryToMergeWithLeft(structs, replacedStructPos)\n        }\n      }\n      if (!transaction.local && transaction.afterState.get(doc.clientID) !== transaction.beforeState.get(doc.clientID)) {\n        doc.clientID = generateNewClientId()\n        logging.print(logging.ORANGE, logging.BOLD, '[yjs] ', logging.UNBOLD, logging.RED, 'Changed the client-id because another client seems to be using it.')\n      }\n      // @todo Merge all the transactions into one and provide send the data as a single update message\n      doc.emit('afterTransactionCleanup', [transaction, doc])\n      if (doc._observers.has('update')) {\n        const encoder = new UpdateEncoderV1()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('update', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      if (doc._observers.has('updateV2')) {\n        const encoder = new UpdateEncoderV2()\n        const hasContent = writeUpdateMessageFromTransaction(encoder, transaction)\n        if (hasContent) {\n          doc.emit('updateV2', [encoder.toUint8Array(), transaction.origin, doc, transaction])\n        }\n      }\n      transaction.subdocsAdded.forEach(subdoc => doc.subdocs.add(subdoc))\n      transaction.subdocsRemoved.forEach(subdoc => doc.subdocs.delete(subdoc))\n\n      doc.emit('subdocs', [{ loaded: transaction.subdocsLoaded, added: transaction.subdocsAdded, removed: transaction.subdocsRemoved }])\n      transaction.subdocsRemoved.forEach(subdoc => subdoc.destroy())\n\n      if (transactionCleanups.length <= i + 1) {\n        doc._transactionCleanups = []\n        doc.emit('afterAllTransactions', [doc, transactionCleanups])\n      } else {\n        cleanupTransactions(transactionCleanups, i + 1)\n      }\n    }\n  }\n}\n\n/**\n * Implements the functionality of `y.transact(()=>{..})`\n *\n * @param {Doc} doc\n * @param {function(Transaction):void} f\n * @param {any} [origin=true]\n *\n * @function\n */\nexport const transact = (doc, f, origin = null, local = true) => {\n  const transactionCleanups = doc._transactionCleanups\n  let initialCall = false\n  if (doc._transaction === null) {\n    initialCall = true\n    doc._transaction = new Transaction(doc, origin, local)\n    transactionCleanups.push(doc._transaction)\n    if (transactionCleanups.length === 1) {\n      doc.emit('beforeAllTransactions', [doc])\n    }\n    doc.emit('beforeTransaction', [doc._transaction, doc])\n  }\n  try {\n    f(doc._transaction)\n  } finally {\n    if (initialCall && transactionCleanups[0] === doc._transaction) {\n      // The first transaction ended, now process observer calls.\n      // Observer call may create new transactions for which we need to call the observers and do cleanup.\n      // We don't want to nest these calls, so we execute these calls one after\n      // another.\n      // Also we need to ensure that all cleanups are called, even if the\n      // observes throw errors.\n      // This file is full of hacky try {} finally {} blocks to ensure that an\n      // event can throw errors and also that the cleanup is called.\n      cleanupTransactions(transactionCleanups, 0)\n    }\n  }\n}\n","import {\n  mergeDeleteSets,\n  iterateDeletedStructs,\n  keepItem,\n  transact,\n  createID,\n  redoItem,\n  isParentOf,\n  followRedone,\n  getItemCleanStart,\n  isDeleted,\n  addToDeleteSet,\n  Transaction, Doc, Item, GC, DeleteSet, AbstractType, YEvent // eslint-disable-line\n} from '../internals.js'\n\nimport * as time from 'lib0/time'\nimport { Observable } from 'lib0/observable'\n\nclass StackItem {\n  /**\n   * @param {DeleteSet} deletions\n   * @param {DeleteSet} insertions\n   */\n  constructor (deletions, insertions) {\n    this.insertions = insertions\n    this.deletions = deletions\n    /**\n     * Use this to save and restore metadata like selection range\n     */\n    this.meta = new Map()\n  }\n}\n\n/**\n * @param {UndoManager} undoManager\n * @param {Array<StackItem>} stack\n * @param {string} eventType\n * @return {StackItem?}\n */\nconst popStackItem = (undoManager, stack, eventType) => {\n  /**\n   * Whether a change happened\n   * @type {StackItem?}\n   */\n  let result = null\n  /**\n   * Keep a reference to the transaction so we can fire the event with the changedParentTypes\n   * @type {any}\n   */\n  let _tr = null\n  const doc = undoManager.doc\n  const scope = undoManager.scope\n  transact(doc, transaction => {\n    while (stack.length > 0 && result === null) {\n      const store = doc.store\n      const stackItem = /** @type {StackItem} */ (stack.pop())\n      /**\n       * @type {Set<Item>}\n       */\n      const itemsToRedo = new Set()\n      /**\n       * @type {Array<Item>}\n       */\n      const itemsToDelete = []\n      let performedChange = false\n      iterateDeletedStructs(transaction, stackItem.insertions, struct => {\n        if (struct instanceof Item) {\n          if (struct.redone !== null) {\n            let { item, diff } = followRedone(store, struct.id)\n            if (diff > 0) {\n              item = getItemCleanStart(transaction, createID(item.id.client, item.id.clock + diff))\n            }\n            struct = item\n          }\n          if (!struct.deleted && scope.some(type => isParentOf(type, /** @type {Item} */ (struct)))) {\n            itemsToDelete.push(struct)\n          }\n        }\n      })\n      iterateDeletedStructs(transaction, stackItem.deletions, struct => {\n        if (\n          struct instanceof Item &&\n          scope.some(type => isParentOf(type, struct)) &&\n          // Never redo structs in stackItem.insertions because they were created and deleted in the same capture interval.\n          !isDeleted(stackItem.insertions, struct.id)\n        ) {\n          itemsToRedo.add(struct)\n        }\n      })\n      itemsToRedo.forEach(struct => {\n        performedChange = redoItem(transaction, struct, itemsToRedo) !== null || performedChange\n      })\n      // We want to delete in reverse order so that children are deleted before\n      // parents, so we have more information available when items are filtered.\n      for (let i = itemsToDelete.length - 1; i >= 0; i--) {\n        const item = itemsToDelete[i]\n        if (undoManager.deleteFilter(item)) {\n          item.delete(transaction)\n          performedChange = true\n        }\n      }\n      result = performedChange ? stackItem : null\n    }\n    transaction.changed.forEach((subProps, type) => {\n      // destroy search marker if necessary\n      if (subProps.has(null) && type._searchMarker) {\n        type._searchMarker.length = 0\n      }\n    })\n    _tr = transaction\n  }, undoManager)\n  if (result != null) {\n    const changedParentTypes = _tr.changedParentTypes\n    undoManager.emit('stack-item-popped', [{ stackItem: result, type: eventType, changedParentTypes }, undoManager])\n  }\n  return result\n}\n\n/**\n * @typedef {Object} UndoManagerOptions\n * @property {number} [UndoManagerOptions.captureTimeout=500]\n * @property {function(Item):boolean} [UndoManagerOptions.deleteFilter=()=>true] Sometimes\n * it is necessary to filter whan an Undo/Redo operation can delete. If this\n * filter returns false, the type/item won't be deleted even it is in the\n * undo/redo scope.\n * @property {Set<any>} [UndoManagerOptions.trackedOrigins=new Set([null])]\n */\n\n/**\n * Fires 'stack-item-added' event when a stack item was added to either the undo- or\n * the redo-stack. You may store additional stack information via the\n * metadata property on `event.stackItem.meta` (it is a `Map` of metadata properties).\n * Fires 'stack-item-popped' event when a stack item was popped from either the\n * undo- or the redo-stack. You may restore the saved stack information from `event.stackItem.meta`.\n *\n * @extends {Observable<'stack-item-added'|'stack-item-popped'>}\n */\nexport class UndoManager extends Observable {\n  /**\n   * @param {AbstractType<any>|Array<AbstractType<any>>} typeScope Accepts either a single type, or an array of types\n   * @param {UndoManagerOptions} options\n   */\n  constructor (typeScope, { captureTimeout = 500, deleteFilter = () => true, trackedOrigins = new Set([null]) } = {}) {\n    super()\n    this.scope = typeScope instanceof Array ? typeScope : [typeScope]\n    this.deleteFilter = deleteFilter\n    trackedOrigins.add(this)\n    this.trackedOrigins = trackedOrigins\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.undoStack = []\n    /**\n     * @type {Array<StackItem>}\n     */\n    this.redoStack = []\n    /**\n     * Whether the client is currently undoing (calling UndoManager.undo)\n     *\n     * @type {boolean}\n     */\n    this.undoing = false\n    this.redoing = false\n    this.doc = /** @type {Doc} */ (this.scope[0].doc)\n    this.lastChange = 0\n    this.doc.on('afterTransaction', /** @param {Transaction} transaction */ transaction => {\n      // Only track certain transactions\n      if (!this.scope.some(type => transaction.changedParentTypes.has(type)) || (!this.trackedOrigins.has(transaction.origin) && (!transaction.origin || !this.trackedOrigins.has(transaction.origin.constructor)))) {\n        return\n      }\n      const undoing = this.undoing\n      const redoing = this.redoing\n      const stack = undoing ? this.redoStack : this.undoStack\n      if (undoing) {\n        this.stopCapturing() // next undo should not be appended to last stack item\n      } else if (!redoing) {\n        // neither undoing nor redoing: delete redoStack\n        this.redoStack = []\n      }\n      const insertions = new DeleteSet()\n      transaction.afterState.forEach((endClock, client) => {\n        const startClock = transaction.beforeState.get(client) || 0\n        const len = endClock - startClock\n        if (len > 0) {\n          addToDeleteSet(insertions, client, startClock, len)\n        }\n      })\n      const now = time.getUnixTime()\n      if (now - this.lastChange < captureTimeout && stack.length > 0 && !undoing && !redoing) {\n        // append change to last stack op\n        const lastOp = stack[stack.length - 1]\n        lastOp.deletions = mergeDeleteSets([lastOp.deletions, transaction.deleteSet])\n        lastOp.insertions = mergeDeleteSets([lastOp.insertions, insertions])\n      } else {\n        // create a new stack op\n        stack.push(new StackItem(transaction.deleteSet, insertions))\n      }\n      if (!undoing && !redoing) {\n        this.lastChange = now\n      }\n      // make sure that deleted structs are not gc'd\n      iterateDeletedStructs(transaction, transaction.deleteSet, /** @param {Item|GC} item */ item => {\n        if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n          keepItem(item, true)\n        }\n      })\n      this.emit('stack-item-added', [{ stackItem: stack[stack.length - 1], origin: transaction.origin, type: undoing ? 'redo' : 'undo', changedParentTypes: transaction.changedParentTypes }, this])\n    })\n  }\n\n  clear () {\n    this.doc.transact(transaction => {\n      /**\n       * @param {StackItem} stackItem\n       */\n      const clearItem = stackItem => {\n        iterateDeletedStructs(transaction, stackItem.deletions, item => {\n          if (item instanceof Item && this.scope.some(type => isParentOf(type, item))) {\n            keepItem(item, false)\n          }\n        })\n      }\n      this.undoStack.forEach(clearItem)\n      this.redoStack.forEach(clearItem)\n    })\n    this.undoStack = []\n    this.redoStack = []\n  }\n\n  /**\n   * UndoManager merges Undo-StackItem if they are created within time-gap\n   * smaller than `options.captureTimeout`. Call `um.stopCapturing()` so that the next\n   * StackItem won't be merged.\n   *\n   *\n   * @example\n   *     // without stopCapturing\n   *     ytext.insert(0, 'a')\n   *     ytext.insert(1, 'b')\n   *     um.undo()\n   *     ytext.toString() // => '' (note that 'ab' was removed)\n   *     // with stopCapturing\n   *     ytext.insert(0, 'a')\n   *     um.stopCapturing()\n   *     ytext.insert(0, 'b')\n   *     um.undo()\n   *     ytext.toString() // => 'a' (note that only 'b' was removed)\n   *\n   */\n  stopCapturing () {\n    this.lastChange = 0\n  }\n\n  /**\n   * Undo last changes on type.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  undo () {\n    this.undoing = true\n    let res\n    try {\n      res = popStackItem(this, this.undoStack, 'undo')\n    } finally {\n      this.undoing = false\n    }\n    return res\n  }\n\n  /**\n   * Redo last undo operation.\n   *\n   * @return {StackItem?} Returns StackItem if a change was applied\n   */\n  redo () {\n    this.redoing = true\n    let res\n    try {\n      res = popStackItem(this, this.redoStack, 'redo')\n    } finally {\n      this.redoing = false\n    }\n    return res\n  }\n}\n","\nimport * as binary from 'lib0/binary'\nimport * as decoding from 'lib0/decoding'\nimport * as encoding from 'lib0/encoding'\nimport * as logging from 'lib0/logging'\nimport * as math from 'lib0/math'\nimport {\n  createID,\n  readItemContent,\n  readDeleteSet,\n  writeDeleteSet,\n  Skip,\n  mergeDeleteSets,\n  DSEncoderV1,\n  DSEncoderV2,\n  decodeStateVector,\n  Item, GC, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2 // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n */\nfunction * lazyStructReaderGenerator (decoder) {\n  const numOfStateUpdates = decoding.readVarUint(decoder.restDecoder)\n  for (let i = 0; i < numOfStateUpdates; i++) {\n    const numberOfStructs = decoding.readVarUint(decoder.restDecoder)\n    const client = decoder.readClient()\n    let clock = decoding.readVarUint(decoder.restDecoder)\n    for (let i = 0; i < numberOfStructs; i++) {\n      const info = decoder.readInfo()\n      // @todo use switch instead of ifs\n      if (info === 10) {\n        const len = decoding.readVarUint(decoder.restDecoder)\n        yield new Skip(createID(client, clock), len)\n        clock += len\n      } else if ((binary.BITS5 & info) !== 0) {\n        const cantCopyParentInfo = (info & (binary.BIT7 | binary.BIT8)) === 0\n        // If parent = null and neither left nor right are defined, then we know that `parent` is child of `y`\n        // and we read the next string as parentYKey.\n        // It indicates how we store/retrieve parent from `y.share`\n        // @type {string|null}\n        const struct = new Item(\n          createID(client, clock),\n          null, // left\n          (info & binary.BIT8) === binary.BIT8 ? decoder.readLeftID() : null, // origin\n          null, // right\n          (info & binary.BIT7) === binary.BIT7 ? decoder.readRightID() : null, // right origin\n          // @ts-ignore Force writing a string here.\n          cantCopyParentInfo ? (decoder.readParentInfo() ? decoder.readString() : decoder.readLeftID()) : null, // parent\n          cantCopyParentInfo && (info & binary.BIT6) === binary.BIT6 ? decoder.readString() : null, // parentSub\n          readItemContent(decoder, info) // item content\n        )\n        yield struct\n        clock += struct.length\n      } else {\n        const len = decoder.readLen()\n        yield new GC(createID(client, clock), len)\n        clock += len\n      }\n    }\n  }\n}\n\nexport class LazyStructReader {\n  /**\n   * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n   * @param {boolean} filterSkips\n   */\n  constructor (decoder, filterSkips) {\n    this.gen = lazyStructReaderGenerator(decoder)\n    /**\n     * @type {null | Item | Skip | GC}\n     */\n    this.curr = null\n    this.done = false\n    this.filterSkips = filterSkips\n    this.next()\n  }\n\n  /**\n   * @return {Item | GC | Skip |null}\n   */\n  next () {\n    // ignore \"Skip\" structs\n    do {\n      this.curr = this.gen.next().value || null\n    } while (this.filterSkips && this.curr !== null && this.curr.constructor === Skip)\n    return this.curr\n  }\n}\n\n/**\n * @param {Uint8Array} update\n *\n */\nexport const logUpdate = update => logUpdateV2(update, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} [YDecoder]\n *\n */\nexport const logUpdateV2 = (update, YDecoder = UpdateDecoderV2) => {\n  const structs = []\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    structs.push(curr)\n  }\n  logging.print('Structs: ', structs)\n  const ds = readDeleteSet(updateDecoder)\n  logging.print('DeleteSet: ', ds)\n}\n\nexport class LazyStructWriter {\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  constructor (encoder) {\n    this.currClient = 0\n    this.startClock = 0\n    this.written = 0\n    this.encoder = encoder\n    /**\n     * We want to write operations lazily, but also we need to know beforehand how many operations we want to write for each client.\n     *\n     * This kind of meta-information (#clients, #structs-per-client-written) is written to the restEncoder.\n     *\n     * We fragment the restEncoder and store a slice of it per-client until we know how many clients there are.\n     * When we flush (toUint8Array) we write the restEncoder using the fragments and the meta-information.\n     *\n     * @type {Array<{ written: number, restEncoder: Uint8Array }>}\n     */\n    this.clientStructs = []\n  }\n}\n\n/**\n * @param {Array<Uint8Array>} updates\n * @return {Uint8Array}\n */\nexport const mergeUpdates = updates => mergeUpdatesV2(updates, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof DSEncoderV1 | typeof DSEncoderV2} YEncoder\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdateV2 = (update, YEncoder = DSEncoderV2, YDecoder = UpdateDecoderV2) => {\n  const encoder = new YEncoder()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let size = 0\n    let currClient = curr.id.client\n    let stopCounting = curr.id.clock !== 0 // must start at 0\n    let currClock = stopCounting ? 0 : curr.id.clock + curr.length\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        if (currClock !== 0) {\n          size++\n          // We found a new client\n          // write what we have to the encoder\n          encoding.writeVarUint(encoder.restEncoder, currClient)\n          encoding.writeVarUint(encoder.restEncoder, currClock)\n        }\n        currClient = curr.id.client\n        currClock = 0\n        stopCounting = curr.id.clock !== 0\n      }\n      // we ignore skips\n      if (curr.constructor === Skip) {\n        stopCounting = true\n      }\n      if (!stopCounting) {\n        currClock = curr.id.clock + curr.length\n      }\n    }\n    // write what we have\n    if (currClock !== 0) {\n      size++\n      encoding.writeVarUint(encoder.restEncoder, currClient)\n      encoding.writeVarUint(encoder.restEncoder, currClock)\n    }\n    // prepend the size of the state vector\n    const enc = encoding.createEncoder()\n    encoding.writeVarUint(enc, size)\n    encoding.writeBinaryEncoder(enc, encoder.restEncoder)\n    encoder.restEncoder = enc\n    return encoder.toUint8Array()\n  } else {\n    encoding.writeVarUint(encoder.restEncoder, 0)\n    return encoder.toUint8Array()\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {Uint8Array}\n */\nexport const encodeStateVectorFromUpdate = update => encodeStateVectorFromUpdateV2(update, DSEncoderV1, UpdateDecoderV1)\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} YDecoder\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMetaV2 = (update, YDecoder = UpdateDecoderV2) => {\n  /**\n   * @type {Map<number, number>}\n   */\n  const from = new Map()\n  /**\n   * @type {Map<number, number>}\n   */\n  const to = new Map()\n  const updateDecoder = new LazyStructReader(new YDecoder(decoding.createDecoder(update)), false)\n  let curr = updateDecoder.curr\n  if (curr !== null) {\n    let currClient = curr.id.client\n    let currClock = curr.id.clock\n    // write the beginning to `from`\n    from.set(currClient, currClock)\n    for (; curr !== null; curr = updateDecoder.next()) {\n      if (currClient !== curr.id.client) {\n        // We found a new client\n        // write the end to `to`\n        to.set(currClient, currClock)\n        // write the beginning to `from`\n        from.set(curr.id.client, curr.id.clock)\n        // update currClient\n        currClient = curr.id.client\n      }\n      currClock = curr.id.clock + curr.length\n    }\n    // write the end to `to`\n    to.set(currClient, currClock)\n  }\n  return { from, to }\n}\n\n/**\n * @param {Uint8Array} update\n * @return {{ from: Map<number,number>, to: Map<number,number> }}\n */\nexport const parseUpdateMeta = update => parseUpdateMetaV2(update, UpdateDecoderV1)\n\n/**\n * This method is intended to slice any kind of struct and retrieve the right part.\n * It does not handle side-effects, so it should only be used by the lazy-encoder.\n *\n * @param {Item | GC | Skip} left\n * @param {number} diff\n * @return {Item | GC}\n */\nconst sliceStruct = (left, diff) => {\n  if (left.constructor === GC) {\n    const { client, clock } = left.id\n    return new GC(createID(client, clock + diff), left.length - diff)\n  } else if (left.constructor === Skip) {\n    const { client, clock } = left.id\n    return new Skip(createID(client, clock + diff), left.length - diff)\n  } else {\n    const leftItem = /** @type {Item} */ (left)\n    const { client, clock } = leftItem.id\n    return new Item(\n      createID(client, clock + diff),\n      null,\n      createID(client, clock + diff - 1),\n      null,\n      leftItem.rightOrigin,\n      leftItem.parent,\n      leftItem.parentSub,\n      leftItem.content.splice(diff)\n    )\n  }\n}\n\n/**\n *\n * This function works similarly to `readUpdateV2`.\n *\n * @param {Array<Uint8Array>} updates\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n * @return {Uint8Array}\n */\nexport const mergeUpdatesV2 = (updates, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const updateDecoders = updates.map(update => new YDecoder(decoding.createDecoder(update)))\n  let lazyStructDecoders = updateDecoders.map(decoder => new LazyStructReader(decoder, true))\n\n  /**\n   * @todo we don't need offset because we always slice before\n   * @type {null | { struct: Item | GC | Skip, offset: number }}\n   */\n  let currWrite = null\n\n  const updateEncoder = new YEncoder()\n  // write structs lazily\n  const lazyStructEncoder = new LazyStructWriter(updateEncoder)\n\n  // Note: We need to ensure that all lazyStructDecoders are fully consumed\n  // Note: Should merge document updates whenever possible - even from different updates\n  // Note: Should handle that some operations cannot be applied yet ()\n\n  while (true) {\n    // Write higher clients first ⇒ sort by clientID & clock and remove decoders without content\n    lazyStructDecoders = lazyStructDecoders.filter(dec => dec.curr !== null)\n    lazyStructDecoders.sort(\n      /** @type {function(any,any):number} */ (dec1, dec2) => {\n        if (dec1.curr.id.client === dec2.curr.id.client) {\n          const clockDiff = dec1.curr.id.clock - dec2.curr.id.clock\n          if (clockDiff === 0) {\n            return dec1.curr.constructor === dec2.curr.constructor ? 0 : (\n              dec1.curr.constructor === Skip ? 1 : -1\n            )\n          } else {\n            return clockDiff\n          }\n        } else {\n          return dec2.curr.id.client - dec1.curr.id.client\n        }\n      }\n    )\n    if (lazyStructDecoders.length === 0) {\n      break\n    }\n    const currDecoder = lazyStructDecoders[0]\n    // write from currDecoder until the next operation is from another client or if filler-struct\n    // then we need to reorder the decoders and find the next operation to write\n    const firstClient = /** @type {Item | GC} */ (currDecoder.curr).id.client\n\n    if (currWrite !== null) {\n      let curr = /** @type {Item | GC | null} */ (currDecoder.curr)\n      let iterated = false\n\n      // iterate until we find something that we haven't written already\n      // remember: first the high client-ids are written\n      while (curr !== null && curr.id.clock + curr.length <= currWrite.struct.id.clock + currWrite.struct.length && curr.id.client >= currWrite.struct.id.client) {\n        curr = currDecoder.next()\n        iterated = true\n      }\n      if (\n        curr === null || // current decoder is empty\n        curr.id.client !== firstClient || // check whether there is another decoder that has has updates from `firstClient`\n        (iterated && curr.id.clock > currWrite.struct.id.clock + currWrite.struct.length) // the above while loop was used and we are potentially missing updates\n      ) {\n        continue\n      }\n\n      if (firstClient !== currWrite.struct.id.client) {\n        writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n        currWrite = { struct: curr, offset: 0 }\n        currDecoder.next()\n      } else {\n        if (currWrite.struct.id.clock + currWrite.struct.length < curr.id.clock) {\n          // @todo write currStruct & set currStruct = Skip(clock = currStruct.id.clock + currStruct.length, length = curr.id.clock - self.clock)\n          if (currWrite.struct.constructor === Skip) {\n            // extend existing skip\n            currWrite.struct.length = curr.id.clock + curr.length - currWrite.struct.id.clock\n          } else {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            const diff = curr.id.clock - currWrite.struct.id.clock - currWrite.struct.length\n            /**\n             * @type {Skip}\n             */\n            const struct = new Skip(createID(firstClient, currWrite.struct.id.clock + currWrite.struct.length), diff)\n            currWrite = { struct, offset: 0 }\n          }\n        } else { // if (currWrite.struct.id.clock + currWrite.struct.length >= curr.id.clock) {\n          const diff = currWrite.struct.id.clock + currWrite.struct.length - curr.id.clock\n          if (diff > 0) {\n            if (currWrite.struct.constructor === Skip) {\n              // prefer to slice Skip because the other struct might contain more information\n              currWrite.struct.length -= diff\n            } else {\n              curr = sliceStruct(curr, diff)\n            }\n          }\n          if (!currWrite.struct.mergeWith(/** @type {any} */ (curr))) {\n            writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n            currWrite = { struct: curr, offset: 0 }\n            currDecoder.next()\n          }\n        }\n      }\n    } else {\n      currWrite = { struct: /** @type {Item | GC} */ (currDecoder.curr), offset: 0 }\n      currDecoder.next()\n    }\n    for (\n      let next = currDecoder.curr;\n      next !== null && next.id.client === firstClient && next.id.clock === currWrite.struct.id.clock + currWrite.struct.length && next.constructor !== Skip;\n      next = currDecoder.next()\n    ) {\n      writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n      currWrite = { struct: next, offset: 0 }\n    }\n  }\n  if (currWrite !== null) {\n    writeStructToLazyStructWriter(lazyStructEncoder, currWrite.struct, currWrite.offset)\n    currWrite = null\n  }\n  finishLazyStructWriting(lazyStructEncoder)\n\n  const dss = updateDecoders.map(decoder => readDeleteSet(decoder))\n  const ds = mergeDeleteSets(dss)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n * @param {typeof UpdateDecoderV1 | typeof UpdateDecoderV2} [YDecoder]\n * @param {typeof UpdateEncoderV1 | typeof UpdateEncoderV2} [YEncoder]\n */\nexport const diffUpdateV2 = (update, sv, YDecoder = UpdateDecoderV2, YEncoder = UpdateEncoderV2) => {\n  const state = decodeStateVector(sv)\n  const encoder = new YEncoder()\n  const lazyStructWriter = new LazyStructWriter(encoder)\n  const decoder = new YDecoder(decoding.createDecoder(update))\n  const reader = new LazyStructReader(decoder, false)\n  while (reader.curr) {\n    const curr = reader.curr\n    const currClient = curr.id.client\n    const svClock = state.get(currClient) || 0\n    if (reader.curr.constructor === Skip) {\n      // the first written struct shouldn't be a skip\n      reader.next()\n      continue\n    }\n    if (curr.id.clock + curr.length > svClock) {\n      writeStructToLazyStructWriter(lazyStructWriter, curr, math.max(svClock - curr.id.clock, 0))\n      reader.next()\n      while (reader.curr && reader.curr.id.client === currClient) {\n        writeStructToLazyStructWriter(lazyStructWriter, reader.curr, 0)\n        reader.next()\n      }\n    } else {\n      // read until something new comes up\n      while (reader.curr && reader.curr.id.client === currClient && reader.curr.id.clock + reader.curr.length <= svClock) {\n        reader.next()\n      }\n    }\n  }\n  finishLazyStructWriting(lazyStructWriter)\n  // write ds\n  const ds = readDeleteSet(decoder)\n  writeDeleteSet(encoder, ds)\n  return encoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n * @param {Uint8Array} sv\n */\nexport const diffUpdate = (update, sv) => diffUpdateV2(update, sv, UpdateDecoderV1, UpdateEncoderV1)\n\n/**\n * @param {LazyStructWriter} lazyWriter\n */\nconst flushLazyStructWriter = lazyWriter => {\n  if (lazyWriter.written > 0) {\n    lazyWriter.clientStructs.push({ written: lazyWriter.written, restEncoder: encoding.toUint8Array(lazyWriter.encoder.restEncoder) })\n    lazyWriter.encoder.restEncoder = encoding.createEncoder()\n    lazyWriter.written = 0\n  }\n}\n\n/**\n * @param {LazyStructWriter} lazyWriter\n * @param {Item | GC} struct\n * @param {number} offset\n */\nconst writeStructToLazyStructWriter = (lazyWriter, struct, offset) => {\n  // flush curr if we start another client\n  if (lazyWriter.written > 0 && lazyWriter.currClient !== struct.id.client) {\n    flushLazyStructWriter(lazyWriter)\n  }\n  if (lazyWriter.written === 0) {\n    lazyWriter.currClient = struct.id.client\n    // write next client\n    lazyWriter.encoder.writeClient(struct.id.client)\n    // write startClock\n    encoding.writeVarUint(lazyWriter.encoder.restEncoder, struct.id.clock + offset)\n  }\n  struct.write(lazyWriter.encoder, offset)\n  lazyWriter.written++\n}\n/**\n * Call this function when we collected all parts and want to\n * put all the parts together. After calling this method,\n * you can continue using the UpdateEncoder.\n *\n * @param {LazyStructWriter} lazyWriter\n */\nconst finishLazyStructWriting = (lazyWriter) => {\n  flushLazyStructWriter(lazyWriter)\n\n  // this is a fresh encoder because we called flushCurr\n  const restEncoder = lazyWriter.encoder.restEncoder\n\n  /**\n   * Now we put all the fragments together.\n   * This works similarly to `writeClientsStructs`\n   */\n\n  // write # states that were updated - i.e. the clients\n  encoding.writeVarUint(restEncoder, lazyWriter.clientStructs.length)\n\n  for (let i = 0; i < lazyWriter.clientStructs.length; i++) {\n    const partStructs = lazyWriter.clientStructs[i]\n    /**\n     * Works similarly to `writeStructs`\n     */\n    // write # encoded structs\n    encoding.writeVarUint(restEncoder, partStructs.written)\n    // write the rest of the fragment\n    encoding.writeUint8Array(restEncoder, partStructs.restEncoder)\n  }\n}\n\n/**\n * @param {Uint8Array} update\n * @param {typeof UpdateDecoderV2 | typeof UpdateDecoderV1} YDecoder\n * @param {typeof UpdateEncoderV2 | typeof UpdateEncoderV1 } YEncoder\n */\nexport const convertUpdateFormat = (update, YDecoder, YEncoder) => {\n  const updateDecoder = new YDecoder(decoding.createDecoder(update))\n  const lazyDecoder = new LazyStructReader(updateDecoder, false)\n  const updateEncoder = new YEncoder()\n  const lazyWriter = new LazyStructWriter(updateEncoder)\n\n  for (let curr = lazyDecoder.curr; curr !== null; curr = lazyDecoder.next()) {\n    writeStructToLazyStructWriter(lazyWriter, curr, 0)\n  }\n  finishLazyStructWriting(lazyWriter)\n  const ds = readDeleteSet(updateDecoder)\n  writeDeleteSet(updateEncoder, ds)\n  return updateEncoder.toUint8Array()\n}\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV1ToV2 = update => convertUpdateFormat(update, UpdateDecoderV1, UpdateEncoderV2)\n\n/**\n * @param {Uint8Array} update\n */\nexport const convertUpdateFormatV2ToV1 = update => convertUpdateFormat(update, UpdateDecoderV2, UpdateEncoderV1)\n","\nimport {\n  isDeleted,\n  Item, AbstractType, Transaction, AbstractStruct // eslint-disable-line\n} from '../internals.js'\n\nimport * as set from 'lib0/set'\nimport * as array from 'lib0/array'\n\n/**\n * YEvent describes the changes on a YType.\n */\nexport class YEvent {\n  /**\n   * @param {AbstractType<any>} target The changed type.\n   * @param {Transaction} transaction\n   */\n  constructor (target, transaction) {\n    /**\n     * The type on which this event was created on.\n     * @type {AbstractType<any>}\n     */\n    this.target = target\n    /**\n     * The current target on which the observe callback is called.\n     * @type {AbstractType<any>}\n     */\n    this.currentTarget = target\n    /**\n     * The transaction that triggered this event.\n     * @type {Transaction}\n     */\n    this.transaction = transaction\n    /**\n     * @type {Object|null}\n     */\n    this._changes = null\n    /**\n     * @type {null | Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n     */\n    this._keys = null\n    /**\n     * @type {null | Array<{ insert?: string | Array<any>, retain?: number, delete?: number, attributes?: Object<string, any> }>}\n     */\n    this._delta = null\n  }\n\n  /**\n   * Computes the path from `y` to the changed type.\n   *\n   * @todo v14 should standardize on path: Array<{parent, index}> because that is easier to work with.\n   *\n   * The following property holds:\n   * @example\n   *   let type = y\n   *   event.path.forEach(dir => {\n   *     type = type.get(dir)\n   *   })\n   *   type === event.target // => true\n   */\n  get path () {\n    // @ts-ignore _item is defined because target is integrated\n    return getPathTo(this.currentTarget, this.target)\n  }\n\n  /**\n   * Check if a struct is deleted by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  deletes (struct) {\n    return isDeleted(this.transaction.deleteSet, struct.id)\n  }\n\n  /**\n   * @type {Map<string, { action: 'add' | 'update' | 'delete', oldValue: any, newValue: any }>}\n   */\n  get keys () {\n    if (this._keys === null) {\n      const keys = new Map()\n      const target = this.target\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      changed.forEach(key => {\n        if (key !== null) {\n          const item = /** @type {Item} */ (target._map.get(key))\n          /**\n           * @type {'delete' | 'add' | 'update'}\n           */\n          let action\n          let oldValue\n          if (this.adds(item)) {\n            let prev = item.left\n            while (prev !== null && this.adds(prev)) {\n              prev = prev.left\n            }\n            if (this.deletes(item)) {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'delete'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                return\n              }\n            } else {\n              if (prev !== null && this.deletes(prev)) {\n                action = 'update'\n                oldValue = array.last(prev.content.getContent())\n              } else {\n                action = 'add'\n                oldValue = undefined\n              }\n            }\n          } else {\n            if (this.deletes(item)) {\n              action = 'delete'\n              oldValue = array.last(/** @type {Item} */ item.content.getContent())\n            } else {\n              return // nop\n            }\n          }\n          keys.set(key, { action, oldValue })\n        }\n      })\n      this._keys = keys\n    }\n    return this._keys\n  }\n\n  /**\n   * @type {Array<{insert?: string | Array<any>, retain?: number, delete?: number, attributes?: Object<string, any>}>}\n   */\n  get delta () {\n    return this.changes.delta\n  }\n\n  /**\n   * Check if a struct is added by this event.\n   *\n   * In contrast to change.deleted, this method also returns true if the struct was added and then deleted.\n   *\n   * @param {AbstractStruct} struct\n   * @return {boolean}\n   */\n  adds (struct) {\n    return struct.id.clock >= (this.transaction.beforeState.get(struct.id.client) || 0)\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    let changes = this._changes\n    if (changes === null) {\n      const target = this.target\n      const added = set.create()\n      const deleted = set.create()\n      /**\n       * @type {Array<{insert:Array<any>}|{delete:number}|{retain:number}>}\n       */\n      const delta = []\n      changes = {\n        added,\n        deleted,\n        delta,\n        keys: this.keys\n      }\n      const changed = /** @type Set<string|null> */ (this.transaction.changed.get(target))\n      if (changed.has(null)) {\n        /**\n         * @type {any}\n         */\n        let lastOp = null\n        const packOp = () => {\n          if (lastOp) {\n            delta.push(lastOp)\n          }\n        }\n        for (let item = target._start; item !== null; item = item.right) {\n          if (item.deleted) {\n            if (this.deletes(item) && !this.adds(item)) {\n              if (lastOp === null || lastOp.delete === undefined) {\n                packOp()\n                lastOp = { delete: 0 }\n              }\n              lastOp.delete += item.length\n              deleted.add(item)\n            } // else nop\n          } else {\n            if (this.adds(item)) {\n              if (lastOp === null || lastOp.insert === undefined) {\n                packOp()\n                lastOp = { insert: [] }\n              }\n              lastOp.insert = lastOp.insert.concat(item.content.getContent())\n              added.add(item)\n            } else {\n              if (lastOp === null || lastOp.retain === undefined) {\n                packOp()\n                lastOp = { retain: 0 }\n              }\n              lastOp.retain += item.length\n            }\n          }\n        }\n        if (lastOp !== null && lastOp.retain === undefined) {\n          packOp()\n        }\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (changes)\n  }\n}\n\n/**\n * Compute the path from this type to the specified target.\n *\n * @example\n *   // `child` should be accessible via `type.get(path[0]).get(path[1])..`\n *   const path = type.getPathTo(child)\n *   // assuming `type instanceof YArray`\n *   console.log(path) // might look like => [2, 'key1']\n *   child === type.get(path[0]).get(path[1])\n *\n * @param {AbstractType<any>} parent\n * @param {AbstractType<any>} child target\n * @return {Array<string|number>} Path to the target\n *\n * @private\n * @function\n */\nconst getPathTo = (parent, child) => {\n  const path = []\n  while (child._item !== null && child !== parent) {\n    if (child._item.parentSub !== null) {\n      // parent is map-ish\n      path.unshift(child._item.parentSub)\n    } else {\n      // parent is array-ish\n      let i = 0\n      let c = /** @type {AbstractType<any>} */ (child._item.parent)._start\n      while (c !== child._item && c !== null) {\n        if (!c.deleted) {\n          i++\n        }\n        c = c.right\n      }\n      path.unshift(i)\n    }\n    child = /** @type {AbstractType<any>} */ (child._item.parent)\n  }\n  return path\n}\n","\nimport {\n  removeEventHandlerListener,\n  callEventHandlerListeners,\n  addEventHandlerListener,\n  createEventHandler,\n  getState,\n  isVisible,\n  ContentType,\n  createID,\n  ContentAny,\n  ContentBinary,\n  getItemCleanStart,\n  ContentDoc, YText, YArray, UpdateEncoderV1, UpdateEncoderV2, Doc, Snapshot, Transaction, EventHandler, YEvent, Item, // eslint-disable-line\n} from '../internals.js'\n\nimport * as map from 'lib0/map'\nimport * as iterator from 'lib0/iterator'\nimport * as error from 'lib0/error'\nimport * as math from 'lib0/math'\n\nconst maxSearchMarker = 80\n\n/**\n * A unique timestamp that identifies each marker.\n *\n * Time is relative,.. this is more like an ever-increasing clock.\n *\n * @type {number}\n */\nlet globalSearchMarkerTimestamp = 0\n\nexport class ArraySearchMarker {\n  /**\n   * @param {Item} p\n   * @param {number} index\n   */\n  constructor (p, index) {\n    p.marker = true\n    this.p = p\n    this.index = index\n    this.timestamp = globalSearchMarkerTimestamp++\n  }\n}\n\n/**\n * @param {ArraySearchMarker} marker\n */\nconst refreshMarkerTimestamp = marker => { marker.timestamp = globalSearchMarkerTimestamp++ }\n\n/**\n * This is rather complex so this function is the only thing that should overwrite a marker\n *\n * @param {ArraySearchMarker} marker\n * @param {Item} p\n * @param {number} index\n */\nconst overwriteMarker = (marker, p, index) => {\n  marker.p.marker = false\n  marker.p = p\n  p.marker = true\n  marker.index = index\n  marker.timestamp = globalSearchMarkerTimestamp++\n}\n\n/**\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {Item} p\n * @param {number} index\n */\nconst markPosition = (searchMarker, p, index) => {\n  if (searchMarker.length >= maxSearchMarker) {\n    // override oldest marker (we don't want to create more objects)\n    const marker = searchMarker.reduce((a, b) => a.timestamp < b.timestamp ? a : b)\n    overwriteMarker(marker, p, index)\n    return marker\n  } else {\n    // create new marker\n    const pm = new ArraySearchMarker(p, index)\n    searchMarker.push(pm)\n    return pm\n  }\n}\n\n/**\n * Search marker help us to find positions in the associative array faster.\n *\n * They speed up the process of finding a position without much bookkeeping.\n *\n * A maximum of `maxSearchMarker` objects are created.\n *\n * This function always returns a refreshed marker (updated timestamp)\n *\n * @param {AbstractType<any>} yarray\n * @param {number} index\n */\nexport const findMarker = (yarray, index) => {\n  if (yarray._start === null || index === 0 || yarray._searchMarker === null) {\n    return null\n  }\n  const marker = yarray._searchMarker.length === 0 ? null : yarray._searchMarker.reduce((a, b) => math.abs(index - a.index) < math.abs(index - b.index) ? a : b)\n  let p = yarray._start\n  let pindex = 0\n  if (marker !== null) {\n    p = marker.p\n    pindex = marker.index\n    refreshMarkerTimestamp(marker) // we used it, we might need to use it again\n  }\n  // iterate to right if possible\n  while (p.right !== null && pindex < index) {\n    if (!p.deleted && p.countable) {\n      if (index < pindex + p.length) {\n        break\n      }\n      pindex += p.length\n    }\n    p = p.right\n  }\n  // iterate to left if necessary (might be that pindex > index)\n  while (p.left !== null && pindex > index) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n  // we want to make sure that p can't be merged with left, because that would screw up everything\n  // in that cas just return what we have (it is most likely the best marker anyway)\n  // iterate to left until p can't be merged with left\n  while (p.left !== null && p.left.id.client === p.id.client && p.left.id.clock + p.left.length === p.id.clock) {\n    p = p.left\n    if (!p.deleted && p.countable) {\n      pindex -= p.length\n    }\n  }\n\n  // @todo remove!\n  // assure position\n  // {\n  //   let start = yarray._start\n  //   let pos = 0\n  //   while (start !== p) {\n  //     if (!start.deleted && start.countable) {\n  //       pos += start.length\n  //     }\n  //     start = /** @type {Item} */ (start.right)\n  //   }\n  //   if (pos !== pindex) {\n  //     debugger\n  //     throw new Error('Gotcha position fail!')\n  //   }\n  // }\n  // if (marker) {\n  //   if (window.lengthes == null) {\n  //     window.lengthes = []\n  //     window.getLengthes = () => window.lengthes.sort((a, b) => a - b)\n  //   }\n  //   window.lengthes.push(marker.index - pindex)\n  //   console.log('distance', marker.index - pindex, 'len', p && p.parent.length)\n  // }\n  if (marker !== null && math.abs(marker.index - pindex) < /** @type {YText|YArray<any>} */ (p.parent).length / maxSearchMarker) {\n    // adjust existing marker\n    overwriteMarker(marker, p, pindex)\n    return marker\n  } else {\n    // create new marker\n    return markPosition(yarray._searchMarker, p, pindex)\n  }\n}\n\n/**\n * Update markers when a change happened.\n *\n * This should be called before doing a deletion!\n *\n * @param {Array<ArraySearchMarker>} searchMarker\n * @param {number} index\n * @param {number} len If insertion, len is positive. If deletion, len is negative.\n */\nexport const updateMarkerChanges = (searchMarker, index, len) => {\n  for (let i = searchMarker.length - 1; i >= 0; i--) {\n    const m = searchMarker[i]\n    if (len > 0) {\n      /**\n       * @type {Item|null}\n       */\n      let p = m.p\n      p.marker = false\n      // Ideally we just want to do a simple position comparison, but this will only work if\n      // search markers don't point to deleted items for formats.\n      // Iterate marker to prev undeleted countable position so we know what to do when updating a position\n      while (p && (p.deleted || !p.countable)) {\n        p = p.left\n        if (p && !p.deleted && p.countable) {\n          // adjust position. the loop should break now\n          m.index -= p.length\n        }\n      }\n      if (p === null || p.marker === true) {\n        // remove search marker if updated position is null or if position is already marked\n        searchMarker.splice(i, 1)\n        continue\n      }\n      m.p = p\n      p.marker = true\n    }\n    if (index < m.index || (len > 0 && index === m.index)) { // a simple index <= m.index check would actually suffice\n      m.index = math.max(index, m.index + len)\n    }\n  }\n}\n\n/**\n * Accumulate all (list) children of a type and return them as an Array.\n *\n * @param {AbstractType<any>} t\n * @return {Array<Item>}\n */\nexport const getTypeChildren = t => {\n  let s = t._start\n  const arr = []\n  while (s) {\n    arr.push(s)\n    s = s.right\n  }\n  return arr\n}\n\n/**\n * Call event listeners with an event. This will also add an event to all\n * parents (for `.observeDeep` handlers).\n *\n * @template EventType\n * @param {AbstractType<EventType>} type\n * @param {Transaction} transaction\n * @param {EventType} event\n */\nexport const callTypeObservers = (type, transaction, event) => {\n  const changedType = type\n  const changedParentTypes = transaction.changedParentTypes\n  while (true) {\n    // @ts-ignore\n    map.setIfUndefined(changedParentTypes, type, () => []).push(event)\n    if (type._item === null) {\n      break\n    }\n    type = /** @type {AbstractType<any>} */ (type._item.parent)\n  }\n  callEventHandlerListeners(changedType._eH, event, transaction)\n}\n\n/**\n * @template EventType\n * Abstract Yjs Type class\n */\nexport class AbstractType {\n  constructor () {\n    /**\n     * @type {Item|null}\n     */\n    this._item = null\n    /**\n     * @type {Map<string,Item>}\n     */\n    this._map = new Map()\n    /**\n     * @type {Item|null}\n     */\n    this._start = null\n    /**\n     * @type {Doc|null}\n     */\n    this.doc = null\n    this._length = 0\n    /**\n     * Event handlers\n     * @type {EventHandler<EventType,Transaction>}\n     */\n    this._eH = createEventHandler()\n    /**\n     * Deep event handlers\n     * @type {EventHandler<Array<YEvent>,Transaction>}\n     */\n    this._dEH = createEventHandler()\n    /**\n     * @type {null | Array<ArraySearchMarker>}\n     */\n    this._searchMarker = null\n  }\n\n  /**\n   * @return {AbstractType<any>|null}\n   */\n  get parent () {\n    return this._item ? /** @type {AbstractType<any>} */ (this._item.parent) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item|null} item\n   */\n  _integrate (y, item) {\n    this.doc = y\n    this._item = item\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  _copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractType<EventType>}\n   */\n  clone () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) { }\n\n  /**\n   * The first non-deleted item\n   */\n  get _first () {\n    let n = this._start\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Creates YEvent and calls all type observers.\n   * Must be implemented by each type.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    if (!transaction.local && this._searchMarker) {\n      this._searchMarker.length = 0\n    }\n  }\n\n  /**\n   * Observe all events that are created on this type.\n   *\n   * @param {function(EventType, Transaction):void} f Observer function\n   */\n  observe (f) {\n    addEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Observe all events that are created by this type and its children.\n   *\n   * @param {function(Array<YEvent>,Transaction):void} f Observer function\n   */\n  observeDeep (f) {\n    addEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(EventType,Transaction):void} f Observer function\n   */\n  unobserve (f) {\n    removeEventHandlerListener(this._eH, f)\n  }\n\n  /**\n   * Unregister an observer function.\n   *\n   * @param {function(Array<YEvent>,Transaction):void} f Observer function\n   */\n  unobserveDeep (f) {\n    removeEventHandlerListener(this._dEH, f)\n  }\n\n  /**\n   * @abstract\n   * @return {any}\n   */\n  toJSON () {}\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} start\n * @param {number} end\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListSlice = (type, start, end) => {\n  if (start < 0) {\n    start = type._length + start\n  }\n  if (end < 0) {\n    end = type._length + end\n  }\n  let len = end - start\n  const cs = []\n  let n = type._start\n  while (n !== null && len > 0) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      if (c.length <= start) {\n        start -= c.length\n      } else {\n        for (let i = start; i < c.length && len > 0; i++) {\n          cs.push(c[i])\n          len--\n        }\n        start = 0\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArray = type => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {Snapshot} snapshot\n * @return {Array<any>}\n *\n * @private\n * @function\n */\nexport const typeListToArraySnapshot = (type, snapshot) => {\n  const cs = []\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        cs.push(c[i])\n      }\n    }\n    n = n.right\n  }\n  return cs\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,any):void} f A function to execute on every element of this YArray.\n *\n * @private\n * @function\n */\nexport const typeListForEach = (type, f) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && !n.deleted) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @template C,R\n * @param {AbstractType<any>} type\n * @param {function(C,number,AbstractType<any>):R} f\n * @return {Array<R>}\n *\n * @private\n * @function\n */\nexport const typeListMap = (type, f) => {\n  /**\n   * @type {Array<any>}\n   */\n  const result = []\n  typeListForEach(type, (c, i) => {\n    result.push(f(c, i, type))\n  })\n  return result\n}\n\n/**\n * @param {AbstractType<any>} type\n * @return {IterableIterator<any>}\n *\n * @private\n * @function\n */\nexport const typeListCreateIterator = type => {\n  let n = type._start\n  /**\n   * @type {Array<any>|null}\n   */\n  let currentContent = null\n  let currentContentIndex = 0\n  return {\n    [Symbol.iterator] () {\n      return this\n    },\n    next: () => {\n      // find some content\n      if (currentContent === null) {\n        while (n !== null && n.deleted) {\n          n = n.right\n        }\n        // check if we reached the end, no need to check currentContent, because it does not exist\n        if (n === null) {\n          return {\n            done: true,\n            value: undefined\n          }\n        }\n        // we found n, so we can set currentContent\n        currentContent = n.content.getContent()\n        currentContentIndex = 0\n        n = n.right // we used the content of n, now iterate to next\n      }\n      const value = currentContent[currentContentIndex++]\n      // check if we need to empty currentContent\n      if (currentContent.length <= currentContentIndex) {\n        currentContent = null\n      }\n      return {\n        done: false,\n        value\n      }\n    }\n  }\n}\n\n/**\n * Executes a provided function on once on overy element of this YArray.\n * Operates on a snapshotted state of the document.\n *\n * @param {AbstractType<any>} type\n * @param {function(any,number,AbstractType<any>):void} f A function to execute on every element of this YArray.\n * @param {Snapshot} snapshot\n *\n * @private\n * @function\n */\nexport const typeListForEachSnapshot = (type, f, snapshot) => {\n  let index = 0\n  let n = type._start\n  while (n !== null) {\n    if (n.countable && isVisible(n, snapshot)) {\n      const c = n.content.getContent()\n      for (let i = 0; i < c.length; i++) {\n        f(c[i], index++, type)\n      }\n    }\n    n = n.right\n  }\n}\n\n/**\n * @param {AbstractType<any>} type\n * @param {number} index\n * @return {any}\n *\n * @private\n * @function\n */\nexport const typeListGet = (type, index) => {\n  const marker = findMarker(type, index)\n  let n = type._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        return n.content.getContent()[index]\n      }\n      index -= n.length\n    }\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {Item?} referenceItem\n * @param {Array<Object<string,any>|Array<any>|boolean|number|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenericsAfter = (transaction, parent, referenceItem, content) => {\n  let left = referenceItem\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const store = doc.store\n  const right = referenceItem === null ? parent._start : referenceItem.right\n  /**\n   * @type {Array<Object|Array<any>|number>}\n   */\n  let jsonContent = []\n  const packJsonContent = () => {\n    if (jsonContent.length > 0) {\n      left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentAny(jsonContent))\n      left.integrate(transaction, 0)\n      jsonContent = []\n    }\n  }\n  content.forEach(c => {\n    switch (c.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        jsonContent.push(c)\n        break\n      default:\n        packJsonContent()\n        switch (c.constructor) {\n          case Uint8Array:\n          case ArrayBuffer:\n            left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentBinary(new Uint8Array(/** @type {Uint8Array} */ (c))))\n            left.integrate(transaction, 0)\n            break\n          case Doc:\n            left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentDoc(/** @type {Doc} */ (c)))\n            left.integrate(transaction, 0)\n            break\n          default:\n            if (c instanceof AbstractType) {\n              left = new Item(createID(ownClientId, getState(store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentType(c))\n              left.integrate(transaction, 0)\n            } else {\n              throw new Error('Unexpected content type in insert operation')\n            }\n        }\n    }\n  })\n  packJsonContent()\n}\n\nconst lengthExceeded = error.create('Length exceeded!')\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {Array<Object<string,any>|Array<any>|number|string|Uint8Array>} content\n *\n * @private\n * @function\n */\nexport const typeListInsertGenerics = (transaction, parent, index, content) => {\n  if (index > parent._length) {\n    throw lengthExceeded\n  }\n  if (index === 0) {\n    if (parent._searchMarker) {\n      updateMarkerChanges(parent._searchMarker, index, content.length)\n    }\n    return typeListInsertGenericsAfter(transaction, parent, null, content)\n  }\n  const startIndex = index\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n    // we need to iterate one to the left so that the algorithm works\n    if (index === 0) {\n      // @todo refactor this as it actually doesn't consider formats\n      n = n.prev // important! get the left undeleted item so that we can actually decrease index\n      index += (n && n.countable && !n.deleted) ? n.length : 0\n    }\n  }\n  for (; n !== null; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index <= n.length) {\n        if (index < n.length) {\n          // insert in-between\n          getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n        }\n        break\n      }\n      index -= n.length\n    }\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, content.length)\n  }\n  return typeListInsertGenericsAfter(transaction, parent, n, content)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @param {number} length\n *\n * @private\n * @function\n */\nexport const typeListDelete = (transaction, parent, index, length) => {\n  if (length === 0) { return }\n  const startIndex = index\n  const startLength = length\n  const marker = findMarker(parent, index)\n  let n = parent._start\n  if (marker !== null) {\n    n = marker.p\n    index -= marker.index\n  }\n  // compute the first item to be deleted\n  for (; n !== null && index > 0; n = n.right) {\n    if (!n.deleted && n.countable) {\n      if (index < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + index))\n      }\n      index -= n.length\n    }\n  }\n  // delete all items until done\n  while (length > 0 && n !== null) {\n    if (!n.deleted) {\n      if (length < n.length) {\n        getItemCleanStart(transaction, createID(n.id.client, n.id.clock + length))\n      }\n      n.delete(transaction)\n      length -= n.length\n    }\n    n = n.right\n  }\n  if (length > 0) {\n    throw lengthExceeded\n  }\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, startIndex, -startLength + length /* in case we remove the above exception */)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n *\n * @private\n * @function\n */\nexport const typeMapDelete = (transaction, parent, key) => {\n  const c = parent._map.get(key)\n  if (c !== undefined) {\n    c.delete(transaction)\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Object|number|Array<any>|string|Uint8Array|AbstractType<any>} value\n *\n * @private\n * @function\n */\nexport const typeMapSet = (transaction, parent, key, value) => {\n  const left = parent._map.get(key) || null\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  let content\n  if (value == null) {\n    content = new ContentAny([value])\n  } else {\n    switch (value.constructor) {\n      case Number:\n      case Object:\n      case Boolean:\n      case Array:\n      case String:\n        content = new ContentAny([value])\n        break\n      case Uint8Array:\n        content = new ContentBinary(/** @type {Uint8Array} */ (value))\n        break\n      case Doc:\n        content = new ContentDoc(/** @type {Doc} */ (value))\n        break\n      default:\n        if (value instanceof AbstractType) {\n          content = new ContentType(value)\n        } else {\n          throw new Error('Unexpected content type')\n        }\n    }\n  }\n  new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, null, null, parent, key, content).integrate(transaction, 0)\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGet = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted ? val.content.getContent()[val.length - 1] : undefined\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @return {Object<string,Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined>}\n *\n * @private\n * @function\n */\nexport const typeMapGetAll = (parent) => {\n  /**\n   * @type {Object<string,any>}\n   */\n  const res = {}\n  parent._map.forEach((value, key) => {\n    if (!value.deleted) {\n      res[key] = value.content.getContent()[value.length - 1]\n    }\n  })\n  return res\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @return {boolean}\n *\n * @private\n * @function\n */\nexport const typeMapHas = (parent, key) => {\n  const val = parent._map.get(key)\n  return val !== undefined && !val.deleted\n}\n\n/**\n * @param {AbstractType<any>} parent\n * @param {string} key\n * @param {Snapshot} snapshot\n * @return {Object<string,any>|number|Array<any>|string|Uint8Array|AbstractType<any>|undefined}\n *\n * @private\n * @function\n */\nexport const typeMapGetSnapshot = (parent, key, snapshot) => {\n  let v = parent._map.get(key) || null\n  while (v !== null && (!snapshot.sv.has(v.id.client) || v.id.clock >= (snapshot.sv.get(v.id.client) || 0))) {\n    v = v.left\n  }\n  return v !== null && isVisible(v, snapshot) ? v.content.getContent()[v.length - 1] : undefined\n}\n\n/**\n * @param {Map<string,Item>} map\n * @return {IterableIterator<Array<any>>}\n *\n * @private\n * @function\n */\nexport const createMapIterator = map => iterator.iteratorFilter(map.entries(), /** @param {any} entry */ entry => !entry[1].deleted)\n","/**\n * @module YArray\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeListGet,\n  typeListToArray,\n  typeListForEach,\n  typeListCreateIterator,\n  typeListInsertGenerics,\n  typeListDelete,\n  typeListMap,\n  YArrayRefID,\n  callTypeObservers,\n  transact,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\nimport { typeListSlice } from './AbstractType.js'\n\n/**\n * Event that describes the changes on a YArray\n * @template T\n */\nexport class YArrayEvent extends YEvent {\n  /**\n   * @param {YArray<T>} yarray The changed type\n   * @param {Transaction} transaction The transaction object\n   */\n  constructor (yarray, transaction) {\n    super(yarray, transaction)\n    this._transaction = transaction\n  }\n}\n\n/**\n * A shared Array implementation.\n * @template T\n * @extends AbstractType<YArrayEvent<T>>\n * @implements {Iterable<T>}\n */\nexport class YArray extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>?}\n     * @private\n     */\n    this._prelimContent = []\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = []\n  }\n\n  /**\n   * Construct a new YArray containing the specified items.\n   * @template T\n   * @param {Array<T>} items\n   * @return {YArray<T>}\n   */\n  static from (items) {\n    const a = new YArray()\n    a.push(items)\n    return a\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YArray()\n  }\n\n  /**\n   * @return {YArray<T>}\n   */\n  clone () {\n    const arr = new YArray()\n    arr.insert(0, this.toArray().map(el =>\n      el instanceof AbstractType ? el.clone() : el\n    ))\n    return arr\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Creates YArrayEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    callTypeObservers(this, transaction, new YArrayEvent(this, transaction))\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * Important: This function expects an array of content. Not just a content\n   * object. The reason for this \"weirdness\" is that inserting several elements\n   * is very efficient when it is done as a single operation.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  yarray.insert(0, ['a'])\n   *  // Insert numbers 1, 2 at position 1\n   *  yarray.insert(1, [1, 2])\n   *\n   * @param {number} index The index to insert content at.\n   * @param {Array<T>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content)\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content)\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<T>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} length The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      /** @type {Array<any>} */ (this._prelimContent).splice(index, length)\n    }\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {T}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<T>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<T>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Array<any>}\n   */\n  toJSON () {\n    return this.map(c => c instanceof AbstractType ? c.toJSON() : c)\n  }\n\n  /**\n   * Returns an Array with the result of calling a provided function on every\n   * element of this YArray.\n   *\n   * @template T,M\n   * @param {function(T,number,YArray<T>):M} f Function that produces an element of the new Array\n   * @return {Array<M>} A new array with each element being the result of the\n   *                 callback function\n   */\n  map (f) {\n    return typeListMap(this, /** @type {any} */ (f))\n  }\n\n  /**\n   * Executes a provided function on once on overy element of this YArray.\n   *\n   * @param {function(T,number,YArray<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    typeListForEach(this, f)\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return typeListCreateIterator(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YArrayRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n *\n * @private\n * @function\n */\nexport const readYArray = decoder => new YArray()\n","\n/**\n * @module YMap\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapHas,\n  createMapIterator,\n  YMapRefID,\n  callTypeObservers,\n  transact,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as iterator from 'lib0/iterator'\n\n/**\n * @template T\n * Event that describes the changes on a YMap.\n */\nexport class YMapEvent extends YEvent {\n  /**\n   * @param {YMap<T>} ymap The YArray that changed.\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed.\n   */\n  constructor (ymap, transaction, subs) {\n    super(ymap, transaction)\n    this.keysChanged = subs\n  }\n}\n\n/**\n * @template T number|string|Object|Array|Uint8Array\n * A shared Map implementation.\n *\n * @extends AbstractType<YMapEvent<T>>\n * @implements {Iterable<T>}\n */\nexport class YMap extends AbstractType {\n  /**\n   *\n   * @param {Iterable<readonly [string, any]>=} entries - an optional iterable to initialize the YMap\n   */\n  constructor (entries) {\n    super()\n    /**\n     * @type {Map<string,any>?}\n     * @private\n     */\n    this._prelimContent = null\n\n    if (entries === undefined) {\n      this._prelimContent = new Map()\n    } else {\n      this._prelimContent = new Map(entries)\n    }\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;/** @type {Map<string, any>} */ (this._prelimContent).forEach((value, key) => {\n      this.set(key, value)\n    })\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YMap()\n  }\n\n  /**\n   * @return {YMap<T>}\n   */\n  clone () {\n    const map = new YMap()\n    this.forEach((value, key) => {\n      map.set(key, value instanceof AbstractType ? value.clone() : value)\n    })\n    return map\n  }\n\n  /**\n   * Creates YMapEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YMapEvent(this, transaction, parentSubs))\n  }\n\n  /**\n   * Transforms this Shared Type to a JSON object.\n   *\n   * @return {Object<string,T>}\n   */\n  toJSON () {\n    /**\n     * @type {Object<string,T>}\n     */\n    const map = {}\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        const v = item.content.getContent()[item.length - 1]\n        map[key] = v instanceof AbstractType ? v.toJSON() : v\n      }\n    })\n    return map\n  }\n\n  /**\n   * Returns the size of the YMap (count of key/value pairs)\n   *\n   * @return {number}\n   */\n  get size () {\n    return [...createMapIterator(this._map)].length\n  }\n\n  /**\n   * Returns the keys for each element in the YMap Type.\n   *\n   * @return {IterableIterator<string>}\n   */\n  keys () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[0])\n  }\n\n  /**\n   * Returns the values for each element in the YMap Type.\n   *\n   * @return {IterableIterator<any>}\n   */\n  values () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => v[1].content.getContent()[v[1].length - 1])\n  }\n\n  /**\n   * Returns an Iterator of [key, value] pairs\n   *\n   * @return {IterableIterator<any>}\n   */\n  entries () {\n    return iterator.iteratorMap(createMapIterator(this._map), /** @param {any} v */ v => [v[0], v[1].content.getContent()[v[1].length - 1]])\n  }\n\n  /**\n   * Executes a provided function on once on every key-value pair.\n   *\n   * @param {function(T,string,YMap<T>):void} f A function to execute on every element of this YArray.\n   */\n  forEach (f) {\n    /**\n     * @type {Object<string,T>}\n     */\n    const map = {}\n    this._map.forEach((item, key) => {\n      if (!item.deleted) {\n        f(item.content.getContent()[item.length - 1], key, this)\n      }\n    })\n    return map\n  }\n\n  /**\n   * @return {IterableIterator<T>}\n   */\n  [Symbol.iterator] () {\n    return this.entries()\n  }\n\n  /**\n   * Remove a specified element from this YMap.\n   *\n   * @param {string} key The key of the element to remove.\n   */\n  delete (key) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, key)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).delete(key)\n    }\n  }\n\n  /**\n   * Adds or updates an element with a specified key and value.\n   *\n   * @param {string} key The key of the element to add to this YMap\n   * @param {T} value The value of the element to add\n   */\n  set (key, value) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, key, value)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).set(key, value)\n    }\n    return value\n  }\n\n  /**\n   * Returns a specified element from this YMap.\n   *\n   * @param {string} key\n   * @return {T|undefined}\n   */\n  get (key) {\n    return /** @type {any} */ (typeMapGet(this, key))\n  }\n\n  /**\n   * Returns a boolean indicating whether the specified key exists or not.\n   *\n   * @param {string} key The key to test.\n   * @return {boolean}\n   */\n  has (key) {\n    return typeMapHas(this, key)\n  }\n\n  /**\n   * Removes all elements from this YMap.\n   */\n  clear () {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        this.forEach(function (value, key, map) {\n          typeMapDelete(transaction, map, key)\n        })\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimContent).clear()\n    }\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YMapRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n *\n * @private\n * @function\n */\nexport const readYMap = decoder => new YMap()\n","\n/**\n * @module YText\n */\n\nimport {\n  YEvent,\n  AbstractType,\n  getItemCleanStart,\n  getState,\n  isVisible,\n  createID,\n  YTextRefID,\n  callTypeObservers,\n  transact,\n  ContentEmbed,\n  GC,\n  ContentFormat,\n  ContentString,\n  splitSnapshotAffectedStructs,\n  iterateDeletedStructs,\n  iterateStructs,\n  findMarker,\n  typeMapDelete,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  updateMarkerChanges,\n  ArraySearchMarker, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ID, Doc, Item, Snapshot, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as object from 'lib0/object'\nimport * as map from 'lib0/map'\nimport * as error from 'lib0/error'\n\n/**\n * @param {any} a\n * @param {any} b\n * @return {boolean}\n */\nconst equalAttrs = (a, b) => a === b || (typeof a === 'object' && typeof b === 'object' && a && b && object.equalFlat(a, b))\n\nexport class ItemTextListPosition {\n  /**\n   * @param {Item|null} left\n   * @param {Item|null} right\n   * @param {number} index\n   * @param {Map<string,any>} currentAttributes\n   */\n  constructor (left, right, index, currentAttributes) {\n    this.left = left\n    this.right = right\n    this.index = index\n    this.currentAttributes = currentAttributes\n  }\n\n  /**\n   * Only call this if you know that this.right is defined\n   */\n  forward () {\n    if (this.right === null) {\n      error.unexpectedCase()\n    }\n    switch (this.right.content.constructor) {\n      case ContentEmbed:\n      case ContentString:\n        if (!this.right.deleted) {\n          this.index += this.right.length\n        }\n        break\n      case ContentFormat:\n        if (!this.right.deleted) {\n          updateCurrentAttributes(this.currentAttributes, /** @type {ContentFormat} */ (this.right.content))\n        }\n        break\n    }\n    this.left = this.right\n    this.right = this.right.right\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} pos\n * @param {number} count steps to move forward\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findNextPosition = (transaction, pos, count) => {\n  while (pos.right !== null && count > 0) {\n    switch (pos.right.content.constructor) {\n      case ContentEmbed:\n      case ContentString:\n        if (!pos.right.deleted) {\n          if (count < pos.right.length) {\n            // split right\n            getItemCleanStart(transaction, createID(pos.right.id.client, pos.right.id.clock + count))\n          }\n          pos.index += pos.right.length\n          count -= pos.right.length\n        }\n        break\n      case ContentFormat:\n        if (!pos.right.deleted) {\n          updateCurrentAttributes(pos.currentAttributes, /** @type {ContentFormat} */ (pos.right.content))\n        }\n        break\n    }\n    pos.left = pos.right\n    pos.right = pos.right.right\n    // pos.forward() - we don't forward because that would halve the performance because we already do the checks above\n  }\n  return pos\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {number} index\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst findPosition = (transaction, parent, index) => {\n  const currentAttributes = new Map()\n  const marker = findMarker(parent, index)\n  if (marker) {\n    const pos = new ItemTextListPosition(marker.p.left, marker.p, marker.index, currentAttributes)\n    return findNextPosition(transaction, pos, index - marker.index)\n  } else {\n    const pos = new ItemTextListPosition(null, parent._start, 0, currentAttributes)\n    return findNextPosition(transaction, pos, index)\n  }\n}\n\n/**\n * Negate applied formats\n *\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Map<string,any>} negatedAttributes\n *\n * @private\n * @function\n */\nconst insertNegatedAttributes = (transaction, parent, currPos, negatedAttributes) => {\n  // check if we really need to remove attributes\n  while (\n    currPos.right !== null && (\n      currPos.right.deleted === true || (\n        currPos.right.content.constructor === ContentFormat &&\n        equalAttrs(negatedAttributes.get(/** @type {ContentFormat} */ (currPos.right.content).key), /** @type {ContentFormat} */ (currPos.right.content).value)\n      )\n    )\n  ) {\n    if (!currPos.right.deleted) {\n      negatedAttributes.delete(/** @type {ContentFormat} */ (currPos.right.content).key)\n    }\n    currPos.forward()\n  }\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  negatedAttributes.forEach((val, key) => {\n    const left = currPos.left\n    const right = currPos.right\n    const nextFormat = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n    nextFormat.integrate(transaction, 0)\n    currPos.right = nextFormat\n    currPos.forward()\n  })\n}\n\n/**\n * @param {Map<string,any>} currentAttributes\n * @param {ContentFormat} format\n *\n * @private\n * @function\n */\nconst updateCurrentAttributes = (currentAttributes, format) => {\n  const { key, value } = format\n  if (value === null) {\n    currentAttributes.delete(key)\n  } else {\n    currentAttributes.set(key, value)\n  }\n}\n\n/**\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst minimizeAttributeChanges = (currPos, attributes) => {\n  // go right while attributes[right.key] === right.value (or right is deleted)\n  while (true) {\n    if (currPos.right === null) {\n      break\n    } else if (currPos.right.deleted || (currPos.right.content.constructor === ContentFormat && equalAttrs(attributes[(/** @type {ContentFormat} */ (currPos.right.content)).key] || null, /** @type {ContentFormat} */ (currPos.right.content).value))) {\n      //\n    } else {\n      break\n    }\n    currPos.forward()\n  }\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {Object<string,any>} attributes\n * @return {Map<string,any>}\n *\n * @private\n * @function\n **/\nconst insertAttributes = (transaction, parent, currPos, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  const negatedAttributes = new Map()\n  // insert format-start items\n  for (const key in attributes) {\n    const val = attributes[key]\n    const currentVal = currPos.currentAttributes.get(key) || null\n    if (!equalAttrs(currentVal, val)) {\n      // save negated attribute (set null if currentVal undefined)\n      negatedAttributes.set(key, currentVal)\n      const { left, right } = currPos\n      currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, new ContentFormat(key, val))\n      currPos.right.integrate(transaction, 0)\n      currPos.forward()\n    }\n  }\n  return negatedAttributes\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {string|object} text\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n **/\nconst insertText = (transaction, parent, currPos, text, attributes) => {\n  currPos.currentAttributes.forEach((val, key) => {\n    if (attributes[key] === undefined) {\n      attributes[key] = null\n    }\n  })\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // insert content\n  const content = text.constructor === String ? new ContentString(/** @type {string} */ (text)) : new ContentEmbed(text)\n  let { left, right, index } = currPos\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, content.getLength())\n  }\n  right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), left, left && left.lastId, right, right && right.id, parent, null, content)\n  right.integrate(transaction, 0)\n  currPos.right = right\n  currPos.index = index\n  currPos.forward()\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * @param {Transaction} transaction\n * @param {AbstractType<any>} parent\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @param {Object<string,any>} attributes\n *\n * @private\n * @function\n */\nconst formatText = (transaction, parent, currPos, length, attributes) => {\n  const doc = transaction.doc\n  const ownClientId = doc.clientID\n  minimizeAttributeChanges(currPos, attributes)\n  const negatedAttributes = insertAttributes(transaction, parent, currPos, attributes)\n  // iterate until first non-format or null is found\n  // delete all formats with attributes[format.key] != null\n  while (length > 0 && currPos.right !== null) {\n    if (!currPos.right.deleted) {\n      switch (currPos.right.content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (currPos.right.content)\n          const attr = attributes[key]\n          if (attr !== undefined) {\n            if (equalAttrs(attr, value)) {\n              negatedAttributes.delete(key)\n            } else {\n              negatedAttributes.set(key, value)\n            }\n            currPos.right.delete(transaction)\n          }\n          break\n        }\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          break\n      }\n    }\n    currPos.forward()\n  }\n  // Quill just assumes that the editor starts with a newline and that it always\n  // ends with a newline. We only insert that newline when a new newline is\n  // inserted - i.e when length is bigger than type.length\n  if (length > 0) {\n    let newlines = ''\n    for (; length > 0; length--) {\n      newlines += '\\n'\n    }\n    currPos.right = new Item(createID(ownClientId, getState(doc.store, ownClientId)), currPos.left, currPos.left && currPos.left.lastId, currPos.right, currPos.right && currPos.right.id, parent, null, new ContentString(newlines))\n    currPos.right.integrate(transaction, 0)\n    currPos.forward()\n  }\n  insertNegatedAttributes(transaction, parent, currPos, negatedAttributes)\n}\n\n/**\n * Call this function after string content has been deleted in order to\n * clean up formatting Items.\n *\n * @param {Transaction} transaction\n * @param {Item} start\n * @param {Item|null} end exclusive end, automatically iterates to the next Content Item\n * @param {Map<string,any>} startAttributes\n * @param {Map<string,any>} endAttributes This attribute is modified!\n * @return {number} The amount of formatting Items deleted.\n *\n * @function\n */\nconst cleanupFormattingGap = (transaction, start, end, startAttributes, endAttributes) => {\n  while (end && end.content.constructor !== ContentString && end.content.constructor !== ContentEmbed) {\n    if (!end.deleted && end.content.constructor === ContentFormat) {\n      updateCurrentAttributes(endAttributes, /** @type {ContentFormat} */ (end.content))\n    }\n    end = end.right\n  }\n  let cleanups = 0\n  while (start !== end) {\n    if (!start.deleted) {\n      const content = start.content\n      switch (content.constructor) {\n        case ContentFormat: {\n          const { key, value } = /** @type {ContentFormat} */ (content)\n          if ((endAttributes.get(key) || null) !== value || (startAttributes.get(key) || null) === value) {\n            // Either this format is overwritten or it is not necessary because the attribute already existed.\n            start.delete(transaction)\n            cleanups++\n          }\n          break\n        }\n      }\n    }\n    start = /** @type {Item} */ (start.right)\n  }\n  return cleanups\n}\n\n/**\n * @param {Transaction} transaction\n * @param {Item | null} item\n */\nconst cleanupContextlessFormattingGap = (transaction, item) => {\n  // iterate until item.right is null or content\n  while (item && item.right && (item.right.deleted || (item.right.content.constructor !== ContentString && item.right.content.constructor !== ContentEmbed))) {\n    item = item.right\n  }\n  const attrs = new Set()\n  // iterate back until a content item is found\n  while (item && (item.deleted || (item.content.constructor !== ContentString && item.content.constructor !== ContentEmbed))) {\n    if (!item.deleted && item.content.constructor === ContentFormat) {\n      const key = /** @type {ContentFormat} */ (item.content).key\n      if (attrs.has(key)) {\n        item.delete(transaction)\n      } else {\n        attrs.add(key)\n      }\n    }\n    item = item.left\n  }\n}\n\n/**\n * This function is experimental and subject to change / be removed.\n *\n * Ideally, we don't need this function at all. Formatting attributes should be cleaned up\n * automatically after each change. This function iterates twice over the complete YText type\n * and removes unnecessary formatting attributes. This is also helpful for testing.\n *\n * This function won't be exported anymore as soon as there is confidence that the YText type works as intended.\n *\n * @param {YText} type\n * @return {number} How many formatting attributes have been cleaned up.\n */\nexport const cleanupYTextFormatting = type => {\n  let res = 0\n  transact(/** @type {Doc} */ (type.doc), transaction => {\n    let start = /** @type {Item} */ (type._start)\n    let end = type._start\n    let startAttributes = map.create()\n    const currentAttributes = map.copy(startAttributes)\n    while (end) {\n      if (end.deleted === false) {\n        switch (end.content.constructor) {\n          case ContentFormat:\n            updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (end.content))\n            break\n          case ContentEmbed:\n          case ContentString:\n            res += cleanupFormattingGap(transaction, start, end, startAttributes, currentAttributes)\n            startAttributes = map.copy(currentAttributes)\n            start = end\n            break\n        }\n      }\n      end = end.right\n    }\n  })\n  return res\n}\n\n/**\n * @param {Transaction} transaction\n * @param {ItemTextListPosition} currPos\n * @param {number} length\n * @return {ItemTextListPosition}\n *\n * @private\n * @function\n */\nconst deleteText = (transaction, currPos, length) => {\n  const startLength = length\n  const startAttrs = map.copy(currPos.currentAttributes)\n  const start = currPos.right\n  while (length > 0 && currPos.right !== null) {\n    if (currPos.right.deleted === false) {\n      switch (currPos.right.content.constructor) {\n        case ContentEmbed:\n        case ContentString:\n          if (length < currPos.right.length) {\n            getItemCleanStart(transaction, createID(currPos.right.id.client, currPos.right.id.clock + length))\n          }\n          length -= currPos.right.length\n          currPos.right.delete(transaction)\n          break\n      }\n    }\n    currPos.forward()\n  }\n  if (start) {\n    cleanupFormattingGap(transaction, start, currPos.right, startAttrs, map.copy(currPos.currentAttributes))\n  }\n  const parent = /** @type {AbstractType<any>} */ (/** @type {Item} */ (currPos.left || currPos.right).parent)\n  if (parent._searchMarker) {\n    updateMarkerChanges(parent._searchMarker, currPos.index, -startLength + length)\n  }\n  return currPos\n}\n\n/**\n * The Quill Delta format represents changes on a text document with\n * formatting information. For mor information visit {@link https://quilljs.com/docs/delta/|Quill Delta}\n *\n * @example\n *   {\n *     ops: [\n *       { insert: 'Gandalf', attributes: { bold: true } },\n *       { insert: ' the ' },\n *       { insert: 'Grey', attributes: { color: '#cccccc' } }\n *     ]\n *   }\n *\n */\n\n/**\n  * Attributes that can be assigned to a selection of text.\n  *\n  * @example\n  *   {\n  *     bold: true,\n  *     font-size: '40px'\n  *   }\n  *\n  * @typedef {Object} TextAttributes\n  */\n\n/**\n * Event that describes the changes on a YText type.\n */\nexport class YTextEvent extends YEvent {\n  /**\n   * @param {YText} ytext\n   * @param {Transaction} transaction\n   * @param {Set<any>} subs The keys that changed\n   */\n  constructor (ytext, transaction, subs) {\n    super(ytext, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.keysChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.keysChanged.add(sub)\n      }\n    })\n  }\n\n  /**\n   * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n   */\n  get changes () {\n    if (this._changes === null) {\n      /**\n       * @type {{added:Set<Item>,deleted:Set<Item>,keys:Map<string,{action:'add'|'update'|'delete',oldValue:any}>,delta:Array<{insert?:Array<any>|string, delete?:number, retain?:number}>}}\n       */\n      const changes = {\n        keys: this.keys,\n        delta: this.delta,\n        added: new Set(),\n        deleted: new Set()\n      }\n      this._changes = changes\n    }\n    return /** @type {any} */ (this._changes)\n  }\n\n  /**\n   * Compute the changes in the delta format.\n   * A {@link https://quilljs.com/docs/delta/|Quill Delta}) that represents the changes on the document.\n   *\n   * @type {Array<{insert?:string, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n   *\n   * @public\n   */\n  get delta () {\n    if (this._delta === null) {\n      const y = /** @type {Doc} */ (this.target.doc)\n      /**\n       * @type {Array<{insert?:string, delete?:number, retain?:number, attributes?: Object<string,any>}>}\n       */\n      const delta = []\n      transact(y, transaction => {\n        const currentAttributes = new Map() // saves all current attributes for insert\n        const oldAttributes = new Map()\n        let item = this.target._start\n        /**\n         * @type {string?}\n         */\n        let action = null\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {} // counts added or removed new attributes for retain\n        /**\n         * @type {string|object}\n         */\n        let insert = ''\n        let retain = 0\n        let deleteLen = 0\n        const addOp = () => {\n          if (action !== null) {\n            /**\n             * @type {any}\n             */\n            let op\n            switch (action) {\n              case 'delete':\n                op = { delete: deleteLen }\n                deleteLen = 0\n                break\n              case 'insert':\n                op = { insert }\n                if (currentAttributes.size > 0) {\n                  op.attributes = {}\n                  currentAttributes.forEach((value, key) => {\n                    if (value !== null) {\n                      op.attributes[key] = value\n                    }\n                  })\n                }\n                insert = ''\n                break\n              case 'retain':\n                op = { retain }\n                if (Object.keys(attributes).length > 0) {\n                  op.attributes = {}\n                  for (const key in attributes) {\n                    op.attributes[key] = attributes[key]\n                  }\n                }\n                retain = 0\n                break\n            }\n            delta.push(op)\n            action = null\n          }\n        }\n        while (item !== null) {\n          switch (item.content.constructor) {\n            case ContentEmbed:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  addOp()\n                  action = 'insert'\n                  insert = /** @type {ContentEmbed} */ (item.content).embed\n                  addOp()\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += 1\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += 1\n              }\n              break\n            case ContentString:\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  if (action !== 'insert') {\n                    addOp()\n                    action = 'insert'\n                  }\n                  insert += /** @type {ContentString} */ (item.content).str\n                }\n              } else if (this.deletes(item)) {\n                if (action !== 'delete') {\n                  addOp()\n                  action = 'delete'\n                }\n                deleteLen += item.length\n              } else if (!item.deleted) {\n                if (action !== 'retain') {\n                  addOp()\n                  action = 'retain'\n                }\n                retain += item.length\n              }\n              break\n            case ContentFormat: {\n              const { key, value } = /** @type {ContentFormat} */ (item.content)\n              if (this.adds(item)) {\n                if (!this.deletes(item)) {\n                  const curVal = currentAttributes.get(key) || null\n                  if (!equalAttrs(curVal, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (equalAttrs(value, (oldAttributes.get(key) || null))) {\n                      delete attributes[key]\n                    } else {\n                      attributes[key] = value\n                    }\n                  } else {\n                    item.delete(transaction)\n                  }\n                }\n              } else if (this.deletes(item)) {\n                oldAttributes.set(key, value)\n                const curVal = currentAttributes.get(key) || null\n                if (!equalAttrs(curVal, value)) {\n                  if (action === 'retain') {\n                    addOp()\n                  }\n                  attributes[key] = curVal\n                }\n              } else if (!item.deleted) {\n                oldAttributes.set(key, value)\n                const attr = attributes[key]\n                if (attr !== undefined) {\n                  if (!equalAttrs(attr, value)) {\n                    if (action === 'retain') {\n                      addOp()\n                    }\n                    if (value === null) {\n                      attributes[key] = value\n                    } else {\n                      delete attributes[key]\n                    }\n                  } else {\n                    item.delete(transaction)\n                  }\n                }\n              }\n              if (!item.deleted) {\n                if (action === 'insert') {\n                  addOp()\n                }\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (item.content))\n              }\n              break\n            }\n          }\n          item = item.right\n        }\n        addOp()\n        while (delta.length > 0) {\n          const lastOp = delta[delta.length - 1]\n          if (lastOp.retain !== undefined && lastOp.attributes === undefined) {\n            // retain delta's if they don't assign attributes\n            delta.pop()\n          } else {\n            break\n          }\n        }\n      })\n      this._delta = delta\n    }\n    return /** @type {any} */ (this._delta)\n  }\n}\n\n/**\n * Type that represents text with formatting information.\n *\n * This type replaces y-richtext as this implementation is able to handle\n * block formats (format information on a paragraph), embeds (complex elements\n * like pictures and videos), and text formats (**bold**, *italic*).\n *\n * @extends AbstractType<YTextEvent>\n */\nexport class YText extends AbstractType {\n  /**\n   * @param {String} [string] The initial value of the YText.\n   */\n  constructor (string) {\n    super()\n    /**\n     * Array of pending operations on this type\n     * @type {Array<function():void>?}\n     */\n    this._pending = string !== undefined ? [() => this.insert(0, string)] : []\n    /**\n     * @type {Array<ArraySearchMarker>}\n     */\n    this._searchMarker = []\n  }\n\n  /**\n   * Number of characters of this text type.\n   *\n   * @type {number}\n   */\n  get length () {\n    return this._length\n  }\n\n  /**\n   * @param {Doc} y\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    try {\n      /** @type {Array<function>} */ (this._pending).forEach(f => f())\n    } catch (e) {\n      console.error(e)\n    }\n    this._pending = null\n  }\n\n  _copy () {\n    return new YText()\n  }\n\n  /**\n   * @return {YText}\n   */\n  clone () {\n    const text = new YText()\n    text.applyDelta(this.toDelta())\n    return text\n  }\n\n  /**\n   * Creates YTextEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    super._callObserver(transaction, parentSubs)\n    const event = new YTextEvent(this, transaction, parentSubs)\n    const doc = transaction.doc\n    callTypeObservers(this, transaction, event)\n    // If a remote change happened, we try to cleanup potential formatting duplicates.\n    if (!transaction.local) {\n      // check if another formatting item was inserted\n      let foundFormattingItem = false\n      for (const [client, afterClock] of transaction.afterState.entries()) {\n        const clock = transaction.beforeState.get(client) || 0\n        if (afterClock === clock) {\n          continue\n        }\n        iterateStructs(transaction, /** @type {Array<Item|GC>} */ (doc.store.clients.get(client)), clock, afterClock, item => {\n          if (!item.deleted && /** @type {Item} */ (item).content.constructor === ContentFormat) {\n            foundFormattingItem = true\n          }\n        })\n        if (foundFormattingItem) {\n          break\n        }\n      }\n      if (!foundFormattingItem) {\n        iterateDeletedStructs(transaction, transaction.deleteSet, item => {\n          if (item instanceof GC || foundFormattingItem) {\n            return\n          }\n          if (item.parent === this && item.content.constructor === ContentFormat) {\n            foundFormattingItem = true\n          }\n        })\n      }\n      transact(doc, (t) => {\n        if (foundFormattingItem) {\n          // If a formatting item was inserted, we simply clean the whole type.\n          // We need to compute currentAttributes for the current position anyway.\n          cleanupYTextFormatting(this)\n        } else {\n          // If no formatting attribute was inserted, we can make due with contextless\n          // formatting cleanups.\n          // Contextless: it is not necessary to compute currentAttributes for the affected position.\n          iterateDeletedStructs(t, t.deleteSet, item => {\n            if (item instanceof GC) {\n              return\n            }\n            if (item.parent === this) {\n              cleanupContextlessFormattingGap(t, item)\n            }\n          })\n        }\n      })\n    }\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @public\n   */\n  toString () {\n    let str = ''\n    /**\n     * @type {Item|null}\n     */\n    let n = this._start\n    while (n !== null) {\n      if (!n.deleted && n.countable && n.content.constructor === ContentString) {\n        str += /** @type {ContentString} */ (n.content).str\n      }\n      n = n.right\n    }\n    return str\n  }\n\n  /**\n   * Returns the unformatted string representation of this YText type.\n   *\n   * @return {string}\n   * @public\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Apply a {@link Delta} on this shared YText type.\n   *\n   * @param {any} delta The changes to apply on this element.\n   * @param {object}  [opts]\n   * @param {boolean} [opts.sanitize] Sanitize input delta. Removes ending newlines if set to true.\n   *\n   *\n   * @public\n   */\n  applyDelta (delta, { sanitize = true } = {}) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const currPos = new ItemTextListPosition(null, this._start, 0, new Map())\n        for (let i = 0; i < delta.length; i++) {\n          const op = delta[i]\n          if (op.insert !== undefined) {\n            // Quill assumes that the content starts with an empty paragraph.\n            // Yjs/Y.Text assumes that it starts empty. We always hide that\n            // there is a newline at the end of the content.\n            // If we omit this step, clients will see a different number of\n            // paragraphs, but nothing bad will happen.\n            const ins = (!sanitize && typeof op.insert === 'string' && i === delta.length - 1 && currPos.right === null && op.insert.slice(-1) === '\\n') ? op.insert.slice(0, -1) : op.insert\n            if (typeof ins !== 'string' || ins.length > 0) {\n              insertText(transaction, this, currPos, ins, op.attributes || {})\n            }\n          } else if (op.retain !== undefined) {\n            formatText(transaction, this, currPos, op.retain, op.attributes || {})\n          } else if (op.delete !== undefined) {\n            deleteText(transaction, currPos, op.delete)\n          }\n        }\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.applyDelta(delta))\n    }\n  }\n\n  /**\n   * Returns the Delta representation of this YText type.\n   *\n   * @param {Snapshot} [snapshot]\n   * @param {Snapshot} [prevSnapshot]\n   * @param {function('removed' | 'added', ID):any} [computeYChange]\n   * @return {any} The Delta representation of this type.\n   *\n   * @public\n   */\n  toDelta (snapshot, prevSnapshot, computeYChange) {\n    /**\n     * @type{Array<any>}\n     */\n    const ops = []\n    const currentAttributes = new Map()\n    const doc = /** @type {Doc} */ (this.doc)\n    let str = ''\n    let n = this._start\n    function packStr () {\n      if (str.length > 0) {\n        // pack str with attributes to ops\n        /**\n         * @type {Object<string,any>}\n         */\n        const attributes = {}\n        let addAttributes = false\n        currentAttributes.forEach((value, key) => {\n          addAttributes = true\n          attributes[key] = value\n        })\n        /**\n         * @type {Object<string,any>}\n         */\n        const op = { insert: str }\n        if (addAttributes) {\n          op.attributes = attributes\n        }\n        ops.push(op)\n        str = ''\n      }\n    }\n    // snapshots are merged again after the transaction, so we need to keep the\n    // transalive until we are done\n    transact(doc, transaction => {\n      if (snapshot) {\n        splitSnapshotAffectedStructs(transaction, snapshot)\n      }\n      if (prevSnapshot) {\n        splitSnapshotAffectedStructs(transaction, prevSnapshot)\n      }\n      while (n !== null) {\n        if (isVisible(n, snapshot) || (prevSnapshot !== undefined && isVisible(n, prevSnapshot))) {\n          switch (n.content.constructor) {\n            case ContentString: {\n              const cur = currentAttributes.get('ychange')\n              if (snapshot !== undefined && !isVisible(n, snapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.state !== 'removed') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('removed', n.id) : { type: 'removed' })\n                }\n              } else if (prevSnapshot !== undefined && !isVisible(n, prevSnapshot)) {\n                if (cur === undefined || cur.user !== n.id.client || cur.state !== 'added') {\n                  packStr()\n                  currentAttributes.set('ychange', computeYChange ? computeYChange('added', n.id) : { type: 'added' })\n                }\n              } else if (cur !== undefined) {\n                packStr()\n                currentAttributes.delete('ychange')\n              }\n              str += /** @type {ContentString} */ (n.content).str\n              break\n            }\n            case ContentEmbed: {\n              packStr()\n              /**\n               * @type {Object<string,any>}\n               */\n              const op = {\n                insert: /** @type {ContentEmbed} */ (n.content).embed\n              }\n              if (currentAttributes.size > 0) {\n                const attrs = /** @type {Object<string,any>} */ ({})\n                op.attributes = attrs\n                currentAttributes.forEach((value, key) => {\n                  attrs[key] = value\n                })\n              }\n              ops.push(op)\n              break\n            }\n            case ContentFormat:\n              if (isVisible(n, snapshot)) {\n                packStr()\n                updateCurrentAttributes(currentAttributes, /** @type {ContentFormat} */ (n.content))\n              }\n              break\n          }\n        }\n        n = n.right\n      }\n      packStr()\n    }, splitSnapshotAffectedStructs)\n    return ops\n  }\n\n  /**\n   * Insert text at a given index.\n   *\n   * @param {number} index The index at which to start inserting.\n   * @param {String} text The text to insert at the specified position.\n   * @param {TextAttributes} [attributes] Optionally define some formatting\n   *                                    information to apply on the inserted\n   *                                    Text.\n   * @public\n   */\n  insert (index, text, attributes) {\n    if (text.length <= 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        if (!attributes) {\n          attributes = {}\n          // @ts-ignore\n          pos.currentAttributes.forEach((v, k) => { attributes[k] = v })\n        }\n        insertText(transaction, this, pos, text, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insert(index, text, attributes))\n    }\n  }\n\n  /**\n   * Inserts an embed at a index.\n   *\n   * @param {number} index The index to insert the embed at.\n   * @param {Object} embed The Object that represents the embed.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    embed\n   *\n   * @public\n   */\n  insertEmbed (index, embed, attributes = {}) {\n    if (embed.constructor !== Object) {\n      throw new Error('Embed must be an Object')\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        insertText(transaction, this, pos, embed, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.insertEmbed(index, embed, attributes))\n    }\n  }\n\n  /**\n   * Deletes text starting from an index.\n   *\n   * @param {number} index Index at which to start deleting.\n   * @param {number} length The number of characters to remove. Defaults to 1.\n   *\n   * @public\n   */\n  delete (index, length) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        deleteText(transaction, findPosition(transaction, this, index), length)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.delete(index, length))\n    }\n  }\n\n  /**\n   * Assigns properties to a range of text.\n   *\n   * @param {number} index The position where to start formatting.\n   * @param {number} length The amount of characters to assign properties to.\n   * @param {TextAttributes} attributes Attribute information to apply on the\n   *                                    text.\n   *\n   * @public\n   */\n  format (index, length, attributes) {\n    if (length === 0) {\n      return\n    }\n    const y = this.doc\n    if (y !== null) {\n      transact(y, transaction => {\n        const pos = findPosition(transaction, this, index)\n        if (pos.right === null) {\n          return\n        }\n        formatText(transaction, this, pos, length, attributes)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.format(index, length, attributes))\n    }\n  }\n\n  /**\n   * Removes an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.removeAttribute(attributeName))\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {any} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Array<function>} */ (this._pending).push(() => this.setAttribute(attributeName, attributeValue))\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {any} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @note Xml-Text nodes don't have attributes. You can use this feature to assign properties to complete text-blocks.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YTextRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YText}\n *\n * @private\n * @function\n */\nexport const readYText = decoder => new YText()\n","/**\n * @module YXml\n */\n\nimport {\n  YXmlEvent,\n  YXmlElement,\n  AbstractType,\n  typeListMap,\n  typeListForEach,\n  typeListInsertGenerics,\n  typeListInsertGenericsAfter,\n  typeListDelete,\n  typeListToArray,\n  YXmlFragmentRefID,\n  callTypeObservers,\n  transact,\n  typeListGet,\n  typeListSlice,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Doc, ContentType, Transaction, Item, YXmlText, YXmlHook, Snapshot // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * Define the elements to which a set of CSS queries apply.\n * {@link https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Selectors|CSS_Selectors}\n *\n * @example\n *   query = '.classSelector'\n *   query = 'nodeSelector'\n *   query = '#idSelector'\n *\n * @typedef {string} CSS_Selector\n */\n\n/**\n * Dom filter function.\n *\n * @callback domFilter\n * @param {string} nodeName The nodeName of the element\n * @param {Map} attributes The map of attributes.\n * @return {boolean} Whether to include the Dom node in the YXmlElement.\n */\n\n/**\n * Represents a subset of the nodes of a YXmlElement / YXmlFragment and a\n * position within them.\n *\n * Can be created with {@link YXmlFragment#createTreeWalker}\n *\n * @public\n * @implements {Iterable<YXmlElement|YXmlText|YXmlElement|YXmlHook>}\n */\nexport class YXmlTreeWalker {\n  /**\n   * @param {YXmlFragment | YXmlElement} root\n   * @param {function(AbstractType<any>):boolean} [f]\n   */\n  constructor (root, f = () => true) {\n    this._filter = f\n    this._root = root\n    /**\n     * @type {Item}\n     */\n    this._currentNode = /** @type {Item} */ (root._start)\n    this._firstCall = true\n  }\n\n  [Symbol.iterator] () {\n    return this\n  }\n\n  /**\n   * Get the next node.\n   *\n   * @return {IteratorResult<YXmlElement|YXmlText|YXmlHook>} The next node.\n   *\n   * @public\n   */\n  next () {\n    /**\n     * @type {Item|null}\n     */\n    let n = this._currentNode\n    let type = n && n.content && /** @type {any} */ (n.content).type\n    if (n !== null && (!this._firstCall || n.deleted || !this._filter(type))) { // if first call, we check if we can use the first item\n      do {\n        type = /** @type {any} */ (n.content).type\n        if (!n.deleted && (type.constructor === YXmlElement || type.constructor === YXmlFragment) && type._start !== null) {\n          // walk down in the tree\n          n = type._start\n        } else {\n          // walk right or up in the tree\n          while (n !== null) {\n            if (n.right !== null) {\n              n = n.right\n              break\n            } else if (n.parent === this._root) {\n              n = null\n            } else {\n              n = /** @type {AbstractType<any>} */ (n.parent)._item\n            }\n          }\n        }\n      } while (n !== null && (n.deleted || !this._filter(/** @type {ContentType} */ (n.content).type)))\n    }\n    this._firstCall = false\n    if (n === null) {\n      // @ts-ignore\n      return { value: undefined, done: true }\n    }\n    this._currentNode = n\n    return { value: /** @type {any} */ (n.content).type, done: false }\n  }\n}\n\n/**\n * Represents a list of {@link YXmlElement}.and {@link YXmlText} types.\n * A YxmlFragment is similar to a {@link YXmlElement}, but it does not have a\n * nodeName and it does not have attributes. Though it can be bound to a DOM\n * element - in this case the attributes and the nodeName are not shared.\n *\n * @public\n * @extends AbstractType<YXmlEvent>\n */\nexport class YXmlFragment extends AbstractType {\n  constructor () {\n    super()\n    /**\n     * @type {Array<any>|null}\n     */\n    this._prelimContent = []\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get firstChild () {\n    const first = this._first\n    return first ? first.content.getContent()[0] : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    this.insert(0, /** @type {Array<any>} */ (this._prelimContent))\n    this._prelimContent = null\n  }\n\n  _copy () {\n    return new YXmlFragment()\n  }\n\n  /**\n   * @return {YXmlFragment}\n   */\n  clone () {\n    const el = new YXmlFragment()\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  get length () {\n    return this._prelimContent === null ? this._length : this._prelimContent.length\n  }\n\n  /**\n   * Create a subtree of childNodes.\n   *\n   * @example\n   * const walker = elem.createTreeWalker(dom => dom.nodeName === 'div')\n   * for (let node in walker) {\n   *   // `node` is a div node\n   *   nop(node)\n   * }\n   *\n   * @param {function(AbstractType<any>):boolean} filter Function that is called on each child element and\n   *                          returns a Boolean indicating whether the child\n   *                          is to be included in the subtree.\n   * @return {YXmlTreeWalker} A subtree and a position within it.\n   *\n   * @public\n   */\n  createTreeWalker (filter) {\n    return new YXmlTreeWalker(this, filter)\n  }\n\n  /**\n   * Returns the first YXmlElement that matches the query.\n   * Similar to DOM's {@link querySelector}.\n   *\n   * Query support:\n   *   - tagname\n   * TODO:\n   *   - id\n   *   - attribute\n   *\n   * @param {CSS_Selector} query The query on the children.\n   * @return {YXmlElement|YXmlText|YXmlHook|null} The first element that matches the query or null.\n   *\n   * @public\n   */\n  querySelector (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    const iterator = new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query)\n    const next = iterator.next()\n    if (next.done) {\n      return null\n    } else {\n      return next.value\n    }\n  }\n\n  /**\n   * Returns all YXmlElements that match the query.\n   * Similar to Dom's {@link querySelectorAll}.\n   *\n   * @todo Does not yet support all queries. Currently only query by tagName.\n   *\n   * @param {CSS_Selector} query The query on the children\n   * @return {Array<YXmlElement|YXmlText|YXmlHook|null>} The elements that match this query.\n   *\n   * @public\n   */\n  querySelectorAll (query) {\n    query = query.toUpperCase()\n    // @ts-ignore\n    return Array.from(new YXmlTreeWalker(this, element => element.nodeName && element.nodeName.toUpperCase() === query))\n  }\n\n  /**\n   * Creates YXmlEvent and calls observers.\n   *\n   * @param {Transaction} transaction\n   * @param {Set<null|string>} parentSubs Keys changed on this type. `null` if list was modified.\n   */\n  _callObserver (transaction, parentSubs) {\n    callTypeObservers(this, transaction, new YXmlEvent(this, parentSubs, transaction))\n  }\n\n  /**\n   * Get the string representation of all the children of this YXmlFragment.\n   *\n   * @return {string} The string representation of all children.\n   */\n  toString () {\n    return typeListMap(this, xml => xml.toString()).join('')\n  }\n\n  /**\n   * @return {string}\n   */\n  toJSON () {\n    return this.toString()\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const fragment = _document.createDocumentFragment()\n    if (binding !== undefined) {\n      binding._createAssociation(fragment, this)\n    }\n    typeListForEach(this, xmlType => {\n      fragment.insertBefore(xmlType.toDOM(_document, hooks, binding), null)\n    })\n    return fragment\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {number} index The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insert (index, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListInsertGenerics(transaction, this, index, content)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Inserts new content at an index.\n   *\n   * @example\n   *  // Insert character 'a' at position 0\n   *  xml.insert(0, [new Y.XmlText('text')])\n   *\n   * @param {null|Item|YXmlElement|YXmlText} ref The index to insert content at\n   * @param {Array<YXmlElement|YXmlText>} content The array of content\n   */\n  insertAfter (ref, content) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        const refItem = (ref && ref instanceof AbstractType) ? ref._item : ref\n        typeListInsertGenericsAfter(transaction, this, refItem, content)\n      })\n    } else {\n      const pc = /** @type {Array<any>} */ (this._prelimContent)\n      const index = ref === null ? 0 : pc.findIndex(el => el === ref) + 1\n      if (index === 0 && ref !== null) {\n        throw error.create('Reference item not found')\n      }\n      pc.splice(index, 0, ...content)\n    }\n  }\n\n  /**\n   * Deletes elements starting from an index.\n   *\n   * @param {number} index Index at which to start deleting elements\n   * @param {number} [length=1] The number of elements to remove. Defaults to 1.\n   */\n  delete (index, length = 1) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeListDelete(transaction, this, index, length)\n      })\n    } else {\n      // @ts-ignore _prelimContent is defined because this is not yet integrated\n      this._prelimContent.splice(index, length)\n    }\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @return {Array<YXmlElement|YXmlText|YXmlHook>}\n   */\n  toArray () {\n    return typeListToArray(this)\n  }\n\n  /**\n   * Appends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to append.\n   */\n  push (content) {\n    this.insert(this.length, content)\n  }\n\n  /**\n   * Preppends content to this YArray.\n   *\n   * @param {Array<YXmlElement|YXmlText>} content Array of content to preppend.\n   */\n  unshift (content) {\n    this.insert(0, content)\n  }\n\n  /**\n   * Returns the i-th element from a YArray.\n   *\n   * @param {number} index The index of the element to return from the YArray\n   * @return {YXmlElement|YXmlText}\n   */\n  get (index) {\n    return typeListGet(this, index)\n  }\n\n  /**\n   * Transforms this YArray to a JavaScript Array.\n   *\n   * @param {number} [start]\n   * @param {number} [end]\n   * @return {Array<YXmlElement|YXmlText>}\n   */\n  slice (start = 0, end = this.length) {\n    return typeListSlice(this, start, end)\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlFragmentRefID)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlFragment}\n *\n * @private\n * @function\n */\nexport const readYXmlFragment = decoder => new YXmlFragment()\n","\nimport {\n  YXmlFragment,\n  transact,\n  typeMapDelete,\n  typeMapHas,\n  typeMapSet,\n  typeMapGet,\n  typeMapGetAll,\n  typeListForEach,\n  YXmlElementRefID,\n  YXmlText, ContentType, AbstractType, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Snapshot, Doc, Item // eslint-disable-line\n} from '../internals.js'\n\n/**\n * An YXmlElement imitates the behavior of a\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}.\n *\n * * An YXmlElement has attributes (key value pairs)\n * * An YXmlElement has childElements that must inherit from YXmlElement\n */\nexport class YXmlElement extends YXmlFragment {\n  constructor (nodeName = 'UNDEFINED') {\n    super()\n    this.nodeName = nodeName\n    /**\n     * @type {Map<string, any>|null}\n     */\n    this._prelimAttrs = new Map()\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get nextSibling () {\n    const n = this._item ? this._item.next : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * @type {YXmlElement|YXmlText|null}\n   */\n  get prevSibling () {\n    const n = this._item ? this._item.prev : null\n    return n ? /** @type {YXmlElement|YXmlText} */ (/** @type {ContentType} */ (n.content).type) : null\n  }\n\n  /**\n   * Integrate this type into the Yjs instance.\n   *\n   * * Save this struct in the os\n   * * This type is sent to other client\n   * * Observer functions are fired\n   *\n   * @param {Doc} y The Yjs instance\n   * @param {Item} item\n   */\n  _integrate (y, item) {\n    super._integrate(y, item)\n    ;(/** @type {Map<string, any>} */ (this._prelimAttrs)).forEach((value, key) => {\n      this.setAttribute(key, value)\n    })\n    this._prelimAttrs = null\n  }\n\n  /**\n   * Creates an Item with the same effect as this Item (without position effect)\n   *\n   * @return {YXmlElement}\n   */\n  _copy () {\n    return new YXmlElement(this.nodeName)\n  }\n\n  /**\n   * @return {YXmlElement}\n   */\n  clone () {\n    const el = new YXmlElement(this.nodeName)\n    const attrs = this.getAttributes()\n    for (const key in attrs) {\n      el.setAttribute(key, attrs[key])\n    }\n    // @ts-ignore\n    el.insert(0, this.toArray().map(item => item instanceof AbstractType ? item.clone() : item))\n    return el\n  }\n\n  /**\n   * Returns the XML serialization of this YXmlElement.\n   * The attributes are ordered by attribute-name, so you can easily use this\n   * method to compare YXmlElements\n   *\n   * @return {string} The string representation of this type.\n   *\n   * @public\n   */\n  toString () {\n    const attrs = this.getAttributes()\n    const stringBuilder = []\n    const keys = []\n    for (const key in attrs) {\n      keys.push(key)\n    }\n    keys.sort()\n    const keysLen = keys.length\n    for (let i = 0; i < keysLen; i++) {\n      const key = keys[i]\n      stringBuilder.push(key + '=\"' + attrs[key] + '\"')\n    }\n    const nodeName = this.nodeName.toLocaleLowerCase()\n    const attrsString = stringBuilder.length > 0 ? ' ' + stringBuilder.join(' ') : ''\n    return `<${nodeName}${attrsString}>${super.toString()}</${nodeName}>`\n  }\n\n  /**\n   * Removes an attribute from this YXmlElement.\n   *\n   * @param {String} attributeName The attribute name that is to be removed.\n   *\n   * @public\n   */\n  removeAttribute (attributeName) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapDelete(transaction, this, attributeName)\n      })\n    } else {\n      /** @type {Map<string,any>} */ (this._prelimAttrs).delete(attributeName)\n    }\n  }\n\n  /**\n   * Sets or updates an attribute.\n   *\n   * @param {String} attributeName The attribute name that is to be set.\n   * @param {String} attributeValue The attribute value that is to be set.\n   *\n   * @public\n   */\n  setAttribute (attributeName, attributeValue) {\n    if (this.doc !== null) {\n      transact(this.doc, transaction => {\n        typeMapSet(transaction, this, attributeName, attributeValue)\n      })\n    } else {\n      /** @type {Map<string, any>} */ (this._prelimAttrs).set(attributeName, attributeValue)\n    }\n  }\n\n  /**\n   * Returns an attribute value that belongs to the attribute name.\n   *\n   * @param {String} attributeName The attribute name that identifies the\n   *                               queried value.\n   * @return {String} The queried attribute value.\n   *\n   * @public\n   */\n  getAttribute (attributeName) {\n    return /** @type {any} */ (typeMapGet(this, attributeName))\n  }\n\n  /**\n   * Returns whether an attribute exists\n   *\n   * @param {String} attributeName The attribute name to check for existence.\n   * @return {boolean} whether the attribute exists.\n   *\n   * @public\n   */\n  hasAttribute (attributeName) {\n    return /** @type {any} */ (typeMapHas(this, attributeName))\n  }\n\n  /**\n   * Returns all attribute name/value pairs in a JSON Object.\n   *\n   * @param {Snapshot} [snapshot]\n   * @return {Object<string, any>} A JSON Object that describes the attributes.\n   *\n   * @public\n   */\n  getAttributes (snapshot) {\n    return typeMapGetAll(this)\n  }\n\n  /**\n   * Creates a Dom Element that mirrors this YXmlElement.\n   *\n   * @param {Document} [_document=document] The document object (you must define\n   *                                        this when calling this method in\n   *                                        nodejs)\n   * @param {Object<string, any>} [hooks={}] Optional property to customize how hooks\n   *                                             are presented in the DOM\n   * @param {any} [binding] You should not set this property. This is\n   *                               used if DomBinding wants to create a\n   *                               association to the created DOM type.\n   * @return {Node} The {@link https://developer.mozilla.org/en-US/docs/Web/API/Element|Dom Element}\n   *\n   * @public\n   */\n  toDOM (_document = document, hooks = {}, binding) {\n    const dom = _document.createElement(this.nodeName)\n    const attrs = this.getAttributes()\n    for (const key in attrs) {\n      dom.setAttribute(key, attrs[key])\n    }\n    typeListForEach(this, yxml => {\n      dom.appendChild(yxml.toDOM(_document, hooks, binding))\n    })\n    if (binding !== undefined) {\n      binding._createAssociation(dom, this)\n    }\n    return dom\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   */\n  _write (encoder) {\n    encoder.writeTypeRef(YXmlElementRefID)\n    encoder.writeKey(this.nodeName)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {YXmlElement}\n *\n * @function\n */\nexport const readYXmlElement = decoder => new YXmlElement(decoder.readKey())\n","\nimport {\n  YEvent,\n  YXmlText, YXmlElement, YXmlFragment, Transaction // eslint-disable-line\n} from '../internals.js'\n\n/**\n * An Event that describes changes on a YXml Element or Yxml Fragment\n */\nexport class YXmlEvent extends YEvent {\n  /**\n   * @param {YXmlElement|YXmlText|YXmlFragment} target The target on which the event is created.\n   * @param {Set<string|null>} subs The set of changed attributes. `null` is included if the\n   *                   child list changed.\n   * @param {Transaction} transaction The transaction instance with wich the\n   *                                  change was created.\n   */\n  constructor (target, subs, transaction) {\n    super(target, transaction)\n    /**\n     * Whether the children changed.\n     * @type {Boolean}\n     * @private\n     */\n    this.childListChanged = false\n    /**\n     * Set of all changed attributes.\n     * @type {Set<string>}\n     */\n    this.attributesChanged = new Set()\n    subs.forEach((sub) => {\n      if (sub === null) {\n        this.childListChanged = true\n      } else {\n        this.attributesChanged.add(sub)\n      }\n    })\n  }\n}\n","\nimport {\n  UpdateEncoderV1, UpdateEncoderV2, ID, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {number} length\n   */\n  constructor (id, length) {\n    this.id = id\n    this.length = length\n  }\n\n  /**\n   * @type {boolean}\n   */\n  get deleted () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Merge this struct with the item to the right.\n   * This method is already assuming that `this.id.clock + this.length === this.id.clock`.\n   * Also this method does *not* remove right from StructStore!\n   * @param {AbstractStruct} right\n   * @return {boolean} wether this merged with right\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   * @param {number} encodingRef\n   */\n  write (encoder, offset, encodingRef) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    throw error.methodUnimplemented()\n  }\n}\n","\nimport {\n  AbstractStruct,\n  addStruct,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, ID // eslint-disable-line\n} from '../internals.js'\n\nexport const structGCRefNumber = 0\n\n/**\n * @private\n */\nexport class GC extends AbstractStruct {\n  get deleted () {\n    return true\n  }\n\n  delete () {}\n\n  /**\n   * @param {GC} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (this.constructor !== right.constructor) {\n      return false\n    }\n    this.length += right.length\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.length -= offset\n    }\n    addStruct(transaction.doc.store, this)\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeInfo(structGCRefNumber)\n    encoder.writeLen(this.length - offset)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    return null\n  }\n}\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\nexport class ContentBinary {\n  /**\n   * @param {Uint8Array} content\n   */\n  constructor (content) {\n    this.content = content\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.content]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentBinary}\n   */\n  copy () {\n    return new ContentBinary(this.content)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentBinary}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentBinary} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeBuf(this.content)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 3\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentBinary}\n */\nexport const readContentBinary = decoder => new ContentBinary(decoder.readBuf())\n","\nimport {\n  addToDeleteSet,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentDeleted {\n  /**\n   * @param {number} len\n   */\n  constructor (len) {\n    this.len = len\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.len\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentDeleted}\n   */\n  copy () {\n    return new ContentDeleted(this.len)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDeleted}\n   */\n  splice (offset) {\n    const right = new ContentDeleted(this.len - offset)\n    this.len = offset\n    return right\n  }\n\n  /**\n   * @param {ContentDeleted} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.len += right.len\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    addToDeleteSet(transaction.deleteSet, item.id.client, item.id.clock, this.len)\n    item.markDeleted()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeLen(this.len - offset)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 1\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2 } decoder\n * @return {ContentDeleted}\n */\nexport const readContentDeleted = decoder => new ContentDeleted(decoder.readLen())\n","\nimport {\n  Doc, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentDoc {\n  /**\n   * @param {Doc} doc\n   */\n  constructor (doc) {\n    if (doc._item) {\n      console.error('This document was already integrated as a sub-document. You should create a second instance instead with the same guid.')\n    }\n    /**\n     * @type {Doc}\n     */\n    this.doc = doc\n    /**\n     * @type {any}\n     */\n    const opts = {}\n    this.opts = opts\n    if (!doc.gc) {\n      opts.gc = false\n    }\n    if (doc.autoLoad) {\n      opts.autoLoad = true\n    }\n    if (doc.meta !== null) {\n      opts.meta = doc.meta\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.doc]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentDoc}\n   */\n  copy () {\n    return new ContentDoc(this.doc)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentDoc}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentDoc} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // this needs to be reflected in doc.destroy as well\n    this.doc._item = item\n    transaction.subdocsAdded.add(this.doc)\n    if (this.doc.shouldLoad) {\n      transaction.subdocsLoaded.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (transaction.subdocsAdded.has(this.doc)) {\n      transaction.subdocsAdded.delete(this.doc)\n    } else {\n      transaction.subdocsRemoved.add(this.doc)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) { }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(this.doc.guid)\n    encoder.writeAny(this.opts)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 9\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentDoc}\n */\nexport const readContentDoc = decoder => new ContentDoc(new Doc({ guid: decoder.readString(), ...decoder.readAny() }))\n","\nimport {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Item, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentEmbed {\n  /**\n   * @param {Object} embed\n   */\n  constructor (embed) {\n    this.embed = embed\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.embed]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentEmbed}\n   */\n  copy () {\n    return new ContentEmbed(this.embed)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentEmbed}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentEmbed} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeJSON(this.embed)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 5\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentEmbed}\n */\nexport const readContentEmbed = decoder => new ContentEmbed(decoder.readJSON())\n","\nimport {\n  AbstractType, UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Item, StructStore, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @private\n */\nexport class ContentFormat {\n  /**\n   * @param {string} key\n   * @param {Object} value\n   */\n  constructor (key, value) {\n    this.key = key\n    this.value = value\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return []\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return false\n  }\n\n  /**\n   * @return {ContentFormat}\n   */\n  copy () {\n    return new ContentFormat(this.key, this.value)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentFormat}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentFormat} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    // @todo searchmarker are currently unsupported for rich text documents\n    /** @type {AbstractType<any>} */ (item.parent)._searchMarker = null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeKey(this.key)\n    encoder.writeJSON(this.value)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 6\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentFormat}\n */\nexport const readContentFormat = decoder => new ContentFormat(decoder.readString(), decoder.readJSON())\n","import {\n  UpdateEncoderV1, UpdateEncoderV2, UpdateDecoderV1, UpdateDecoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\nexport class ContentAny {\n  /**\n   * @param {Array<any>} arr\n   */\n  constructor (arr) {\n    /**\n     * @type {Array<any>}\n     */\n    this.arr = arr\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.arr.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.arr\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentAny}\n   */\n  copy () {\n    return new ContentAny(this.arr)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentAny}\n   */\n  splice (offset) {\n    const right = new ContentAny(this.arr.slice(offset))\n    this.arr = this.arr.slice(0, offset)\n    return right\n  }\n\n  /**\n   * @param {ContentAny} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.arr = this.arr.concat(right.arr)\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const len = this.arr.length\n    encoder.writeLen(len - offset)\n    for (let i = offset; i < len; i++) {\n      const c = this.arr[i]\n      encoder.writeAny(c)\n    }\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 8\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentAny}\n */\nexport const readContentAny = decoder => {\n  const len = decoder.readLen()\n  const cs = []\n  for (let i = 0; i < len; i++) {\n    cs.push(decoder.readAny())\n  }\n  return new ContentAny(cs)\n}\n","import {\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, Transaction, Item, StructStore // eslint-disable-line\n} from '../internals.js'\n\n/**\n * @private\n */\nexport class ContentString {\n  /**\n   * @param {string} str\n   */\n  constructor (str) {\n    /**\n     * @type {string}\n     */\n    this.str = str\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return this.str.length\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return this.str.split('')\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentString}\n   */\n  copy () {\n    return new ContentString(this.str)\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentString}\n   */\n  splice (offset) {\n    const right = new ContentString(this.str.slice(offset))\n    this.str = this.str.slice(0, offset)\n\n    // Prevent encoding invalid documents because of splitting of surrogate pairs: https://github.com/yjs/yjs/issues/248\n    const firstCharCode = this.str.charCodeAt(offset - 1)\n    if (firstCharCode >= 0xD800 && firstCharCode <= 0xDBFF) {\n      // Last character of the left split is the start of a surrogate utf16/ucs2 pair.\n      // We don't support splitting of surrogate pairs because this may lead to invalid documents.\n      // Replace the invalid character with a unicode replacement character (� / U+FFFD)\n      this.str = this.str.slice(0, offset - 1) + '�'\n      // replace right as well\n      right.str = '�' + right.str.slice(1)\n    }\n    return right\n  }\n\n  /**\n   * @param {ContentString} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    this.str += right.str\n    return true\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {}\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {}\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {}\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    encoder.writeString(offset === 0 ? this.str : this.str.slice(offset))\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 4\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentString}\n */\nexport const readContentString = decoder => new ContentString(decoder.readString())\n","\nimport {\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, StructStore, Transaction, Item, YEvent, AbstractType // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\n\n/**\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractType<any>>}\n * @private\n */\nexport const typeRefs = [\n  readYArray,\n  readYMap,\n  readYText,\n  readYXmlElement,\n  readYXmlFragment,\n  readYXmlHook,\n  readYXmlText\n]\n\nexport const YArrayRefID = 0\nexport const YMapRefID = 1\nexport const YTextRefID = 2\nexport const YXmlElementRefID = 3\nexport const YXmlFragmentRefID = 4\nexport const YXmlHookRefID = 5\nexport const YXmlTextRefID = 6\n\n/**\n * @private\n */\nexport class ContentType {\n  /**\n   * @param {AbstractType<YEvent>} type\n   */\n  constructor (type) {\n    /**\n     * @type {AbstractType<any>}\n     */\n    this.type = type\n  }\n\n  /**\n   * @return {number}\n   */\n  getLength () {\n    return 1\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    return [this.type]\n  }\n\n  /**\n   * @return {boolean}\n   */\n  isCountable () {\n    return true\n  }\n\n  /**\n   * @return {ContentType}\n   */\n  copy () {\n    return new ContentType(this.type._copy())\n  }\n\n  /**\n   * @param {number} offset\n   * @return {ContentType}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {ContentType} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    return false\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    this.type._integrate(transaction.doc, item)\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    let item = this.type._start\n    while (item !== null) {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else {\n        // Whis will be gc'd later and we want to merge it if possible\n        // We try to merge all deleted items after each transaction,\n        // but we have no knowledge about that this needs to be merged\n        // since it is not in transaction.ds. Hence we add it to transaction._mergeStructs\n        transaction._mergeStructs.push(item)\n      }\n      item = item.right\n    }\n    this.type._map.forEach(item => {\n      if (!item.deleted) {\n        item.delete(transaction)\n      } else {\n        // same as above\n        transaction._mergeStructs.push(item)\n      }\n    })\n    transaction.changed.delete(this.type)\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    let item = this.type._start\n    while (item !== null) {\n      item.gc(store, true)\n      item = item.right\n    }\n    this.type._start = null\n    this.type._map.forEach(/** @param {Item | null} item */ (item) => {\n      while (item !== null) {\n        item.gc(store, true)\n        item = item.left\n      }\n    })\n    this.type._map = new Map()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    this.type._write(encoder)\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    return 7\n  }\n}\n\n/**\n * @private\n *\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @return {ContentType}\n */\nexport const readContentType = decoder => new ContentType(typeRefs[decoder.readTypeRef()](decoder))\n","\nimport {\n  GC,\n  getState,\n  AbstractStruct,\n  replaceStruct,\n  addStruct,\n  addToDeleteSet,\n  findRootTypeKey,\n  compareIDs,\n  getItem,\n  getItemCleanEnd,\n  getItemCleanStart,\n  readContentDeleted,\n  readContentBinary,\n  readContentJSON,\n  readContentAny,\n  readContentString,\n  readContentEmbed,\n  readContentDoc,\n  createID,\n  readContentFormat,\n  readContentType,\n  addChangedTypeToTransaction,\n  UpdateDecoderV1, UpdateDecoderV2, UpdateEncoderV1, UpdateEncoderV2, ContentType, ContentDeleted, StructStore, ID, AbstractType, Transaction // eslint-disable-line\n} from '../internals.js'\n\nimport * as error from 'lib0/error'\nimport * as binary from 'lib0/binary'\n\n/**\n * @todo This should return several items\n *\n * @param {StructStore} store\n * @param {ID} id\n * @return {{item:Item, diff:number}}\n */\nexport const followRedone = (store, id) => {\n  /**\n   * @type {ID|null}\n   */\n  let nextID = id\n  let diff = 0\n  let item\n  do {\n    if (diff > 0) {\n      nextID = createID(nextID.client, nextID.clock + diff)\n    }\n    item = getItem(store, nextID)\n    diff = nextID.clock - item.id.clock\n    nextID = item.redone\n  } while (nextID !== null && item instanceof Item)\n  return {\n    item, diff\n  }\n}\n\n/**\n * Make sure that neither item nor any of its parents is ever deleted.\n *\n * This property does not persist when storing it into a database or when\n * sending it to other peers\n *\n * @param {Item|null} item\n * @param {boolean} keep\n */\nexport const keepItem = (item, keep) => {\n  while (item !== null && item.keep !== keep) {\n    item.keep = keep\n    item = /** @type {AbstractType<any>} */ (item.parent)._item\n  }\n}\n\n/**\n * Split leftItem into two items\n * @param {Transaction} transaction\n * @param {Item} leftItem\n * @param {number} diff\n * @return {Item}\n *\n * @function\n * @private\n */\nexport const splitItem = (transaction, leftItem, diff) => {\n  // create rightItem\n  const { client, clock } = leftItem.id\n  const rightItem = new Item(\n    createID(client, clock + diff),\n    leftItem,\n    createID(client, clock + diff - 1),\n    leftItem.right,\n    leftItem.rightOrigin,\n    leftItem.parent,\n    leftItem.parentSub,\n    leftItem.content.splice(diff)\n  )\n  if (leftItem.deleted) {\n    rightItem.markDeleted()\n  }\n  if (leftItem.keep) {\n    rightItem.keep = true\n  }\n  if (leftItem.redone !== null) {\n    rightItem.redone = createID(leftItem.redone.client, leftItem.redone.clock + diff)\n  }\n  // update left (do not set leftItem.rightOrigin as it will lead to problems when syncing)\n  leftItem.right = rightItem\n  // update right\n  if (rightItem.right !== null) {\n    rightItem.right.left = rightItem\n  }\n  // right is more specific.\n  transaction._mergeStructs.push(rightItem)\n  // update parent._map\n  if (rightItem.parentSub !== null && rightItem.right === null) {\n    /** @type {AbstractType<any>} */ (rightItem.parent)._map.set(rightItem.parentSub, rightItem)\n  }\n  leftItem.length = diff\n  return rightItem\n}\n\n/**\n * Redoes the effect of this operation.\n *\n * @param {Transaction} transaction The Yjs instance.\n * @param {Item} item\n * @param {Set<Item>} redoitems\n *\n * @return {Item|null}\n *\n * @private\n */\nexport const redoItem = (transaction, item, redoitems) => {\n  const doc = transaction.doc\n  const store = doc.store\n  const ownClientID = doc.clientID\n  const redone = item.redone\n  if (redone !== null) {\n    return getItemCleanStart(transaction, redone)\n  }\n  let parentItem = /** @type {AbstractType<any>} */ (item.parent)._item\n  /**\n   * @type {Item|null}\n   */\n  let left\n  /**\n   * @type {Item|null}\n   */\n  let right\n  if (item.parentSub === null) {\n    // Is an array item. Insert at the old position\n    left = item.left\n    right = item\n  } else {\n    // Is a map item. Insert as current value\n    left = item\n    while (left.right !== null) {\n      left = left.right\n      if (left.id.client !== ownClientID) {\n        // It is not possible to redo this item because it conflicts with a\n        // change from another client\n        return null\n      }\n    }\n    if (left.right !== null) {\n      left = /** @type {Item} */ (/** @type {AbstractType<any>} */ (item.parent)._map.get(item.parentSub))\n    }\n    right = null\n  }\n  // make sure that parent is redone\n  if (parentItem !== null && parentItem.deleted === true && parentItem.redone === null) {\n    // try to undo parent if it will be undone anyway\n    if (!redoitems.has(parentItem) || redoItem(transaction, parentItem, redoitems) === null) {\n      return null\n    }\n  }\n  if (parentItem !== null && parentItem.redone !== null) {\n    while (parentItem.redone !== null) {\n      parentItem = getItemCleanStart(transaction, parentItem.redone)\n    }\n    // find next cloned_redo items\n    while (left !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let leftTrace = left\n      // trace redone until parent matches\n      while (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item !== parentItem) {\n        leftTrace = leftTrace.redone === null ? null : getItemCleanStart(transaction, leftTrace.redone)\n      }\n      if (leftTrace !== null && /** @type {AbstractType<any>} */ (leftTrace.parent)._item === parentItem) {\n        left = leftTrace\n        break\n      }\n      left = left.left\n    }\n    while (right !== null) {\n      /**\n       * @type {Item|null}\n       */\n      let rightTrace = right\n      // trace redone until parent matches\n      while (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item !== parentItem) {\n        rightTrace = rightTrace.redone === null ? null : getItemCleanStart(transaction, rightTrace.redone)\n      }\n      if (rightTrace !== null && /** @type {AbstractType<any>} */ (rightTrace.parent)._item === parentItem) {\n        right = rightTrace\n        break\n      }\n      right = right.right\n    }\n  }\n  const nextClock = getState(store, ownClientID)\n  const nextId = createID(ownClientID, nextClock)\n  const redoneItem = new Item(\n    nextId,\n    left, left && left.lastId,\n    right, right && right.id,\n    parentItem === null ? item.parent : /** @type {ContentType} */ (parentItem.content).type,\n    item.parentSub,\n    item.content.copy()\n  )\n  item.redone = nextId\n  keepItem(redoneItem, true)\n  redoneItem.integrate(transaction, 0)\n  return redoneItem\n}\n\n/**\n * Abstract class that represents any content.\n */\nexport class Item extends AbstractStruct {\n  /**\n   * @param {ID} id\n   * @param {Item | null} left\n   * @param {ID | null} origin\n   * @param {Item | null} right\n   * @param {ID | null} rightOrigin\n   * @param {AbstractType<any>|ID|null} parent Is a type if integrated, is null if it is possible to copy parent from left or right, is ID before integration to search for it.\n   * @param {string | null} parentSub\n   * @param {AbstractContent} content\n   */\n  constructor (id, left, origin, right, rightOrigin, parent, parentSub, content) {\n    super(id, content.getLength())\n    /**\n     * The item that was originally to the left of this item.\n     * @type {ID | null}\n     */\n    this.origin = origin\n    /**\n     * The item that is currently to the left of this item.\n     * @type {Item | null}\n     */\n    this.left = left\n    /**\n     * The item that is currently to the right of this item.\n     * @type {Item | null}\n     */\n    this.right = right\n    /**\n     * The item that was originally to the right of this item.\n     * @type {ID | null}\n     */\n    this.rightOrigin = rightOrigin\n    /**\n     * @type {AbstractType<any>|ID|null}\n     */\n    this.parent = parent\n    /**\n     * If the parent refers to this item with some kind of key (e.g. YMap, the\n     * key is specified here. The key is then used to refer to the list in which\n     * to insert this item. If `parentSub = null` type._start is the list in\n     * which to insert to. Otherwise it is `parent._map`.\n     * @type {String | null}\n     */\n    this.parentSub = parentSub\n    /**\n     * If this type's effect is reundone this type refers to the type that undid\n     * this operation.\n     * @type {ID | null}\n     */\n    this.redone = null\n    /**\n     * @type {AbstractContent}\n     */\n    this.content = content\n    /**\n     * bit1: keep\n     * bit2: countable\n     * bit3: deleted\n     * bit4: mark - mark node as fast-search-marker\n     * @type {number} byte\n     */\n    this.info = this.content.isCountable() ? binary.BIT2 : 0\n  }\n\n  /**\n   * This is used to mark the item as an indexed fast-search marker\n   *\n   * @type {boolean}\n   */\n  set marker (isMarked) {\n    if (((this.info & binary.BIT4) > 0) !== isMarked) {\n      this.info ^= binary.BIT4\n    }\n  }\n\n  get marker () {\n    return (this.info & binary.BIT4) > 0\n  }\n\n  /**\n   * If true, do not garbage collect this Item.\n   */\n  get keep () {\n    return (this.info & binary.BIT1) > 0\n  }\n\n  set keep (doKeep) {\n    if (this.keep !== doKeep) {\n      this.info ^= binary.BIT1\n    }\n  }\n\n  get countable () {\n    return (this.info & binary.BIT2) > 0\n  }\n\n  /**\n   * Whether this item was deleted or not.\n   * @type {Boolean}\n   */\n  get deleted () {\n    return (this.info & binary.BIT3) > 0\n  }\n\n  set deleted (doDelete) {\n    if (this.deleted !== doDelete) {\n      this.info ^= binary.BIT3\n    }\n  }\n\n  markDeleted () {\n    this.info |= binary.BIT3\n  }\n\n  /**\n   * Return the creator clientID of the missing op or define missing items and return null.\n   *\n   * @param {Transaction} transaction\n   * @param {StructStore} store\n   * @return {null | number}\n   */\n  getMissing (transaction, store) {\n    if (this.origin && this.origin.client !== this.id.client && this.origin.clock >= getState(store, this.origin.client)) {\n      return this.origin.client\n    }\n    if (this.rightOrigin && this.rightOrigin.client !== this.id.client && this.rightOrigin.clock >= getState(store, this.rightOrigin.client)) {\n      return this.rightOrigin.client\n    }\n    if (this.parent && this.parent.constructor === ID && this.id.client !== this.parent.client && this.parent.clock >= getState(store, this.parent.client)) {\n      return this.parent.client\n    }\n\n    // We have all missing ids, now find the items\n\n    if (this.origin) {\n      this.left = getItemCleanEnd(transaction, store, this.origin)\n      this.origin = this.left.lastId\n    }\n    if (this.rightOrigin) {\n      this.right = getItemCleanStart(transaction, this.rightOrigin)\n      this.rightOrigin = this.right.id\n    }\n    if ((this.left && this.left.constructor === GC) || (this.right && this.right.constructor === GC)) {\n      this.parent = null\n    }\n    // only set parent if this shouldn't be garbage collected\n    if (!this.parent) {\n      if (this.left && this.left.constructor === Item) {\n        this.parent = this.left.parent\n        this.parentSub = this.left.parentSub\n      }\n      if (this.right && this.right.constructor === Item) {\n        this.parent = this.right.parent\n        this.parentSub = this.right.parentSub\n      }\n    } else if (this.parent.constructor === ID) {\n      const parentItem = getItem(store, this.parent)\n      if (parentItem.constructor === GC) {\n        this.parent = null\n      } else {\n        this.parent = /** @type {ContentType} */ (parentItem.content).type\n      }\n    }\n    return null\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {number} offset\n   */\n  integrate (transaction, offset) {\n    if (offset > 0) {\n      this.id.clock += offset\n      this.left = getItemCleanEnd(transaction, transaction.doc.store, createID(this.id.client, this.id.clock - 1))\n      this.origin = this.left.lastId\n      this.content = this.content.splice(offset)\n      this.length -= offset\n    }\n\n    if (this.parent) {\n      if ((!this.left && (!this.right || this.right.left !== null)) || (this.left && this.left.right !== this.right)) {\n        /**\n         * @type {Item|null}\n         */\n        let left = this.left\n\n        /**\n         * @type {Item|null}\n         */\n        let o\n        // set o to the first conflicting item\n        if (left !== null) {\n          o = left.right\n        } else if (this.parentSub !== null) {\n          o = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (o !== null && o.left !== null) {\n            o = o.left\n          }\n        } else {\n          o = /** @type {AbstractType<any>} */ (this.parent)._start\n        }\n        // TODO: use something like DeleteSet here (a tree implementation would be best)\n        // @todo use global set definitions\n        /**\n         * @type {Set<Item>}\n         */\n        const conflictingItems = new Set()\n        /**\n         * @type {Set<Item>}\n         */\n        const itemsBeforeOrigin = new Set()\n        // Let c in conflictingItems, b in itemsBeforeOrigin\n        // ***{origin}bbbb{this}{c,b}{c,b}{o}***\n        // Note that conflictingItems is a subset of itemsBeforeOrigin\n        while (o !== null && o !== this.right) {\n          itemsBeforeOrigin.add(o)\n          conflictingItems.add(o)\n          if (compareIDs(this.origin, o.origin)) {\n            // case 1\n            if (o.id.client < this.id.client) {\n              left = o\n              conflictingItems.clear()\n            } else if (compareIDs(this.rightOrigin, o.rightOrigin)) {\n              // this and o are conflicting and point to the same integration points. The id decides which item comes first.\n              // Since this is to the left of o, we can break here\n              break\n            } // else, o might be integrated before an item that this conflicts with. If so, we will find it in the next iterations\n          } else if (o.origin !== null && itemsBeforeOrigin.has(getItem(transaction.doc.store, o.origin))) { // use getItem instead of getItemCleanEnd because we don't want / need to split items.\n            // case 2\n            if (!conflictingItems.has(getItem(transaction.doc.store, o.origin))) {\n              left = o\n              conflictingItems.clear()\n            }\n          } else {\n            break\n          }\n          o = o.right\n        }\n        this.left = left\n      }\n      // reconnect left/right + update parent map/start if necessary\n      if (this.left !== null) {\n        const right = this.left.right\n        this.right = right\n        this.left.right = this\n      } else {\n        let r\n        if (this.parentSub !== null) {\n          r = /** @type {AbstractType<any>} */ (this.parent)._map.get(this.parentSub) || null\n          while (r !== null && r.left !== null) {\n            r = r.left\n          }\n        } else {\n          r = /** @type {AbstractType<any>} */ (this.parent)._start\n          ;/** @type {AbstractType<any>} */ (this.parent)._start = this\n        }\n        this.right = r\n      }\n      if (this.right !== null) {\n        this.right.left = this\n      } else if (this.parentSub !== null) {\n        // set as current parent value if right === null and this is parentSub\n        /** @type {AbstractType<any>} */ (this.parent)._map.set(this.parentSub, this)\n        if (this.left !== null) {\n          // this is the current attribute value of parent. delete right\n          this.left.delete(transaction)\n        }\n      }\n      // adjust length of parent\n      if (this.parentSub === null && this.countable && !this.deleted) {\n        /** @type {AbstractType<any>} */ (this.parent)._length += this.length\n      }\n      addStruct(transaction.doc.store, this)\n      this.content.integrate(transaction, this)\n      // add parent to transaction.changed\n      addChangedTypeToTransaction(transaction, /** @type {AbstractType<any>} */ (this.parent), this.parentSub)\n      if ((/** @type {AbstractType<any>} */ (this.parent)._item !== null && /** @type {AbstractType<any>} */ (this.parent)._item.deleted) || (this.parentSub !== null && this.right !== null)) {\n        // delete if parent is deleted or if this is not the current attribute value of parent\n        this.delete(transaction)\n      }\n    } else {\n      // parent is not defined. Integrate GC struct instead\n      new GC(this.id, this.length).integrate(transaction, 0)\n    }\n  }\n\n  /**\n   * Returns the next non-deleted item\n   */\n  get next () {\n    let n = this.right\n    while (n !== null && n.deleted) {\n      n = n.right\n    }\n    return n\n  }\n\n  /**\n   * Returns the previous non-deleted item\n   */\n  get prev () {\n    let n = this.left\n    while (n !== null && n.deleted) {\n      n = n.left\n    }\n    return n\n  }\n\n  /**\n   * Computes the last content address of this Item.\n   */\n  get lastId () {\n    // allocating ids is pretty costly because of the amount of ids created, so we try to reuse whenever possible\n    return this.length === 1 ? this.id : createID(this.id.client, this.id.clock + this.length - 1)\n  }\n\n  /**\n   * Try to merge two items\n   *\n   * @param {Item} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    if (\n      this.constructor === right.constructor &&\n      compareIDs(right.origin, this.lastId) &&\n      this.right === right &&\n      compareIDs(this.rightOrigin, right.rightOrigin) &&\n      this.id.client === right.id.client &&\n      this.id.clock + this.length === right.id.clock &&\n      this.deleted === right.deleted &&\n      this.redone === null &&\n      right.redone === null &&\n      this.content.constructor === right.content.constructor &&\n      this.content.mergeWith(right.content)\n    ) {\n      const searchMarker = /** @type {AbstractType<any>} */ (this.parent)._searchMarker\n      if (searchMarker) {\n        searchMarker.forEach(marker => {\n          if (marker.p === right) {\n            // right is going to be \"forgotten\" so we need to update the marker\n            marker.p = this\n            // adjust marker index\n            if (!this.deleted && this.countable) {\n              marker.index -= this.length\n            }\n          }\n        })\n      }\n      if (right.keep) {\n        this.keep = true\n      }\n      this.right = right.right\n      if (this.right !== null) {\n        this.right.left = this\n      }\n      this.length += right.length\n      return true\n    }\n    return false\n  }\n\n  /**\n   * Mark this Item as deleted.\n   *\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    if (!this.deleted) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      // adjust the length of parent\n      if (this.countable && this.parentSub === null) {\n        parent._length -= this.length\n      }\n      this.markDeleted()\n      addToDeleteSet(transaction.deleteSet, this.id.client, this.id.clock, this.length)\n      addChangedTypeToTransaction(transaction, parent, this.parentSub)\n      this.content.delete(transaction)\n    }\n  }\n\n  /**\n   * @param {StructStore} store\n   * @param {boolean} parentGCd\n   */\n  gc (store, parentGCd) {\n    if (!this.deleted) {\n      throw error.unexpectedCase()\n    }\n    this.content.gc(store)\n    if (parentGCd) {\n      replaceStruct(store, this, new GC(this.id, this.length))\n    } else {\n      this.content = new ContentDeleted(this.length)\n    }\n  }\n\n  /**\n   * Transform the properties of this type to binary and write it to an\n   * BinaryEncoder.\n   *\n   * This is called when this Item is sent to a remote peer.\n   *\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder The encoder to write data to.\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    const origin = offset > 0 ? createID(this.id.client, this.id.clock + offset - 1) : this.origin\n    const rightOrigin = this.rightOrigin\n    const parentSub = this.parentSub\n    const info = (this.content.getRef() & binary.BITS5) |\n      (origin === null ? 0 : binary.BIT8) | // origin is defined\n      (rightOrigin === null ? 0 : binary.BIT7) | // right origin is defined\n      (parentSub === null ? 0 : binary.BIT6) // parentSub is non-null\n    encoder.writeInfo(info)\n    if (origin !== null) {\n      encoder.writeLeftID(origin)\n    }\n    if (rightOrigin !== null) {\n      encoder.writeRightID(rightOrigin)\n    }\n    if (origin === null && rightOrigin === null) {\n      const parent = /** @type {AbstractType<any>} */ (this.parent)\n      if (parent._item !== undefined) {\n        const parentItem = parent._item\n        if (parentItem === null) {\n          // parent type on y._map\n          // find the correct key\n          const ykey = findRootTypeKey(parent)\n          encoder.writeParentInfo(true) // write parentYKey\n          encoder.writeString(ykey)\n        } else {\n          encoder.writeParentInfo(false) // write parent id\n          encoder.writeLeftID(parentItem.id)\n        }\n      } else if (parent.constructor === String) { // this edge case was added by differential updates\n        encoder.writeParentInfo(true) // write parentYKey\n        encoder.writeString(parent)\n      } else if (parent.constructor === ID) {\n        encoder.writeParentInfo(false) // write parent id\n        encoder.writeLeftID(parent)\n      } else {\n        error.unexpectedCase()\n      }\n      if (parentSub !== null) {\n        encoder.writeString(parentSub)\n      }\n    }\n    this.content.write(encoder, offset)\n  }\n}\n\n/**\n * @param {UpdateDecoderV1 | UpdateDecoderV2} decoder\n * @param {number} info\n */\nexport const readItemContent = (decoder, info) => contentRefs[info & binary.BITS5](decoder)\n\n/**\n * A lookup map for reading Item content.\n *\n * @type {Array<function(UpdateDecoderV1 | UpdateDecoderV2):AbstractContent>}\n */\nexport const contentRefs = [\n  () => { error.unexpectedCase() }, // GC is not ItemContent\n  readContentDeleted, // 1\n  readContentJSON, // 2\n  readContentBinary, // 3\n  readContentString, // 4\n  readContentEmbed, // 5\n  readContentFormat, // 6\n  readContentType, // 7\n  readContentAny, // 8\n  readContentDoc, // 9\n  () => { error.unexpectedCase() } // 10 - Skip is not ItemContent\n]\n\n/**\n * Do not implement this class!\n */\nexport class AbstractContent {\n  /**\n   * @return {number}\n   */\n  getLength () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {Array<any>}\n   */\n  getContent () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * Should return false if this Item is some kind of meta information\n   * (e.g. format information).\n   *\n   * * Whether this Item should be addressable via `yarray.get(i)`\n   * * Whether this Item should be counted when computing yarray.length\n   *\n   * @return {boolean}\n   */\n  isCountable () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {AbstractContent}\n   */\n  copy () {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {number} offset\n   * @return {AbstractContent}\n   */\n  splice (offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {AbstractContent} right\n   * @return {boolean}\n   */\n  mergeWith (right) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   * @param {Item} item\n   */\n  integrate (transaction, item) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {Transaction} transaction\n   */\n  delete (transaction) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {StructStore} store\n   */\n  gc (store) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @param {UpdateEncoderV1 | UpdateEncoderV2} encoder\n   * @param {number} offset\n   */\n  write (encoder, offset) {\n    throw error.methodUnimplemented()\n  }\n\n  /**\n   * @return {number}\n   */\n  getRef () {\n    throw error.methodUnimplemented()\n  }\n}\n"],"names":["Session","context","errors","sid","uuid4","timestamp","Date","now","started","duration","status","SessionStatus","Ok","init","this","update","prototype","user","ip_address","ipAddress","did","id","email","username","length","undefined","release","environment","userAgent","close","Exited","toJSON","dropUndefinedKeys","toISOString","attrs","user_agent","Hub","client","scope","_version","Scope","_stack","getStackTop","bindClient","isOlderThan","version","setupIntegrations","pushScope","clone","getScope","getStack","push","getClient","popScope","pop","withScope","callback","captureException","exception","hint","eventId","_lastEventId","finalHint","syntheticException","Error","originalException","_invokeClient","__assign","event_id","captureMessage","message","level","captureEvent","event","lastEventId","addBreadcrumb","breadcrumb","_a","_b","getOptions","_c","beforeBreadcrumb","_d","maxBreadcrumbs","dateTimestampInSeconds","mergedBreadcrumb","finalBreadcrumb","consoleSandbox","Math","min","setUser","setTags","tags","setExtras","extras","setTag","key","value","setExtra","extra","setContext","name","configureScope","run","oldHub","makeMain","getIntegration","integration","_oO","logger","warn","startSpan","_callExtensionMethod","startTransaction","customSamplingContext","traceHeaders","captureSession","endSession","_sendSessionUpdate","getSession","_e","setSession","startSession","session","getUser","currentSession","method","args","_i","arguments","apply","__spread","carrier","getMainCarrier","sentry","__SENTRY__","extensions","getGlobalObject","hub","registry","getHubFromCarrier","setHubOnCarrier","getCurrentHub","hasHubOnCarrier","isNodeEnv","activeDomain","domain","active","registryHubTopStack","_Oo","getHubFromActiveDomain","_notifyingListeners","_scopeListeners","_eventProcessors","_breadcrumbs","_user","_tags","_extra","_contexts","newScope","_level","_span","_session","_transactionName","_fingerprint","addScopeListener","addEventProcessor","_notifyScopeListeners","setFingerprint","fingerprint","setLevel","setTransactionName","setTransaction","setSpan","span","getSpan","getTransaction","transaction","spanRecorder","spans","captureContext","updatedScope","Object","keys","isPlainObject","contexts","clear","slice","clearBreadcrumbs","applyToEvent","trace","getTraceContext","transactionName","_applyFingerprint","breadcrumbs","_notifyEventProcessors","getGlobalEventProcessors","processors","index","_this","SyncPromise","resolve","reject","processor","result","isThenable","then","final","forEach","Array","isArray","concat","global","globalEventProcessors","assign","t","s","i","n","p","hasOwnProperty","call","__read","o","m","Symbol","iterator","r","e","ar","next","done","error","callOnHub","wat","toString","Boolean","PREFIX","Logger","_enabled","disable","enable","log","console","join","fallbackGlobalObject","window","self","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","replace","c","random","originalConsole","wrappedLevels","__sentry_original__","process","dynamicRequire","mod","request","require","val","obj","rv","__values","map","States","executor","_state","PENDING","_handlers","_resolve","_setResult","RESOLVED","_reject","reason","REJECTED","state","_value","_executeHandlers","_attachHandler","handler","cachedHandlers","onfulfilled","onrejected","_","all","collection","counter","resolvedCollection","item","TypeError","catch","finally","onfinally","isRejected","dateTimestampSource","nowSeconds","platformPerformance","module","performance","getNodePerformance","timeOrigin","getBrowserPerformance","timestampSource","bind","timing","navigationStart","events","vars","messages","Lexer","reg","style","options","scopeManager","prodParams","JSHINT","api","declared","functions","inblock","indent","lookahead","lex","member","membersOnly","predefined","bang","extraModules","emitter","EventEmitter","checkOption","isStable","type","validNames","unstableNames","trim","test","indexOf","has","removed","isIdentifier","tkn","identifier","isReserved","token","reserved","meta","isFutureReservedWord","inES5","es5","isProperty","strictOnly","option","strict","isStrict","async","yield","supplant","str","data","a","b","combine","dest","src","blacklist","applyOptions","badESOpt","enforceall","enforceopt","bool","enforcing","noenforceall","relaxopt","relaxing","processenforceall","inferEsVersion","quit","tokens","ecmaIdentifiers","inES6","inES8","inES11","warning","regexpu","couch","qunit","rhino","shelljs","node","typed","phantom","prototypejs","devel","dojo","browser","browserify","nonstandard","jasmine","jquery","mootools","worker","wsh","yui","mocha","code","percentage","floor","line","lines","desc","character","from","raw","removeIgnoredMessages","ignored","ignoredLines","isEmpty","err","d","ch","l","w","msg","warnings","info","curr","evidence","filter","maxerr","warningAt","errorAt","addEvalCode","elem","internals","lintingDirective","directiveToken","previous","body","split","predef","idx","parts","charAt","funct","addExported","ch1","substr","numvals","numberVal","isFinite","validthis","hasParsedCode","tn","match","exec","renamed","inverted","unstable","moz","esversion","latedef","unused","shadow","quotmark","caseFallsThrough","peek","j","peekIgnoreEOL","advance","expected","relatedToken","nextToken","prev","shift","check","isSpecial","isEndOfExpr","noin","infix","rbp","sameLine","expression","left","isObject","initial","nameStack","beginsStmt","fud","useFud","nud","lbp","first","led","second","startLine","nobreaknonadjacent","right","laxbreak","nolinebreak","checkComma","opts","laxcomma","property","allowTrailing","symbol","x","syntax","delim","stmt","f","blockstmt","block","reserveName","prefix","arity","plusplus","checkLeftSideAssign","reserve","func","FutureReservedWord","relation","beginsUnaryExpression","typeofValues","isTypoTypeof","values","notypeof","es6","es3","includes","isGlobalEval","isGlobal","assignToken","allowDestructuring","freeze","nativeObject","natives","walkPrototype","isPredefined","walkNative","findNativePrototype","isMetaProperty","reassign","set","destructAssign","bindingtype","assignop","that","exps","bitwise","bitwiseassignop","suffix","optionalidentifier","isName","preserve","spreadrest","operation","checkPunctuator","reachable","controlToken","inBracelessBlock","reach","parseFinalSemicolon","isUnclosed","isSameLine","blockEnd","asi","lastsemic","statement","hasOwnScope","res","stack","addLabel","labelled","unstack","stmtMissingStrict","expr","nonew","statements","directives","current","directive","inES7","undef","ordinary","isfunc","isfatarrow","iscase","old_indent","metrics","nestedBlockDepth","verifyMaxNestedBlockDepthPerFunction","statementCount","validateParams","curly","supportsFnDecl","declaration","toUpperCase","inMoz","noreturnawait","noempty","countMember","legacy","isLoneArrowParam","use","baseTemplateSyntax","template","extend","doTemplateLiteral","noSubst","tail","superNud","nocomma","increaseComplexityCount","paren","eqnull","eqeqeq","tag","scripturl","javascriptURL","forgiveUndef","mp","metaProperty","inFunction","opening","evil","newcap","supernew","classDeclaration","className","classNameToken","inClassBody","addbinding","initialized","initialize","classBody","classToken","accessorType","isStatic","inGenerator","hasConstructor","props","create","preAsync","inES9","saveProperty","propertyName","doMethod","infer","computedPropertyName","saveAccessor","checkProperties","generator","doFunction","isMethod","peekThroughParens","parens","pn1","pn","functor","overwrites","createMetrics","leftOrRbp","ctx","depth","end","complete","classExprBinding","isGenerator","isArrow","ignoreLoopFunc","oldOption","oldIgnored","isAsync","tryClause","internallyAccessibleName","add","paramsInfo","ident","paramsIds","pastDefault","pastRest","loneArg","hasDestructuring","addParam","params","isSimple","parsedOpening","currentParams","destructuringPattern","checkPunctuators","addParamArgs","functionparams","verifyMaxParametersPerFunction","noyield","verifyMaxStatementsPerFunction","verifyMaxComplexityPerFunction","loopfunc","functionStartToken","ComplexityCount","maxstatements","isNumber","maxparams","maxdepth","max","maxcomplexity","cc","checkCondAssignment","boss","setterToken","getterToken","static","isAssignment","assignment","destructuringPatternRecursive","ids","identifiers","openingParsed","recursiveOptions","firstToken","nextInnerDE","assignTarget","assignmentProperty","isRest","element_after_rest","destructuringPatternMatch","zip","blockVariableStatement","lone","letblock","isLet","isConst","isMozillaLet","names","hasInitializer","hasComma","noarg","immed","ret","triggerFnExpr","last","preceeding","isNecessary","singleGroups","application","sub","blocktype","lookupBlockType","isCompArray","esnext","reversed","setState","comprehensiveArrayExpression","isDestAssign","elision","trailingcomma","nextVal","isGeneratorMethod","isAsyncMethod","inObjectBody","conststatement","asyncSymbol","yieldSymbol","letstatement","varstmt","impliedClosure","futurehostile","inexport","export","labelType","enablesStrictMode","forinifcheck","forin","forinifcheckneeded","forinifchecks","hasParameter","catchParameter","each","inES10","withstmt","g","noindent","seenCase","leanswitch","debug","nextop","comma","initializer","bindingPower","targets","target","decl","letscope","foreachtok","afterNext","headContext","hasLabel","isFunc","mozYield","delegatingYield","importSymbol","importName","supportsSuper","moduleSpecifier","ok","setExported","def","exportType","exportedTokens","local","binding","bracketStack","notJson","isClass","isComputed","basic","basictkn","flagName","destructuringAssignOrJsonValue","jsonMode","jsonValue","arrayComprehension","_current","CompArray","mode","variables","_carrays","elt","raw_text","splice","declare","proto","jsonObject","jsonArray","lintEvalCode","globals","priorErrorCount","jdx","internal","itself","escapeRegex","reIgnoreStr","reIgnore","optionKeys","newOptionObj","newIgnoredObj","reset","reservedVars","exported","cb","dict","prop","getOwnPropertyDescriptor","optionKey","scopeManagerInst","on","ev","isJSON","getOption","getCache","cache","setCache","char","listener","removeAllListeners","ignoreDelimiters","delimiterPair","start","RegExp","emit","allowsGlobalUsd","nt","addModule","register","fu","json","impliedGlobals","getImpliedGlobals","implieds","getUsedOrDefinedGlobals","param","lastcharacter","complexity","parameters","unuseds","getUnuseds","jshint","exports","DataView","getNative","Promise","Set","MapCache","setCacheAdd","setCacheHas","SetCache","__data__","WeakMap","thisArg","baseIndexOf","array","comparator","offset","arrayIncludes","arrayIncludesWith","arrayMap","baseUnary","cacheHas","iteratee","isCommon","valuesLength","outer","computed","valuesIndex","predicate","fromIndex","fromRight","arrayPush","isFlattenable","baseFlatten","castPath","toKey","object","path","baseFindIndex","baseIsNaN","strictIndexOf","baseGetTag","isObjectLike","isLength","typedArrayTags","isPrototype","nativeKeys","identity","overRest","setToString","constant","defineProperty","baseSetToString","string","Map","toSource","mapTag","promiseTag","weakMapTag","dataViewTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","Ctor","constructor","ctorString","isArguments","spreadableSymbol","isConcatSpreadable","objectProto","overArg","freeGlobal","freeExports","nodeType","freeModule","freeProcess","nodeUtil","types","transform","arg","nativeMax","otherArgs","shortOut","nativeNow","count","lastCalled","stamp","remaining","baseDifference","baseRest","isArrayLikeObject","difference","baseGet","defaultValue","baseIsArguments","propertyIsEnumerable","isFunction","isArrayLike","root","stubFalse","Buffer","isBuffer","baseKeys","isTypedArray","size","baseIsTypedArray","nodeIsTypedArray","copyArray","isSymbol","stringToPath","toposort","nodes","edges","cursor","sorted","visited","outgoingEdges","len","edge","get","makeOutgoingEdges","nodesHash","makeNodesHash","visit","predecessors","nodeRep","JSON","stringify","outgoing","child","delete","uniqueNodes","jsEscapeRegex","usualEscapeSequences","fromHex","String","fromCodePoint","parseInt","__","varHex","longHex","shortHex","octal","specialCharacter","python","default","_objectWithoutProperties","source","excluded","getOwnPropertySymbols","sourceSymbolKeys","_objectWithoutPropertiesLoose","sourceKeys","klona","enumerable","configurable","writable","k","list","tmp","__proto__","flags","buffer","getOwnPropertyNames","copy","setIfUndefined","createT","appendTo","Observable","_classCallCheck","_observers","_createClass","_f","off","observers","_toConsumableArray","abs","ceil","imul","round","log10","log2","sqrt","trimLeftRegex","Number","isNaN","pow","sign","fromCharCode","fromCamelCaseRegex","fromCamelCase","separator","trimLeft","toLowerCase","utf8TextDecoder","TextEncoder","TextDecoder","fatal","ignoreBOM","decode","Uint8Array","undefinedToNull","_localStorage","VarStoragePolyfill","newValue","localStorage","varStorage","isNode","navigator","platform","computeParams","pargs","argv","currParamName","parg","location","search","kv","_kv$split","_kv$split2","_slicedToArray","getVariable","conditions","storage","getItem","createUint8ArrayViewFromArrayBuffer","hasParam","byteOffset","BIT8","BITS7","BITS31","isInteger","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","math","Encoder","cpos","cbuf","bufs","createEncoder","toUint8Array","encoder","uint8arr","curPos","write","bufferLen","writeUint8","writeVarUint","binary","writeVarInt","isNegative","writeVarString","encodedString","unescape","encodeURIComponent","codePointAt","writeUint8Array","uint8Array","leftCopyLen","rightCopyLen","subarray","writeVarUint8Array","byteLength","writeOnDataView","verifyLen","dview","floatTestBed","writeAny","number","setFloat32","getFloat32","writeFloat32","setFloat64","writeFloat64","setBigInt64","writeBigInt64","RleEncoder","_Encoder","_inherits","_super","_createSuper","writer","flushUintOptRleEncoder","UintOptRleEncoder","flushIntDiffOptRleEncoder","encodedDiff","diff","IntDiffOptRleEncoder","StringEncoder","sarr","lensE","isoCrypto","cryptoRandomBuffer","buf","uint32","Uint32Array","uuidv4Template","uuidv4","methodUnimplemented","unexpectedCase","callAll","fs","Pair","doc","document","mapToStyleString","DOMParser","_step","_iterator","_createForOfIteratorHelper","_step$value","getUnixTime","ELEMENT_NODE","TEXT_NODE","CDATA_SECTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","BOLD","UNBOLD","BLUE","GREY","GREEN","RED","PURPLE","ORANGE","UNCOLOR","_browserStyleMap","_browserStyleMap2","_defineProperty","pair","_nodeStyleMap","_nodeStyleMap2","computeLoggingArgs","env","strBuilder","logArgs","styles","currentStyle","dom","unshift","print","_console","_len","_key","vconsoles","vc","createIterator","time","_ref2","iteratorMap","fmap","_iterator$next","equalFlat","every","hasProperty","DeleteItem","clock","DeleteSet","clients","iterateDeletedStructs","ds","deletes","clientid","structs","store","del","iterateStructs","isDeleted","dis","midindex","mid","midclock","findIndexDS","sortAndMergeDeleteSet","dels","sort","mergeDeleteSets","dss","merged","_loop","dssI","delsLeft","addToDeleteSet","createDeleteSet","writeDeleteSet","encoding","restEncoder","dsitems","resetDsCurVal","writeDsClock","writeDsLen","generateNewClientId","Doc","_Observable2","_super2","_this2","_ref","_ref$guid","guid","_ref$gc","gc","_ref$gcFilter","gcFilter","_ref$meta","_ref$autoLoad","autoLoad","clientID","share","StructStore","_transaction","_transactionCleanups","subdocs","_item","shouldLoad","_this3","transact","parent","subdocsLoaded","origin","_this4","TypeConstructor","AbstractType","_integrate","Constr","_map","_start","_length","YArray","YText","YMap","YXmlFragment","_this5","subdoc","destroy","content","deleted","_objectSpread","subdocsAdded","subdocsRemoved","_get","_getPrototypeOf","eventName","DSEncoderV1","UpdateEncoderV1","_DSEncoderV","_super5","isYKey","any","embed","DSEncoderV2","dsCurrVal","UpdateEncoderV2","_DSEncoderV2","_super6","_this7","keyMap","keyClock","keyClockEncoder","clientEncoder","leftClockEncoder","rightClockEncoder","infoEncoder","stringEncoder","parentInfoEncoder","typeRefEncoder","lenEncoder","writeClientsStructs","_sm","sm","getState","getStateVector","entries","_ref3","startNewStructs","findIndexSS","writeClient","firstStruct","writeStructs","EventHandler","createEventHandler","addEventHandlerListener","eventHandler","removeEventHandlerListener","callEventHandlerListeners","arg0","arg1","ID","compareIDs","createID","findRootTypeKey","_step3","_iterator3","_step3$value","isParentOf","Snapshot","sv","createSnapshot","isVisible","snapshot","splitSnapshotAffectedStructs","getItemCleanStart","pendingStructs","pendingDs","struct","lastStruct","addStruct","findIndexCleanStart","Item","splitItem","getItemCleanEnd","GC","clockStart","clockEnd","Transaction","deleteSet","beforeState","afterState","changed","changedParentTypes","_mergeStructs","writeUpdateMessageFromTransaction","_step2","_iterator2","_step2$value","writeStructsFromTransaction","addChangedTypeToTransaction","parentSub","tryToMergeWithLeft","pos","mergeWith","tryGcDeleteSet","_step8","_iterator8","_step8$value","deleteItems","di","deleteItem","endDeleteItemClock","si","keep","tryMergeDeleteSet","cleanupTransactions","transactionCleanups","mergeStructs","subs","itemtype","_callObserver","currentTarget","event1","event2","_dEH","beforeClock","firstChangePos","_mergeStructs$_i6$id","replacedStructPos","logging","loaded","added","initialCall","StackItem","deletions","insertions","popStackItem","undoManager","eventType","_tr","_loop3","stackItem","itemsToRedo","itemsToDelete","performedChange","redone","_followRedone2","followRedone","some","redoItem","deleteFilter","subProps","_searchMarker","UndoManager","_Observable3","_super7","typeScope","_this10","_ref5","_ref5$captureTimeout","captureTimeout","_ref5$deleteFilter","_ref5$trackedOrigins","trackedOrigins","_assertThisInitialized","undoStack","redoStack","undoing","redoing","lastChange","stopCapturing","endClock","startClock","lastOp","keepItem","_this11","clearItem","YEvent","_changes","_keys","_delta","getPathTo","_this12","action","oldValue","adds","getContent","changes","delta","packOp","insert","retain","globalSearchMarkerTimestamp","ArraySearchMarker","marker","overwriteMarker","findMarker","yarray","reduce","pindex","refreshMarkerTimestamp","countable","searchMarker","pm","markPosition","updateMarkerChanges","callTypeObservers","changedType","_eH","y","parentSubs","typeListSlice","cs","typeListToArray","typeListForEach","typeListMap","typeListGet","typeListInsertGenericsAfter","referenceItem","ownClientId","jsonContent","packJsonContent","lastId","ContentAny","integrate","ContentBinary","ContentDoc","ContentType","lengthExceeded","typeListInsertGenerics","startIndex","typeListDelete","startLength","typeMapDelete","typeMapSet","typeMapGet","typeMapGetAll","typeMapHas","createMapIterator","entry","YArrayEvent","_YEvent","_super8","_this13","_AbstractType","_Symbol$iterator","_super9","_this14","_prelimContent","toArray","el","_this$_prelimContent","_this15","_this16","_ref6","currentContent","currentContentIndex","typeListCreateIterator","writeTypeRef","YArrayRefID","items","YMapEvent","_YEvent2","_super10","ymap","_this17","keysChanged","_AbstractType2","_Symbol$iterator2","_super11","_this18","_this19","_this20","_this21","_this22","_this23","YMapRefID","equalAttrs","ItemTextListPosition","currentAttributes","ContentEmbed","ContentString","ContentFormat","updateCurrentAttributes","findNextPosition","findPosition","insertNegatedAttributes","currPos","negatedAttributes","forward","nextFormat","format","minimizeAttributeChanges","attributes","insertAttributes","currentVal","insertText","text","getLength","formatText","_currPos$right$conten","attr","newlines","cleanupFormattingGap","startAttributes","endAttributes","cleanups","deleteText","startAttrs","YTextEvent","_YEvent3","_super12","ytext","_this24","childListChanged","_this25","oldAttributes","deleteLen","addOp","op","_item$content","curVal","_AbstractType3","_super13","_this26","_pending","applyDelta","toDelta","_this27","_step9","foundFormattingItem","_iterator9","_step9$value","afterClock","cleanupYTextFormatting","cleanupContextlessFormattingGap","_this28","_ref7","_ref7$sanitize","sanitize","ins","prevSnapshot","computeYChange","ops","packStr","addAttributes","_loop4","cur","_this29","_this30","insertEmbed","_this31","_this32","attributeName","_this33","removeAttribute","attributeValue","_this34","setAttribute","YTextRefID","YXmlTreeWalker","_Symbol$iterator3","_filter","_root","_currentNode","_firstCall","YXmlElement","_AbstractType4","_super14","_this35","_first","query","element","nodeName","YXmlEvent","xml","_document","hooks","fragment","createDocumentFragment","_createAssociation","xmlType","insertBefore","toDOM","_this$_prelimContent2","_this36","ref","_this37","refItem","pc","findIndex","_this38","YXmlFragmentRefID","_YXmlFragment","_super15","_this39","_prelimAttrs","_this40","getAttributes","stringBuilder","keysLen","toLocaleLowerCase","attrsString","_this41","_this42","createElement","yxml","appendChild","YXmlElementRefID","writeKey","_YEvent4","_super16","_this43","attributesChanged","AbstractStruct","encodingRef","_AbstractStruct","_super19","writeInfo","writeLen","writeBuf","ContentDeleted","markDeleted","writeString","writeJSON","firstCharCode","charCodeAt","_copy","_write","nextID","leftItem","_leftItem$id2","rightItem","rightOrigin","redoitems","ownClientID","parentItem","leftTrace","rightTrace","nextClock","nextId","redoneItem","_AbstractStruct2","_super20","_this45","isCountable","isMarked","doKeep","doDelete","conflictingItems","itemsBeforeOrigin","_this46","parentGCd","newStruct","replaceStruct","getRef","writeLeftID","writeRightID","ykey","writeParentInfo"],"sourceRoot":""}