{"version":3,"file":"static/js/998.c73b6c4d.chunk.js","mappings":"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AAS,K,mCC3Wb,KACE,CACEtO,KAAM,UACNkS,IAAK,sDACLC,QACE,+FACFC,YAAa,yBACbC,KAAM,kCACNC,OAAQ,MACRC,QAAS,WAEX,CACEvS,KAAM,eACNoS,YAAa,2DACbE,OAAQ,QACRH,QAAS,oDACTI,QAAS,QACTL,IAAI,mCACJG,KAAM,qCAER,CACErS,KAAM,QACNoS,YAAa,wCACbE,OAAQ,QACRH,QAAS,6DACTI,QAAS,QACTL,IAAK,sEACLG,KAAM,qCAER,CACErS,KAAM,+BACNoS,YAAa,iCACbE,OAAQ,YACRH,QACE,+FACFI,QAAS,QACTL,IACE,mGACFG,KAAM,yCAER,CACErS,KAAM,wBACNoS,YAAa,4CACbE,OAAQ,WACRH,QAAS,iDACTI,QAAS,QACTL,IACE,oFACFG,KAAM,wCAER,CACErS,KAAM,SACNkS,IAAK,6DACLE,YACE,wUACFE,OAAQ,QACRH,QACE,yFACFI,QAAS,SACTF,KAAM,qCAER,CACErS,KAAM,eACNoS,YACE,wGACFE,OAAQ,QACRH,QAAS,iCACTI,QAAS,QACTL,IAAI,qDACJG,KAAM,qCAER,CACErS,KAAM,KACNoS,YAAa,8DACbE,OAAQ,eACRH,QAAS,2CACTI,QAAS,SACTL,IAAK,yCACLG,KAAM,4CAER,CACErS,KAAM,WACNkS,IAAK,oEACLE,YACE,oFACFE,OAAQ,WACRC,QAAS,SACTF,KAAM,uCACNF,QAAS,2DAEX,CACEnS,KAAM,UACNkS,IAAK,sEACLE,YAAa,yCACbE,OAAQ,UACRC,QAAS,SACTF,KAAM,sCACNF,QAAS,oDAEX,CACEnS,KAAM,cACNoS,YAAa,4BACbE,OAAQ,WACRH,QAAS,sDACTI,QAAS,QACTL,IAAI,8DACJG,KAAM,wCAER,CACErS,KAAM,kBACNoS,YAAa,mCACbE,OAAQ,YACRH,QAAS,+CACTI,QAAS,SACTL,IAAK,sDACLG,KAAM,yCAER,CACErS,KAAM,WACNkS,IAAK,8DACLE,YACE,gGACFG,QAAS,QACTD,OAAQ,WACRH,QAAS,iDACTE,KAAM,wCAER,CACErS,KAAM,4BACNkS,IACE,qGACFK,QAA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","sources":["assets/images/placeholder-image.svg","ce/constants/ReduxActionConstants.tsx","components/editorComponents/ActionCreator/constants.ts","constants/AppsmithActionConstants/formConfig/ApiDatasourceFormsButtonConfig.ts","constants/AppsmithActionConstants/formConfig/ApiDependencyConfigs.ts","constants/AppsmithActionConstants/formConfig/ApiEditorConfigs.ts","constants/AppsmithActionConstants/formConfig/ApiSettingsConfig.ts","constants/AppsmithActionConstants/formConfig/GoogleSheetsSettingsConfig.ts","constants/AppsmithActionConstants/formConfig/QuerySettingsConfig.ts","constants/ThemeConstants.tsx","constants/WidgetConstants.tsx","constants/WidgetValidation.ts","constants/componentClassNameConstants.ts","entities/Action/actionProperties.ts","entities/Action/index.ts","entities/App.ts","entities/AppsmithConsole/index.ts","entities/DataTree/utils.ts","entities/DataTree/dataTreeWidget.ts","entities/Datasource/index.ts","entities/Widget/utils.ts","pages/Editor/Explorer/Libraries/recommendedLibraries.ts","reducers/uiReducers/libraryReducer.ts","selectors/entitiesSelector.ts","selectors/usersSelectors.tsx","utils/ReducerUtils.ts","utils/WidgetFactory.tsx","utils/WidgetFactoryHelpers.ts","utils/WidgetFeatures.ts","utils/formControl/formControlTypes.ts","utils/generators.tsx","utils/validation/getIsSafeURL.ts","workers/Evaluation/fns/actionFns.ts","workers/Evaluation/fns/copyToClipboard.ts","workers/Evaluation/fns/download.ts","workers/Evaluation/fns/geolocationFns.ts","workers/Evaluation/fns/modalFns.ts","workers/Evaluation/fns/navigateTo.ts","workers/Evaluation/fns/postWindowMessage.ts","workers/Evaluation/fns/resetWidget.ts","workers/Evaluation/fns/showAlert.ts","workers/Evaluation/fns/storeFns.ts","workers/Evaluation/fns/utils/ExecutionMetaData.ts","workers/Evaluation/fns/utils/Promisify.ts","workers/Evaluation/fns/utils/TriggerEmitter.ts","ce/workers/Evaluation/JSObject/postJSFunctionExecution.ts","workers/Evaluation/fns/utils/jsObjectFnFactory.ts","workers/Evaluation/helpers.ts","workers/Evaluation/indirectEval.ts","workers/common/JSLibrary/index.ts"],"sourcesContent":["var _circle;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPlaceholderImage(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 34,\n    height: 34,\n    fill: \"none\",\n    viewBox: \"0 0 34 34\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 17,\n    cy: 17,\n    r: 17,\n    fill: \"#C4C4C4\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlaceholderImage);\nexport default __webpack_public_path__ + \"static/media/placeholder-image.f19325e358ab572f15751050247ee63d.svg\";\nexport { ForwardRef as ReactComponent };","import { ERROR_CODES } from \"@appsmith/constants/ApiConstants\";\nimport { Workspace } from \"@appsmith/constants/workspaceConstants\";\nimport { ApplicationVersion } from \"actions/applicationActions\";\nimport {\n  AppEmbedSetting,\n  ApplicationPagePayload,\n  GitApplicationMetadata,\n} from \"api/ApplicationApi\";\nimport {\n  LayoutOnLoadActionErrors,\n  PageAction,\n} from \"constants/AppsmithActionConstants/ActionConstants\";\nimport { AppLayoutConfig } from \"reducers/entityReducers/pageListReducer\";\nimport { WidgetCardProps, WidgetProps } from \"widgets/BaseWidget\";\n\nexport const ReduxSagaChannels = {\n  WEBSOCKET_APP_LEVEL_WRITE_CHANNEL: \"WEBSOCKET_APP_LEVEL_WRITE_CHANNEL\",\n  WEBSOCKET_PAGE_LEVEL_WRITE_CHANNEL: \"WEBSOCKET_PAGE_LEVEL_WRITE_CHANNEL\",\n};\n\nexport const ReduxActionTypes = {\n  TOGGLE_INSTALLER: \"TOGGLE_INSTALLER\",\n  FETCH_JS_LIBRARIES_INIT: \"FETCH_JS_LIBRARIES_INIT\",\n  FETCH_JS_LIBRARIES_SUCCESS: \"FETCH_JS_LIBRARIES_SUCCESS\",\n  CLEAR_PROCESSED_INSTALLS: \"CLEAR_PROCESSED_INSTALLS\",\n  INSTALL_LIBRARY_INIT: \"INSTALL_LIBRARY_INIT\",\n  INSTALL_LIBRARY_START: \"INSTALL_LIBRARY_START\",\n  INSTALL_LIBRARY_SUCCESS: \"INSTALL_LIBRARY_SUCCESS\",\n  UNINSTALL_LIBRARY_INIT: \"UNINSTALL_LIBRARY_INIT\",\n  UNINSTALL_LIBRARY_SUCCESS: \"UNINSTALL_LIBRARY_SUCCESS\",\n  GIT_DISCARD_CHANGES_SUCCESS: \"GIT_DISCARD_CHANGES_SUCCESS\",\n  GIT_DISCARD_CHANGES: \"GIT_DISCARD_CHANGES\",\n  DELETE_BRANCH_INIT: \"DELETE_BRANCH_INIT\",\n  DELETING_BRANCH: \"DELETING_BRANCH\",\n  DELETE_BRANCH_SUCCESS: \"DELETE_BRANCH_SUCCESS\",\n  SHOW_RECONNECT_DATASOURCE_MODAL: \"SHOW_RECONNECT_DATASOURCE_MODAL\",\n  RESET_UNCONCONFIGURED_DATASOURCES_LIST_DURING_IMPORT:\n    \"RESET_UNCONCONFIGURED_DATASOURCES_LIST_DURING_IMPORT\",\n  RESET_DATASOURCE_CONFIG_FETCHED_FOR_IMPORT_FLAG:\n    \"RESET_DATASOURCE_CONFIG_FETCHED_FOR_IMPORT_FLAG\",\n  SET_UNCONFIGURED_DATASOURCES: \"SET_UNCONFIGURED_DATASOURCES\",\n  SET_WORKSPACE_ID_FOR_IMPORT: \"SET_WORKSPACE_ID_FOR_IMPORT\",\n  SET_PAGE_ID_FOR_IMPORT: \"SET_PAGE_ID_FOR_IMPORT\",\n  RESET_SSH_KEY_PAIR: \"RESET_SSH_KEY_PAIR\",\n  GIT_INFO_INIT: \"GIT_INFO_INIT\",\n  IMPORT_APPLICATION_FROM_GIT_ERROR: \"IMPORT_APPLICATION_FROM_GIT_ERROR\",\n  IMPORT_APPLICATION_FROM_GIT_SUCCESS: \"IMPORT_APPLICATION_FROM_GIT_SUCCESS\",\n  IMPORT_APPLICATION_FROM_GIT_STATUS_RESET:\n    \"IMPORT_APPLICATION_FROM_GIT_STATUS_RESET\",\n  UPDATE_DATASOURCE_IMPORT_SUCCESS: \"UPDATE_DATASOURCE_IMPORT_SUCCESS\",\n  INIT_DATASOURCE_CONNECTION_DURING_IMPORT_REQUEST:\n    \"INIT_DATASOURCE_CONNECTION_DURING_IMPORT_REQUEST\",\n  INIT_DATASOURCE_CONNECTION_DURING_IMPORT_SUCCESS:\n    \"INIT_DATASOURCE_CONNECTION_DURING_IMPORT_SUCCESS\",\n  SET_ENTITY_INFO: \"SET_ENTITY_INFO\",\n  UPDATE_META_STATE: \"UPDATE_META_STATE\",\n  REVOKE_GIT: \"REVOKE_GIT\",\n  SHOW_CONNECT_GIT_MODAL: \"SHOW_CONNECT_GIT_MODAL\",\n  SET_SHOULD_SHOW_REPO_LIMIT_ERROR_MODAL:\n    \"SET_SHOULD_SHOW_REPO_LIMIT_ERROR_MODAL\",\n  SET_SHOULD_SHOW_DISCONNECT_GIT_MODAL: \"SET_SHOULD_SHOW_DISCONNECT_GIT_MODAL\",\n  RESET_PULL_MERGE_STATUS: \"RESET_PULL_MERGE_STATUS\",\n  GIT_PULL_INIT: \"GIT_PULL_INIT\",\n  GIT_PULL_SUCCESS: \"GIT_PULL_SUCCESS\",\n  SET_APP_VERSION_ON_WORKER: \"SET_APP_VERSION_ON_WORKER\",\n  CLEAR_COMMIT_ERROR_STATE: \"CLEAR_COMMIT_ERROR_STATE\",\n  CLEAR_COMMIT_SUCCESSFUL_STATE: \"CLEAR_COMMIT_SUCCESSFUL_STATE\",\n  FETCH_MERGE_STATUS_INIT: \"FETCH_MERGE_STATUS_INIT\",\n  FETCH_MERGE_STATUS_SUCCESS: \"FETCH_MERGE_STATUS_SUCCESS\",\n  RESET_MERGE_STATUS: \"RESET_MERGE_STATUS\",\n  MERGE_BRANCH_INIT: \"MERGE_BRANCH_INIT\",\n  MERGE_BRANCH_SUCCESS: \"MERGE_BRANCH_SUCCESS\",\n  FETCH_GIT_STATUS_INIT: \"FETCH_GIT_STATUS_INIT\",\n  FETCH_GIT_STATUS_SUCCESS: \"FETCH_GIT_STATUS_SUCCESS\",\n  UPDATE_BRANCH_LOCALLY: \"UPDATE_BRANCH_LOCALLY\",\n  FETCH_BRANCHES_INIT: \"FETCH_BRANCHES_INIT\",\n  FETCH_BRANCHES_SUCCESS: \"FETCH_BRANCHES_SUCCESS\",\n  APP_COLLAB_SET_CONCURRENT_PAGE_EDITORS:\n    \"APP_COLLAB_SET_CONCURRENT_PAGE_EDITORS\",\n  FETCH_SSH_KEY_PAIR_INIT: \"FETCH_SSH_KEY_PAIR_INIT\",\n  INIT_SSH_KEY_PAIR_WITH_NULL: \"INIT_SSH_KEY_PAIR_WITH_NULL\",\n  FETCH_SSH_KEY_PAIR_SUCCESS: \"FETCH_SSH_KEY_PAIR_SUCCESS\",\n  SET_IS_IMPORT_APP_VIA_GIT_MODAL_OPEN: \"SET_IS_IMPORT_APP_VIA_GIT_MODAL_OPEN\",\n  FETCH_GLOBAL_GIT_CONFIG_INIT: \"FETCH_GLOBAL_GIT_CONFIG_INIT\",\n  FETCH_GLOBAL_GIT_CONFIG_SUCCESS: \"FETCH_GLOBAL_GIT_CONFIG_SUCCESS\",\n  UPDATE_GLOBAL_GIT_CONFIG_INIT: \"UPDATE_GLOBAL_GIT_CONFIG_INIT\",\n  UPDATE_GLOBAL_GIT_CONFIG_SUCCESS: \"UPDATE_GLOBAL_GIT_CONFIG_SUCCESS\",\n  FETCH_LOCAL_GIT_CONFIG_INIT: \"FETCH_LOCAL_GIT_CONFIG_INIT\",\n  FETCH_LOCAL_GIT_CONFIG_SUCCESS: \"FETCH_LOCAL_GIT_CONFIG_SUCCESS\",\n  UPDATE_LOCAL_GIT_CONFIG_INIT: \"UPDATE_LOCAL_GIT_CONFIG_INIT\",\n  UPDATE_LOCAL_GIT_CONFIG_SUCCESS: \"UPDATE_LOCAL_GIT_CONFIG_SUCCESS\",\n  SHOW_CREATE_GIT_BRANCH_POPUP: \"SHOW_CREATE_GIT_BRANCH_POPUP\",\n  SHOW_ERROR_POPUP: \"SHOW_ERROR_POPUP\",\n\n  CONNECT_TO_GIT_INIT: \"CONNECT_TO_GIT_INIT\",\n  CONNECT_TO_GIT_SUCCESS: \"CONNECT_TO_GIT_SUCCESS\",\n\n  CREATE_NEW_BRANCH_INIT: \"CREATE_NEW_BRANCH_INIT\",\n  SWITCH_GIT_BRANCH_INIT: \"SWITCH_GIT_BRANCH_INIT\",\n  COMMIT_TO_GIT_REPO_INIT: \"COMMIT_TO_GIT_REPO_INIT\",\n  COMMIT_TO_GIT_REPO_SUCCESS: \"COMMIT_TO_GIT_REPO_SUCCESS\",\n  PUSH_TO_GIT_INIT: \"PUSH_TO_GIT_INIT\",\n  PUSH_TO_GIT_SUCCESS: \"PUSH_TO_GIT_SUCCESS\",\n  SET_IS_GIT_SYNC_MODAL_OPEN: \"SET_IS_GIT_SYNC_MODAL_OPEN\",\n  APP_COLLAB_LIST_EDITORS: \"APP_COLLAB_LIST_EDITORS\",\n  APP_COLLAB_RESET_EDITORS: \"APP_COLLAB_RESET_EDITORS\",\n  APP_COLLAB_SET_EDITORS_POINTER_DATA: \"APP_COLLAB_SET_EDITORS_POINTER_DATA\",\n  APP_COLLAB_UNSET_EDITORS_POINTER_DATA:\n    \"APP_COLLAB_UNSET_EDITORS_POINTER_DATA\",\n  APP_COLLAB_RESET_EDITORS_POINTER_DATA:\n    \"APP_COLLAB_RESET_EDITORS_POINTER_DATA\",\n  SET_SEARCH_FILTER_CONTEXT: \"SET_SEARCH_FILTER_CONTEXT\",\n  INSERT_SNIPPET: \"INSERT_SNIPPET\",\n  CANCEL_SNIPPET: \"CANCEL_SNIPPET\",\n  FETCH_FEATURE_FLAGS_INIT: \"FETCH_FEATURE_FLAGS_INIT\",\n  FETCH_FEATURE_FLAGS_SUCCESS: \"FETCH_FEATURE_FLAGS_SUCCESS\",\n  BIND_DATA_TO_WIDGET: \"BIND_DATA_TO_WIDGET\",\n  BIND_DATA_ON_CANVAS: \"BIND_DATA_ON_CANVAS\",\n  SET_SHOW_APP_INVITE_USERS_MODAL: \"SET_SHOW_APP_INVITE_USERS_MODAL\",\n  UPLOAD_PROFILE_PHOTO: \"UPLOAD_PROFILE_PHOTO\",\n  REMOVE_PROFILE_PHOTO: \"REMOVE_PROFILE_PHOTO\",\n  UPDATE_PHOTO_ID: \"UPDATE_PHOTO_ID\",\n  PROCEED_TO_NEXT_TOUR_STEP: \"PROCEED_TO_NEXT_TOUR_STEP\",\n  SET_ACTIVE_TOUR: \"SET_ACTIVE_TOUR\",\n  RESET_ACTIVE_TOUR: \"RESET_ACTIVE_TOUR\",\n  SET_ACTIVE_TOUR_INDEX: \"SET_ACTIVE_TOUR_INDEX\",\n  INIT_APP_LEVEL_SOCKET_CONNECTION: \"INIT_APP_LEVEL_SOCKET_CONNECTION\",\n  INIT_PAGE_LEVEL_SOCKET_CONNECTION: \"INIT_PAGE_LEVEL_SOCKET_CONNECTION\",\n  SET_IS_APP_LEVEL_WEBSOCKET_CONNECTED: \"SET_IS_APP_LEVEL_WEBSOCKET_CONNECTED\",\n  SET_IS_PAGE_LEVEL_WEBSOCKET_CONNECTED:\n    \"SET_IS_PAGE_LEVEL_WEBSOCKET_CONNECTED\",\n  SET_SNIPING_MODE: \"SET_SNIPING_MODE\",\n  RESET_SNIPING_MODE: \"RESET_SNIPING_MODE\",\n  RESET_EDITOR_REQUEST: \"RESET_EDITOR_REQUEST\",\n  RESET_EDITOR_SUCCESS: \"RESET_EDITOR_SUCCESS\",\n  INITIALIZE_EDITOR: \"INITIALIZE_EDITOR\",\n  INITIALIZE_EDITOR_SUCCESS: \"INITIALIZE_EDITOR_SUCCESS\",\n  REPORT_ERROR: \"REPORT_ERROR\",\n  FLUSH_ERRORS: \"FLUSH_ERRORS\",\n  FLUSH_AND_REDIRECT: \"FLUSH_AND_REDIRECT\",\n  REDIRECT_TO_NEW_INTEGRATIONS: \"REDIRECT_TO_NEW_INTEGRATIONS\",\n  SAFE_CRASH_APPSMITH: \"SAFE_CRASH_APPSMITH\",\n  SAFE_CRASH_APPSMITH_REQUEST: \"SAFE_CRASH_APPSMITH_REQUEST\",\n  INIT_CANVAS_LAYOUT: \"INIT_CANVAS_LAYOUT\",\n  FETCH_CANVAS: \"FETCH_CANVAS\",\n  CLEAR_CANVAS: \"CLEAR_CANVAS\",\n  FETCH_PAGE_INIT: \"FETCH_PAGE_INIT\",\n  FETCH_PAGE_SUCCESS: \"FETCH_PAGE_SUCCESS\",\n  FETCH_ALL_PAGE_ENTITY_COMPLETION: \"FETCH_ALL_PAGE_ENTITY_COMPLETION\",\n  DROP_WIDGET_CANVAS: \"DROP_WIDGET_CANVAS\",\n  REMOVE_WIDGET_CANVAS: \"REMOVE_WIDGET_CANVAS\",\n  LOAD_WIDGET_PANE: \"LOAD_WIDGET_PANE\",\n  ZOOM_IN_CANVAS: \"ZOOM_IN_CANVAS\",\n  ZOOM_OUT_CANVAS: \"ZOOM_OUT_CANVAS\",\n  START_CANVAS_SELECTION_FROM_EDITOR: \"START_CANVAS_SELECTION_FROM_EDITOR\",\n  STOP_CANVAS_SELECTION_FROM_EDITOR: \"STOP_CANVAS_SELECTION_FROM_EDITOR\",\n  START_CANVAS_SELECTION: \"START_CANVAS_SELECTION\",\n  STOP_CANVAS_SELECTION: \"STOP_CANVAS_SELECTION\",\n  UNDO_CANVAS_ACTION: \"UNDO_CANVAS_ACTION\",\n  REDO_CANVAS_ACTION: \"REDO_CANVAS_ACTION\",\n  LOAD_WIDGET_CONFIG: \"LOAD_WIDGET_CONFIG\",\n  LOAD_PROPERTY_CONFIG: \"LOAD_PROPERTY_CONFIG\",\n  UPDATE_APPLICATION: \"UPDATE_APPLICATION\",\n  UPDATE_APP_LAYOUT: \"UPDATE_APP_LAYOUT\",\n  UPDATE_APPLICATION_SUCCESS: \"UPDATE_APPLICATION_SUCCESS\",\n  PUBLISH: \"PUBLISH\",\n  DEBUGGER_LOG: \"DEBUGGER_LOG\",\n  DEBUGGER_LOG_INIT: \"DEBUGGER_LOG_INIT\",\n  DEBUGGER_ERROR_ANALYTICS: \"DEBUGGER_ERROR_ANALYTICS\",\n  DEBUGGER_ADD_ERROR_LOGS: \"DEBUGGER_ADD_ERROR_LOGS\",\n  DEBUGGER_DELETE_ERROR_LOG: \"DEBUGGER_DELETE_ERROR_LOG\",\n  DEBUGGER_ADD_ERROR_LOG_INIT: \"DEBUGGER_ADD_ERROR_LOG_INIT\",\n  DEBUGGER_DELETE_ERROR_LOG_INIT: \"DEBUGGER_DELETE_ERROR_LOG_INIT\",\n  CLEAR_DEBUGGER_LOGS: \"CLEAR_DEBUGGER_LOGS\",\n  SHOW_DEBUGGER: \"SHOW_DEBUGGER\",\n  HIDE_DEBUGGER_ERRORS: \"HIDE_DEBUGGER_ERRORS\",\n  SET_CURRENT_DEBUGGER_TAB: \"SET_CURRENT_DEBUGGER_TAB\",\n  SET_THEME: \"SET_THEME\",\n  FETCH_WIDGET_CARDS: \"FETCH_WIDGET_CARDS\",\n  FETCH_WIDGET_CARDS_SUCCESS: \"FETCH_WIDGET_CARDS_SUCCESS\",\n  ADD_PAGE_WIDGET: \"ADD_PAGE_WIDGET\",\n  REMOVE_PAGE_WIDGET: \"REMOVE_PAGE_WIDGET\",\n  LOAD_API_RESPONSE: \"LOAD_API_RESPONSE\",\n  LOAD_QUERY_RESPONSE: \"LOAD_QUERY_RESPONSE\",\n  RUN_ACTION_SHORTCUT_REQUEST: \"RUN_ACTION_SHORTCUT_REQUEST\",\n  RUN_ACTION_REQUEST: \"RUN_ACTION_REQUEST\",\n  RUN_ACTION_CANCELLED: \"RUN_ACTION_CANCELLED\",\n  RUN_ACTION_SUCCESS: \"RUN_ACTION_SUCCESS\",\n  CLEAR_ACTION_RESPONSE: \"CLEAR_ACTION_RESPONSE\",\n  INIT_API_PANE: \"INIT_API_PANE\",\n  API_PANE_CHANGE_API: \"API_PANE_CHANGE_API\",\n  EXECUTE_TRIGGER_REQUEST: \"EXECUTE_TRIGGER_REQUEST\",\n  LOAD_CANVAS_ACTIONS: \"LOAD_CANVAS_ACTIONS\",\n  SAVE_PAGE_INIT: \"SAVE_PAGE_INIT\",\n  SAVE_PAGE_SUCCESS: \"SAVE_PAGE_SUCCESS\",\n  UPDATE_LAYOUT: \"UPDATE_LAYOUT\",\n  WIDGET_ADD_CHILD: \"WIDGET_ADD_CHILD\",\n  WIDGET_CHILD_ADDED: \"WIDGET_CHILD_ADDED\",\n  WIDGET_REMOVE_CHILD: \"WIDGET_REMOVE_CHILD\",\n  WIDGETS_MOVE: \"WIDGETS_MOVE\",\n  WIDGETS_ADD_CHILD_AND_MOVE: \"WIDGETS_ADD_CHILD_AND_MOVE\",\n  WIDGET_RESIZE: \"WIDGET_RESIZE\",\n  WIDGET_DELETE: \"WIDGET_DELETE\",\n  WIDGET_BULK_DELETE: \"WIDGET_BULK_DELETE\",\n  WIDGET_SINGLE_DELETE: \"WIDGET_SINGLE_DELETE\",\n  SHOW_PROPERTY_PANE: \"SHOW_PROPERTY_PANE\",\n  UPDATE_CANVAS_LAYOUT: \"UPDATE_CANVAS_LAYOUT\",\n  UPDATE_WIDGET_PROPERTY_REQUEST: \"UPDATE_WIDGET_PROPERTY_REQUEST\",\n  UPDATE_WIDGET_PROPERTY: \"UPDATE_WIDGET_PROPERTY\",\n  UPDATE_WIDGET_DYNAMIC_PROPERTY: \"UPDATE_WIDGET_DYNAMIC_PROPERTY\",\n  BATCH_UPDATE_WIDGET_PROPERTY: \"BATCH_UPDATE_WIDGET_PROPERTY\",\n  BATCH_UPDATE_MULTIPLE_WIDGETS_PROPERTY:\n    \"BATCH_UPDATE_MULTIPLE_WIDGETS_PROPERTY\",\n  DELETE_WIDGET_PROPERTY: \"DELETE_WIDGET_PROPERTY\",\n  FETCH_PROPERTY_PANE_CONFIGS_INIT: \"FETCH_PROPERTY_PANE_CONFIGS_INIT\",\n  FETCH_PROPERTY_PANE_CONFIGS_SUCCESS: \"FETCH_PROPERTY_PANE_CONFIGS_SUCCESS\",\n  FETCH_CONFIGS_INIT: \"FETCH_CONFIGS_INIT\",\n  ADD_WIDGET_REF: \"ADD_WIDGET_REF\",\n  CREATE_ACTION_INIT: \"CREATE_ACTION_INIT\",\n  CREATE_ACTION_SUCCESS: \"CREATE_ACTION_SUCCESS\",\n  FETCH_ACTIONS_INIT: \"FETCH_ACTIONS_INIT\",\n  FETCH_ACTIONS_SUCCESS: \"FETCH_ACTIONS_SUCCESS\",\n  UPDATE_ACTION_INIT: \"UPDATE_ACTION_INIT\",\n  UPDATE_ACTION_SUCCESS: \"UPDATE_ACTION_SUCCESS\",\n  DELETE_ACTION_INIT: \"DELETE_ACTION_INIT\",\n  SET_DATASOURCE_EDITOR_MODE: \"SET_DATASOURCE_EDITOR_MODE\",\n  SET_DATASOURCE_COLLAPSIBLE_STATE: \"SET_DATASOURCE_COLLAPSIBLE_STATE\",\n  SET_ALL_DATASOURCE_COLLAPSIBLE_STATE: \"SET_ALL_DATASOURCE_COLLAPSIBLE_STATE\",\n  DELETE_ACTION_SUCCESS: \"DELETE_ACTION_SUCCESS\",\n  SHOW_ACTION_MODAL: \"SHOW_ACTION_MODAL\",\n  CANCEL_ACTION_MODAL: \"CANCEL_ACTION_MODAL\",\n  CONFIRM_ACTION_MODAL: \"CONFIRM_ACTION_MODAL\",\n  CREATE_QUERY_INIT: \"CREATE_QUERY_INIT\",\n  ONBOARDING_CREATE_APPLICATION: \"ONBOARDING_CREATE_APPLICATION\",\n  LOAD_GUIDED_TOUR: \"LOAD_GUIDED_TOUR\",\n  LOAD_GUIDED_TOUR_INIT: \"LOAD_GUIDED_TOUR_INIT\",\n  SET_IS_RECONNECTING_DATASOURCES_MODAL_OPEN:\n    \"SET_IS_RECONNECTING_DATASOURCES_MODAL_OPEN\",\n  FETCH_DATASOURCES_INIT: \"FETCH_DATASOURCES_INIT\",\n  FETCH_DATASOURCES_SUCCESS: \"FETCH_DATASOURCES_SUCCESS\",\n  FETCH_MOCK_DATASOURCES_INIT: \"FETCH_MOCK_DATASOURCES_INIT\",\n  FETCH_MOCK_DATASOURCES_SUCCESS: \"FETCH_MOCK_DATASOURCES_SUCCESS\",\n  ADD_MOCK_DATASOURCES_INIT: \"ADD_MOCK_DATASOURCES_INIT\",\n  ADD_MOCK_DATASOURCES_SUCCESS: \"ADD_MOCK_DATASOURCES_SUCCESS\",\n  SAVE_DATASOURCE_NAME: \"SAVE_DATASOURCE_NAME\",\n  SAVE_DATASOURCE_NAME_SUCCESS: \"SAVE_DATASOURCE_NAME_SUCCESS\",\n  UPDATE_DATASOURCE_NAME_SUCCESS: \"UPDATE_DATASOURCE_NAME_SUCCESS\",\n  UPDATE_DATASOURCE_NAME: \"UPDATE_DATASOURCE_NAME\",\n  CREATE_DATASOURCE_INIT: \"CREATE_DATASOURCE_INIT\",\n  CREATE_DATASOURCE_SUCCESS: \"CREATE_DATASOURCE_SUCCESS\",\n  CREATE_DATASOURCE_FROM_FORM_INIT: \"CREATE_DATASOURCE_FROM_FORM_INIT\",\n  CREATE_TEMP_DATASOURCE_FROM_FORM_SUCCESS:\n    \"CREATE_TEMP_DATASOURCE_FROM_FORM_SUCCESS\",\n  UPDATE_DATASOURCE_INIT: \"UPDATE_DATASOURCE_INIT\",\n  UPDATE_DATASOURCE_SUCCESS: \"UPDATE_DATASOURCE_SUCCESS\",\n  CHANGE_DATASOURCE: \"CHANGE_DATASOURCE\",\n  FETCH_DATASOURCE_STRUCTURE_INIT: \"FETCH_DATASOURCE_STRUCTURE_INIT\",\n  FETCH_DATASOURCE_STRUCTURE_SUCCESS: \"FETCH_DATASOURCE_STRUCTURE_SUCCESS\",\n  REFRESH_DATASOURCE_STRUCTURE_INIT: \"REFRESH_DATASOURCE_STRUCTURE_INIT\",\n  REFRESH_DATASOURCE_STRUCTURE_SUCCESS: \"REFRESH_DATASOURCE_STRUCTURE_SUCCESS\",\n  EXPAND_DATASOURCE_ENTITY: \"EXPAND_DATASOURCE_ENTITY\",\n  TEST_DATASOURCE_INIT: \"TEST_DATASOURCE_INIT\",\n  TEST_DATASOURCE_SUCCESS: \"TEST_DATASOURCE_SUCCESS\",\n  FETCH_UNCONFIGURED_DATASOURCE_LIST: \"FETCH_UNCONFIGURED_DATASOURCE_LIST\",\n  DELETE_DATASOURCE_DRAFT: \"DELETE_DATASOURCE_DRAFT\",\n  UPDATE_DATASOURCE_DRAFT: \"UPDATE_DATASOURCE_DRAFT\",\n  FETCH_PUBLISHED_PAGE_INIT: \"FETCH_PUBLISHED_PAGE_INIT\",\n  FETCH_PUBLISHED_PAGE_SUCCESS: \"FETCH_PUBLISHED_PAGE_SUCCESS\",\n  REDIRECT_AUTHORIZATION_CODE: \"REDIRECT_AUTHORIZATION_CODE\",\n  REDIRECT_WINDOW_LOCATION: \"REDIRECT_WINDOW_LOCATION\",\n  HISTORY_PUSH: \"HISTORY_PUSH\",\n  DELETE_DATASOURCE_INIT: \"DELETE_DATASOURCE_INIT\",\n  DELETE_DATASOURCE_SUCCESS: \"DELETE_DATASOURCE_SUCCESS\",\n  DELETE_DATASOURCE_CANCELLED: \"DELETE_DATASOURCE_CANCELLED\",\n  STORE_AS_DATASOURCE_INIT: \"STORE_AS_DATASOURCE_INIT\",\n  STORE_AS_DATASOURCE_UPDATE: \"STORE_AS_DATASOURCE_UPDATE\",\n  STORE_AS_DATASOURCE_COMPLETE: \"STORE_AS_DATASOURCE_COMPLETE\",\n  PUBLISH_APPLICATION_INIT: \"PUBLISH_APPLICATION_INIT\",\n  PUBLISH_APPLICATION_SUCCESS: \"PUBLISH_APPLICATION_SUCCESS\",\n  CHANGE_APPVIEW_ACCESS_INIT: \"CHANGE_APPVIEW_ACCESS_INIT\",\n  CHANGE_APPVIEW_ACCESS_SUCCESS: \"CHANGE_APPVIEW_ACCESS_SUCCESS\",\n  CREATE_PAGE_INIT: \"CREATE_PAGE_INIT\",\n  CREATE_PAGE_SUCCESS: \"CREATE_PAGE_SUCCESS\",\n  FETCH_PAGE_LIST_INIT: \"FETCH_PAGE_LIST_INIT\",\n  FETCH_PAGE_LIST_SUCCESS: \"FETCH_PAGE_LIST_SUCCESS\",\n  UPDATE_PAGE_LIST: \"UPDATE_PAGE_LIST\",\n  INITIALIZE_PAGE_VIEWER: \"INITIALIZE_PAGE_VIEWER\",\n  INITIALIZE_PAGE_VIEWER_SUCCESS: \"INITIALIZE_PAGE_VIEWER_SUCCESS\",\n  FETCH_APPLICATION_INIT: \"FETCH_APPLICATION_INIT\",\n  FETCH_APPLICATION_SUCCESS: \"FETCH_APPLICATION_SUCCESS\",\n  INVITED_USERS_TO_WORKSPACE: \"INVITED_USERS_TO_WORKSPACE\",\n  CREATE_APPLICATION_INIT: \"CREATE_APPLICATION_INIT\",\n  CREATE_APPLICATION_SUCCESS: \"CREATE_APPLICATION_SUCCESS\",\n  UPDATE_WIDGET_PROPERTY_VALIDATION: \"UPDATE_WIDGET_PROPERTY_VALIDATION\",\n  HIDE_PROPERTY_PANE: \"HIDE_PROPERTY_PANE\",\n  INIT_DATASOURCE_PANE: \"INIT_DATASOURCE_PANE\",\n  INIT_QUERY_PANE: \"INIT_QUERY_PANE\",\n  QUERY_PANE_CHANGE: \"QUERY_PANE_CHANGE\",\n  UPDATE_ROUTES_PARAMS: \"UPDATE_ROUTES_PARAMS\",\n  SET_EXTRA_FORMDATA: \"SET_EXTRA_FORMDATA\",\n  PERSIST_USER_SESSION: \"PERSIST_USER_SESSION\",\n  LOGIN_USER_INIT: \"LOGIN_USER_INIT\",\n  LOGIN_USER_SUCCESS: \"LOGIN_USER_SUCCESS\",\n  CREATE_USER_INIT: \"CREATE_USER_INIT\",\n  CREATE_USER_SUCCESS: \"CREATE_USER_SUCCESS\",\n  RESET_USER_PASSWORD_INIT: \"RESET_USER_PASSWORD_INIT\",\n  RESET_USER_PASSWORD_SUCCESS: \"RESET_USER_PASSWORD_SUCCESS\",\n  FETCH_PLUGINS_REQUEST: \"FETCH_PLUGINS_REQUEST\",\n  FETCH_PLUGINS_SUCCESS: \"FETCH_PLUGINS_SUCCESS\",\n  FETCH_PLUGIN_FORM_CONFIGS_REQUEST: \"FETCH_PLUGIN_FORM_CONFIGS_REQUEST\",\n  FETCH_PLUGIN_FORM_CONFIGS_SUCCESS: \"FETCH_PLUGIN_FORM_CONFIGS_SUCCESS\",\n  FETCH_PLUGIN_FORM_SUCCESS: \"FETCH_PLUGIN_FORM_SUCCESS\",\n  INVITE_USERS_TO_WORKSPACE_INIT: \"INVITE_USERS_TO_WORKSPACE_INIT\",\n  INVITE_USERS_TO_WORKSPACE_SUCCESS: \"INVITE_USERS_TO_WORKSPACE_SUCCESS\",\n  FORGOT_PASSWORD_INIT: \"FORGOT_PASSWORD_INIT\",\n  FORGOT_PASSWORD_SUCCESS: \"FORGOT_PASSWORD_SUCCESS\",\n  RESET_PASSWORD_VERIFY_TOKEN_SUCCESS: \"RESET_PASSWORD_VERIFY_TOKEN_SUCCESS\",\n  RESET_PASSWORD_VERIFY_TOKEN_INIT: \"RESET_PASSWORD_VERIFY_TOKEN_INIT\",\n  EXECUTE_PAGE_LOAD_ACTIONS: \"EXECUTE_PAGE_LOAD_ACTIONS\",\n  SWITCH_WORKSPACE_INIT: \"SWITCH_WORKSPACE_INIT\",\n  SWITCH_WORKSPACE_SUCCESS: \"SWITCH_WORKSPACE_SUCCESS\",\n  FETCH_WORKSPACE_ROLES_INIT: \"FETCH_WORKSPACE_ROLES_INIT\",\n  FETCH_WORKSPACE_ROLES_SUCCESS: \"FETCH_WORKSPACE_ROLES_SUCCESS\",\n  FETCH_WORKSPACE_INIT: \"FETCH_WORKSPACE_INIT\",\n  FETCH_WORKSPACE_SUCCESS: \"FETCH_WORKSPACE_SUCCESS\",\n  FETCH_WORKSPACES_SUCCESS: \"FETCH_WORKSPACES_SUCCES\",\n  FETCH_WORKSPACES_INIT: \"FETCH_WORKSPACES_INIT\",\n  SAVE_WORKSPACE_INIT: \"SAVE_WORKSPACE_INIT\",\n  SAVE_WORKSPACE_SUCCESS: \"SAVE_WORKSPACE_SUCCESS\",\n  UPLOAD_WORKSPACE_LOGO: \"UPLOAD_WORKSPACE_LOGO\",\n  REMOVE_WORKSPACE_LOGO: \"REMOVE_WORKSPACE_LOGO\",\n  SAVING_WORKSPACE_INFO: \"SAVING_WORKSPACE_INFO\",\n  SET_LAST_UPDATED_TIME: \"SET_LAST_UPDATED_TIME\",\n  SET_CURRENT_WORKSPACE: \"SET_CURRENT_WORKSPACE\",\n  SET_CURRENT_WORKSPACE_ID: \"SET_CURRENT_WORKSPACE_ID\",\n  FETCH_CURRENT_WORKSPACE: \"FETCH_CURRENT_WORKSPACE\",\n  STORE_DATASOURCE_REFS: \"STORE_DATASOURCE_REFS\",\n  UPDATE_DATASOURCE_REFS: \"UPDATE_DATASOURCE_REFS\",\n  FETCH_USER_INIT: \"FETCH_USER_INIT\",\n  PROP_PANE_MOVED: \"PROP_PANE_MOVED\",\n  FETCH_USER_SUCCESS: \"FETCH_USER_SUCCESS\",\n  SET_CURRENT_USER_INIT: \"SET_CURRENT_USER_INIT\",\n  SET_CURRENT_USER_SUCCESS: \"SET_CURRENT_USER_SUCCESS\",\n  LOGOUT_USER_INIT: \"LOGOUT_USER_INIT\",\n  LOGOUT_USER_SUCCESS: \"LOGOUT_USER_SUCCESS\",\n  VERIFY_INVITE_INIT: \"VERIFY_INVITE_INIT\",\n  VERIFY_INVITE_SUCCESS: \"VERIFY_INVITE_SUCCESS\",\n  INVITED_USER_SIGNUP_SUCCESS: \"INVITED_USER_SIGNUP_SUCCESS\",\n  INVITED_USER_SIGNUP_INIT: \"INVITED_USER_SIGNUP_INIT\",\n  DISABLE_WIDGET_DRAG: \"DISABLE_WIDGET_DRAG\",\n  SELECT_WIDGET_INIT: \"SELECT_WIDGET_INIT\",\n  FOCUS_WIDGET: \"FOCUS_WIDGET\",\n  SET_SELECTED_WIDGETS: \"SET_SELECTED_WIDGETS\",\n  SET_LAST_SELECTED_WIDGET: \"SET_LAST_SELECTED_WIDGET\",\n  SET_WIDGET_DRAGGING: \"SET_WIDGET_DRAGGING\",\n  SET_DRAGGING_CANVAS: \"SET_DRAGGING_CANVAS\",\n  SET_NEW_WIDGET_DRAGGING: \"SET_NEW_WIDGET_DRAGGING\",\n  SET_WIDGET_RESIZING: \"SET_WIDGET_RESIZING\",\n  ADD_SUGGESTED_WIDGET: \"ADD_SUGGESTED_WIDGET\",\n  MODIFY_META_WIDGETS: \"MODIFY_META_WIDGETS\",\n  DELETE_META_WIDGETS: \"DELETE_META_WIDGETS\",\n  UPDATE_META_WIDGET_PROPERTY: \"UPDATE_META_WIDGET_PROPERTY\",\n  SEARCH_APPLICATIONS: \"SEARCH_APPLICATIONS\",\n  UPDATE_PAGE_INIT: \"UPDATE_PAGE_INIT\",\n  UPDATE_PAGE_SUCCESS: \"UPDATE_PAGE_SUCCESS\",\n  MOVE_ACTION_INIT: \"MOVE_ACTION_INIT\",\n  MOVE_ACTION_SUCCESS: \"MOVE_ACTION_SUCCESS\",\n  COPY_ACTION_INIT: \"COPY_ACTION_INIT\",\n  COPY_ACTION_SUCCESS: \"COPY_ACTION_SUCCESS\",\n  DELETE_APPLICATION_INIT: \"DELETE_APPLICATION_INIT\",\n  DELETE_APPLICATION_SUCCESS: \"DELETE_APPLICATION_SUCCESS\",\n  DUPLICATE_APPLICATION_INIT: \"DUPLICATE_APPLICATION_INIT\",\n  DUPLICATE_APPLICATION_SUCCESS: \"DUPLICATE_APPLICATION_SUCCESS\",\n  DELETE_PAGE_INIT: \"DELETE_PAGE_INIT\",\n  DELETE_PAGE_SUCCESS: \"DELETE_PAGE_SUCCESS\",\n  CLONE_PAGE_INIT: \"CLONE_PAGE_INIT\",\n  CLONE_PAGE_SUCCESS: \"CLONE_PAGE_SUCCESS\",\n  SET_DEFAULT_APPLICATION_PAGE_INIT: \"SET_DEFAULT_APPLICATION_PAGE_INIT\",\n  SET_DEFAULT_APPLICATION_PAGE_SUCCESS: \"SET_DEFAULT_APPLICATION_PAGE_SUCCESS\",\n  CREATE_WORKSPACE_INIT: \"CREATE_WORKSPACE_INIT\",\n  CREATE_WORKSPACE_SUCCESS: \"CREATE_WORKSPACE_SUCCESS\",\n  ADD_USER_TO_WORKSPACE_INIT: \"ADD_USER_TO_WORKSPACE_INIT\",\n  ADD_USER_TO_WORKSPACE_SUCCESS: \"ADD_USER_TO_WORKSPACE_ERROR\",\n  SET_META_PROP: \"SET_META_PROP\",\n  SET_META_PROP_AND_EVAL: \"SET_META_PROP_AND_EVAL\",\n  META_UPDATE_DEBOUNCED_EVAL: \"META_UPDATE_DEBOUNCED_EVAL\",\n  RESET_CHILDREN_WIDGET_META: \"RESET_CHILDREN_WIDGET_META\",\n  RESET_WIDGET_META: \"RESET_WIDGET_META\",\n  RESET_WIDGET_META_EVALUATED: \"RESET_WIDGET_META_EVALUATED\",\n  RESET_WIDGETS_META_STATE: \"RESET_WIDGETS_META_STATE\",\n  UPDATE_WIDGET_NAME_INIT: \"UPDATE_WIDGET_NAME_INIT\",\n  UPDATE_WIDGET_NAME_SUCCESS: \"UPDATE_WIDGET_NAME_SUCCESS\",\n  FETCH_ACTIONS_FOR_PAGE_INIT: \"FETCH_ACTIONS_FOR_PAGE_INIT\",\n  FETCH_ACTIONS_FOR_PAGE_SUCCESS: \"FETCH_ACTIONS_FOR_PAGE_SUCCESS\",\n  EXECUTE_PLUGIN_ACTION_REQUEST: \"EXECUTE_PLUGIN_ACTION_REQUEST\",\n  EXECUTE_PLUGIN_ACTION_SUCCESS: \"EXECUTE_PLUGIN_ACTION_SUCCESS\",\n  SET_ACTION_RESPONSE_DISPLAY_FORMAT: \"SET_ACTION_RESPONSE_DISPLAY_FORMAT\",\n  FETCH_IMPORTED_COLLECTIONS_INIT: \"FETCH_IMPORTED_COLLECTIONS_INIT\",\n  FETCH_IMPORTED_COLLECTIONS_SUCCESS: \"FETCH_IMPORTED_COLLECTIONS_SUCCESS\",\n  SEARCH_APIORPROVIDERS_INIT: \"SEARCH_APIORPROVIDERS_INIT\",\n  SEARCH_APIORPROVIDERS_SUCCESS: \"SEARCH_APIORPROVIDERS_SUCCESS\",\n  FETCH_PROVIDERS_INIT: \"FETCH_PROVIDERS_INIT\",\n  FETCH_PROVIDERS_SUCCESS: \"FETCH_PROVIDERS_SUCCESS\",\n  SUBMIT_CURL_FORM_INIT: \"SUBMIT_CURL_FORM_INIT\",\n  SUBMIT_CURL_FORM_SUCCESS: \"SUBMIT_CURL_FORM_SUCCESS\",\n  SET_WIDGET_DYNAMIC_PROPERTY: \"SET_WIDGET_DYNAMIC_PROPERTY\",\n  FETCH_PROVIDER_TEMPLATES_INIT: \"FETCH_PROVIDER_TEMPLATES_INIT\",\n  FETCH_PROVIDER_TEMPLATES_SUCCESS: \"FETCH_PROVIDER_TEMPLATES_SUCCESS\",\n  ADD_API_TO_PAGE_INIT: \"ADD_API_TO_PAGE_INIT\",\n  ADD_API_TO_PAGE_SUCCESS: \"ADD_API_TO_PAGE_SUCCESS\",\n  CLEAR_PREVIOUSLY_EXECUTED_QUERY: \"CLEAR_PREVIOUSLY_EXECUTED_QUERY\",\n  FETCH_PROVIDERS_CATEGORIES_INIT: \"FETCH_PROVIDERS_CATEGORIES_INIT\",\n  FETCH_PROVIDERS_CATEGORIES_SUCCESS: \"FETCH_PROVIDERS_CATEGORIES_SUCCESS\",\n  FETCH_PROVIDERS_WITH_CATEGORY_INIT: \"FETCH_PROVIDERS_WITH_CATEGORY_INIT\",\n  FETCH_PROVIDERS_WITH_CATEGORY_SUCCESS:\n    \"FETCH_PROVIDERS_WITH_CATEGORY_SUCCESS\",\n  SHOW_MODAL: \"SHOW_MODAL\",\n  SHOW_MODAL_BY_NAME: \"SHOW_MODAL_BY_NAME\",\n  CLOSE_MODAL: \"CLOSE_MODAL\",\n  CREATE_MODAL_INIT: \"CREATE_MODAL_INIT\",\n  CREATE_MODAL_SUCCESS: \"CREATE_MODAL_SUCCESS\",\n  UPDATE_CANVAS_SIZE: \"UPDATE_CANVAS_SIZE\",\n  SWITCH_CURRENT_PAGE_ID: \"SWITCH_CURRENT_PAGE_ID\",\n  CLEAR_PROVIDERS: \"CLEAR_PROVIDERS\",\n  BATCHED_UPDATE: \"BATCHED_UPDATE\",\n  EXECUTE_BATCH: \"EXECUTE_BATCH\",\n  FETCH_ALL_PUBLISHED_PAGES: \"FETCH_ALL_PUBLISHED_PAGES\",\n  CREATE_NEW_API_ACTION: \"CREATE_NEW_API_ACTION\",\n  CREATE_NEW_QUERY_ACTION: \"CREATE_NEW_QUERY_ACTION\",\n  SET_CURRENT_CATEGORY: \"SET_CURRENT_CATEGORY\",\n  SET_LAST_USED_EDITOR_PAGE: \"SET_LAST_USED_EDITOR_PAGE\",\n  SET_LAST_SELECTED_PAGE_PAGE: \"SET_LAST_SELECTED_PAGE_PAGE\",\n  FETCH_PROVIDER_DETAILS_BY_PROVIDER_ID_INIT:\n    \"FETCH_PROVIDER_DETAILS_BY_PROVIDER_ID_INIT\",\n  FETCH_PROVIDER_DETAILS_BY_PROVIDER_ID_SUCCESS:\n    \"FETCH_PROVIDER_DETAILS_BY_PROVIDER_ID_SUCCESS\",\n  SET_PROVIDERS_LENGTH: \"SET_PROVIDERS_LENGTH\",\n  GET_ALL_APPLICATION_INIT: \"GET_ALL_APPLICATION_INIT\",\n  FETCH_USER_APPLICATIONS_WORKSPACES_SUCCESS:\n    \"FETCH_USER_APPLICATIONS_WORKSPACES_SUCCESS\",\n  FETCH_USER_DETAILS_SUCCESS: \"FETCH_USER_DETAILS_SUCCESS\",\n  FETCH_ALL_USERS_SUCCESS: \"FETCH_ALL_USERS_SUCCESS\",\n  FETCH_ALL_USERS_INIT: \"FETCH_ALL_USERS_INIT\",\n  FETCH_ALL_ROLES_SUCCESS: \"FETCH_ALL_ROLES_SUCCESS\",\n  FETCH_ALL_ROLES_INIT: \"FETCH_ALL_ROLES_INIT\",\n  DELETE_WORKSPACE_USER_INIT: \"DELETE_WORKSPACE_USER_INIT\",\n  DELETE_WORKSPACE_USER_SUCCESS: \"DELETE_WORKSPACE_USER_SUCCESS\",\n  LEAVE_WORKSPACE_INIT: \"LEAVE_WORKSPACE_INIT\",\n  CHANGE_WORKSPACE_USER_ROLE_INIT: \"CHANGE_WORKSPACE_USER_ROLE_INIT\",\n  CHANGE_WORKSPACE_USER_ROLE_SUCCESS: \"CHANGE_WORKSPACE_USER_ROLE_SUCCESS\",\n  UPDATE_USER_DETAILS_INIT: \"UPDATE_USER_DETAILS_INIT\",\n  UPDATE_USER_DETAILS_SUCCESS: \"UPDATE_USER_DETAILS_SUCCESS\",\n  SET_DEFAULT_REFINEMENT: \"SET_DEFAULT_REFINEMENT\",\n  SET_HELP_MODAL_OPEN: \"SET_HELP_MODAL_OPEN\",\n  SAVE_ACTION_NAME_INIT: \"SAVE_ACTION_NAME_INIT\",\n  SAVE_ACTION_NAME_SUCCESS: \"SAVE_ACTION_NAME_SUCCESS\",\n  UPDATE_API_NAME_DRAFT: \"UPDATE_API_NAME_DRAFT\",\n  SET_ACTION_PROPERTY: \"SET_ACTION_PROPERTY\",\n  UPDATE_ACTION_PROPERTY: \"UPDATE_ACTION_PROPERTY\",\n  SWITCH_DATASOURCE: \"SWITCH_DATASOURCE\",\n  INIT_EXPLORER_ENTITY_NAME_EDIT: \"INIT_EXPLORER_ENTITY_NAME_EDIT\",\n  FETCH_ACTIONS_VIEW_MODE_INIT: \"FETCH_ACTIONS_VIEW_MODE_INIT\",\n  FETCH_ACTIONS_VIEW_MODE_SUCCESS: \"FETCH_ACTIONS_VIEW_MODE_SUCCESS\",\n  END_EXPLORER_ENTITY_NAME_EDIT: \"END_EXPLORER_ENTITY_NAME_EDIT\",\n  POPULATE_PAGEDSLS_INIT: \"POPULATE_PAGEDSLS_INIT\",\n  POPULATE_PAGEDSLS_SUCCESS: \"POPULATE_PAGEDSLS_SUCCESS\",\n  FETCH_PAGE_DSLS_SUCCESS: \"FETCH_PAGE_DSLS_SUCCESS\",\n  FETCH_PAGE_DSL_SUCCESS: \"FETCH_PAGE_DSL_SUCCESS\",\n  SET_URL_DATA: \"SET_URL_DATA\",\n  SET_APP_MODE: \"SET_APP_MODE\",\n  TOGGLE_PROPERTY_PANE_WIDGET_NAME_EDIT:\n    \"TOGGLE_PROPERTY_PANE_WIDGET_NAME_EDIT\",\n  SET_PROPERTY_PANE_WIDTH: \"SET_PROPERTY_PANE_WIDTH\",\n  UPDATE_APP_STORE: \"UPDATE_APP_STORE\",\n  SET_ACTION_TO_EXECUTE_ON_PAGELOAD: \"SET_ACTION_TO_EXECUTE_ON_PAGELOAD\",\n  TOGGLE_ACTION_EXECUTE_ON_LOAD_SUCCESS:\n    \"TOGGLE_ACTION_EXECUTE_ON_LOAD_SUCCESS\",\n  TOGGLE_ACTION_EXECUTE_ON_LOAD_INIT: \"TOGGLE_ACTION_EXECUTE_ON_LOAD_INIT\",\n  COPY_SELECTED_WIDGET_SUCCESS: \"COPY_SELECTED_WIDGET_SUCCESS\",\n  COPY_SELECTED_WIDGET_INIT: \"COPY_SELECTED_WIDGET_INIT\",\n  ADD_CANVAS_WIDGET: \"ADD_CANVAS_WIDGET\",\n  PASTE_COPIED_WIDGET_INIT: \"PASTE_COPIED_WIDGET_INIT\",\n  PASTE_COPIED_WIDGET_SUCCESS: \"PASTE_COPIED_WIDGET_SUCCESS\",\n  CUT_SELECTED_WIDGET: \"CUT_SELECTED_WIDGET\",\n  SET_EVALUATED_TREE: \"SET_EVALUATED_TREE\",\n  SET_EVALUATION_INVERSE_DEPENDENCY_MAP:\n    \"SET_EVALUATION_INVERSE_DEPENDENCY_MAP\",\n  BATCH_UPDATES_SUCCESS: \"BATCH_UPDATES_SUCCESS\",\n  UPDATE_CANVAS_STRUCTURE: \"UPDATE_CANVAS_STRUCTURE\",\n  SET_SELECTED_WIDGET_ANCESTRY: \"SET_SELECTED_WIDGET_ANCESTRY\",\n  START_EVALUATION: \"START_EVALUATION\",\n  CURRENT_APPLICATION_NAME_UPDATE: \"CURRENT_APPLICATION_NAME_UPDATE\",\n  CURRENT_APPLICATION_LAYOUT_UPDATE: \"CURRENT_APPLICATION_LAYOUT_UPDATE\",\n  CURRENT_APPLICATION_ICON_UPDATE: \"CURRENT_APPLICATION_ICON_UPDATE\",\n  CURRENT_APPLICATION_EMBED_SETTING_UPDATE:\n    \"CURRENT_APPLICATION_EMBED_SETTING_UPDATE\",\n  FORK_APPLICATION_INIT: \"FORK_APPLICATION_INIT\",\n  FORK_APPLICATION_SUCCESS: \"FORK_APPLICATION_SUCCESS\",\n  IMPORT_APPLICATION_INIT: \"IMPORT_APPLICATION_INIT\",\n  IMPORT_APPLICATION_FROM_GIT_INIT: \"IMPORT_APPLICATION_FROM_GIT_INIT\",\n  IMPORT_APPLICATION_SUCCESS: \"IMPORT_APPLICATION_SUCCESS\",\n  SET_WIDGET_LOADING: \"SET_WIDGET_LOADING\",\n  SET_GLOBAL_SEARCH_QUERY: \"SET_GLOBAL_SEARCH_QUERY\",\n  SET_GLOBAL_SEARCH_CATEGORY: \"SET_GLOBAL_SEARCH_CATEGORY\",\n  TOGGLE_SHOW_GLOBAL_SEARCH_MODAL: \"TOGGLE_SHOW_GLOBAL_SEARCH_MODAL\",\n  FETCH_RELEASES_SUCCESS: \"FETCH_RELEASES_SUCCESS\",\n  RESET_UNREAD_RELEASES_COUNT: \"RESET_UNREAD_RELEASES_COUNT\",\n  SET_FORM_EVALUATION: \"SET_FORM_EVALUATION\",\n  INIT_FORM_EVALUATION: \"INIT_FORM_EVALUATION\",\n  RUN_FORM_EVALUATION: \"RUN_FORM_EVALUATION\",\n  SET_LOADING_ENTITIES: \"SET_LOADING_ENTITIES\",\n  RESET_CURRENT_APPLICATION: \"RESET_CURRENT_APPLICATION\",\n  SELECT_WIDGETS_IN_AREA: \"SELECT_WIDGETS_IN_AREA\",\n  RESET_APPLICATION_WIDGET_STATE_REQUEST:\n    \"RESET_APPLICATION_WIDGET_STATE_REQUEST\",\n  SAAS_GET_OAUTH_ACCESS_TOKEN: \"SAAS_GET_OAUTH_ACCESS_TOKEN\",\n  GET_OAUTH_ACCESS_TOKEN: \"GET_OAUTH_ACCESS_TOKEN\",\n  RESTORE_RECENT_ENTITIES_REQUEST: \"RESTORE_RECENT_ENTITIES_REQUEST\",\n  RESTORE_RECENT_ENTITIES_SUCCESS: \"RESTORE_RECENT_ENTITIES_SUCCESS\",\n  SET_RECENT_ENTITIES: \"SET_RECENT_ENTITIES\",\n  RESET_RECENT_ENTITIES: \"RESET_RECENT_ENTITIES\",\n  UPDATE_API_ACTION_BODY_CONTENT_TYPE: \"UPDATE_API_ACTION_BODY_CONTENT_TYPE\",\n  ADD_WIDGET_CONFIG: \"ADD_WIDGET_CONFIG\",\n  GENERATE_TEMPLATE_PAGE_INIT: \"GENERATE_TEMPLATE_PAGE_INIT\",\n  GENERATE_TEMPLATE_PAGE_SUCCESS: \"GENERATE_TEMPLATE_PAGE_SUCCESS\",\n  SHOW_TABLE_FILTER_PANE: \"SHOW_TABLE_FILTER_PANE\",\n  HIDE_TABLE_FILTER_PANE: \"HIDE_TABLE_FILTER_PANE\",\n  TABLE_PANE_MOVED: \"TABLE_PANE_MOVED\",\n  FETCH_JS_ACTIONS_INIT: \"FETCH_JS_ACTIONS_INIT\",\n  FETCH_JS_ACTIONS_SUCCESS: \"FETCH_JS_ACTIONS_SUCCESS\",\n  CREATE_NEW_JS_ACTION: \"CREATE_NEW_JS_ACTION\",\n  CREATE_JS_ACTION_INIT: \"CREATE_JS_ACTION_INIT\",\n  CREATE_JS_ACTION_SUCCESS: \"CREATE_JS_ACTION_SUCCESS\",\n  COPY_JS_ACTION_INIT: \"COPY_JS_ACTION_INIT\",\n  COPY_JS_ACTION_SUCCESS: \"COPY_JS_ACTION_SUCCESS\",\n  MOVE_JS_ACTION_INIT: \"MOVE_JS_ACTION_INIT\",\n  MOVE_JS_ACTION_SUCCESS: \"MOVE_JS_ACTION_SUCCESS\",\n  DELETE_JS_ACTION_INIT: \"DELETE_JS_ACTION_INIT\",\n  DELETE_JS_ACTION_SUCCESS: \"DELETE_JS_ACTION_SUCCESS\",\n  PARSE_UPDATE_JS_ACTION: \"PARSE_UPDATE_JS_ACTION\",\n  UPDATE_JS_ACTION_INIT: \"UPDATE_JS_ACTION_INIT\",\n  UPDATE_JS_ACTION_SUCCESS: \"UPDATE_JS_ACTION_SUCCESS\",\n  EXECUTE_COMMAND: \"EXECUTE_COMMAND\",\n  SAVE_JS_COLLECTION_NAME_INIT: \"SAVE_JS_COLLECTION_NAME_INIT\",\n  FETCH_JS_ACTIONS_FOR_PAGE_INIT: \"FETCH_JS_ACTIONS_FOR_PAGE_INIT\",\n  FETCH_JS_ACTIONS_FOR_PAGE_SUCCESS: \"FETCH_JS_ACTIONS_FOR_PAGE_SUCCESS\",\n  SAVE_JS_COLLECTION_NAME_SUCCESS: \"SAVE_JS_COLLECTION_NAME_SUCCESS\",\n  FETCH_JS_ACTIONS_VIEW_MODE_INIT: \"FETCH_JS_ACTIONS_VIEW_MODE_INIT\",\n  FETCH_JS_ACTIONS_VIEW_MODE_SUCCESS: \"FETCH_JS_ACTIONS_VIEW_MODE_SUCCESS\",\n  EXECUTE_JS_FUNCTION_INIT: \"EXECUTE_JS_FUNCTION_INIT\",\n  EXECUTE_JS_FUNCTION_SUCCESS: \"EXECUTE_JS_FUNCTION_SUCCESS\",\n  SET_JS_FUNCTION_EXECUTION_DATA: \"SET_JS_FUNCTION_EXECUTION_DATA\",\n  SET_JS_FUNCTION_EXECUTION_ERRORS: \"SET_JS_FUNCTION_EXECUTION_ERRORS\",\n  GET_PLUGIN_FORM_CONFIG_INIT: \"GET_PLUGIN_FORM_CONFIG_INIT\",\n  EXECUTE_DATASOURCE_QUERY_INIT: \"EXECUTE_DATASOURCE_QUERY_INIT\",\n  EXECUTE_DATASOURCE_QUERY_SUCCESS: \"EXECUTE_DATASOURCE_QUERY_SUCCESS\",\n  UNDO_REDO_OPERATION: \"UNDO_REDO_OPERATION\",\n  EVALUATE_SNIPPET: \"EVALUATE_SNIPPET\",\n  EVALUATE_ARGUMENT: \"EVALUATE_ARGUMENT\",\n  SET_EVALUATED_SNIPPET: \"SET_EVALUATED_SNIPPET\",\n  SET_EVALUATED_ARGUMENT: \"SET_EVALUATED_ARGUMENT\",\n  UNSET_EVALUATED_ARGUMENT: \"UNSET_EVALUATED_ARGUMENT\",\n  SET_CRUD_INFO_MODAL_OPEN: \"SET_CRUD_INFO_MODAL_OPEN\",\n  SET_PAGE_ORDER_INIT: \"SET_PAGE_ORDER_INIT\",\n  SET_PAGE_ORDER_SUCCESS: \"SET_PAGE_ORDER_SUCCESS\",\n  GROUP_WIDGETS_INIT: \"GROUP_WIDGETS_INIT\",\n  WIDGET_ADD_NEW_TAB_CHILD: \"WIDGET_ADD_NEW_TAB_CHILD\",\n  WIDGET_DELETE_TAB_CHILD: \"WIDGET_DELETE_TAB_CHILD\",\n  GENERATE_SSH_KEY_PAIR_INIT: \"GENERATE_SSH_KEY_PAIR_INIT\",\n  SET_REMOTE_URL_INPUT_VALUE: \"SET_REMOTE_URL_INPUT_VALUE\",\n  GENERATE_SSH_KEY_PAIR_SUCCESS: \"GENERATE_SSH_KEY_PAIR_SUCCESS\",\n  REFACTOR_JS_ACTION_NAME: \"REFACTOR_JS_ACTION_NAME\",\n  REFACTOR_JS_ACTION_NAME_SUCCESS: \"REFACTOR_JS_ACTION_NAME_SUCCESS\",\n  SET_HEADER_META: \"SET_HEADER_META\",\n  TOGGLE_ONBOARDING_WIDGET_SELECTION: \"TOGGLE_ONBOARDING_WIDGET_SELECTION\",\n  SET_ENABLE_FIRST_TIME_USER_ONBOARDING:\n    \"SET_ENABLE_FIRST_TIME_USER_ONBOARDING\",\n  SET_FIRST_TIME_USER_ONBOARDING_APPLICATION_ID:\n    \"SET_FIRST_TIME_USER_ONBOARDING_APPLICATION_ID\",\n  SET_FIRST_TIME_USER_ONBOARDING_COMPLETE:\n    \"SET_FIRST_TIME_USER_ONBOARDING_COMPLETE\",\n  SET_SHOW_FIRST_TIME_USER_ONBOARDING_MODAL:\n    \"SET_SHOW_FIRST_TIME_USER_ONBOARDING_MODAL\",\n  SET_FORCE_WIDGET_PANEL_OPEN: \"SET_FORCE_WIDGET_PANEL_OPEN\",\n  END_FIRST_TIME_USER_ONBOARDING: \"END_FIRST_TIME_USER_ONBOARDING\",\n  UNDO_END_FIRST_TIME_USER_ONBOARDING: \"UNDO_END_FIRST_TIME_USER_ONBOARDING\",\n  FETCH_ADMIN_SETTINGS: \"FETCH_ADMIN_SETTINGS\",\n  FETCH_ADMIN_SETTINGS_SUCCESS: \"FETCH_ADMIN_SETTINGS_SUCCESS\",\n  FETCH_ADMIN_SETTINGS_ERROR: \"FETCH_ADMIN_SETTINGS_ERROR\",\n  SAVE_ADMIN_SETTINGS: \"SAVE_ADMIN_SETTINGS\",\n  SAVE_ADMIN_SETTINGS_SUCCESS: \"SAVE_ADMIN_SETTINGS_SUCCESS\",\n  SAVE_ADMIN_SETTINGS_ERROR: \"SAVE_ADMIN_SETTINGS_ERROR\",\n  DOWNLOAD_DOCKER_COMPOSE_FILE: \"DOWNLOAD_DOCKER_COMPOSE_FILE\",\n  TOGGLE_RELEASE_NOTES: \"TOGGLE_RELEASE_NOTES\",\n  FETCH_RELEASES: \"FETCH_RELEASES\",\n  RESTART_SERVER_POLL: \"RESTART_SERVER_POLL\",\n  RETRY_RESTART_SERVER_POLL: \"RETRY_RESTART_SERVER_POLL\",\n  SET_EXPLORER_PINNED: \"SET_EXPLORER_PINNED\",\n  SET_EXPLORER_ACTIVE: \"SET_EXPLORER_ACTIVE\",\n  SET_PREVIEW_MODE: \"SET_PREVIEW_MODE\",\n  SET_PREVIEW_MODE_INIT: \"SET_PREVIEW_MODE_INIT\",\n  SET_CANVAS_CARDS_STATE: \"SET_CANVAS_TOP_SECTION_VISIBILITY\",\n  DELETE_CANVAS_CARDS_STATE: \"DELETE_CANVAS_CARDS_STATE\",\n  UPDATE_EXPLORER_WIDTH: \"UPDATE_EXPLORER_WIDTH\",\n  UPDATE_PROPERTY_PANE_WIDTH: \"UPDATE_PROPERTY_PANE_WIDTH\",\n  FIRST_TIME_USER_ONBOARDING_INIT: \"FIRST_TIME_USER_ONBOARDING_INIT\",\n  SET_USER_ROLE_USECASE: \"SET_USER_ROLE_USECASE\",\n  UPDATE_JS_ACTION_BODY: \"UPDATE_JS_ACTION_BODY\",\n  UPDATE_JS_ACTION_BODY_INIT: \"UPDATE_JS_ACTION_BODY_INIT\",\n  UPDATE_JS_ACTION_BODY_SUCCESS: \"UPDATE_JS_ACTION_BODY_SUCCESS\",\n  SEND_TEST_EMAIL: \"SEND_TEST_EMAIL\",\n  SET_FUNCTION_PROPERTY: \"SET_FUNCTION_PROPERTY\",\n  UPDATE_JS_FUNCTION_PROPERTY_INIT: \"UPDATE_JS_FUNCTION_PROPERTY_INIT\",\n  UPDATE_JS_FUNCTION_PROPERTY_SUCCESS: \"UPDATE_JS_FUNCTION_PROPERTY_SUCCESS\",\n  TOGGLE_FUNCTION_EXECUTE_ON_LOAD_INIT: \"TOGGLE_FUNCTION_EXECUTE_ON_LOAD_INIT\",\n  TOGGLE_FUNCTION_EXECUTE_ON_LOAD_SUCCESS:\n    \"TOGGLE_FUNCTION_EXECUTE_ON_LOAD_SUCCESS\",\n  SET_JS_ACTION_TO_EXECUTE_ON_PAGELOAD: \"SET_JS_ACTION_TO_EXECUTE_ON_PAGELOAD\",\n  ENABLE_GUIDED_TOUR: \"ENABLE_GUIDED_TOUR\",\n  GUIDED_TOUR_MARK_STEP_COMPLETED: \"GUIDED_TOUR_MARK_STEP_COMPLETED\",\n  SET_CURRENT_STEP: \"SET_CURRENT_STEP\",\n  SET_CURRENT_STEP_INIT: \"SET_CURRENT_STEP_INIT\",\n  GUIDED_TOUR_ADD_WIDGET: \"GUIDED_TOUR_ADD_WIDGET\",\n  TABLE_WIDGET_WAS_SELECTED: \"TABLE_WIDGET_WAS_SELECTED\",\n  SET_UP_TOUR_APP: \"SET_UP_TOUR_APP\",\n  GUIDED_TOUR_TOGGLE_LOADER: \"GUIDED_TOUR_TOGGLE_LOADER\",\n  TOGGLE_DEVIATION_DIALOG: \"TOGGLE_DEVIATION_DIALOG\",\n  TOGGLE_END_GUIDED_TOUR_DIALOG: \"TOGGLE_END_GUIDED_TOUR_DIALOG\",\n  SHOW_POST_COMPLETION_MESSAGE: \"SHOW_POST_COMPLETION_MESSAGE\",\n  GUIDED_TOUR_FOCUS_WIDGET: \"GUIDED_TOUR_FOCUS_WIDGET\",\n  GUIDED_TOUR_SET_DATASOURCE_ID: \"GUIDED_TOUR_SET_DATASOURCE_ID\",\n  FOCUS_WIDGET_PROPERTY: \"FOCUS_WIDGET_PROPERTY\",\n  SHOW_INFO_MESSAGE: \"SHOW_INFO_MESSAGE\",\n  FORCE_SHOW_CONTENT: \"FORCE_SHOW_CONTENT\",\n  UPDATE_BUTTON_WIDGET_TEXT: \"UPDATE_BUTTON_WIDGET_TEXT\",\n  UPDATE_REPLAY_ENTITY: \"UPDATE_REPLAY_ENTITY\",\n  DELETE_WORKSPACE_INIT: \"DELETE_WORKSPACE_INIT\",\n  DELETE_WORKSPACE_SUCCESS: \"DELETE_WORKSPACE_SUCCESS\",\n  SET_USER_CURRENT_GEO_LOCATION: \"SET_USER_CURRENT_GEO_LOCATION\",\n  SET_DISCONNECTING_GIT_APPLICATION: \"SET_DISCONNECTING_GIT_APPLICATION\",\n  SET_APP_THEMING_STACK: \"SET_APP_THEMING_STACK\",\n  FETCH_APP_THEMES_INIT: \"FETCH_APP_THEMES_INIT\",\n  FETCH_APP_THEMES_SUCCESS: \"FETCH_APP_THEMES_SUCCESS\",\n  SET_DEFAULT_SELECTED_THEME_INIT: \"SET_DEFAULT_SELECTED_THEME_INIT\",\n  FETCH_SELECTED_APP_THEME_INIT: \"FETCH_SELECTED_APP_THEME_INIT\",\n  FETCH_SELECTED_APP_THEME_SUCCESS: \"FETCH_SELECTED_APP_THEME_SUCCESS\",\n  UPDATE_SELECTED_APP_THEME_INIT: \"UPDATE_SELECTED_APP_THEME_INIT\",\n  UPDATE_SELECTED_APP_THEME_SUCCESS: \"UPDATE_SELECTED_APP_THEME_SUCCESS\",\n  CHANGE_SELECTED_APP_THEME_INIT: \"CHANGE_SELECTED_APP_THEME_INIT\",\n  CHANGE_SELECTED_APP_THEME_SUCCESS: \"CHANGE_SELECTED_APP_THEME_SUCCESS\",\n  SET_PREVIEW_APP_THEME: \"SET_PREVIEW_APP_THEME\",\n  SAVE_APP_THEME_INIT: \"SAVE_APP_THEME_INIT\",\n  SAVE_APP_THEME_SUCCESS: \"SAVE_APP_THEME_SUCCESS\",\n  DELETE_APP_THEME_INIT: \"DELETE_APP_THEME_INIT\",\n  DELETE_APP_THEME_SUCCESS: \"DELETE_APP_THEME_SUCCESS\",\n  RESET_APP_THEME_INIT: \"RESET_APP_THEME_INIT\",\n  RESET_APP_THEME_SUCCESS: \"RESET_APP_THEME_SUCCESS\",\n  GET_ALL_TEMPLATES_INIT: \"GET_ALL_TEMPLATES_INIT\",\n  GET_ALL_TEMPLATES_SUCCESS: \"GET_ALL_TEMPLATES_SUCCESS\",\n  UPDATE_TEMPLATE_FILTERS: \"UPDATE_TEMPLATE_FILTERS\",\n  SET_TEMPLATE_SEARCH_QUERY: \"SET_TEMPLATE_SEARCH_QUERY\",\n  IMPORT_TEMPLATE_TO_APPLICATION_INIT: \"IMPORT_TEMPLATE_TO_APPLICATION_INIT\",\n  IMPORT_TEMPLATE_TO_APPLICATION_SUCCESS:\n    \"IMPORT_TEMPLATE_TO_APPLICATION_SUCCESS\",\n  IMPORT_TEMPLATE_TO_WORKSPACE_INIT: \"IMPORT_TEMPLATE_TO_WORKSPACE_INIT\",\n  IMPORT_TEMPLATE_TO_WORKSPACE_SUCCESS: \"IMPORT_TEMPLATE_TO_WORKSPACE_SUCCESS\",\n  SET_TEMPLATE_NOTIFICATION_SEEN: \"SET_TEMPLATE_NOTIFICATION_SEEN\",\n  GET_TEMPLATE_NOTIFICATION_SEEN: \"GET_TEMPLATE_NOTIFICATION_SEEN\",\n  GET_SIMILAR_TEMPLATES_INIT: \"GET_SIMILAR_TEMPLATES_INIT\",\n  GET_SIMILAR_TEMPLATES_SUCCESS:\n    \"GET_SIMILAR_TEMPLATES_SUCCESS\" /* This action constants is for identifying the status of the updates of the entities */,\n  ENTITY_UPDATE_STARTED: \"ENTITY_UPDATE_STARTED\",\n  ENTITY_UPDATE_SUCCESS: \"ENTITY_UPDATE_SUCCESS\",\n  SET_APP_VIEWER_HEADER_HEIGHT: \"SET_APP_VIEWER_HEADER_HEIGHT\",\n  UPDATE_BETA_CARD_SHOWN: \"UPDATE_BETA_CARD_SHOWN\",\n  CLOSE_BETA_CARD_SHOWN: \"CLOSE_BETA_CARD_SHOWN\",\n  GET_DEFAULT_PLUGINS_REQUEST: \"GET_DEFAULT_PLUGINS_REQUEST\",\n  GET_DEFAULT_PLUGINS_SUCCESS: \"GET_DEFAULT_PLUGINS_SUCCESS\",\n  GET_TEMPLATE_INIT: \"GET_TEMPLATES_INIT\",\n  GET_TEMPLATE_SUCCESS: \"GET_TEMPLATES_SUCCESS\",\n  START_EXECUTE_JS_FUNCTION: \"START_EXECUTE_JS_FUNCTION\",\n  RESET_PAGE_LIST: \"RESET_PAGE_LIST\",\n  SET_ACTIVE_JS_ACTION: \"SET_ACTIVE_JS_ACTION\",\n  RECORD_RECENTLY_ADDED_WIDGET: \"RECORD_RECENTLY_ADDED_WIDGET\",\n  REMOVE_FROM_RECENTLY_ADDED_WIDGET: \"REMOVE_FROM_RECENTLY_ADDED_WIDGET\",\n  SHOW_TEMPLATES_MODAL: \"SHOW_TEMPLATES_MODAL\",\n  GET_TEMPLATE_FILTERS_INIT: \"GET_TEMPLATE_FILTERS_INIT\",\n  GET_TEMPLATE_FILTERS_SUCCESS: \"GET_TEMPLATE_FILTERS_SUCCESS\",\n  INIT_TRIGGER_VALUES: \"INIT_TRIGGER_VALUES\",\n  FETCH_TRIGGER_VALUES_INIT: \"FETCH_TRIGGER_VALUES_INIT\",\n  FETCH_TRIGGER_VALUES_SUCCESS: \"FETCH_TRIGGER_VALUES_SUCCESS\",\n  SET_TRIGGER_VALUES_LOADING: \"SET_TRIGGER_VALUES_LOADING\",\n  OPEN_APP_SETTINGS_PANE: \"OPEN_APP_SETTINGS_PANE\",\n  CLOSE_APP_SETTINGS_PANE: \"CLOSE_APP_SETTINGS_PANE\",\n  FETCH_CURRENT_TENANT_CONFIG: \"FETCH_CURRENT_TENANT_CONFIG\",\n  FETCH_CURRENT_TENANT_CONFIG_SUCCESS: \"FETCH_CURRENT_TENANT_CONFIG_SUCCESS\",\n  SET_FOCUS_HISTORY: \"SET_FOCUS_HISTORY\",\n  SET_FOCUSABLE_PROPERTY_FIELD: \"SET_FOCUSABLE_PROPERTY_FIELD\",\n  ROUTE_CHANGED: \"ROUTE_CHANGED\",\n  SET_API_PANE_CONFIG_SELECTED_TAB: \"SET_API_PANE_CONFIG_SELECTED_TAB\",\n  SET_API_PANE_RESPONSE_SELECTED_TAB: \"SET_API_PANE_RESPONSE_SELECTED_TAB\",\n  SET_API_PANE_RESPONSE_PANE_HEIGHT: \"SET_API_PANE_RESPONSE_PANE_HEIGHT\",\n  SET_API_RIGHT_PANE_SELECTED_TAB: \"SET_API_RIGHT_PANE_SELECTED_TAB\",\n  SET_EDITOR_FIELD_FOCUS: \"SET_EDITOR_FIELD_FOCUS\",\n  SET_FOCUSABLE_INPUT_FIELD: \"SET_FOCUSABLE_INPUT_FIELD\",\n  SET_CODE_EDITOR_CURSOR: \"SET_CODE_EDITOR_CURSOR\",\n  SET_CODE_EDITOR_CURSOR_HISTORY: \"SET_CODE_EDITOR_CURSOR_HISTORY\",\n  SET_EVAL_POPUP_STATE: \"SET_EVAL_POPUP_STATE\",\n  APPEND_SELECTED_WIDGET_TO_URL: \"APPEND_SELECTED_WIDGET_TO_URL\",\n  SET_ALL_PROPERTY_SECTION_STATE: \"SET_ALL_PROPERTY_SECTION_STATE\",\n  SET_PROPERTY_SECTION_STATE: \"SET_PROPERTY_SECTION_STATE\",\n  SET_SELECTED_PROPERTY_TAB_INDEX: \"SET_SELECTED_PROPERTY_TAB_INDEX\",\n  SET_CANVAS_DEBUGGER_SELECTED_TAB: \"SET_CANVAS_DEBUGGER_SELECTED_TAB\",\n  SET_QUERY_PANE_CONFIG_SELECTED_TAB: \"SET_QUERY_PANE_CONFIG_SELECTED_TAB\",\n  SET_QUERY_PANE_RESPONSE_SELECTED_TAB: \"SET_QUERY_PANE_RESPONSE_SELECTED_TAB\",\n  SET_QUERY_PANE_RESPONSE_PANE_HEIGHT: \"SET_QUERY_PANE_RESPONSE_PANE_HEIGHT\",\n  SET_JS_PANE_CONFIG_SELECTED_TAB: \"SET_JS_PANE_CONFIG_SELECTED_TAB\",\n  SET_JS_PANE_RESPONSE_SELECTED_TAB: \"SET_JS_PANE_RESPONSE_SELECTED_TAB\",\n  SET_JS_PANE_RESPONSE_PANE_HEIGHT: \"SET_JS_PANE_RESPONSE_PANE_HEIGHT\",\n  SET_SELECTED_PANEL_PROPERTY: \"SET_SELECTED_PANEL_PROPERTY\",\n  UNSET_SELECTED_PANEL_PROPERTY: \"UNSET_SELECTED_PANEL_PROPERTY\",\n  SET_SELECTED_PANELS: \"SET_SELECTED_PANELS\",\n  SET_PANEL_SELECTED_PROPERTY_TAB_INDEX:\n    \"SET_PANEL_SELECTED_PROPERTY_TAB_INDEX\",\n  SET_PANEL_PROPERTY_SECTION_STATE: \"SET_PANEL_PROPERTY_SECTION_STATE\",\n  SET_WIDGET_SELECTED_PROPERTY_TAB_INDEX:\n    \"SET_WIDGET_SELECTED_PROPERTY_TAB_INDEX\",\n  SET_WIDGET_PROPERTY_SECTION_STATE: \"SET_WIDGET_PROPERTY_SECTION_STATE\",\n  SET_PANEL_PROPERTIES_STATE: \"SET_PANEL_PROPERTIES_STATE\",\n  SET_ENTITY_COLLAPSIBLE_STATE: \"SET_ENTITY_COLLAPSIBLE_STATE\",\n  SET_ALL_ENTITY_COLLAPSIBLE_STATE: \"SET_ALL_ENTITY_COLLAPSIBLE_STATE\",\n  SET_ALL_SUB_ENTITY_COLLAPSIBLE_STATE: \"SET_ALL_SUB_ENTITY_COLLAPSIBLE_STATE\",\n  SET_EXPLORER_SWITCH_INDEX: \"SET_EXPLORER_SWITCH_INDEX\",\n  SET_AUTO_HEIGHT_LAYOUT_TREE: \"SET_AUTO_HEIGHT_LAYOUT_TREE\",\n  UPDATE_MULTIPLE_WIDGET_PROPERTIES: \"UPDATE_MULTIPLE_WIDGET_PROPERTIES\",\n  SET_CANVAS_LEVELS_MAP: \"SET_CANVAS_LEVELS_MAP\",\n  GENERATE_AUTO_HEIGHT_LAYOUT_TREE: \"GENERATE_AUTO_HEIGHT_LAYOUT_TREE\",\n  CHECK_CONTAINERS_FOR_AUTO_HEIGHT: \"CHECK_CONTAINERS_FOR_AUTO_HEIGHT\",\n  UPDATE_WIDGET_AUTO_HEIGHT: \"UPDATE_WIDGET_AUTO_HEIGHT\",\n  SET_LINT_ERRORS: \"SET_LINT_ERRORS\",\n  SET_AUTO_HEIGHT_WITH_LIMITS_CHANGING: \"SET_AUTO_HEIGHT_WITH_LIMITS_CHANGING\",\n  PROCESS_AUTO_HEIGHT_UPDATES: \"PROCESS_AUTO_HEIGHT_UPDATES\",\n  LINT_TREE: \"LINT_TREE\",\n  UPDATE_LINT_GLOBALS: \"UPDATE_LINT_GLOBALS\",\n  REMOVE_TEMP_DATASOURCE_SUCCESS: \"REMOVE_TEMP_DATASOURCE_SUCCESS\",\n  SET_DATASOURCE_SAVE_ACTION_FLAG: \"SET_DATASOURCE_SAVE_ACTION_FLAG\",\n  SET_DATASOURCE_SAVE_ACTION_FROM_POPUP_FLAG:\n    \"SET_DATASOURCE_SAVE_ACTION_FROM_POPUP_FLAG\",\n  DIRECT_DOM_UPDATE_AUTO_HEIGHT: \"DIRECT_DOM_UPDATE_AUTO_HEIGHT\",\n  SET_DATASOURCE_DEFAULT_KEY_VALUE_PAIR_SET:\n    \"SET_DATASOURCE_DEFAULT_KEY_VALUE_PAIR_SET\",\n  RESET_DATASOURCE_DEFAULT_KEY_VALUE_PAIR_SET:\n    \"RESET_DATASOURCE_DEFAULT_KEY_VALUE_PAIR_SET\",\n  INITIALIZE_DATASOURCE_FORM_WITH_DEFAULTS:\n    \"INITIALIZE_DATASOURCE_FORM_WITH_DEFAULTS\",\n  SEGMENT_INITIALIZED: \"SEGMENT_INITIALIZED\",\n  SEGMENT_INIT_UNCERTAIN: \"SEGMENT_INIT_UNCERTAIN\",\n  SET_TABS_PANE_WIDTH: \"SET_TABS_PANE_WIDTH\",\n  SET_PANE_COUNT: \"SET_PANE_COUNT\",\n  AUTOLAYOUT_REORDER_WIDGETS: \"AUTOLAYOUT_REORDER_WIDGETS\",\n  AUTOLAYOUT_ADD_NEW_WIDGETS: \"AUTOLAYOUT_ADD_NEW_WIDGETS\",\n  RECALCULATE_COLUMNS: \"RECALCULATE_COLUMNS\",\n};\n\nexport type ReduxActionType = typeof ReduxActionTypes[keyof typeof ReduxActionTypes];\n\nexport const ReduxActionErrorTypes = {\n  GIT_DISCARD_CHANGES_ERROR: \"GIT_DISCARD_CHANGES_ERROR\",\n  DELETE_BRANCH_WARNING: \"DELETE_BRANCH_WARNING\",\n  DELETE_BRANCH_ERROR: \"DELETE_BRANCH_ERROR\",\n  GIT_PULL_ERROR: \"GIT_PULL_ERROR\",\n  FETCH_MERGE_STATUS_ERROR: \"FETCH_MERGE_STATUS_ERROR\",\n  MERGE_BRANCH_ERROR: \"MERGE_BRANCH_ERROR\",\n  FETCH_GIT_STATUS_ERROR: \"FETCH_GIT_STATUS_ERROR\",\n  CREATE_NEW_BRANCH_ERROR: \"CREATE_NEW_BRANCH_ERROR\",\n  CHECKOUT_BRANCH_ERROR: \"CHECKOUT_BRANCH_ERROR\",\n  FETCH_BRANCHES_ERROR: \"FETCH_BRANCHES_ERROR\",\n  FETCH_LOCAL_GIT_CONFIG_ERROR: \"FETCH_LOCAL_GIT_CONFIG_ERROR\",\n  UPDATE_LOCAL_GIT_CONFIG_ERROR: \"UPDATE_LOCAL_GIT_CONFIG_ERROR\",\n  PUSH_TO_GIT_ERROR: \"PUSH_TO_GIT_ERROR\",\n  FETCH_SSH_KEY_PAIR_ERROR: \"FETCH_SSH_KEY_PAIR_ERROR\",\n  UPDATE_GLOBAL_GIT_CONFIG_ERROR: \"UPDATE_GLOBAL_GIT_CONFIG_ERROR\",\n  FETCH_GLOBAL_GIT_CONFIG_ERROR: \"FETCH_GLOBAL_GIT_CONFIG_ERROR\",\n  CONNECT_TO_GIT_ERROR: \"CONNECT_TO_GIT_ERROR\",\n  DISCONNECT_TO_GIT_ERROR: \"DISCONNECT_TO_GIT_ERROR\",\n  COMMIT_TO_GIT_REPO_ERROR: \"COMMIT_TO_GIT_REPO_ERROR\",\n  FETCH_FEATURE_FLAGS_ERROR: \"FETCH_FEATURE_FLAGS_ERROR\",\n  FETCH_NOTIFICATIONS_ERROR: \"FETCH_NOTIFICATIONS_ERROR\",\n  MARK_ALL_NOTIFICAIONS_AS_READ_ERROR: \"MARK_ALL_NOTIFICAIONS_AS_READ_ERROR\",\n  FETCH_UNREAD_NOTIFICATIONS_COUNT_ERROR:\n    \"FETCH_UNREAD_NOTIFICATIONS_COUNT_ERROR\",\n  INITIALIZE_APPSMITH_ERROR: \"INITIALIZE_APPSMITH_ERROR\",\n  API_ERROR: \"API_ERROR\",\n  WIDGET_DELETE_ERROR: \"WIDGET_DELETE_ERROR\",\n  UPDATE_APPLICATION_ERROR: \"UPDATE_APPLICATION_ERROR\",\n  UPDATE_APP_LAYOUT_ERROR: \"UPDATE_APP_LAYOUT_ERROR\",\n  WIDGET_MOVE_ERROR: \"WIDGET_MOVE_ERROR\",\n  WIDGET_RESIZE_ERROR: \"WIDGET_RESIZE_ERROR\",\n  WIDGET_REMOVE_CHILD_ERROR: \"WIDGET_REMOVE_CHILD_ERROR\",\n  WIDGET_ADD_CHILD_ERROR: \"WIDGET_ADD_CHILD_ERROR\",\n  FETCH_PAGE_ERROR: \"FETCH_PAGE_ERROR\",\n  SAVE_PAGE_ERROR: \"SAVE_PAGE_ERROR\",\n  FETCH_WIDGET_CARDS_ERROR: \"FETCH_WIDGET_CARDS_ERROR\",\n  WIDGET_OPERATION_ERROR: \"WIDGET_OPERATION_ERROR\",\n  WIDGET_SELECTION_ERROR: \"WIDGET_SELECTION_ERROR\",\n  FETCH_PROPERTY_PANE_CONFIGS_ERROR: \"FETCH_PROPERTY_PANE_CONFIGS_ERROR\",\n  FETCH_CONFIGS_ERROR: \"FETCH_CONFIGS_ERROR\",\n  PROPERTY_PANE_ERROR: \"PROPERTY_PANE_ERROR\",\n  FETCH_ACTIONS_ERROR: \"FETCH_ACTIONS_ERROR\",\n  FETCH_JS_ACTIONS_ERROR: \"FETCH_JS_ACTIONS_ERROR\",\n  UPDATE_WIDGET_PROPERTY_ERROR: \"UPDATE_WIDGET_PROPERTY_ERROR\",\n  CREATE_ACTION_ERROR: \"CREATE_ACTION_ERROR\",\n  UPDATE_ACTION_ERROR: \"UPDATE_ACTION_ERROR\",\n  DELETE_ACTION_ERROR: \"DELETE_ACTION_ERROR\",\n  RUN_ACTION_ERROR: \"RUN_ACTION_ERROR\",\n  EXECUTE_PLUGIN_ACTION_ERROR: \"EXECUTE_PLUGIN_ACTION_ERROR\",\n  FETCH_DATASOURCES_ERROR: \"FETCH_DATASOURCES_ERROR\",\n  FETCH_MOCK_DATASOURCES_ERROR: \"FETCH_MOCK_DATASOURCES_ERROR\",\n  ADD_MOCK_DATASOURCES_ERROR: \"ADD_MOCK_DATASOURCES_ERROR\",\n  SEARCH_APIORPROVIDERS_ERROR: \"SEARCH_APIORPROVIDERS_ERROR\",\n  UPDATE_DATASOURCE_ERROR: \"UPDATE_DATASOURCE_ERROR\",\n  SAVE_DATASOURCE_NAME_ERROR: \"SAVE_DATASOURCE_NAME_ERROR\",\n  UPDATE_DATASOURCE_NAME_ERROR: \"UPDATE_DATASOURCE_NAME_ERROR\",\n  CREATE_DATASOURCE_ERROR: \"CREATE_DATASOURCE_ERROR\",\n  DELETE_DATASOURCE_ERROR: \"DELETE_DATASOURCE_ERROR\",\n  FETCH_DATASOURCE_STRUCTURE_ERROR: \"FETCH_DATASOURCE_STRUCTURE_ERROR\",\n  REFRESH_DATASOURCE_STRUCTURE_ERROR: \"REFRESH_DATASOURCE_STRUCTURE_ERROR\",\n  CREATE_ONBOARDING_DBQUERY_ERROR: \"CREATE_ONBOARDING_DBQUERY_ERROR\",\n  FETCH_PUBLISHED_PAGE_ERROR: \"FETCH_PUBLISHED_PAGE_ERROR\",\n  PUBLISH_APPLICATION_ERROR: \"PUBLISH_APPLICATION_ERROR\",\n  FETCH_USER_DETAILS_ERROR: \"FETCH_USER_DETAILS_ERROR\",\n  CREATE_PAGE_ERROR: \"CREATE_PAGE_ERROR\",\n  FETCH_PAGE_LIST_ERROR: \"FETCH_PAGE_LIST_ERROR\",\n  FETCH_APPLICATION_ERROR: \"FETCH_APPLICATION_ERROR\",\n  CREATE_APPLICATION_ERROR: \"CREATE_APPLICATION_ERROR\",\n  LOGIN_USER_ERROR: \"LOGIN_USER_ERROR\",\n  CREATE_USER_ERROR: \"CREATE_USER_ERROR\",\n  RESET_USER_PASSWORD_ERROR: \"RESET_USER_PASSWORD_ERROR\",\n  CHANGE_WORKSPACE_USER_ROLE_ERROR: \"CHANGE_WORKSPACE_USER_ROLE_ERROR\",\n  SAVE_JS_EXECUTION_RECORD: \"SAVE_JS_EXECUTION_RECORD\",\n  FETCH_PLUGINS_ERROR: \"FETCH_PLUGINS_ERROR\",\n  FETCH_PLUGIN_FORM_CONFIGS_ERROR: \"FETCH_PLUGIN_FORM_CONFIGS_ERROR\",\n  UPDATE_WORKSPACE_NAME_ERROR: \"UPDATE_WORKSPACE_NAME_ERROR\",\n  SWITCH_WORKSPACE_ERROR: \"SWITCH_WORKSPACE_ERROR\",\n  TEST_DATASOURCE_ERROR: \"TEST_DATASOURCE_ERROR\",\n  FORGOT_PASSWORD_ERROR: \"FORGOT_PASSWORD_ERROR\",\n  RESET_PASSWORD_VERIFY_TOKEN_ERROR: \"RESET_PASSWORD_VERIFY_TOKEN_ERROR\",\n  FETCH_WORKSPACE_ROLES_ERROR: \"FETCH_WORKSPACE_ROLES_ERROR\",\n  INVITE_USERS_TO_WORKSPACE_ERROR: \"INVITE_USERS_TO_WORKSPACE_ERROR\",\n  SAVE_WORKSPACE_ERROR: \"SAVE_WORKSPACE_ERROR\",\n  FETCH_WORKSPACE_ERROR: \"FETCH_WORKSPACE_ERROR\",\n  FETCH_WORKSPACES_ERROR: \"FETCH_WORKSPACES_ERROR\",\n  FETCH_USER_ERROR: \"FETCH_USER_ERROR\",\n  SET_CURRENT_USER_ERROR: \"SET_CURRENT_USER_ERROR\",\n  LOGOUT_USER_ERROR: \"LOGOUT_USER_ERROR\",\n  VERIFY_INVITE_ERROR: \"VERIFY_INVITE_ERROR\",\n  UPDATE_PAGE_ERROR: \"UPDATE_PAGE_ERROR\",\n  MOVE_ACTION_ERROR: \"MOVE_ACTION_ERROR\",\n  COPY_ACTION_ERROR: \"COPY_ACTION_ERROR\",\n  DELETE_PAGE_ERROR: \"DELETE_PAGE_ERROR\",\n  CLONE_PAGE_ERROR: \"CLONE_PAGE_ERROR\",\n  DELETE_APPLICATION_ERROR: \"DELETE_APPLICATION_ERROR\",\n  DUPLICATE_APPLICATION_ERROR: \"DUPLICATE_APPLICATION_ERROR\",\n  SET_DEFAULT_APPLICATION_PAGE_ERROR: \"SET_DEFAULT_APPLICATION_PAGE_ERROR\",\n  CREATE_WORKSPACE_ERROR: \"CREATE_WORKSPACE_ERROR\",\n  ADD_USER_TO_WORKSPACE_ERROR: \"ADD_USER_TO_WORKSPACE_ERROR\",\n  UPDATE_WIDGET_NAME_ERROR: \"UPDATE_WIDGET_NAME_ERROR\",\n  FETCH_ACTIONS_FOR_PAGE_ERROR: \"FETCH_ACTIONS_FOR_PAGE_ERROR\",\n  FETCH_IMPORTED_COLLECTIONS_ERROR: \"FETCH_IMPORTED_COLLECTIONS_ERROR\",\n  FETCH_PROVIDERS_ERROR: \"FETCH_PROVIDERS_ERROR\",\n  SUBMIT_CURL_FORM_ERROR: \"SUBMIT_CURL_FORM_ERROR\",\n  FETCH_PROVIDER_TEMPLATES_ERROR: \"FETCH_PROVIDER_TEMPLATES_ERROR\",\n  ADD_API_TO_PAGE_ERROR: \"ADD_API_TO_PAGE_ERROR\",\n  FETCH_PROVIDERS_CATEGORIES_ERROR: \"FETCH_PROVIDERS_CATEGORIES_ERROR\",\n  FETCH_PROVIDERS_WITH_CATEGORY_ERROR: \"FETCH_PROVIDERS_WITH_CATEGORY_ERROR\",\n  CREATE_MODAL_ERROR: \"CREATE_MODAL_ERROR\",\n  FETCH_PROVIDER_DETAILS_BY_PROVIDER_ID_ERROR:\n    \"FETCH_PROVIDER_DETAILS_BY_PROVIDER_ID_ERROR\",\n  SAVE_ACTION_NAME_ERROR: \"SAVE_ACTION_NAME_ERROR\",\n  FETCH_USER_APPLICATIONS_WORKSPACES_ERROR:\n    \"FETCH_USER_APPLICATIONS_WORKSPACES_ERROR\",\n  FORK_APPLICATION_ERROR: \"FORK_APPLICATION_ERROR\",\n  IMPORT_APPLICATION_ERROR: \"IMPORT_APPLICATION_ERROR\",\n  FETCH_ALL_USERS_ERROR: \"FETCH_ALL_USERS_ERROR\",\n  FETCH_ALL_ROLES_ERROR: \"FETCH_ALL_ROLES_ERROR\",\n  UPDATE_USER_DETAILS_ERROR: \"UPDATE_USER_DETAILS_ERROR\",\n  FETCH_ACTIONS_VIEW_MODE_ERROR: \"FETCH_ACTION_VIEW_MODE_ERROR\",\n  SAVE_API_NAME_ERROR: \"SAVE_API_NAME_ERROR\",\n  POPULATE_PAGEDSLS_ERROR: \"POPULATE_PAGEDSLS_ERROR\",\n  FETCH_PAGE_DSL_ERROR: \"FETCH_PAGE_DSL_ERROR\",\n  TOGGLE_ACTION_EXECUTE_ON_LOAD_ERROR: \"TOGGLE_ACTION_EXECUTE_ON_LOAD_ERROR\",\n  COPY_SELECTED_WIDGET_ERROR: \"COPY_SELECTED_WIDGET_ERROR\",\n  PASTE_COPIED_WIDGET_ERROR: \"PASTE_COPIED_WIDGET_ERROR\",\n  FAILED_CORRECTING_BINDING_PATHS: \"FAILED_CORRECTING_BINDING_PATHS\",\n  CREATE_JS_ACTION_ERROR: \"CREATE_JS_ACTION_ERROR\",\n  UPDATE_JS_ACTION_ERROR: \"UPDATE_JS_ACTION_ERROR\",\n  COPY_JS_ACTION_ERROR: \"COPY_JS_ACTION_ERROR\",\n  MOVE_JS_ACTION_ERROR: \"MOVE_JS_ACTION_ERROR\",\n  DELETE_WORKSPACE_USER_ERROR: \"DELETE_WORKSPACE_USER_ERROR\",\n  CHANGE_APPVIEW_ACCESS_ERROR: \"CHANGE_APPVIEW_ACCESS_ERROR\",\n  SAVE_JS_COLLECTION_NAME_ERROR: \"SAVE_JS_COLLECTION_NAME_ERROR\",\n  FETCH_JS_ACTIONS_FOR_PAGE_ERROR: \"FETCH_JS_ACTIONS_FOR_PAGE_ERROR\",\n  FETCH_JS_ACTIONS_VIEW_MODE_ERROR: \"FETCH_JS_ACTIONS_VIEW_MODE_ERROR\",\n  GENERATE_TEMPLATE_PAGE_ERROR: \"GENERATE_TEMPLATE_PAGE_ERROR\",\n  FETCH_PLUGIN_FORM_ERROR: \"FETCH_PLUGIN_FORM_ERROR\",\n  EXECUTE_DATASOURCE_QUERY_ERROR: \"EXECUTE_DATASOURCE_QUERY_ERROR\",\n  INVITED_USER_SIGNUP_ERROR: \"INVITED_USER_SIGNUP_ERROR\",\n  SET_PAGE_ORDER_ERROR: \"SET_PAGE_ORDER_ERROR\",\n  DELETE_JS_ACTION_ERROR: \"DELETE_JS_ACTION_ERROR\",\n  REFACTOR_JS_ACTION_NAME_ERROR: \"REFACTOR_JS_ACTION_NAME_ERROR\",\n  FETCH_RELEASES_ERROR: \"FETCH_RELEASES_ERROR\",\n  RESTART_SERVER_ERROR: \"RESTART_SERVER_ERROR\",\n  UPDATE_JS_ACTION_BODY_ERROR: \"UPDATE_JS_ACTION_BODY_ERROR\",\n  FETCH_APP_THEMES_ERROR: \"FETCH_APP_THEMES_ERROR\",\n  SET_DEFAULT_SELECTED_THEME_ERROR: \"SET_DEFAULT_SELECTED_THEME_ERROR\",\n  FETCH_SELECTED_APP_THEME_ERROR: \"FETCH_SELECTED_APP_THEME_ERROR\",\n  UPDATE_SELECTED_APP_THEME_ERROR: \"UPDATE_SELECTED_APP_THEME_ERROR\",\n  CHANGE_SELECTED_APP_THEME_ERROR: \"CHANGE_SELECTED_APP_THEME_ERROR\",\n  UPDATE_JS_FUNCTION_PROPERTY_ERROR: \"UPDATE_JS_FUNCTION_PROPERTY_ERROR\",\n  DELETE_WORKSPACE_ERROR: \"DELETE_WORKSPACE_ERROR\",\n  REFLOW_BETA_FLAGS_INIT_ERROR: \"REFLOW_BETA_FLAGS_INIT_ERROR\",\n  SAVE_APP_THEME_ERROR: \"SAVE_APP_THEME_ERROR\",\n  DELETE_APP_THEME_ERROR: \"DELETE_APP_THEME_ERROR\",\n  GET_ALL_TEMPLATES_ERROR: \"GET_ALL_TEMPLATES_ERROR\",\n  GET_SIMILAR_TEMPLATES_ERROR: \"GET_SIMILAR_TEMPLATES_ERROR\",\n  IMPORT_TEMPLATE_TO_ORGANISATION_ERROR:\n    \"IMPORT_TEMPLATE_TO_ORGANISATION_ERROR\",\n  IMPORT_TEMPLATE_TO_APPLICATION_ERROR: \"IMPORT_TEMPLATE_TO_APPLICATION_ERROR\",\n  IMPORT_TEMPLATE_TO_WORKSPACE_ERROR: \"IMPORT_TEMPLATE_TO_WORKSPACE_ERROR\",\n  GET_DEFAULT_PLUGINS_ERROR: \"GET_DEFAULT_PLUGINS_ERROR\",\n  GET_TEMPLATE_ERROR: \"GET_TEMPLATE_ERROR\",\n  GET_TEMPLATE_FILTERS_ERROR: \"GET_TEMPLATE_FILTERS_ERROR\",\n  FETCH_CURRENT_TENANT_CONFIG_ERROR: \"FETCH_CURRENT_TENANT_CONFIG_ERROR\",\n  INSTALL_LIBRARY_FAILED: \"INSTALL_LIBRARY_FAILED\",\n  UNINSTALL_LIBRARY_FAILED: \"UNINSTALL_LIBRARY_FAILED\",\n  FETCH_JS_LIBRARIES_FAILED: \"FETCH_JS_LIBRARIES_FAILED\",\n};\n\nexport const ReduxFormActionTypes = {\n  VALUE_CHANGE: \"@@redux-form/CHANGE\",\n  ARRAY_REMOVE: \"@@redux-form/ARRAY_REMOVE\",\n  ARRAY_PUSH: \"@@redux-form/ARRAY_PUSH\",\n};\n\nexport enum ReplayReduxActionTypes {\n  UNDO = \"undo\",\n  REDO = \"redo\",\n}\n\nexport const ReflowReduxActionTypes = {\n  STOP_REFLOW: \"STOP_REFLOW\",\n  REFLOW_MOVE: \"REFLOW_MOVE\",\n};\n\nexport const WidgetReduxActionTypes: { [key: string]: string } = {\n  WIDGET_ADD_CHILD: \"WIDGET_ADD_CHILD\",\n  WIDGET_CHILD_ADDED: \"WIDGET_CHILD_ADDED\",\n  WIDGET_REMOVE_CHILD: \"WIDGET_REMOVE_CHILD\",\n  WIDGET_RESIZE: \"WIDGET_RESIZE\",\n  WIDGET_MODAL_RESIZE: \"WIDGET_MODAL_RESIZE\",\n  WIDGET_DELETE: \"WIDGET_DELETE\",\n  WIDGET_BULK_DELETE: \"WIDGET_BULK_DELETE\",\n  WIDGET_SINGLE_DELETE: \"WIDGET_SINGLE_DELETE\",\n  WIDGET_UPDATE_PROPERTY: \"WIDGET_UPDATE_PROPERTY\",\n};\n\nexport type ReduxActionErrorType = typeof ReduxActionErrorTypes[keyof typeof ReduxActionErrorTypes];\n\nexport interface ReduxAction<T> {\n  type: ReduxActionType | ReduxActionErrorType;\n  payload: T;\n}\n\nexport type ReduxActionWithoutPayload = Pick<ReduxAction<undefined>, \"type\">;\n\nexport interface ReduxActionWithMeta<T, M> extends ReduxAction<T> {\n  meta: M;\n}\n\nexport interface ReduxActionWithCallbacks<T, S, E> extends ReduxAction<T> {\n  onSuccess?: ReduxAction<S>;\n  onError?: ReduxAction<E>;\n  onSuccessCallback?: (response: S) => void;\n  onErrorCallback?: (error: E) => void;\n}\n\nexport type AnyReduxAction = ReduxAction<unknown> | ReduxActionWithoutPayload;\n\nexport interface EvaluationReduxAction<T> extends ReduxAction<T> {\n  postEvalActions?: Array<AnyReduxAction>;\n}\n\nexport interface PromisePayload {\n  reject: any;\n  resolve: any;\n}\n\nexport interface ReduxActionWithPromise<T> extends ReduxAction<T> {\n  payload: T & PromisePayload;\n}\n\nexport interface ReduxActionErrorPayload {\n  message: string;\n  source?: string;\n  code?: ERROR_CODES;\n}\n\nexport interface UpdateCanvasPayload {\n  pageWidgetId: string;\n  widgets: { [widgetId: string]: WidgetProps };\n  currentLayoutId: string;\n  currentPageId: string;\n  currentPageName: string;\n  currentApplicationId: string;\n  pageActions: PageAction[][];\n  updatedWidgetIds?: string[];\n  layoutOnLoadActionErrors?: LayoutOnLoadActionErrors[];\n}\n\nexport interface ShowPropertyPanePayload {\n  widgetId: string;\n  callForDragOrResize: boolean;\n  force: boolean;\n}\n\nexport interface Page {\n  pageName: string;\n  description?: string;\n  pageId: string;\n  isDefault: boolean;\n  latest?: boolean;\n  isHidden?: boolean;\n  slug: string;\n  customSlug?: string;\n  userPermissions?: string[];\n}\n\nexport interface ClonePageSuccessPayload {\n  pageName: string;\n  description?: string;\n  pageId: string;\n  layoutId: string;\n  isDefault: boolean;\n  slug: string;\n}\n\nexport interface ApplicationPayload {\n  id: string;\n  name: string;\n  color?: string;\n  icon?: string;\n  workspaceId: string;\n  defaultPageId: string;\n  isPublic?: boolean;\n  userPermissions?: string[];\n  appIsExample: boolean;\n  slug: string;\n  forkingEnabled?: boolean;\n  appLayout?: AppLayoutConfig;\n  gitApplicationMetadata?: GitApplicationMetadata;\n  lastDeployedAt?: string;\n  applicationId?: string;\n  modifiedBy?: string;\n  modifiedAt?: string;\n  pages: ApplicationPagePayload[];\n  applicationVersion: ApplicationVersion;\n  isAutoUpdate?: boolean;\n  isManualUpdate?: boolean;\n  embedSetting?: AppEmbedSetting;\n  collapseInvisibleWidgets?: boolean;\n}\n\nexport type WorkspaceDetails = {\n  workspace: Workspace;\n  applications: any[];\n};\n\nexport interface LoadWidgetEditorPayload {\n  widgets: WidgetProps[];\n}\n\nexport interface LoadWidgetSidebarPayload {\n  cards: { [id: string]: WidgetCardProps[] };\n}\n","export const APPSMITH_GLOBAL_FUNCTIONS = {\n  navigateTo: \"navigateTo\",\n  showAlert: \"showAlert\",\n  showModal: \"showModal\",\n  closeModal: \"closeModal\",\n  storeValue: \"storeValue\",\n  removeValue: \"removeValue\",\n  clearStore: \"clearStore\",\n  download: \"download\",\n  copyToClipboard: \"copyToClipboard\",\n  resetWidget: \"resetWidget\",\n  setInterval: \"setInterval\",\n  clearInterval: \"clearInterval\",\n  postMessage: \"postWindowMessage\",\n};\n\nexport const APPSMITH_NAMESPACED_FUNCTIONS = {\n  getGeolocation: \"appsmith.geolocation.getCurrentPosition\",\n  watchGeolocation: \"appsmith.geolocation.watchPosition\",\n  stopWatchGeolocation: \"appsmith.geolocation.clearWatch\",\n};\n\nexport const AppsmithFunction = {\n  none: \"none\",\n  integration: \"integration\",\n  jsFunction: \"jsFunction\",\n  ...APPSMITH_GLOBAL_FUNCTIONS,\n  ...APPSMITH_NAMESPACED_FUNCTIONS,\n};\n\nexport const RESET_CHILDREN_OPTIONS = [\n  { label: \"true\", value: \"true\", id: \"true\" },\n  { label: \"false\", value: \"false\", id: \"false\" },\n];\n\nexport const FILE_TYPE_OPTIONS = [\n  { label: \"Select file type (optional)\", value: \"\", id: \"\" },\n  { label: \"Plain text\", value: \"'text/plain'\", id: \"text/plain\" },\n  { label: \"HTML\", value: \"'text/html'\", id: \"text/html\" },\n  { label: \"CSV\", value: \"'text/csv'\", id: \"text/csv\" },\n  { label: \"JSON\", value: \"'application/json'\", id: \"application/json\" },\n  { label: \"JPEG\", value: \"'image/jpeg'\", id: \"image/jpeg\" },\n  { label: \"PNG\", value: \"'image/png'\", id: \"image/png\" },\n  { label: \"SVG\", value: \"'image/svg+xml'\", id: \"image/svg+xml\" },\n];\n\nexport const NAVIGATION_TARGET_FIELD_OPTIONS = [\n  {\n    label: \"Same window\",\n    value: \"'SAME_WINDOW'\",\n    id: \"SAME_WINDOW\",\n  },\n  {\n    label: \"New window\",\n    value: \"'NEW_WINDOW'\",\n    id: \"NEW_WINDOW\",\n  },\n];\n\nexport const ViewTypes = {\n  SELECTOR_VIEW: \"SELECTOR_VIEW\",\n  KEY_VALUE_VIEW: \"KEY_VALUE_VIEW\",\n  TEXT_VIEW: \"TEXT_VIEW\",\n  BOOL_VIEW: \"BOOL_VIEW\",\n  TAB_VIEW: \"TAB_VIEW\",\n  NO_VIEW: \"NO_VIEW\",\n};\n\nexport const NAVIGATE_TO_TAB_OPTIONS = {\n  PAGE_NAME: \"page-name\",\n  URL: \"url\",\n};\n\nexport enum FieldType {\n  ACTION_SELECTOR_FIELD = \"ACTION_SELECTOR_FIELD\",\n  ON_SUCCESS_FIELD = \"ON_SUCCESS_FIELD\",\n  ON_ERROR_FIELD = \"ON_ERROR_FIELD\",\n  SHOW_MODAL_FIELD = \"SHOW_MODAL_FIELD\",\n  CLOSE_MODAL_FIELD = \"CLOSE_MODAL_FIELD\",\n  PAGE_SELECTOR_FIELD = \"PAGE_SELECTOR_FIELD\",\n  KEY_VALUE_FIELD = \"KEY_VALUE_FIELD\",\n  URL_FIELD = \"URL_FIELD\",\n  ALERT_TEXT_FIELD = \"ALERT_TEXT_FIELD\",\n  ALERT_TYPE_SELECTOR_FIELD = \"ALERT_TYPE_SELECTOR_FIELD\",\n  KEY_TEXT_FIELD = \"KEY_TEXT_FIELD\",\n  VALUE_TEXT_FIELD = \"VALUE_TEXT_FIELD\",\n  QUERY_PARAMS_FIELD = \"QUERY_PARAMS_FIELD\",\n  DOWNLOAD_DATA_FIELD = \"DOWNLOAD_DATA_FIELD\",\n  DOWNLOAD_FILE_NAME_FIELD = \"DOWNLOAD_FILE_NAME_FIELD\",\n  DOWNLOAD_FILE_TYPE_FIELD = \"DOWNLOAD_FILE_TYPE_FIELD\",\n  COPY_TEXT_FIELD = \"COPY_TEXT_FIELD\",\n  NAVIGATION_TARGET_FIELD = \"NAVIGATION_TARGET_FIELD\",\n  WIDGET_NAME_FIELD = \"WIDGET_NAME_FIELD\",\n  RESET_CHILDREN_FIELD = \"RESET_CHILDREN_FIELD\",\n  ARGUMENT_KEY_VALUE_FIELD = \"ARGUMENT_KEY_VALUE_FIELD\",\n  CALLBACK_FUNCTION_FIELD = \"CALLBACK_FUNCTION_FIELD\",\n  DELAY_FIELD = \"DELAY_FIELD\",\n  ID_FIELD = \"ID_FIELD\",\n  CLEAR_INTERVAL_ID_FIELD = \"CLEAR_INTERVAL_ID_FIELD\",\n  MESSAGE_FIELD = \"MESSAGE_FIELD\",\n  TARGET_ORIGIN_FIELD = \"TARGET_ORIGIN_FIELD\",\n  SOURCE_FIELD = \"SOURCE_FIELD\",\n  PAGE_NAME_AND_URL_TAB_SELECTOR_FIELD = \"PAGE_NAME_AND_URL_TAB_SELECTOR_FIELD\",\n}\n","export default {\n  API: [\"DELETE\", \"SAVE\"],\n  DB: [\"DELETE\", \"TEST\", \"SAVE\"],\n  SAAS: [\"DELETE\", \"SAVE_AND_AUTHORIZE\"],\n  REMOTE: [\"DELETE\", \"SAVE\"],\n};\n","export default {\n  \"actionConfiguration.body\": [\n    \"actionConfiguration.pluginSpecifiedTemplates[0].value\",\n  ],\n};\n","export default [\n  {\n    sectionName: \"\",\n    id: 1,\n    children: [\n      {\n        label: \"Path\",\n        configProperty: \"actionConfiguration.path\",\n        controlType: \"QUERY_DYNAMIC_INPUT_TEXT\",\n      },\n      {\n        label: \"Body\",\n        configProperty: \"actionConfiguration.body\",\n        controlType: \"QUERY_DYNAMIC_INPUT_TEXT\",\n        evaluationSubstitutionType: \"SMART_SUBSTITUTE\",\n        hidden: {\n          path: \"actionConfiguration.pluginSpecifiedTemplates[0].value\",\n          comparison: \"EQUALS\",\n          value: false,\n        },\n      },\n      {\n        label: \"Body\",\n        configProperty: \"actionConfiguration.body\",\n        controlType: \"QUERY_DYNAMIC_INPUT_TEXT\",\n        evaluationSubstitutionType: \"TEMPLATE\",\n        hidden: {\n          path: \"actionConfiguration.pluginSpecifiedTemplates[0].value\",\n          comparison: \"EQUALS\",\n          value: true,\n        },\n      },\n      {\n        label: \"Query Parameters\",\n        configProperty: \"actionConfiguration.queryParameters\",\n        controlType: \"ARRAY_FIELD\",\n        schema: [\n          {\n            label: \"Key\",\n            key: \"key\",\n            controlType: \"QUERY_DYNAMIC_INPUT_TEXT\",\n            placeholderText: \"Key\",\n          },\n          {\n            label: \"Value\",\n            key: \"value\",\n            controlType: \"QUERY_DYNAMIC_INPUT_TEXT\",\n            placeholderText: \"Value\",\n          },\n        ],\n      },\n      {\n        label: \"Headers\",\n        configProperty: \"actionConfiguration.headers\",\n        controlType: \"ARRAY_FIELD\",\n        schema: [\n          {\n            label: \"Key\",\n            key: \"key\",\n            controlType: \"QUERY_DYNAMIC_INPUT_TEXT\",\n            placeholderText: \"Key\",\n          },\n          {\n            label: \"Value\",\n            key: \"value\",\n            controlType: \"QUERY_DYNAMIC_INPUT_TEXT\",\n            placeholderText: \"Value\",\n          },\n        ],\n      },\n      {\n        label: \"Form data\",\n        configProperty: \"actionConfiguration.bodyFormData\",\n        controlType: \"ARRAY_FIELD\",\n        schema: [\n          {\n            label: \"Key\",\n            key: \"key\",\n            controlType: \"QUERY_DYNAMIC_INPUT_TEXT\",\n            placeholderText: \"Key\",\n          },\n          {\n            label: \"Value\",\n            key: \"value\",\n            controlType: \"QUERY_DYNAMIC_INPUT_TEXT\",\n            placeholderText: \"Value\",\n          },\n        ],\n      },\n      {\n        label: \"Query Variables\",\n        configProperty: \"actionConfiguration.pluginSpecifiedTemplates[1].value\",\n        controlType: \"QUERY_DYNAMIC_INPUT_TEXT\",\n        evaluationSubstitutionType: \"SMART_SUBSTITUTE\",\n        hidden: {\n          path: \"actionConfiguration.pluginSpecifiedTemplates[0].value\",\n          comparison: \"EQUALS\",\n          value: false,\n        },\n      },\n      {\n        label: \"Query Variables\",\n        configProperty: \"actionConfiguration.pluginSpecifiedTemplates[1].value\",\n        controlType: \"QUERY_DYNAMIC_INPUT_TEXT\",\n        evaluationSubstitutionType: \"TEMPLATE\",\n        hidden: {\n          path: \"actionConfiguration.pluginSpecifiedTemplates[0].value\",\n          comparison: \"EQUALS\",\n          value: true,\n        },\n      },\n      {\n        label: \"Pagination\",\n        configProperty: \"actionConfiguration.pluginSpecifiedTemplates[2].value\",\n        controlType: \"E_GRAPHQL_PAGINATION\",\n        evaluationSubstitutionType: \"SMART_SUBSTITUTE\",\n      },\n    ],\n  },\n];\n","export default [\n  {\n    sectionName: \"\",\n    id: 1,\n    children: [\n      {\n        label: \"Run API on Page load\",\n        configProperty: \"executeOnLoad\",\n        controlType: \"SWITCH\",\n        subtitle: \"Will refresh data each time the page is loaded\",\n      },\n      {\n        label: \"Request confirmation before running API\",\n        configProperty: \"confirmBeforeExecute\",\n        controlType: \"SWITCH\",\n        subtitle:\n          \"Ask confirmation from the user each time before refreshing data\",\n      },\n      {\n        label: \"Encode query params\",\n        configProperty: \"actionConfiguration.encodeParamsToggle\",\n        controlType: \"SWITCH\",\n        subtitle:\n          \"Encode query params for all APIs. Also encode form body when Content-Type header is set to x-www-form-encoded\",\n      },\n      {\n        label: \"Smart JSON Substitution\",\n        configProperty: \"actionConfiguration.pluginSpecifiedTemplates[0].value\",\n        controlType: \"SWITCH\",\n        subtitle:\n          \"Turning on this property fixes the JSON substitution of bindings in API body by adding/removing quotes intelligently and reduces developer errors\",\n        initialValue: true,\n      },\n      {\n        label: \"API timeout (in milliseconds)\",\n        subtitle: \"Maximum time after which the API will return\",\n        controlType: \"INPUT_TEXT\",\n        configProperty: \"actionConfiguration.timeoutInMillisecond\",\n        dataType: \"NUMBER\",\n      },\n    ],\n  },\n];\n","export default [\n  {\n    sectionName: \"\",\n    id: 1,\n    children: [\n      {\n        label: \"Run API on Page load\",\n        configProperty: \"executeOnLoad\",\n        controlType: \"SWITCH\",\n        subtitle: \"Will refresh data each time the page is loaded\",\n      },\n      {\n        label: \"Request confirmation before running API\",\n        configProperty: \"confirmBeforeExecute\",\n        controlType: \"SWITCH\",\n        subtitle:\n          \"Ask confirmation from the user each time before refreshing data\",\n      },\n      {\n        label: \"API timeout (in milliseconds)\",\n        subtitle: \"Maximum time after which the API will return\",\n        configProperty: \"actionConfiguration.timeoutInMillisecond\",\n        controlType: \"INPUT_TEXT\",\n        dataType: \"NUMBER\",\n      },\n    ],\n  },\n];\n","export default [\n  {\n    sectionName: \"\",\n    id: 1,\n    children: [\n      {\n        label: \"Run query on page load\",\n        configProperty: \"executeOnLoad\",\n        controlType: \"SWITCH\",\n        subtitle: \"Will refresh data each time the page is loaded\",\n      },\n      {\n        label: \"Request confirmation before running query\",\n        configProperty: \"confirmBeforeExecute\",\n        controlType: \"SWITCH\",\n        subtitle:\n          \"Ask confirmation from the user each time before refreshing data\",\n      },\n      {\n        label: \"Query timeout (in milliseconds)\",\n        subtitle: \"Maximum time after which the query will return\",\n        configProperty: \"actionConfiguration.timeoutInMillisecond\",\n        controlType: \"INPUT_TEXT\",\n        dataType: \"NUMBER\",\n      },\n    ],\n  },\n];\n","import { invert } from \"lodash\";\n\n/**\n * mapping of tailwind colors\n *\n * NOTE: these are used in colorpicker\n */\nexport type TailwindColors = {\n  [key: string]: {\n    [key: string]: string;\n  };\n};\n\nexport const TAILWIND_COLORS: TailwindColors = {\n  gray: {\n    50: \"#fafafa\",\n    100: \"#f4f4f5\",\n    200: \"#e4e4e7\",\n    300: \"#d4d4d8\",\n    400: \"#a1a1aa\",\n    500: \"#71717a\",\n    600: \"#52525b\",\n    700: \"#3f3f46\",\n    800: \"#27272a\",\n    900: \"#18181b\",\n  },\n  red: {\n    50: \"#fef2f2\",\n    100: \"#fee2e2\",\n    200: \"#fecaca\",\n    300: \"#fca5a5\",\n    400: \"#f87171\",\n    500: \"#ef4444\",\n    600: \"#dc2626\",\n    700: \"#b91c1c\",\n    800: \"#991b1b\",\n    900: \"#7f1d1d\",\n  },\n\n  yellow: {\n    50: \"#fefce8\",\n    100: \"#fef9c3\",\n    200: \"#fef08a\",\n    300: \"#fde047\",\n    400: \"#facc15\",\n    500: \"#eab308\",\n    600: \"#ca8a04\",\n    700: \"#a16207\",\n    800: \"#854d0e\",\n    900: \"#713f12\",\n  },\n\n  green: {\n    50: \"#f0fdf4\",\n    100: \"#dcfce7\",\n    200: \"#bbf7d0\",\n    300: \"#86efac\",\n    400: \"#4ade80\",\n    500: \"#22c55e\",\n    600: \"#16a34a\",\n    700: \"#15803d\",\n    800: \"#166534\",\n    900: \"#14532d\",\n  },\n  blue: {\n    50: \"#eff6ff\",\n    100: \"#dbeafe\",\n    200: \"#bfdbfe\",\n    300: \"#93c5fd\",\n    400: \"#60a5fa\",\n    500: \"#3b82f6\",\n    600: \"#2563eb\",\n    700: \"#1d4ed8\",\n    800: \"#1e40af\",\n    900: \"#1e3a8a\",\n  },\n  indigo: {\n    50: \"#eef2ff\",\n    100: \"#e0e7ff\",\n    200: \"#c7d2fe\",\n    300: \"#a5b4fc\",\n    400: \"#818cf8\",\n    500: \"#6366f1\",\n    600: \"#4f46e5\",\n    700: \"#4338ca\",\n    800: \"#3730a3\",\n    900: \"#312e81\",\n  },\n  purple: {\n    50: \"#faf5ff\",\n    100: \"#f3e8ff\",\n    200: \"#e9d5ff\",\n    300: \"#d8b4fe\",\n    400: \"#c084fc\",\n    500: \"#a855f7\",\n    600: \"#9333ea\",\n    700: \"#7e22ce\",\n    800: \"#6b21a8\",\n    900: \"#581c87\",\n  },\n  pink: {\n    50: \"#fdf2f8\",\n    100: \"#fce7f3\",\n    200: \"#fbcfe8\",\n    300: \"#f9a8d4\",\n    400: \"#f472b6\",\n    500: \"#ec4899\",\n    600: \"#db2777\",\n    700: \"#be185d\",\n    800: \"#9d174d\",\n    900: \"#831843\",\n  },\n};\n\nexport const bindingPrefix = \"appsmith.theme\";\n\nexport const getThemePropertyBinding = (property: string) =>\n  `{{${bindingPrefix}.${property}}}`;\n\nexport const borderRadiusPropertyName = \"borderRadius\";\n\n/**\n * border radius options to be shown in property pane\n */\nexport const borderRadiusOptions: Record<string, string> = {\n  none: \"0px\",\n  M: \"0.375rem\",\n  L: \"1.5rem\",\n};\n\nexport const invertedBorderRadiusOptions: Record<string, string> = invert(\n  borderRadiusOptions,\n);\n\nexport const boxShadowPropertyName = \"boxShadow\";\n\n/**\n * box shadow options to be shown in property pane\n */\nexport const boxShadowOptions: Record<string, string> = {\n  none: \"none\",\n  S: \"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)\",\n  M: \"0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)\",\n  L: \"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)\",\n};\n\nexport const invertedBoxShadowOptions: Record<string, string> = invert(\n  boxShadowOptions,\n);\n\nexport const colorsPropertyName = \"colors\";\n\n// Text sizes in theming\nexport const THEMEING_TEXT_SIZES = {\n  xs: \"0.75rem\",\n  sm: \"0.875rem\",\n  base: \"1rem\",\n  md: \"1.125rem\",\n  lg: \"1.5rem\",\n  xl: \"1.875rem\",\n  \"2xl\": \"3rem\",\n  \"3xl\": \"3.75rem\",\n};\n// Text sizes type\nexport type ThemingTextSizes = keyof typeof THEMEING_TEXT_SIZES;\n\n// Theming borderRadius:\nexport const THEMING_BORDER_RADIUS = {\n  none: \"0px\",\n  rounded: \"0.375rem\",\n  circle: \"9999px\",\n};\n\nexport const DEFAULT_BOXSHADOW = \"none\";\n","import { SupportedLayouts } from \"reducers/entityReducers/pageListReducer\";\nimport { WidgetType as FactoryWidgetType } from \"utils/WidgetFactory\";\nimport { THEMEING_TEXT_SIZES } from \"./ThemeConstants\";\nexport type WidgetType = FactoryWidgetType;\n\nexport const SKELETON_WIDGET_TYPE = \"SKELETON_WIDGET\";\n\nexport type ContainerOrientation = \"HORIZONTAL\" | \"VERTICAL\";\n\nexport const PositionTypes: { [id: string]: string } = {\n  ABSOLUTE: \"ABSOLUTE\",\n  CONTAINER_DIRECTION: \"CONTAINER_DIRECTION\",\n};\nexport type PositionType = typeof PositionTypes[keyof typeof PositionTypes];\n\nexport type CSSUnit =\n  | \"px\"\n  | \"cm\"\n  | \"mm\"\n  | \"in\"\n  | \"pt\"\n  | \"pc\"\n  | \"em\"\n  | \"ex\"\n  | \"ch\"\n  | \"rem\"\n  | \"vw\"\n  | \"vh\"\n  | \"vmin\"\n  | \"vmax\"\n  | \"%\";\n\nexport type RenderMode =\n  | \"COMPONENT_PANE\"\n  | \"CANVAS\"\n  | \"PAGE\"\n  | \"CANVAS_SELECTED\";\n\nexport enum RenderModes {\n  COMPONENT_PANE = \"COMPONENT_PANE\",\n  CANVAS = \"CANVAS\",\n  PAGE = \"PAGE\",\n  CANVAS_SELECTED = \"CANVAS_SELECTED\",\n}\n\nexport const CSSUnits: { [id: string]: CSSUnit } = {\n  PIXEL: \"px\",\n  RELATIVE_FONTSIZE: \"rem\",\n  RELATIVE_PARENT: \"%\",\n};\n\nexport interface LayoutConfig {\n  minWidth: number;\n  maxWidth: number;\n}\n\ntype LayoutConfigurations = Record<SupportedLayouts, LayoutConfig>;\nexport const DefaultLayoutType: SupportedLayouts = \"FLUID\";\nexport const layoutConfigurations: LayoutConfigurations = {\n  TABLET_LARGE: {\n    minWidth: 960,\n    maxWidth: 1080,\n  },\n  MOBILE: {\n    minWidth: 350,\n    maxWidth: 450,\n  },\n  DESKTOP: { minWidth: 1160, maxWidth: 1280 },\n  TABLET: { minWidth: 650, maxWidth: 800 },\n  FLUID: { minWidth: -1, maxWidth: -1 },\n};\n\nexport const LATEST_PAGE_VERSION = 77;\n\nexport const GridDefaults = {\n  DEFAULT_CELL_SIZE: 1,\n  DEFAULT_WIDGET_WIDTH: 200,\n  DEFAULT_WIDGET_HEIGHT: 100,\n  DEFAULT_GRID_COLUMNS: 64,\n  DEFAULT_GRID_ROW_HEIGHT: 10,\n  CANVAS_EXTENSION_OFFSET: 2,\n  VIEW_MODE_MAIN_CANVAS_EXTENSION_OFFSET: 5,\n  MAIN_CANVAS_EXTENSION_OFFSET: 8,\n};\n\nexport const CANVAS_MIN_HEIGHT = 380;\n\n// Note: Widget Padding + Container Padding === DEFAULT_GRID_ROW_HEIGHT to gracefully lose one row when a container is used,\n// which wud allow the user to place elements centered inside a container(columns are rendered proportionally so it take cares of itself).\n\nexport const CONTAINER_GRID_PADDING =\n  GridDefaults.DEFAULT_GRID_ROW_HEIGHT * 0.6;\n\nexport const WIDGET_PADDING = GridDefaults.DEFAULT_GRID_ROW_HEIGHT * 0.4;\n\nexport const WIDGET_CLASSNAME_PREFIX = \"WIDGET_\";\nexport const MAIN_CONTAINER_WIDGET_ID = \"0\";\nexport const MAIN_CONTAINER_WIDGET_NAME = \"MainContainer\";\nexport const MODAL_PORTAL_CLASSNAME = \"bp3-modal-widget\";\nexport const MODAL_PORTAL_OVERLAY_CLASSNAME = \"bp3-overlay-zindex\";\nexport const CANVAS_SELECTOR = \"canvas\";\n\nexport const DEFAULT_CENTER = { lat: -34.397, lng: 150.644 };\n\nexport enum FontStyleTypes {\n  BOLD = \"BOLD\",\n  ITALIC = \"ITALIC\",\n  REGULAR = \"REGULAR\",\n  UNDERLINE = \"UNDERLINE\",\n}\n\nexport enum TextSizes {\n  HEADING1 = \"HEADING1\",\n  HEADING2 = \"HEADING2\",\n  HEADING3 = \"HEADING3\",\n  PARAGRAPH = \"PARAGRAPH\",\n  PARAGRAPH2 = \"PARAGRAPH2\",\n}\n\nexport const TEXT_SIZES = {\n  HEADING1: \"24px\",\n  HEADING2: \"18px\",\n  HEADING3: \"16px\",\n  PARAGRAPH: \"14px\",\n  PARAGRAPH2: \"12px\",\n};\n\nexport const WIDGET_STATIC_PROPS = {\n  leftColumn: true,\n  rightColumn: true,\n  topRow: true,\n  bottomRow: true,\n  minHeight: true,\n  parentColumnSpace: true,\n  parentRowSpace: true,\n  children: true,\n  type: true,\n  widgetId: true,\n  widgetName: true,\n  parentId: true,\n  renderMode: true,\n  detachFromLayout: true,\n  noContainerOffset: false,\n  height: false,\n  topRowBeforeCollapse: false,\n  bottomRowBeforeCollapse: false,\n};\n\nexport const WIDGET_DSL_STRUCTURE_PROPS = {\n  bottomRow: true,\n  children: true,\n  requiresFlatWidgetChildren: true,\n  hasMetaWidgets: true,\n  parentId: true,\n  referencedWidgetId: true,\n  topRow: true,\n  type: true,\n  widgetId: true,\n};\n\nexport type TextSize = keyof typeof TextSizes;\n\nexport const DEFAULT_FONT_SIZE = THEMEING_TEXT_SIZES.base;\n\n// The max and min height limits for widgets in rows.\n// 9000 is an arbitrarily large value for the height of a widget\n// In pixels this would be 90000px, which is a fairly large number.\n\n// 4 is the minimum for any widget, as we donot support zero height widgets today.\n// This also makes sure that widgets have sufficient area in which users can interact.\nexport const WidgetHeightLimits = {\n  MAX_HEIGHT_IN_ROWS: 9000,\n  MIN_HEIGHT_IN_ROWS: 4,\n  MIN_CANVAS_HEIGHT_IN_ROWS: 10,\n};\n\nexport const WIDGET_PROPS_TO_SKIP_FROM_EVAL = {\n  children: true,\n  parentId: true,\n  renderMode: true,\n  detachFromLayout: true,\n  noContainerOffset: false,\n  hideCard: true,\n  isDeprecated: true,\n  searchTags: true,\n  iconSVG: true,\n  version: true,\n  displayName: true,\n  topRowBeforeCollapse: false,\n  bottomRowBeforeCollapse: false,\n};\n\nexport const FLEXBOX_PADDING = 4;\n","import { EXECUTION_PARAM_KEY } from \"constants/AppsmithActionConstants/ActionConstants\";\nimport { ValidationConfig } from \"./PropertyControlConstants\";\n\n// Always add a validator function in ./worker/validation for these types\nexport enum ValidationTypes {\n  TEXT = \"TEXT\",\n  REGEX = \"REGEX\",\n  NUMBER = \"NUMBER\",\n  BOOLEAN = \"BOOLEAN\",\n  OBJECT = \"OBJECT\",\n  ARRAY = \"ARRAY\",\n  OBJECT_ARRAY = \"OBJECT_ARRAY\",\n  NESTED_OBJECT_ARRAY = \"NESTED_OBJECT_ARRAY\",\n  DATE_ISO_STRING = \"DATE_ISO_STRING\",\n  IMAGE_URL = \"IMAGE_URL\",\n  FUNCTION = \"FUNCTION\",\n  SAFE_URL = \"SAFE_URL\",\n  ARRAY_OF_TYPE_OR_TYPE = \"ARRAY_OF_TYPE_OR_TYPE\",\n}\n\nexport type ValidationResponse = {\n  isValid: boolean;\n  parsed: any;\n  messages?: Array<Error>;\n  transformed?: any;\n};\n\nexport type Validator = (\n  config: ValidationConfig,\n  value: unknown,\n  props: Record<string, unknown>,\n  propertyPath: string,\n) => ValidationResponse;\n\nexport const ISO_DATE_FORMAT = \"YYYY-MM-DDTHH:mm:ss.sssZ\";\n\nexport const DATA_TREE_KEYWORDS = {\n  actionPaths: \"actionPaths\",\n  appsmith: \"appsmith\",\n  pageList: \"pageList\",\n  [EXECUTION_PARAM_KEY]: EXECUTION_PARAM_KEY,\n};\n\nexport const JAVASCRIPT_KEYWORDS = {\n  abstract: \"abstract\",\n  arguments: \"arguments\",\n  await: \"await\",\n  boolean: \"boolean\",\n  break: \"break\",\n  byte: \"byte\",\n  case: \"case\",\n  catch: \"catch\",\n  char: \"char\",\n  class: \"class\",\n  const: \"const\",\n  continue: \"continue\",\n  debugger: \"debugger\",\n  default: \"default\",\n  delete: \"delete\",\n  do: \"do\",\n  double: \"double\",\n  else: \"else\",\n  enum: \"enum\",\n  eval: \"eval\",\n  export: \"export\",\n  extends: \"extends\",\n  false: \"false\",\n  final: \"final\",\n  finally: \"finally\",\n  float: \"float\",\n  for: \"for\",\n  function: \"function\",\n  goto: \"goto\",\n  if: \"if\",\n  implements: \"implements\",\n  import: \"import\",\n  in: \"in\",\n  instanceof: \"instanceof\",\n  int: \"int\",\n  interface: \"interface\",\n  let: \"let\",\n  long: \"long\",\n  native: \"native\",\n  new: \"new\",\n  null: \"null\",\n  package: \"package\",\n  private: \"private\",\n  protected: \"protected\",\n  public: \"public\",\n  return: \"return\",\n  self: \"self\",\n  short: \"short\",\n  static: \"static\",\n  super: \"super\",\n  switch: \"switch\",\n  synchronized: \"synchronized\",\n  this: \"this\",\n  throw: \"throw\",\n  throws: \"throws\",\n  transient: \"transient\",\n  true: \"true\",\n  try: \"try\",\n  typeof: \"typeof\",\n  var: \"var\",\n  void: \"void\",\n  volatile: \"volatile\",\n  while: \"while\",\n  with: \"with\",\n  yield: \"yield\",\n};\n\n/**\n *  Global scope Identifiers in the worker context, accessible via the \"self\" keyword.\n * These identifiers are already present in the worker context and shouldn't represent any valid identifier within Appsmith, as no entity should have\n * same name as them to prevent unexpected behaviour during evaluation(which happens on the worker thread) in the worker.\n * Check if an identifier (or window object/property) is available in the worker context here => https://worker-playground.glitch.me/\n */\nexport const DEDICATED_WORKER_GLOBAL_SCOPE_IDENTIFIERS = {\n  AbortController: \"AbortController\",\n  AbortSignal: \"AbortSignal\",\n  AggregateError: \"AggregateError\",\n  Array: \"Array\",\n  ArrayBuffer: \"ArrayBuffer\",\n  atob: \"atob\",\n  Atomics: \"Atomics\",\n  AudioData: \"AudioData\",\n  AudioDecoder: \"AudioDecoder\",\n  AudioEncoder: \"AudioEncoder\",\n  BackgroundFetchManager: \"BackgroundFetchManager\",\n  BackgroundFetchRecord: \"BackgroundFetchRecord\",\n  BackgroundFetchRegistration: \"BackgroundFetchRegistration\",\n  BarcodeDetector: \"BarcodeDetector\",\n  BigInt: \"BigInt\",\n  BigInt64Array: \"BigInt64Array\",\n  BigUint64Array: \"BigUint64Array\",\n  Blob: \"Blob\",\n  Boolean: \"Boolean\",\n  btoa: \"btoa\",\n  BroadcastChannel: \"BroadcastChannel\",\n  ByteLengthQueuingStrategy: \"ByteLengthQueuingStrategy\",\n  caches: \"caches\",\n  CSSSkewX: \"CSSSkewX\",\n  CSSSkewY: \"CSSSkewY\",\n  Cache: \"Cache\",\n  CacheStorage: \"CacheStorage\",\n  cancelAnimationFrame: \"cancelAnimationFrame\",\n  CanvasFilter: \"CanvasFilter\",\n  CanvasGradient: \"CanvasGradient\",\n  CanvasPattern: \"CanvasPattern\",\n  clearInterval: \"clearInterval\",\n  clearTimeout: \"clearTimeout\",\n  close: \"close\",\n  CloseEvent: \"CloseEvent\",\n  CompressionStream: \"CompressionStream\",\n  console: \"console\",\n  CountQueuingStrategy: \"CountQueuingStrategy\",\n  createImageBitmap: \"createImageBitmap\",\n  CropTarget: \"CropTarget\",\n  crossOriginIsolated: \"crossOriginIsolated\",\n  Crypto: \"Crypto\",\n  CryptoKey: \"CryptoKey\",\n  CustomEvent: \"CustomEvent\",\n  decodeURI: \"decodeURI\",\n  decodeURIComponent: \"decodeURIComponent\",\n  DOMException: \"DOMException\",\n  DOMMatrix: \"DOMMatrix\",\n  DOMMatrixReadOnly: \"DOMMatrixReadOnly\",\n  DOMPoint: \"DOMPoint\",\n  DOMPointReadOnly: \"DOMPointReadOnly\",\n  DOMQuad: \"DOMQuad\",\n  DOMRect: \"DOMRect\",\n  DOMRectReadOnly: \"DOMRectReadOnly\",\n  DOMStringList: \"DOMStringList\",\n  DataView: \"DataView\",\n  Date: \"Date\",\n  DecompressionStream: \"DecompressionStream\",\n  DedicatedWorkerGlobalScope: \"DedicatedWorkerGlobalScope\",\n  encodeURI: \"encodeURI\",\n  encodeURIComponent: \"encodeURIComponent\",\n  EncodedAudioChunk: \"EncodedAudioChunk\",\n  EncodedVideoChunk: \"EncodedVideoChunk\",\n  Error: \"Error\",\n  ErrorEvent: \"ErrorEvent\",\n  escape: \"escape\",\n  eval: \"eval\",\n  EvalError: \"EvalError\",\n  Event: \"Event\",\n  EventSource: \"EventSource\",\n  EventTarget: \"EventTarget\",\n  fetch: \"fetch\",\n  File: \"File\",\n  FileList: \"FileList\",\n  FileReader: \"FileReader\",\n  FileReaderSync: \"FileReaderSync\",\n  FileSystemDirectoryHandle: \"FileSystemDirectoryHandle\",\n  FileSystemFileHandle: \"FileSystemFileHandle\",\n  FileSystemHandle: \"FileSystemHandle\",\n  FileSystemSyncAccessHandle: \"FileSystemSyncAccessHandle\",\n  FileSystemWritableFileStream: \"FileSystemWritableFileStream\",\n  FinalizationRegistry: \"FinalizationRegistry\",\n  Float32Array: \"Float32Array\",\n  Float64Array: \"Float64Array\",\n  FontFace: \"FontFace\",\n  FormData: \"FormData\",\n  Function: \"Function\",\n  globalThis: \"globalThis\",\n  hasOwnProperty: \"hasOwnProperty\",\n  Headers: \"Headers\",\n  IDBCursor: \"IDBCursor\",\n  IDBCursorWithValue: \"IDBCursorWithValue\",\n  IDBDatabase: \"IDBDatabase\",\n  IDBFactory: \"IDBFactory\",\n  IDBIndex: \"IDBIndex\",\n  IDBKeyRange: \"IDBKeyRange\",\n  IDBObjectStore: \"IDBObjectStore\",\n  IDBOpenDBRequest: \"IDBOpenDBRequest\",\n  IDBRequest: \"IDBRequest\",\n  IDBTransaction: \"IDBTransaction\",\n  IDBVersionChangeEvent: \"IDBVersionChangeEvent\",\n  IdleDetector: \"IdleDetector\",\n  ImageBitmap: \"ImageBitmap\",\n  ImageBitmapRenderingContext: \"ImageBitmapRenderingContext\",\n  ImageData: \"ImageData\",\n  ImageDecoder: \"ImageDecoder\",\n  ImageTrack: \"ImageTrack\",\n  ImageTrackList: \"ImageTrackList\",\n  importScripts: \"importScripts\",\n  indexedDB: \"indexedDB\",\n  Infinity: \"Infinity\",\n  Int8Array: \"Int8Array\",\n  Int16Array: \"Int16Array\",\n  Int32Array: \"Int32Array\",\n  Intl: \"Intl\",\n  isFinite: \"isFinite\",\n  isNaN: \"isNaN\",\n  isPrototypeOf: \"isPrototypeOf\",\n  isSecureContext: \"isSecureContext\",\n  JSON: \"JSON\",\n  Lock: \"Lock\",\n  LockManager: \"LockManager\",\n  location: \"location\",\n  Map: \"Map\",\n  Math: \"Math\",\n  MediaCapabilities: \"MediaCapabilities\",\n  MessageChannel: \"MessageChannel\",\n  MessageEvent: \"MessageEvent\",\n  MessagePort: \"MessagePort\",\n  NaN: \"NaN\",\n  name: \"name\",\n  navigator: \"navigator\",\n  NavigationPreloadManager: \"NavigationPreloadManager\",\n  NavigatorUAData: \"NavigatorUAData\",\n  NetworkInformation: \"NetworkInformation\",\n  Notification: \"Notification\",\n  Number: \"Number\",\n  onmessage: \"onmessage\",\n  onmessageerror: \"onmessageerror\",\n  origin: \"origin\",\n  Object: \"Object\",\n  OffscreenCanvas: \"OffscreenCanvas\",\n  OffscreenCanvasRenderingContext2D: \"OffscreenCanvasRenderingContext2D\",\n  parseFloat: \"parseFloat\",\n  parseInt: \"parseInt\",\n  Path2D: \"Path2D\",\n  PaymentInstruments: \"PaymentInstruments\",\n  Performance: \"Performance\",\n  PerformanceEntry: \"PerformanceEntry\",\n  PerformanceMark: \"PerformanceMark\",\n  PerformanceMeasure: \"PerformanceMeasure\",\n  PerformanceObserver: \"PerformanceObserver\",\n  PerformanceObserverEntryList: \"PerformanceObserverEntryList\",\n  PerformanceResourceTiming: \"PerformanceResourceTiming\",\n  PerformanceServerTiming: \"PerformanceServerTiming\",\n  PeriodicSyncManager: \"PeriodicSyncManager\",\n  PermissionStatus: \"PermissionStatus\",\n  Permissions: \"Permissions\",\n  postMessage: \"postMessage\",\n  ProgressEvent: \"ProgressEvent\",\n  Promise: \"Promise\",\n  PromiseRejectionEvent: \"PromiseRejectionEvent\",\n  Proxy: \"Proxy\",\n  PushManager: \"PushManager\",\n  PushSubscription: \"PushSubscription\",\n  PushSubscriptionOptions: \"PushSubscriptionOptions\",\n  queueMicrotask: \"queueMicrotask\",\n  RTCEncodedAudioFrame: \"RTCEncodedAudioFrame\",\n  RTCEncodedVideoFrame: \"RTCEncodedVideoFrame\",\n  RangeError: \"RangeError\",\n  ReadableByteStreamController: \"ReadableByteStreamController\",\n  ReadableStream: \"ReadableStream\",\n  ReadableStreamBYOBReader: \"ReadableStreamBYOBReader\",\n  ReadableStreamBYOBRequest: \"ReadableStreamBYOBRequest\",\n  ReadableStreamDefaultController: \"ReadableStreamDefaultController\",\n  ReadableStreamDefaultReader: \"ReadableStreamDefaultReader\",\n  ReferenceError: \"ReferenceError\",\n  Reflect: \"Reflect\",\n  RegExp: \"RegExp\",\n  reportError: \"reportError\",\n  ReportingObserver: \"ReportingObserver\",\n  Request: \"Request\",\n  requestAnimationFrame: \"requestAnimationFrame\",\n  Response: \"Response\",\n  Scheduler: \"Scheduler\",\n  SecurityPolicyViolationEvent: \"SecurityPolicyViolationEvent\",\n  Serial: \"Serial\",\n  SerialPort: \"SerialPort\",\n  ServiceWorkerRegistration: \"ServiceWorkerRegistration\",\n  Set: \"Set\",\n  setInterval: \"setInterval\",\n  setTimeout: \"setTimeout\",\n  StorageManager: \"StorageManager\",\n  String: \"String\",\n  structuredClone: \"structuredClone\",\n  SubtleCrypto: \"SubtleCrypto\",\n  Symbol: \"Symbol\",\n  SyncManager: \"SyncManager\",\n  SyntaxError: \"SyntaxError\",\n  TaskController: \"TaskController\",\n  TaskPriorityChangeEvent: \"TaskPriorityChangeEvent\",\n  TaskSignal: \"TaskSignal\",\n  TextDecoder: \"TextDecoder\",\n  TextDecoderStream: \"TextDecoderStream\",\n  TextEncoder: \"TextEncoder\",\n  TextEncoderStream: \"TextEncoderStream\",\n  TextMetrics: \"TextMetrics\",\n  toString: \"toString\",\n  TransformStream: \"TransformStream\",\n  TransformStreamDefaultController: \"TransformStreamDefaultController\",\n  TrustedHTML: \"TrustedHTML\",\n  TrustedScript: \"TrustedScript\",\n  TrustedScriptURL: \"TrustedScriptURL\",\n  trustedTypes: \"trustedTypes\",\n  TrustedTypePolicy: \"TrustedTypePolicy\",\n  TrustedTypePolicyFactory: \"TrustedTypePolicyFactory\",\n  TypeError: \"TypeError\",\n  undefined: \"undefined\",\n  unescape: \"unescape\",\n  URIError: \"URIError\",\n  URL: \"URL\",\n  URLPattern: \"URLPattern\",\n  URLSearchParams: \"URLSearchParams\",\n  USB: \"USB\",\n  USBAlternateInterface: \"USBAlternateInterface\",\n  USBConfiguration: \"USBConfiguration\",\n  USBConnectionEvent: \"USBConnectionEvent\",\n  USBDevice: \"USBDevice\",\n  USBEndpoint: \"USBEndpoint\",\n  USBInTransferResult: \"USBInTransferResult\",\n  USBInterface: \"USBInterface\",\n  USBIsochronousInTransferPacket: \"USBIsochronousInTransferPacket\",\n  USBIsochronousInTransferResult: \"USBIsochronousInTransferResult\",\n  USBIsochronousOutTransferPacket: \"USBIsochronousOutTransferPacket\",\n  USBIsochronousOutTransferResult: \"USBIsochronousOutTransferResult\",\n  USBOutTransferResult: \"USBOutTransferResult\",\n  Uint8Array: \"Uint8Array\",\n  Uint8ClampedArray: \"Uint8ClampedArray\",\n  Uint16Array: \"Uint16Array\",\n  Uint32Array: \"Uint32Array\",\n  UserActivation: \"UserActivation\",\n  VideoColorSpace: \"VideoColorSpace\",\n  VideoDecoder: \"VideoDecoder\",\n  VideoEncoder: \"VideoEncoder\",\n  VideoFrame: \"VideoFrame\",\n  WeakMap: \"WeakMap\",\n  WeakRef: \"WeakRef\",\n  WeakSet: \"WeakSet\",\n  WebAssembly: \"WebAssembly\",\n  WebGL2RenderingContext: \"WebGL2RenderingContext\",\n  WebGLActiveInfo: \"WebGLActiveInfo\",\n  WebGLBuffer: \"WebGLBuffer\",\n  WebGLFramebuffer: \"WebGLFramebuffer\",\n  WebGLProgram: \"WebGLProgram\",\n  WebGLQuery: \"WebGLQuery\",\n  WebGLRenderbuffer: \"WebGLRenderbuffer\",\n  WebGLRenderingContext: \"WebGLRenderingContext\",\n  WebGLSampler: \"WebGLSampler\",\n  WebGLShader: \"WebGLShader\",\n  WebGLShaderPrecisionFormat: \"WebGLShaderPrecisionFormat\",\n  WebGLSync: \"WebGLSync\",\n  WebGLTexture: \"WebGLTexture\",\n  WebGLTransformFeedback: \"WebGLTransformFeedback\",\n  WebGLUniformLocation: \"WebGLUniformLocation\",\n  WebGLVertexArrayObject: \"WebGLVertexArrayObject\",\n  webkitRequestFileSystem: \"webkitRequestFileSystem\",\n  webkitRequestFileSystemSync: \"webkitRequestFileSystemSync\",\n  webkitResolveLocalFileSystemSyncURL: \"webkitResolveLocalFileSystemSyncURL\",\n  webkitResolveLocalFileSystemURL: \"webkitResolveLocalFileSystemURL\",\n  WebSocket: \"WebSocket\",\n  WebTransport: \"WebTransport\",\n  WebTransportBidirectionalStream: \"WebTransportBidirectionalStream\",\n  WebTransportDatagramDuplexStream: \"WebTransportDatagramDuplexStream\",\n  WebTransportError: \"WebTransportError\",\n  Worker: \"Worker\",\n  WorkerGlobalScope: \"WorkerGlobalScope\",\n  WorkerLocation: \"WorkerLocation\",\n  WorkerNavigator: \"WorkerNavigator\",\n  WritableStream: \"WritableStream\",\n  WritableStreamDefaultController: \"WritableStreamDefaultController\",\n  WritableStreamDefaultWriter: \"WritableStreamDefaultWriter\",\n  XMLHttpRequest: \"XMLHttpRequest\",\n  XMLHttpRequestEventTarget: \"XMLHttpRequestEventTarget\",\n  XMLHttpRequestUpload: \"XMLHttpRequestUpload\",\n\n  // Identifiers added to worker scope by Appsmith\n  evaluationVersion: \"evaluationVersion\",\n  $isDataField: \"$isDataField\",\n  $isAsync: \"$isAsync\",\n};\n","export function getSlidingArenaName(widgetId: string) {\n  return `div-selection-${widgetId}`;\n}\n\nexport function getStickyCanvasName(widgetId: string) {\n  return `canvas-selection-${widgetId}`;\n}\n\nexport function getBaseWidgetClassName(id?: string) {\n  return `appsmith_widget_${id}`;\n}\n\nexport const POSITIONED_WIDGET = \"positioned-widget\";\n","import { Action } from \"entities/Action/index\";\nimport _ from \"lodash\";\nimport { EvaluationSubstitutionType } from \"entities/DataTree/dataTreeFactory\";\nimport {\n  alternateViewTypeInputConfig,\n  isHidden,\n  ViewTypes,\n} from \"components/formControls/utils\";\nimport {\n  PaginationSubComponent,\n  SortingSubComponent,\n  WhereClauseSubComponent,\n  allowedControlTypes,\n  getViewType,\n} from \"components/formControls/utils\";\nimport formControlTypes from \"utils/formControl/formControlTypes\";\nimport { getAllBindingPathsForGraphqlPagination } from \"utils/editor/EditorBindingPaths\";\nimport EditorControlTypes from \"utils/editor/EditorControlTypes\";\n\nconst dynamicFields = [\n  formControlTypes.QUERY_DYNAMIC_TEXT,\n  formControlTypes.QUERY_DYNAMIC_INPUT_TEXT,\n];\n\ntype ReactivePaths = Record<string, EvaluationSubstitutionType>;\ntype BindingPaths = ReactivePaths;\nconst getCorrectEvaluationSubstitutionType = (substitutionType?: string) => {\n  if (substitutionType) {\n    if (substitutionType === EvaluationSubstitutionType.SMART_SUBSTITUTE) {\n      return EvaluationSubstitutionType.SMART_SUBSTITUTE;\n    } else if (substitutionType === EvaluationSubstitutionType.PARAMETER) {\n      return EvaluationSubstitutionType.PARAMETER;\n    }\n  }\n  return EvaluationSubstitutionType.TEMPLATE;\n};\n\nexport const getBindingAndReactivePathsOfAction = (\n  action: Action,\n  formConfig?: any[],\n): { reactivePaths: ReactivePaths; bindingPaths: BindingPaths } => {\n  let reactivePaths: ReactivePaths = {\n    data: EvaluationSubstitutionType.TEMPLATE,\n    isLoading: EvaluationSubstitutionType.TEMPLATE,\n    datasourceUrl: EvaluationSubstitutionType.TEMPLATE,\n  };\n  const bindingPaths: BindingPaths = {};\n  if (!formConfig) {\n    reactivePaths = {\n      ...reactivePaths,\n      config: EvaluationSubstitutionType.TEMPLATE,\n    };\n    return {\n      reactivePaths,\n      bindingPaths,\n    };\n  }\n  // NOTE:\n  // there's a difference in how the bindingPaths should look when in component and json viewType mode.\n  // for example in json mode, sorting component bindingPath should be formData.sortBy.data.(column | order)\n  // in component mode, the sorting component binding path should be more specific e.g. formData.sortBy.data[0].(column | order)\n  // the condition below checks if the viewType of the config and computes the binding path respectively\n  const recursiveFindBindingPaths = (formConfig: any) => {\n    if (formConfig.children) {\n      formConfig.children.forEach(recursiveFindBindingPaths);\n    } else {\n      const configPath = getDataTreeActionConfigPath(formConfig.configProperty);\n      if (dynamicFields.includes(formConfig.controlType)) {\n        if (!isHidden(action, formConfig.hidden)) {\n          bindingPaths[configPath] = getCorrectEvaluationSubstitutionType(\n            formConfig.evaluationSubstitutionType,\n          );\n        }\n      } else if (\n        // this else if checks the viewType and computes the binding path respectively(as explained above),\n        // while the other else-ifs below checks specifically for component viewType mode.\n        \"alternateViewTypes\" in formConfig &&\n        Array.isArray(formConfig.alternateViewTypes) &&\n        formConfig.alternateViewTypes.length > 0 &&\n        formConfig.alternateViewTypes.includes(ViewTypes.JSON) &&\n        getViewType(action, formConfig.configProperty) === ViewTypes.JSON\n      ) {\n        bindingPaths[configPath] = getCorrectEvaluationSubstitutionType(\n          alternateViewTypeInputConfig().evaluationSubstitutionType,\n        );\n      } else if (formConfig.controlType === formControlTypes.ARRAY_FIELD) {\n        let actionValue = _.get(action, formConfig.configProperty);\n        if (Array.isArray(actionValue)) {\n          actionValue = actionValue.filter((val) => val);\n          for (let i = 0; i < actionValue.length; i++) {\n            formConfig.schema.forEach((schemaField: any) => {\n              if (\n                schemaField.key in actionValue[i] &&\n                dynamicFields.includes(schemaField.controlType)\n              ) {\n                const arrayConfigPath = `${configPath}[${i}].${schemaField.key}`;\n                bindingPaths[\n                  arrayConfigPath\n                ] = getCorrectEvaluationSubstitutionType(\n                  formConfig.evaluationSubstitutionType,\n                );\n              }\n            });\n          }\n        }\n      } else if (formConfig.controlType === formControlTypes.WHERE_CLAUSE) {\n        const recursiveFindBindingPathsForWhereClause = (\n          newConfigPath: string,\n          actionValue: any,\n        ) => {\n          if (\n            actionValue &&\n            actionValue.hasOwnProperty(\"children\") &&\n            Array.isArray(actionValue.children)\n          ) {\n            actionValue.children.forEach((value: any, index: number) => {\n              const childrenPath = getBindingOrConfigPathsForWhereClauseControl(\n                newConfigPath,\n                WhereClauseSubComponent.Children,\n                index,\n              );\n              recursiveFindBindingPathsForWhereClause(childrenPath, value);\n            });\n          } else {\n            if (actionValue.hasOwnProperty(\"key\")) {\n              const keyPath = getBindingOrConfigPathsForWhereClauseControl(\n                newConfigPath,\n                WhereClauseSubComponent.Key,\n                undefined,\n              );\n              bindingPaths[keyPath] = getCorrectEvaluationSubstitutionType(\n                formConfig.evaluationSubstitutionType,\n              );\n            }\n            if (actionValue.hasOwnProperty(\"value\")) {\n              const valuePath = getBindingOrConfigPathsForWhereClauseControl(\n                newConfigPath,\n                WhereClauseSubComponent.Value,\n                undefined,\n              );\n              bindingPaths[valuePath] = getCorrectEvaluationSubstitutionType(\n                formConfig.evaluationSubstitutionType,\n              );\n            }\n          }\n        };\n\n        const actionValue = _.get(action, formConfig.configProperty);\n        if (\n          actionValue &&\n          actionValue.hasOwnProperty(\"children\") &&\n          Array.isArray(actionValue.children)\n        ) {\n          actionValue.children.forEach((value: any, index: number) => {\n            const childrenPath = getBindingOrConfigPathsForWhereClauseControl(\n              configPath,\n              WhereClauseSubComponent.Children,\n              index,\n            );\n            recursiveFindBindingPathsForWhereClause(childrenPath, value);\n          });\n        }\n      } else if (formConfig.controlType === formControlTypes.PAGINATION) {\n        const limitPath = getBindingOrConfigPathsForPaginationControl(\n          PaginationSubComponent.Offset,\n          configPath,\n        );\n        const offsetPath = getBindingOrConfigPathsForPaginationControl(\n          PaginationSubComponent.Limit,\n          configPath,\n        );\n        bindingPaths[limitPath] = getCorrectEvaluationSubstitutionType(\n          formConfig.evaluationSubstitutionType,\n        );\n        bindingPaths[offsetPath] = getCorrectEvaluationSubstitutionType(\n          formConfig.evaluationSubstitutionType,\n        );\n      } else if (formConfig.controlType === formControlTypes.SORTING) {\n        const actionValue = _.get(action, formConfig.configProperty);\n        if (Array.isArray(actionValue)) {\n          actionValue.forEach((fieldConfig: any, index: number) => {\n            const columnPath = getBindingOrConfigPathsForSortingControl(\n              SortingSubComponent.Column,\n              configPath,\n              index,\n            );\n            bindingPaths[columnPath] = getCorrectEvaluationSubstitutionType(\n              formConfig.evaluationSubstitutionType,\n            );\n            const OrderPath = getBindingOrConfigPathsForSortingControl(\n              SortingSubComponent.Order,\n              configPath,\n              index,\n            );\n            bindingPaths[OrderPath] = getCorrectEvaluationSubstitutionType(\n              formConfig.evaluationSubstitutionType,\n            );\n          });\n        }\n      } else if (formConfig.controlType === formControlTypes.ENTITY_SELECTOR) {\n        if (Array.isArray(formConfig.schema)) {\n          formConfig.schema.forEach((schemaField: any) => {\n            let columnPath = \"\";\n            if (\n              allowedControlTypes.includes(schemaField.controlType) &&\n              !!schemaField.configProperty\n            ) {\n              columnPath = getBindingOrConfigPathsForEntitySelectorControl(\n                schemaField.configProperty,\n              );\n            }\n            bindingPaths[columnPath] = getCorrectEvaluationSubstitutionType(\n              formConfig.evaluationSubstitutionType,\n            );\n          });\n        }\n      } else if (\n        formConfig.controlType === EditorControlTypes.E_GRAPHQL_PAGINATION\n      ) {\n        const allPaths = getAllBindingPathsForGraphqlPagination(configPath);\n        allPaths.forEach(({ key, value }) => {\n          if (key && value) {\n            bindingPaths[key] = value as EvaluationSubstitutionType;\n          }\n        });\n      }\n    }\n  };\n  formConfig.forEach(recursiveFindBindingPaths);\n  reactivePaths = {\n    ...reactivePaths,\n    ...bindingPaths,\n  };\n  return { reactivePaths, bindingPaths };\n};\n\nexport const getBindingOrConfigPathsForSortingControl = (\n  fieldName: SortingSubComponent.Order | SortingSubComponent.Column,\n  baseConfigProperty: string,\n  index?: number,\n): string => {\n  if (_.isNumber(index)) {\n    return `${baseConfigProperty}[${index}].${fieldName}`;\n  } else {\n    return `${baseConfigProperty}.${fieldName}`;\n  }\n};\n\nexport const getBindingOrConfigPathsForPaginationControl = (\n  fieldName: PaginationSubComponent.Limit | PaginationSubComponent.Offset,\n  baseConfigProperty: string,\n): string => {\n  return `${baseConfigProperty}.${fieldName}`;\n};\n\nexport const getBindingOrConfigPathsForWhereClauseControl = (\n  configPath: string,\n  fieldName:\n    | WhereClauseSubComponent.Children\n    | WhereClauseSubComponent.Condition\n    | WhereClauseSubComponent.Key\n    | WhereClauseSubComponent.Value,\n  index?: number,\n): string => {\n  if (fieldName === \"children\" && _.isNumber(index)) {\n    return `${configPath}.${fieldName}[${index}]`;\n  } else if (configPath && fieldName) {\n    return `${configPath}.${fieldName}`;\n  }\n  return \"\";\n};\n\nexport const getBindingOrConfigPathsForEntitySelectorControl = (\n  baseConfigProperty: string,\n): string => {\n  // Entity selector schemas/components have their own distinct configProperties and have little to do with their parents(They are independent entities).\n  return getDataTreeActionConfigPath(baseConfigProperty);\n};\n\nexport const getDataTreeActionConfigPath = (propertyPath: string) =>\n  propertyPath.replace(\"actionConfiguration.\", \"config.\");\n","import { EmbeddedRestDatasource } from \"entities/Datasource\";\nimport { DynamicPath } from \"utils/DynamicBindingUtils\";\nimport _ from \"lodash\";\nimport { LayoutOnLoadActionErrors } from \"constants/AppsmithActionConstants/ActionConstants\";\nimport { Plugin } from \"api/PluginApi\";\nimport { AutoGeneratedHeader } from \"pages/Editor/APIEditor/helpers\";\n\nexport enum PluginType {\n  API = \"API\",\n  DB = \"DB\",\n  SAAS = \"SAAS\",\n  JS = \"JS\",\n  REMOTE = \"REMOTE\",\n}\n\n// more can be added subsequently.\nexport enum PluginName {\n  MONGO = \"MongoDB\",\n}\n\nexport enum PluginPackageName {\n  POSTGRES = \"postgres-plugin\",\n  MONGO = \"mongo-plugin\",\n  S3 = \"amazons3-plugin\",\n  GOOGLE_SHEETS = \"google-sheets-plugin\",\n  FIRESTORE = \"firestore-plugin\",\n  REST_API = \"restapi-plugin\",\n  GRAPHQL = \"graphql-plugin\",\n  JS = \"js-plugin\",\n}\n\nexport enum PaginationType {\n  NONE = \"NONE\",\n  PAGE_NO = \"PAGE_NO\",\n  URL = \"URL\",\n  CURSOR = \"CURSOR\",\n}\n\nexport interface KeyValuePair {\n  key?: string;\n  value?: unknown;\n}\n\nexport type LimitOffset = {\n  limit: Record<string, unknown>;\n  offset: Record<string, unknown>;\n};\nexport interface SelfReferencingData {\n  limitBased?: LimitOffset;\n  curserBased?: {\n    previous?: LimitOffset;\n    next?: LimitOffset;\n  };\n}\n\nexport interface ActionConfig {\n  timeoutInMillisecond?: number;\n  paginationType?: PaginationType;\n  formData?: Record<string, unknown>;\n  pluginSpecifiedTemplates?: KeyValuePair[];\n  path?: string;\n  queryParameters?: KeyValuePair[];\n  selfReferencingData?: SelfReferencingData;\n}\n\nexport interface ActionProvider {\n  name: string;\n  imageUrl: string;\n  url: string;\n  description: string;\n  credentialSteps: string;\n}\n\nexport interface Property {\n  key: string;\n  value: string;\n}\n\nexport interface BodyFormData {\n  editable: boolean;\n  mandatory: boolean;\n  description: string;\n  key: string;\n  value?: string;\n  type: string;\n}\n\nexport interface ApiActionConfig extends Omit<ActionConfig, \"formData\"> {\n  headers: Property[];\n  autoGeneratedHeaders?: AutoGeneratedHeader[];\n  httpMethod: string;\n  path?: string;\n  body?: JSON | string | Record<string, any> | null;\n  encodeParamsToggle: boolean;\n  queryParameters?: Property[];\n  bodyFormData?: BodyFormData[];\n  formData: Record<string, unknown>;\n  query?: string | null;\n  variable?: string | null;\n}\n\nexport interface QueryActionConfig extends ActionConfig {\n  body?: string;\n}\n\nexport const isStoredDatasource = (val: any): val is StoredDatasource => {\n  if (!_.isObject(val)) return false;\n  if (!(\"id\" in val)) return false;\n  return true;\n};\nexport interface StoredDatasource {\n  id: string;\n  pluginId?: string;\n}\n\nexport interface BaseAction {\n  id: string;\n  name: string;\n  workspaceId: string;\n  pageId: string;\n  collectionId?: string;\n  pluginId: string;\n  executeOnLoad: boolean;\n  dynamicBindingPathList: DynamicPath[];\n  isValid: boolean;\n  invalids: string[];\n  jsonPathKeys: string[];\n  cacheResponse: string;\n  confirmBeforeExecute?: boolean;\n  eventData?: any;\n  messages: string[];\n  userPermissions?: string[];\n  errorReports?: Array<LayoutOnLoadActionErrors>;\n}\n\ninterface BaseApiAction extends BaseAction {\n  pluginType: PluginType.API;\n  actionConfiguration: ApiActionConfig;\n}\nexport interface SaaSAction extends BaseAction {\n  pluginType: PluginType.SAAS;\n  actionConfiguration: any;\n  datasource: StoredDatasource;\n}\nexport interface RemoteAction extends BaseAction {\n  pluginType: PluginType.REMOTE;\n  actionConfiguration: any;\n  datasource: StoredDatasource;\n}\n\nexport interface EmbeddedApiAction extends BaseApiAction {\n  datasource: EmbeddedRestDatasource;\n}\n\nexport interface StoredDatasourceApiAction extends BaseApiAction {\n  datasource: StoredDatasource;\n}\n\nexport type ApiAction = EmbeddedApiAction | StoredDatasourceApiAction;\n\nexport type RapidApiAction = ApiAction & {\n  templateId: string;\n  proverId: string;\n  provider: ActionProvider;\n  pluginId: string;\n  documentation: { text: string };\n};\n\nexport interface QueryAction extends BaseAction {\n  pluginType: PluginType.DB;\n  pluginName?: PluginName;\n  actionConfiguration: QueryActionConfig;\n  datasource: StoredDatasource;\n}\n\nexport type ActionViewMode = {\n  id: string;\n  name: string;\n  pageId: string;\n  jsonPathKeys: string[];\n  confirmBeforeExecute?: boolean;\n  timeoutInMillisecond?: number;\n};\n\nexport type Action = ApiAction | QueryAction | SaaSAction | RemoteAction;\n\nexport enum SlashCommand {\n  NEW_SNIPPET,\n  NEW_API,\n  NEW_QUERY,\n  NEW_INTEGRATION,\n}\n\nexport type SlashCommandPayload = {\n  actionType: SlashCommand;\n  callback?: (binding: string) => void;\n  args: any;\n};\n\nexport function isAPIAction(action: Action): action is ApiAction {\n  return action.pluginType === PluginType.API;\n}\n\nexport function isQueryAction(action: Action): action is QueryAction {\n  return action.pluginType === PluginType.DB;\n}\n\nexport function isSaaSAction(action: Action): action is SaaSAction {\n  return action.pluginType === PluginType.SAAS;\n}\n\nexport function getGraphQLPlugin(plugins: Plugin[]): Plugin | undefined {\n  return plugins.find((p) => p.packageName === PluginPackageName.GRAPHQL);\n}\n\nexport function isGraphqlPlugin(plugin: Plugin | undefined) {\n  return plugin?.packageName === PluginPackageName.GRAPHQL;\n}\n","export enum APP_MODE {\n  EDIT = \"EDIT\",\n  PUBLISHED = \"PUBLISHED\",\n}\n","import { ReduxAction } from \"@appsmith/constants/ReduxActionConstants\";\nimport LOG_TYPE from \"./logtype\";\nimport { PropertyEvaluationErrorType } from \"utils/DynamicBindingUtils\";\nimport { PluginType } from \"entities/Action\";\nimport { HTTP_METHOD } from \"constants/ApiEditorConstants/CommonApiConstants\";\n\nexport enum ENTITY_TYPE {\n  ACTION = \"ACTION\",\n  DATASOURCE = \"DATASOURCE\",\n  WIDGET = \"WIDGET\",\n  JSACTION = \"JSACTION\",\n}\n\nexport enum PLATFORM_ERROR {\n  PLUGIN_EXECUTION = \"PLUGIN_EXECUTION\",\n  JS_FUNCTION_EXECUTION = \"JS_FUNCTION_EXECUTION\",\n}\n\nexport type Methods =\n  | \"log\"\n  | \"debug\"\n  | \"info\"\n  | \"warn\"\n  | \"error\"\n  | \"table\"\n  | \"clear\"\n  | \"time\"\n  | \"timeEnd\"\n  | \"count\"\n  | \"assert\";\n\nexport type LogObject = {\n  method: Methods | \"result\";\n  data: any[];\n  timestamp: string;\n  id: string;\n  severity: Severity;\n  source: SourceEntity;\n};\n\nexport type ErrorType = PropertyEvaluationErrorType | PLATFORM_ERROR;\n\nexport enum Severity {\n  // Everything, irrespective of what the user should see or not\n  // DEBUG = \"debug\",\n  // Something the dev user should probably know about\n  INFO = \"info\",\n  // Doesn't break the app, but can cause slowdowns / ux issues/ unexpected behaviour\n  WARNING = \"warning\",\n  // Can cause an error in some cases/ single widget, app will work in other cases\n  ERROR = \"error\",\n  // Makes the app unusable, can't progress without fixing this.\n  // CRITICAL = \"critical\",\n}\n\nexport type UserAction = {\n  // Label is used to display the\n  label: string;\n  // As there can be multiple errors of the same base type at the same time\n  // and we need to be able to tell the difference,\n  // these action types should have a dynamic `id` associated with them\n  // or we should use JS callback functions instead\n  reduxAction: ReduxAction<unknown>;\n};\n\nexport interface SourceEntity {\n  type: ENTITY_TYPE;\n  // Widget or action name\n  name: string;\n  // Id of the widget or action\n  id: string;\n  // property path of the child\n  propertyPath?: string;\n  // plugin type of the action\n  pluginType?: PluginType;\n  // http method of the api. (Only for api actions)\n  httpMethod?: HTTP_METHOD;\n}\n\nexport enum LOG_CATEGORY {\n  USER_GENERATED = \"USER_GENERATED\",\n  PLATFORM_GENERATED = \"PLATFORM_GENERATED\",\n}\n\nexport interface LogActionPayload {\n  // Log id, used for updating or deleting\n  id?: string;\n  // icon id, used in finding appropriate icons.\n  iconId?: string;\n  // What is the log about. Is it a datasource update, widget update, eval error etc.\n  logType?: LOG_TYPE;\n  // This is the preview of the log that the user sees.\n  text: string;\n  // Number of times this log has been repeated\n  occurrenceCount?: number;\n  // Deconstructed data of the log, this includes the whole nested objects/arrays/strings etc.\n  logData?: any[];\n  // messages associated with this event\n  messages?: Array<Message>;\n  // Time taken for the event to complete\n  timeTaken?: string;\n  // \"where\" source entity and propertyPsath.\n  source?: SourceEntity;\n  // Snapshot KV pair of scope variables or state associated with this event.\n  state?: Record<string, any>;\n  // Any other data required for analytics\n  analytics?: Record<string, any>;\n  // plugin error details if any (only for plugin errors).\n  pluginErrorDetails?: any;\n}\n\nexport interface Message {\n  // More contextual message than `text`\n  message: Error;\n  type?: ErrorType;\n  subType?: string;\n  lineNumber?: number;\n  // The section of code being referred to\n  // codeSegment?: string;\n}\n\nexport interface Log extends LogActionPayload {\n  severity: Severity;\n  // Is the log system generated or user generated\n  category: LOG_CATEGORY;\n  // \"when\" did this event happen\n  timestamp: string;\n}\n\n/**\n * Example:\n * \"Api timed out\"\n * {\n *   type: ActionError.EXECUTION_TIMEOUT,\n *   timeoutMs: 10000,\n *   severity: Severity.ERROR,\n *   message: \"Action execution timedout after 10 seconds\",\n *   source: {\n *     type: ENTITY_TYPE.ACTION,\n *     name: \"Api1\",\n *     id: \"a12345\",\n *     propertyPath: \"run\",\n *   },\n *   timestamp: new Date(),\n *   state: {},\n *   userActions: [\n *     {\n *       label: \"Increase timeout by 5 seconds\",\n *       reduxAction: {\n *         type: \"ACTION_INCREASE_TIMEOUT\",\n *         payload: { actionId: \"abcdef\", value: 5000 },\n *       },\n *     },\n *   ]\n * }\n */\n","import {\n  PropertyOverrideDependency,\n  OverridingPropertyPaths,\n  OverridingPropertyType,\n} from \"./types\";\n\ntype SetOverridingPropertyParams = {\n  key: string;\n  value: string;\n  propertyOverrideDependency: PropertyOverrideDependency;\n  overridingPropertyPaths: OverridingPropertyPaths;\n  type: OverridingPropertyType;\n};\n\nexport const setOverridingProperty = ({\n  key: propertyName,\n  overridingPropertyPaths,\n  propertyOverrideDependency,\n  type,\n  value: overridingPropertyKey,\n}: SetOverridingPropertyParams) => {\n  if (!(propertyName in propertyOverrideDependency)) {\n    propertyOverrideDependency[propertyName] = {\n      [OverridingPropertyType.DEFAULT]: undefined,\n      [OverridingPropertyType.META]: undefined,\n    };\n  }\n  switch (type) {\n    case OverridingPropertyType.DEFAULT:\n      propertyOverrideDependency[propertyName][\n        OverridingPropertyType.DEFAULT\n      ] = overridingPropertyKey;\n      break;\n\n    case OverridingPropertyType.META:\n      propertyOverrideDependency[propertyName][\n        OverridingPropertyType.META\n      ] = overridingPropertyKey;\n\n      break;\n    default:\n  }\n\n  if (Array.isArray(overridingPropertyPaths[overridingPropertyKey])) {\n    const updatedOverridingProperty = new Set(\n      overridingPropertyPaths[overridingPropertyKey],\n    );\n    overridingPropertyPaths[overridingPropertyKey] = [\n      ...updatedOverridingProperty.add(propertyName),\n    ];\n  } else {\n    overridingPropertyPaths[overridingPropertyKey] = [propertyName];\n  }\n  // if property dependent on metaProperty also has defaultProperty then defaultProperty will also override metaProperty on eval.\n  const defaultPropertyName = propertyOverrideDependency[propertyName].DEFAULT;\n  if (type === OverridingPropertyType.META && defaultPropertyName) {\n    overridingPropertyPaths[defaultPropertyName].push(overridingPropertyKey);\n  }\n};\n","import { getAllPathsFromPropertyConfig } from \"entities/Widget/utils\";\nimport _, { isEmpty } from \"lodash\";\nimport memoize from \"micro-memoize\";\nimport { FlattenedWidgetProps } from \"reducers/entityReducers/canvasWidgetsReducer\";\nimport {\n  DynamicPath,\n  getEntityDynamicBindingPathList,\n} from \"utils/DynamicBindingUtils\";\nimport WidgetFactory from \"utils/WidgetFactory\";\nimport {\n  ENTITY_TYPE,\n  WidgetEntityConfig,\n  UnEvalTreeWidget,\n} from \"./dataTreeFactory\";\nimport {\n  OverridingPropertyPaths,\n  OverridingPropertyType,\n  PropertyOverrideDependency,\n} from \"./types\";\n\nimport { setOverridingProperty } from \"./utils\";\n\n// We are splitting generateDataTreeWidget into two parts to memoize better as the widget doesn't change very often.\n// Widget changes only when dynamicBindingPathList changes.\n// Only meta properties change very often, for example typing in an input or selecting a table row.\nconst generateDataTreeWidgetWithoutMeta = (\n  widget: FlattenedWidgetProps,\n): {\n  dataTreeWidgetWithoutMetaProps: UnEvalTreeWidget;\n  overridingMetaPropsMap: Record<string, boolean>;\n  defaultMetaProps: Record<string, unknown>;\n  entityConfig: WidgetEntityConfig;\n} => {\n  const derivedProps: any = {};\n  const blockedDerivedProps: Record<string, true> = {};\n  const unInitializedDefaultProps: Record<string, undefined> = {};\n  const propertyOverrideDependency: PropertyOverrideDependency = {};\n  const overridingPropertyPaths: OverridingPropertyPaths = {};\n  const defaultMetaProps = WidgetFactory.getWidgetMetaPropertiesMap(\n    widget.type,\n  );\n\n  const derivedPropertyMap = WidgetFactory.getWidgetDerivedPropertiesMap(\n    widget.type,\n  );\n  const defaultProps = WidgetFactory.getWidgetDefaultPropertiesMap(widget.type);\n\n  const propertyPaneConfigs = WidgetFactory.getWidgetPropertyPaneConfig(\n    widget.type,\n  );\n  const dynamicBindingPathList = getEntityDynamicBindingPathList(widget);\n  // Ensure all dynamic bindings are strings as they will be evaluated\n  dynamicBindingPathList.forEach((dynamicPath) => {\n    const propertyPath = dynamicPath.key;\n    const propertyValue = _.get(widget, propertyPath);\n    if (_.isObject(propertyValue)) {\n      // Stringify this because composite controls may have bindings in the sub controls\n      _.set(widget, propertyPath, JSON.stringify(propertyValue));\n    }\n  });\n  // Derived props are stored in different maps for further treatment\n  Object.keys(derivedPropertyMap).forEach((propertyName) => {\n    // TODO regex is too greedy\n    // Replace the references to `this` with the widget name reference\n    // in the derived property bindings\n    derivedProps[propertyName] = derivedPropertyMap[propertyName].replace(\n      /this./g,\n      `${widget.widgetName}.`,\n    );\n    // Add these to the dynamicBindingPathList as well\n    dynamicBindingPathList.push({\n      key: propertyName,\n    });\n  });\n\n  Object.keys(derivedProps).forEach((propertyName) => {\n    // Do not log errors for the derived property bindings\n    blockedDerivedProps[propertyName] = true;\n  });\n\n  // Map of properties that can be overridden by both meta and default values\n  const overridingMetaPropsMap: Record<string, boolean> = {};\n\n  Object.entries(defaultProps).forEach(\n    ([propertyName, defaultPropertyName]) => {\n      if (!(defaultPropertyName in widget)) {\n        unInitializedDefaultProps[defaultPropertyName] = undefined;\n      }\n      // defaultProperty on eval needs to override the widget's property eg: defaultText overrides text\n      setOverridingProperty({\n        propertyOverrideDependency,\n        overridingPropertyPaths,\n        value: defaultPropertyName,\n        key: propertyName,\n        type: OverridingPropertyType.DEFAULT,\n      });\n\n      if (propertyName in defaultMetaProps) {\n        // Overriding properties will override the values of a property when evaluated\n        setOverridingProperty({\n          propertyOverrideDependency,\n          overridingPropertyPaths,\n          value: `meta.${propertyName}`,\n          key: propertyName,\n          type: OverridingPropertyType.META,\n        });\n        overridingMetaPropsMap[propertyName] = true;\n      }\n    },\n  );\n\n  const {\n    bindingPaths,\n    reactivePaths,\n    triggerPaths,\n    validationPaths,\n  } = getAllPathsFromPropertyConfig(widget, propertyPaneConfigs, {\n    ...derivedPropertyMap,\n    ...defaultMetaProps,\n    ...unInitializedDefaultProps,\n    ..._.keyBy(dynamicBindingPathList, \"key\"),\n    ...overridingPropertyPaths,\n  });\n\n  /**\n   * Spread operator does not merge deep objects properly.\n   * Eg a = {\n   *   foo: { bar: 100 }\n   * }\n   * b = {\n   *  foo: { baz: 200 }\n   * }\n   *\n   * { ...a, ...b }\n   *\n   * {\n   *  foo: { baz: 200 } // bar in \"a\" object got overridden by baz in \"b\"\n   * }\n   *\n   * Therefore spread is replaced with \"merge\" which merges objects recursively.\n   */\n\n  const widgetPathsToOmit = [\n    \"dynamicBindingPathList\",\n    \"dynamicPropertyPathList\",\n    \"dynamicTriggerPathList\",\n    \"privateWidgets\",\n    \"type\",\n  ];\n\n  const dataTreeWidgetWithoutMetaProps = _.merge(\n    {\n      ENTITY_TYPE: ENTITY_TYPE.WIDGET,\n    },\n    _.omit(widget, widgetPathsToOmit),\n    unInitializedDefaultProps,\n    derivedProps,\n  );\n\n  const dynamicPathsList: {\n    dynamicPropertyPathList?: DynamicPath[];\n    dynamicTriggerPathList?: DynamicPath[];\n  } = {};\n  if (widget.dynamicPropertyPathList)\n    dynamicPathsList.dynamicPropertyPathList = widget.dynamicPropertyPathList;\n  if (widget.dynamicTriggerPathList)\n    dynamicPathsList.dynamicTriggerPathList = widget.dynamicTriggerPathList;\n\n  return {\n    dataTreeWidgetWithoutMetaProps,\n    overridingMetaPropsMap,\n    defaultMetaProps,\n    entityConfig: {\n      defaultProps,\n      defaultMetaProps: Object.keys(defaultMetaProps),\n      dynamicBindingPathList,\n      logBlackList: {\n        ...widget.logBlackList,\n        ...blockedDerivedProps,\n      },\n      bindingPaths,\n      reactivePaths,\n      triggerPaths,\n      validationPaths,\n      ENTITY_TYPE: ENTITY_TYPE.WIDGET,\n      privateWidgets: {\n        ...widget.privateWidgets,\n      },\n      propertyOverrideDependency,\n      overridingPropertyPaths,\n      type: widget.type,\n      ...dynamicPathsList,\n    },\n  };\n};\n\n// @todo set the max size dynamically based on number of widgets. (widgets.length)\n\nconst generateDataTreeWidgetWithoutMetaMemoized = memoize(\n  generateDataTreeWidgetWithoutMeta,\n  {\n    maxSize: 1000,\n  },\n);\n\nexport const generateDataTreeWidget = (\n  widget: FlattenedWidgetProps,\n  widgetMetaProps: Record<string, unknown> = {},\n) => {\n  const {\n    dataTreeWidgetWithoutMetaProps: dataTreeWidget,\n    defaultMetaProps,\n    entityConfig,\n    overridingMetaPropsMap,\n  } = generateDataTreeWidgetWithoutMetaMemoized(widget);\n  const overridingMetaProps: Record<string, unknown> = {};\n\n  // overridingMetaProps maps properties that can be overriden by either default values or meta changes to initial values.\n  // initial value is set to metaProps value or defaultMetaProps value.\n  Object.entries(defaultMetaProps).forEach(([key, value]) => {\n    if (overridingMetaPropsMap[key]) {\n      overridingMetaProps[key] =\n        key in widgetMetaProps ? widgetMetaProps[key] : value;\n    }\n  });\n\n  entityConfig.isMetaPropDirty = !isEmpty(widgetMetaProps);\n\n  const meta = _.merge({}, overridingMetaProps, widgetMetaProps);\n\n  // if meta property's value is defined in widgetMetaProps then use that else set meta property to default metaProperty value.\n  const mergedProperties = _.merge({}, defaultMetaProps, widgetMetaProps);\n\n  Object.entries(mergedProperties).forEach(([key, value]) => {\n    // Since meta properties are always updated as a whole, we are replacing instead of merging.\n    // Merging mutates the memoized value, avoid merging meta values\n    dataTreeWidget[key] = value;\n  });\n\n  dataTreeWidget[\"meta\"] = meta;\n  dataTreeWidget[\"__config__\"] = entityConfig;\n\n  return dataTreeWidget;\n};\n","import { APIResponseError } from \"api/ApiResponses\";\nimport { ActionConfig, Property } from \"entities/Action\";\nimport _ from \"lodash\";\n\nexport enum AuthType {\n  OAUTH2 = \"oAuth2\",\n  DBAUTH = \"dbAuth\",\n}\n\nexport enum AuthenticationStatus {\n  NONE = \"NONE\",\n  IN_PROGRESS = \"IN_PROGRESS\",\n  SUCCESS = \"SUCCESS\",\n}\nexport interface DatasourceAuthentication {\n  authType?: string;\n  username?: string;\n  password?: string;\n  label?: string;\n  headerPrefix?: string;\n  value?: string;\n  addTo?: string;\n  bearerToken?: string;\n  authenticationStatus?: string;\n  authenticationType?: string;\n  secretExists?: Record<string, boolean>;\n}\n\nexport interface DatasourceColumns {\n  name: string;\n  type: string;\n}\n\nexport interface DatasourceKeys {\n  name: string;\n  type: string;\n}\n\nexport interface DatasourceStructure {\n  tables?: DatasourceTable[];\n  error?: APIResponseError;\n}\n\nexport interface QueryTemplate {\n  actionConfiguration?: ActionConfig;\n  configuration: Record<string, unknown>;\n  title: string;\n  body: string;\n  pluginSpecifiedTemplates?: Array<{ key?: string; value?: unknown }>;\n}\nexport interface DatasourceTable {\n  type: string;\n  name: string;\n  columns: DatasourceColumns[];\n  keys: DatasourceKeys[];\n  templates: QueryTemplate[];\n}\n\n// todo: check which fields are truly optional and move the common ones into base\ninterface BaseDatasource {\n  pluginId: string;\n  name: string;\n  workspaceId: string;\n  isValid: boolean;\n  isConfigured?: boolean;\n  userPermissions?: string[];\n  isDeleting?: boolean;\n}\n\nexport const isEmbeddedRestDatasource = (\n  val: any,\n): val is EmbeddedRestDatasource => {\n  if (!_.isObject(val)) return false;\n  if (!(\"datasourceConfiguration\" in val)) return false;\n  val = <EmbeddedRestDatasource>val;\n  // Object should exist and have value\n  if (!val.datasourceConfiguration) return false;\n  //url might exist as a key but not have value, so we won't check value\n  if (!(\"url\" in val.datasourceConfiguration)) return false;\n  return true;\n};\n\nexport interface EmbeddedRestDatasource extends BaseDatasource {\n  datasourceConfiguration: { url: string };\n  invalids: Array<string>;\n  messages: Array<string>;\n}\n\nexport interface DatasourceConfiguration {\n  url: string;\n  authentication?: DatasourceAuthentication;\n  properties?: Property[];\n  headers?: Property[];\n  queryParameters?: Property[];\n  databaseName?: string;\n}\n\nexport interface Datasource extends BaseDatasource {\n  id: string;\n  datasourceConfiguration: DatasourceConfiguration;\n  invalids?: string[];\n  structure?: DatasourceStructure;\n  messages?: string[];\n  success?: boolean;\n}\n\nexport interface MockDatasource {\n  name: string;\n  description: string;\n  packageName: string;\n  pluginType: string;\n  pluginName?: string;\n}\n\nexport const DEFAULT_DATASOURCE = (\n  pluginId: string,\n  workspaceId: string,\n): EmbeddedRestDatasource => ({\n  name: \"DEFAULT_REST_DATASOURCE\",\n  datasourceConfiguration: {\n    url: \"\",\n  },\n  invalids: [],\n  isValid: true,\n  pluginId,\n  workspaceId,\n  messages: [],\n});\n","import {\n  PropertyPaneConfig,\n  ValidationConfig,\n} from \"constants/PropertyControlConstants\";\nimport { EvaluationSubstitutionType } from \"entities/DataTree/dataTreeFactory\";\nimport { get, isObject, isUndefined, omitBy } from \"lodash\";\nimport memoize from \"micro-memoize\";\nimport { FlattenedWidgetProps } from \"reducers/entityReducers/canvasWidgetsReducer\";\nimport { WidgetProps } from \"widgets/BaseWidget\";\n\n/**\n * @typedef {Object} Paths\n * @property {Object} configBindingPaths - The Binding Path\n * @property {Object} configReactivePaths - The Dynamic Property Path\n * @property {Object} configTriggerPaths - The Trigger Path\n * @property {Object} configValidationPaths - The Validation Path\n */\n\n/**\n * All widget's property or paths where user can write javaScript bindings using mustache syntax are called bindingPaths.\n * Widget's meta and derived paths aren't binding paths as user can't add or remove binding for those value.\n */\ntype BindingPaths = Record<string, EvaluationSubstitutionType>;\n/**\n * Binding paths and non-binding paths of widget/action together form reactivePaths.\n */\ntype ReactivePaths = Record<string, EvaluationSubstitutionType>;\n\n/**\n * This function gets the binding validation and trigger paths from a config\n * @param config\n * @param path\n * @returns {Paths} Paths\n */\nconst checkPathsInConfig = (\n  config: any,\n  path: string,\n): {\n  configBindingPaths: BindingPaths;\n  configReactivePaths: ReactivePaths;\n  configTriggerPaths: Record<string, true>;\n  configValidationPaths: Record<string, ValidationConfig>;\n} => {\n  const configBindingPaths: BindingPaths = {};\n  const configTriggerPaths: Record<string, true> = {};\n  const configValidationPaths: Record<any, ValidationConfig> = {};\n  // Purely a Binding Path\n  if (config.isBindProperty && !config.isTriggerProperty) {\n    configBindingPaths[path] =\n      config.evaluationSubstitutionType || EvaluationSubstitutionType.TEMPLATE;\n    if (config.validation) {\n      configValidationPaths[path] = config.validation;\n    }\n  } else if (config.isBindProperty && config.isTriggerProperty) {\n    configTriggerPaths[path] = true;\n  }\n  return {\n    configBindingPaths,\n    configReactivePaths: configBindingPaths, // All bindingPaths are reactivePaths.\n    configTriggerPaths,\n    configValidationPaths,\n  };\n};\n\n// \"originalWidget\" param here always contains the complete widget props\n// as this function's widget parameter tends to change in each iteration\nconst childHasPanelConfig = (\n  config: any,\n  widget: WidgetProps,\n  basePath: string,\n  originalWidget: WidgetProps,\n) => {\n  const panelPropertyPath = config.propertyName;\n  const widgetPanelPropertyValues = get(widget, panelPropertyPath);\n\n  let bindingPaths: BindingPaths = {};\n  let reactivePaths: ReactivePaths = {};\n  let triggerPaths: Record<string, true> = {};\n  let validationPaths: Record<any, ValidationConfig> = {};\n  if (widgetPanelPropertyValues) {\n    Object.values(widgetPanelPropertyValues).forEach(\n      (widgetPanelPropertyValue: any) => {\n        const { panelIdPropertyName } = config.panelConfig;\n        const propertyPath = `${basePath}.${widgetPanelPropertyValue[panelIdPropertyName]}`;\n\n        let panelConfigChildren = [\n          ...(config.panelConfig.contentChildren || []),\n          ...(config.panelConfig.styleChildren || []),\n        ];\n\n        if (panelConfigChildren.length === 0)\n          panelConfigChildren = config.panelConfig.children;\n\n        panelConfigChildren.forEach((panelColumnConfig: any) => {\n          let isSectionHidden = false;\n          if (\"hidden\" in panelColumnConfig) {\n            isSectionHidden = panelColumnConfig.hidden(\n              originalWidget,\n              propertyPath,\n            );\n          }\n          if (!isSectionHidden) {\n            panelColumnConfig.children.forEach(\n              (panelColumnControlOrSectionConfig: any) => {\n                if (\n                  panelColumnControlOrSectionConfig.sectionName !== undefined\n                ) {\n                  panelColumnControlOrSectionConfig.children.forEach(\n                    (panelColumnControlConfig: any) => {\n                      const panelPropertyConfigPath = `${propertyPath}.${panelColumnControlConfig.propertyName}`;\n                      let isControlHidden = false;\n                      if (\"hidden\" in panelColumnControlConfig) {\n                        isControlHidden = panelColumnControlConfig.hidden(\n                          originalWidget,\n                          panelPropertyConfigPath,\n                        );\n                      }\n                      if (!isControlHidden) {\n                        const {\n                          configBindingPaths,\n                          configReactivePaths,\n                          configTriggerPaths,\n                          configValidationPaths,\n                        } = checkPathsInConfig(\n                          panelColumnControlConfig,\n                          panelPropertyConfigPath,\n                        );\n                        bindingPaths = {\n                          ...configBindingPaths,\n                          ...bindingPaths,\n                        };\n                        reactivePaths = {\n                          ...configReactivePaths,\n                          ...reactivePaths,\n                        };\n                        triggerPaths = {\n                          ...configTriggerPaths,\n                          ...triggerPaths,\n                        };\n                        validationPaths = {\n                          ...configValidationPaths,\n                          ...validationPaths,\n                        };\n                        // Has child Panel Config\n                        if (panelColumnControlConfig.panelConfig) {\n                          const {\n                            bindingPaths: panelBindingPaths,\n                            reactivePaths: panelReactivePaths,\n                            triggerPaths: panelTriggerPaths,\n                            validationPaths: panelValidationPaths,\n                          } = childHasPanelConfig(\n                            panelColumnControlConfig,\n                            widgetPanelPropertyValue,\n                            panelPropertyConfigPath,\n                            originalWidget,\n                          );\n                          bindingPaths = {\n                            ...panelBindingPaths,\n                            ...bindingPaths,\n                          };\n                          reactivePaths = {\n                            ...panelReactivePaths,\n                            ...reactivePaths,\n                          };\n                          triggerPaths = {\n                            ...panelTriggerPaths,\n                            ...triggerPaths,\n                          };\n                          validationPaths = {\n                            ...panelValidationPaths,\n                            ...validationPaths,\n                          };\n                        }\n                      }\n                    },\n                  );\n                } else {\n                  const panelPropertyConfigPath = `${propertyPath}.${panelColumnControlOrSectionConfig.propertyName}`;\n                  let isControlHidden = false;\n                  if (\"hidden\" in panelColumnControlOrSectionConfig) {\n                    isControlHidden = panelColumnControlOrSectionConfig.hidden(\n                      originalWidget,\n                      panelPropertyConfigPath,\n                    );\n                  }\n                  if (!isControlHidden) {\n                    const {\n                      configBindingPaths,\n                      configReactivePaths,\n                      configTriggerPaths,\n                      configValidationPaths,\n                    } = checkPathsInConfig(\n                      panelColumnControlOrSectionConfig,\n                      panelPropertyConfigPath,\n                    );\n                    bindingPaths = {\n                      ...configBindingPaths,\n                      ...bindingPaths,\n                    };\n                    reactivePaths = {\n                      ...configReactivePaths,\n                      ...reactivePaths,\n                    };\n                    triggerPaths = { ...configTriggerPaths, ...triggerPaths };\n                    validationPaths = {\n                      ...configValidationPaths,\n                      ...validationPaths,\n                    };\n                    // Has child Panel Config\n                    if (panelColumnControlOrSectionConfig.panelConfig) {\n                      const {\n                        bindingPaths: panelBindingPaths,\n                        reactivePaths: panelReactivePaths,\n                        triggerPaths: panelTriggerPaths,\n                        validationPaths: panelValidationPaths,\n                      } = childHasPanelConfig(\n                        panelColumnControlOrSectionConfig,\n                        widgetPanelPropertyValue,\n                        panelPropertyConfigPath,\n                        originalWidget,\n                      );\n                      bindingPaths = {\n                        ...panelBindingPaths,\n                        ...bindingPaths,\n                      };\n                      reactivePaths = {\n                        ...panelReactivePaths,\n                        ...reactivePaths,\n                      };\n                      triggerPaths = { ...panelTriggerPaths, ...triggerPaths };\n                      validationPaths = {\n                        ...panelValidationPaths,\n                        ...validationPaths,\n                      };\n                    }\n                  }\n                }\n              },\n            );\n          }\n        });\n      },\n    );\n  }\n\n  return { reactivePaths, triggerPaths, validationPaths, bindingPaths };\n};\n\nconst getAllPathsFromPropertyConfigWithoutMemo = (\n  widget: WidgetProps,\n  widgetConfig: readonly PropertyPaneConfig[],\n  defaultProperties: Record<string, any>,\n): {\n  bindingPaths: BindingPaths;\n  reactivePaths: ReactivePaths;\n  triggerPaths: Record<string, true>;\n  validationPaths: Record<string, ValidationConfig>;\n} => {\n  let bindingPaths: BindingPaths = {};\n  let reactivePaths: ReactivePaths = {};\n  Object.keys(defaultProperties).forEach((property) => {\n    reactivePaths[property] = EvaluationSubstitutionType.TEMPLATE;\n  });\n  let triggerPaths: Record<string, true> = {};\n  let validationPaths: Record<any, ValidationConfig> = {};\n\n  widgetConfig.forEach((config) => {\n    if (config.children) {\n      config.children.forEach((controlConfig: any) => {\n        const basePath = controlConfig.propertyName;\n        let isHidden = false;\n        if (\"hidden\" in controlConfig) {\n          isHidden = controlConfig.hidden(widget, basePath);\n        }\n        if (!isHidden) {\n          const path = controlConfig.propertyName;\n          const {\n            configBindingPaths,\n            configReactivePaths,\n            configTriggerPaths,\n            configValidationPaths,\n          } = checkPathsInConfig(controlConfig, path);\n          bindingPaths = {\n            ...bindingPaths,\n            ...configBindingPaths,\n          };\n          // Update default path configs with the ones in the property config\n          reactivePaths = {\n            ...reactivePaths,\n            ...configReactivePaths,\n          };\n          triggerPaths = { ...triggerPaths, ...configTriggerPaths };\n          validationPaths = { ...validationPaths, ...configValidationPaths };\n        }\n        // Has child Panel Config\n        if (controlConfig.panelConfig) {\n          const resultingPaths = childHasPanelConfig(\n            controlConfig,\n            widget,\n            basePath,\n            widget,\n          );\n          bindingPaths = {\n            ...bindingPaths,\n            ...resultingPaths.bindingPaths,\n          };\n          reactivePaths = {\n            ...reactivePaths,\n            ...resultingPaths.reactivePaths,\n          };\n          triggerPaths = { ...triggerPaths, ...resultingPaths.triggerPaths };\n          validationPaths = {\n            ...validationPaths,\n            ...resultingPaths.validationPaths,\n          };\n        }\n        if (controlConfig.children) {\n          const basePropertyPath = controlConfig.propertyName;\n          const widgetPropertyValue = get(widget, basePropertyPath, []);\n          // Property in object structure\n          if (\n            !isUndefined(widgetPropertyValue) &&\n            isObject(widgetPropertyValue)\n          ) {\n            Object.keys(widgetPropertyValue).forEach((key: string) => {\n              const objectIndexPropertyPath = `${basePropertyPath}.${key}`;\n              controlConfig.children.forEach((childPropertyConfig: any) => {\n                const childArrayPropertyPath = `${objectIndexPropertyPath}.${childPropertyConfig.propertyName}`;\n                const {\n                  configBindingPaths,\n                  configReactivePaths,\n                  configTriggerPaths,\n                  configValidationPaths,\n                } = checkPathsInConfig(\n                  childPropertyConfig,\n                  childArrayPropertyPath,\n                );\n                bindingPaths = {\n                  ...bindingPaths,\n                  ...configBindingPaths,\n                };\n                reactivePaths = {\n                  ...reactivePaths,\n                  ...configReactivePaths,\n                };\n                triggerPaths = { ...triggerPaths, ...configTriggerPaths };\n                validationPaths = {\n                  ...validationPaths,\n                  ...configValidationPaths,\n                };\n              });\n            });\n          }\n        }\n      });\n    }\n  });\n\n  return { reactivePaths, triggerPaths, validationPaths, bindingPaths };\n};\n\nexport const getAllPathsFromPropertyConfig = memoize(\n  getAllPathsFromPropertyConfigWithoutMemo,\n  { maxSize: 1000 },\n);\n\n/**\n * this function gets the next available row for pasting widgets\n * NOTE: this function excludes modal widget when calculating next available row\n *\n * @param parentContainerId\n * @param canvasWidgets\n * @returns\n */\nexport const nextAvailableRowInContainer = (\n  parentContainerId: string,\n  canvasWidgets: { [widgetId: string]: FlattenedWidgetProps },\n) => {\n  const filteredCanvasWidgets = omitBy(canvasWidgets, (widget) => {\n    return widget.type === \"MODAL_WIDGET\";\n  });\n\n  return (\n    Object.values(filteredCanvasWidgets).reduce(\n      (prev: number, next: any) =>\n        next?.parentId === parentContainerId && next.bottomRow > prev\n          ? next.bottomRow\n          : prev,\n      0,\n    ) + 1\n  );\n};\n","export default [\n  {\n    name: \"AWS SDK\",\n    url: \"https://sdk.amazonaws.com/js/aws-sdk-2.410.0.min.js\",\n    docsURL:\n      \"https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/configuring-the-jssdk.html\",\n    description: \"AWS SDK for JavaScript\",\n    icon: \"https://github.com/aws.png?s=20\",\n    author: \"aws\",\n    version: \"2.410.0\",\n  },\n  {\n    name: \"jsonwebtoken\",\n    description: \"JSON Web Token implementation (symmetric and asymmetric)\",\n    author: \"auth0\",\n    docsURL: \"https://github.com/auth0/node-jsonwebtoken#readme\",\n    version: \"8.5.1\",\n    url: `/libraries/jsonwebtoken@8.5.1.js`,\n    icon: \"https://github.com/auth0.png?s=20\",\n  },\n  {\n    name: \"jspdf\",\n    description: \"PDF Document creation from JavaScript\",\n    author: \"MrRio\",\n    docsURL: \"https://raw.githack.com/MrRio/jsPDF/master/docs/index.html\",\n    version: \"2.5.1\",\n    url: \"https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js\",\n    icon: \"https://github.com/MrRio.png?s=20\",\n  },\n  {\n    name: \"@amplitude/analytics-browser\",\n    description: \"Official Amplitude SDK for Web\",\n    author: \"amplitude\",\n    docsURL:\n      \"https://github.com/amplitude/Amplitude-TypeScript/tree/main/packages/analytics-browser#usage\",\n    version: \"1.6.1\",\n    url:\n      \"https://cdn.jsdelivr.net/npm/@amplitude/analytics-browser@1.6.1/lib/scripts/amplitude-min.umd.js\",\n    icon: \"https://github.com/amplitude.png?s=20\",\n  },\n  {\n    name: \"@supabase/supabase-js\",\n    description: \"Isomorphic Javascript client for Supabase\",\n    author: \"supabase\",\n    docsURL: \"https://supabase.com/docs/reference/javascript\",\n    version: \"2.4.0\",\n    url:\n      \"https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2.4.0/dist/umd/supabase.min.js\",\n    icon: \"https://github.com/supabase.png?s=20\",\n  },\n  {\n    name: \"uuidjs\",\n    url: \"https://cdn.jsdelivr.net/npm/uuidjs@4.2.12/src/uuid.min.js\",\n    description:\n      \"UUID.js is a JavaScript/ECMAScript library to generate RFC 4122 compliant Universally Unique IDentifiers (UUIDs). This library supports both version 4 UUIDs (UUIDs from random numbers) and version 1 UUIDs (time-based UUIDs), and provides an object-oriented interface to print a generated or parsed UUID in a variety of forms.\",\n    author: \"LiosK\",\n    docsURL:\n      \"https://github.com/LiosK/UUID.js/#uuidjs---rfc-compliant-uuid-generator-for-javascript\",\n    version: \"4.2.12\",\n    icon: \"https://github.com/LiosK.png?s=20\",\n  },\n  {\n    name: \"Papa Parse 5\",\n    description:\n      \"Fast and powerful CSV (delimited text) parser that gracefully handles large files and malformed input\",\n    author: \"mholt\",\n    docsURL: \"https://www.papaparse.com/docs\",\n    version: \"5.3.2\",\n    url: `https://unpkg.com/papaparse@5.3.2/papaparse.min.js`,\n    icon: \"https://github.com/mholt.png?s=20\",\n  },\n  {\n    name: \"ky\",\n    description: \"Tiny and elegant HTTP client based on the browser Fetch API\",\n    author: \"sindresorhus\",\n    docsURL: \"https://github.com/sindresorhus/ky#usage\",\n    version: \"0.25.0\",\n    url: \"https://www.unpkg.com/ky@0.25.0/umd.js\",\n    icon: \"https://github.com/sindresorhus.png?s=20\",\n  },\n  {\n    name: \"appwrite\",\n    url: \"https://cdn.jsdelivr.net/npm/appwrite@10.2.0/dist/iife/sdk.min.js\",\n    description:\n      \"Appwrite is a secure end-to-end backend server for frontend and mobile developers\",\n    author: \"appwrite\",\n    version: \"10.2.0\",\n    icon: \"https://github.com/appwrite.png?s=20\",\n    docsURL: \"https://github.com/appwrite/sdk-for-web#getting-started\",\n  },\n  {\n    name: \"i18next\",\n    url: \"https://cdn.jsdelivr.net/npm/i18next@22.1.4/dist/umd/i18next.min.js\",\n    description: \"i18next internationalization framework\",\n    author: \"i18next\",\n    version: \"22.1.4\",\n    icon: \"https://github.com/i18next.png?s=20\",\n    docsURL: \"https://www.i18next.com/overview/getting-started\",\n  },\n  {\n    name: \"uzip-module\",\n    description: \"Module version of UZIP.js\",\n    author: \"greggman\",\n    docsURL: \"https://github.com/greggman/uzip-module#uzip-module\",\n    version: \"1.0.3\",\n    url: `https://cdn.jsdelivr.net/npm/uzip-module@1.0.3/dist/uzip.js`,\n    icon: \"https://github.com/greggman.png?s=20\",\n  },\n  {\n    name: \"@sentry/browser\",\n    description: \"Official Sentry SDK for browsers\",\n    author: \"getsentry\",\n    docsURL: \"https://docs.sentry.io/platforms/javascript/\",\n    version: \"7.17.3\",\n    url: \"https://browser.sentry-cdn.com/7.17.3/bundle.min.js\",\n    icon: \"https://github.com/getsentry.png?s=20\",\n  },\n  {\n    name: \"jsonpath\",\n    url: \"https://cdn.jsdelivr.net/npm/jsonpath@1.1.1/jsonpath.min.js\",\n    description:\n      \"Query JavaScript objects with JSONPath expressions. Robust / safe JSONPath engine for Node.js\",\n    version: \"1.1.1\",\n    author: \"dchester\",\n    docsURL: \"https://github.com/dchester/jsonpath/#jsonpath\",\n    icon: \"https://github.com/dchester.png?s=20\",\n  },\n  {\n    name: \"browser-image-compression\",\n    url:\n      \"https://cdn.jsdelivr.net/npm/browser-image-compression@2.0.0/dist/browser-image-compression.min.js\",\n    version: \"2.0.0\",\n    author: \"Donaldcwl\",\n    docsURL:\n      \"https://github.com/Donaldcwl/browser-image-compression/#browser-image-compression\",\n    description: \"Compress images in the browser\",\n    icon: \"https://github.com/Donaldcwl.png?s=20\",\n  },\n  // We'll be enabling support for segment soon\n  // {\n  //   name: \"@segment/analytics-next\",\n  //   url:\n  //     \"https://cdn.jsdelivr.net/npm/@segment/analytics-next@1.46.1/dist/umd/index.js\",\n  //   description:\n  //     \"Analytics Next (aka Analytics 2.0) is the latest version of Segment’s JavaScript SDK - enabling you to send your data to any tool without having to learn, test, or use a new API every time.\",\n  //   author: \"segmentio\",\n  //   docsURL:\n  //     \"https://github.com/segmentio/analytics-next/tree/master/packages/browser#readme\",\n  //   version: \"1.46.1\",\n  //   icon: \"https://github.com/segmentio.png?s=20\",\n  // },\n];\n","import { createImmerReducer } from \"utils/ReducerUtils\";\nimport {\n  ReduxAction,\n  ReduxActionErrorTypes,\n  ReduxActionTypes,\n} from \"@appsmith/constants/ReduxActionConstants\";\nimport recommendedLibraries from \"pages/Editor/Explorer/Libraries/recommendedLibraries\";\nimport { defaultLibraries, TJSLibrary } from \"workers/common/JSLibrary\";\n\nexport enum InstallState {\n  Queued,\n  Installing,\n  Failed,\n  Success,\n}\n\nexport type LibraryState = {\n  installationStatus: Record<string, InstallState>;\n  installedLibraries: TJSLibrary[];\n  isInstallerOpen: boolean;\n};\n\nconst initialState = {\n  isInstallerOpen: false,\n  installationStatus: {},\n  installedLibraries: defaultLibraries.map((lib: TJSLibrary) => {\n    return {\n      name: lib.name,\n      docsURL: lib.docsURL,\n      version: lib.version,\n      accessor: lib.accessor,\n    };\n  }),\n  reservedNames: [],\n};\n\nconst jsLibraryReducer = createImmerReducer(initialState, {\n  [ReduxActionTypes.INSTALL_LIBRARY_INIT]: (\n    state: LibraryState,\n    action: ReduxAction<Partial<TJSLibrary>>,\n  ) => {\n    const { url } = action.payload;\n    state.installationStatus[url as string] =\n      state.installationStatus[url as string] || InstallState.Queued;\n  },\n  [ReduxActionTypes.INSTALL_LIBRARY_START]: (\n    state: LibraryState,\n    action: ReduxAction<string>,\n  ) => {\n    state.installationStatus[action.payload] = InstallState.Queued;\n  },\n  [ReduxActionTypes.INSTALL_LIBRARY_SUCCESS]: (\n    state: LibraryState,\n    action: ReduxAction<{\n      accessor: string[];\n      url: string;\n      version: string;\n    }>,\n  ) => {\n    const { accessor, url, version } = action.payload;\n    const name = accessor[accessor.length - 1] as string;\n    const recommendedLibrary = recommendedLibraries.find(\n      (lib) => lib.url === url,\n    );\n    state.installationStatus[url] = InstallState.Success;\n    state.installedLibraries.unshift({\n      name: recommendedLibrary?.name || name,\n      docsURL: recommendedLibrary?.url || url,\n      version: recommendedLibrary?.version || version,\n      url,\n      accessor,\n    });\n  },\n  [ReduxActionErrorTypes.INSTALL_LIBRARY_FAILED]: (\n    state: LibraryState,\n    action: ReduxAction<{ url: string }>,\n  ) => {\n    state.installationStatus[action.payload.url] = InstallState.Failed;\n  },\n  [ReduxActionTypes.CLEAR_PROCESSED_INSTALLS]: (state: LibraryState) => {\n    for (const key in state.installationStatus) {\n      if (\n        [InstallState.Success, InstallState.Failed].includes(\n          state.installationStatus[key],\n        )\n      ) {\n        delete state.installationStatus[key];\n      }\n    }\n  },\n  [ReduxActionTypes.FETCH_JS_LIBRARIES_SUCCESS]: (\n    state: LibraryState,\n    action: ReduxAction<TJSLibrary[]>,\n  ) => {\n    state.installedLibraries = action.payload.concat(\n      initialState.installedLibraries,\n    );\n  },\n  [ReduxActionTypes.UNINSTALL_LIBRARY_SUCCESS]: (\n    state: LibraryState,\n    action: ReduxAction<TJSLibrary>,\n  ) => {\n    const uLib = action.payload;\n    state.installedLibraries = state.installedLibraries.filter(\n      (lib) => uLib.url !== lib.url,\n    );\n  },\n  [ReduxActionTypes.TOGGLE_INSTALLER]: (\n    state: LibraryState,\n    action: ReduxAction<boolean>,\n  ) => {\n    state.isInstallerOpen = action.payload;\n  },\n});\n\nexport default jsLibraryReducer;\n","import { AppState } from \"@appsmith/reducers\";\nimport {\n  ActionData,\n  ActionDataState,\n} from \"reducers/entityReducers/actionsReducer\";\nimport { ActionResponse } from \"api/ActionAPI\";\nimport { createSelector } from \"reselect\";\nimport {\n  Datasource,\n  MockDatasource,\n  DatasourceStructure,\n  isEmbeddedRestDatasource,\n} from \"entities/Datasource\";\nimport { Action, PluginType } from \"entities/Action\";\nimport { find, get, sortBy } from \"lodash\";\nimport ImageAlt from \"assets/images/placeholder-image.svg\";\nimport { CanvasWidgetsReduxState } from \"reducers/entityReducers/canvasWidgetsReducer\";\nimport { MAIN_CONTAINER_WIDGET_ID } from \"constants/WidgetConstants\";\nimport { AppStoreState } from \"reducers/entityReducers/appReducer\";\nimport { JSCollectionDataState } from \"reducers/entityReducers/jsActionsReducer\";\nimport { DefaultPlugin, GenerateCRUDEnabledPluginMap } from \"api/PluginApi\";\nimport { JSAction, JSCollection } from \"entities/JSCollection\";\nimport { APP_MODE } from \"entities/App\";\nimport { ExplorerFileEntity } from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport { ActionValidationConfigMap } from \"constants/PropertyControlConstants\";\nimport { selectFeatureFlags } from \"./usersSelectors\";\nimport {\n  EvaluationError,\n  EVAL_ERROR_PATH,\n  PropertyEvaluationErrorType,\n} from \"utils/DynamicBindingUtils\";\n\nimport { InstallState } from \"reducers/uiReducers/libraryReducer\";\nimport recommendedLibraries from \"pages/Editor/Explorer/Libraries/recommendedLibraries\";\nimport { TJSLibrary } from \"workers/common/JSLibrary\";\n\nexport const getEntities = (state: AppState): AppState[\"entities\"] =>\n  state.entities;\n\nexport const getDatasources = (state: AppState): Datasource[] => {\n  return state.entities.datasources.list;\n};\n\nexport const getDatasourcesStructure = (\n  state: AppState,\n): Record<string, DatasourceStructure> => {\n  return state.entities.datasources.structure;\n};\n\nexport const getIsFetchingDatasourceStructure = (state: AppState): boolean => {\n  return state.entities.datasources.fetchingDatasourceStructure;\n};\n\nexport const getMockDatasources = (state: AppState): MockDatasource[] => {\n  return state.entities.datasources.mockDatasourceList;\n};\n\nexport const getDefaultPlugins = (state: AppState): DefaultPlugin[] =>\n  state.entities.plugins.defaultPluginList;\n\n// Get plugin by id or package name\nexport const getDefaultPlugin = (\n  state: AppState,\n  pluginIdentifier: string,\n): DefaultPlugin | undefined => {\n  return state.entities.plugins.defaultPluginList.find(\n    (plugin) =>\n      plugin.packageName === pluginIdentifier || plugin.id === pluginIdentifier,\n  );\n};\n\nexport const getPluginIdsOfNames = (\n  state: AppState,\n  names: Array<string>,\n): Array<string> | undefined => {\n  const plugins = state.entities.plugins.list.filter((plugin) =>\n    names.includes(plugin.name),\n  );\n  const pluginIds = plugins.map((plugin) => plugin.id);\n\n  if (!pluginIds.length) return undefined;\n  return pluginIds;\n};\n\nexport const getPluginIdsOfPackageNames = (\n  state: AppState,\n  names: Array<string>,\n): Array<string> | undefined => {\n  const plugins = state.entities.plugins.list.filter((plugin) =>\n    names.includes(plugin.packageName),\n  );\n  const pluginIds = plugins.map((plugin) => plugin.id);\n\n  if (!pluginIds.length) return undefined;\n  return pluginIds;\n};\n\nexport const getPluginNameFromDatasourceId = (\n  state: AppState,\n  datasourceId: string,\n): string | undefined => {\n  const datasource = state.entities.datasources.list.find(\n    (datasource) => datasource.id === datasourceId,\n  );\n  const plugin = state.entities.plugins.list.find(\n    (plugin) => plugin.id === datasource?.pluginId,\n  );\n\n  if (!plugin) return undefined;\n  return plugin.name;\n};\n\nexport const getPluginPackageFromDatasourceId = (\n  state: AppState,\n  datasourceId: string,\n): string | undefined => {\n  const datasource = state.entities.datasources.list.find(\n    (datasource) => datasource.id === datasourceId,\n  );\n  const plugin = state.entities.plugins.list.find(\n    (plugin) => plugin.id === datasource?.pluginId,\n  );\n\n  if (!plugin) return undefined;\n  return plugin.packageName;\n};\n\nexport const getPluginNameFromId = (\n  state: AppState,\n  pluginId: string,\n): string => {\n  const plugin = state.entities.plugins.list.find(\n    (plugin) => plugin.id === pluginId,\n  );\n\n  if (!plugin) return \"\";\n  return plugin.name;\n};\n\nexport const getPluginTypeFromDatasourceId = (\n  state: AppState,\n  datasourceId: string,\n): PluginType | undefined => {\n  const datasource = state.entities.datasources.list.find(\n    (datasource) => datasource.id === datasourceId,\n  );\n  const plugin = state.entities.plugins.list.find(\n    (plugin) => plugin.id === datasource?.pluginId,\n  );\n\n  if (!plugin) return undefined;\n  return plugin.type;\n};\n\nexport const getPluginForm = (state: AppState, pluginId: string): any[] => {\n  return state.entities.plugins.formConfigs[pluginId];\n};\nexport const getIsFetchingSinglePluginForm = (\n  state: AppState,\n  pluginId: string,\n): boolean => {\n  return !!state.entities.plugins.fetchingSinglePluginForm[pluginId];\n};\n\nexport const getIsExecutingDatasourceQuery = (state: AppState): boolean => {\n  return state.entities.datasources.executingDatasourceQuery;\n};\n\nexport const getIsDatasourceTesting = (state: AppState): boolean => {\n  return state.entities.datasources.isTesting;\n};\n\nexport const getEditorConfig = (state: AppState, pluginId: string): any[] => {\n  return state.entities.plugins.editorConfigs[pluginId];\n};\n\nexport const getSettingConfig = (state: AppState, pluginId: string): any[] => {\n  return state.entities.plugins.settingConfigs[pluginId];\n};\n\nexport const getDatasourceFormButtonConfig = (\n  state: AppState,\n  pluginId: string,\n): string[] => {\n  return state.entities.plugins.datasourceFormButtonConfigs[pluginId];\n};\n\nexport const getActions = (state: AppState): ActionDataState =>\n  state.entities.actions;\n\nexport const getJSCollections = (state: AppState): JSCollectionDataState =>\n  state.entities.jsActions;\n\nexport const getDatasource = (\n  state: AppState,\n  datasourceId: string,\n): Datasource | undefined =>\n  state.entities.datasources.list.find(\n    (datasource) => datasource.id === datasourceId,\n  );\n\nexport const getDatasourceDrafts = (state: AppState) => {\n  return state.ui.datasourcePane.drafts;\n};\n\nexport const getDatasourceDraft = (state: AppState, id: string) => {\n  const drafts = state.ui.datasourcePane.drafts;\n  if (id in drafts) return drafts[id];\n  return {};\n};\n\nexport const getDatasourceActionRouteInfo = (state: AppState) => {\n  return state.ui.datasourcePane.actionRouteInfo;\n};\n\nexport const getDatasourcesByPluginId = (\n  state: AppState,\n  id: string,\n): Datasource[] => {\n  return state.entities.datasources.list.filter((d) => d.pluginId === id);\n};\n\nexport const getPlugins = (state: AppState) => state.entities.plugins.list;\n\nexport const getPluginByPackageName = (state: AppState, name: string) =>\n  state.entities.plugins.list.find((p) => p.packageName === name);\n\nexport const getPluginEditorConfigs = (state: AppState) =>\n  state.entities.plugins.editorConfigs;\n\nexport const getPluginDependencyConfig = (state: AppState) =>\n  state.entities.plugins.dependencies;\n\nexport const getPluginSettingConfigs = (state: AppState, pluginId: string) =>\n  state.entities.plugins.settingConfigs[pluginId];\n\nexport const getDBPlugins = createSelector(getPlugins, (plugins) =>\n  plugins.filter((plugin) => plugin.type === PluginType.DB),\n);\n\nexport const getDBAndRemotePlugins = createSelector(getPlugins, (plugins) =>\n  plugins.filter(\n    (plugin) =>\n      plugin.type === PluginType.DB || plugin.type === PluginType.REMOTE,\n  ),\n);\n\nexport const getUnconfiguredDatasources = (state: AppState) =>\n  state.entities.datasources.unconfiguredList ?? [];\n\nexport const getDatasourceByPluginId = (state: AppState, pluginId: string) =>\n  state.entities.datasources.list.filter((d) => d.pluginId === pluginId);\n\nexport const getDBDatasources = createSelector(\n  getDBPlugins,\n  getEntities,\n  (dbPlugins, entities) => {\n    const datasources = entities.datasources.list;\n    const dbPluginIds = dbPlugins.map((plugin) => plugin.id);\n\n    return datasources.filter((datasource) =>\n      dbPluginIds.includes(datasource.pluginId),\n    );\n  },\n);\n\nexport const getDBAndRemoteDatasources = createSelector(\n  getDBAndRemotePlugins,\n  getEntities,\n  (plugins, entities) => {\n    const datasources = entities.datasources.list;\n    const pluginIds = plugins.map((plugin) => plugin.id);\n\n    return datasources.filter((datasource) =>\n      pluginIds.includes(datasource.pluginId),\n    );\n  },\n);\n\nexport const getQueryName = (state: AppState, actionId: string): string => {\n  const action = state.entities.actions.find((action: ActionData) => {\n    return action.config.id === actionId;\n  });\n\n  return action?.config.name ?? \"\";\n};\n\nconst getCurrentPageId = (state: AppState) =>\n  state.entities.pageList.currentPageId;\n\nexport const getDatasourcePlugins = createSelector(getPlugins, (plugins) => {\n  return plugins.filter((plugin) => plugin?.allowUserDatasources ?? true);\n});\n\nexport const getPluginImages = createSelector(getPlugins, (plugins) => {\n  const pluginImages: Record<string, string> = {};\n\n  plugins.forEach((plugin) => {\n    pluginImages[plugin.id] = plugin?.iconLocation ?? ImageAlt;\n  });\n\n  return pluginImages;\n});\n\nexport const getPluginNames = createSelector(getPlugins, (plugins) => {\n  const pluginNames: Record<string, string> = {};\n\n  plugins.forEach((plugin) => {\n    pluginNames[plugin.id] = plugin?.name;\n  });\n\n  return pluginNames;\n});\n\nexport const getPluginTemplates = createSelector(getPlugins, (plugins) => {\n  const pluginTemplates: Record<string, any> = {};\n\n  plugins.forEach((plugin) => {\n    pluginTemplates[plugin.id] = plugin.templates;\n  });\n\n  return pluginTemplates;\n});\n\nexport const getPluginResponseTypes = createSelector(getPlugins, (plugins) => {\n  const pluginResponseTypes: Record<string, any> = {};\n\n  plugins.forEach((plugin) => {\n    pluginResponseTypes[plugin.id] = plugin.responseType;\n  });\n\n  return pluginResponseTypes;\n});\n\nexport const getPluginDocumentationLinks = createSelector(\n  getPlugins,\n  (plugins) => {\n    const pluginDocumentationLinks: Record<string, string | undefined> = {};\n\n    plugins.forEach((plugin) => {\n      pluginDocumentationLinks[plugin.id] = plugin.documentationLink;\n    });\n\n    return pluginDocumentationLinks;\n  },\n);\n\nexport const getGenerateCRUDEnabledPluginMap = createSelector(\n  getPlugins,\n  (plugins) => {\n    const pluginIdGenerateCRUDPageEnabled: GenerateCRUDEnabledPluginMap = {};\n    plugins.map((plugin) => {\n      if (plugin.generateCRUDPageComponent) {\n        pluginIdGenerateCRUDPageEnabled[plugin.id] = plugin.packageName;\n      }\n    });\n    return pluginIdGenerateCRUDPageEnabled;\n  },\n);\n\nexport const getActionsForCurrentPage = createSelector(\n  getCurrentPageId,\n  getActions,\n  (pageId, actions) => {\n    if (!pageId) return [];\n    return actions.filter((a) => a.config.pageId === pageId);\n  },\n);\n\nexport const getJSCollectionsForCurrentPage = createSelector(\n  getCurrentPageId,\n  getJSCollections,\n  (pageId, actions) => {\n    if (!pageId) return [];\n    return actions.filter((a) => a.config.pageId === pageId);\n  },\n);\n\nexport const getPlugin = (state: AppState, pluginId: string) => {\n  return state.entities.plugins.list.find((plugin) => plugin.id === pluginId);\n};\n\nexport const getActionResponses = createSelector(getActions, (actions) => {\n  const responses: Record<string, ActionResponse | undefined> = {};\n\n  actions.forEach((a) => {\n    responses[a.config.id] = a.data;\n  });\n  return responses;\n});\n\nexport const getAction = (\n  state: AppState,\n  actionId: string,\n): Action | undefined => {\n  const action = find(state.entities.actions, (a) => a.config.id === actionId);\n  return action ? action.config : undefined;\n};\n\nexport const getActionData = (\n  state: AppState,\n  actionId: string,\n): ActionResponse | undefined => {\n  const action = find(state.entities.actions, (a) => a.config.id === actionId);\n  return action ? action.data : undefined;\n};\n\nexport const getJSCollection = (\n  state: AppState,\n  actionId: string,\n): JSCollection | undefined => {\n  const jsaction = find(\n    state.entities.jsActions,\n    (a) => a.config.id === actionId,\n  );\n  return jsaction ? jsaction.config : undefined;\n};\n\nexport function getCurrentPageNameByActionId(\n  state: AppState,\n  actionId: string,\n): string {\n  const action = state.entities.actions.find((action) => {\n    return action.config.id === actionId;\n  });\n  const pageId = action ? action.config.pageId : \"\";\n  return getPageNameByPageId(state, pageId);\n}\n\nexport function getCurrentPageNameByJSCollectionId(\n  state: AppState,\n  actionId: string,\n): string {\n  const action = state.entities.jsActions.find((action) => {\n    return action.config.id === actionId;\n  });\n  const pageId = action ? action.config.pageId : \"\";\n  return getPageNameByPageId(state, pageId);\n}\n\nexport function getPageNameByPageId(state: AppState, pageId: string): string {\n  const page = state.entities.pageList.pages.find(\n    (page) => page.pageId === pageId,\n  );\n  return page ? page.pageName : \"\";\n}\n\nconst getQueryPaneSavingMap = (state: AppState) => state.ui.queryPane.isSaving;\nconst getApiPaneSavingMap = (state: AppState) => state.ui.apiPane.isSaving;\nconst getActionDirtyState = (state: AppState) => state.ui.apiPane.isDirty;\n\nexport const isActionSaving = (id: string) =>\n  createSelector(\n    [getQueryPaneSavingMap, getApiPaneSavingMap],\n    (querySavingMap, apiSavingsMap) => {\n      return (\n        (id in querySavingMap && querySavingMap[id]) ||\n        (id in apiSavingsMap && apiSavingsMap[id])\n      );\n    },\n  );\n\nexport const isActionDirty = (id: string) =>\n  createSelector([getActionDirtyState], (actionDirtyMap) => {\n    return id in actionDirtyMap && actionDirtyMap[id];\n  });\n\nexport const getAppData = (state: AppState) => state.entities.app;\n\nexport const getAppStoreData = (state: AppState): AppStoreState =>\n  state.entities.app.store;\n\nexport const getCanvasWidgets = (state: AppState): CanvasWidgetsReduxState =>\n  state.entities.canvasWidgets;\n\nexport const getCanvasWidgetsStructure = (state: AppState) =>\n  state.entities.canvasWidgetsStructure;\n\nconst getPageWidgets = (state: AppState) => state.ui.pageWidgets;\nexport const getCurrentPageWidgets = createSelector(\n  getPageWidgets,\n  getCurrentPageId,\n  (widgetsByPage, currentPageId) =>\n    currentPageId ? widgetsByPage[currentPageId] : {},\n);\n\nexport const getParentModalId = (\n  widget: any,\n  pageWidgets: Record<string, any>,\n) => {\n  let parentModalId;\n  let { parentId } = widget;\n  let parentWidget = pageWidgets[parentId];\n  while (parentId && parentId !== MAIN_CONTAINER_WIDGET_ID) {\n    if (parentWidget?.type === \"MODAL_WIDGET\") {\n      parentModalId = parentId;\n      break;\n    }\n    parentId = parentWidget?.parentId;\n    parentWidget = pageWidgets[parentId];\n  }\n  return parentModalId;\n};\n\nexport const getCanvasWidgetsWithParentId = createSelector(\n  getCanvasWidgets,\n  (canvasWidgets: CanvasWidgetsReduxState) => {\n    return Object.entries(canvasWidgets).reduce(\n      (res, [widgetId, widget]: any) => {\n        const parentModalId = getParentModalId(widget, canvasWidgets);\n\n        return {\n          ...res,\n          [widgetId]: { ...widget, parentModalId },\n        };\n      },\n      {},\n    );\n  },\n);\n\nexport const getAllWidgetsMap = createSelector(\n  getPageWidgets,\n  (widgetsByPage) => {\n    return Object.entries(widgetsByPage).reduce(\n      (res: any, [pageId, pageWidgets]: any) => {\n        const widgetsMap = Object.entries(pageWidgets).reduce(\n          (res, [widgetId, widget]: any) => {\n            const parentModalId = getParentModalId(widget, pageWidgets);\n\n            return {\n              ...res,\n              [widgetId]: { ...widget, pageId, parentModalId },\n            };\n          },\n          {},\n        );\n\n        return {\n          ...res,\n          ...widgetsMap,\n        };\n      },\n      {},\n    );\n  },\n);\n\nexport const getAllPageWidgets = createSelector(\n  getAllWidgetsMap,\n  (widgetsMap) => {\n    return Object.entries(widgetsMap).reduce((res: any[], [, widget]: any) => {\n      res.push(widget);\n      return res;\n    }, []);\n  },\n);\n\nexport const getPageList = createSelector(\n  (state: AppState) => state.entities.pageList.pages,\n  (pages) => pages,\n);\n\nexport const getPageListAsOptions = createSelector(\n  (state: AppState) => state.entities.pageList.pages,\n  (pages) =>\n    pages.map((page) => ({\n      label: page.pageName,\n      id: page.pageId,\n      value: `'${page.pageName}'`,\n    })),\n);\n\nexport const getExistingPageNames = createSelector(\n  (state: AppState) => state.entities.pageList.pages,\n  (pages) => pages.map((page) => page.pageName),\n);\n\nexport const getExistingWidgetNames = createSelector(\n  (state: AppState) => state.entities.canvasWidgets,\n  (widgets) => Object.values(widgets).map((widget) => widget.widgetName),\n);\n\nexport const getExistingActionNames = createSelector(\n  (state: AppState) => state.entities.actions,\n  getCurrentPageId,\n  // editingEntityName is actually an id and not a name per say and it points to the id of an action being edited through the explorer.\n  (state: AppState) => state.ui.explorer.entity.editingEntityName,\n  (actions, currentPageId, editingEntityId) => {\n    // get the current action being edited\n    const editingAction =\n      editingEntityId &&\n      actions.filter(\n        (action: { config: { id: string } }) =>\n          action.config.id === editingEntityId,\n      );\n\n    // if the current action being edited is on the same page, filter the actions on the page and return their names.\n    // or if the there is no current action being edited (this happens when a widget, or any other entity is being edited), return the actions on the page.\n    if (\n      (editingAction &&\n        editingAction.length > 0 &&\n        editingAction[0].config.pageId === currentPageId) ||\n      (editingAction && editingAction.length < 1)\n    ) {\n      return actions.map(\n        (actionItem: { config: { name: string; pageId: string } }) => {\n          if (actionItem.config.pageId === currentPageId) {\n            return actionItem.config.name;\n          }\n          return undefined;\n        },\n      );\n    } else {\n      // if current action being edited is on another page, filter the actions not on the page and return their names.\n      return actions.map(\n        (actionItem: { config: { name: string; pageId: string } }) => {\n          if (actionItem.config.pageId !== currentPageId) {\n            return actionItem.config.name;\n          }\n          return undefined;\n        },\n      );\n    }\n  },\n);\n\nexport const getExistingJSCollectionNames = createSelector(\n  getJSCollections,\n  (jsActions) =>\n    jsActions.map((action: { config: { name: string } }) => action.config.name),\n);\n\nexport const getAppMode = (state: AppState) => state.entities.app.mode;\n\nexport const widgetsMapWithParentModalId = (state: AppState) => {\n  const appMode = getAppMode(state);\n  return appMode === APP_MODE.EDIT\n    ? getAllWidgetsMap(state)\n    : getCanvasWidgetsWithParentId(state);\n};\n\nexport const getIsReconnectingDatasourcesModalOpen = (state: AppState) =>\n  state.entities.datasources.isReconnectingModalOpen;\n\nexport const getPageActions = (pageId = \"\") => {\n  return (state: AppState) => {\n    return state.entities.actions.filter((action) => {\n      return action.config.pageId == pageId;\n    });\n  };\n};\n\nexport const selectDatasourceIdToNameMap = createSelector(\n  getDatasources,\n  (datasources) => {\n    return datasources.reduce((acc, datasource) => {\n      acc[datasource.id] = datasource.name;\n      return acc;\n    }, {} as Record<string, string>);\n  },\n);\n\nexport const selectWidgetsForCurrentPage = createSelector(\n  (state: AppState) => state.ui.pageCanvasStructure,\n  getCurrentPageId,\n  (canvasStructure, pageId) => (pageId ? canvasStructure[pageId] : null),\n);\n\nexport const selectAllPages = (state: AppState) => {\n  return state.entities.pageList.pages;\n};\n\nexport const getIsListing = (state: AppState) => {\n  return state.entities.datasources.isListing;\n};\n\nexport const getDatasourceLoading = (state: AppState) => {\n  return state.entities.datasources.loading;\n};\n\nexport const selectFilesForExplorer = createSelector(\n  getActionsForCurrentPage,\n  getJSCollectionsForCurrentPage,\n  selectDatasourceIdToNameMap,\n  selectFeatureFlags,\n  (actions, jsActions, datasourceIdToNameMap, featureFlags) => {\n    const { JS_EDITOR: isJSEditorEnabled } = featureFlags;\n    const files = [...actions, ...(isJSEditorEnabled ? jsActions : [])].reduce(\n      (acc, file) => {\n        let group = \"\";\n        if (file.config.pluginType === PluginType.JS) {\n          group = \"JS Objects\";\n        } else if (file.config.pluginType === PluginType.API) {\n          group = isEmbeddedRestDatasource(file.config.datasource)\n            ? \"APIs\"\n            : datasourceIdToNameMap[file.config.datasource.id] ?? \"APIs\";\n        } else {\n          group = datasourceIdToNameMap[file.config.datasource.id];\n        }\n        acc = acc.concat({\n          type: file.config.pluginType,\n          entity: file,\n          group,\n        });\n        return acc;\n      },\n      [] as Array<ExplorerFileEntity>,\n    );\n\n    const filesSortedByGroupName = sortBy(files, [\n      (file) => file.group?.toLowerCase(),\n      (file) => file.entity.config?.name?.toLowerCase(),\n    ]);\n    const groupedFiles = filesSortedByGroupName.reduce(\n      (acc, file) => {\n        if (acc.group !== file.group) {\n          acc.files = acc.files.concat({\n            type: \"group\",\n            entity: {\n              name: file.group,\n            },\n          });\n          acc.group = file.group;\n        }\n        acc.files = acc.files.concat({\n          ...file,\n          entity: { id: file.entity.config.id, name: file.entity.config.name },\n        });\n        return acc;\n      },\n      {\n        group: \"\" as any,\n        files: [] as any,\n      },\n    );\n    return groupedFiles.files;\n  },\n);\n\nexport const getActionValidationConfig = (state: AppState, action: any) => {\n  const pluginId = action.pluginId;\n  return getActionValidationConfigFromPlugin(\n    state.entities.plugins.editorConfigs[pluginId],\n    {},\n  );\n};\n\nexport const getAllActionValidationConfig = (state: AppState) => {\n  const allActions = state.entities.actions;\n  const allValidationConfigs: {\n    [actionId: string]: ActionValidationConfigMap;\n  } = {};\n  for (const action of allActions) {\n    const pluginId = action.config.pluginId;\n    let validationConfigs: ActionValidationConfigMap = {};\n    validationConfigs = getActionValidationConfigFromPlugin(\n      state.entities.plugins.editorConfigs[pluginId],\n      {},\n    );\n    allValidationConfigs[action.config.id] = validationConfigs;\n  }\n  return allValidationConfigs;\n};\n\nfunction getActionValidationConfigFromPlugin(\n  editorConfigs: any,\n  validationConfig: ActionValidationConfigMap,\n): ActionValidationConfigMap {\n  let newValidationConfig: ActionValidationConfigMap = {\n    ...validationConfig,\n  };\n  if (!editorConfigs || !editorConfigs.length) return {};\n  for (const editorConfig of editorConfigs) {\n    if (editorConfig.validationConfig) {\n      const configProperty = editorConfig.configProperty;\n      newValidationConfig[configProperty] = editorConfig.validationConfig;\n    }\n\n    if (editorConfig.children) {\n      const childrenValidationConfig = getActionValidationConfigFromPlugin(\n        editorConfig.children,\n        validationConfig,\n      );\n      newValidationConfig = Object.assign(\n        newValidationConfig,\n        childrenValidationConfig,\n      );\n    }\n  }\n  return newValidationConfig;\n}\nexport const getJSActions = (\n  state: AppState,\n  JSCollectionId: string,\n): JSAction[] => {\n  const jsCollection = state.entities.jsActions.find(\n    (jsCollectionData) => jsCollectionData.config.id === JSCollectionId,\n  );\n\n  return jsCollection?.config.actions\n    ? sortBy(jsCollection?.config.actions, [\"name\"])\n    : [];\n};\n\nexport const getActiveJSActionId = (\n  state: AppState,\n  jsCollectionId: string,\n): string | null => {\n  const jsCollection = state.entities.jsActions.find(\n    (jsCollectionData) => jsCollectionData.config.id === jsCollectionId,\n  );\n  return jsCollection?.activeJSActionId ?? null;\n};\n\nexport const getIsExecutingJSAction = (\n  state: AppState,\n  jsCollectionId: string,\n  actionId: string,\n): boolean => {\n  const jsCollection = state.entities.jsActions.find(\n    (jsCollectionData) => jsCollectionData.config.id === jsCollectionId,\n  );\n  if (jsCollection?.isExecuting && jsCollection.isExecuting[actionId]) {\n    return jsCollection.isExecuting[actionId];\n  }\n  return false;\n};\n\nexport const getJSCollectionParseErrors = (\n  state: AppState,\n  jsCollectionName: string,\n) => {\n  const dataTree = state.evaluations.tree;\n  const allErrors = get(\n    dataTree,\n    `${jsCollectionName}.${EVAL_ERROR_PATH}.body`,\n    [],\n  ) as EvaluationError[];\n  return allErrors.filter((error) => {\n    return error.errorType === PropertyEvaluationErrorType.PARSE;\n  });\n};\n\nexport const getNumberOfEntitiesInCurrentPage = createSelector(\n  getCanvasWidgets,\n  getActionsForCurrentPage,\n  getJSCollectionsForCurrentPage,\n  (widgets, actions, jsCollections) => {\n    return (\n      Object.keys(widgets).length - 1 + actions.length + jsCollections.length\n    );\n  },\n);\n\nexport const selectIsInstallerOpen = (state: AppState) =>\n  state.ui.libraries.isInstallerOpen;\nexport const selectInstallationStatus = (state: AppState) =>\n  state.ui.libraries.installationStatus;\nexport const selectInstalledLibraries = (state: AppState) =>\n  state.ui.libraries.installedLibraries;\nexport const selectStatusForURL = (url: string) =>\n  createSelector(selectInstallationStatus, (statusMap) => {\n    return statusMap[url];\n  });\nexport const selectIsLibraryInstalled = createSelector(\n  [selectInstalledLibraries, (_: AppState, url: string) => url],\n  (installedLibraries, url) => {\n    return !!installedLibraries.find((lib) => lib.url === url);\n  },\n);\n\nexport const selectQueuedLibraries = createSelector(\n  selectInstallationStatus,\n  (statusMap) => {\n    return Object.keys(statusMap).filter(\n      (url) => statusMap[url] === InstallState.Queued,\n    );\n  },\n);\n\nexport const selectLibrariesForExplorer = createSelector(\n  selectInstalledLibraries,\n  selectInstallationStatus,\n  (libs, libStatus) => {\n    const queuedInstalls = Object.keys(libStatus)\n      .filter((key) => libStatus[key] === InstallState.Queued)\n      .map((url) => {\n        const recommendedLibrary = recommendedLibraries.find(\n          (lib) => lib.url === url,\n        );\n        return {\n          name: recommendedLibrary?.name || url,\n          docsURL: recommendedLibrary?.url || url,\n          version: recommendedLibrary?.version || \"\",\n          url: recommendedLibrary?.url || url,\n          accessor: [],\n        } as TJSLibrary;\n      });\n    return [...queuedInstalls, ...libs];\n  },\n);\n\nexport const getAllJSActionsData = (state: AppState) => {\n  const jsActionsData: Record<string, unknown> = {};\n  const jsCollections = state.entities.jsActions;\n  jsCollections.forEach((collection) => {\n    if (collection.data) {\n      Object.keys(collection.data).forEach((actionId) => {\n        const jsAction = getJSActions(state, collection.config.id).find(\n          (action) => action.id === actionId,\n        );\n        if (jsAction) {\n          jsActionsData[`${collection.config.name}.${jsAction.name}`] =\n            collection.data?.[actionId];\n        }\n      });\n    }\n  });\n  return jsActionsData;\n};\n","import { AppState } from \"@appsmith/reducers\";\nimport { User } from \"constants/userConstants\";\nimport { PropertyPanePositionConfig } from \"reducers/uiReducers/usersReducer\";\n\nexport const getCurrentUser = (state: AppState): User | undefined =>\n  state.ui?.users?.currentUser;\nexport const getCurrentUserLoading = (state: AppState): boolean =>\n  state.ui.users.loadingStates.fetchingUser;\nexport const getUserAuthError = (state: AppState): string =>\n  state.ui.users.error;\nexport const getUsers = (state: AppState): User[] => state.ui.users.users;\nexport const getProppanePreference = (\n  state: AppState,\n): PropertyPanePositionConfig | undefined => state.ui.users.propPanePreferences;\nexport const getFeatureFlagsFetched = (state: AppState) =>\n  state.ui.users.featureFlag.isFetched;\n\nexport const selectFeatureFlags = (state: AppState) =>\n  state.ui.users.featureFlag.data;\n","import { ReduxAction } from \"@appsmith/constants/ReduxActionConstants\";\nimport produce from \"immer\";\n\nexport const createReducer = (\n  initialState: any,\n  handlers: { [type: string]: (state: any, action: any) => any },\n) => {\n  return function reducer(state = initialState, action: ReduxAction<any>) {\n    if (handlers.hasOwnProperty(action.type)) {\n      return handlers[action.type](state, action);\n    } else {\n      return state;\n    }\n  };\n};\n\nexport const createImmerReducer = (\n  initialState: any,\n  handlers: { [type: string]: any },\n) => {\n  return function reducer(state = initialState, action: ReduxAction<any>) {\n    if (handlers.hasOwnProperty(action.type)) {\n      return produce(handlers[action.type])(state, action);\n    } else {\n      return state;\n    }\n  };\n};\n","import { PropertyPaneConfig } from \"constants/PropertyControlConstants\";\nimport React from \"react\";\nimport { WidgetBuilder, WidgetProps, WidgetState } from \"widgets/BaseWidget\";\n\nimport { RenderMode } from \"constants/WidgetConstants\";\nimport { Stylesheet } from \"entities/AppTheming\";\nimport * as log from \"loglevel\";\nimport { WidgetConfigProps } from \"reducers/entityReducers/widgetConfigReducer\";\nimport { CanvasWidgetStructure } from \"widgets/constants\";\nimport {\n  addPropertyConfigIds,\n  addSearchConfigToPanelConfig,\n  convertFunctionsToString,\n  enhancePropertyPaneConfig,\n  generatePropertyPaneSearchConfig,\n  PropertyPaneConfigTypes,\n} from \"./WidgetFactoryHelpers\";\nimport { WidgetFeatures } from \"./WidgetFeatures\";\n\ntype WidgetDerivedPropertyType = any;\nexport type DerivedPropertiesMap = Record<string, string>;\nexport type WidgetType = typeof WidgetFactory.widgetTypes[number];\n\nexport enum NonSerialisableWidgetConfigs {\n  CANVAS_HEIGHT_OFFSET = \"canvasHeightOffset\",\n}\nclass WidgetFactory {\n  static widgetTypes: Record<string, string> = {};\n  static widgetMap: Map<\n    WidgetType,\n    WidgetBuilder<CanvasWidgetStructure, WidgetState>\n  > = new Map();\n  static widgetDerivedPropertiesGetterMap: Map<\n    WidgetType,\n    WidgetDerivedPropertyType\n  > = new Map();\n  static derivedPropertiesMap: Map<\n    WidgetType,\n    DerivedPropertiesMap\n  > = new Map();\n  static defaultPropertiesMap: Map<\n    WidgetType,\n    Record<string, string>\n  > = new Map();\n  static metaPropertiesMap: Map<WidgetType, Record<string, any>> = new Map();\n  static propertyPaneConfigsMap: Map<\n    WidgetType,\n    readonly PropertyPaneConfig[]\n  > = new Map();\n  static propertyPaneContentConfigsMap: Map<\n    WidgetType,\n    readonly PropertyPaneConfig[]\n  > = new Map();\n  static propertyPaneStyleConfigsMap: Map<\n    WidgetType,\n    readonly PropertyPaneConfig[]\n  > = new Map();\n  // used to store the properties that appear in the search results\n  static propertyPaneSearchConfigsMap: Map<\n    WidgetType,\n    readonly PropertyPaneConfig[]\n  > = new Map();\n  static loadingProperties: Map<WidgetType, Array<RegExp>> = new Map();\n  static stylesheetConfigMap: Map<WidgetType, Stylesheet> = new Map();\n\n  static widgetConfigMap: Map<\n    WidgetType,\n    Partial<WidgetProps> & WidgetConfigProps & { type: string }\n  > = new Map();\n\n  static nonSerialisableWidgetConfigMap: Map<\n    WidgetType,\n    Record<NonSerialisableWidgetConfigs, unknown>\n  > = new Map();\n\n  static registerWidgetBuilder(\n    widgetType: string,\n    widgetBuilder: WidgetBuilder<WidgetProps, WidgetState>,\n    derivedPropertiesMap: DerivedPropertiesMap,\n    defaultPropertiesMap: Record<string, string>,\n    metaPropertiesMap: Record<string, any>,\n    propertyPaneConfig?: PropertyPaneConfig[],\n    propertyPaneContentConfig?: PropertyPaneConfig[],\n    propertyPaneStyleConfig?: PropertyPaneConfig[],\n    features?: WidgetFeatures,\n    loadingProperties?: Array<RegExp>,\n    stylesheetConfig?: Stylesheet,\n  ) {\n    if (!this.widgetTypes[widgetType]) {\n      this.widgetTypes[widgetType] = widgetType;\n      this.widgetMap.set(widgetType, widgetBuilder);\n      this.derivedPropertiesMap.set(widgetType, derivedPropertiesMap);\n      this.defaultPropertiesMap.set(\n        widgetType,\n        defaultPropertiesMap as Record<string, string>,\n      );\n      this.metaPropertiesMap.set(widgetType, metaPropertiesMap);\n      loadingProperties &&\n        this.loadingProperties.set(widgetType, loadingProperties);\n      stylesheetConfig &&\n        this.stylesheetConfigMap.set(widgetType, stylesheetConfig);\n\n      if (Array.isArray(propertyPaneConfig) && propertyPaneConfig.length > 0) {\n        const enhancedPropertyPaneConfig = enhancePropertyPaneConfig(\n          propertyPaneConfig,\n          features,\n        );\n\n        const serializablePropertyPaneConfig = convertFunctionsToString(\n          enhancedPropertyPaneConfig,\n        );\n\n        const finalPropertyPaneConfig = addPropertyConfigIds(\n          serializablePropertyPaneConfig,\n        );\n\n        this.propertyPaneConfigsMap.set(\n          widgetType,\n          Object.freeze(finalPropertyPaneConfig),\n        );\n      }\n\n      if (propertyPaneContentConfig) {\n        const enhancedPropertyPaneConfig = enhancePropertyPaneConfig(\n          propertyPaneContentConfig,\n          features,\n          PropertyPaneConfigTypes.CONTENT,\n          widgetType,\n        );\n\n        const serializablePropertyPaneConfig = convertFunctionsToString(\n          enhancedPropertyPaneConfig,\n        );\n\n        const propertyPaneConfigWithIds = addPropertyConfigIds(\n          serializablePropertyPaneConfig,\n        );\n\n        const finalPropertyPaneConfig = addSearchConfigToPanelConfig(\n          propertyPaneConfigWithIds,\n        );\n\n        this.propertyPaneContentConfigsMap.set(\n          widgetType,\n          Object.freeze(finalPropertyPaneConfig),\n        );\n      }\n\n      if (propertyPaneStyleConfig) {\n        const enhancedPropertyPaneConfig = enhancePropertyPaneConfig(\n          propertyPaneStyleConfig,\n          features,\n          PropertyPaneConfigTypes.STYLE,\n        );\n\n        const serializablePropertyPaneConfig = convertFunctionsToString(\n          enhancedPropertyPaneConfig,\n        );\n\n        const propertyPaneConfigWithIds = addPropertyConfigIds(\n          serializablePropertyPaneConfig,\n        );\n\n        const finalPropertyPaneConfig = addSearchConfigToPanelConfig(\n          propertyPaneConfigWithIds,\n        );\n\n        this.propertyPaneStyleConfigsMap.set(\n          widgetType,\n          Object.freeze(finalPropertyPaneConfig),\n        );\n      }\n\n      this.propertyPaneSearchConfigsMap.set(\n        widgetType,\n        generatePropertyPaneSearchConfig(\n          WidgetFactory.getWidgetPropertyPaneContentConfig(widgetType),\n          WidgetFactory.getWidgetPropertyPaneStyleConfig(widgetType),\n        ),\n      );\n    }\n  }\n\n  static storeWidgetConfig(\n    widgetType: string,\n    config: Partial<WidgetProps> & WidgetConfigProps & { type: string },\n  ) {\n    this.widgetConfigMap.set(widgetType, Object.freeze(config));\n  }\n\n  static storeNonSerialisablewidgetConfig(\n    widgetType: string,\n    config: Record<NonSerialisableWidgetConfigs, unknown>,\n  ) {\n    this.nonSerialisableWidgetConfigMap.set(widgetType, config);\n  }\n\n  static createWidget(\n    widgetData: CanvasWidgetStructure,\n    renderMode: RenderMode,\n  ): React.ReactNode {\n    const widgetProps = {\n      key: widgetData.widgetId,\n      isVisible: true,\n      ...widgetData,\n      renderMode,\n    };\n    const widgetBuilder = this.widgetMap.get(widgetData.type);\n    if (widgetBuilder) {\n      const widget = widgetBuilder.buildWidget(widgetProps);\n      return widget;\n    } else {\n      const ex: WidgetCreationException = {\n        message:\n          \"Widget Builder not registered for widget type\" + widgetData.type,\n      };\n      log.error(ex);\n      return null;\n    }\n  }\n\n  static getWidgetTypes(): WidgetType[] {\n    return Array.from(this.widgetMap.keys());\n  }\n\n  static getWidgetDerivedPropertiesMap(\n    widgetType: WidgetType,\n  ): DerivedPropertiesMap {\n    const map = this.derivedPropertiesMap.get(widgetType);\n    if (!map) {\n      log.error(\"Widget type validation is not defined\");\n      return {};\n    }\n    return map;\n  }\n\n  static getWidgetDefaultPropertiesMap(\n    widgetType: WidgetType,\n  ): Record<string, string> {\n    const map = this.defaultPropertiesMap.get(widgetType);\n    if (!map) {\n      log.error(\"Widget default properties not defined\", widgetType);\n      return {};\n    }\n    return map;\n  }\n\n  static getWidgetMetaPropertiesMap(\n    widgetType: WidgetType,\n  ): Record<string, unknown> {\n    const map = this.metaPropertiesMap.get(widgetType);\n    if (!map) {\n      log.error(\"Widget meta properties not defined: \", widgetType);\n      return {};\n    }\n    return map;\n  }\n\n  static getWidgetPropertyPaneCombinedConfig(\n    type: WidgetType,\n  ): readonly PropertyPaneConfig[] {\n    const contentConfig = this.propertyPaneContentConfigsMap.get(type) || [];\n    const styleConfig = this.propertyPaneStyleConfigsMap.get(type) || [];\n    return [...contentConfig, ...styleConfig];\n  }\n\n  static getWidgetPropertyPaneConfig(\n    type: WidgetType,\n  ): readonly PropertyPaneConfig[] {\n    const map = this.propertyPaneConfigsMap.get(type);\n    if (!map || (map && map.length === 0)) {\n      const config = WidgetFactory.getWidgetPropertyPaneCombinedConfig(type);\n      if (config === undefined) {\n        log.error(\"Widget property pane config not defined\", type);\n      }\n      return config;\n    }\n    return map;\n  }\n\n  static getWidgetPropertyPaneContentConfig(\n    type: WidgetType,\n  ): readonly PropertyPaneConfig[] {\n    const map = this.propertyPaneContentConfigsMap.get(type);\n    if (!map) {\n      return [];\n    }\n    return map;\n  }\n\n  static getWidgetPropertyPaneStyleConfig(\n    type: WidgetType,\n  ): readonly PropertyPaneConfig[] {\n    const map = this.propertyPaneStyleConfigsMap.get(type);\n    if (!map) {\n      return [];\n    }\n    return map;\n  }\n\n  static getWidgetPropertyPaneSearchConfig(\n    type: WidgetType,\n  ): readonly PropertyPaneConfig[] {\n    const map = this.propertyPaneSearchConfigsMap.get(type);\n    if (!map) {\n      return [];\n    }\n    return map;\n  }\n\n  static getWidgetTypeConfigMap(): WidgetTypeConfigMap {\n    const typeConfigMap: WidgetTypeConfigMap = {};\n    WidgetFactory.getWidgetTypes().forEach((type) => {\n      typeConfigMap[type] = {\n        defaultProperties: WidgetFactory.getWidgetDefaultPropertiesMap(type),\n        derivedProperties: WidgetFactory.getWidgetDerivedPropertiesMap(type),\n        metaProperties: WidgetFactory.getWidgetMetaPropertiesMap(type),\n      };\n    });\n    return typeConfigMap;\n  }\n\n  static getLoadingProperties(type: WidgetType): Array<RegExp> | undefined {\n    return this.loadingProperties.get(type);\n  }\n\n  static getWidgetStylesheetConfigMap(widgetType: WidgetType) {\n    const map = this.stylesheetConfigMap.get(widgetType);\n    if (!map) {\n      log.error(\"Widget stylesheet properties not defined: \", widgetType);\n      return undefined;\n    }\n    return map;\n  }\n}\n\nexport type WidgetTypeConfigMap = Record<\n  string,\n  {\n    defaultProperties: Record<string, string>;\n    metaProperties: Record<string, any>;\n    derivedProperties: WidgetDerivedPropertyType;\n  }\n>;\n\nexport interface WidgetCreationException {\n  message: string;\n}\n\nexport default WidgetFactory;\n","import {\n  PropertyPaneConfig,\n  PropertyPaneControlConfig,\n  PropertyPaneSectionConfig,\n} from \"constants/PropertyControlConstants\";\nimport { ValidationTypes } from \"constants/WidgetValidation\";\nimport { memoize } from \"lodash\";\nimport log from \"loglevel\";\nimport { generateReactKey } from \"./generators\";\nimport WidgetFactory, { WidgetType } from \"./WidgetFactory\";\nimport {\n  PropertyPaneConfigTemplates,\n  RegisteredWidgetFeatures,\n  WidgetFeaturePropertyPaneEnhancements,\n  WidgetFeatures,\n} from \"./WidgetFeatures\";\n\nexport enum PropertyPaneConfigTypes {\n  STYLE = \"STYLE\",\n  CONTENT = \"CONTENT\",\n}\n\nexport function addSearchConfigToPanelConfig(\n  config: readonly PropertyPaneConfig[],\n) {\n  return config.map((configItem) => {\n    if ((configItem as PropertyPaneSectionConfig).sectionName) {\n      const sectionConfig = {\n        ...configItem,\n      };\n      if (configItem.children) {\n        sectionConfig.children = addSearchConfigToPanelConfig(\n          configItem.children,\n        );\n      }\n      return sectionConfig;\n    } else if ((configItem as PropertyPaneControlConfig).controlType) {\n      const controlConfig = configItem as PropertyPaneControlConfig;\n      if (controlConfig.panelConfig) {\n        return {\n          ...controlConfig,\n          panelConfig: {\n            ...controlConfig.panelConfig,\n            searchConfig: generatePropertyPaneSearchConfig(\n              controlConfig.panelConfig?.contentChildren ?? [],\n              controlConfig.panelConfig?.styleChildren ?? [],\n            ),\n          },\n        };\n      }\n      return controlConfig;\n    }\n    return configItem;\n  });\n}\n\nfunction addSearchSpecificPropertiesToConfig(\n  config: readonly PropertyPaneConfig[],\n  tag: string,\n): PropertyPaneConfig[] {\n  return config.map((configItem) => {\n    if ((configItem as PropertyPaneSectionConfig).sectionName) {\n      const sectionConfig = {\n        ...configItem,\n        collapsible: false,\n        tag,\n      };\n      if (configItem.children) {\n        sectionConfig.children = addSearchSpecificPropertiesToConfig(\n          configItem.children,\n          tag,\n        );\n      }\n      return sectionConfig;\n    } else if ((configItem as PropertyPaneControlConfig).controlType) {\n      const controlConfig = configItem as PropertyPaneControlConfig;\n      if (controlConfig.panelConfig) {\n        return {\n          ...controlConfig,\n          panelConfig: {\n            ...controlConfig.panelConfig,\n            searchConfig: generatePropertyPaneSearchConfig(\n              controlConfig.panelConfig?.contentChildren ?? [],\n              controlConfig.panelConfig?.styleChildren ?? [],\n            ),\n          },\n        };\n      }\n      return controlConfig;\n    }\n    return configItem;\n  });\n}\n\nexport function generatePropertyPaneSearchConfig(\n  contentConfig: readonly PropertyPaneConfig[],\n  styleConfig: readonly PropertyPaneConfig[],\n) {\n  return [\n    ...addSearchSpecificPropertiesToConfig(contentConfig, \"CONTENT\"),\n    ...addSearchSpecificPropertiesToConfig(styleConfig, \"STYLE\"),\n  ];\n}\n\n/* This function recursively parses the property pane configuration and\n   adds random hash values as `id`.\n\n   These are generated once when the Appsmith editor is loaded,\n   the resulting config is frozen and re-used during the lifecycle\n   of the current browser session. See WidgetFactory\n*/\nexport const addPropertyConfigIds = (config: PropertyPaneConfig[]) => {\n  return config.map((sectionOrControlConfig: PropertyPaneConfig) => {\n    sectionOrControlConfig.id = generateReactKey();\n    if (sectionOrControlConfig.children) {\n      sectionOrControlConfig.children = addPropertyConfigIds(\n        sectionOrControlConfig.children,\n      );\n    }\n    const config = sectionOrControlConfig as PropertyPaneControlConfig;\n    if (config.panelConfig) {\n      if (\n        config.panelConfig.children &&\n        Array.isArray(config.panelConfig.children)\n      ) {\n        config.panelConfig.children = addPropertyConfigIds(\n          config.panelConfig.children,\n        );\n      }\n\n      if (\n        config.panelConfig.contentChildren &&\n        Array.isArray(config.panelConfig.contentChildren)\n      ) {\n        config.panelConfig.contentChildren = addPropertyConfigIds(\n          config.panelConfig.contentChildren,\n        );\n      }\n\n      if (\n        config.panelConfig.styleChildren &&\n        Array.isArray(config.panelConfig.styleChildren)\n      ) {\n        config.panelConfig.styleChildren = addPropertyConfigIds(\n          config.panelConfig.styleChildren,\n        );\n      }\n\n      (sectionOrControlConfig as PropertyPaneControlConfig) = config;\n    }\n    return sectionOrControlConfig;\n  });\n};\n\n/* General function which enhances the property pane configuration\n\n   We can use this to insert or add property configs based on widget\n   features passed as the second argument.\n*/\nexport function enhancePropertyPaneConfig(\n  config: PropertyPaneConfig[],\n  features?: WidgetFeatures,\n  configType?: PropertyPaneConfigTypes,\n  widgetType?: WidgetType,\n) {\n  // Enhance property pane with widget features\n  // TODO(abhinav): The following \"configType\" check should come\n  // from the features themselves.\n\n  if (\n    features &&\n    (configType === undefined || configType === PropertyPaneConfigTypes.CONTENT)\n  ) {\n    Object.keys(features).forEach((registeredFeature: string) => {\n      const { sectionIndex } = features[\n        registeredFeature as RegisteredWidgetFeatures\n      ];\n      const sectionName = (config[sectionIndex] as PropertyPaneSectionConfig)\n        ?.sectionName;\n      if (!sectionName || sectionName !== \"General\") {\n        log.error(`Invalid section index for feature: ${registeredFeature}`);\n      }\n      if (\n        Array.isArray(config[sectionIndex].children) &&\n        PropertyPaneConfigTemplates[\n          registeredFeature as RegisteredWidgetFeatures\n        ]\n      ) {\n        config[sectionIndex].children?.push(\n          ...PropertyPaneConfigTemplates[\n            registeredFeature as RegisteredWidgetFeatures\n          ],\n        );\n        config = WidgetFeaturePropertyPaneEnhancements[\n          registeredFeature as RegisteredWidgetFeatures\n        ](config, widgetType);\n      }\n    });\n  }\n\n  return config;\n}\n\n/*\n  ValidationTypes.FUNCTION, allow us to configure functions within them,\n  However, these are not serializable, which results in them not being able to\n  be sent to the workers.\n  We convert these functions to strings and delete the original function properties\n  in this function\n\n  property added `fnString`\n  property deleted `fn`\n*/\n\nexport function convertFunctionsToString(config: PropertyPaneConfig[]) {\n  return config.map((sectionOrControlConfig: PropertyPaneConfig) => {\n    const controlConfig = sectionOrControlConfig as PropertyPaneControlConfig;\n    if (\n      controlConfig.validation &&\n      controlConfig.validation?.type === ValidationTypes.FUNCTION &&\n      controlConfig.validation?.params &&\n      controlConfig.validation?.params.fn\n    ) {\n      controlConfig.validation.params.fnString = controlConfig.validation.params.fn.toString();\n      delete controlConfig.validation.params.fn;\n      return sectionOrControlConfig;\n    }\n\n    if (sectionOrControlConfig.children) {\n      sectionOrControlConfig.children = convertFunctionsToString(\n        sectionOrControlConfig.children,\n      );\n    }\n\n    const config = sectionOrControlConfig as PropertyPaneControlConfig;\n\n    if (\n      config.panelConfig &&\n      config.panelConfig.children &&\n      Array.isArray(config.panelConfig.children)\n    ) {\n      config.panelConfig.children = convertFunctionsToString(\n        config.panelConfig.children,\n      );\n\n      (sectionOrControlConfig as PropertyPaneControlConfig) = config;\n    }\n\n    if (\n      config.panelConfig &&\n      config.panelConfig.contentChildren &&\n      Array.isArray(config.panelConfig.contentChildren)\n    ) {\n      config.panelConfig.contentChildren = convertFunctionsToString(\n        config.panelConfig.contentChildren,\n      );\n\n      (sectionOrControlConfig as PropertyPaneControlConfig) = config;\n    }\n\n    if (\n      config.panelConfig &&\n      config.panelConfig.styleChildren &&\n      Array.isArray(config.panelConfig.styleChildren)\n    ) {\n      config.panelConfig.styleChildren = convertFunctionsToString(\n        config.panelConfig.styleChildren,\n      );\n\n      (sectionOrControlConfig as PropertyPaneControlConfig) = config;\n    }\n\n    return sectionOrControlConfig;\n  });\n}\n\nexport const checkIsDropTarget = memoize(function isDropTarget(\n  type: WidgetType,\n) {\n  return !!WidgetFactory.widgetConfigMap.get(type)?.isCanvas;\n});\n","import { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport {\n  PropertyPaneConfig,\n  PropertyPaneControlConfig,\n} from \"constants/PropertyControlConstants\";\nimport {\n  GridDefaults,\n  WidgetHeightLimits,\n  WidgetType,\n} from \"constants/WidgetConstants\";\nimport { WidgetProps } from \"widgets/BaseWidget\";\nimport { WidgetConfiguration } from \"widgets/constants\";\n\nexport enum RegisteredWidgetFeatures {\n  DYNAMIC_HEIGHT = \"dynamicHeight\",\n}\n\ninterface WidgetFeatureConfig {\n  active: boolean;\n  defaultValue?: DynamicHeight;\n  sectionIndex: number;\n}\n\nexport type WidgetFeatures = Record<\n  RegisteredWidgetFeatures,\n  WidgetFeatureConfig\n>;\n\nexport enum DynamicHeight {\n  AUTO_HEIGHT = \"AUTO_HEIGHT\",\n  FIXED = \"FIXED\",\n  AUTO_HEIGHT_WITH_LIMITS = \"AUTO_HEIGHT_WITH_LIMITS\",\n}\n\n/* This contains all properties which will be added\n   to a widget, automatically, by the Appsmith platform\n   Each feature, is a unique key, whose value is an object\n   with the list of properties to be added to a widget along\n   with their default values\n\n   Note: These are added to the widget configs during registration\n*/\nexport const WidgetFeatureProps: Record<\n  RegisteredWidgetFeatures,\n  Record<string, unknown>\n> = {\n  [RegisteredWidgetFeatures.DYNAMIC_HEIGHT]: {\n    minDynamicHeight: WidgetHeightLimits.MIN_HEIGHT_IN_ROWS,\n    maxDynamicHeight: WidgetHeightLimits.MAX_HEIGHT_IN_ROWS,\n    dynamicHeight: DynamicHeight.FIXED,\n  },\n};\n\nexport const WidgetFeaturePropertyEnhancements: Record<\n  RegisteredWidgetFeatures,\n  (config: WidgetConfiguration) => Record<string, unknown>\n> = {\n  [RegisteredWidgetFeatures.DYNAMIC_HEIGHT]: (config: WidgetConfiguration) => {\n    const newProperties: Partial<WidgetProps> = {};\n    newProperties.dynamicHeight =\n      config.features?.dynamicHeight?.defaultValue || DynamicHeight.AUTO_HEIGHT;\n    if (config.isCanvas) {\n      newProperties.dynamicHeight = DynamicHeight.AUTO_HEIGHT;\n      newProperties.minDynamicHeight =\n        config.defaults.minDynamicHeight ||\n        WidgetHeightLimits.MIN_CANVAS_HEIGHT_IN_ROWS;\n      newProperties.maxDynamicHeight =\n        config.defaults.maxDynamicHeight ||\n        WidgetHeightLimits.MAX_HEIGHT_IN_ROWS;\n      newProperties.shouldScrollContents = true;\n    } else {\n      newProperties.minDynamicHeight =\n        config.defaults.minDynamicHeight ||\n        WidgetHeightLimits.MIN_HEIGHT_IN_ROWS;\n      newProperties.maxDynamicHeight =\n        config.defaults.maxDynamicHeight ||\n        WidgetHeightLimits.MAX_HEIGHT_IN_ROWS;\n    }\n    if (config.defaults.overflow) newProperties.overflow = \"NONE\";\n    return newProperties;\n  },\n};\n\nfunction findAndUpdatePropertyPaneControlConfig(\n  config: PropertyPaneConfig[],\n  propertyPaneUpdates: Record<string, Record<string, unknown>>,\n): PropertyPaneConfig[] {\n  return config.map((sectionConfig: PropertyPaneConfig) => {\n    if (\n      Array.isArray(sectionConfig.children) &&\n      sectionConfig.children.length > 0\n    ) {\n      Object.keys(propertyPaneUpdates).forEach((propertyName: string) => {\n        const controlConfigIndex:\n          | number\n          | undefined = sectionConfig.children?.findIndex(\n          (controlConfig: PropertyPaneConfig) =>\n            (controlConfig as PropertyPaneControlConfig).propertyName ===\n            propertyName,\n        );\n\n        if (\n          controlConfigIndex !== undefined &&\n          controlConfigIndex > -1 &&\n          sectionConfig.children\n        ) {\n          sectionConfig.children[controlConfigIndex] = {\n            ...sectionConfig.children[controlConfigIndex],\n            ...propertyPaneUpdates[propertyName],\n          };\n        }\n      });\n    }\n    return sectionConfig;\n  });\n}\n\nexport const WidgetFeaturePropertyPaneEnhancements: Record<\n  RegisteredWidgetFeatures,\n  (\n    config: PropertyPaneConfig[],\n    widgetType?: WidgetType,\n  ) => PropertyPaneConfig[]\n> = {\n  [RegisteredWidgetFeatures.DYNAMIC_HEIGHT]: (\n    config: PropertyPaneConfig[],\n    widgetType?: WidgetType,\n  ) => {\n    function hideWhenDynamicHeightIsEnabled(props: WidgetProps) {\n      return (\n        props.dynamicHeight === DynamicHeight.AUTO_HEIGHT_WITH_LIMITS ||\n        props.dynamicHeight === DynamicHeight.AUTO_HEIGHT\n      );\n    }\n    let update = findAndUpdatePropertyPaneControlConfig(config, {\n      shouldScrollContents: {\n        hidden: hideWhenDynamicHeightIsEnabled,\n        dependencies: [\"dynamicHeight\"],\n      },\n      scrollContents: {\n        hidden: hideWhenDynamicHeightIsEnabled,\n        dependencies: [\"dynamicHeight\"],\n      },\n      fixedFooter: {\n        hidden: hideWhenDynamicHeightIsEnabled,\n        dependencies: [\"dynamicHeight\"],\n      },\n      overflow: {\n        hidden: hideWhenDynamicHeightIsEnabled,\n        dependencies: [\"dynamicHeight\"],\n      },\n    });\n    if (widgetType === \"MODAL_WIDGET\") {\n      update = findAndUpdatePropertyPaneControlConfig(update, {\n        dynamicHeight: {\n          options: [\n            {\n              label: \"Auto Height\",\n              value: DynamicHeight.AUTO_HEIGHT,\n            },\n            {\n              label: \"Fixed\",\n              value: DynamicHeight.FIXED,\n            },\n          ],\n        },\n      });\n    }\n    return update;\n  },\n};\n\n/* Hide the min height and max height properties using this function\n   as the `hidden` hook in the property pane configuration\n   This function checks if the `dynamicHeight` property is enabled\n   and returns true if disabled, and false if enabled.\n*/\nexport function hideDynamicHeightPropertyControl(props: WidgetProps) {\n  return props.dynamicHeight !== DynamicHeight.AUTO_HEIGHT_WITH_LIMITS;\n}\n\n// TODO (abhinav): ADD_UNIT_TESTS\nfunction updateMinMaxDynamicHeight(\n  props: WidgetProps,\n  propertyName: string,\n  propertyValue: unknown,\n) {\n  const updates = [\n    {\n      propertyPath: propertyName,\n      propertyValue: propertyValue,\n    },\n  ];\n\n  if (propertyValue === DynamicHeight.AUTO_HEIGHT_WITH_LIMITS) {\n    const minDynamicHeight = parseInt(props.minDynamicHeight, 10);\n\n    if (\n      isNaN(minDynamicHeight) ||\n      minDynamicHeight < WidgetHeightLimits.MIN_HEIGHT_IN_ROWS\n    ) {\n      updates.push({\n        propertyPath: \"minDynamicHeight\",\n        propertyValue: WidgetHeightLimits.MIN_HEIGHT_IN_ROWS,\n      });\n    }\n    const maxDynamicHeight = parseInt(props.maxDynamicHeight, 10);\n    if (\n      isNaN(maxDynamicHeight) ||\n      maxDynamicHeight === WidgetHeightLimits.MAX_HEIGHT_IN_ROWS ||\n      maxDynamicHeight <= WidgetHeightLimits.MIN_HEIGHT_IN_ROWS\n    ) {\n      updates.push({\n        propertyPath: \"maxDynamicHeight\",\n        propertyValue:\n          props.bottomRow - props.topRow + GridDefaults.CANVAS_EXTENSION_OFFSET,\n      });\n    }\n\n    // Case where maxDynamicHeight is zero\n    if (isNaN(maxDynamicHeight) || maxDynamicHeight === 0) {\n      updates.push({\n        propertyPath: \"maxDynamicHeight\",\n        propertyValue: props.bottomRow - props.topRow,\n      });\n    }\n  } else if (propertyValue === DynamicHeight.AUTO_HEIGHT) {\n    const minHeightInRows = props.isCanvas\n      ? WidgetHeightLimits.MIN_CANVAS_HEIGHT_IN_ROWS\n      : WidgetHeightLimits.MIN_HEIGHT_IN_ROWS;\n    updates.push(\n      {\n        propertyPath: \"minDynamicHeight\",\n        propertyValue: minHeightInRows,\n      },\n      {\n        propertyPath: \"maxDynamicHeight\",\n        propertyValue: WidgetHeightLimits.MAX_HEIGHT_IN_ROWS,\n      },\n    );\n  }\n\n  if (propertyValue === DynamicHeight.FIXED) {\n    updates.push({\n      propertyPath: \"originalBottomRow\",\n      propertyValue: undefined,\n    });\n    updates.push({\n      propertyPath: \"originalTopRow\",\n      propertyValue: undefined,\n    });\n  }\n\n  // The following are updates which apply to specific widgets.\n  if (\n    propertyValue === DynamicHeight.AUTO_HEIGHT ||\n    propertyValue === DynamicHeight.AUTO_HEIGHT_WITH_LIMITS\n  ) {\n    if (props.dynamicHeight === DynamicHeight.FIXED) {\n      updates.push({\n        propertyPath: \"originalBottomRow\",\n        propertyValue: props.bottomRow,\n      });\n      updates.push({\n        propertyPath: \"originalTopRow\",\n        propertyValue: props.topRow,\n      });\n    }\n    if (!props.shouldScrollContents) {\n      updates.push({\n        propertyPath: \"shouldScrollContents\",\n        propertyValue: true,\n      });\n    }\n    if (props.overflow !== undefined) {\n      updates.push({\n        propertyPath: \"overflow\",\n        propertyValue: \"NONE\",\n      });\n    }\n    if (props.scrollContents === true) {\n      updates.push({\n        propertyPath: \"scrollContents\",\n        propertyValue: false,\n      });\n    }\n    if (props.fixedFooter === true) {\n      updates.push({\n        propertyPath: \"fixedFooter\",\n        propertyValue: false,\n      });\n    }\n  }\n\n  return updates;\n}\n\n// TODO FEATURE:(abhinav) Add validations to these properties\n\nconst CONTAINER_SCROLL_HELPER_TEXT =\n  \"This widget shows an internal scroll when you add widgets in edit mode. It'll resize after you've added widgets. The scroll won't exist in view mode.\";\n\nexport const PropertyPaneConfigTemplates: Record<\n  RegisteredWidgetFeatures,\n  PropertyPaneConfig[]\n> = {\n  [RegisteredWidgetFeatures.DYNAMIC_HEIGHT]: [\n    {\n      helpText:\n        \"Auto Height: Configure the way the widget height reacts to content changes.\",\n      propertyName: \"dynamicHeight\",\n      label: \"Height\",\n      controlType: \"DROP_DOWN\",\n      isBindProperty: false,\n      isTriggerProperty: false,\n      dependencies: [\n        \"shouldScrollContents\",\n        \"maxDynamicHeight\",\n        \"minDynamicHeight\",\n        \"bottomRow\",\n        \"topRow\",\n        \"overflow\",\n        \"dynamicHeight\",\n        \"isCanvas\",\n      ],\n      updateHook: updateMinMaxDynamicHeight,\n      helperText: (props: WidgetProps) => {\n        return props.isCanvas &&\n          props.dynamicHeight === DynamicHeight.AUTO_HEIGHT\n          ? CONTAINER_SCROLL_HELPER_TEXT\n          : \"\";\n      },\n      options: [\n        {\n          label: \"Auto Height\",\n          value: DynamicHeight.AUTO_HEIGHT,\n        },\n        {\n          label: \"Auto Height with limits\",\n          value: DynamicHeight.AUTO_HEIGHT_WITH_LIMITS,\n        },\n        {\n          label: \"Fixed\",\n          value: DynamicHeight.FIXED,\n        },\n      ],\n      postUpdateAction: ReduxActionTypes.CHECK_CONTAINERS_FOR_AUTO_HEIGHT,\n    },\n  ],\n};\n","export default {\n  INPUT_TEXT: \"INPUT_TEXT\",\n  FIXED_KEY_INPUT: \"FIXED_KEY_INPUT\",\n  DROP_DOWN: \"DROP_DOWN\",\n  SWITCH: \"SWITCH\",\n  KEYVALUE_ARRAY: \"KEYVALUE_ARRAY\",\n  FILE_PICKER: \"FILE_PICKER\",\n  QUERY_DYNAMIC_TEXT: \"QUERY_DYNAMIC_TEXT\",\n  QUERY_DYNAMIC_INPUT_TEXT: \"QUERY_DYNAMIC_INPUT_TEXT\",\n  CHECKBOX: \"CHECKBOX\",\n  NUMBER_INPUT: \"NUMBER_INPUT\",\n  ARRAY_FIELD: \"ARRAY_FIELD\",\n  WHERE_CLAUSE: \"WHERE_CLAUSE\",\n  ENTITY_SELECTOR: \"ENTITY_SELECTOR\",\n  PAGINATION: \"PAGINATION\",\n  SORTING: \"SORTING\",\n  PROJECTION: \"PROJECTION\",\n};\n","import { WidgetType } from \"constants/WidgetConstants\";\nimport generate from \"nanoid/generate\";\nimport { getBaseWidgetClassName } from \"../constants/componentClassNameConstants\";\n\nconst ALPHANUMERIC = \"1234567890abcdefghijklmnopqrstuvwxyz\";\n// const ALPHABET = \"abcdefghijklmnopqrstuvwxyz\";\n\nexport const generateReactKey = ({\n  prefix = \"\",\n}: { prefix?: string } = {}): string => {\n  return prefix + generate(ALPHANUMERIC, 10);\n};\n\n// Before you change how this works\n// This className is used for the following:\n// 1. Resize bounds\n// 2. Property pane reference for positioning\n// 3. Table widget filter pan reference for positioning\nexport const generateClassName = (seed?: string) => {\n  return getBaseWidgetClassName(seed);\n};\n\nexport const getCanvasClassName = () => \"canvas\";\n\nexport const getNearestParentCanvas = (el: Element | null) => {\n  const canvasQuerySelector = `.${getCanvasClassName()}`;\n  if (el) return el.closest(canvasQuerySelector);\n  return null;\n};\n\nexport const getNearestWidget = (el: Element | null, type: WidgetType) => {\n  const canvasQuerySelector = `div[type=\"${type}\"]`;\n  if (el) return el.closest(canvasQuerySelector);\n  return null;\n};\n\nexport default {\n  generateReactKey,\n  generateClassName,\n};\n","/**\n * REF: https://github.com/angular/angular/blob/master/packages/core/src/sanitization/url_sanitizer.ts\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either an allowed protocol (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nconst SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi;\n\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nconst DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\n\nconst getIsSafeURL = (value: string) =>\n  typeof value === \"string\" &&\n  (value.match(SAFE_URL_PATTERN) || value.match(DATA_URL_PATTERN));\n\nexport default getIsSafeURL;\n","import { isTrueObject } from \"ce/workers/Evaluation/evaluationUtils\";\nimport { promisify } from \"./utils/Promisify\";\n\nfunction runFnDescriptor(\n  this: any,\n  onSuccessOrParams?: (data: any) => unknown | Record<string, unknown>,\n  onError?: (e: string) => unknown,\n  params = {},\n) {\n  const type = \"RUN_PLUGIN_ACTION\" as const;\n  const actionParams = isTrueObject(onSuccessOrParams)\n    ? onSuccessOrParams\n    : params;\n  return {\n    type,\n    payload: {\n      actionId: this.actionId,\n      params: actionParams,\n      onSuccess:\n        typeof onSuccessOrParams === \"function\"\n          ? onSuccessOrParams.toString()\n          : undefined,\n      onError: typeof onError === \"function\" ? onError.toString() : undefined,\n    },\n  };\n}\n\nexport type TRunArgs = Parameters<typeof runFnDescriptor>;\nexport type TRunDescription = ReturnType<typeof runFnDescriptor>;\nexport type TRunActionType = TRunDescription[\"type\"];\n\nexport default async function run(\n  this: any,\n  onSuccessOrParams?: (data: any) => unknown | Record<string, unknown>,\n  onError?: (e: string) => unknown,\n  params = {},\n) {\n  const executor = promisify(runFnDescriptor.bind(this));\n  try {\n    const response = await executor(onSuccessOrParams, onError, params);\n    if (typeof onSuccessOrParams === \"function\") {\n      onSuccessOrParams.apply(this, response);\n      return;\n    }\n    /*\n     * Api execution returns [response, params]\n     * Old callback style are passed both response and params\n     * Promise implementation somehow only passes response to the then callback.\n     * */\n    return response[0];\n  } catch (e) {\n    if (typeof onError === \"function\") {\n      onError((e as any).message);\n      return;\n    }\n    throw e;\n  }\n}\n\nfunction clearFnDescriptor(this: any) {\n  return {\n    type: \"CLEAR_PLUGIN_ACTION\" as const,\n    payload: {\n      actionId: this.actionId,\n    },\n  };\n}\n\nexport type TClearArgs = Parameters<typeof clearFnDescriptor>;\nexport type TClearDescription = ReturnType<typeof clearFnDescriptor>;\nexport type TClearActionType = TClearDescription[\"type\"];\n\nexport async function clear(this: any) {\n  return promisify(clearFnDescriptor.bind(this))();\n}\n","import { promisify } from \"./utils/Promisify\";\n\nfunction copyToClipboardFnDescriptor(\n  data: string,\n  options?: { debug?: boolean; format?: string },\n) {\n  return {\n    type: \"COPY_TO_CLIPBOARD\" as const,\n    payload: {\n      data,\n      options: { debug: options?.debug, format: options?.format },\n    },\n  };\n}\n\nexport type TCopyToClipboardArgs = Parameters<\n  typeof copyToClipboardFnDescriptor\n>;\nexport type TCopyToClipboardDescription = ReturnType<\n  typeof copyToClipboardFnDescriptor\n>;\n\nexport type TCopyToClipboardActionType = TCopyToClipboardDescription[\"type\"];\n\nasync function copyToClipboard(...args: TCopyToClipboardArgs) {\n  return promisify(copyToClipboardFnDescriptor)(...args);\n}\n\nexport default copyToClipboard;\n","import { promisify } from \"./utils/Promisify\";\n\nfunction downloadFnDescriptor(data: string, name: string, type: string) {\n  return {\n    type: \"DOWNLOAD\" as const,\n    payload: { data, name, type },\n  };\n}\n\nexport type TDownloadArgs = Parameters<typeof downloadFnDescriptor>;\nexport type TDownloadDescription = ReturnType<typeof downloadFnDescriptor>;\nexport type TDownloadActionType = TDownloadDescription[\"type\"];\n\nasync function download(...args: Parameters<typeof downloadFnDescriptor>) {\n  return promisify(downloadFnDescriptor)(...args);\n}\n\nexport default download;\n","import { uniqueId } from \"lodash\";\nimport { TDefaultMessage } from \"utils/MessageUtil\";\nimport { dataTreeEvaluator } from \"../handlers/evalTree\";\nimport ExecutionMetaData from \"./utils/ExecutionMetaData\";\nimport { promisify } from \"./utils/Promisify\";\nimport TriggerEmitter, { BatchKey } from \"./utils/TriggerEmitter\";\n\nexport let geoLocationListener: ((e: MessageEvent<any>) => void) | null = null;\n\nfunction getGeoLocationFnDescriptor(\n  successCallback?: (position: GeolocationPosition) => unknown,\n  errorCallback?: (err: unknown) => unknown,\n  options?: {\n    maximumAge?: number;\n    timeout?: number;\n    enableHighAccuracy?: boolean;\n  },\n) {\n  return {\n    type: \"GET_CURRENT_LOCATION\" as const,\n    payload: {\n      options,\n    },\n  };\n}\n\nexport type TGetGeoLocationArgs = Parameters<typeof getGeoLocationFnDescriptor>;\nexport type TGetGeoLocationDescription = ReturnType<\n  typeof getGeoLocationFnDescriptor\n>;\nexport type TGetGeoLocationActionType = TGetGeoLocationDescription[\"type\"];\n\nexport async function getGeoLocation(\n  ...args: Parameters<typeof getGeoLocationFnDescriptor>\n) {\n  const [successCallback, errorCallback, options] = args;\n  const executor = promisify(getGeoLocationFnDescriptor);\n  let response;\n  try {\n    response = await executor(successCallback, errorCallback, options);\n    if (typeof successCallback === \"function\") {\n      successCallback(response);\n      return;\n    }\n  } catch (e) {\n    if (typeof errorCallback === \"function\") {\n      errorCallback(e);\n      return;\n    }\n    throw e;\n  }\n  return response;\n}\n\nfunction watchGeoLocationFnDescriptor(\n  this: any,\n  onSuccessCallback?: (...args: any) => any,\n  onErrorCallback?: (...args: any) => any,\n  options?: {\n    maximumAge?: number;\n    timeout?: number;\n    enableHighAccuracy?: boolean;\n  },\n) {\n  return {\n    type: \"WATCH_CURRENT_LOCATION\" as const,\n    payload: {\n      options,\n      listenerId: this.listenerId,\n    },\n  };\n}\n\nexport type TWatchGeoLocationArgs = Parameters<\n  typeof watchGeoLocationFnDescriptor\n>;\nexport type TWatchGeoLocationDescription = ReturnType<\n  typeof watchGeoLocationFnDescriptor\n>;\nexport type TWatchGeoLocationActionType = TWatchGeoLocationDescription[\"type\"];\n\nexport function watchGeoLocation(...args: TWatchGeoLocationArgs) {\n  const metaData = ExecutionMetaData.getExecutionMetaData();\n  const [onSuccessCallback, onErrorCallback] = args;\n  const listenerId = uniqueId(\"geoLocationListener_\");\n  TriggerEmitter.emit(BatchKey.process_batched_triggers, {\n    trigger: watchGeoLocationFnDescriptor.apply({ listenerId }, args),\n    ...metaData,\n  });\n  const messageHandler = (event: MessageEvent<TDefaultMessage<any>>) => {\n    const message = event.data;\n    if (message.messageId !== listenerId) return;\n    ExecutionMetaData.setExecutionMetaData(\n      metaData.triggerMeta,\n      metaData.eventType,\n    );\n    const { body } = message;\n    if (!dataTreeEvaluator) throw new Error(\"No Data Tree Evaluator found\");\n    ExecutionMetaData.setExecutionMetaData(\n      metaData.triggerMeta,\n      metaData.eventType,\n    );\n    self[\"$isDataField\"] = false;\n    if (body.data) {\n      if (typeof onSuccessCallback === \"function\") onSuccessCallback(body.data);\n    } else if (body.error) {\n      if (typeof onErrorCallback === \"function\") onErrorCallback(body.error);\n      self.removeEventListener(\"message\", messageHandler);\n      geoLocationListener = null;\n    }\n  };\n  self.addEventListener(\"message\", messageHandler);\n  geoLocationListener = messageHandler;\n}\n\nfunction stopWatchGeoLocationFnDescriptor(this: any) {\n  return {\n    type: \"STOP_WATCHING_CURRENT_LOCATION\" as const,\n    payload: {},\n  };\n}\n\nexport type TStopWatchGeoLocationArgs = Parameters<\n  typeof stopWatchGeoLocationFnDescriptor\n>;\nexport type TStopWatchGeoLocationDescription = ReturnType<\n  typeof stopWatchGeoLocationFnDescriptor\n>;\nexport type TStopWatchGeoLocationActionType = TStopWatchGeoLocationDescription[\"type\"];\n\nexport async function stopWatchGeoLocation() {\n  const executor = promisify(stopWatchGeoLocationFnDescriptor);\n  let response;\n  try {\n    response = await executor();\n    geoLocationListener = null;\n  } catch (e) {\n    throw e;\n  }\n  return response;\n}\n","import { promisify } from \"./utils/Promisify\";\n\nfunction showModalFnDescriptor(modalName: string) {\n  return {\n    type: \"SHOW_MODAL_BY_NAME\" as const,\n    payload: { modalName },\n  };\n}\n\nexport type TShowModalArgs = Parameters<typeof showModalFnDescriptor>;\nexport type TShowModalDescription = ReturnType<typeof showModalFnDescriptor>;\nexport type TShowModalActionType = TShowModalDescription[\"type\"];\n\nasync function showModal(...args: TShowModalArgs) {\n  return promisify(showModalFnDescriptor)(...args);\n}\n\nfunction closeModalFnDescriptor(modalName: string) {\n  return {\n    type: \"CLOSE_MODAL\" as const,\n    payload: { modalName },\n  };\n}\n\nexport type TCloseModalArgs = Parameters<typeof closeModalFnDescriptor>;\nexport type TCloseModalDescription = ReturnType<typeof closeModalFnDescriptor>;\nexport type TCloseModalActionType = TCloseModalDescription[\"type\"];\n\nasync function closeModal(...args: TCloseModalArgs) {\n  return promisify(closeModalFnDescriptor)(...args);\n}\n\nexport { showModal, closeModal };\n","import { promisify } from \"./utils/Promisify\";\n\nexport enum NavigationTargetType {\n  SAME_WINDOW = \"SAME_WINDOW\",\n  NEW_WINDOW = \"NEW_WINDOW\",\n}\n\nfunction navigateToFnDescriptor(\n  pageNameOrUrl: string,\n  params: Record<string, string>,\n  target = NavigationTargetType.SAME_WINDOW,\n) {\n  return {\n    type: \"NAVIGATE_TO\" as const,\n    payload: { pageNameOrUrl, params, target },\n  };\n}\n\nexport type TNavigateToArgs = Parameters<typeof navigateToFnDescriptor>;\nexport type TNavigateToDescription = ReturnType<typeof navigateToFnDescriptor>;\nexport type TNavigateToActionType = TNavigateToDescription[\"type\"];\n\nasync function navigateTo(...args: Parameters<typeof navigateToFnDescriptor>) {\n  return promisify(navigateToFnDescriptor)(...args);\n}\n\nexport default navigateTo;\n","import ExecutionMetaData from \"./utils/ExecutionMetaData\";\nimport TriggerEmitter, { BatchKey } from \"./utils/TriggerEmitter\";\n\nfunction postWindowMessageFnDescriptor(\n  message: unknown,\n  source: string,\n  targetOrigin: string,\n) {\n  return {\n    type: \"POST_MESSAGE\" as const,\n    payload: {\n      message,\n      source,\n      targetOrigin,\n    },\n  };\n}\nexport type TPostWindowMessageArgs = Parameters<\n  typeof postWindowMessageFnDescriptor\n>;\nexport type TPostWindowMessageDescription = ReturnType<\n  typeof postWindowMessageFnDescriptor\n>;\nexport type TPostWindowMessageActionType = TPostWindowMessageDescription[\"type\"];\n\nexport default function postWindowMessage(...args: TPostWindowMessageArgs) {\n  const metaData = ExecutionMetaData.getExecutionMetaData();\n  TriggerEmitter.emit(BatchKey.process_batched_triggers, {\n    trigger: postWindowMessageFnDescriptor(...args),\n    ...metaData,\n  });\n}\n","import { promisify } from \"./utils/Promisify\";\n\nfunction resetWidgetFnDescriptor(widgetName: string, resetChildren = true) {\n  return {\n    type: \"RESET_WIDGET_META_RECURSIVE_BY_NAME\" as const,\n    payload: { widgetName, resetChildren },\n  };\n}\n\nexport type TResetWidgetArgs = Parameters<typeof resetWidgetFnDescriptor>;\nexport type TResetWidgetDescription = ReturnType<\n  typeof resetWidgetFnDescriptor\n>;\nexport type TResetWidgetActionType = TResetWidgetDescription[\"type\"];\n\nasync function resetWidget(\n  ...args: Parameters<typeof resetWidgetFnDescriptor>\n) {\n  return promisify(resetWidgetFnDescriptor)(...args);\n}\n\nexport default resetWidget;\n","import { TypeOptions } from \"react-toastify\";\nimport { promisify } from \"./utils/Promisify\";\n\nfunction showAlertFnDescriptor(message: string, style: TypeOptions) {\n  return {\n    type: \"SHOW_ALERT\" as const,\n    payload: { message, style },\n  };\n}\n\nexport type TShowAlertArgs = Parameters<typeof showAlertFnDescriptor>;\nexport type TShowAlertDescription = ReturnType<typeof showAlertFnDescriptor>;\nexport type TShowAlertActionType = TShowAlertDescription[\"type\"];\n\nasync function showAlert(...args: Parameters<typeof showAlertFnDescriptor>) {\n  return promisify(showAlertFnDescriptor)(...args);\n}\n\nexport default showAlert;\n","import set from \"lodash/set\";\nimport TriggerEmitter, { BatchKey } from \"./utils/TriggerEmitter\";\n\nfunction storeFnDescriptor(key: string, value: string, persist = true) {\n  return {\n    type: \"STORE_VALUE\" as const,\n    payload: {\n      key,\n      value,\n      persist,\n    },\n  };\n}\n\nexport type TStoreValueArgs = Parameters<typeof storeFnDescriptor>;\nexport type TStoreValueDescription = ReturnType<typeof storeFnDescriptor>;\nexport type TStoreValueActionType = TStoreValueDescription[\"type\"];\n\nexport async function storeValue(\n  this: any,\n  key: string,\n  value: string,\n  persist = true,\n) {\n  set(this, [\"appsmith\", \"store\", key], value);\n  TriggerEmitter.emit(\n    BatchKey.process_store_updates,\n    storeFnDescriptor(key, value, persist),\n  );\n  return {};\n}\n\nfunction removeValueFnDescriptor(key: string) {\n  return {\n    type: \"REMOVE_VALUE\" as const,\n    payload: {\n      key,\n    },\n  };\n}\n\nexport type TRemoveValueArgs = Parameters<typeof removeValueFnDescriptor>;\nexport type TRemoveValueDescription = ReturnType<\n  typeof removeValueFnDescriptor\n>;\nexport type TRemoveValueActionType = TRemoveValueDescription[\"type\"];\n\nexport async function removeValue(this: any, key: string) {\n  delete this.appsmith.store[key];\n  TriggerEmitter.emit(\n    BatchKey.process_store_updates,\n    removeValueFnDescriptor(key),\n  );\n  return {};\n}\n\nfunction clearStoreFnDescriptor() {\n  return {\n    type: \"CLEAR_STORE\" as const,\n    payload: null,\n  };\n}\n\nexport type TClearStoreArgs = Parameters<typeof clearStoreFnDescriptor>;\nexport type TClearStoreDescription = ReturnType<typeof clearStoreFnDescriptor>;\nexport type TClearStoreActionType = TClearStoreDescription[\"type\"];\n\nexport async function clearStore(this: any) {\n  this.appsmith.store = {};\n  TriggerEmitter.emit(BatchKey.process_store_updates, clearStoreFnDescriptor());\n  return {};\n}\n","import { TriggerMeta } from \"ce/sagas/ActionExecution/ActionExecutionSagas\";\nimport {\n  EventType,\n  TriggerSource,\n} from \"constants/AppsmithActionConstants/ActionConstants\";\n\nexport default class ExecutionMetaData {\n  private static triggerMeta?: TriggerMeta;\n  private static eventType?: EventType;\n  static setExecutionMetaData(\n    triggerMeta?: TriggerMeta,\n    eventType?: EventType,\n  ) {\n    ExecutionMetaData.triggerMeta = triggerMeta;\n    ExecutionMetaData.eventType = eventType;\n  }\n  static getExecutionMetaData() {\n    const { source, triggerPropertyName } = ExecutionMetaData.triggerMeta || {};\n    return {\n      triggerMeta: {\n        source: { ...source } as TriggerSource,\n        triggerPropertyName,\n      },\n      eventType: ExecutionMetaData.eventType,\n    };\n  }\n}\n","import { MAIN_THREAD_ACTION } from \"@appsmith/workers/Evaluation/evalWorkerActions\";\nimport { createEvaluationContext } from \"workers/Evaluation/evaluate\";\nimport { dataTreeEvaluator } from \"workers/Evaluation/handlers/evalTree\";\nimport ExecutionMetaData from \"./ExecutionMetaData\";\nimport { WorkerMessenger } from \"./Messenger\";\n\n/**\n * This function is used to promisify the execution of a function\n * @param fnDescriptor The function descriptor\n * @returns A function that can be used to trigger the execution\n */\nexport function promisify<P extends ReadonlyArray<unknown>>(\n  fnDescriptor: (...params: P) => { type: string; payload: any },\n) {\n  return async function(...args: P) {\n    const actionDescription = fnDescriptor(...args);\n    const metaData = ExecutionMetaData.getExecutionMetaData();\n    const response = await WorkerMessenger.request({\n      method: MAIN_THREAD_ACTION.PROCESS_TRIGGER,\n      data: {\n        trigger: actionDescription,\n        ...metaData,\n      },\n    });\n    if (!dataTreeEvaluator) throw new Error(\"No Data Tree Evaluator found\");\n    ExecutionMetaData.setExecutionMetaData(\n      metaData.triggerMeta,\n      metaData.eventType,\n    );\n    self[\"$isDataField\"] = false;\n    const evalContext = createEvaluationContext({\n      dataTree: dataTreeEvaluator.evalTree,\n      resolvedFunctions: dataTreeEvaluator.resolvedFunctions,\n      isTriggerBased: true,\n    });\n    Object.assign(self, evalContext);\n    const { data, error } = response;\n    if (error) {\n      throw error;\n    }\n    return data;\n  };\n}\n","import { EventEmitter } from \"events\";\nimport { MAIN_THREAD_ACTION } from \"@appsmith/workers/Evaluation/evalWorkerActions\";\nimport { WorkerMessenger } from \"workers/Evaluation/fns/utils/Messenger\";\n\nconst _internalSetTimeout = self.setTimeout;\nconst _internalClearTimeout = self.clearTimeout;\n\nexport enum BatchKey {\n  process_logs = \"process_logs\",\n  process_store_updates = \"process_store_updates\",\n  process_batched_triggers = \"process_batched_triggers\",\n  process_batched_fn_execution = \"process_batched_fn_execution\",\n}\n\nconst TriggerEmitter = new EventEmitter();\n/**\n * This function is used to batch actions and send them to the main thread\n * in a single message. This is useful for actions that are called frequently\n * and we don't want to send a message for each action. This function is used\n * for actions that are called in a priority order.\n * @param task\n * @returns\n */\nexport const priorityBatchedActionHandler = function(\n  task: (batchedData: unknown[]) => void,\n) {\n  let batchedData: unknown[] = [];\n  return (data: unknown) => {\n    if (batchedData.length === 0) {\n      // Ref - https://developer.mozilla.org/en-US/docs/Web/API/HTML_DOM_API/Microtask_guide\n      queueMicrotask(() => {\n        task(batchedData);\n        batchedData = [];\n      });\n    }\n    batchedData.push(data);\n  };\n};\n\n/**\n * This function is used to batch actions and send them to the main thread\n * in a single message. This is useful for actions that are called frequently\n * and we don't want to send a message for each action.\n * @param deferredTask\n * @returns\n */\nexport const deferredBatchedActionHandler = function(\n  deferredTask: (batchedData: unknown) => void,\n) {\n  let batchedData: unknown[] = [];\n  let timerId: number | null = null;\n  return (data: unknown) => {\n    batchedData.push(data);\n    if (timerId) _internalClearTimeout(timerId);\n    timerId = _internalSetTimeout(() => {\n      deferredTask(batchedData);\n      batchedData = [];\n    });\n  };\n};\n\nconst logsHandler = deferredBatchedActionHandler((batchedData) =>\n  WorkerMessenger.ping({\n    method: MAIN_THREAD_ACTION.PROCESS_LOGS,\n    data: batchedData,\n  }),\n);\n\nTriggerEmitter.on(BatchKey.process_logs, logsHandler);\n\nconst storeUpdatesHandler = priorityBatchedActionHandler((batchedData) =>\n  WorkerMessenger.ping({\n    method: MAIN_THREAD_ACTION.PROCESS_STORE_UPDATES,\n    data: batchedData,\n  }),\n);\n\nTriggerEmitter.on(BatchKey.process_store_updates, storeUpdatesHandler);\n\nconst defaultTriggerHandler = priorityBatchedActionHandler((batchedData) => {\n  WorkerMessenger.ping({\n    method: MAIN_THREAD_ACTION.PROCESS_BATCHED_TRIGGERS,\n    data: batchedData,\n  });\n});\n\nTriggerEmitter.on(BatchKey.process_batched_triggers, defaultTriggerHandler);\n\nconst fnExecutionDataHandler = priorityBatchedActionHandler((data) => {\n  const batchedData = data.reduce<{\n    JSExecutionData: Record<string, any>;\n    JSExecutionErrors: Record<string, any>;\n  }>(\n    (acc, d: any) => {\n      const { data, name } = d;\n      try {\n        acc.JSExecutionData[name] = self.structuredClone(data);\n      } catch (e) {\n        acc.JSExecutionErrors[name] = {\n          message: `Execution of ${name} returned an unserializable data`,\n        };\n      }\n      return acc;\n    },\n    { JSExecutionData: {}, JSExecutionErrors: {} },\n  );\n\n  WorkerMessenger.ping({\n    method: MAIN_THREAD_ACTION.PROCESS_JS_FUNCTION_EXECUTION,\n    data: batchedData,\n  });\n});\n\nTriggerEmitter.on(\n  BatchKey.process_batched_fn_execution,\n  fnExecutionDataHandler,\n);\n\nexport default TriggerEmitter;\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function postJSFunctionExecutionLog(fullName: string) {\n  //\n}\n","import { isPromise } from \"workers/Evaluation/JSObject/utils\";\nimport { postJSFunctionExecutionLog } from \"@appsmith/workers/Evaluation/JSObject/postJSFunctionExecution\";\nimport TriggerEmitter, { BatchKey } from \"./TriggerEmitter\";\n\ndeclare global {\n  interface Window {\n    structuredClone: (\n      value: any,\n      options?: StructuredSerializeOptions | undefined,\n    ) => any;\n  }\n}\nexport interface JSExecutionData {\n  data: unknown;\n  funcName: string;\n}\n\nfunction saveExecutionData(name: string, data: unknown) {\n  TriggerEmitter.emit(BatchKey.process_batched_fn_execution, {\n    name,\n    data,\n  });\n}\n\nexport function jsObjectFunctionFactory<P extends ReadonlyArray<unknown>>(\n  fn: (...args: P) => unknown,\n  name: string,\n  postProcessors: Array<(name: string, res: unknown) => void> = [\n    saveExecutionData,\n    postJSFunctionExecutionLog,\n  ],\n) {\n  return (...args: P) => {\n    try {\n      const result = fn(...args);\n      if (isPromise(result)) {\n        result.then((res) => {\n          postProcessors.forEach((p) => p(name, res));\n          return res;\n        });\n        result.catch((e) => {\n          postProcessors.forEach((p) => p(name, undefined));\n          throw e;\n        });\n      } else {\n        postProcessors.forEach((p) => p(name, result));\n      }\n      return result;\n    } catch (e) {\n      postProcessors.forEach((postProcessor) => {\n        postProcessor(name, undefined);\n      });\n      throw e;\n    }\n  };\n}\n","// Finds the first index which is a duplicate value\n// Returns -1 if there are no duplicates\n// Returns the index of the first duplicate entry it finds\n\n// Note: This \"can\" fail if the object entries don't have their properties in the\n// same order.\nexport const findDuplicateIndex = (arr: Array<unknown>) => {\n  const _uniqSet = new Set();\n  let currSetSize = 0;\n  for (let i = 0; i < arr.length; i++) {\n    // JSON.stringify because value can be objects\n    _uniqSet.add(JSON.stringify(arr[i]));\n    if (_uniqSet.size > currSetSize) currSetSize = _uniqSet.size;\n    else return i;\n  }\n  return -1;\n};\n\n/** Function that count occurrences of a substring in a string;\n * @param {String} string               The string\n * @param {String} subString            The sub string to search for\n * @param {Boolean} [allowOverlapping]  Optional. (Default:false)\n * @param {Number | null} [maxLimit]  Optional. (Default:null)\n */\nexport const countOccurrences = (\n  string: string,\n  subString: string,\n  allowOverlapping = false,\n  maxLimit: number | null = null,\n): number => {\n  string += \"\";\n  subString += \"\";\n  if (subString.length <= 0) return string.length + 1;\n\n  let n = 0, // count of occurrences\n    pos = 0; // current position of the pointer\n  const step = allowOverlapping ? 1 : subString.length;\n\n  while (true) {\n    pos = string.indexOf(subString, pos);\n    if (pos >= 0) {\n      ++n;\n      /**\n       * If you are only interested in knowing\n       * whether occurances count exceeds maxLimit,\n       * then break the loop.\n       */\n      if (maxLimit && n > maxLimit) break;\n      pos += step;\n    } else break;\n  }\n  return n;\n};\n","export default function indirectEval(script: string) {\n  /* Indirect eval to prevent local scope access. \n  Ref. - https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval#description */\n  return (1, eval)(script);\n}\n","import _, { VERSION as lodashVersion } from \"lodash\";\nimport moment from \"moment-timezone\";\nimport parser from \"fast-xml-parser\";\nimport forge from \"node-forge\";\n\nexport type TJSLibrary = {\n  version?: string;\n  docsURL: string;\n  name: string;\n  accessor: string[];\n  lib?: any;\n  url?: string;\n};\nexport const defaultLibraries: TJSLibrary[] = [\n  {\n    accessor: [\"_\"],\n    lib: _,\n    version: lodashVersion,\n    docsURL: `https://lodash.com/docs/${lodashVersion}`,\n    name: \"lodash\",\n  },\n  {\n    accessor: [\"moment\"],\n    lib: moment,\n    version: moment.version,\n    docsURL: `https://momentjs.com/docs/`,\n    name: \"moment\",\n  },\n  {\n    accessor: [\"xmlParser\"],\n    lib: parser,\n    version: \"3.17.5\",\n    docsURL: \"https://github.com/NaturalIntelligence/fast-xml-parser\",\n    name: \"xmlParser\",\n  },\n  {\n    accessor: [\"forge\"],\n    // We are removing some functionalities of node-forge because they wont\n    // work in the worker thread\n    lib: _.omit(forge, [\"tls\", \"http\", \"xhr\", \"socket\", \"task\"]),\n    version: \"1.3.0\",\n    docsURL: \"https://github.com/digitalbazaar/forge\",\n    name: \"forge\",\n  },\n];\n\nexport const JSLibraries = [...defaultLibraries];\nexport const libraryReservedIdentifiers = defaultLibraries.reduce(\n  (acc, lib) => {\n    lib.accessor.forEach((a) => (acc[a] = true));\n    return acc;\n  },\n  {} as Record<string, boolean>,\n);\n\nexport function resetJSLibraries() {\n  JSLibraries.length = 0;\n  JSLibraries.push(...defaultLibraries);\n  const defaultLibraryAccessors = defaultLibraries.map(\n    (lib) => lib.accessor[0],\n  );\n  for (const key of Object.keys(libraryReservedIdentifiers)) {\n    if (defaultLibraryAccessors.includes(key)) continue;\n    try {\n      // @ts-expect-error: Types are not available\n      delete self[key];\n    } catch (e) {\n      // @ts-expect-error: Types are not available\n      self[key] = undefined;\n    }\n    delete libraryReservedIdentifiers[key];\n  }\n  JSLibraries.forEach((library) => {\n    // @ts-expect-error: Types are not available\n    self[library.accessor] = library.lib;\n  });\n}\n"],"names":["ReplayReduxActionTypes","ReduxActionTypes","TOGGLE_INSTALLER","FETCH_JS_LIBRARIES_INIT","FETCH_JS_LIBRARIES_SUCCESS","CLEAR_PROCESSED_INSTALLS","INSTALL_LIBRARY_INIT","INSTALL_LIBRARY_START","INSTALL_LIBRARY_SUCCESS","UNINSTALL_LIBRARY_INIT","UNINSTALL_LIBRARY_SUCCESS","GIT_DISCARD_CHANGES_SUCCESS","GIT_DISCARD_CHANGES","DELETE_BRANCH_INIT","DELETING_BRANCH","DELETE_BRANCH_SUCCESS","SHOW_RECONNECT_DATASOURCE_MODAL","RESET_UNCONCONFIGURED_DATASOURCES_LIST_DURING_IMPORT","RESET_DATASOURCE_CONFIG_FETCHED_FOR_IMPORT_FLAG","SET_UNCONFIGURED_DATASOURCES","SET_WORKSPACE_ID_FOR_IMPORT","SET_PAGE_ID_FOR_IMPORT","RESET_SSH_KEY_PAIR","GIT_INFO_INIT","IMPORT_APPLICATION_FROM_GIT_ERROR","IMPORT_APPLICATION_FROM_GIT_SUCCESS","IMPORT_APPLICATION_FROM_GIT_STATUS_RESET","UPDATE_DATASOURCE_IMPORT_SUCCESS","INIT_DATASOURCE_CONNECTION_DURING_IMPORT_REQUEST","INIT_DATASOURCE_CONNECTION_DURING_IMPORT_SUCCESS","SET_ENTITY_INFO","UPDATE_META_STATE","REVOKE_GIT","SHOW_CONNECT_GIT_MODAL","SET_SHOULD_SHOW_REPO_LIMIT_ERROR_MODAL","SET_SHOULD_SHOW_DISCONNECT_GIT_MODAL","RESET_PULL_MERGE_STATUS","GIT_PULL_INIT","GIT_PULL_SUCCESS","SET_APP_VERSION_ON_WORKER","CLEAR_COMMIT_ERROR_STATE","CLEAR_COMMIT_SUCCESSFUL_STATE","FETCH_MERGE_STATUS_INIT","FETCH_MERGE_STATUS_SUCCESS","RESET_MERGE_STATUS","MERGE_BRANCH_INIT","MERGE_BRANCH_SUCCESS","FETCH_GIT_STATUS_INIT","FETCH_GIT_STATUS_SUCCESS","UPDATE_BRANCH_LOCALLY","FETCH_BRANCHES_INIT","FETCH_BRANCHES_SUCCESS","APP_COLLAB_SET_CONCURRENT_PAGE_EDITORS","FETCH_SSH_KEY_PAIR_INIT","INIT_SSH_KEY_PAIR_WITH_NULL","FETCH_SSH_KEY_PAIR_SUCCESS","SET_IS_IMPORT_APP_VIA_GIT_MODAL_OPEN","FETCH_GLOBAL_GIT_CONFIG_INIT","FETCH_GLOBAL_GIT_CONFIG_SUCCESS","UPDATE_GLOBAL_GIT_CONFIG_INIT","UPDATE_GLOBAL_GIT_CONFIG_SUCCESS","FETCH_LOCAL_GIT_CONFIG_INIT","FETCH_LOCAL_GIT_CONFIG_SUCCESS","UPDATE_LOCAL_GIT_CONFIG_INIT","UPDATE_LOCAL_GIT_CONFIG_SUCCESS","SHOW_CREATE_GIT_BRANCH_POPUP","SHOW_ERROR_POPUP","CONNECT_TO_GIT_INIT","CONNECT_TO_GIT_SUCCESS","CREATE_NEW_BRANCH_INIT","SWITCH_GIT_BRANCH_INIT","COMMIT_TO_GIT_REPO_INIT","COMMIT_TO_GIT_REPO_SUCCESS","PUSH_TO_GIT_INIT","PUSH_TO_GIT_SUCCESS","SET_IS_GIT_SYNC_MODAL_OPEN","APP_COLLAB_LIST_EDITORS","APP_COLLAB_RESET_EDITORS","APP_COLLAB_SET_EDITORS_POINTER_DATA","APP_COLLAB_UNSET_EDITORS_POINTER_DATA","APP_COLLAB_RESET_EDITORS_POINTER_DATA","SET_SEARCH_FILTER_CONTEXT","INSERT_SNIPPET","CANCEL_SNIPPET","FETCH_FEATURE_FLAGS_INIT","FETCH_FEATURE_FLAGS_SUCCESS","BIND_DATA_TO_WIDGET","BIND_DATA_ON_CANVAS","SET_SHOW_APP_INVITE_USERS_MODAL","UPLOAD_PROFILE_PHOTO","REMOVE_PROFILE_PHOTO","UPDATE_PHOTO_ID","PROCEED_TO_NEXT_TOUR_STEP","SET_ACTIVE_TOUR","RESET_ACTIVE_TOUR","SET_ACTIVE_TOUR_INDEX","INIT_APP_LEVEL_SOCKET_CONNECTION","INIT_PAGE_LEVEL_SOCKET_CONNECTION","SET_IS_APP_LEVEL_WEBSOCKET_CONNECTED","SET_IS_PAGE_LEVEL_WEBSOCKET_CONNECTED","SET_SNIPING_MODE","RESET_SNIPING_MODE","RESET_EDITOR_REQUEST","RESET_EDITOR_SUCCESS","INITIALIZE_EDITOR","INITIALIZE_EDITOR_SUCCESS","REPORT_ERROR","FLUSH_ERRORS","FLUSH_AND_REDIRECT","REDIRECT_TO_NEW_INTEGRATIONS","SAFE_CRASH_APPSMITH","SAFE_CRASH_APPSMITH_REQUEST","INIT_CANVAS_LAYOUT","FETCH_CANVAS","CLEAR_CANVAS","FETCH_PAGE_INIT","FETCH_PAGE_SUCCESS","FETCH_ALL_PAGE_ENTITY_COMPLETION","DROP_WIDGET_CANVAS","REMOVE_WIDGET_CANVAS","LOAD_WIDGET_PANE","ZOOM_IN_CANVAS","ZOOM_OUT_CANVAS","START_CANVAS_SELECTION_FROM_EDITOR","STOP_CANVAS_SELECTION_FROM_EDITOR","START_CANVAS_SELECTION","STOP_CANVAS_SELECTION","UNDO_CANVAS_ACTION","REDO_CANVAS_ACTION","LOAD_WIDGET_CONFIG","LOAD_PROPERTY_CONFIG","UPDATE_APPLICATION","UPDATE_APP_LAYOUT","UPDATE_APPLICATION_SUCCESS","PUBLISH","DEBUGGER_LOG","DEBUGGER_LOG_INIT","DEBUGGER_ERROR_ANALYTICS","DEBUGGER_ADD_ERROR_LOGS","DEBUGGER_DELETE_ERROR_LOG","DEBUGGER_ADD_ERROR_LOG_INIT","DEBUGGER_DELETE_ERROR_LOG_INIT","CLEAR_DEBUGGER_LOGS","SHOW_DEBUGGER","HIDE_DEBUGGER_ERRORS","SET_CURRENT_DEBUGGER_TAB","SET_THEME","FETCH_WIDGET_CARDS","FETCH_WIDGET_CARDS_SUCCESS","ADD_PAGE_WIDGET","REMOVE_PAGE_WIDGET","LOAD_API_RESPONSE","LOAD_QUERY_RESPONSE","RUN_ACTION_SHORTCUT_REQUEST","RUN_ACTION_REQUEST","RUN_ACTION_CANCELLED","RUN_ACTION_SUCCESS","CLEAR_ACTION_RESPONSE","INIT_API_PANE","API_PANE_CHANGE_API","EXECUTE_TRIGGER_REQUEST","LOAD_CANVAS_ACTIONS","SAVE_PAGE_INIT","SAVE_PAGE_SUCCESS","UPDATE_LAYOUT","WIDGET_ADD_CHILD","WIDGET_CHILD_ADDED","WIDGET_REMOVE_CHILD","WIDGETS_MOVE","WIDGETS_ADD_CHILD_AND_MOVE","WIDGET_RESIZE","WIDGET_DELETE","WIDGET_BULK_DELETE","WIDGET_SINGLE_DELETE","SHOW_PROPERTY_PANE","UPDATE_CANVAS_LAYOUT","UPDATE_WIDGET_PROPERTY_REQUEST","UPDATE_WIDGET_PROPERTY","UPDATE_WIDGET_DYNAMIC_PROPERTY","BATCH_UPDATE_WIDGET_PROPERTY","BATCH_UPDATE_MULTIPLE_WIDGETS_PROPERTY","DELETE_WIDGET_PROPERTY","FETCH_PROPERTY_PANE_CONFIGS_INIT","FETCH_PROPERTY_PANE_CONFIGS_SUCCESS","FETCH_CONFIGS_INIT","ADD_WIDGET_REF","CREATE_ACTION_INIT","CREATE_ACTION_SUCCESS","FETCH_ACTIONS_INIT","FETCH_ACTIONS_SUCCESS","UPDATE_ACTION_INIT","UPDATE_ACTION_SUCCESS","DELETE_ACTION_INIT","SET_DATASOURCE_EDITOR_MODE","SET_DATASOURCE_COLLAPSIBLE_STATE","SET_ALL_DATASOURCE_COLLAPSIBLE_STATE","DELETE_ACTION_SUCCESS","SHOW_ACTION_MODAL","CANCEL_ACTION_MODAL","CONFIRM_ACTION_MODAL","CREATE_QUERY_INIT","ONBOARDING_CREATE_APPLICATION","LOAD_GUIDED_TOUR","LOAD_GUIDED_TOUR_INIT","SET_IS_RECONNECTING_DATASOURCES_MODAL_OPEN","FETCH_DATASOURCES_INIT","FETCH_DATASOURCES_SUCCESS","FETCH_MOCK_DATASOURCES_INIT","FETCH_MOCK_DATASOURCES_SUCCESS","ADD_MOCK_DATASOURCES_INIT","ADD_MOCK_DATASOURCES_SUCCESS","SAVE_DATASOURCE_NAME","SAVE_DATASOURCE_NAME_SUCCESS","UPDATE_DATASOURCE_NAME_SUCCESS","UPDATE_DATASOURCE_NAME","CREATE_DATASOURCE_INIT","CREATE_DATASOURCE_SUCCESS","CREATE_DATASOURCE_FROM_FORM_INIT","CREATE_TEMP_DATASOURCE_FROM_FORM_SUCCESS","UPDATE_DATASOURCE_INIT","UPDATE_DATASOURCE_SUCCESS","CHANGE_DATASOURCE","FETCH_DATASOURCE_STRUCTURE_INIT","FETCH_DATASOURCE_STRUCTURE_SUCCESS","REFRESH_DATASOURCE_STRUCTURE_INIT","REFRESH_DATASOURCE_STRUCTURE_SUCCESS","EXPAND_DATASOURCE_ENTITY","TEST_DATASOURCE_INIT","TEST_DATASOURCE_SUCCESS","FETCH_UNCONFIGURED_DATASOURCE_LIST","DELETE_DATASOURCE_DRAFT","UPDATE_DATASOURCE_DRAFT","FETCH_PUBLISHED_PAGE_INIT","FETCH_PUBLISHED_PAGE_SUCCESS","REDIRECT_AUTHORIZATION_CODE","REDIRECT_WINDOW_LOCATION","HISTORY_PUSH","DELETE_DATASOURCE_INIT","DELETE_DATASOURCE_SUCCESS","DELETE_DATASOURCE_CANCELLED","STORE_AS_DATASOURCE_INIT","STORE_AS_DATASOURCE_UPDATE","STORE_AS_DATASOURCE_COMPLETE","PUBLISH_APPLICATION_INIT","PUBLISH_APPLICATION_SUCCESS","CHANGE_APPVIEW_ACCESS_INIT","CHANGE_APPVIEW_ACCESS_SUCCESS","CREATE_PAGE_INIT","CREATE_PAGE_SUCCESS","FETCH_PAGE_LIST_INIT","FETCH_PAGE_LIST_SUCCESS","UPDATE_PAGE_LIST","INITIALIZE_PAGE_VIEWER","INITIALIZE_PAGE_VIEWER_SUCCESS","FETCH_APPLICATION_INIT","FETCH_APPLICATION_SUCCESS","INVITED_USERS_TO_WORKSPACE","CREATE_APPLICATION_INIT","CREATE_APPLICATION_SUCCESS","UPDATE_WIDGET_PROPERTY_VALIDATION","HIDE_PROPERTY_PANE","INIT_DATASOURCE_PANE","INIT_QUERY_PANE","QUERY_PANE_CHANGE","UPDATE_ROUTES_PARAMS","SET_EXTRA_FORMDATA","PERSIST_USER_SESSION","LOGIN_USER_INIT","LOGIN_USER_SUCCESS","CREATE_USER_INIT","CREATE_USER_SUCCESS","RESET_USER_PASSWORD_INIT","RESET_USER_PASSWORD_SUCCESS","FETCH_PLUGINS_REQUEST","FETCH_PLUGINS_SUCCESS","FETCH_PLUGIN_FORM_CONFIGS_REQUEST","FETCH_PLUGIN_FORM_CONFIGS_SUCCESS","FETCH_PLUGIN_FORM_SUCCESS","INVITE_USERS_TO_WORKSPACE_INIT","INVITE_USERS_TO_WORKSPACE_SUCCESS","FORGOT_PASSWORD_INIT","FORGOT_PASSWORD_SUCCESS","RESET_PASSWORD_VERIFY_TOKEN_SUCCESS","RESET_PASSWORD_VERIFY_TOKEN_INIT","EXECUTE_PAGE_LOAD_ACTIONS","SWITCH_WORKSPACE_INIT","SWITCH_WORKSPACE_SUCCESS","FETCH_WORKSPACE_ROLES_INIT","FETCH_WORKSPACE_ROLES_SUCCESS","FETCH_WORKSPACE_INIT","FETCH_WORKSPACE_SUCCESS","FETCH_WORKSPACES_SUCCESS","FETCH_WORKSPACES_INIT","SAVE_WORKSPACE_INIT","SAVE_WORKSPACE_SUCCESS","UPLOAD_WORKSPACE_LOGO","REMOVE_WORKSPACE_LOGO","SAVING_WORKSPACE_INFO","SET_LAST_UPDATED_TIME","SET_CURRENT_WORKSPACE","SET_CURRENT_WORKSPACE_ID","FETCH_CURRENT_WORKSPACE","STORE_DATASOURCE_REFS","UPDATE_DATASOURCE_REFS","FETCH_USER_INIT","PROP_PANE_MOVED","FETCH_USER_SUCCESS","SET_CURRENT_USER_INIT","SET_CURRENT_USER_SUCCESS","LOGOUT_USER_INIT","LOGOUT_USER_SUCCESS","VERIFY_INVITE_INIT","VERIFY_INVITE_SUCCESS","INVITED_USER_SIGNUP_SUCCESS","INVITED_USER_SIGNUP_INIT","DISABLE_WIDGET_DRAG","SELECT_WIDGET_INIT","FOCUS_WIDGET","SET_SELECTED_WIDGETS","SET_LAST_SELECTED_WIDGET","SET_WIDGET_DRAGGING","SET_DRAGGING_CANVAS","SET_NEW_WIDGET_DRAGGING","SET_WIDGET_RESIZING","ADD_SUGGESTED_WIDGET","MODIFY_META_WIDGETS","DELETE_META_WIDGETS","UPDATE_META_WIDGET_PROPERTY","SEARCH_APPLICATIONS","UPDATE_PAGE_INIT","UPDATE_PAGE_SUCCESS","MOVE_ACTION_INIT","MOVE_ACTION_SUCCESS","COPY_ACTION_INIT","COPY_ACTION_SUCCESS","DELETE_APPLICATION_INIT","DELETE_APPLICATION_SUCCESS","DUPLICATE_APPLICATION_INIT","DUPLICATE_APPLICATION_SUCCESS","DELETE_PAGE_INIT","DELETE_PAGE_SUCCESS","CLONE_PAGE_INIT","CLONE_PAGE_SUCCESS","SET_DEFAULT_APPLICATION_PAGE_INIT","SET_DEFAULT_APPLICATION_PAGE_SUCCESS","CREATE_WORKSPACE_INIT","CREATE_WORKSPACE_SUCCESS","ADD_USER_TO_WORKSPACE_INIT","ADD_USER_TO_WORKSPACE_SUCCESS","SET_META_PROP","SET_META_PROP_AND_EVAL","META_UPDATE_DEBOUNCED_EVAL","RESET_CHILDREN_WIDGET_META","RESET_WIDGET_META","RESET_WIDGET_META_EVALUATED","RESET_WIDGETS_META_STATE","UPDATE_WIDGET_NAME_INIT","UPDATE_WIDGET_NAME_SUCCESS","FETCH_ACTIONS_FOR_PAGE_INIT","FETCH_ACTIONS_FOR_PAGE_SUCCESS","EXECUTE_PLUGIN_ACTION_REQUEST","EXECUTE_PLUGIN_ACTION_SUCCESS","SET_ACTION_RESPONSE_DISPLAY_FORMAT","FETCH_IMPORTED_COLLECTIONS_INIT","FETCH_IMPORTED_COLLECTIONS_SUCCESS","SEARCH_APIORPROVIDERS_INIT","SEARCH_APIORPROVIDERS_SUCCESS","FETCH_PROVIDERS_INIT","FETCH_PROVIDERS_SUCCESS","SUBMIT_CURL_FORM_INIT","SUBMIT_CURL_FORM_SUCCESS","SET_WIDGET_DYNAMIC_PROPERTY","FETCH_PROVIDER_TEMPLATES_INIT","FETCH_PROVIDER_TEMPLATES_SUCCESS","ADD_API_TO_PAGE_INIT","ADD_API_TO_PAGE_SUCCESS","CLEAR_PREVIOUSLY_EXECUTED_QUERY","FETCH_PROVIDERS_CATEGORIES_INIT","FETCH_PROVIDERS_CATEGORIES_SUCCESS","FETCH_PROVIDERS_WITH_CATEGORY_INIT","FETCH_PROVIDERS_WITH_CATEGORY_SUCCESS","SHOW_MODAL","SHOW_MODAL_BY_NAME","CLOSE_MODAL","CREATE_MODAL_INIT","CREATE_MODAL_SUCCESS","UPDATE_CANVAS_SIZE","SWITCH_CURRENT_PAGE_ID","CLEAR_PROVIDERS","BATCHED_UPDATE","EXECUTE_BATCH","FETCH_ALL_PUBLISHED_PAGES","CREATE_NEW_API_ACTION","CREATE_NEW_QUERY_ACTION","SET_CURRENT_CATEGORY","SET_LAST_USED_EDITOR_PAGE","SET_LAST_SELECTED_PAGE_PAGE","FETCH_PROVIDER_DETAILS_BY_PROVIDER_ID_INIT","FETCH_PROVIDER_DETAILS_BY_PROVIDER_ID_SUCCESS","SET_PROVIDERS_LENGTH","GET_ALL_APPLICATION_INIT","FETCH_USER_APPLICATIONS_WORKSPACES_SUCCESS","FETCH_USER_DETAILS_SUCCESS","FETCH_ALL_USERS_SUCCESS","FETCH_ALL_USERS_INIT","FETCH_ALL_ROLES_SUCCESS","FETCH_ALL_ROLES_INIT","DELETE_WORKSPACE_USER_INIT","DELETE_WORKSPACE_USER_SUCCESS","LEAVE_WORKSPACE_INIT","CHANGE_WORKSPACE_USER_ROLE_INIT","CHANGE_WORKSPACE_USER_ROLE_SUCCESS","UPDATE_USER_DETAILS_INIT","UPDATE_USER_DETAILS_SUCCESS","SET_DEFAULT_REFINEMENT","SET_HELP_MODAL_OPEN","SAVE_ACTION_NAME_INIT","SAVE_ACTION_NAME_SUCCESS","UPDATE_API_NAME_DRAFT","SET_ACTION_PROPERTY","UPDATE_ACTION_PROPERTY","SWITCH_DATASOURCE","INIT_EXPLORER_ENTITY_NAME_EDIT","FETCH_ACTIONS_VIEW_MODE_INIT","FETCH_ACTIONS_VIEW_MODE_SUCCESS","END_EXPLORER_ENTITY_NAME_EDIT","POPULATE_PAGEDSLS_INIT","POPULATE_PAGEDSLS_SUCCESS","FETCH_PAGE_DSLS_SUCCESS","FETCH_PAGE_DSL_SUCCESS","SET_URL_DATA","SET_APP_MODE","TOGGLE_PROPERTY_PANE_WIDGET_NAME_EDIT","SET_PROPERTY_PANE_WIDTH","UPDATE_APP_STORE","SET_ACTION_TO_EXECUTE_ON_PAGELOAD","TOGGLE_ACTION_EXECUTE_ON_LOAD_SUCCESS","TOGGLE_ACTION_EXECUTE_ON_LOAD_INIT","COPY_SELECTED_WIDGET_SUCCESS","COPY_SELECTED_WIDGET_INIT","ADD_CANVAS_WIDGET","PASTE_COPIED_WIDGET_INIT","PASTE_COPIED_WIDGET_SUCCESS","CUT_SELECTED_WIDGET","SET_EVALUATED_TREE","SET_EVALUATION_INVERSE_DEPENDENCY_MAP","BATCH_UPDATES_SUCCESS","UPDATE_CANVAS_STRUCTURE","SET_SELECTED_WIDGET_ANCESTRY","START_EVALUATION","CURRENT_APPLICATION_NAME_UPDATE","CURRENT_APPLICATION_LAYOUT_UPDATE","CURRENT_APPLICATION_ICON_UPDATE","CURRENT_APPLICATION_EMBED_SETTING_UPDATE","FORK_APPLICATION_INIT","FORK_APPLICATION_SUCCESS","IMPORT_APPLICATION_INIT","IMPORT_APPLICATION_FROM_GIT_INIT","IMPORT_APPLICATION_SUCCESS","SET_WIDGET_LOADING","SET_GLOBAL_SEARCH_QUERY","SET_GLOBAL_SEARCH_CATEGORY","TOGGLE_SHOW_GLOBAL_SEARCH_MODAL","FETCH_RELEASES_SUCCESS","RESET_UNREAD_RELEASES_COUNT","SET_FORM_EVALUATION","INIT_FORM_EVALUATION","RUN_FORM_EVALUATION","SET_LOADING_ENTITIES","RESET_CURRENT_APPLICATION","SELECT_WIDGETS_IN_AREA","RESET_APPLICATION_WIDGET_STATE_REQUEST","SAAS_GET_OAUTH_ACCESS_TOKEN","GET_OAUTH_ACCESS_TOKEN","RESTORE_RECENT_ENTITIES_REQUEST","RESTORE_RECENT_ENTITIES_SUCCESS","SET_RECENT_ENTITIES","RESET_RECENT_ENTITIES","UPDATE_API_ACTION_BODY_CONTENT_TYPE","ADD_WIDGET_CONFIG","GENERATE_TEMPLATE_PAGE_INIT","GENERATE_TEMPLATE_PAGE_SUCCESS","SHOW_TABLE_FILTER_PANE","HIDE_TABLE_FILTER_PANE","TABLE_PANE_MOVED","FETCH_JS_ACTIONS_INIT","FETCH_JS_ACTIONS_SUCCESS","CREATE_NEW_JS_ACTION","CREATE_JS_ACTION_INIT","CREATE_JS_ACTION_SUCCESS","COPY_JS_ACTION_INIT","COPY_JS_ACTION_SUCCESS","MOVE_JS_ACTION_INIT","MOVE_JS_ACTION_SUCCESS","DELETE_JS_ACTION_INIT","DELETE_JS_ACTION_SUCCESS","PARSE_UPDATE_JS_ACTION","UPDATE_JS_ACTION_INIT","UPDATE_JS_ACTION_SUCCESS","EXECUTE_COMMAND","SAVE_JS_COLLECTION_NAME_INIT","FETCH_JS_ACTIONS_FOR_PAGE_INIT","FETCH_JS_ACTIONS_FOR_PAGE_SUCCESS","SAVE_JS_COLLECTION_NAME_SUCCESS","FETCH_JS_ACTIONS_VIEW_MODE_INIT","FETCH_JS_ACTIONS_VIEW_MODE_SUCCESS","EXECUTE_JS_FUNCTION_INIT","EXECUTE_JS_FUNCTION_SUCCESS","SET_JS_FUNCTION_EXECUTION_DATA","SET_JS_FUNCTION_EXECUTION_ERRORS","GET_PLUGIN_FORM_CONFIG_INIT","EXECUTE_DATASOURCE_QUERY_INIT","EXECUTE_DATASOURCE_QUERY_SUCCESS","UNDO_REDO_OPERATION","EVALUATE_SNIPPET","EVALUATE_ARGUMENT","SET_EVALUATED_SNIPPET","SET_EVALUATED_ARGUMENT","UNSET_EVALUATED_ARGUMENT","SET_CRUD_INFO_MODAL_OPEN","SET_PAGE_ORDER_INIT","SET_PAGE_ORDER_SUCCESS","GROUP_WIDGETS_INIT","WIDGET_ADD_NEW_TAB_CHILD","WIDGET_DELETE_TAB_CHILD","GENERATE_SSH_KEY_PAIR_INIT","SET_REMOTE_URL_INPUT_VALUE","GENERATE_SSH_KEY_PAIR_SUCCESS","REFACTOR_JS_ACTION_NAME","REFACTOR_JS_ACTION_NAME_SUCCESS","SET_HEADER_META","TOGGLE_ONBOARDING_WIDGET_SELECTION","SET_ENABLE_FIRST_TIME_USER_ONBOARDING","SET_FIRST_TIME_USER_ONBOARDING_APPLICATION_ID","SET_FIRST_TIME_USER_ONBOARDING_COMPLETE","SET_SHOW_FIRST_TIME_USER_ONBOARDING_MODAL","SET_FORCE_WIDGET_PANEL_OPEN","END_FIRST_TIME_USER_ONBOARDING","UNDO_END_FIRST_TIME_USER_ONBOARDING","FETCH_ADMIN_SETTINGS","FETCH_ADMIN_SETTINGS_SUCCESS","FETCH_ADMIN_SETTINGS_ERROR","SAVE_ADMIN_SETTINGS","SAVE_ADMIN_SETTINGS_SUCCESS","SAVE_ADMIN_SETTINGS_ERROR","DOWNLOAD_DOCKER_COMPOSE_FILE","TOGGLE_RELEASE_NOTES","FETCH_RELEASES","RESTART_SERVER_POLL","RETRY_RESTART_SERVER_POLL","SET_EXPLORER_PINNED","SET_EXPLORER_ACTIVE","SET_PREVIEW_MODE","SET_PREVIEW_MODE_INIT","SET_CANVAS_CARDS_STATE","DELETE_CANVAS_CARDS_STATE","UPDATE_EXPLORER_WIDTH","UPDATE_PROPERTY_PANE_WIDTH","FIRST_TIME_USER_ONBOARDING_INIT","SET_USER_ROLE_USECASE","UPDATE_JS_ACTION_BODY","UPDATE_JS_ACTION_BODY_INIT","UPDATE_JS_ACTION_BODY_SUCCESS","SEND_TEST_EMAIL","SET_FUNCTION_PROPERTY","UPDATE_JS_FUNCTION_PROPERTY_INIT","UPDATE_JS_FUNCTION_PROPERTY_SUCCESS","TOGGLE_FUNCTION_EXECUTE_ON_LOAD_INIT","TOGGLE_FUNCTION_EXECUTE_ON_LOAD_SUCCESS","SET_JS_ACTION_TO_EXECUTE_ON_PAGELOAD","ENABLE_GUIDED_TOUR","GUIDED_TOUR_MARK_STEP_COMPLETED","SET_CURRENT_STEP","SET_CURRENT_STEP_INIT","GUIDED_TOUR_ADD_WIDGET","TABLE_WIDGET_WAS_SELECTED","SET_UP_TOUR_APP","GUIDED_TOUR_TOGGLE_LOADER","TOGGLE_DEVIATION_DIALOG","TOGGLE_END_GUIDED_TOUR_DIALOG","SHOW_POST_COMPLETION_MESSAGE","GUIDED_TOUR_FOCUS_WIDGET","GUIDED_TOUR_SET_DATASOURCE_ID","FOCUS_WIDGET_PROPERTY","SHOW_INFO_MESSAGE","FORCE_SHOW_CONTENT","UPDATE_BUTTON_WIDGET_TEXT","UPDATE_REPLAY_ENTITY","DELETE_WORKSPACE_INIT","DELETE_WORKSPACE_SUCCESS","SET_USER_CURRENT_GEO_LOCATION","SET_DISCONNECTING_GIT_APPLICATION","SET_APP_THEMING_STACK","FETCH_APP_THEMES_INIT","FETCH_APP_THEMES_SUCCESS","SET_DEFAULT_SELECTED_THEME_INIT","FETCH_SELECTED_APP_THEME_INIT","FETCH_SELECTED_APP_THEME_SUCCESS","UPDATE_SELECTED_APP_THEME_INIT","UPDATE_SELECTED_APP_THEME_SUCCESS","CHANGE_SELECTED_APP_THEME_INIT","CHANGE_SELECTED_APP_THEME_SUCCESS","SET_PREVIEW_APP_THEME","SAVE_APP_THEME_INIT","SAVE_APP_THEME_SUCCESS","DELETE_APP_THEME_INIT","DELETE_APP_THEME_SUCCESS","RESET_APP_THEME_INIT","RESET_APP_THEME_SUCCESS","GET_ALL_TEMPLATES_INIT","GET_ALL_TEMPLATES_SUCCESS","UPDATE_TEMPLATE_FILTERS","SET_TEMPLATE_SEARCH_QUERY","IMPORT_TEMPLATE_TO_APPLICATION_INIT","IMPORT_TEMPLATE_TO_APPLICATION_SUCCESS","IMPORT_TEMPLATE_TO_WORKSPACE_INIT","IMPORT_TEMPLATE_TO_WORKSPACE_SUCCESS","SET_TEMPLATE_NOTIFICATION_SEEN","GET_TEMPLATE_NOTIFICATION_SEEN","GET_SIMILAR_TEMPLATES_INIT","GET_SIMILAR_TEMPLATES_SUCCESS","ENTITY_UPDATE_STARTED","ENTITY_UPDATE_SUCCESS","SET_APP_VIEWER_HEADER_HEIGHT","UPDATE_BETA_CARD_SHOWN","CLOSE_BETA_CARD_SHOWN","GET_DEFAULT_PLUGINS_REQUEST","GET_DEFAULT_PLUGINS_SUCCESS","GET_TEMPLATE_INIT","GET_TEMPLATE_SUCCESS","START_EXECUTE_JS_FUNCTION","RESET_PAGE_LIST","SET_ACTIVE_JS_ACTION","RECORD_RECENTLY_ADDED_WIDGET","REMOVE_FROM_RECENTLY_ADDED_WIDGET","SHOW_TEMPLATES_MODAL","GET_TEMPLATE_FILTERS_INIT","GET_TEMPLATE_FILTERS_SUCCESS","INIT_TRIGGER_VALUES","FETCH_TRIGGER_VALUES_INIT","FETCH_TRIGGER_VALUES_SUCCESS","SET_TRIGGER_VALUES_LOADING","OPEN_APP_SETTINGS_PANE","CLOSE_APP_SETTINGS_PANE","FETCH_CURRENT_TENANT_CONFIG","FETCH_CURRENT_TENANT_CONFIG_SUCCESS","SET_FOCUS_HISTORY","SET_FOCUSABLE_PROPERTY_FIELD","ROUTE_CHANGED","SET_API_PANE_CONFIG_SELECTED_TAB","SET_API_PANE_RESPONSE_SELECTED_TAB","SET_API_PANE_RESPONSE_PANE_HEIGHT","SET_API_RIGHT_PANE_SELECTED_TAB","SET_EDITOR_FIELD_FOCUS","SET_FOCUSABLE_INPUT_FIELD","SET_CODE_EDITOR_CURSOR","SET_CODE_EDITOR_CURSOR_HISTORY","SET_EVAL_POPUP_STATE","APPEND_SELECTED_WIDGET_TO_URL","SET_ALL_PROPERTY_SECTION_STATE","SET_PROPERTY_SECTION_STATE","SET_SELECTED_PROPERTY_TAB_INDEX","SET_CANVAS_DEBUGGER_SELECTED_TAB","SET_QUERY_PANE_CONFIG_SELECTED_TAB","SET_QUERY_PANE_RESPONSE_SELECTED_TAB","SET_QUERY_PANE_RESPONSE_PANE_HEIGHT","SET_JS_PANE_CONFIG_SELECTED_TAB","SET_JS_PANE_RESPONSE_SELECTED_TAB","SET_JS_PANE_RESPONSE_PANE_HEIGHT","SET_SELECTED_PANEL_PROPERTY","UNSET_SELECTED_PANEL_PROPERTY","SET_SELECTED_PANELS","SET_PANEL_SELECTED_PROPERTY_TAB_INDEX","SET_PANEL_PROPERTY_SECTION_STATE","SET_WIDGET_SELECTED_PROPERTY_TAB_INDEX","SET_WIDGET_PROPERTY_SECTION_STATE","SET_PANEL_PROPERTIES_STATE","SET_ENTITY_COLLAPSIBLE_STATE","SET_ALL_ENTITY_COLLAPSIBLE_STATE","SET_ALL_SUB_ENTITY_COLLAPSIBLE_STATE","SET_EXPLORER_SWITCH_INDEX","SET_AUTO_HEIGHT_LAYOUT_TREE","UPDATE_MULTIPLE_WIDGET_PROPERTIES","SET_CANVAS_LEVELS_MAP","GENERATE_AUTO_HEIGHT_LAYOUT_TREE","CHECK_CONTAINERS_FOR_AUTO_HEIGHT","UPDATE_WIDGET_AUTO_HEIGHT","SET_LINT_ERRORS","SET_AUTO_HEIGHT_WITH_LIMITS_CHANGING","PROCESS_AUTO_HEIGHT_UPDATES","LINT_TREE","UPDATE_LINT_GLOBALS","REMOVE_TEMP_DATASOURCE_SUCCESS","SET_DATASOURCE_SAVE_ACTION_FLAG","SET_DATASOURCE_SAVE_ACTION_FROM_POPUP_FLAG","DIRECT_DOM_UPDATE_AUTO_HEIGHT","SET_DATASOURCE_DEFAULT_KEY_VALUE_PAIR_SET","RESET_DATASOURCE_DEFAULT_KEY_VALUE_PAIR_SET","INITIALIZE_DATASOURCE_FORM_WITH_DEFAULTS","SEGMENT_INITIALIZED","SEGMENT_INIT_UNCERTAIN","SET_TABS_PANE_WIDTH","SET_PANE_COUNT","AUTOLAYOUT_REORDER_WIDGETS","AUTOLAYOUT_ADD_NEW_WIDGETS","RECALCULATE_COLUMNS","ReduxActionErrorTypes","GIT_DISCARD_CHANGES_ERROR","DELETE_BRANCH_WARNING","DELETE_BRANCH_ERROR","GIT_PULL_ERROR","FETCH_MERGE_STATUS_ERROR","MERGE_BRANCH_ERROR","FETCH_GIT_STATUS_ERROR","CREATE_NEW_BRANCH_ERROR","CHECKOUT_BRANCH_ERROR","FETCH_BRANCHES_ERROR","FETCH_LOCAL_GIT_CONFIG_ERROR","UPDATE_LOCAL_GIT_CONFIG_ERROR","PUSH_TO_GIT_ERROR","FETCH_SSH_KEY_PAIR_ERROR","UPDATE_GLOBAL_GIT_CONFIG_ERROR","FETCH_GLOBAL_GIT_CONFIG_ERROR","CONNECT_TO_GIT_ERROR","DISCONNECT_TO_GIT_ERROR","COMMIT_TO_GIT_REPO_ERROR","FETCH_FEATURE_FLAGS_ERROR","FETCH_NOTIFICATIONS_ERROR","MARK_ALL_NOTIFICAIONS_AS_READ_ERROR","FETCH_UNREAD_NOTIFICATIONS_COUNT_ERROR","INITIALIZE_APPSMITH_ERROR","API_ERROR","WIDGET_DELETE_ERROR","UPDATE_APPLICATION_ERROR","UPDATE_APP_LAYOUT_ERROR","WIDGET_MOVE_ERROR","WIDGET_RESIZE_ERROR","WIDGET_REMOVE_CHILD_ERROR","WIDGET_ADD_CHILD_ERROR","FETCH_PAGE_ERROR","SAVE_PAGE_ERROR","FETCH_WIDGET_CARDS_ERROR","WIDGET_OPERATION_ERROR","WIDGET_SELECTION_ERROR","FETCH_PROPERTY_PANE_CONFIGS_ERROR","FETCH_CONFIGS_ERROR","PROPERTY_PANE_ERROR","FETCH_ACTIONS_ERROR","FETCH_JS_ACTIONS_ERROR","UPDATE_WIDGET_PROPERTY_ERROR","CREATE_ACTION_ERROR","UPDATE_ACTION_ERROR","DELETE_ACTION_ERROR","RUN_ACTION_ERROR","EXECUTE_PLUGIN_ACTION_ERROR","FETCH_DATASOURCES_ERROR","FETCH_MOCK_DATASOURCES_ERROR","ADD_MOCK_DATASOURCES_ERROR","SEARCH_APIORPROVIDERS_ERROR","UPDATE_DATASOURCE_ERROR","SAVE_DATASOURCE_NAME_ERROR","UPDATE_DATASOURCE_NAME_ERROR","CREATE_DATASOURCE_ERROR","DELETE_DATASOURCE_ERROR","FETCH_DATASOURCE_STRUCTURE_ERROR","REFRESH_DATASOURCE_STRUCTURE_ERROR","CREATE_ONBOARDING_DBQUERY_ERROR","FETCH_PUBLISHED_PAGE_ERROR","PUBLISH_APPLICATION_ERROR","FETCH_USER_DETAILS_ERROR","CREATE_PAGE_ERROR","FETCH_PAGE_LIST_ERROR","FETCH_APPLICATION_ERROR","CREATE_APPLICATION_ERROR","LOGIN_USER_ERROR","CREATE_USER_ERROR","RESET_USER_PASSWORD_ERROR","CHANGE_WORKSPACE_USER_ROLE_ERROR","SAVE_JS_EXECUTION_RECORD","FETCH_PLUGINS_ERROR","FETCH_PLUGIN_FORM_CONFIGS_ERROR","UPDATE_WORKSPACE_NAME_ERROR","SWITCH_WORKSPACE_ERROR","TEST_DATASOURCE_ERROR","FORGOT_PASSWORD_ERROR","RESET_PASSWORD_VERIFY_TOKEN_ERROR","FETCH_WORKSPACE_ROLES_ERROR","INVITE_USERS_TO_WORKSPACE_ERROR","SAVE_WORKSPACE_ERROR","FETCH_WORKSPACE_ERROR","FETCH_WORKSPACES_ERROR","FETCH_USER_ERROR","SET_CURRENT_USER_ERROR","LOGOUT_USER_ERROR","VERIFY_INVITE_ERROR","UPDATE_PAGE_ERROR","MOVE_ACTION_ERROR","COPY_ACTION_ERROR","DELETE_PAGE_ERROR","CLONE_PAGE_ERROR","DELETE_APPLICATION_ERROR","DUPLICATE_APPLICATION_ERROR","SET_DEFAULT_APPLICATION_PAGE_ERROR","CREATE_WORKSPACE_ERROR","ADD_USER_TO_WORKSPACE_ERROR","UPDATE_WIDGET_NAME_ERROR","FETCH_ACTIONS_FOR_PAGE_ERROR","FETCH_IMPORTED_COLLECTIONS_ERROR","FETCH_PROVIDERS_ERROR","SUBMIT_CURL_FORM_ERROR","FETCH_PROVIDER_TEMPLATES_ERROR","ADD_API_TO_PAGE_ERROR","FETCH_PROVIDERS_CATEGORIES_ERROR","FETCH_PROVIDERS_WITH_CATEGORY_ERROR","CREATE_MODAL_ERROR","FETCH_PROVIDER_DETAILS_BY_PROVIDER_ID_ERROR","SAVE_ACTION_NAME_ERROR","FETCH_USER_APPLICATIONS_WORKSPACES_ERROR","FORK_APPLICATION_ERROR","IMPORT_APPLICATION_ERROR","FETCH_ALL_USERS_ERROR","FETCH_ALL_ROLES_ERROR","UPDATE_USER_DETAILS_ERROR","FETCH_ACTIONS_VIEW_MODE_ERROR","SAVE_API_NAME_ERROR","POPULATE_PAGEDSLS_ERROR","FETCH_PAGE_DSL_ERROR","TOGGLE_ACTION_EXECUTE_ON_LOAD_ERROR","COPY_SELECTED_WIDGET_ERROR","PASTE_COPIED_WIDGET_ERROR","FAILED_CORRECTING_BINDING_PATHS","CREATE_JS_ACTION_ERROR","UPDATE_JS_ACTION_ERROR","COPY_JS_ACTION_ERROR","MOVE_JS_ACTION_ERROR","DELETE_WORKSPACE_USER_ERROR","CHANGE_APPVIEW_ACCESS_ERROR","SAVE_JS_COLLECTION_NAME_ERROR","FETCH_JS_ACTIONS_FOR_PAGE_ERROR","FETCH_JS_ACTIONS_VIEW_MODE_ERROR","GENERATE_TEMPLATE_PAGE_ERROR","FETCH_PLUGIN_FORM_ERROR","EXECUTE_DATASOURCE_QUERY_ERROR","INVITED_USER_SIGNUP_ERROR","SET_PAGE_ORDER_ERROR","DELETE_JS_ACTION_ERROR","REFACTOR_JS_ACTION_NAME_ERROR","FETCH_RELEASES_ERROR","RESTART_SERVER_ERROR","UPDATE_JS_ACTION_BODY_ERROR","FETCH_APP_THEMES_ERROR","SET_DEFAULT_SELECTED_THEME_ERROR","FETCH_SELECTED_APP_THEME_ERROR","UPDATE_SELECTED_APP_THEME_ERROR","CHANGE_SELECTED_APP_THEME_ERROR","UPDATE_JS_FUNCTION_PROPERTY_ERROR","DELETE_WORKSPACE_ERROR","REFLOW_BETA_FLAGS_INIT_ERROR","SAVE_APP_THEME_ERROR","DELETE_APP_THEME_ERROR","GET_ALL_TEMPLATES_ERROR","GET_SIMILAR_TEMPLATES_ERROR","IMPORT_TEMPLATE_TO_ORGANISATION_ERROR","IMPORT_TEMPLATE_TO_APPLICATION_ERROR","IMPORT_TEMPLATE_TO_WORKSPACE_ERROR","GET_DEFAULT_PLUGINS_ERROR","GET_TEMPLATE_ERROR","GET_TEMPLATE_FILTERS_ERROR","FETCH_CURRENT_TENANT_CONFIG_ERROR","INSTALL_LIBRARY_FAILED","UNINSTALL_LIBRARY_FAILED","FETCH_JS_LIBRARIES_FAILED","FieldType","APPSMITH_GLOBAL_FUNCTIONS","navigateTo","showAlert","showModal","closeModal","storeValue","removeValue","clearStore","download","copyToClipboard","resetWidget","setInterval","clearInterval","postMessage","_objectSpread","none","integration","jsFunction","getGeolocation","watchGeolocation","stopWatchGeolocation","API","DB","SAAS","REMOTE","sectionName","id","children","label","configProperty","controlType","evaluationSubstitutionType","hidden","path","comparison","value","schema","key","placeholderText","subtitle","initialValue","dataType","THEMEING_TEXT_SIZES","invert","M","L","S","xs","sm","base","md","lg","xl","RenderModes","FontStyleTypes","TextSizes","GridDefaults","DEFAULT_CELL_SIZE","DEFAULT_WIDGET_WIDTH","DEFAULT_WIDGET_HEIGHT","DEFAULT_GRID_COLUMNS","DEFAULT_GRID_ROW_HEIGHT","CANVAS_EXTENSION_OFFSET","VIEW_MODE_MAIN_CANVAS_EXTENSION_OFFSET","MAIN_CANVAS_EXTENSION_OFFSET","MAIN_CONTAINER_WIDGET_ID","WidgetHeightLimits","MAX_HEIGHT_IN_ROWS","MIN_HEIGHT_IN_ROWS","MIN_CANVAS_HEIGHT_IN_ROWS","ValidationTypes","_defineProperty","actionPaths","appsmith","pageList","EXECUTION_PARAM_KEY","JAVASCRIPT_KEYWORDS","abstract","arguments","await","boolean","break","byte","case","catch","char","class","const","continue","debugger","default","delete","do","double","else","enum","eval","export","extends","false","final","finally","float","for","function","goto","if","implements","import","in","instanceof","int","interface","let","long","native","new","null","package","private","protected","public","return","self","short","static","super","switch","synchronized","this","throw","throws","transient","true","try","typeof","var","void","volatile","while","with","yield","DEDICATED_WORKER_GLOBAL_SCOPE_IDENTIFIERS","AbortController","AbortSignal","AggregateError","Array","ArrayBuffer","atob","Atomics","AudioData","AudioDecoder","AudioEncoder","BackgroundFetchManager","BackgroundFetchRecord","BackgroundFetchRegistration","BarcodeDetector","BigInt","BigInt64Array","BigUint64Array","Blob","Boolean","btoa","BroadcastChannel","ByteLengthQueuingStrategy","caches","CSSSkewX","CSSSkewY","Cache","CacheStorage","cancelAnimationFrame","CanvasFilter","CanvasGradient","CanvasPattern","clearTimeout","close","CloseEvent","CompressionStream","console","CountQueuingStrategy","createImageBitmap","CropTarget","crossOriginIsolated","Crypto","CryptoKey","CustomEvent","decodeURI","decodeURIComponent","DOMException","DOMMatrix","DOMMatrixReadOnly","DOMPoint","DOMPointReadOnly","DOMQuad","DOMRect","DOMRectReadOnly","DOMStringList","DataView","Date","DecompressionStream","DedicatedWorkerGlobalScope","encodeURI","encodeURIComponent","EncodedAudioChunk","EncodedVideoChunk","Error","ErrorEvent","escape","EvalError","Event","EventSource","EventTarget","fetch","File","FileList","FileReader","FileReaderSync","FileSystemDirectoryHandle","FileSystemFileHandle","FileSystemHandle","FileSystemSyncAccessHandle","FileSystemWritableFileStream","FinalizationRegistry","Float32Array","Float64Array","FontFace","FormData","Function","globalThis","hasOwnProperty","Headers","IDBCursor","IDBCursorWithValue","IDBDatabase","IDBFactory","IDBIndex","IDBKeyRange","IDBObjectStore","IDBOpenDBRequest","IDBRequest","IDBTransaction","IDBVersionChangeEvent","IdleDetector","ImageBitmap","ImageBitmapRenderingContext","ImageData","ImageDecoder","ImageTrack","ImageTrackList","importScripts","indexedDB","Infinity","Int8Array","Int16Array","Int32Array","Intl","isFinite","isNaN","isPrototypeOf","isSecureContext","JSON","Lock","LockManager","location","Map","Math","MediaCapabilities","MessageChannel","MessageEvent","MessagePort","NaN","name","navigator","NavigationPreloadManager","NavigatorUAData","NetworkInformation","Notification","Number","onmessage","onmessageerror","origin","Object","OffscreenCanvas","OffscreenCanvasRenderingContext2D","parseFloat","parseInt","Path2D","PaymentInstruments","Performance","PerformanceEntry","PerformanceMark","PerformanceMeasure","PerformanceObserver","PerformanceObserverEntryList","PerformanceResourceTiming","PerformanceServerTiming","PeriodicSyncManager","PermissionStatus","Permissions","ProgressEvent","Promise","PromiseRejectionEvent","Proxy","PushManager","PushSubscription","PushSubscriptionOptions","queueMicrotask","RTCEncodedAudioFrame","RTCEncodedVideoFrame","RangeError","ReadableByteStreamController","ReadableStream","ReadableStreamBYOBReader","ReadableStreamBYOBRequest","ReadableStreamDefaultController","ReadableStreamDefaultReader","ReferenceError","Reflect","RegExp","reportError","ReportingObserver","Request","requestAnimationFrame","Response","Scheduler","SecurityPolicyViolationEvent","Serial","SerialPort","ServiceWorkerRegistration","Set","setTimeout","StorageManager","String","structuredClone","SubtleCrypto","Symbol","SyncManager","SyntaxError","TaskController","TaskPriorityChangeEvent","TaskSignal","TextDecoder","TextDecoderStream","TextEncoder","TextEncoderStream","TextMetrics","toString","TransformStream","TransformStreamDefaultController","TrustedHTML","TrustedScript","TrustedScriptURL","trustedTypes","TrustedTypePolicy","TrustedTypePolicyFactory","TypeError","undefined","unescape","URIError","URL","URLPattern","URLSearchParams","USB","USBAlternateInterface","USBConfiguration","USBConnectionEvent","USBDevice","USBEndpoint","USBInTransferResult","USBInterface","USBIsochronousInTransferPacket","USBIsochronousInTransferResult","USBIsochronousOutTransferPacket","USBIsochronousOutTransferResult","USBOutTransferResult","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","UserActivation","VideoColorSpace","VideoDecoder","VideoEncoder","VideoFrame","WeakMap","WeakRef","WeakSet","WebAssembly","WebGL2RenderingContext","WebGLActiveInfo","WebGLBuffer","WebGLFramebuffer","WebGLProgram","WebGLQuery","WebGLRenderbuffer","WebGLRenderingContext","WebGLSampler","WebGLShader","WebGLShaderPrecisionFormat","WebGLSync","WebGLTexture","WebGLTransformFeedback","WebGLUniformLocation","WebGLVertexArrayObject","webkitRequestFileSystem","webkitRequestFileSystemSync","webkitResolveLocalFileSystemSyncURL","webkitResolveLocalFileSystemURL","WebSocket","WebTransport","WebTransportBidirectionalStream","WebTransportDatagramDuplexStream","WebTransportError","Worker","WorkerGlobalScope","WorkerLocation","WorkerNavigator","WritableStream","WritableStreamDefaultController","WritableStreamDefaultWriter","XMLHttpRequest","XMLHttpRequestEventTarget","XMLHttpRequestUpload","evaluationVersion","$isDataField","$isAsync","getBaseWidgetClassName","concat","formControlTypes","QUERY_DYNAMIC_TEXT","QUERY_DYNAMIC_INPUT_TEXT","PluginType","PluginName","PluginPackageName","PaginationType","SlashCommand","APP_MODE","ENTITY_TYPE","PLATFORM_ERROR","Severity","LOG_CATEGORY","setOverridingProperty","_ref","_propertyOverrideDepe","propertyName","overridingPropertyPaths","propertyOverrideDependency","type","overridingPropertyKey","OverridingPropertyType","DEFAULT","META","isArray","updatedOverridingProperty","_toConsumableArray","add","defaultPropertyName","push","memoize","widget","derivedProps","blockedDerivedProps","unInitializedDefaultProps","defaultMetaProps","WidgetFactory","getWidgetMetaPropertiesMap","derivedPropertyMap","getWidgetDerivedPropertiesMap","defaultProps","getWidgetDefaultPropertiesMap","propertyPaneConfigs","getWidgetPropertyPaneConfig","dynamicBindingPathList","getEntityDynamicBindingPathList","forEach","dynamicPath","propertyPath","propertyValue","_","stringify","keys","replace","widgetName","overridingMetaPropsMap","entries","_ref2","_slicedToArray","_getAllPathsFromPrope","getAllPathsFromPropertyConfig","bindingPaths","reactivePaths","triggerPaths","validationPaths","dataTreeWidgetWithoutMetaProps","WIDGET","dynamicPathsList","dynamicPropertyPathList","dynamicTriggerPathList","entityConfig","logBlackList","privateWidgets","maxSize","AuthType","AuthenticationStatus","isEmbeddedRestDatasource","val","datasourceConfiguration","checkPathsInConfig","config","configBindingPaths","configTriggerPaths","configValidationPaths","isBindProperty","isTriggerProperty","EvaluationSubstitutionType","TEMPLATE","validation","configReactivePaths","childHasPanelConfig","basePath","originalWidget","panelPropertyPath","widgetPanelPropertyValues","get","values","widgetPanelPropertyValue","panelIdPropertyName","panelConfig","panelConfigChildren","contentChildren","styleChildren","length","panelColumnConfig","isSectionHidden","panelColumnControlOrSectionConfig","panelColumnControlConfig","panelPropertyConfigPath","isControlHidden","_checkPathsInConfig","_childHasPanelConfig","panelBindingPaths","panelReactivePaths","panelTriggerPaths","panelValidationPaths","_checkPathsInConfig2","_childHasPanelConfig2","widgetConfig","defaultProperties","property","controlConfig","isHidden","_checkPathsInConfig3","resultingPaths","basePropertyPath","widgetPropertyValue","isUndefined","isObject","objectIndexPropertyPath","childPropertyConfig","childArrayPropertyPath","_checkPathsInConfig4","url","docsURL","description","icon","author","version","InstallState","initialState","isInstallerOpen","installationStatus","installedLibraries","defaultLibraries","map","lib","accessor","reservedNames","createImmerReducer","_createImmerReducer","state","action","payload","Queued","_action$payload","recommendedLibrary","recommendedLibraries","find","Success","unshift","Failed","includes","uLib","filter","getEntities","entities","getActions","actions","getJSCollections","jsActions","getPlugins","plugins","list","getDBPlugins","createSelector","plugin","getDBAndRemotePlugins","getCurrentPageId","dbPlugins","datasources","dbPluginIds","datasource","pluginId","pluginIds","currentPageId","getActionsForCurrentPage","_plugin$allowUserData","allowUserDatasources","pluginImages","_plugin$iconLocation","iconLocation","ImageAlt","pluginNames","pluginTemplates","templates","pluginResponseTypes","responseType","pluginDocumentationLinks","documentationLink","pluginIdGenerateCRUDPageEnabled","generateCRUDPageComponent","packageName","pageId","a","getJSCollectionsForCurrentPage","responses","data","getCanvasWidgets","canvasWidgets","getPageWidgets","ui","pageWidgets","getParentModalId","widgetsByPage","parentModalId","parentId","parentWidget","_parentWidget","_parentWidget2","getAllWidgetsMap","reduce","res","widgetId","_ref3","_ref4","widgetsMap","_ref5","_ref6","selectDatasourceIdToNameMap","_ref7","pages","page","pageName","widgets","explorer","entity","editingEntityName","editingEntityId","editingAction","actionItem","acc","pageCanvasStructure","canvasStructure","selectFeatureFlags","datasourceIdToNameMap","featureFlags","isJSEditorEnabled","JS_EDITOR","files","file","group","pluginType","JS","_datasourceIdToNameMa","sortBy","_file$group","toLowerCase","_file$entity$config","_file$entity$config$n","jsCollections","selectInstallationStatus","libraries","selectInstalledLibraries","statusMap","libs","libStatus","queuedInstalls","users","featureFlag","handlers","produce","NonSerialisableWidgetConfigs","_classCallCheck","_createClass","widgetType","widgetBuilder","derivedPropertiesMap","defaultPropertiesMap","metaPropertiesMap","propertyPaneConfig","propertyPaneContentConfig","propertyPaneStyleConfig","features","loadingProperties","stylesheetConfig","widgetTypes","widgetMap","set","stylesheetConfigMap","enhancedPropertyPaneConfig","enhancePropertyPaneConfig","serializablePropertyPaneConfig","convertFunctionsToString","finalPropertyPaneConfig","addPropertyConfigIds","propertyPaneConfigsMap","freeze","PropertyPaneConfigTypes","CONTENT","propertyPaneConfigWithIds","addSearchConfigToPanelConfig","propertyPaneContentConfigsMap","STYLE","propertyPaneStyleConfigsMap","propertyPaneSearchConfigsMap","generatePropertyPaneSearchConfig","getWidgetPropertyPaneContentConfig","getWidgetPropertyPaneStyleConfig","widgetConfigMap","nonSerialisableWidgetConfigMap","widgetData","renderMode","widgetProps","isVisible","buildWidget","ex","message","log","from","contentConfig","styleConfig","getWidgetPropertyPaneCombinedConfig","typeConfigMap","getWidgetTypes","derivedProperties","metaProperties","widgetDerivedPropertiesGetterMap","configItem","sectionConfig","_controlConfig$panelC","_controlConfig$panelC2","_controlConfig$panelC3","_controlConfig$panelC4","searchConfig","addSearchSpecificPropertiesToConfig","tag","collapsible","_controlConfig$panelC5","_controlConfig$panelC6","_controlConfig$panelC7","_controlConfig$panelC8","sectionOrControlConfig","generateReactKey","configType","registeredFeature","_config$sectionIndex","_config$sectionIndex$","sectionIndex","PropertyPaneConfigTemplates","apply","WidgetFeaturePropertyPaneEnhancements","_controlConfig$valida","_controlConfig$valida2","_controlConfig$valida3","FUNCTION","params","fn","fnString","_WidgetFactory$widget","isCanvas","RegisteredWidgetFeatures","DynamicHeight","DYNAMIC_HEIGHT","minDynamicHeight","maxDynamicHeight","dynamicHeight","FIXED","_config$features","_config$features$dyna","newProperties","defaultValue","AUTO_HEIGHT","defaults","shouldScrollContents","overflow","findAndUpdatePropertyPaneControlConfig","propertyPaneUpdates","_sectionConfig$childr","controlConfigIndex","findIndex","hideWhenDynamicHeightIsEnabled","props","AUTO_HEIGHT_WITH_LIMITS","update","dependencies","scrollContents","fixedFooter","options","helpText","updateHook","updates","bottomRow","topRow","minHeightInRows","helperText","postUpdateAction","INPUT_TEXT","FIXED_KEY_INPUT","DROP_DOWN","SWITCH","KEYVALUE_ARRAY","FILE_PICKER","CHECKBOX","NUMBER_INPUT","ARRAY_FIELD","WHERE_CLAUSE","ENTITY_SELECTOR","PAGINATION","SORTING","PROJECTION","ALPHANUMERIC","_ref$prefix","prefix","generate","SAFE_URL_PATTERN","DATA_URL_PATTERN","match","runFnDescriptor","onSuccessOrParams","onError","actionParams","isTrueObject","actionId","onSuccess","run","_x","_x2","_run","_asyncToGenerator","_regeneratorRuntime","mark","_callee","executor","response","_args","wrap","_context","prev","next","promisify","bind","sent","abrupt","t0","stop","clearFnDescriptor","clear","_clear","_callee2","_context2","copyToClipboardFnDescriptor","debug","format","_copyToClipboard","downloadFnDescriptor","_download","getGeoLocationFnDescriptor","successCallback","errorCallback","getGeoLocation","_getGeoLocation","_len","args","_key","watchGeoLocationFnDescriptor","onSuccessCallback","onErrorCallback","listenerId","watchGeoLocation","metaData","ExecutionMetaData","getExecutionMetaData","_len2","_key2","uniqueId","TriggerEmitter","emit","BatchKey","process_batched_triggers","trigger","messageHandler","event","messageId","setExecutionMetaData","triggerMeta","eventType","body","dataTreeEvaluator","error","removeEventListener","addEventListener","stopWatchGeoLocationFnDescriptor","stopWatchGeoLocation","_stopWatchGeoLocation","showModalFnDescriptor","modalName","_showModal","closeModalFnDescriptor","_closeModal","_args2","NavigationTargetType","navigateToFnDescriptor","pageNameOrUrl","target","SAME_WINDOW","_navigateTo","postWindowMessageFnDescriptor","source","targetOrigin","postWindowMessage","resetWidgetFnDescriptor","resetChildren","_resetWidget","showAlertFnDescriptor","style","_showAlert","storeFnDescriptor","persist","_storeValue","process_store_updates","removeValueFnDescriptor","_x3","_removeValue","store","_clearStore","_callee3","_context3","triggerPropertyName","fnDescriptor","actionDescription","evalContext","WorkerMessenger","request","method","MAIN_THREAD_ACTION","PROCESS_TRIGGER","createEvaluationContext","dataTree","evalTree","resolvedFunctions","isTriggerBased","assign","_internalSetTimeout","_internalClearTimeout","EventEmitter","priorityBatchedActionHandler","task","batchedData","logsHandler","deferredTask","timerId","deferredBatchedActionHandler","ping","PROCESS_LOGS","on","process_logs","storeUpdatesHandler","PROCESS_STORE_UPDATES","defaultTriggerHandler","PROCESS_BATCHED_TRIGGERS","fnExecutionDataHandler","d","JSExecutionData","e","JSExecutionErrors","PROCESS_JS_FUNCTION_EXECUTION","process_batched_fn_execution","postJSFunctionExecutionLog","fullName","saveExecutionData","jsObjectFunctionFactory","postProcessors","result","isPromise","then","p","postProcessor","findDuplicateIndex","arr","_uniqSet","currSetSize","i","size","countOccurrences","string","subString","allowOverlapping","maxLimit","n","pos","step","indexOf","indirectEval","script","lodashVersion","moment","parser","forge","JSLibraries","libraryReservedIdentifiers","resetJSLibraries","defaultLibraryAccessors","_i","_Object$keys","library"],"sourceRoot":""}