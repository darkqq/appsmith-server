{"version":3,"file":"static/js/243.8369a8e9.chunk.js","mappings":"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","sources":["../node_modules/@sentry/utils/src/misc.ts","../node_modules/@sentry/utils/src/node.ts","../node_modules/jshint/src/jshint.js","../node_modules/lodash/toPath.js","../node_modules/toposort/index.js","../node_modules/unescape-js/dist/index.js"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { Event, Integration, StackFrame, WrappedFunction } from '@sentry/types';\n\nimport { isNodeEnv } from './node';\nimport { snipLine } from './string';\n\n/** Internal */\ninterface SentryGlobal {\n  Sentry?: {\n    Integrations?: Integration[];\n  };\n  SENTRY_ENVIRONMENT?: string;\n  SENTRY_DSN?: string;\n  SENTRY_RELEASE?: {\n    id?: string;\n  };\n  __SENTRY__: {\n    globalEventProcessors: any;\n    hub: any;\n    logger: any;\n  };\n}\n\nconst fallbackGlobalObject = {};\n\n/**\n * Safely get global scope object\n *\n * @returns Global scope object\n */\nexport function getGlobalObject<T>(): T & SentryGlobal {\n  return (isNodeEnv()\n    ? global\n    : typeof window !== 'undefined'\n    ? window\n    : typeof self !== 'undefined'\n    ? self\n    : fallbackGlobalObject) as T & SentryGlobal;\n}\n\n/**\n * Extended Window interface that allows for Crypto API usage in IE browsers\n */\ninterface MsCryptoWindow extends Window {\n  msCrypto?: Crypto;\n}\n\n/**\n * UUID4 generator\n *\n * @returns string Generated UUID4.\n */\nexport function uuid4(): string {\n  const global = getGlobalObject() as MsCryptoWindow;\n  const crypto = global.crypto || global.msCrypto;\n\n  if (!(crypto === void 0) && crypto.getRandomValues) {\n    // Use window.crypto API if available\n    const arr = new Uint16Array(8);\n    crypto.getRandomValues(arr);\n\n    // set 4 in byte 7\n    // eslint-disable-next-line no-bitwise\n    arr[3] = (arr[3] & 0xfff) | 0x4000;\n    // set 2 most significant bits of byte 9 to '10'\n    // eslint-disable-next-line no-bitwise\n    arr[4] = (arr[4] & 0x3fff) | 0x8000;\n\n    const pad = (num: number): string => {\n      let v = num.toString(16);\n      while (v.length < 4) {\n        v = `0${v}`;\n      }\n      return v;\n    };\n\n    return (\n      pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) + pad(arr[5]) + pad(arr[6]) + pad(arr[7])\n    );\n  }\n  // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n  return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    // eslint-disable-next-line no-bitwise\n    const r = (Math.random() * 16) | 0;\n    // eslint-disable-next-line no-bitwise\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * Parses string form of URL into an object\n * // borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n * // intentionally using regex and not <a/> href parsing trick because React Native and other\n * // environments where DOM might not be available\n * @returns parsed URL object\n */\nexport function parseUrl(\n  url: string,\n): {\n  host?: string;\n  path?: string;\n  protocol?: string;\n  relative?: string;\n} {\n  if (!url) {\n    return {};\n  }\n\n  const match = url.match(/^(([^:/?#]+):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n\n  if (!match) {\n    return {};\n  }\n\n  // coerce to undefined values to empty string so we don't get 'undefined'\n  const query = match[6] || '';\n  const fragment = match[8] || '';\n  return {\n    host: match[4],\n    path: match[5],\n    protocol: match[2],\n    relative: match[5] + query + fragment, // everything minus origin\n  };\n}\n\n/**\n * Extracts either message or type+value from an event that can be used for user-facing logs\n * @returns event's description\n */\nexport function getEventDescription(event: Event): string {\n  if (event.message) {\n    return event.message;\n  }\n  if (event.exception && event.exception.values && event.exception.values[0]) {\n    const exception = event.exception.values[0];\n\n    if (exception.type && exception.value) {\n      return `${exception.type}: ${exception.value}`;\n    }\n    return exception.type || exception.value || event.event_id || '<unknown>';\n  }\n  return event.event_id || '<unknown>';\n}\n\n/** JSDoc */\ninterface ExtensibleConsole extends Console {\n  [key: string]: any;\n}\n\n/** JSDoc */\nexport function consoleSandbox(callback: () => any): any {\n  const global = getGlobalObject<Window>();\n  const levels = ['debug', 'info', 'warn', 'error', 'log', 'assert'];\n\n  if (!('console' in global)) {\n    return callback();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  const originalConsole = (global as any).console as ExtensibleConsole;\n  const wrappedLevels: { [key: string]: any } = {};\n\n  // Restore all wrapped console methods\n  levels.forEach(level => {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (level in (global as any).console && (originalConsole[level] as WrappedFunction).__sentry_original__) {\n      wrappedLevels[level] = originalConsole[level] as WrappedFunction;\n      originalConsole[level] = (originalConsole[level] as WrappedFunction).__sentry_original__;\n    }\n  });\n\n  // Perform callback manipulations\n  const result = callback();\n\n  // Revert restoration to wrapped state\n  Object.keys(wrappedLevels).forEach(level => {\n    originalConsole[level] = wrappedLevels[level];\n  });\n\n  return result;\n}\n\n/**\n * Adds exception values, type and value to an synthetic Exception.\n * @param event The event to modify.\n * @param value Value of the exception.\n * @param type Type of the exception.\n * @hidden\n */\nexport function addExceptionTypeValue(event: Event, value?: string, type?: string): void {\n  event.exception = event.exception || {};\n  event.exception.values = event.exception.values || [];\n  event.exception.values[0] = event.exception.values[0] || {};\n  event.exception.values[0].value = event.exception.values[0].value || value || '';\n  event.exception.values[0].type = event.exception.values[0].type || type || 'Error';\n}\n\n/**\n * Adds exception mechanism to a given event.\n * @param event The event to modify.\n * @param mechanism Mechanism of the mechanism.\n * @hidden\n */\nexport function addExceptionMechanism(\n  event: Event,\n  mechanism: {\n    [key: string]: any;\n  } = {},\n): void {\n  // TODO: Use real type with `keyof Mechanism` thingy and maybe make it better?\n  try {\n    // @ts-ignore Type 'Mechanism | {}' is not assignable to type 'Mechanism | undefined'\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    event.exception!.values![0].mechanism = event.exception!.values![0].mechanism || {};\n    Object.keys(mechanism).forEach(key => {\n      // @ts-ignore Mechanism has no index signature\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      event.exception!.values![0].mechanism[key] = mechanism[key];\n    });\n  } catch (_oO) {\n    // no-empty\n  }\n}\n\n/**\n * A safe form of location.href\n */\nexport function getLocationHref(): string {\n  try {\n    return document.location.href;\n  } catch (oO) {\n    return '';\n  }\n}\n\n// https://semver.org/#is-there-a-suggested-regular-expression-regex-to-check-a-semver-string\nconst SEMVER_REGEXP = /^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(?:-((?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+([0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$/;\n\n/**\n * Represents Semantic Versioning object\n */\ninterface SemVer {\n  major?: number;\n  minor?: number;\n  patch?: number;\n  prerelease?: string;\n  buildmetadata?: string;\n}\n\n/**\n * Parses input into a SemVer interface\n * @param input string representation of a semver version\n */\nexport function parseSemver(input: string): SemVer {\n  const match = input.match(SEMVER_REGEXP) || [];\n  const major = parseInt(match[1], 10);\n  const minor = parseInt(match[2], 10);\n  const patch = parseInt(match[3], 10);\n  return {\n    buildmetadata: match[5],\n    major: isNaN(major) ? undefined : major,\n    minor: isNaN(minor) ? undefined : minor,\n    patch: isNaN(patch) ? undefined : patch,\n    prerelease: match[4],\n  };\n}\n\nconst defaultRetryAfter = 60 * 1000; // 60 seconds\n\n/**\n * Extracts Retry-After value from the request header or returns default value\n * @param now current unix timestamp\n * @param header string representation of 'Retry-After' header\n */\nexport function parseRetryAfterHeader(now: number, header?: string | number | null): number {\n  if (!header) {\n    return defaultRetryAfter;\n  }\n\n  const headerDelay = parseInt(`${header}`, 10);\n  if (!isNaN(headerDelay)) {\n    return headerDelay * 1000;\n  }\n\n  const headerDate = Date.parse(`${header}`);\n  if (!isNaN(headerDate)) {\n    return headerDate - now;\n  }\n\n  return defaultRetryAfter;\n}\n\n/**\n * This function adds context (pre/post/line) lines to the provided frame\n *\n * @param lines string[] containing all lines\n * @param frame StackFrame that will be mutated\n * @param linesOfContext number of context lines we want to add pre/post\n */\nexport function addContextToFrame(lines: string[], frame: StackFrame, linesOfContext: number = 5): void {\n  const lineno = frame.lineno || 0;\n  const maxLines = lines.length;\n  const sourceLine = Math.max(Math.min(maxLines, lineno - 1), 0);\n\n  frame.pre_context = lines\n    .slice(Math.max(0, sourceLine - linesOfContext), sourceLine)\n    .map((line: string) => snipLine(line, 0));\n\n  frame.context_line = snipLine(lines[Math.min(maxLines - 1, sourceLine)], frame.colno || 0);\n\n  frame.post_context = lines\n    .slice(Math.min(sourceLine + 1, maxLines), sourceLine + 1 + linesOfContext)\n    .map((line: string) => snipLine(line, 0));\n}\n\n/**\n * Strip the query string and fragment off of a given URL or path (if present)\n *\n * @param urlPath Full URL or path, including possible query string and/or fragment\n * @returns URL or path without query string or fragment\n */\nexport function stripUrlQueryAndFragment(urlPath: string): string {\n  // eslint-disable-next-line no-useless-escape\n  return urlPath.split(/[\\?#]/, 1)[0];\n}\n","/**\n * Checks whether we're in the Node.js or Browser environment\n *\n * @returns Answer to given question\n */\nexport function isNodeEnv(): boolean {\n  return Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\n}\n\n/**\n * Requires a module which is protected against bundler minification.\n *\n * @param request The module path to resolve\n */\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nexport function dynamicRequire(mod: any, request: string): any {\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return mod.require(request);\n}\n","/*!\n * JSHint, by JSHint Community.\n *\n * Licensed under the MIT license.\n *\n * JSHint is a derivative work of JSLint:\n *\n *   Copyright (c) 2002 Douglas Crockford  (www.JSLint.com)\n *\n *   Permission is hereby granted, free of charge, to any person obtaining\n *   a copy of this software and associated documentation files (the \"Software\"),\n *   to deal in the Software without restriction, including without limitation\n *   the rights to use, copy, modify, merge, publish, distribute, sublicense,\n *   and/or sell copies of the Software, and to permit persons to whom\n *   the Software is furnished to do so, subject to the following conditions:\n *\n *   The above copyright notice and this permission notice shall be included\n *   in all copies or substantial portions of the Software.\n *\n *   THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n *   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n *   DEALINGS IN THE SOFTWARE.\n *\n */\n\n/*jshint quotmark:double */\n/*exported console */\n\nvar _            = require(\"lodash\");\nvar events       = require(\"events\");\nvar vars         = require(\"./vars.js\");\nvar messages     = require(\"./messages.js\");\nvar Lexer        = require(\"./lex.js\").Lexer;\nvar reg          = require(\"./reg.js\");\nvar state        = require(\"./state.js\").state;\nvar style        = require(\"./style.js\");\nvar options      = require(\"./options.js\");\nvar scopeManager = require(\"./scope-manager.js\");\nvar prodParams   = require(\"./prod-params.js\");\n\n// We need this module here because environments such as IE and Rhino\n// don't necessarilly expose the 'console' API and browserify uses\n// it to log things. It's a sad state of affair, really.\nvar console = require(\"console-browserify\");\n\n// We build the application inside a function so that we produce only a singleton\n// variable. That function will be invoked immediately, and its return value is\n// the JSHINT function itself.\n\nvar JSHINT = (function() {\n  \"use strict\";\n\n  var api, // Extension API\n\n    // These are operators that should not be used with the ! operator.\n    bang = {\n      \"<\"  : true,\n      \"<=\" : true,\n      \"==\" : true,\n      \"===\": true,\n      \"!==\": true,\n      \"!=\" : true,\n      \">\"  : true,\n      \">=\" : true,\n      \"+\"  : true,\n      \"-\"  : true,\n      \"*\"  : true,\n      \"/\"  : true,\n      \"%\"  : true\n    },\n\n    declared, // Globals that were declared using /*global ... */ syntax.\n\n    functions, // All of the functions\n\n    inblock,\n    indent,\n    lookahead,\n    lex,\n    member,\n    membersOnly,\n    predefined,    // Global variables defined by option\n\n    extraModules = [],\n    emitter = new events.EventEmitter();\n\n  function checkOption(name, isStable, t) {\n    var type, validNames;\n\n    if (isStable) {\n      type = \"\";\n      validNames = options.validNames;\n    } else {\n      type = \"unstable \";\n      validNames = options.unstableNames;\n    }\n\n    name = name.trim();\n\n    if (/^[+-]W\\d{3}$/g.test(name)) {\n      return true;\n    }\n\n    if (validNames.indexOf(name) === -1) {\n      if (t.type !== \"jslint\" && !_.has(options.removed, name)) {\n        error(\"E001\", t, type, name);\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function isString(obj) {\n    return Object.prototype.toString.call(obj) === \"[object String]\";\n  }\n\n  function isIdentifier(tkn, value) {\n    if (!tkn)\n      return false;\n\n    if (!tkn.identifier || tkn.value !== value)\n      return false;\n\n    return true;\n  }\n\n  /**\n   * ES3 defined a set of \"FutureReservedWords\" in order \"to allow for the\n   * possibility of future adoption of [proposed] extensions.\"\n   *\n   * ES5 reduced the set of FutureReservedWords, in some cases by using them to\n   * define new syntactic forms (e.g. `class` and `const`) and in other cases\n   * by simply allowing their use as Identifiers (e.g. `int` and `goto`).\n   * Separately, ES5 introduced new restrictions on certain tokens, but limited\n   * the restriction to strict mode code (e.g. `let` and `yield`).\n   *\n   * This function determines if a given token describes a reserved word\n   * according to the current state of the parser.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   * @param {Token} token\n   */\n  function isReserved(context, token) {\n    if (!token.reserved) {\n      return false;\n    }\n    var meta = token.meta;\n\n    if (meta && meta.isFutureReservedWord) {\n      if (state.inES5()) {\n        // ES3 FutureReservedWord in an ES5 environment.\n        if (!meta.es5) {\n          return false;\n        }\n\n        if (token.isProperty) {\n          return false;\n        }\n      }\n    } else if (meta && meta.es5 && !state.inES5()) {\n      return false;\n    }\n\n    // Some identifiers are reserved only within a strict mode environment.\n    if (meta && meta.strictOnly && state.inES5()) {\n      if (!state.option.strict && !state.isStrict()) {\n        return false;\n      }\n    }\n\n    if (token.id === \"await\" && (!(context & prodParams.async) && !state.option.module)) {\n      return false;\n    }\n\n    if (token.id === \"yield\" && (!(context & prodParams.yield))) {\n      return state.isStrict();\n    }\n\n    return true;\n  }\n\n  function supplant(str, data) {\n    return str.replace(/\\{([^{}]*)\\}/g, function(a, b) {\n      var r = data[b];\n      return typeof r === \"string\" || typeof r === \"number\" ? r : a;\n    });\n  }\n\n  function combine(dest, src) {\n    Object.keys(src).forEach(function(name) {\n      if (_.has(JSHINT.blacklist, name)) return;\n      dest[name] = src[name];\n    });\n  }\n\n  function processenforceall() {\n    if (state.option.enforceall) {\n      for (var enforceopt in options.bool.enforcing) {\n        if (state.option[enforceopt] === undefined &&\n            !options.noenforceall[enforceopt]) {\n          state.option[enforceopt] = true;\n        }\n      }\n      for (var relaxopt in options.bool.relaxing) {\n        if (state.option[relaxopt] === undefined) {\n          state.option[relaxopt] = false;\n        }\n      }\n    }\n  }\n\n  /**\n   * Apply all linting options according to the status of the `state` object.\n   */\n  function applyOptions() {\n    var badESOpt = null;\n    processenforceall();\n\n    /**\n     * TODO: Remove in JSHint 3\n     */\n    badESOpt = state.inferEsVersion();\n    if (badESOpt) {\n      quit(\"E059\", state.tokens.next, \"esversion\", badESOpt);\n    }\n\n    if (state.inES5()) {\n      combine(predefined, vars.ecmaIdentifiers[5]);\n    }\n\n    if (state.inES6()) {\n      combine(predefined, vars.ecmaIdentifiers[6]);\n    }\n\n    if (state.inES8()) {\n      combine(predefined, vars.ecmaIdentifiers[8]);\n    }\n\n    if (state.inES11()) {\n      combine(predefined, vars.ecmaIdentifiers[11]);\n    }\n\n    /**\n     * Use `in` to check for the presence of any explicitly-specified value for\n     * `globalstrict` because both `true` and `false` should trigger an error.\n     */\n    if (state.option.strict === \"global\" && \"globalstrict\" in state.option) {\n      quit(\"E059\", state.tokens.next, \"strict\", \"globalstrict\");\n    }\n\n    if (state.option.module) {\n      /**\n       * TODO: Extend this restriction to *all* ES6-specific options.\n       */\n      if (!state.inES6()) {\n        warning(\"W134\", state.tokens.next, \"module\", 6);\n      }\n    }\n\n    if (state.option.regexpu) {\n      /**\n       * TODO: Extend this restriction to *all* ES6-specific options.\n       */\n      if (!state.inES6()) {\n        warning(\"W134\", state.tokens.next, \"regexpu\", 6);\n      }\n    }\n\n    if (state.option.couch) {\n      combine(predefined, vars.couch);\n    }\n\n    if (state.option.qunit) {\n      combine(predefined, vars.qunit);\n    }\n\n    if (state.option.rhino) {\n      combine(predefined, vars.rhino);\n    }\n\n    if (state.option.shelljs) {\n      combine(predefined, vars.shelljs);\n      combine(predefined, vars.node);\n    }\n    if (state.option.typed) {\n      combine(predefined, vars.typed);\n    }\n\n    if (state.option.phantom) {\n      combine(predefined, vars.phantom);\n    }\n\n    if (state.option.prototypejs) {\n      combine(predefined, vars.prototypejs);\n    }\n\n    if (state.option.node) {\n      combine(predefined, vars.node);\n      combine(predefined, vars.typed);\n    }\n\n    if (state.option.devel) {\n      combine(predefined, vars.devel);\n    }\n\n    if (state.option.dojo) {\n      combine(predefined, vars.dojo);\n    }\n\n    if (state.option.browser) {\n      combine(predefined, vars.browser);\n      combine(predefined, vars.typed);\n    }\n\n    if (state.option.browserify) {\n      combine(predefined, vars.browser);\n      combine(predefined, vars.typed);\n      combine(predefined, vars.browserify);\n    }\n\n    if (state.option.nonstandard) {\n      combine(predefined, vars.nonstandard);\n    }\n\n    if (state.option.jasmine) {\n      combine(predefined, vars.jasmine);\n    }\n\n    if (state.option.jquery) {\n      combine(predefined, vars.jquery);\n    }\n\n    if (state.option.mootools) {\n      combine(predefined, vars.mootools);\n    }\n\n    if (state.option.worker) {\n      combine(predefined, vars.worker);\n    }\n\n    if (state.option.wsh) {\n      combine(predefined, vars.wsh);\n    }\n\n    if (state.option.yui) {\n      combine(predefined, vars.yui);\n    }\n\n    if (state.option.mocha) {\n      combine(predefined, vars.mocha);\n    }\n  }\n\n  // Produce an error warning.\n  function quit(code, token, a, b) {\n    var percentage = Math.floor((token.line / state.lines.length) * 100);\n    var message = messages.errors[code].desc;\n\n    var exception = {\n      name: \"JSHintError\",\n      line: token.line,\n      character: token.from,\n      message: message + \" (\" + percentage + \"% scanned).\",\n      raw: message,\n      code: code,\n      a: a,\n      b: b\n    };\n\n    exception.reason = supplant(message, exception) + \" (\" + percentage +\n      \"% scanned).\";\n\n    throw exception;\n  }\n\n  function removeIgnoredMessages() {\n    var ignored = state.ignoredLines;\n\n    if (_.isEmpty(ignored)) return;\n    JSHINT.errors = _.reject(JSHINT.errors, function(err) { return ignored[err.line] });\n  }\n\n  function warning(code, t, a, b, c, d) {\n    var ch, l, w, msg;\n\n    if (/^W\\d{3}$/.test(code)) {\n      if (state.ignored[code])\n        return;\n\n      msg = messages.warnings[code];\n    } else if (/E\\d{3}/.test(code)) {\n      msg = messages.errors[code];\n    } else if (/I\\d{3}/.test(code)) {\n      msg = messages.info[code];\n    }\n\n    t = t || state.tokens.next || {};\n    if (t.id === \"(end)\") {  // `~\n      t = state.tokens.curr;\n    }\n\n    l = t.line;\n    ch = t.from;\n\n    w = {\n      id: \"(error)\",\n      raw: msg.desc,\n      code: msg.code,\n      evidence: state.lines[l - 1] || \"\",\n      line: l,\n      character: ch,\n      scope: JSHINT.scope,\n      a: a,\n      b: b,\n      c: c,\n      d: d\n    };\n\n    w.reason = supplant(msg.desc, w);\n    JSHINT.errors.push(w);\n\n    removeIgnoredMessages();\n\n    var errors = JSHINT.errors.filter(function(e) { return /E\\d{3}/.test(e.code); });\n    if (errors.length >= state.option.maxerr) {\n      quit(\"E043\", t);\n    }\n    return w;\n  }\n\n  function warningAt(m, l, ch, a, b, c, d) {\n    return warning(m, {\n      line: l,\n      from: ch\n    }, a, b, c, d);\n  }\n\n  function error(m, t, a, b, c, d) {\n    warning(m, t, a, b, c, d);\n  }\n\n  function errorAt(m, l, ch, a, b, c, d) {\n    return error(m, {\n      line: l,\n      from: ch\n    }, a, b, c, d);\n  }\n\n  // Tracking of \"internal\" scripts, like eval containing a static string\n  function addEvalCode(elem, token) {\n    JSHINT.internals.push({\n      id: \"(internal)\",\n      elem: elem,\n      token: token,\n      code: token.value.replace(/([^\\\\])(\\\\*)\\2\\\\n/g, \"$1\\n\")\n    });\n  }\n\n  /**\n   * Process an inline linting directive\n   *\n   * @param {Token} directiveToken - the directive-bearing comment token\n   * @param {Token} previous - the token that preceeds the directive\n   */\n  function lintingDirective(directiveToken, previous) {\n    var body = directiveToken.body.split(\",\")\n      .map(function(s) { return s.trim(); });\n    var predef = {};\n\n    if (directiveToken.type === \"falls through\") {\n      previous.caseFallsThrough = true;\n      return;\n    }\n\n    if (directiveToken.type === \"globals\") {\n      body.forEach(function(item, idx) {\n        var parts = item.split(\":\");\n        var key = parts[0].trim();\n\n        if (key === \"-\" || !key.length) {\n          // Ignore trailing comma\n          if (idx > 0 && idx === body.length - 1) {\n            return;\n          }\n          error(\"E002\", directiveToken);\n          return;\n        }\n\n        if (key.charAt(0) === \"-\") {\n          key = key.slice(1);\n\n          JSHINT.blacklist[key] = key;\n          delete predefined[key];\n        } else {\n          predef[key] = parts.length > 1 && parts[1].trim() === \"true\";\n        }\n      });\n\n      combine(predefined, predef);\n\n      for (var key in predef) {\n        if (_.has(predef, key)) {\n          declared[key] = directiveToken;\n        }\n      }\n    }\n\n    if (directiveToken.type === \"exported\") {\n      body.forEach(function(e, idx) {\n        if (!e.length) {\n          // Ignore trailing comma\n          if (idx > 0 && idx === body.length - 1) {\n            return;\n          }\n          error(\"E002\", directiveToken);\n          return;\n        }\n\n        state.funct[\"(scope)\"].addExported(e);\n      });\n    }\n\n    if (directiveToken.type === \"members\") {\n      membersOnly = membersOnly || {};\n\n      body.forEach(function(m) {\n        var ch1 = m.charAt(0);\n        var ch2 = m.charAt(m.length - 1);\n\n        if (ch1 === ch2 && (ch1 === \"\\\"\" || ch1 === \"'\")) {\n          m = m\n            .substr(1, m.length - 2)\n            .replace(\"\\\\\\\"\", \"\\\"\");\n        }\n\n        membersOnly[m] = false;\n      });\n    }\n\n    var numvals = [\n      \"maxstatements\",\n      \"maxparams\",\n      \"maxdepth\",\n      \"maxcomplexity\",\n      \"maxerr\",\n      \"maxlen\",\n      \"indent\"\n    ];\n\n    if (directiveToken.type === \"jshint\" || directiveToken.type === \"jslint\" ||\n      directiveToken.type === \"jshint.unstable\") {\n      body.forEach(function(item) {\n        var parts = item.split(\":\");\n        var key = parts[0].trim();\n        var val = parts.length > 1 ? parts[1].trim() : \"\";\n        var numberVal;\n\n        if (!checkOption(key, directiveToken.type !== \"jshint.unstable\", directiveToken)) {\n          return;\n        }\n\n        if (numvals.indexOf(key) >= 0) {\n          // GH988 - numeric options can be disabled by setting them to `false`\n          if (val !== \"false\") {\n            numberVal = +val;\n\n            if (typeof numberVal !== \"number\" || !isFinite(numberVal) ||\n              numberVal <= 0 || Math.floor(numberVal) !== numberVal) {\n              error(\"E032\", directiveToken, val);\n              return;\n            }\n\n            state.option[key] = numberVal;\n          } else {\n            state.option[key] = key === \"indent\" ? 4 : false;\n          }\n\n          return;\n        }\n\n        if (key === \"validthis\") {\n          // `validthis` is valid only within a function scope.\n\n          if (state.funct[\"(global)\"])\n            return void error(\"E009\");\n\n          if (val !== \"true\" && val !== \"false\")\n            return void error(\"E002\", directiveToken);\n\n          state.option.validthis = (val === \"true\");\n          return;\n        }\n\n        if (key === \"quotmark\") {\n          switch (val) {\n          case \"true\":\n          case \"false\":\n            state.option.quotmark = (val === \"true\");\n            break;\n          case \"double\":\n          case \"single\":\n            state.option.quotmark = val;\n            break;\n          default:\n            error(\"E002\", directiveToken);\n          }\n          return;\n        }\n\n        if (key === \"shadow\") {\n          switch (val) {\n          case \"true\":\n            state.option.shadow = true;\n            break;\n          case \"outer\":\n            state.option.shadow = \"outer\";\n            break;\n          case \"false\":\n          case \"inner\":\n            state.option.shadow = \"inner\";\n            break;\n          default:\n            error(\"E002\", directiveToken);\n          }\n          return;\n        }\n\n        if (key === \"unused\") {\n          switch (val) {\n          case \"true\":\n            state.option.unused = true;\n            break;\n          case \"false\":\n            state.option.unused = false;\n            break;\n          case \"vars\":\n          case \"strict\":\n            state.option.unused = val;\n            break;\n          default:\n            error(\"E002\", directiveToken);\n          }\n          return;\n        }\n\n        if (key === \"latedef\") {\n          switch (val) {\n          case \"true\":\n            state.option.latedef = true;\n            break;\n          case \"false\":\n            state.option.latedef = false;\n            break;\n          case \"nofunc\":\n            state.option.latedef = \"nofunc\";\n            break;\n          default:\n            error(\"E002\", directiveToken);\n          }\n          return;\n        }\n\n        if (key === \"ignore\") {\n          switch (val) {\n          case \"line\":\n            state.ignoredLines[directiveToken.line] = true;\n            removeIgnoredMessages();\n            break;\n          default:\n            error(\"E002\", directiveToken);\n          }\n          return;\n        }\n\n        if (key === \"strict\") {\n          switch (val) {\n          case \"true\":\n            state.option.strict = true;\n            break;\n          case \"false\":\n            state.option.strict = false;\n            break;\n          case \"global\":\n          case \"implied\":\n            state.option.strict = val;\n            break;\n          default:\n            error(\"E002\", directiveToken);\n          }\n          return;\n        }\n\n        if (key === \"module\") {\n          /**\n           * TODO: Extend this restriction to *all* \"environmental\" options.\n           */\n          if (!hasParsedCode(state.funct)) {\n            error(\"E055\", directiveToken, \"module\");\n          }\n        }\n\n        if (key === \"esversion\") {\n          switch (val) {\n          case \"3\":\n          case \"5\":\n          case \"6\":\n          case \"7\":\n          case \"8\":\n          case \"9\":\n          case \"10\":\n          case \"11\":\n            state.option.moz = false;\n            state.option.esversion = +val;\n            break;\n          case \"2015\":\n          case \"2016\":\n          case \"2017\":\n          case \"2018\":\n          case \"2019\":\n          case \"2020\":\n            state.option.moz = false;\n            // Translate specification publication year to version number.\n            state.option.esversion = +val - 2009;\n            break;\n          default:\n            error(\"E002\", directiveToken);\n          }\n          if (!hasParsedCode(state.funct)) {\n            error(\"E055\", directiveToken, \"esversion\");\n          }\n          return;\n        }\n\n        var match = /^([+-])(W\\d{3})$/g.exec(key);\n        if (match) {\n          // ignore for -W..., unignore for +W...\n          state.ignored[match[2]] = (match[1] === \"-\");\n          return;\n        }\n\n        var tn;\n        if (val === \"true\" || val === \"false\") {\n          if (directiveToken.type === \"jslint\") {\n            tn = options.renamed[key] || key;\n            state.option[tn] = (val === \"true\");\n\n            if (options.inverted[tn] !== undefined) {\n              state.option[tn] = !state.option[tn];\n            }\n          } else if (directiveToken.type === \"jshint.unstable\") {\n            /* istanbul ignore next */\n            state.option.unstable[key] = (val === \"true\");\n          } else {\n            state.option[key] = (val === \"true\");\n          }\n\n          return;\n        }\n\n        error(\"E002\", directiveToken);\n      });\n\n      applyOptions();\n    }\n  }\n\n  /**\n   * Return a token beyond the token available in `state.tokens.next`. If no\n   * such token exists, return the \"(end)\" token. This function is used to\n   * determine parsing strategies in cases where the value of the next token\n   * does not provide sufficient information, as is the case with `for` loops,\n   * e.g.:\n   *\n   *     for ( var i in ...\n   *\n   * versus:\n   *\n   *     for ( var i = ...\n   *\n   * @param {number} [p] - offset of desired token; defaults to 0\n   *\n   * @returns {token}\n   */\n  function peek(p) {\n    var i = p || 0, j = lookahead.length, t;\n\n    if (i < j) {\n      return lookahead[i];\n    }\n\n    while (j <= i) {\n      t = lex.token();\n\n      // When the lexer is exhausted, this function should produce the \"(end)\"\n      // token, even in cases where the requested token is beyond the end of\n      // the input stream.\n      if (!t) {\n        // If the lookahead buffer is empty, the expected \"(end)\" token was\n        // already emitted by the most recent invocation of `advance` and is\n        // available as the next token.\n        if (!lookahead.length) {\n          return state.tokens.next;\n        }\n\n        return lookahead[j - 1];\n      }\n\n      lookahead[j] = t;\n      j += 1;\n    }\n\n    return t;\n  }\n\n  function peekIgnoreEOL() {\n    var i = 0;\n    var t;\n    do {\n      t = peek(i++);\n    } while (t.id === \"(endline)\");\n    return t;\n  }\n\n  /**\n   * Consume the next token.\n   *\n   * @param {string} [expected] - the expected value of the next token's `id`\n   *                              property (in the case of punctuators) or\n   *                              `value` property (in the case of identifiers\n   *                              and literals); if unspecified, any token will\n   *                              be accepted\n   * @param {object} [relatedToken] - the token that informed the expected\n   *                                  value, if any (for example: the opening\n   *                                  brace when a closing brace is expected);\n   *                                  used to produce more meaningful errors\n   */\n  function advance(expected, relatedToken) {\n    var nextToken = state.tokens.next;\n\n    if (expected && nextToken.id !== expected) {\n      if (relatedToken) {\n        if (nextToken.id === \"(end)\") {\n          error(\"E019\", relatedToken, relatedToken.id);\n        } else {\n          error(\"E020\", nextToken, expected, relatedToken.id,\n            relatedToken.line, nextToken.value);\n        }\n      } else if (nextToken.type !== \"(identifier)\" || nextToken.value !== expected) {\n        error(\"E021\", nextToken, expected, nextToken.value);\n      }\n    }\n\n    state.tokens.prev = state.tokens.curr;\n    state.tokens.curr = state.tokens.next;\n    for (;;) {\n      state.tokens.next = lookahead.shift() || lex.token();\n\n      if (!state.tokens.next) { // No more tokens left, give up\n        quit(\"E041\", state.tokens.curr);\n      }\n\n      if (state.tokens.next.id === \"(end)\" || state.tokens.next.id === \"(error)\") {\n        return;\n      }\n\n      if (state.tokens.next.check) {\n        state.tokens.next.check();\n      }\n\n      if (state.tokens.next.isSpecial) {\n        lintingDirective(state.tokens.next, state.tokens.curr);\n      } else {\n        if (state.tokens.next.id !== \"(endline)\") {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * Determine whether a given token is an operator.\n   *\n   * @param {token} token\n   *\n   * @returns {boolean}\n   */\n  function isOperator(token) {\n    return token.first || token.right || token.left || token.id === \"yield\" || token.id === \"await\";\n  }\n\n  function isEndOfExpr(context, curr, next) {\n    if (arguments.length <= 1) {\n      curr = state.tokens.curr;\n      next = state.tokens.next;\n    }\n\n    if (next.id === \"in\" && context & prodParams.noin) {\n      return true;\n    }\n\n    if (next.id === \";\" || next.id === \"}\" || next.id === \":\") {\n      return true;\n    }\n\n    if (next.infix === curr.infix ||\n      // Infix operators which follow `yield` should only be consumed as part\n      // of the current expression if allowed by the syntactic grammar. In\n      // effect, this prevents automatic semicolon insertion when `yield` is\n      // followed by a newline and a comma operator (without enabling it when\n      // `yield` is followed by a newline and a `[` token).\n      (curr.id === \"yield\" && curr.rbp < next.rbp)) {\n      return !sameLine(curr, next);\n    }\n\n    return false;\n  }\n\n  /**\n   * The `expression` function is the heart of JSHint's parsing behaior. It is\n   * based on the Pratt parser, but it extends that model with a `fud` method.\n   * Short for \"first null denotation,\" it it similar to the `nud` (\"null\n   * denotation\") function, but it is only used on the first token of a\n   * statement. This simplifies usage in statement-oriented languages like\n   * JavaScript.\n   *\n   * .nud  Null denotation\n   * .fud  First null denotation\n   * .led  Left denotation\n   *  lbp  Left binding power\n   *  rbp  Right binding power\n   *\n   * They are elements of the parsing method called Top Down Operator Precedence.\n   *\n   * In addition to parsing, this function applies a number of linting patterns.\n   *\n   * @param {number} context - the parsing context (a bitfield describing\n   *                           conditions of the current parsing operation\n   *                           which can influence how the next tokens are\n   *                           interpreted); see `prod-params.js` for more\n   *                           detail)\n   * @param {number} rbp - the right-binding power of the token to be consumed\n   */\n  function expression(context, rbp) {\n    var left, isArray = false, isObject = false;\n    var initial = context & prodParams.initial;\n    var curr;\n\n    context &= ~prodParams.initial;\n\n    state.nameStack.push();\n\n    if (state.tokens.next.id === \"(end)\")\n      error(\"E006\", state.tokens.curr);\n\n    advance();\n\n    if (initial) {\n      state.funct[\"(verb)\"] = state.tokens.curr.value;\n      state.tokens.curr.beginsStmt = true;\n    }\n\n    curr = state.tokens.curr;\n\n    if (initial && curr.fud && (!curr.useFud || curr.useFud(context))) {\n      left = state.tokens.curr.fud(context);\n    } else {\n      if (state.tokens.curr.nud) {\n        left = state.tokens.curr.nud(context, rbp);\n      } else {\n        error(\"E030\", state.tokens.curr, state.tokens.curr.id);\n      }\n\n      while (rbp < state.tokens.next.lbp && !isEndOfExpr(context)) {\n        isArray = state.tokens.curr.value === \"Array\";\n        isObject = state.tokens.curr.value === \"Object\";\n\n        // #527, new Foo.Array(), Foo.Array(), new Foo.Object(), Foo.Object()\n        // Line breaks in IfStatement heads exist to satisfy the checkJSHint\n        // \"Line too long.\" error.\n        if (left && (left.value || (left.first && left.first.value))) {\n          // If the left.value is not \"new\", or the left.first.value is a \".\"\n          // then safely assume that this is not \"new Array()\" and possibly\n          // not \"new Object()\"...\n          if (left.value !== \"new\" ||\n            (left.first && left.first.value && left.first.value === \".\")) {\n            isArray = false;\n            // ...In the case of Object, if the left.value and state.tokens.curr.value\n            // are not equal, then safely assume that this not \"new Object()\"\n            if (left.value !== state.tokens.curr.value) {\n              isObject = false;\n            }\n          }\n        }\n\n        advance();\n\n        if (isArray && state.tokens.curr.id === \"(\" && state.tokens.next.id === \")\") {\n          warning(\"W009\", state.tokens.curr);\n        }\n\n        if (isObject && state.tokens.curr.id === \"(\" && state.tokens.next.id === \")\") {\n          warning(\"W010\", state.tokens.curr);\n        }\n\n        if (left && state.tokens.curr.led) {\n          left = state.tokens.curr.led(context, left);\n        } else {\n          error(\"E033\", state.tokens.curr, state.tokens.curr.id);\n        }\n      }\n    }\n\n    state.nameStack.pop();\n\n    return left;\n  }\n\n\n  // Functions for conformance of style.\n\n  function sameLine(first, second) {\n    return first.line === (second.startLine || second.line);\n  }\n\n  function nobreaknonadjacent(left, right) {\n    if (!state.option.laxbreak && !sameLine(left, right)) {\n      warning(\"W014\", right, right.value);\n    }\n  }\n\n  function nolinebreak(t) {\n    if (!sameLine(t, state.tokens.next)) {\n      warning(\"E022\", t, t.value);\n    }\n  }\n\n  /**\n   * Validate the comma token in the \"current\" position of the token stream.\n   *\n   * @param {object} [opts]\n   * @param {boolean} [opts.property] - flag indicating whether the current\n   *                                    comma token is situated directly within\n   *                                    an object initializer\n   * @param {boolean} [opts.allowTrailing] - flag indicating whether the\n   *                                         current comma token may appear\n   *                                         directly before a delimiter\n   *\n   * @returns {boolean} flag indicating the validity of the current comma\n   *                    token; `false` if the token directly causes a syntax\n   *                    error, `true` otherwise\n   */\n  function checkComma(opts) {\n    var prev = state.tokens.prev;\n    var curr = state.tokens.curr;\n    opts = opts || {};\n\n    if (!sameLine(prev, curr)) {\n      if (!state.option.laxcomma) {\n        if (checkComma.first) {\n          warning(\"I001\", curr);\n          checkComma.first = false;\n        }\n        warning(\"W014\", prev, curr.value);\n      }\n    }\n\n    if (state.tokens.next.identifier && !(opts.property && state.inES5())) {\n      // Keywords that cannot follow a comma operator.\n      switch (state.tokens.next.value) {\n      case \"break\":\n      case \"case\":\n      case \"catch\":\n      case \"continue\":\n      case \"default\":\n      case \"do\":\n      case \"else\":\n      case \"finally\":\n      case \"for\":\n      case \"if\":\n      case \"in\":\n      case \"instanceof\":\n      case \"return\":\n      case \"switch\":\n      case \"throw\":\n      case \"try\":\n      case \"var\":\n      case \"let\":\n      case \"while\":\n      case \"with\":\n        error(\"E024\", state.tokens.next, state.tokens.next.value);\n        return false;\n      }\n    }\n\n    if (state.tokens.next.type === \"(punctuator)\") {\n      switch (state.tokens.next.value) {\n      case \"}\":\n      case \"]\":\n      case \",\":\n      case \")\":\n        if (opts.allowTrailing) {\n          return true;\n        }\n\n        error(\"E024\", state.tokens.next, state.tokens.next.value);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Factory function for creating \"symbols\"--objects that will be inherited by\n   * tokens. The objects created by this function are stored in a symbol table\n   * and set as the prototype of the tokens generated by the lexer.\n   *\n   * Note that this definition of \"symbol\" describes an implementation detail\n   * of JSHint and is not related to the ECMAScript value type introduced in\n   * ES2015.\n   *\n   * @param {string} s - the name of the token; for keywords (e.g. `void`) and\n   *                     delimiters (e.g.. `[`), this is the token's text\n   *                     representation; for literals (e.g. numbers) and other\n   *                     \"special\" tokens (e.g. the end-of-file marker) this is\n   *                     a parenthetical value\n   * @param {number} p - the left-binding power of the token as used by the\n   *                     Pratt parsing semantics\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function symbol(s, p) {\n    var x = state.syntax[s];\n    if (!x || typeof x !== \"object\") {\n      state.syntax[s] = x = {\n        id: s,\n        lbp: p,\n        // Symbols that accept a right-hand side do so with a binding power\n        // that is commonly identical to their left-binding power. (This value\n        // is relevant when determining if the grouping operator is necessary\n        // to override the precedence of surrounding operators.) Because the\n        // exponentiation operator's left-binding power and right-binding power\n        // are distinct, the values must be encoded separately.\n        rbp: p,\n        value: s\n      };\n    }\n    return x;\n  }\n\n  /**\n   * Convenience function for defining delimiter symbols.\n   *\n   * @param {string} s - the name of the symbol\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function delim(s) {\n    var x = symbol(s, 0);\n    x.delim = true;\n    return x;\n  }\n\n  /**\n   * Convenience function for defining statement-denoting symbols.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} f - the first null denotation function for the symbol;\n   *                       see the `expression` function for more detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function stmt(s, f) {\n    var x = delim(s);\n    x.identifier = x.reserved = true;\n    x.fud = f;\n    return x;\n  }\n\n  /**\n   * Convenience function for defining block-statement-denoting symbols.\n   *\n   * A block-statement-denoting symbol is one like 'if' or 'for', which will be\n   * followed by a block and will not have to end with a semicolon.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} - the first null denotation function for the symbol; see\n   *                     the `expression` function for more detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function blockstmt(s, f) {\n    var x = stmt(s, f);\n    x.block = true;\n    return x;\n  }\n  /**\n   * Denote a given JSHint symbol as an identifier and a reserved keyword.\n   *\n   * @param {object} - a JSHint symbol value\n   *\n   * @returns {object} - the provided object\n   */\n  function reserveName(x) {\n    var c = x.id.charAt(0);\n    if ((c >= \"a\" && c <= \"z\") || (c >= \"A\" && c <= \"Z\")) {\n      x.identifier = x.reserved = true;\n    }\n    return x;\n  }\n\n  /**\n   * Convenience function for defining \"prefix\" symbols--operators that accept\n   * expressions as a right-hand side.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - the first null denotation function for the symbol;\n   *                         see the `expression` function for more detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function prefix(s, f) {\n    var x = symbol(s, 150);\n    reserveName(x);\n\n    x.nud = (typeof f === \"function\") ? f : function(context) {\n      this.arity = \"unary\";\n      this.right = expression(context, 150);\n\n      if (this.id === \"++\" || this.id === \"--\") {\n        if (state.option.plusplus) {\n          warning(\"W016\", this, this.id);\n        }\n\n        if (this.right) {\n          checkLeftSideAssign(context, this.right, this);\n        }\n      }\n\n      return this;\n    };\n\n    return x;\n  }\n\n  /**\n   * Convenience function for defining \"type\" symbols--those that describe\n   * literal values.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} f - the first null denotation function for the symbol;\n   *                       see the `expression` function for more detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function type(s, f) {\n    var x = symbol(s, 0);\n    x.type = s;\n    x.nud = f;\n    return x;\n  }\n\n  /**\n   * Convenience function for defining JSHint symbols for reserved\n   * keywords--those that are restricted from use as bindings (and as property\n   * names in ECMAScript 3 environments).\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} func - the first null denotation function for the\n   *                          symbol; see the `expression` function for more\n   *                          detail\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function reserve(name, func) {\n    var x = type(name, func);\n    x.identifier = true;\n    x.reserved = true;\n    return x;\n  }\n\n  /**\n   * Convenience function for defining JSHint symbols for keywords that are\n   * only reserved in some circumstances.\n   *\n   * @param {string} name - the name of the symbol\n   * @param {object} [meta] - a collection of optional arguments\n   * @param {function} [meta.nud] -the null denotation function for the symbol;\n   *                   see the `expression` function for more detail\n   * @param {boolean} [meta.es5] - `true` if the identifier is reserved\n   *                               in ECMAScript 5 or later\n   * @param {boolean} [meta.strictOnly] - `true` if the identifier is only\n   *                                      reserved in strict mode code.\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function FutureReservedWord(name, meta) {\n    var x = type(name, state.syntax[\"(identifier)\"].nud);\n\n    meta = meta || {};\n    meta.isFutureReservedWord = true;\n\n    x.value = name;\n    x.identifier = true;\n    x.reserved = true;\n    x.meta = meta;\n\n    return x;\n  }\n\n  /**\n   * Convenience function for defining \"infix\" symbols--operators that require\n   * operands as both \"land-hand side\" and \"right-hand side\".\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - a function to be invoked that consumes the\n   *                         right-hand side of the operator\n   * @param {number} p - the left-binding power of the token as used by the\n   *                     Pratt parsing semantics\n   * @param {boolean} [w] - if `true`\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function infix(s, f, p, w) {\n    var x = symbol(s, p);\n    reserveName(x);\n    x.infix = true;\n    x.led = function(context, left) {\n      if (!w) {\n        nobreaknonadjacent(state.tokens.prev, state.tokens.curr);\n      }\n      if ((s === \"in\" || s === \"instanceof\") && left.id === \"!\") {\n        warning(\"W018\", left, \"!\");\n      }\n      if (typeof f === \"function\") {\n        return f(context, left, this);\n      } else {\n        this.left = left;\n        this.right = expression(context, p);\n        return this;\n      }\n    };\n    return x;\n  }\n\n  /**\n   * Convenience function for defining the `=>` token as used in arrow\n   * functions.\n   *\n   * @param {string} s - the name of the symbol\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function application(s) {\n    var x = symbol(s, 42);\n\n    x.infix = true;\n    x.led = function(context, left) {\n      nobreaknonadjacent(state.tokens.prev, state.tokens.curr);\n\n      this.left = left;\n      this.right = doFunction(context, { type: \"arrow\", loneArg: left });\n      return this;\n    };\n    return x;\n  }\n\n  /**\n   * Convenience function for defining JSHint symbols for relation operators.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - a function to be invoked to enforce any additional\n   *                         linting rules.\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function relation(s, f) {\n    var x = symbol(s, 100);\n\n    x.infix = true;\n    x.led = function(context, left) {\n      nobreaknonadjacent(state.tokens.prev, state.tokens.curr);\n      this.left = left;\n      var right = this.right = expression(context, 100);\n\n      if (isIdentifier(left, \"NaN\") || isIdentifier(right, \"NaN\")) {\n        warning(\"W019\", this);\n      } else if (f) {\n        f.apply(this, [context, left, right]);\n      }\n\n      if (!left || !right) {\n        quit(\"E041\", state.tokens.curr);\n      }\n\n      if (left.id === \"!\") {\n        warning(\"W018\", left, \"!\");\n      }\n\n      if (right.id === \"!\") {\n        warning(\"W018\", right, \"!\");\n      }\n\n      return this;\n    };\n    return x;\n  }\n\n  /**\n   * Determine if a given token marks the beginning of a UnaryExpression.\n   *\n   * @param {object} token\n   *\n   * @returns {boolean}\n   */\n  function beginsUnaryExpression(token) {\n    return token.arity === \"unary\" && token.id !== \"++\" && token.id !== \"--\";\n  }\n\n  var typeofValues = {};\n  typeofValues.legacy = [\n    // E4X extended the `typeof` operator to return \"xml\" for the XML and\n    // XMLList types it introduced.\n    // Ref: 11.3.2 The typeof Operator\n    // http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-357.pdf\n    \"xml\",\n    // IE<9 reports \"unknown\" when the `typeof` operator is applied to an\n    // object existing across a COM+ bridge. In lieu of official documentation\n    // (which does not exist), see:\n    // http://robertnyman.com/2005/12/21/what-is-typeof-unknown/\n    \"unknown\"\n  ];\n  typeofValues.es3 = [\n    \"undefined\", \"boolean\", \"number\", \"string\", \"function\", \"object\",\n  ];\n  typeofValues.es3 = typeofValues.es3.concat(typeofValues.legacy);\n  typeofValues.es6 = typeofValues.es3.concat(\"symbol\", \"bigint\");\n\n  /**\n   * Validate comparisons between the result of a `typeof` expression and a\n   * string literal.\n   *\n   * @param {token} [left] - one of the values being compared\n   * @param {token} [right] - the other value being compared\n   * @param {object} state - the global state object (see `state.js`)\n   *\n   * @returns {boolean} - `false` if the second token describes a `typeof`\n   *                       expression and the first token is a string literal\n   *                       whose value is never returned by that operator;\n   *                       `true` otherwise\n   */\n  function isTypoTypeof(left, right, state) {\n    var values;\n\n    if (state.option.notypeof)\n      return false;\n\n    if (!left || !right)\n      return false;\n\n    values = state.inES6() ? typeofValues.es6 : typeofValues.es3;\n\n    if (right.type === \"(identifier)\" && right.value === \"typeof\" && left.type === \"(string)\") {\n      if (left.value === \"bigint\") {\n        if (!state.inES11()) {\n          warning(\"W119\", left, \"BigInt\", \"11\");\n        }\n\n        return false;\n      }\n\n      return !_.includes(values, left.value);\n    }\n\n    return false;\n  }\n\n  /**\n   * Determine if a given token describes the built-in `eval` function.\n   *\n   * @param {token} left\n   * @param {object} state - the global state object (see `state.js`)\n   *\n   * @returns {boolean}\n   */\n  function isGlobalEval(left, state) {\n    var isGlobal = false;\n\n    // permit methods to refer to an \"eval\" key in their own context\n    if (left.type === \"this\" && state.funct[\"(context)\"] === null) {\n      isGlobal = true;\n    }\n    // permit use of \"eval\" members of objects\n    else if (left.type === \"(identifier)\") {\n      if (state.option.node && left.value === \"global\") {\n        isGlobal = true;\n      }\n\n      else if (state.option.browser && (left.value === \"window\" || left.value === \"document\")) {\n        isGlobal = true;\n      }\n    }\n\n    return isGlobal;\n  }\n\n  /**\n   * Determine if a given token describes a property of a built-in object.\n   *\n   * @param {token} left\n   *\n   * @returns {boolean}\n   */\n  function findNativePrototype(left) {\n    var natives = [\n      \"Array\", \"ArrayBuffer\", \"Boolean\", \"Collator\", \"DataView\", \"Date\",\n      \"DateTimeFormat\", \"Error\", \"EvalError\", \"Float32Array\", \"Float64Array\",\n      \"Function\", \"Infinity\", \"Intl\", \"Int16Array\", \"Int32Array\", \"Int8Array\",\n      \"Iterator\", \"Number\", \"NumberFormat\", \"Object\", \"RangeError\",\n      \"ReferenceError\", \"RegExp\", \"StopIteration\", \"String\", \"SyntaxError\",\n      \"TypeError\", \"Uint16Array\", \"Uint32Array\", \"Uint8Array\", \"Uint8ClampedArray\",\n      \"URIError\"\n    ];\n\n    function walkPrototype(obj) {\n      if (typeof obj !== \"object\") return;\n      return obj.right === \"prototype\" ? obj : walkPrototype(obj.left);\n    }\n\n    function walkNative(obj) {\n      while (!obj.identifier && typeof obj.left === \"object\")\n        obj = obj.left;\n\n      if (obj.identifier && natives.indexOf(obj.value) >= 0 &&\n          state.funct[\"(scope)\"].isPredefined(obj.value)) {\n        return obj.value;\n      }\n    }\n\n    var prototype = walkPrototype(left);\n    if (prototype) return walkNative(prototype);\n  }\n\n  /**\n   * Determine if the given token is a valid assignment target; emit errors\n   * and/or warnings as appropriate\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   * @param {token} left - the left hand side of the assignment\n   * @param {token=} assignToken - the token for the assignment, used for\n   *                               reporting\n   * @param {object=} options - optional object\n   * @param {boolean} options.allowDestructuring - whether to allow\n   *                                               destructuring binding\n   *\n   * @returns {boolean} Whether the left hand side is OK\n   */\n  function checkLeftSideAssign(context, left, assignToken, options) {\n\n    var allowDestructuring = options && options.allowDestructuring;\n\n    assignToken = assignToken || left;\n\n    if (state.option.freeze) {\n      var nativeObject = findNativePrototype(left);\n      if (nativeObject)\n        warning(\"W121\", left, nativeObject);\n    }\n\n    if (left.identifier && !left.isMetaProperty) {\n      // The `reassign` method also calls `modify`, but we are specific in\n      // order to catch function re-assignment and globals re-assignment\n      state.funct[\"(scope)\"].block.reassign(left.value, left);\n    }\n\n    if (left.id === \".\") {\n      if (!left.left || left.left.value === \"arguments\" && !state.isStrict()) {\n        warning(\"W143\", assignToken);\n      }\n\n      state.nameStack.set(state.tokens.prev);\n      return true;\n    } else if (left.id === \"{\" || left.id === \"[\") {\n      if (!allowDestructuring || !left.destructAssign) {\n        if (left.id === \"{\" || !left.left) {\n          warning(\"E031\", assignToken);\n        } else if (left.left.value === \"arguments\" && !state.isStrict()) {\n          warning(\"W143\", assignToken);\n        }\n      }\n\n      if (left.id === \"[\") {\n        state.nameStack.set(left.right);\n      }\n\n      return true;\n    } else if (left.identifier && !isReserved(context, left) && !left.isMetaProperty) {\n      if (state.funct[\"(scope)\"].bindingtype(left.value) === \"exception\") {\n        warning(\"W022\", left);\n      }\n\n      if (left.value === \"eval\" && state.isStrict()) {\n        error(\"E031\", assignToken);\n        return false;\n      } else if (left.value === \"arguments\") {\n        if (!state.isStrict()) {\n          warning(\"W143\", assignToken);\n        } else {\n          error(\"E031\", assignToken);\n          return false;\n        }\n      }\n      state.nameStack.set(left);\n      return true;\n    }\n\n    error(\"E031\", assignToken);\n\n    return false;\n  }\n\n  /**\n   * Convenience function for defining JSHint symbols for assignment operators.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - a function to be invoked that consumes the\n   *                         right-hand side of the operator (see the `infix`\n   *                         function)\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function assignop(s, f) {\n    var x = infix(s, typeof f === \"function\" ? f : function(context, left, that) {\n      that.left = left;\n\n      checkLeftSideAssign(context, left, that, { allowDestructuring: true });\n\n      that.right = expression(context, 10);\n\n      return that;\n    }, 20);\n\n    x.exps = true;\n    x.assign = true;\n\n    return x;\n  }\n\n  /**\n   * Convenience function for defining JSHint symbols for bitwise operators.\n   *\n   * @param {string} s - the name of the symbol\n   * @param {function} [f] - the left denotation function for the symbol; see\n   *                         the `expression` function for more detail\n   * @param {number} p - the left-binding power of the token as used by the\n   *                     Pratt parsing semantics\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function bitwise(s, f, p) {\n    var x = symbol(s, p);\n    reserveName(x);\n    x.infix = true;\n    x.led = (typeof f === \"function\") ? f : function(context, left) {\n      if (state.option.bitwise) {\n        warning(\"W016\", this, this.id);\n      }\n      this.left = left;\n      this.right = expression(context, p);\n      return this;\n    };\n    return x;\n  }\n\n  /**\n   * Convenience function for defining JSHint symbols for bitwise assignment\n   * operators. See the `assignop` function for more detail.\n   *\n   * @param {string} s - the name of the symbol\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function bitwiseassignop(s) {\n    symbol(s, 20).exps = true;\n    return infix(s, function(context, left, that) {\n      if (state.option.bitwise) {\n        warning(\"W016\", that, that.id);\n      }\n\n      checkLeftSideAssign(context, left, that);\n\n      that.right = expression(context, 10);\n\n      return that;\n    }, 20);\n  }\n\n  /**\n   * Convenience function for defining JSHint symbols for those operators which\n   * have a single operand that appears before them in the source code.\n   *\n   * @param {string} s - the name of the symbol\n   *\n   * @returns {object} - the object describing the JSHint symbol (provided to\n   *                     support cases where further refinement is necessary)\n   */\n  function suffix(s) {\n    var x = symbol(s, 150);\n\n    x.led = function(context, left) {\n      // this = suffix e.g. \"++\" punctuator\n      // left = symbol operated e.g. \"a\" identifier or \"a.b\" punctuator\n      if (state.option.plusplus) {\n        warning(\"W016\", this, this.id);\n      }\n\n      checkLeftSideAssign(context, left, this);\n\n      this.left = left;\n      return this;\n    };\n    return x;\n  }\n\n  /**\n   * Retrieve the value of the next token if it is an identifier and optionally\n   * advance the parser.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   * @param {boolean} [isName] - `true` if an IdentifierName should be consumed\n   *                             (e.g. object properties)\n   * @param {boolean} [preserve] - `true` if the token should not be consumed\n   *\n   * @returns {string|undefined} - the value of the identifier, if present\n   */\n  function optionalidentifier(context, isName, preserve) {\n    if (!state.tokens.next.identifier) {\n      return;\n    }\n\n    if (!preserve) {\n      advance();\n    }\n\n    var curr = state.tokens.curr;\n\n    if (isReserved(context, curr) && !(isName && state.inES5())) {\n      warning(\"W024\", state.tokens.curr, state.tokens.curr.id);\n    }\n\n    return curr.value;\n  }\n\n  /**\n   * Consume the \"...\" token which designates \"spread\" and \"rest\" operations if\n   * it is present. If the operator is repeated, consume every repetition, and\n   * issue a single error describing the syntax error.\n   *\n   * @param {string} operation - either \"spread\" or \"rest\"\n   *\n   * @returns {boolean} a value describing whether or not any tokens were\n   *                    consumed in this way\n   */\n  function spreadrest(operation) {\n    if (!checkPunctuator(state.tokens.next, \"...\")) {\n      return false;\n    }\n\n    if (!state.inES6(true)) {\n      warning(\"W119\", state.tokens.next, operation + \" operator\", \"6\");\n    }\n    advance();\n\n    if (checkPunctuator(state.tokens.next, \"...\")) {\n      warning(\"E024\", state.tokens.next, \"...\");\n      while (checkPunctuator(state.tokens.next, \"...\")) {\n        advance();\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Ensure that the current token is an identifier and retrieve its value.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   * @param {boolean} [isName] - `true` if an IdentifierName should be consumed\n   *                             (e.g. object properties)\n   *\n   * @returns {string|undefined} - the value of the identifier, if present\n   */\n  function identifier(context, isName) {\n    var i = optionalidentifier(context, isName, false);\n    if (i) {\n      return i;\n    }\n\n    error(\"E030\", state.tokens.next, state.tokens.next.value);\n\n    // The token should be consumed after a warning is issued so the parser\n    // can continue as though an identifier were found. The semicolon token\n    // should not be consumed in this way so that the parser interprets it as\n    // a statement delimiter;\n    if (state.tokens.next.id !== \";\") {\n      advance();\n    }\n  }\n\n\n  /**\n   * Determine if the provided token may be evaluated and emit a linting\n   * warning if this is note the case.\n   *\n   * @param {token} controlToken\n   */\n  function reachable(controlToken) {\n    var i = 0, t;\n    if (state.tokens.next.id !== \";\" || controlToken.inBracelessBlock) {\n      return;\n    }\n    for (;;) {\n      do {\n        t = peek(i);\n        i += 1;\n      } while (t.id !== \"(end)\" && t.id === \"(comment)\");\n\n      if (t.reach) {\n        return;\n      }\n      if (t.id !== \"(endline)\") {\n        if (t.id === \"function\") {\n          if (state.option.latedef === true) {\n            warning(\"W026\", t);\n          }\n          break;\n        }\n\n        warning(\"W027\", t, t.value, controlToken.value);\n        break;\n      }\n    }\n  }\n\n  /**\n   * Consume the semicolon that delimits the statement currently being parsed,\n   * emitting relevant warnings/errors as appropriate.\n   *\n   * @param {token} stmt - token describing the statement under consideration\n   */\n  function parseFinalSemicolon(stmt) {\n    if (state.tokens.next.id !== \";\") {\n      // don't complain about unclosed templates / strings\n      if (state.tokens.next.isUnclosed) return advance();\n\n      var isSameLine = sameLine(state.tokens.curr, state.tokens.next) &&\n                       state.tokens.next.id !== \"(end)\";\n      var blockEnd = checkPunctuator(state.tokens.next, \"}\");\n\n      if (isSameLine && !blockEnd && !(stmt.id === \"do\" && state.inES6(true))) {\n        errorAt(\"E058\", state.tokens.curr.line, state.tokens.curr.character);\n      } else if (!state.option.asi) {\n\n        // If this is the last statement in a block that ends on the same line\n        // *and* option lastsemic is on, ignore the warning.  Otherwise, issue\n        // a warning about missing semicolon.\n        if (!(blockEnd && isSameLine && state.option.lastsemic)) {\n          warningAt(\"W033\", state.tokens.curr.line, state.tokens.curr.character);\n        }\n      }\n    } else {\n      advance(\";\");\n    }\n  }\n\n  /**\n   * Consume a statement.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   *\n   * @returns {token} - the token describing the statement\n   */\n  function statement(context) {\n    var i = indent, r, t = state.tokens.next, hasOwnScope = false;\n\n    context |= prodParams.initial;\n\n    if (t.id === \";\") {\n      advance(\";\");\n      return;\n    }\n\n    // Is this a labelled statement?\n    var res = isReserved(context, t);\n\n    // We're being more tolerant here: if someone uses\n    // a FutureReservedWord (that is not meant to start a statement)\n    // as a label, we warn but proceed anyway.\n\n    if (res && t.meta && t.meta.isFutureReservedWord && !t.fud) {\n      warning(\"W024\", t, t.id);\n      res = false;\n    }\n\n    if (t.identifier && !res && peek().id === \":\") {\n      advance();\n      advance(\":\");\n\n      hasOwnScope = true;\n      state.funct[\"(scope)\"].stack();\n      state.funct[\"(scope)\"].block.addLabel(t.value, { token: state.tokens.curr });\n\n      if (!state.tokens.next.labelled && state.tokens.next.value !== \"{\") {\n        warning(\"W028\", state.tokens.next, t.value, state.tokens.next.value);\n      }\n\n      t = state.tokens.next;\n    }\n\n    // Is it a lonely block?\n\n    if (t.id === \"{\") {\n      // Is it a switch case block?\n      //\n      //  switch (foo) {\n      //    case bar: { <= here.\n      //      ...\n      //    }\n      //  }\n      var iscase = (state.funct[\"(verb)\"] === \"case\" && state.tokens.curr.value === \":\");\n      block(context, true, true, false, false, iscase);\n\n      if (hasOwnScope) {\n        state.funct[\"(scope)\"].unstack();\n      }\n\n      return;\n    }\n\n    // Parse the statement.\n\n    r = expression(context, 0);\n\n    if (r && !(r.identifier && r.value === \"function\") &&\n        !(r.type === \"(punctuator)\" && r.left &&\n          r.left.identifier && r.left.value === \"function\")) {\n      if (!state.isStrict() && state.stmtMissingStrict()) {\n        warning(\"E007\");\n      }\n    }\n\n    // Look for the final semicolon.\n\n    if (!t.block) {\n      if (!state.option.expr && (!r || !r.exps)) {\n        warning(\"W030\", state.tokens.curr);\n      } else if (state.option.nonew && r && r.left && r.id === \"(\" && r.left.id === \"new\") {\n        warning(\"W031\", t);\n      }\n\n      parseFinalSemicolon(t);\n    }\n\n\n    // Restore the indentation.\n\n    indent = i;\n    if (hasOwnScope) {\n      state.funct[\"(scope)\"].unstack();\n    }\n    return r;\n  }\n\n  /**\n   * Consume a series of statements until encountering either the end of the\n   * program or a token that interrupts control flow.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   *\n   * @returns {Array<token>} - the tokens consumed\n   */\n  function statements(context) {\n    var a = [], p;\n\n    while (!state.tokens.next.reach && state.tokens.next.id !== \"(end)\") {\n      if (state.tokens.next.id === \";\") {\n        p = peek();\n\n        if (!p || (p.id !== \"(\" && p.id !== \"[\")) {\n          warning(\"W032\");\n        }\n\n        advance(\";\");\n      } else {\n        a.push(statement(context));\n      }\n    }\n    return a;\n  }\n\n\n  /**\n   * Parse any directives in a directive prologue.\n   */\n  function directives() {\n    var current = state.tokens.next;\n    while (state.tokens.next.id === \"(string)\") {\n      var next = peekIgnoreEOL();\n      if (!isEndOfExpr(0, current, next)) {\n        break;\n      }\n      current = next;\n\n      advance();\n      var directive = state.tokens.curr.value;\n      if (state.directive[directive] ||\n          (directive === \"use strict\" && state.option.strict === \"implied\")) {\n        warning(\"W034\", state.tokens.curr, directive);\n      }\n\n      // From ECMAScript 2016:\n      //\n      // > 14.1.2 Static Semantics: Early Errors\n      // >\n      // > [...]\n      // > - It is a Syntax Error if ContainsUseStrict of FunctionBody is true\n      // >   and IsSimpleParameterList of FormalParameters is false.\n      if (directive === \"use strict\" && state.inES7() &&\n        !state.funct[\"(global)\"] && state.funct[\"(hasSimpleParams)\"] === false) {\n        error(\"E065\", state.tokens.curr);\n      }\n\n      state.directive[directive] = state.tokens.curr;\n\n      parseFinalSemicolon(current);\n    }\n\n    if (state.isStrict()) {\n      state.option.undef = true;\n    }\n  }\n\n  /**\n   * Parses a single block. A block is a sequence of statements wrapped in\n   * braces.\n   *\n   * @param {number} context - parsing context\n   * @param {boolean} ordinary - `true` for everything but function bodies and\n   *                             try blocks\n   * @param {boolean} [stmt] - `true` if block can be a single statement (e.g.\n   *                           in if/for/while)\n   * @param {boolean} [isfunc] - `true` if block is a function body\n   * @param {boolean} [isfatarrow] - `true` if its a body of a fat arrow\n   *                                 function\n   * @param {boolean} [iscase] - `true` if block is a switch case block\n   *\n   * @returns {token} - the token describing the block\n   */\n  function block(context, ordinary, stmt, isfunc, isfatarrow, iscase) {\n    var a,\n      b = inblock,\n      old_indent = indent,\n      m,\n      t,\n      d;\n\n    inblock = ordinary;\n\n    t = state.tokens.next;\n\n    var metrics = state.funct[\"(metrics)\"];\n    metrics.nestedBlockDepth += 1;\n    metrics.verifyMaxNestedBlockDepthPerFunction();\n\n    if (state.tokens.next.id === \"{\") {\n      advance(\"{\");\n\n      // create a new block scope\n      state.funct[\"(scope)\"].stack();\n\n      if (state.tokens.next.id !== \"}\") {\n        indent += state.option.indent;\n        while (!ordinary && state.tokens.next.from > indent) {\n          indent += state.option.indent;\n        }\n\n        if (isfunc) {\n          m = {};\n          for (d in state.directive) {\n            m[d] = state.directive[d];\n          }\n          directives();\n\n          state.funct[\"(isStrict)\"] = state.isStrict();\n\n          if (state.option.strict && state.funct[\"(context)\"][\"(global)\"]) {\n            if (!m[\"use strict\"] && !state.isStrict()) {\n              warning(\"E007\");\n            }\n          }\n        }\n\n        a = statements(context);\n\n        metrics.statementCount += a.length;\n\n        indent -= state.option.indent;\n      } else if (isfunc) {\n        // Ensure property is set for functions with empty bodies.\n        state.funct[\"(isStrict)\"] = state.isStrict();\n      }\n\n      advance(\"}\", t);\n\n      if (isfunc) {\n        state.funct[\"(scope)\"].validateParams(isfatarrow);\n        if (m) {\n          state.directive = m;\n        }\n      }\n\n      state.funct[\"(scope)\"].unstack();\n\n      indent = old_indent;\n    } else if (!ordinary) {\n      if (isfunc) {\n        state.funct[\"(scope)\"].stack();\n\n        if (stmt && !isfatarrow && !state.inMoz()) {\n          error(\"W118\", state.tokens.curr, \"function closure expressions\");\n        }\n\n        if (isfatarrow) {\n          state.funct[\"(scope)\"].validateParams(true);\n        }\n\n        var expr = expression(context, 10);\n\n        if (state.option.noreturnawait && context & prodParams.async &&\n            expr.identifier && expr.value === \"await\") {\n          warning(\"W146\", expr);\n        }\n\n        if (state.option.strict && state.funct[\"(context)\"][\"(global)\"]) {\n          if (!state.isStrict()) {\n            warning(\"E007\");\n          }\n        }\n\n        state.funct[\"(scope)\"].unstack();\n      } else {\n        error(\"E021\", state.tokens.next, \"{\", state.tokens.next.value);\n      }\n    } else {\n\n      state.funct[\"(scope)\"].stack();\n\n      if (!stmt || state.option.curly) {\n        warning(\"W116\", state.tokens.next, \"{\", state.tokens.next.value);\n      }\n\n      // JSHint observes Annex B of the ECMAScript specification by default,\n      // where function declarations are permitted in the statement positions\n      // of IfStatements.\n      var supportsFnDecl = state.funct[\"(verb)\"] === \"if\" ||\n        state.tokens.curr.id === \"else\";\n\n      state.tokens.next.inBracelessBlock = true;\n      indent += state.option.indent;\n      // test indentation only if statement is in new line\n      a = [statement(context)];\n      indent -= state.option.indent;\n\n      if (a[0] && a[0].declaration &&\n        !(supportsFnDecl && a[0].id === \"function\")) {\n        error(\"E048\", a[0], a[0].id[0].toUpperCase() + a[0].id.slice(1));\n      }\n\n      state.funct[\"(scope)\"].unstack();\n    }\n\n    // Don't clear and let it propagate out if it is \"break\", \"return\" or\n    // similar in switch case\n    switch (state.funct[\"(verb)\"]) {\n    case \"break\":\n    case \"continue\":\n    case \"return\":\n    case \"throw\":\n      if (iscase) {\n        break;\n      }\n\n      /* falls through */\n    default:\n      state.funct[\"(verb)\"] = null;\n    }\n\n    inblock = b;\n    if (ordinary && state.option.noempty && (!a || a.length === 0)) {\n      warning(\"W035\", state.tokens.prev);\n    }\n    metrics.nestedBlockDepth -= 1;\n    return a;\n  }\n\n\n  /**\n   * Update the global state which tracks all statically-identifiable property\n   * names, and emit a warning if the `members` linting directive is in use and\n   * does not include the given name.\n   *\n   * @param {string} m - the property name\n   */\n  function countMember(m) {\n    if (membersOnly && typeof membersOnly[m] !== \"boolean\") {\n      warning(\"W036\", state.tokens.curr, m);\n    }\n    if (typeof member[m] === \"number\") {\n      member[m] += 1;\n    } else {\n      member[m] = 1;\n    }\n  }\n\n  // Build the syntax table by declaring the syntactic elements of the language.\n\n  type(\"(number)\", function() {\n    if (state.tokens.next.id === \".\") {\n      warning(\"W005\", this);\n    }\n\n    return this;\n  });\n\n  type(\"(string)\", function() {\n    return this;\n  });\n\n  state.syntax[\"(identifier)\"] = {\n    type: \"(identifier)\",\n    lbp: 0,\n    identifier: true,\n\n    nud: function(context) {\n      var v = this.value;\n      // If this identifier is the lone parameter to a shorthand \"fat arrow\"\n      // function definition, i.e.\n      //\n      //     x => x;\n      //\n      // ...it should not be considered as a variable in the current scope. It\n      // will be added to the scope of the new function when the next token is\n      // parsed, so it can be safely ignored for now.\n      var isLoneArrowParam = state.tokens.next.id === \"=>\";\n\n      if (isReserved(context, this)) {\n        warning(\"W024\", this, v);\n      } else if (!isLoneArrowParam && !state.funct[\"(comparray)\"].check(v)) {\n        state.funct[\"(scope)\"].block.use(v, state.tokens.curr);\n      }\n\n      return this;\n    },\n\n    led: function() {\n      /* istanbul ignore next */\n      error(\"E033\", state.tokens.next, state.tokens.next.value);\n    }\n  };\n\n  var baseTemplateSyntax = {\n    identifier: false,\n    template: true,\n  };\n  state.syntax[\"(template)\"] = _.extend({\n    lbp: 155,\n    type: \"(template)\",\n    nud: doTemplateLiteral,\n    led: doTemplateLiteral,\n    noSubst: false\n  }, baseTemplateSyntax);\n\n  state.syntax[\"(template middle)\"] = _.extend({\n    lbp: 0,\n    type: \"(template middle)\",\n    noSubst: false\n  }, baseTemplateSyntax);\n\n  state.syntax[\"(template tail)\"] = _.extend({\n    lbp: 0,\n    type: \"(template tail)\",\n    tail: true,\n    noSubst: false\n  }, baseTemplateSyntax);\n\n  state.syntax[\"(no subst template)\"] = _.extend({\n    lbp: 155,\n    type: \"(template)\",\n    nud: doTemplateLiteral,\n    led: doTemplateLiteral,\n    noSubst: true,\n    tail: true // mark as tail, since it's always the last component\n  }, baseTemplateSyntax);\n\n  type(\"(regexp)\", function() {\n    return this;\n  });\n\n  // ECMAScript parser\n\n  delim(\"(endline)\");\n  (function(x) {\n    x.line = x.from = 0;\n  })(delim(\"(begin)\"));\n  delim(\"(end)\").reach = true;\n  delim(\"(error)\").reach = true;\n  delim(\"}\").reach = true;\n  delim(\")\");\n  delim(\"]\");\n  delim(\"\\\"\").reach = true;\n  delim(\"'\").reach = true;\n  delim(\";\");\n  delim(\":\").reach = true;\n  delim(\"#\");\n\n  reserve(\"else\");\n  reserve(\"case\").reach = true;\n  reserve(\"catch\");\n  reserve(\"default\").reach = true;\n  reserve(\"finally\");\n  reserve(\"true\", function() { return this; });\n  reserve(\"false\", function() { return this; });\n  reserve(\"null\", function() { return this; });\n  reserve(\"this\", function() {\n    if (state.isStrict() && !isMethod() &&\n        !state.option.validthis && ((state.funct[\"(statement)\"] &&\n        state.funct[\"(name)\"].charAt(0) > \"Z\") || state.funct[\"(global)\"])) {\n      warning(\"W040\", this);\n    }\n\n    return this;\n  });\n\n  (function(superSymbol) {\n    superSymbol.rbp = 161;\n  })(reserve(\"super\", function() {\n    superNud.call(state.tokens.curr, this);\n\n    return this;\n  }));\n\n  assignop(\"=\", \"assign\");\n  assignop(\"+=\", \"assignadd\");\n  assignop(\"-=\", \"assignsub\");\n  assignop(\"*=\", \"assignmult\");\n  assignop(\"/=\", \"assigndiv\").nud = function() {\n    /* istanbul ignore next */\n    error(\"E014\");\n  };\n  assignop(\"%=\", \"assignmod\");\n  assignop(\"**=\", function(context, left, that) {\n    if (!state.inES7()) {\n      warning(\"W119\", that, \"Exponentiation operator\", \"7\");\n    }\n\n    that.left = left;\n\n    checkLeftSideAssign(context, left, that);\n\n    that.right = expression(context, 10);\n\n    return that;\n  });\n\n  bitwiseassignop(\"&=\");\n  bitwiseassignop(\"|=\");\n  bitwiseassignop(\"^=\");\n  bitwiseassignop(\"<<=\");\n  bitwiseassignop(\">>=\");\n  bitwiseassignop(\">>>=\");\n  infix(\",\", function(context, left, that) {\n    if (state.option.nocomma) {\n      warning(\"W127\", that);\n    }\n\n    that.left = left;\n\n    if (checkComma()) {\n      that.right = expression(context, 10);\n    } else {\n      that.right = null;\n    }\n\n    return that;\n  }, 10, true);\n\n  infix(\"?\", function(context, left, that) {\n    increaseComplexityCount();\n    that.left = left;\n    that.right = expression(context & ~prodParams.noin, 10);\n    advance(\":\");\n    expression(context, 10);\n    return that;\n  }, 30);\n\n  infix(\"||\", function(context, left, that) {\n    increaseComplexityCount();\n    that.left = left;\n    that.right = expression(context, 40);\n    return that;\n  }, 40);\n\n  var andPrecedence = 50;\n  infix(\"&&\", function(context, left, that) {\n    increaseComplexityCount();\n    that.left = left;\n    that.right = expression(context, andPrecedence);\n    return that;\n  }, andPrecedence);\n\n  infix(\"??\", function(context, left, that) {\n    if (!left.paren && (left.id === \"||\" || left.id === \"&&\")) {\n      error(\"E024\", that, \"??\");\n    }\n\n    if (!state.inES11()) {\n      warning(\"W119\", that, \"nullish coalescing\", \"11\");\n    }\n\n    increaseComplexityCount();\n    that.left = left;\n    var right = that.right = expression(context, 39);\n\n    if (!right) {\n      error(\"E024\", state.tokens.next, state.tokens.next.id);\n    } else if (!right.paren && (right.id === \"||\" || right.id === \"&&\")) {\n      error(\"E024\", that.right, that.right.id);\n    }\n\n    return that;\n  }, 39);\n\n  // The Exponentiation operator, introduced in ECMAScript 2016\n  //\n  // ExponentiationExpression[Yield] :\n  //   UnaryExpression[?Yield]\n  //   UpdateExpression[?Yield] ** ExponentiationExpression[?Yield]\n  infix(\"**\", function(context, left, that) {\n    if (!state.inES7()) {\n      warning(\"W119\", that, \"Exponentiation operator\", \"7\");\n    }\n\n    // Disallow UnaryExpressions which are not wrapped in parenthesis\n    if (!left.paren && beginsUnaryExpression(left)) {\n      error(\"E024\", that, \"**\");\n    }\n\n    that.left = left;\n    that.right = expression(context, that.rbp);\n    return that;\n  }, 150);\n  state.syntax[\"**\"].rbp = 140;\n  bitwise(\"|\", \"bitor\", 70);\n  bitwise(\"^\", \"bitxor\", 80);\n  bitwise(\"&\", \"bitand\", 90);\n  relation(\"==\", function(context, left, right) {\n    var eqnull = state.option.eqnull &&\n      ((left && left.value) === \"null\" || (right && right.value) === \"null\");\n\n    switch (true) {\n      case !eqnull && state.option.eqeqeq:\n        this.from = this.character;\n        warning(\"W116\", this, \"===\", \"==\");\n        break;\n      /* istanbul ignore next */\n      case isTypoTypeof(right, left, state):\n        warning(\"W122\", this, right.value);\n        break;\n      case isTypoTypeof(left, right, state):\n        warning(\"W122\", this, left.value);\n        break;\n    }\n\n    return this;\n  });\n  relation(\"===\", function(context, left, right) {\n    if (isTypoTypeof(right, left, state)) {\n      warning(\"W122\", this, right.value);\n    } else if (isTypoTypeof(left, right, state)) {\n      /* istanbul ignore next */\n      warning(\"W122\", this, left.value);\n    }\n    return this;\n  });\n  relation(\"!=\", function(context, left, right) {\n    var eqnull = state.option.eqnull &&\n        ((left && left.value) === \"null\" || (right && right.value) === \"null\");\n\n    if (!eqnull && state.option.eqeqeq) {\n      this.from = this.character;\n      warning(\"W116\", this, \"!==\", \"!=\");\n    } else if (isTypoTypeof(right, left, state)) {\n      /* istanbul ignore next */\n      warning(\"W122\", this, right.value);\n    } else if (isTypoTypeof(left, right, state)) {\n      warning(\"W122\", this, left.value);\n    }\n    return this;\n  });\n  relation(\"!==\", function(context, left, right) {\n    if (isTypoTypeof(right, left, state)) {\n      warning(\"W122\", this, right.value);\n    } else if (isTypoTypeof(left, right, state)) {\n      /* istanbul ignore next */\n      warning(\"W122\", this, left.value);\n    }\n    return this;\n  });\n  relation(\"<\");\n  relation(\">\");\n  relation(\"<=\");\n  relation(\">=\");\n  bitwise(\"<<\", \"shiftleft\", 120);\n  bitwise(\">>\", \"shiftright\", 120);\n  bitwise(\">>>\", \"shiftrightunsigned\", 120);\n  infix(\"in\", \"in\", 120);\n  infix(\"instanceof\", function(context, left, token) {\n    var right;\n    var scope = state.funct[\"(scope)\"];\n    token.left = left;\n    token.right = right = expression(context, 120);\n\n    // This condition reflects a syntax error which will be reported by the\n    // `expression` function.\n    if (!right) {\n      return token;\n    }\n\n    if (right.id === \"(number)\" ||\n        right.id === \"(string)\" ||\n        right.value === \"null\" ||\n        (right.value === \"undefined\" && !scope.has(\"undefined\")) ||\n        right.arity === \"unary\" ||\n        right.id === \"{\" ||\n        (right.id === \"[\" && !right.right) ||\n        right.id === \"(regexp)\" ||\n        (right.id === \"(template)\" && !right.tag)) {\n      error(\"E060\");\n    }\n\n    if (right.id === \"function\") {\n      warning(\"W139\");\n    }\n\n    return token;\n  }, 120);\n  infix(\"+\", function(context, left, that) {\n    var next = state.tokens.next;\n    var right;\n    that.left = left;\n    that.right = right = expression(context, 130);\n\n    if (left && right && left.id === \"(string)\" && right.id === \"(string)\") {\n      left.value += right.value;\n      left.character = right.character;\n      if (!state.option.scripturl && reg.javascriptURL.test(left.value)) {\n        warning(\"W050\", left);\n      }\n      return left;\n    }\n\n    if (next.id === \"+\" || next.id === \"++\") {\n      warning(\"W007\", that.right);\n    }\n\n    return that;\n  }, 130);\n  prefix(\"+\", function(context) {\n    var next = state.tokens.next;\n    this.arity = \"unary\";\n    this.right = expression(context, 150);\n\n    if (next.id === \"+\" || next.id === \"++\") {\n      warning(\"W007\", this.right);\n    }\n\n    return this;\n  });\n  infix(\"-\", function(context, left, that) {\n    var next = state.tokens.next;\n    that.left = left;\n    that.right = expression(context, 130);\n\n    if (next.id === \"-\" || next.id === \"--\") {\n      warning(\"W006\", that.right);\n    }\n\n    return that;\n  }, 130);\n  prefix(\"-\", function(context) {\n    var next = state.tokens.next;\n    this.arity = \"unary\";\n    this.right = expression(context, 150);\n\n    if (next.id === \"-\" || next.id === \"--\") {\n      warning(\"W006\", this.right);\n    }\n\n    return this;\n  });\n  infix(\"*\", \"mult\", 140);\n  infix(\"/\", \"div\", 140);\n  infix(\"%\", \"mod\", 140);\n\n  suffix(\"++\");\n  prefix(\"++\", \"preinc\");\n  state.syntax[\"++\"].exps = true;\n\n  suffix(\"--\");\n  prefix(\"--\", \"predec\");\n  state.syntax[\"--\"].exps = true;\n\n  prefix(\"delete\", function(context) {\n    this.arity = \"unary\";\n    var p = expression(context, 150);\n    if (!p) {\n      return this;\n    }\n\n    if (p.id !== \".\" && p.id !== \"[\") {\n      warning(\"W051\");\n    }\n    this.first = p;\n\n    // The `delete` operator accepts unresolvable references when not in strict\n    // mode, so the operand may be undefined.\n    if (p.identifier && !state.isStrict()) {\n      p.forgiveUndef = true;\n    }\n    return this;\n  }).exps = true;\n\n  prefix(\"~\", function(context) {\n    if (state.option.bitwise) {\n      warning(\"W016\", this, \"~\");\n    }\n    this.arity = \"unary\";\n    this.right = expression(context, 150);\n    return this;\n  });\n\n  infix(\"...\");\n\n  prefix(\"!\", function(context) {\n    this.arity = \"unary\";\n    this.right = expression(context, 150);\n\n    if (!this.right) { // '!' followed by nothing? Give up.\n      quit(\"E041\", this);\n    }\n\n    if (bang[this.right.id] === true) {\n      warning(\"W018\", this, \"!\");\n    }\n    return this;\n  });\n\n  prefix(\"typeof\", function(context) {\n    this.arity = \"unary\";\n    var p = expression(context, 150);\n    this.first = this.right = p;\n\n    if (!p) { // 'typeof' followed by nothing? Give up.\n      quit(\"E041\", this);\n    }\n\n    // The `typeof` operator accepts unresolvable references, so the operand\n    // may be undefined.\n    if (p.identifier) {\n      p.forgiveUndef = true;\n    }\n    return this;\n  });\n  prefix(\"new\", function(context) {\n    var mp = metaProperty(context, \"target\", function() {\n      if (!state.inES6(true)) {\n        warning(\"W119\", state.tokens.prev, \"new.target\", \"6\");\n      }\n      var inFunction, c = state.funct;\n      while (c) {\n        inFunction = !c[\"(global)\"];\n        if (!c[\"(arrow)\"]) { break; }\n        c = c[\"(context)\"];\n      }\n      if (!inFunction) {\n        warning(\"W136\", state.tokens.prev, \"new.target\");\n      }\n    });\n    if (mp) { return mp; }\n\n    var opening = state.tokens.next;\n    var c = expression(context, 155), i;\n\n    if (!c) {\n      return this;\n    }\n\n    if (!c.paren && c.rbp > 160) {\n      error(\"E024\", opening, opening.value);\n    }\n\n    if (c.id !== \"function\") {\n      if (c.identifier) {\n        switch (c.value) {\n        case \"Number\":\n        case \"String\":\n        case \"Boolean\":\n        case \"Math\":\n        case \"JSON\":\n          warning(\"W053\", state.tokens.prev, c.value);\n          break;\n        case \"Symbol\":\n          if (state.inES6()) {\n            warning(\"W053\", state.tokens.prev, c.value);\n          }\n          break;\n        case \"Function\":\n          if (!state.option.evil) {\n            warning(\"W054\");\n          }\n          break;\n        case \"Date\":\n        case \"RegExp\":\n        case \"this\":\n          break;\n        default:\n          i = c.value.substr(0, 1);\n          if (state.option.newcap && (i < \"A\" || i > \"Z\") &&\n            !state.funct[\"(scope)\"].isPredefined(c.value)) {\n            warning(\"W055\", state.tokens.curr);\n          }\n        }\n      } else {\n        if (c.id === \"?.\" && !c.paren) {\n          error(\"E024\", c, \"?.\");\n        } else if (c.id !== \".\" && c.id !== \"[\" && c.id !== \"(\") {\n          /* istanbul ignore next */\n          warning(\"W056\", state.tokens.curr);\n        }\n      }\n    } else {\n      if (!state.option.supernew)\n        warning(\"W057\", this);\n    }\n    if (state.tokens.next.id !== \"(\" && !state.option.supernew) {\n      warning(\"W058\", state.tokens.curr, state.tokens.curr.value);\n    }\n    this.first = this.right = c;\n    return this;\n  });\n  state.syntax[\"new\"].exps = true;\n\n\n  var classDeclaration = blockstmt(\"class\", function(context) {\n    var className, classNameToken;\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, \"class\", \"6\");\n    }\n    state.inClassBody = true;\n\n    // Class Declaration: 'class <Classname>'\n    if (state.tokens.next.identifier && state.tokens.next.value !== \"extends\") {\n      classNameToken = state.tokens.next;\n      className = classNameToken.value;\n      identifier(context);\n      // unintialized, so that the 'extends' clause is parsed while the class is in TDZ\n      state.funct[\"(scope)\"].addbinding(className, {\n        type: \"class\",\n        initialized: false,\n        token: classNameToken\n      });\n    }\n\n    // Class Declaration: 'class <Classname> extends <Superclass>'\n    if (state.tokens.next.value === \"extends\") {\n      advance(\"extends\");\n      expression(context, 0);\n    }\n\n    if (classNameToken) {\n      this.name = classNameToken;\n      state.funct[\"(scope)\"].initialize(className);\n    } else {\n      this.name = null;\n    }\n\n    state.funct[\"(scope)\"].stack();\n    classBody(this, context);\n    return this;\n  });\n  classDeclaration.exps = true;\n  classDeclaration.declaration = true;\n\n  /*\n    Class expression\n\n    The Block- and Expression- handling for \"class\" are almost identical, except for the ordering of steps.\n    In an expression:, the name should not be saved into the calling scope, but is still accessible inside the definition, so we open a new scope first, then save the name. We also mark it as used.\n  */\n  prefix(\"class\", function(context) {\n    var className, classNameToken;\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, \"class\", \"6\");\n    }\n    state.inClassBody = true;\n\n    // Class Declaration: 'class <Classname>'\n    if (state.tokens.next.identifier && state.tokens.next.value !== \"extends\") {\n      classNameToken = state.tokens.next;\n      className = classNameToken.value;\n      identifier(context);\n    }\n\n    // Class Declaration: 'class <Classname> extends <Superclass>'\n    if (state.tokens.next.value === \"extends\") {\n      advance(\"extends\");\n      expression(context, 0);\n    }\n\n    state.funct[\"(scope)\"].stack();\n    if (classNameToken) {\n      this.name = classNameToken;\n      state.funct[\"(scope)\"].addbinding(className, {\n        type: \"class\",\n        initialized: true,\n        token: classNameToken\n      });\n      state.funct[\"(scope)\"].block.use(className, classNameToken);\n    } else {\n      this.name = null;\n    }\n\n    classBody(this, context);\n    return this;\n  });\n\n  function classBody(classToken, context) {\n    var props = Object.create(null);\n    var name, accessorType, token, isStatic, inGenerator, hasConstructor;\n\n    /* istanbul ignore else */\n    if (state.tokens.next.value === \"{\") {\n      advance(\"{\");\n    } else {\n      warning(\"W116\", state.tokens.curr, \"identifier\", state.tokens.next.type); //?\n      advance();\n    }\n\n    while (state.tokens.next.value !== \"}\") {\n      isStatic = false;\n      inGenerator = false;\n      context &= ~prodParams.preAsync;\n\n      if (state.tokens.next.value === \"static\" &&\n        !checkPunctuator(peek(), \"(\")) {\n        isStatic = true;\n        advance();\n      }\n\n      if (state.tokens.next.value === \"async\") {\n        if (!checkPunctuator(peek(), \"(\")) {\n          context |= prodParams.preAsync;\n          advance();\n\n          nolinebreak(state.tokens.curr);\n\n          if (checkPunctuator(state.tokens.next, \"*\")) {\n            inGenerator = true;\n            advance(\"*\");\n\n            if (!state.inES9()) {\n              warning(\"W119\", state.tokens.next, \"async generators\", \"9\");\n            }\n          }\n\n          if (!state.inES8()) {\n            warning(\"W119\", state.tokens.curr, \"async functions\", \"8\");\n          }\n        }\n      }\n\n      if (state.tokens.next.value === \"*\") {\n        inGenerator = true;\n        advance();\n      }\n\n      token = state.tokens.next;\n\n      if ((token.value === \"set\" || token.value === \"get\") && !checkPunctuator(peek(), \"(\")) {\n        if (inGenerator) {\n          /* istanbul ignore next */\n          error(\"E024\", token, token.value);\n        }\n        accessorType = token.value;\n        advance();\n        token = state.tokens.next;\n\n        if (!isStatic && token.value === \"constructor\") {\n          error(\"E049\", token, \"class \" + accessorType + \"ter method\", token.value);\n        } else if (isStatic && token.value === \"prototype\") {\n          error(\"E049\", token, \"static class \" + accessorType + \"ter method\", token.value);\n        }\n      } else {\n        accessorType = null;\n      }\n\n      switch (token.value) {\n        case \";\":\n          warning(\"W032\", token);\n          advance();\n          break;\n        case \"constructor\":\n          if (isStatic) {\n            // treat like a regular method -- static methods can be called 'constructor'\n            name = propertyName(context);\n            saveProperty(props, name, token, true, isStatic);\n            doMethod(classToken, context, name, inGenerator);\n          } else {\n            if (inGenerator || context & prodParams.preAsync) {\n              error(\"E024\", token, token.value);\n            } else if (hasConstructor) {\n              /* istanbul ignore next */\n              error(\"E024\", token, token.value);\n            } else {\n              hasConstructor = !accessorType && !isStatic;\n            }\n            advance();\n            doMethod(classToken, context, state.nameStack.infer());\n          }\n          break;\n        case \"[\":\n          name = computedPropertyName(context);\n          doMethod(classToken, context, name, inGenerator);\n          // We don't check names (via calling saveProperty()) of computed expressions like [\"Symbol.iterator\"]()\n          break;\n        default:\n          name = propertyName(context);\n          if (name === undefined) {\n            error(\"E024\", token, token.value);\n            advance();\n            break;\n          }\n\n          if (accessorType) {\n            saveAccessor(accessorType, props, name, token, true, isStatic);\n            name = state.nameStack.infer();\n          } else {\n            if (isStatic && name === \"prototype\") {\n              error(\"E049\", token, \"static class method\", name);\n            }\n\n            saveProperty(props, name, token, true, isStatic);\n          }\n\n          doMethod(classToken, context, name, inGenerator);\n          break;\n      }\n    }\n    advance(\"}\");\n    checkProperties(props);\n\n    state.inClassBody = false;\n    state.funct[\"(scope)\"].unstack();\n  }\n\n  function doMethod(classToken, context, name, generator) {\n    if (generator) {\n      if (!state.inES6()) {\n        warning(\"W119\", state.tokens.curr, \"function*\", \"6\");\n      }\n    }\n\n    if (state.tokens.next.value !== \"(\") {\n      error(\"E054\", state.tokens.next, state.tokens.next.value);\n      advance();\n      if (state.tokens.next.value === \"{\") {\n        // manually cheating the test \"invalidClasses\", which asserts this particular behavior when a class is misdefined.\n        advance();\n        if (state.tokens.next.value === \"}\") {\n          warning(\"W116\", state.tokens.next, \"(\", state.tokens.next.value);\n          advance();\n          identifier(context);\n          advance();\n        }\n        /* istanbul ignore next */\n        return;\n      } else {\n        while (state.tokens.next.value !== \"(\") {\n          advance();\n        }\n      }\n    }\n\n    doFunction(context, { name: name,\n        type: generator ? \"generator\" : null,\n        isMethod: true,\n        statement: classToken });\n  }\n\n  prefix(\"void\").exps = true;\n\n  infix(\".\", function(context, left, that) {\n    var m = identifier(context, true);\n\n    if (typeof m === \"string\") {\n      countMember(m);\n    }\n\n    that.left = left;\n    that.right = m;\n\n    if (m && m === \"hasOwnProperty\" && state.tokens.next.value === \"=\") {\n      warning(\"W001\");\n    }\n\n    if (left && left.value === \"arguments\" && (m === \"callee\" || m === \"caller\")) {\n      if (state.option.noarg)\n        warning(\"W059\", left, m);\n      else if (state.isStrict())\n        error(\"E008\");\n    } else if (!state.option.evil && left && left.value === \"document\" &&\n        (m === \"write\" || m === \"writeln\")) {\n      warning(\"W060\", left);\n    }\n\n    if (!state.option.evil && (m === \"eval\" || m === \"execScript\")) {\n      if (isGlobalEval(left, state)) {\n        warning(\"W061\");\n      }\n    }\n\n    return that;\n  }, 160, true);\n\n  infix(\"?.\", function(context, left, that) {\n    if (!state.inES11()) {\n      warning(\"W119\", state.tokens.curr, \"Optional chaining\", \"11\");\n    }\n\n\n    if (checkPunctuator(state.tokens.next, \"[\")) {\n      that.left = left;\n      advance();\n      that.right = state.tokens.curr.led(context, left);\n    } else if (checkPunctuator(state.tokens.next, \"(\")) {\n      that.left = left;\n      advance();\n      that.right = state.tokens.curr.led(context, left);\n      that.exps = true;\n    } else {\n      state.syntax[\".\"].led.call(that, context, left);\n    }\n\n    if (state.tokens.next.type === \"(template)\") {\n      error(\"E024\", state.tokens.next, \"`\");\n    }\n\n    return that;\n  }, 160, true);\n\n\n  /**\n   * Determine if a CallExpression's \"base\" is a type of expression commonly\n   * used in this position.\n   *\n   * @param {token} token - token describing the \"base\" of the CallExpression\n   * @returns {boolean}\n   */\n  function isTypicalCallExpression(token) {\n    return token.identifier || token.id === \".\" || token.id === \"[\" ||\n      token.id === \"=>\" || token.id === \"(\" || token.id === \"&&\" ||\n      token.id === \"||\" || token.id === \"?\" || token.id === \"async\" ||\n      token.id === \"?.\" || (state.inES6() && token[\"(name)\"]);\n  }\n\n  infix(\"(\", function(context, left, that) {\n    if (state.option.immed && left && !left.immed && left.id === \"function\") {\n      warning(\"W062\");\n    }\n\n    if (state.option.asi && checkPunctuators(state.tokens.prev, [\")\", \"]\"]) &&\n      !sameLine(state.tokens.prev, state.tokens.curr)) {\n      warning(\"W014\", state.tokens.curr, state.tokens.curr.id);\n    }\n\n    var n = 0;\n    var p = [];\n\n    if (left) {\n      if (left.type === \"(identifier)\") {\n        var newcapRe = /^[A-Z]([A-Z0-9_$]*[a-z][A-Za-z0-9_$]*)?$/;\n        var newcapIgnore = [\n          \"Array\", \"Boolean\", \"Date\", \"Error\", \"Function\", \"Number\",\n          \"Object\", \"RegExp\", \"String\", \"Symbol\"\n        ];\n        if (newcapRe.test(left.value) && newcapIgnore.indexOf(left.value) === -1) {\n          if (left.value === \"Math\") {\n            /* istanbul ignore next */\n            warning(\"W063\", left);\n          } else if (state.option.newcap) {\n            warning(\"W064\", left);\n          }\n        }\n      }\n    }\n\n    if (state.tokens.next.id !== \")\") {\n      for (;;) {\n        spreadrest(\"spread\");\n\n        p[p.length] = expression(context, 10);\n        n += 1;\n        if (state.tokens.next.id !== \",\") {\n          break;\n        }\n        advance(\",\");\n        checkComma({ allowTrailing: true });\n\n        if (state.tokens.next.id === \")\") {\n          if (!state.inES8()) {\n            warning(\"W119\", state.tokens.curr, \"Trailing comma in arguments lists\", \"8\");\n          }\n\n          break;\n        }\n      }\n    }\n\n    advance(\")\");\n\n    if (typeof left === \"object\") {\n      if (!state.inES5() && left.value === \"parseInt\" && n === 1) {\n        warning(\"W065\", state.tokens.curr);\n      }\n      if (!state.option.evil) {\n        if (left.value === \"eval\" || left.value === \"Function\" ||\n            left.value === \"execScript\") {\n          warning(\"W061\", left);\n\n          // This conditional expression was initially implemented with a typo\n          // which prevented the branch's execution in all cases. While\n          // enabling the code will produce behavior that is consistent with\n          // the other forms of code evaluation that follow, such a change is\n          // also technically incompatable with prior versions of JSHint (due\n          // to the fact that the behavior was never formally documented). This\n          // branch should be enabled as part of a major release.\n          //if (p[0] && p[0].id === \"(string)\") {\n          //  addEvalCode(left, p[0]);\n          //}\n        } else if (p[0] && p[0].id === \"(string)\" &&\n             (left.value === \"setTimeout\" ||\n            left.value === \"setInterval\")) {\n          warning(\"W066\", left);\n          addEvalCode(left, p[0]);\n\n        // window.setTimeout/setInterval\n        } else if (p[0] && p[0].id === \"(string)\" &&\n             left.value === \".\" &&\n             left.left.value === \"window\" &&\n             (left.right === \"setTimeout\" ||\n            left.right === \"setInterval\")) {\n          warning(\"W066\", left);\n          addEvalCode(left, p[0]);\n        }\n      }\n      if (!isTypicalCallExpression(left)) {\n        warning(\"W067\", that);\n      }\n    }\n\n    that.left = left;\n    return that;\n  }, 155, true).exps = true;\n\n  function peekThroughParens(parens) {\n    var pn = state.tokens.next;\n    var i = -1;\n    var pn1;\n\n    do {\n      if (pn.value === \"(\") {\n        parens += 1;\n      } else if (pn.value === \")\") {\n        parens -= 1;\n      }\n\n      i += 1;\n      pn1 = pn;\n      pn = peek(i);\n    } while (!(parens === 0 && pn1.value === \")\") && pn.type !== \"(end)\");\n\n    return pn;\n  }\n\n  prefix(\"(\", function(context, rbp) {\n    var ret, triggerFnExpr, first, last;\n    var opening = state.tokens.curr;\n    var preceeding = state.tokens.prev;\n    var isNecessary = !state.option.singleGroups;\n    var pn = peekThroughParens(1);\n\n    if (state.tokens.next.id === \"function\") {\n      triggerFnExpr = state.tokens.next.immed = true;\n    }\n\n    // If the balanced grouping operator is followed by a \"fat arrow\", the\n    // current token marks the beginning of a \"fat arrow\" function and parsing\n    // should proceed accordingly.\n    if (pn.value === \"=>\") {\n      pn.funct = doFunction(context, { type: \"arrow\", parsedOpening: true });\n      return pn;\n    }\n\n    // The ECMA262 grammar requires an expression between the \"opening\n    // parenthesis\" and \"close parenthesis\" tokens of the grouping operator.\n    // However, the \"ignore\" directive is commonly used to inject values that\n    // are not included in the token stream. For example:\n    //\n    //     return (\n    //       /*jshint ignore:start */\n    //       <div></div>\n    //       /*jshint ignore:end */\n    //     );\n    //\n    // The \"empty\" grouping operator is permitted in order to tolerate this\n    // pattern.\n    if (state.tokens.next.id === \")\") {\n      advance(\")\");\n      return;\n    }\n\n    ret = expression(context, 0);\n\n    advance(\")\", this);\n\n    if (!ret) {\n      return;\n    }\n\n    ret.paren = true;\n\n    if (state.option.immed && ret && ret.id === \"function\") {\n      if (state.tokens.next.id !== \"(\" &&\n        state.tokens.next.id !== \".\" && state.tokens.next.id !== \"[\") {\n        warning(\"W068\", this);\n      }\n    }\n\n    if (ret.id === \",\") {\n      first = ret.left;\n      while (first.id === \",\") {\n        first = first.left;\n      }\n\n      last = ret.right;\n    } else {\n      first = last = ret;\n\n      if (!isNecessary) {\n        // async functions are identified after parsing due to the complexity\n        // of disambiguating the `async` keyword.\n        if (!triggerFnExpr) {\n          triggerFnExpr = ret.id === \"async\";\n        }\n\n        isNecessary =\n          // Used to distinguish from an ExpressionStatement which may not\n          // begin with the `{` and `function` tokens\n          (opening.beginsStmt && (ret.id === \"{\" || triggerFnExpr)) ||\n          // Used to signal that a function expression is being supplied to\n          // some other operator.\n          (triggerFnExpr &&\n            // For parenthesis wrapping a function expression to be considered\n            // necessary, the grouping operator should be the left-hand-side of\n            // some other operator--either within the parenthesis or directly\n            // following them.\n            (!isEndOfExpr() || state.tokens.prev.id !== \"}\")) ||\n          // Used to demarcate an arrow function as the left-hand side of some\n          // operator.\n          (ret.id === \"=>\" && !isEndOfExpr()) ||\n          // Used as the return value of a single-statement arrow function\n          (ret.id === \"{\" && preceeding.id === \"=>\") ||\n          // Used to cover a unary expression as the left-hand side of the\n          // exponentiation operator\n          (beginsUnaryExpression(ret) && state.tokens.next.id === \"**\") ||\n          // Used to cover a logical operator as the right-hand side of the\n          // nullish coalescing operator\n          (preceeding.id === \"??\" && (ret.id === \"&&\" || ret.id === \"||\")) ||\n          // Used to delineate an integer number literal from a dereferencing\n          // punctuator (otherwise interpreted as a decimal point)\n          (ret.type === \"(number)\" &&\n            checkPunctuator(pn, \".\") && /^\\d+$/.test(ret.value)) ||\n          // Used to wrap object destructuring assignment\n          (opening.beginsStmt && ret.id === \"=\" && ret.left.id === \"{\") ||\n          // Used to allow optional chaining with other language features which\n          // are otherwise restricted.\n          (ret.id === \"?.\" &&\n              (preceeding.id === \"new\" || state.tokens.next.type === \"(template)\"));\n      }\n    }\n\n    // The operator may be necessary to override the default binding power of\n    // neighboring operators (whenever there is an operator in use within the\n    // first expression *or* the current group contains multiple expressions)\n    if (!isNecessary && (isOperator(first) || first !== last)) {\n      isNecessary =\n        (rbp > first.lbp) ||\n        (rbp > 0 && rbp === first.lbp) ||\n        (!isEndOfExpr() && last.rbp < state.tokens.next.lbp);\n    }\n\n    if (!isNecessary) {\n      warning(\"W126\", opening);\n    }\n\n    return ret;\n  });\n\n  application(\"=>\").rbp = 161;\n\n  infix(\"[\", function(context, left, that) {\n    var e, s, canUseDot;\n\n    if (state.option.asi && checkPunctuators(state.tokens.prev, [\")\", \"]\"]) &&\n      !sameLine(state.tokens.prev, state.tokens.curr)) {\n      warning(\"W014\", state.tokens.curr, state.tokens.curr.id);\n    }\n\n    e = expression(context & ~prodParams.noin, 0);\n\n    if (e && e.type === \"(string)\") {\n      if (!state.option.evil && (e.value === \"eval\" || e.value === \"execScript\")) {\n        if (isGlobalEval(left, state)) {\n          warning(\"W061\");\n        }\n      }\n\n      countMember(e.value);\n      if (!state.option.sub && reg.identifier.test(e.value)) {\n        s = state.syntax[e.value];\n\n        if (s) {\n          canUseDot = !isReserved(context, s);\n        } else {\n          // This branch exists to preserve legacy behavior with version 2.9.5\n          // and earlier. In those releases, `eval` and `arguments` were\n          // incorrectly interpreted as reserved keywords, so Member\n          // Expressions such as `object[\"eval\"]` did not trigger warning W069.\n          //\n          // TODO: Remove in JSHint 3\n          canUseDot = e.value !== \"eval\" && e.value !== \"arguments\";\n        }\n\n        if (canUseDot) {\n          warning(\"W069\", state.tokens.prev, e.value);\n        }\n      }\n    }\n    advance(\"]\", that);\n\n    if (e && e.value === \"hasOwnProperty\" && state.tokens.next.value === \"=\") {\n      warning(\"W001\");\n    }\n\n    that.left = left;\n    that.right = e;\n    return that;\n  }, 160, true);\n\n  function comprehensiveArrayExpression(context) {\n    var res = {};\n    res.exps = true;\n    state.funct[\"(comparray)\"].stack();\n\n    // Handle reversed for expressions, used in spidermonkey\n    var reversed = false;\n    if (state.tokens.next.value !== \"for\") {\n      reversed = true;\n      if (!state.inMoz()) {\n        warning(\"W116\", state.tokens.next, \"for\", state.tokens.next.value);\n      }\n      state.funct[\"(comparray)\"].setState(\"use\");\n      res.right = expression(context, 10);\n    }\n\n    advance(\"for\");\n    if (state.tokens.next.value === \"each\") {\n      advance(\"each\");\n      if (!state.inMoz()) {\n        warning(\"W118\", state.tokens.curr, \"for each\");\n      }\n    }\n    advance(\"(\");\n    state.funct[\"(comparray)\"].setState(\"define\");\n    res.left = expression(context, 130);\n    if (_.includes([\"in\", \"of\"], state.tokens.next.value)) {\n      advance();\n    } else {\n      /* istanbul ignore next */\n      error(\"E045\", state.tokens.curr);\n    }\n    state.funct[\"(comparray)\"].setState(\"generate\");\n    expression(context, 10);\n\n    advance(\")\");\n    if (state.tokens.next.value === \"if\") {\n      advance(\"if\");\n      advance(\"(\");\n      state.funct[\"(comparray)\"].setState(\"filter\");\n      expression(context, 10);\n      advance(\")\");\n    }\n\n    if (!reversed) {\n      state.funct[\"(comparray)\"].setState(\"use\");\n      res.right = expression(context, 10);\n    }\n\n    advance(\"]\");\n    state.funct[\"(comparray)\"].unstack();\n    return res;\n  }\n\n  prefix(\"[\", function(context) {\n    var blocktype = lookupBlockType();\n    if (blocktype.isCompArray) {\n      if (!state.option.esnext && !state.inMoz()) {\n        warning(\"W118\", state.tokens.curr, \"array comprehension\");\n      }\n      return comprehensiveArrayExpression(context);\n    } else if (blocktype.isDestAssign) {\n      this.destructAssign = destructuringPattern(context, {\n          openingParsed: true,\n          assignment: true\n        });\n      return this;\n    }\n    var b = !sameLine(state.tokens.curr, state.tokens.next);\n    this.first = [];\n    if (b) {\n      indent += state.option.indent;\n      if (state.tokens.next.from === indent + state.option.indent) {\n        /* istanbul ignore next */\n        indent += state.option.indent;\n      }\n    }\n    while (state.tokens.next.id !== \"(end)\") {\n      while (state.tokens.next.id === \",\") {\n        if (!state.option.elision) {\n          if (!state.inES5()) {\n            // Maintain compat with old options --- ES5 mode without\n            // elision=true will warn once per comma\n            warning(\"W070\");\n          } else {\n            warning(\"W128\");\n            do {\n              advance(\",\");\n            } while (state.tokens.next.id === \",\");\n            continue;\n          }\n        }\n        advance(\",\");\n      }\n\n      if (state.tokens.next.id === \"]\") {\n        break;\n      }\n\n      spreadrest(\"spread\");\n\n      this.first.push(expression(context, 10));\n      if (state.tokens.next.id === \",\") {\n        advance(\",\");\n        checkComma({ allowTrailing: true });\n        if (state.tokens.next.id === \"]\" && !state.inES5()) {\n          warning(\"W070\", state.tokens.curr);\n          break;\n        }\n      } else {\n        if (state.option.trailingcomma && state.inES5()) {\n          warningAt(\"W140\", state.tokens.curr.line, state.tokens.curr.character);\n        }\n        break;\n      }\n    }\n    if (b) {\n      indent -= state.option.indent;\n    }\n    advance(\"]\", this);\n    return this;\n  });\n\n\n  function isMethod() {\n    return !!state.funct[\"(method)\"];\n  }\n\n  /**\n   * Retrieve the value of the next token if it is a valid LiteralPropertyName\n   * and optionally advance the parser.\n   *\n   * @param {number} context - the parsing context; see `prod-params.js` for\n   *                           more information\n   *\n   * @returns {string|undefined} - the value of the identifier, if present\n   */\n  function propertyName(context) {\n    var id = optionalidentifier(context, true);\n\n    if (!id) {\n      if (state.tokens.next.id === \"(string)\") {\n        id = state.tokens.next.value;\n        advance();\n      } else if (state.tokens.next.id === \"(number)\") {\n        id = state.tokens.next.value.toString();\n        advance();\n      }\n    }\n\n    if (id === \"hasOwnProperty\") {\n      warning(\"W001\");\n    }\n\n    return id;\n  }\n\n  /**\n   * @param {Number} context The parsing context\n   * @param {Object} [options]\n   * @param {token} [options.loneArg] The argument to the function in cases\n   *                                  where it was defined using the\n   *                                  single-argument shorthand.\n   * @param {bool} [options.parsedOpening] Whether the opening parenthesis has\n   *                                       already been parsed.\n   *\n   * @returns {{ arity: number, params: Array.<string>, isSimple: boolean }}\n   */\n  function functionparams(context, options) {\n    var next;\n    var paramsIds = [];\n    var ident;\n    var tokens = [];\n    var t;\n    var pastDefault = false;\n    var pastRest = false;\n    var arity = 0;\n    var loneArg = options && options.loneArg;\n    var hasDestructuring = false;\n\n    if (loneArg && loneArg.identifier === true) {\n      state.funct[\"(scope)\"].addParam(loneArg.value, loneArg);\n      return { arity: 1, params: [ loneArg.value ], isSimple: true };\n    }\n\n    next = state.tokens.next;\n\n    if (!options || !options.parsedOpening) {\n      advance(\"(\");\n    }\n\n    if (state.tokens.next.id === \")\") {\n      advance(\")\");\n      return;\n    }\n\n    function addParam(addParamArgs) {\n      state.funct[\"(scope)\"].addParam.apply(state.funct[\"(scope)\"], addParamArgs);\n    }\n\n    for (;;) {\n      arity++;\n      // are added to the param scope\n      var currentParams = [];\n\n      pastRest = spreadrest(\"rest\");\n\n      if (_.includes([\"{\", \"[\"], state.tokens.next.id)) {\n        hasDestructuring = true;\n        tokens = destructuringPattern(context);\n        for (t in tokens) {\n          t = tokens[t];\n          if (t.id) {\n            paramsIds.push(t.id);\n            currentParams.push([t.id, t.token]);\n          }\n        }\n      } else {\n        ident = identifier(context);\n\n        if (ident) {\n          paramsIds.push(ident);\n          currentParams.push([ident, state.tokens.curr]);\n        } else {\n          // Skip invalid parameter.\n          while (!checkPunctuators(state.tokens.next, [\",\", \")\"])) advance();\n        }\n      }\n\n      // It is valid to have a regular argument after a default argument\n      // since undefined can be used for missing parameters. Still warn as it is\n      // a possible code smell.\n      if (pastDefault) {\n        if (state.tokens.next.id !== \"=\") {\n          error(\"W138\", state.tokens.curr);\n        }\n      }\n      if (state.tokens.next.id === \"=\") {\n        if (!state.inES6()) {\n          warning(\"W119\", state.tokens.next, \"default parameters\", \"6\");\n        }\n\n        if (pastRest) {\n          error(\"E062\", state.tokens.next);\n        }\n\n        advance(\"=\");\n        pastDefault = true;\n        expression(context, 10);\n      }\n\n      // now we have evaluated the default expression, add the variable to the param scope\n      currentParams.forEach(addParam);\n      if (state.tokens.next.id === \",\") {\n        if (pastRest) {\n          warning(\"W131\", state.tokens.next);\n        }\n        advance(\",\");\n        checkComma({ allowTrailing: true });\n      }\n\n      if (state.tokens.next.id === \")\") {\n        if (state.tokens.curr.id === \",\" && !state.inES8()) {\n          warning(\"W119\", state.tokens.curr, \"Trailing comma in function parameters\", \"8\");\n        }\n\n        advance(\")\", next);\n        return {\n          arity: arity,\n          params: paramsIds,\n          isSimple: !hasDestructuring && !pastRest && !pastDefault\n        };\n      }\n    }\n  }\n\n  /**\n   * Factory function for creating objects used to track statistics of function\n   * literals.\n   *\n   * @param {string} name - the identifier name to associate with the function\n   * @param {object} [token] - token responsible for creating the function\n   *                           object\n   * @param {object} [overwrites] - a collection of properties that should\n   *                                override the corresponding default value of\n   *                                the new \"functor\" object\n   */\n  function functor(name, token, overwrites) {\n    var funct = {\n      \"(name)\"      : name,\n      \"(breakage)\"  : 0,\n      \"(loopage)\"   : 0,\n      // The strictness of the function body is tracked via a dedicated\n      // property (as opposed to via the global `state` object) so that the\n      // value can be referenced after the body has been fully parsed (i.e.\n      // when validating the identifier used in function declarations and\n      // function expressions).\n      \"(isStrict)\"  : \"unknown\",\n\n      \"(global)\"    : false,\n\n      \"(line)\"      : null,\n      \"(character)\" : null,\n      \"(metrics)\"   : null,\n      \"(statement)\" : null,\n      \"(context)\"   : null,\n      \"(scope)\"     : null,\n      \"(comparray)\" : null,\n      \"(yielded)\"   : null,\n      \"(arrow)\"     : null,\n      \"(async)\"     : null,\n      \"(params)\"    : null\n    };\n\n    if (token) {\n      _.extend(funct, {\n        \"(line)\"     : token.line,\n        \"(character)\": token.character,\n        \"(metrics)\"  : createMetrics(token)\n      });\n    }\n\n    _.extend(funct, overwrites);\n\n    if (funct[\"(context)\"]) {\n      funct[\"(scope)\"] = funct[\"(context)\"][\"(scope)\"];\n      funct[\"(comparray)\"]  = funct[\"(context)\"][\"(comparray)\"];\n    }\n\n    return funct;\n  }\n\n  /**\n   * Determine if the parser has begun parsing executable code.\n   *\n   * @param {Token} funct - The current \"functor\" token\n   *\n   * @returns {boolean}\n   */\n  function hasParsedCode(funct) {\n    return funct[\"(global)\"] && !funct[\"(verb)\"];\n  }\n\n  /**\n   * This function is used as both a null-denotation method *and* a\n   * left-denotation method, meaning the first parameter is overloaded.\n   */\n  function doTemplateLiteral(context, leftOrRbp) {\n    // ASSERT: this.type === \"(template)\"\n    // jshint validthis: true\n    var ctx = this.context;\n    var noSubst = this.noSubst;\n    var depth = this.depth;\n    var left = typeof leftOrRbp === \"number\" ? null : leftOrRbp;\n\n    if (!noSubst) {\n      while (!end()) {\n        if (!state.tokens.next.template || state.tokens.next.depth > depth) {\n          expression(context, 0); // should probably have different rbp?\n        } else {\n          // skip template start / middle\n          advance();\n        }\n      }\n    }\n\n    return {\n      id: \"(template)\",\n      type: \"(template)\",\n      tag: left\n    };\n\n    function end() {\n      if (state.tokens.curr.template && state.tokens.curr.tail &&\n          state.tokens.curr.context === ctx) {\n        /* istanbul ignore next */\n        return true;\n      }\n      var complete = (state.tokens.next.template && state.tokens.next.tail &&\n                      state.tokens.next.context === ctx);\n      if (complete) advance();\n      return complete || state.tokens.next.isUnclosed;\n    }\n  }\n\n  /**\n   * Parse a function literal.\n   *\n   * @param {Number} context The parsing context\n   * @param {Object} [options]\n   * @param {string} [options.name] The identifier belonging to the function (if\n   *                                any)\n   * @param {token} [options.statement] The statement that triggered creation\n   *                                    of the current function.\n   * @param {string} [options.type] If specified, either \"generator\" or \"arrow\"\n   * @param {token} [options.loneArg] The argument to the function in cases\n   *                                  where it was defined using the\n   *                                  single-argument shorthand\n   * @param {bool} [options.parsedOpening] Whether the opening parenthesis has\n   *                                       already been parsed\n   * @param {string} [options.classExprBinding] Define a function with this\n   *                                            identifier in the new function's\n   *                                            scope, mimicking the bahavior of\n   *                                            class expression names within\n   *                                            the body of member functions.\n   */\n  function doFunction(context, options) {\n    var f, token, name, statement, classExprBinding, isGenerator, isArrow,\n      isMethod, ignoreLoopFunc;\n    var oldOption = state.option;\n    var oldIgnored = state.ignored;\n    var isAsync = context & prodParams.preAsync;\n\n    if (options) {\n      name = options.name;\n      statement = options.statement;\n      classExprBinding = options.classExprBinding;\n      isGenerator = options.type === \"generator\";\n      isArrow = options.type === \"arrow\";\n      isMethod = options.isMethod;\n      ignoreLoopFunc = options.ignoreLoopFunc;\n    }\n\n    context &= ~prodParams.noin;\n    context &= ~prodParams.tryClause;\n\n    if (isAsync) {\n      context |= prodParams.async;\n    } else {\n      context &= ~prodParams.async;\n    }\n\n    if (isGenerator) {\n      context |= prodParams.yield;\n    } else if (!isArrow) {\n      context &= ~prodParams.yield;\n    }\n    context &= ~prodParams.preAsync;\n\n    state.option = Object.create(state.option);\n    state.ignored = Object.create(state.ignored);\n\n    state.funct = functor(name || state.nameStack.infer(), state.tokens.next, {\n      \"(statement)\": statement,\n      \"(context)\":   state.funct,\n      \"(arrow)\":     isArrow,\n      \"(method)\":    isMethod,\n      \"(async)\":     isAsync\n    });\n\n    f = state.funct;\n    token = state.tokens.curr;\n\n    functions.push(state.funct);\n\n    // So that the function is available to itself and referencing itself is not\n    // seen as a closure, add the function name to a new scope, but do not\n    // test for unused (unused: false)\n    // it is a new block scope so that params can override it, it can be block scoped\n    // but declarations inside the function don't cause already declared error\n    state.funct[\"(scope)\"].stack(\"functionouter\");\n    var internallyAccessibleName = !isMethod && (name || classExprBinding);\n    if (internallyAccessibleName) {\n      state.funct[\"(scope)\"].block.add(internallyAccessibleName,\n        classExprBinding ? \"class\" : \"function\", state.tokens.curr, false);\n    }\n\n    if (!isArrow) {\n      state.funct[\"(scope)\"].funct.add(\"arguments\", \"var\", token, false);\n    }\n\n    // create the param scope (params added in functionparams)\n    state.funct[\"(scope)\"].stack(\"functionparams\");\n\n    var paramsInfo = functionparams(context, options);\n\n    if (paramsInfo) {\n      state.funct[\"(params)\"] = paramsInfo.params;\n      state.funct[\"(hasSimpleParams)\"] = paramsInfo.isSimple;\n      state.funct[\"(metrics)\"].arity = paramsInfo.arity;\n      state.funct[\"(metrics)\"].verifyMaxParametersPerFunction();\n    } else {\n      state.funct[\"(params)\"] = [];\n      state.funct[\"(metrics)\"].arity = 0;\n      state.funct[\"(hasSimpleParams)\"] = true;\n    }\n\n    if (isArrow) {\n      context &= ~prodParams.yield;\n\n      if (!state.inES6(true)) {\n        warning(\"W119\", state.tokens.curr, \"arrow function syntax (=>)\", \"6\");\n      }\n\n      if (!options.loneArg) {\n        advance(\"=>\");\n      }\n    }\n\n    block(context, false, true, true, isArrow);\n\n    if (!state.option.noyield && isGenerator && !state.funct[\"(yielded)\"]) {\n      warning(\"W124\", state.tokens.curr);\n    }\n\n    state.funct[\"(metrics)\"].verifyMaxStatementsPerFunction();\n    state.funct[\"(metrics)\"].verifyMaxComplexityPerFunction();\n    state.funct[\"(unusedOption)\"] = state.option.unused;\n    state.option = oldOption;\n    state.ignored = oldIgnored;\n    state.funct[\"(last)\"] = state.tokens.curr.line;\n    state.funct[\"(lastcharacter)\"] = state.tokens.curr.character;\n\n    // unstack the params scope\n    state.funct[\"(scope)\"].unstack(); // also does usage and label checks\n\n    // unstack the function outer stack\n    state.funct[\"(scope)\"].unstack();\n\n    state.funct = state.funct[\"(context)\"];\n\n    if (!ignoreLoopFunc && !state.option.loopfunc && state.funct[\"(loopage)\"]) {\n      // If the function we just parsed accesses any non-local variables\n      // trigger a warning. Otherwise, the function is safe even within\n      // a loop.\n      if (f[\"(outerMutables)\"]) {\n        warning(\"W083\", token, f[\"(outerMutables)\"].join(\", \"));\n      }\n    }\n\n    return f;\n  }\n\n  function createMetrics(functionStartToken) {\n    return {\n      statementCount: 0,\n      nestedBlockDepth: -1,\n      ComplexityCount: 1,\n      arity: 0,\n\n      verifyMaxStatementsPerFunction: function() {\n        if (state.option.maxstatements &&\n          this.statementCount > state.option.maxstatements) {\n          warning(\"W071\", functionStartToken, this.statementCount);\n        }\n      },\n\n      verifyMaxParametersPerFunction: function() {\n        if (_.isNumber(state.option.maxparams) &&\n          this.arity > state.option.maxparams) {\n          warning(\"W072\", functionStartToken, this.arity);\n        }\n      },\n\n      verifyMaxNestedBlockDepthPerFunction: function() {\n        if (state.option.maxdepth &&\n          this.nestedBlockDepth > 0 &&\n          this.nestedBlockDepth === state.option.maxdepth + 1) {\n          warning(\"W073\", null, this.nestedBlockDepth);\n        }\n      },\n\n      verifyMaxComplexityPerFunction: function() {\n        var max = state.option.maxcomplexity;\n        var cc = this.ComplexityCount;\n        if (max && cc > max) {\n          warning(\"W074\", functionStartToken, cc);\n        }\n      }\n    };\n  }\n\n  function increaseComplexityCount() {\n    state.funct[\"(metrics)\"].ComplexityCount += 1;\n  }\n\n  // Parse assignments that were found instead of conditionals.\n  // For example: if (a = 1) { ... }\n\n  function checkCondAssignment(token) {\n    if (!token || token.paren) {\n      return;\n    }\n\n    if (token.id === \",\") {\n      checkCondAssignment(token.right);\n      return;\n    }\n\n    switch (token.id) {\n    case \"=\":\n    case \"+=\":\n    case \"-=\":\n    case \"*=\":\n    case \"%=\":\n    case \"&=\":\n    case \"|=\":\n    case \"^=\":\n    case \"/=\":\n      if (!state.option.boss) {\n        warning(\"W084\", token);\n      }\n    }\n  }\n\n  /**\n   * Validate the properties defined within an object literal or class body.\n   * See the `saveAccessor` and `saveProperty` functions for more detail.\n   *\n   * @param {object} props - Collection of objects describing the properties\n   *                         encountered\n   */\n  function checkProperties(props) {\n    // Check for lonely setters if in the ES5 mode.\n    if (state.inES5()) {\n      for (var name in props) {\n        if (props[name] && props[name].setterToken && !props[name].getterToken &&\n          !props[name].static) {\n          warning(\"W078\", props[name].setterToken);\n        }\n      }\n    }\n  }\n\n  function metaProperty(context, name, c) {\n    if (checkPunctuator(state.tokens.next, \".\")) {\n      var left = state.tokens.curr.id;\n      advance(\".\");\n      var id = identifier(context);\n      state.tokens.curr.isMetaProperty = true;\n      if (name !== id) {\n        error(\"E057\", state.tokens.prev, left, id);\n      } else {\n        c();\n      }\n      return state.tokens.curr;\n    }\n  }\n\n//object literals\n  (function(x) {\n    x.nud = function(context) {\n      var b, f, i, params, t, isGeneratorMethod = false, nextVal;\n      var props = Object.create(null); // All properties, including accessors\n      var isAsyncMethod = false;\n\n      b = !sameLine(state.tokens.curr, state.tokens.next);\n      if (b) {\n        indent += state.option.indent;\n        if (state.tokens.next.from === indent + state.option.indent) {\n          /* istanbul ignore next */\n          indent += state.option.indent;\n        }\n      }\n\n      var blocktype = lookupBlockType();\n      if (blocktype.isDestAssign) {\n        this.destructAssign = destructuringPattern(context, {\n            openingParsed: true,\n            assignment: true\n          });\n        return this;\n      }\n      state.inObjectBody = true;\n      for (;;) {\n        if (state.tokens.next.id === \"}\") {\n          break;\n        }\n\n        nextVal = state.tokens.next.value;\n        if (state.tokens.next.identifier &&\n            (peekIgnoreEOL().id === \",\" || peekIgnoreEOL().id === \"}\")) {\n          if (!state.inES6()) {\n            warning(\"W104\", state.tokens.next, \"object short notation\", \"6\");\n          }\n          t = expression(context, 10);\n          i = t && t.value;\n          if (t) {\n            saveProperty(props, i, t);\n          }\n\n        } else if (peek().id !== \":\" && (nextVal === \"get\" || nextVal === \"set\")) {\n          advance(nextVal);\n\n          if (!state.inES5()) {\n            error(\"E034\");\n          }\n\n          if (state.tokens.next.id === \"[\") {\n            i = computedPropertyName(context);\n          } else {\n            i = propertyName(context);\n\n            // ES6 allows for get() {...} and set() {...} method\n            // definition shorthand syntax, so we don't produce an error\n            // if linting ECMAScript 6 code.\n            if (!i && !state.inES6()) {\n              error(\"E035\");\n            }\n          }\n\n          // We don't want to save this getter unless it's an actual getter\n          // and not an ES6 concise method\n          if (i) {\n            saveAccessor(nextVal, props, i, state.tokens.curr);\n          }\n\n          t = state.tokens.next;\n          f = doFunction(context, { isMethod: true });\n          params = f[\"(params)\"];\n\n          // Don't warn about getter/setter pairs if this is an ES6 concise method\n          if (nextVal === \"get\" && i && params.length) {\n            warning(\"W076\", t, params[0], i);\n          } else if (nextVal === \"set\" && i && f[\"(metrics)\"].arity !== 1) {\n            warning(\"W077\", t, i);\n          }\n\n        } else if (spreadrest(\"spread\")) {\n          if (!state.inES9()) {\n            warning(\"W119\", state.tokens.next, \"object spread property\", \"9\");\n          }\n\n          expression(context, 10);\n        } else {\n          if (state.tokens.next.id === \"async\" && !checkPunctuators(peek(), [\"(\", \":\"])) {\n            if (!state.inES8()) {\n              warning(\"W119\", state.tokens.next, \"async functions\", \"8\");\n            }\n\n            isAsyncMethod = true;\n            advance();\n\n            nolinebreak(state.tokens.curr);\n          } else {\n            isAsyncMethod = false;\n          }\n\n          if (state.tokens.next.value === \"*\" && state.tokens.next.type === \"(punctuator)\") {\n            if (isAsyncMethod && !state.inES9()) {\n              warning(\"W119\", state.tokens.next, \"async generators\", \"9\");\n            } else if (!state.inES6()) {\n              warning(\"W104\", state.tokens.next, \"generator functions\", \"6\");\n            }\n\n            advance(\"*\");\n            isGeneratorMethod = true;\n          } else {\n            isGeneratorMethod = false;\n          }\n\n          if (state.tokens.next.id === \"[\") {\n            i = computedPropertyName(context);\n            state.nameStack.set(i);\n          } else {\n            state.nameStack.set(state.tokens.next);\n            i = propertyName(context);\n            saveProperty(props, i, state.tokens.next);\n\n            if (typeof i !== \"string\") {\n              break;\n            }\n          }\n\n          if (state.tokens.next.value === \"(\") {\n            if (!state.inES6()) {\n              warning(\"W104\", state.tokens.curr, \"concise methods\", \"6\");\n            }\n\n            doFunction(isAsyncMethod ? context | prodParams.preAsync : context, {\n              isMethod: true,\n              type: isGeneratorMethod ? \"generator\" : null\n            });\n          } else {\n            advance(\":\");\n            expression(context, 10);\n          }\n        }\n\n        countMember(i);\n\n        if (state.tokens.next.id === \",\") {\n          advance(\",\");\n          checkComma({ allowTrailing: true, property: true });\n          if (state.tokens.next.id === \",\") {\n            /* istanbul ignore next */\n            warning(\"W070\", state.tokens.curr);\n          } else if (state.tokens.next.id === \"}\" && !state.inES5()) {\n            warning(\"W070\", state.tokens.curr);\n          }\n        } else {\n          if (state.option.trailingcomma && state.inES5()) {\n            warningAt(\"W140\", state.tokens.curr.line, state.tokens.curr.character);\n          }\n          break;\n        }\n      }\n      if (b) {\n        indent -= state.option.indent;\n      }\n      advance(\"}\", this);\n\n      checkProperties(props);\n      state.inObjectBody = false;\n\n      return this;\n    };\n    x.fud = function() {\n      /* istanbul ignore next */\n      error(\"E036\", state.tokens.curr);\n    };\n  }(delim(\"{\")));\n\n  function destructuringPattern(context, options) {\n    var isAssignment = options && options.assignment;\n\n    context &= ~prodParams.noin;\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr,\n        isAssignment ? \"destructuring assignment\" : \"destructuring binding\", \"6\");\n    }\n\n    return destructuringPatternRecursive(context, options);\n  }\n\n  function destructuringPatternRecursive(context, options) {\n    var ids, idx;\n    var identifiers = [];\n    var openingParsed = options && options.openingParsed;\n    var isAssignment = options && options.assignment;\n    var recursiveOptions = isAssignment ? { assignment: isAssignment } : null;\n    var firstToken = openingParsed ? state.tokens.curr : state.tokens.next;\n\n    var nextInnerDE = function() {\n      var ident;\n      if (checkPunctuators(state.tokens.next, [\"[\", \"{\"])) {\n        ids = destructuringPatternRecursive(context, recursiveOptions);\n        for (idx = 0; idx < ids.length; idx++) {\n          identifiers.push({ id: ids[idx].id, token: ids[idx].token });\n        }\n      } else if (checkPunctuator(state.tokens.next, \",\")) {\n        identifiers.push({ id: null, token: state.tokens.curr });\n      } else if (checkPunctuator(state.tokens.next, \"(\")) {\n        advance(\"(\");\n        nextInnerDE();\n        advance(\")\");\n      } else {\n        if (isAssignment) {\n          var assignTarget = expression(context, 20);\n          if (assignTarget) {\n            checkLeftSideAssign(context, assignTarget);\n\n            // if the target was a simple identifier, add it to the list to return\n            if (assignTarget.identifier) {\n              ident = assignTarget.value;\n            }\n          }\n        } else {\n          ident = identifier(context);\n        }\n        if (ident) {\n          identifiers.push({ id: ident, token: state.tokens.curr });\n        }\n      }\n    };\n\n    var assignmentProperty = function(context) {\n      var id, expr;\n\n      if (checkPunctuator(state.tokens.next, \"[\")) {\n        advance(\"[\");\n        expression(context, 10);\n        advance(\"]\");\n        advance(\":\");\n        nextInnerDE();\n      } else if (state.tokens.next.id === \"(string)\" ||\n                 state.tokens.next.id === \"(number)\") {\n        advance();\n        advance(\":\");\n        nextInnerDE();\n      } else {\n        // this id will either be the property name or the property name and the assigning identifier\n        var isRest = spreadrest(\"rest\");\n\n        if (isRest) {\n          if (!state.inES9()) {\n            warning(\"W119\", state.tokens.next, \"object rest property\", \"9\");\n          }\n\n          // Due to visual symmetry with the array rest property (and the early\n          // design of the language feature), developers may mistakenly assume\n          // any expression is valid in this position. If the next token is not\n          // an identifier, attempt to parse an expression and issue an error.\n          // order to recover more gracefully from this condition.\n          if (state.tokens.next.type === \"(identifier)\") {\n            id = identifier(context);\n          } else {\n            expr = expression(context, 10);\n            error(\"E030\", expr, expr.value);\n          }\n        } else {\n          id = identifier(context);\n        }\n\n        if (!isRest && checkPunctuator(state.tokens.next, \":\")) {\n          advance(\":\");\n          nextInnerDE();\n        } else if (id) {\n          // in this case we are assigning (not declaring), so check assignment\n          if (isAssignment) {\n            checkLeftSideAssign(context, state.tokens.curr);\n          }\n          identifiers.push({ id: id, token: state.tokens.curr });\n        }\n\n        if (isRest && checkPunctuator(state.tokens.next, \",\")) {\n          warning(\"W130\", state.tokens.next);\n        }\n      }\n    };\n\n    var id, value;\n    if (checkPunctuator(firstToken, \"[\")) {\n      if (!openingParsed) {\n        advance(\"[\");\n      }\n      if (checkPunctuator(state.tokens.next, \"]\")) {\n        warning(\"W137\", state.tokens.curr);\n      }\n      var element_after_rest = false;\n      while (!checkPunctuator(state.tokens.next, \"]\")) {\n        var isRest = spreadrest(\"rest\");\n\n        nextInnerDE();\n\n        if (isRest && !element_after_rest &&\n            checkPunctuator(state.tokens.next, \",\")) {\n          warning(\"W130\", state.tokens.next);\n          element_after_rest = true;\n        }\n        if (!isRest && checkPunctuator(state.tokens.next, \"=\")) {\n          if (checkPunctuator(state.tokens.prev, \"...\")) {\n            /* istanbul ignore next */\n            advance(\"]\");\n          } else {\n            advance(\"=\");\n          }\n          id = state.tokens.prev;\n          value = expression(context, 10);\n          if (value && value.identifier && value.value === \"undefined\") {\n            warning(\"W080\", id, id.value);\n          }\n        }\n        if (!checkPunctuator(state.tokens.next, \"]\")) {\n          advance(\",\");\n        }\n      }\n      advance(\"]\");\n    } else if (checkPunctuator(firstToken, \"{\")) {\n\n      if (!openingParsed) {\n        advance(\"{\");\n      }\n      if (checkPunctuator(state.tokens.next, \"}\")) {\n        warning(\"W137\", state.tokens.curr);\n      }\n      while (!checkPunctuator(state.tokens.next, \"}\")) {\n        assignmentProperty(context);\n        if (checkPunctuator(state.tokens.next, \"=\")) {\n          advance(\"=\");\n          id = state.tokens.prev;\n          value = expression(context, 10);\n          if (value && value.identifier && value.value === \"undefined\") {\n            warning(\"W080\", id, id.value);\n          }\n        }\n        if (!checkPunctuator(state.tokens.next, \"}\")) {\n          advance(\",\");\n          if (checkPunctuator(state.tokens.next, \"}\")) {\n            // Trailing comma\n            // ObjectBindingPattern: { BindingPropertyList , }\n            break;\n          }\n        }\n      }\n      advance(\"}\");\n    }\n    return identifiers;\n  }\n\n  function destructuringPatternMatch(tokens, value) {\n    var first = value.first;\n\n    if (!first)\n      return;\n\n    _.zip(tokens, Array.isArray(first) ? first : [ first ]).forEach(function(val) {\n      var token = val[0];\n      var value = val[1];\n\n      if (token && value)\n        token.first = value;\n      else if (token && token.first && !value)\n        /* istanbul ignore next */\n        warning(\"W080\", token.first, token.first.value);\n    });\n  }\n\n  function blockVariableStatement(type, statement, context) {\n    // used for both let and const statements\n\n    var noin = context & prodParams.noin;\n    var isLet = type === \"let\";\n    var isConst = type === \"const\";\n    var tokens, lone, value, letblock;\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, type, \"6\");\n    }\n\n    if (isLet && isMozillaLet()) {\n      advance(\"(\");\n      state.funct[\"(scope)\"].stack();\n      letblock = true;\n      statement.declaration = false;\n    }\n\n    statement.first = [];\n    for (;;) {\n      var names = [];\n      if (_.includes([\"{\", \"[\"], state.tokens.next.value)) {\n        tokens = destructuringPattern(context);\n        lone = false;\n      } else {\n        tokens = [ { id: identifier(context), token: state.tokens.curr } ];\n        lone = true;\n      }\n\n      // A `const` declaration without an initializer is permissible within the\n      // head of for-in and for-of statements. If this binding list is being\n      // parsed as part of a `for` statement of any kind, allow the initializer\n      // to be omitted. Although this may erroneously allow such forms from\n      // \"C-style\" `for` statements (i.e. `for (const x;;) {}`, the `for`\n      // statement logic includes dedicated logic to issue the error for such\n      // cases.\n      if (!noin && isConst && state.tokens.next.id !== \"=\") {\n        warning(\"E012\", state.tokens.curr, state.tokens.curr.value);\n      }\n\n      for (var t in tokens) {\n        if (tokens.hasOwnProperty(t)) {\n          t = tokens[t];\n\n          // It is a Syntax Error if the BoundNames of BindingList contains\n          // \"let\".\n          if (t.id === \"let\") {\n            /* istanbul ignore next */\n            warning(\"W024\", t.token, t.id);\n          }\n\n          if (state.funct[\"(scope)\"].block.isGlobal()) {\n            if (predefined[t.id] === false) {\n              warning(\"W079\", t.token, t.id);\n            }\n          }\n          if (t.id) {\n            state.funct[\"(scope)\"].addbinding(t.id, {\n              type: type,\n              token: t.token });\n            names.push(t.token);\n          }\n        }\n      }\n\n      if (state.tokens.next.id === \"=\") {\n        statement.hasInitializer = true;\n\n        advance(\"=\");\n        if (!noin && peek(0).id === \"=\" && state.tokens.next.identifier) {\n          warning(\"W120\", state.tokens.next, state.tokens.next.value);\n        }\n        var id = state.tokens.prev;\n        value = expression(context, 10);\n        if (value) {\n          if (value.identifier && value.value === \"undefined\") {\n            warning(\"W080\", id, id.value);\n          }\n          if (!lone) {\n            destructuringPatternMatch(names, value);\n          }\n        }\n      }\n\n      // Bindings are not immediately initialized in for-in and for-of\n      // statements. As with `const` initializers (described above), the `for`\n      // statement parsing logic includes\n      if (state.tokens.next.value !== \"in\" && state.tokens.next.value !== \"of\") {\n        for (t in tokens) {\n          if (tokens.hasOwnProperty(t)) {\n            t = tokens[t];\n            state.funct[\"(scope)\"].initialize(t.id);\n          }\n        }\n      }\n\n      statement.first = statement.first.concat(names);\n\n      if (state.tokens.next.id !== \",\") {\n        break;\n      }\n\n      statement.hasComma = true;\n      advance(\",\");\n      checkComma();\n    }\n    if (letblock) {\n      advance(\")\");\n      block(context, true, true);\n      statement.block = true;\n      state.funct[\"(scope)\"].unstack();\n    }\n\n    return statement;\n  }\n\n  var conststatement = stmt(\"const\", function(context) {\n    return blockVariableStatement(\"const\", this, context);\n  });\n  conststatement.exps = true;\n  conststatement.declaration = true;\n\n\n  /**\n   * Determine if the current `let` token designates the beginning of a \"let\n   * block\" or \"let expression\" as implemented in the Mozilla SpiderMonkey\n   * engine.\n   *\n   * This function will only return `true` if Mozilla extensions have been\n   * enabled. It would be preferable to detect the language feature regardless\n   * of the parser's state because this would allow JSHint to instruct users to\n   * enable the `moz` option where necessary. This is not possible because the\n   * language extension is not compatible with standard JavaScript. For\n   * example, the following program code may describe a \"let block\" or a\n   * function invocation:\n   *\n   *     let(x)\n   *     {\n   *       typeof x;\n   *     }\n   *\n   * @returns {boolean}\n   */\n  function isMozillaLet() {\n    return state.tokens.next.id === \"(\" && state.inMoz();\n  }\n  var letstatement = stmt(\"let\", function(context) {\n    return blockVariableStatement(\"let\", this, context);\n  });\n  letstatement.nud = function(context, rbp) {\n    if (isMozillaLet()) {\n      // create a new block scope we use only for the current expression\n      state.funct[\"(scope)\"].stack();\n      advance(\"(\");\n      state.tokens.prev.fud(context);\n      advance(\")\");\n      expression(context, rbp);\n      state.funct[\"(scope)\"].unstack();\n    } else {\n      this.exps = false;\n      return state.syntax[\"(identifier)\"].nud.apply(this, arguments);\n    }\n  };\n  letstatement.meta = { es5: true, isFutureReservedWord: false, strictOnly: true };\n  letstatement.exps = true;\n  letstatement.declaration = true;\n  letstatement.useFud = function(context) {\n    var next = state.tokens.next;\n    var nextIsBindingName;\n\n    if (this.line !== next.line && !state.inES6()) {\n      return false;\n    }\n\n    // JSHint generally interprets `let` as a reserved word even though it is\n    // not considered as such by the ECMAScript specification because doing so\n    // simplifies parsing logic. It is special-cased here so that code such as\n    //\n    //     let\n    //     let\n    //\n    // is correctly interpreted as an invalid LexicalBinding. (Without this\n    // consideration, the code above would be parsed as two\n    // IdentifierReferences.)\n    nextIsBindingName = next.identifier && (!isReserved(context, next) ||\n      next.id === \"let\");\n\n    return nextIsBindingName || checkPunctuators(next, [\"{\", \"[\"]) ||\n      isMozillaLet();\n  };\n\n  var varstatement = stmt(\"var\", function(context) {\n    var noin = context & prodParams.noin;\n    var tokens, lone, value, id;\n\n    this.first = [];\n    for (;;) {\n      var names = [];\n      if (_.includes([\"{\", \"[\"], state.tokens.next.value)) {\n        tokens = destructuringPattern(context);\n        lone = false;\n      } else {\n        tokens = [];\n        id = identifier(context);\n\n        if (id) {\n          tokens.push({ id: id, token: state.tokens.curr });\n        }\n\n        lone = true;\n      }\n\n      if (state.option.varstmt) {\n        warning(\"W132\", this);\n      }\n\n\n      for (var t in tokens) {\n        if (tokens.hasOwnProperty(t)) {\n          t = tokens[t];\n          if (state.funct[\"(global)\"] && !state.impliedClosure()) {\n            if (predefined[t.id] === false) {\n              warning(\"W079\", t.token, t.id);\n            } else if (state.option.futurehostile === false) {\n              if ((!state.inES5() && vars.ecmaIdentifiers[5][t.id] === false) ||\n                (!state.inES6() && vars.ecmaIdentifiers[6][t.id] === false)) {\n                warning(\"W129\", t.token, t.id);\n              }\n            }\n          }\n          if (t.id) {\n            state.funct[\"(scope)\"].addbinding(t.id, {\n              type: \"var\",\n              token: t.token });\n\n            names.push(t.token);\n          }\n        }\n      }\n\n      if (state.tokens.next.id === \"=\") {\n        this.hasInitializer = true;\n\n        state.nameStack.set(state.tokens.curr);\n\n        advance(\"=\");\n        if (peek(0).id === \"=\" && state.tokens.next.identifier) {\n          if (!noin &&\n              !state.funct[\"(params)\"] ||\n              state.funct[\"(params)\"].indexOf(state.tokens.next.value) === -1) {\n            warning(\"W120\", state.tokens.next, state.tokens.next.value);\n          }\n        }\n        id = state.tokens.prev;\n        value = expression(context, 10);\n        if (value) {\n          if (!state.funct[\"(loopage)\"] && value.identifier &&\n            value.value === \"undefined\") {\n            warning(\"W080\", id, id.value);\n          }\n          if (!lone) {\n            destructuringPatternMatch(names, value);\n          }\n        }\n      }\n\n      this.first = this.first.concat(names);\n\n      if (state.tokens.next.id !== \",\") {\n        break;\n      }\n      this.hasComma = true;\n      advance(\",\");\n      checkComma();\n    }\n\n    return this;\n  });\n  varstatement.exps = true;\n\n  blockstmt(\"function\", function(context) {\n    var inexport = context & prodParams.export;\n    var generator = false;\n    var isAsync = context & prodParams.preAsync;\n    var labelType = \"\";\n\n    if (isAsync) {\n      labelType = \"async \";\n    }\n\n    if (state.tokens.next.value === \"*\") {\n      if (isAsync && !state.inES9()) {\n        warning(\"W119\", state.tokens.prev, \"async generators\", \"9\");\n      } else if (!isAsync && !state.inES6(true)) {\n        warning(\"W119\", state.tokens.next, \"function*\", \"6\");\n      }\n\n      advance(\"*\");\n      labelType += \"generator \";\n      generator = true;\n    }\n\n    labelType += \"function\";\n\n    if (inblock) {\n      warning(\"W082\", state.tokens.curr);\n    }\n    this.name = optionalidentifier(context) ? state.tokens.curr : null;\n\n    if (!this.name) {\n      if (!inexport) {\n        warning(\"W025\");\n      }\n    } else {\n      state.funct[\"(scope)\"].addbinding(this.name.value, {\n        type: labelType,\n        token: state.tokens.curr,\n        initialized: true });\n    }\n\n    var f = doFunction(context, {\n      name: this.name && this.name.value,\n      statement: this,\n      type: generator ? \"generator\" : null,\n      ignoreLoopFunc: inblock // a declaration may already have warned\n    });\n\n    // If the function declaration is strict because the surrounding code is\n    // strict, the invalid name will trigger E008 when the scope manager\n    // attempts to create a binding in the strict environment record. An error\n    // should only be signaled here when the function itself enables strict\n    // mode (the scope manager will not report an error because a declaration\n    // does not introduce a binding into the function's environment record).\n    var enablesStrictMode = f[\"(isStrict)\"] && !state.isStrict();\n    if (this.name && (f[\"(name)\"] === \"arguments\" || f[\"(name)\"] === \"eval\") &&\n      enablesStrictMode) {\n      error(\"E008\", this.name);\n    }\n\n    // Although the parser correctly recognizes the statement boundary in this\n    // condition, it's support for the invalid \"empty grouping\" expression\n    // makes it tolerant of productions such as `function f() {}();`.\n    if (state.tokens.next.id === \"(\" && peek().id === \")\" && peek(1).id !== \"=>\" &&\n      state.tokens.next.line === state.tokens.curr.line) {\n      error(\"E039\");\n    }\n    return this;\n  }).declaration = true;\n\n  prefix(\"function\", function(context) {\n    var generator = false;\n    var isAsync = context & prodParams.preAsync;\n\n    if (state.tokens.next.value === \"*\") {\n      if (isAsync && !state.inES9()) {\n        warning(\"W119\", state.tokens.prev, \"async generators\", \"9\");\n      } else if (!isAsync && !state.inES6(true)) {\n        warning(\"W119\", state.tokens.curr, \"function*\", \"6\");\n      }\n\n      advance(\"*\");\n      generator = true;\n    }\n\n    // This context modification restricts the use of `await` as the optional\n    // BindingIdentifier in async function expressions.\n    this.name = optionalidentifier(isAsync ? context | prodParams.async : context) ?\n      state.tokens.curr : null;\n\n    var f = doFunction(context, {\n      name: this.name && this.name.value,\n      type: generator ? \"generator\" : null\n    });\n\n    if (generator && this.name && this.name.value === \"yield\") {\n      error(\"E024\", this.name, \"yield\");\n    }\n\n    if (this.name && (f[\"(name)\"] === \"arguments\" || f[\"(name)\"] === \"eval\") &&\n      f[\"(isStrict)\"]) {\n      error(\"E008\", this.name);\n    }\n\n    return this;\n  });\n\n  blockstmt(\"if\", function(context) {\n    var t = state.tokens.next;\n    increaseComplexityCount();\n    advance(\"(\");\n    var expr = expression(context, 0);\n\n    if (!expr) {\n      quit(\"E041\", this);\n    }\n\n    checkCondAssignment(expr);\n\n    // When the if is within a for-in loop, check if the condition\n    // starts with a negation operator\n    var forinifcheck = null;\n    if (state.option.forin && state.forinifcheckneeded) {\n      state.forinifcheckneeded = false; // We only need to analyze the first if inside the loop\n      forinifcheck = state.forinifchecks[state.forinifchecks.length - 1];\n      if (expr.type === \"(punctuator)\" && expr.value === \"!\") {\n        forinifcheck.type = \"(negative)\";\n      } else {\n        forinifcheck.type = \"(positive)\";\n      }\n    }\n\n    advance(\")\", t);\n    var s = block(context, true, true);\n\n    // When the if is within a for-in loop and the condition has a negative form,\n    // check if the body contains nothing but a continue statement\n    if (forinifcheck && forinifcheck.type === \"(negative)\") {\n      if (s && s[0] && s[0].type === \"(identifier)\" && s[0].value === \"continue\") {\n        forinifcheck.type = \"(negative-with-continue)\";\n      }\n    }\n\n    if (state.tokens.next.id === \"else\") {\n      advance(\"else\");\n      if (state.tokens.next.id === \"if\" || state.tokens.next.id === \"switch\") {\n        statement(context);\n      } else {\n        block(context, true, true);\n      }\n    }\n    return this;\n  });\n\n  blockstmt(\"try\", function(context) {\n    var b;\n    var hasParameter = false;\n\n    function catchParameter() {\n      advance(\"(\");\n\n      if (checkPunctuators(state.tokens.next, [\"[\", \"{\"])) {\n        var tokens = destructuringPattern(context);\n        _.each(tokens, function(token) {\n          if (token.id) {\n            state.funct[\"(scope)\"].addParam(token.id, token.token, \"exception\");\n          }\n        });\n      } else if (state.tokens.next.type !== \"(identifier)\") {\n        warning(\"E030\", state.tokens.next, state.tokens.next.value);\n      } else {\n        // only advance if an identifier is present. This allows JSHint to\n        // recover from the case where no value is specified.\n        state.funct[\"(scope)\"].addParam(identifier(context), state.tokens.curr, \"exception\");\n      }\n\n      if (state.tokens.next.value === \"if\") {\n        if (!state.inMoz()) {\n          warning(\"W118\", state.tokens.curr, \"catch filter\");\n        }\n        advance(\"if\");\n        expression(context, 0);\n      }\n\n      advance(\")\");\n    }\n\n    block(context | prodParams.tryClause, true);\n\n    while (state.tokens.next.id === \"catch\") {\n      increaseComplexityCount();\n      if (b && (!state.inMoz())) {\n        warning(\"W118\", state.tokens.next, \"multiple catch blocks\");\n      }\n      advance(\"catch\");\n      if (state.tokens.next.id !== \"{\") {\n        state.funct[\"(scope)\"].stack(\"catchparams\");\n        hasParameter = true;\n        catchParameter();\n      } else if (!state.inES10()) {\n        warning(\"W119\", state.tokens.curr, \"optional catch binding\", \"10\");\n      }\n      block(context, false);\n\n      if (hasParameter) {\n        state.funct[\"(scope)\"].unstack();\n        hasParameter = false;\n      }\n      b = true;\n    }\n\n    if (state.tokens.next.id === \"finally\") {\n      advance(\"finally\");\n      block(context, true);\n      return;\n    }\n\n    if (!b) {\n      error(\"E021\", state.tokens.next, \"catch\", state.tokens.next.value);\n    }\n\n    return this;\n  });\n\n  blockstmt(\"while\", function(context) {\n    var t = state.tokens.next;\n    state.funct[\"(breakage)\"] += 1;\n    state.funct[\"(loopage)\"] += 1;\n    increaseComplexityCount();\n    advance(\"(\");\n    checkCondAssignment(expression(context, 0));\n    advance(\")\", t);\n    block(context, true, true);\n    state.funct[\"(breakage)\"] -= 1;\n    state.funct[\"(loopage)\"] -= 1;\n    return this;\n  }).labelled = true;\n\n  blockstmt(\"with\", function(context) {\n    var t = state.tokens.next;\n    if (state.isStrict()) {\n      error(\"E010\", state.tokens.curr);\n    } else if (!state.option.withstmt) {\n      warning(\"W085\", state.tokens.curr);\n    }\n\n    advance(\"(\");\n    expression(context, 0);\n    advance(\")\", t);\n    block(context, true, true);\n\n    return this;\n  });\n\n  blockstmt(\"switch\", function(context) {\n    var t = state.tokens.next;\n    var g = false;\n    var noindent = false;\n    var seenCase = false;\n\n    state.funct[\"(breakage)\"] += 1;\n    advance(\"(\");\n    checkCondAssignment(expression(context, 0));\n    advance(\")\", t);\n    t = state.tokens.next;\n    advance(\"{\");\n    state.funct[\"(scope)\"].stack();\n\n    if (state.tokens.next.from === indent)\n      noindent = true;\n\n    if (!noindent)\n      indent += state.option.indent;\n\n    for (;;) {\n      switch (state.tokens.next.id) {\n      case \"case\":\n        switch (state.funct[\"(verb)\"]) {\n        case \"yield\":\n        case \"break\":\n        case \"case\":\n        case \"continue\":\n        case \"return\":\n        case \"switch\":\n        case \"throw\":\n          break;\n        case \"default\":\n          if (state.option.leanswitch) {\n            warning(\"W145\", state.tokens.next);\n          }\n\n          break;\n        default:\n          // You can tell JSHint that you don't use break intentionally by\n          // adding a comment /* falls through */ on a line just before\n          // the next `case`.\n          if (!state.tokens.curr.caseFallsThrough) {\n            warning(\"W086\", state.tokens.curr, \"case\");\n          }\n        }\n\n        advance(\"case\");\n        expression(context, 0);\n        seenCase = true;\n        increaseComplexityCount();\n        g = true;\n        advance(\":\");\n        state.funct[\"(verb)\"] = \"case\";\n        break;\n      case \"default\":\n        switch (state.funct[\"(verb)\"]) {\n        case \"yield\":\n        case \"break\":\n        case \"continue\":\n        case \"return\":\n        case \"throw\":\n          break;\n        case \"case\":\n          if (state.option.leanswitch) {\n            warning(\"W145\", state.tokens.curr);\n          }\n\n          break;\n        default:\n          // Do not display a warning if 'default' is the first statement or if\n          // there is a special /* falls through */ comment.\n          if (seenCase && !state.tokens.curr.caseFallsThrough) {\n            warning(\"W086\", state.tokens.curr, \"default\");\n          }\n        }\n\n        advance(\"default\");\n        g = true;\n        advance(\":\");\n        state.funct[\"(verb)\"] = \"default\";\n        break;\n      case \"}\":\n        if (!noindent)\n          indent -= state.option.indent;\n\n        advance(\"}\", t);\n        state.funct[\"(scope)\"].unstack();\n        state.funct[\"(breakage)\"] -= 1;\n        state.funct[\"(verb)\"] = undefined;\n        return;\n      /* istanbul ignore next */\n      case \"(end)\":\n        error(\"E023\", state.tokens.next, \"}\");\n        return;\n      default:\n        indent += state.option.indent;\n        if (g) {\n          switch (state.tokens.curr.id) {\n          /* istanbul ignore next */\n          case \",\":\n            error(\"E040\");\n            return;\n          case \":\":\n            g = false;\n            statements(context);\n            break;\n          /* istanbul ignore next */\n          default:\n            error(\"E025\", state.tokens.curr);\n            return;\n          }\n        } else {\n          /* istanbul ignore else */\n          if (state.tokens.curr.id === \":\") {\n            advance(\":\");\n            error(\"E024\", state.tokens.curr, \":\");\n            statements(context);\n          } else {\n            error(\"E021\", state.tokens.next, \"case\", state.tokens.next.value);\n            return;\n          }\n        }\n        indent -= state.option.indent;\n      }\n    }\n  }).labelled = true;\n\n  stmt(\"debugger\", function() {\n    if (!state.option.debug) {\n      warning(\"W087\", this);\n    }\n    return this;\n  }).exps = true;\n\n  (function() {\n    var x = stmt(\"do\", function(context) {\n      state.funct[\"(breakage)\"] += 1;\n      state.funct[\"(loopage)\"] += 1;\n      increaseComplexityCount();\n\n      this.first = block(context, true, true);\n      advance(\"while\");\n      var t = state.tokens.next;\n      advance(\"(\");\n      checkCondAssignment(expression(context, 0));\n      advance(\")\", t);\n      state.funct[\"(breakage)\"] -= 1;\n      state.funct[\"(loopage)\"] -= 1;\n      return this;\n    });\n    x.labelled = true;\n    x.exps = true;\n  }());\n\n  blockstmt(\"for\", function(context) {\n    var s, t = state.tokens.next;\n    var letscope = false;\n    var isAsync = false;\n    var foreachtok = null;\n\n    if (t.value === \"each\") {\n      foreachtok = t;\n      advance(\"each\");\n      if (!state.inMoz()) {\n        warning(\"W118\", state.tokens.curr, \"for each\");\n      }\n    }\n\n    if (state.tokens.next.identifier && state.tokens.next.value === \"await\") {\n      advance(\"await\");\n      isAsync = true;\n\n      if (!(context & prodParams.async)) {\n        error(\"E024\", state.tokens.curr, \"await\");\n      } else if (!state.inES9()) {\n        warning(\"W119\", state.tokens.curr, \"asynchronous iteration\", \"9\");\n      }\n    }\n\n    increaseComplexityCount();\n    advance(\"(\");\n\n    // what kind of for(…) statement it is? for(…of…)? for(…in…)? for(…;…;…)?\n    var nextop; // contains the token of the \"in\" or \"of\" operator\n    var comma; // First comma punctuator at level 0\n    var initializer; // First initializer at level 0\n    var bindingPower;\n    var targets;\n    var target;\n    var decl;\n    var afterNext = peek();\n\n    var headContext = context | prodParams.noin;\n\n    if (state.tokens.next.id === \"var\") {\n      advance(\"var\");\n      decl = state.tokens.curr.fud(headContext);\n      comma = decl.hasComma ? decl : null;\n      initializer = decl.hasInitializer ? decl : null;\n    } else if (state.tokens.next.id === \"const\" ||\n      // The \"let\" keyword only signals a lexical binding if it is followed by\n      // an identifier, `{`, or `[`. Otherwise, it should be parsed as an\n      // IdentifierReference (i.e. in a subsquent branch).\n      (state.tokens.next.id === \"let\" &&\n        ((afterNext.identifier && afterNext.id !== \"in\") ||\n         checkPunctuators(afterNext, [\"{\", \"[\"])))) {\n      advance(state.tokens.next.id);\n      // create a new block scope\n      letscope = true;\n      state.funct[\"(scope)\"].stack();\n      decl = state.tokens.curr.fud(headContext);\n      comma = decl.hasComma ? decl : null;\n      initializer = decl.hasInitializer ? decl : null;\n    } else if (!checkPunctuator(state.tokens.next, \";\")) {\n      targets = [];\n\n      while (state.tokens.next.value !== \"in\" &&\n        state.tokens.next.value !== \"of\" &&\n        !checkPunctuator(state.tokens.next, \";\")) {\n\n        if (checkPunctuators(state.tokens.next, [\"{\", \"[\"])) {\n          destructuringPattern(headContext, { assignment: true })\n            .forEach(function(elem) {\n              this.push(elem.token);\n            }, targets);\n          if (checkPunctuator(state.tokens.next, \"=\")) {\n            advance(\"=\");\n            initializer = state.tokens.curr;\n            expression(headContext, 10);\n          }\n        } else {\n          target = expression(headContext, 10);\n\n          if (target) {\n            if (target.type === \"(identifier)\") {\n              targets.push(target);\n            } else if (checkPunctuator(target, \"=\")) {\n              initializer = target;\n              targets.push(target);\n            }\n          }\n        }\n\n        if (checkPunctuator(state.tokens.next, \",\")) {\n          advance(\",\");\n\n          if (!comma) {\n            comma = state.tokens.curr;\n          }\n        }\n      }\n\n      //checkLeftSideAssign(target, nextop);\n\n      // In the event of a syntax error, do not issue warnings regarding the\n      // implicit creation of bindings.\n      if (!initializer && !comma) {\n        targets.forEach(function(token) {\n          if (!state.funct[\"(scope)\"].has(token.value)) {\n            warning(\"W088\", token, token.value);\n          }\n        });\n      }\n    }\n\n    nextop = state.tokens.next;\n\n    if (isAsync && nextop.value !== \"of\") {\n      error(\"E066\", nextop);\n    }\n\n    // if we're in a for (… in|of …) statement\n    if (_.includes([\"in\", \"of\"], nextop.value)) {\n      if (nextop.value === \"of\") {\n        bindingPower = 20;\n\n        if (!state.inES6()) {\n          warning(\"W104\", nextop, \"for of\", \"6\");\n        }\n      } else {\n        bindingPower = 0;\n      }\n      if (comma) {\n        error(\"W133\", comma, nextop.value, \"more than one ForBinding\");\n      }\n      if (initializer) {\n        error(\"W133\", initializer, nextop.value, \"initializer is forbidden\");\n      }\n      if (target && !comma && !initializer) {\n        checkLeftSideAssign(context, target, nextop);\n      }\n\n      advance(nextop.value);\n\n      // The binding power is variable because for-in statements accept any\n      // Expression in this position, while for-of statements are limited to\n      // AssignmentExpressions. For example:\n      //\n      //     for ( LeftHandSideExpression in Expression ) Statement\n      //     for ( LeftHandSideExpression of AssignmentExpression ) Statement\n      expression(context, bindingPower);\n      advance(\")\", t);\n\n      if (nextop.value === \"in\" && state.option.forin) {\n        state.forinifcheckneeded = true;\n\n        if (state.forinifchecks === undefined) {\n          state.forinifchecks = [];\n        }\n\n        // Push a new for-in-if check onto the stack. The type will be modified\n        // when the loop's body is parsed and a suitable if statement exists.\n        state.forinifchecks.push({\n          type: \"(none)\"\n        });\n      }\n\n      state.funct[\"(breakage)\"] += 1;\n      state.funct[\"(loopage)\"] += 1;\n\n      s = block(context, true, true);\n\n      if (nextop.value === \"in\" && state.option.forin) {\n        if (state.forinifchecks && state.forinifchecks.length > 0) {\n          var check = state.forinifchecks.pop();\n\n          if (// No if statement or not the first statement in loop body\n              s && s.length > 0 && (typeof s[0] !== \"object\" || s[0].value !== \"if\") ||\n              // Positive if statement is not the only one in loop body\n              check.type === \"(positive)\" && s.length > 1 ||\n              // Negative if statement but no continue\n              check.type === \"(negative)\") {\n            warning(\"W089\", this);\n          }\n        }\n\n        // Reset the flag in case no if statement was contained in the loop body\n        state.forinifcheckneeded = false;\n      }\n\n      state.funct[\"(breakage)\"] -= 1;\n      state.funct[\"(loopage)\"] -= 1;\n\n    } else {\n      if (foreachtok) {\n        error(\"E045\", foreachtok);\n      }\n\n      advance(\";\");\n      if (decl && decl.first && decl.first[0]) {\n        if (decl.value === \"const\"  && !decl.hasInitializer) {\n          warning(\"E012\", decl, decl.first[0].value);\n        }\n\n        decl.first.forEach(function(token) {\n          state.funct[\"(scope)\"].initialize(token.value);\n        });\n      }\n\n      // start loopage after the first ; as the next two expressions are executed\n      // on every loop\n      state.funct[\"(loopage)\"] += 1;\n      if (state.tokens.next.id !== \";\") {\n        checkCondAssignment(expression(context, 0));\n      }\n\n      advance(\";\");\n      if (state.tokens.next.id === \";\") {\n        error(\"E021\", state.tokens.next, \")\", \";\");\n      }\n      if (state.tokens.next.id !== \")\") {\n        for (;;) {\n          expression(context, 0);\n          if (state.tokens.next.id !== \",\") {\n            break;\n          }\n          advance(\",\");\n          checkComma();\n        }\n      }\n      advance(\")\", t);\n      state.funct[\"(breakage)\"] += 1;\n      block(context, true, true);\n      state.funct[\"(breakage)\"] -= 1;\n      state.funct[\"(loopage)\"] -= 1;\n    }\n\n    // unstack loop blockscope\n    if (letscope) {\n      state.funct[\"(scope)\"].unstack();\n    }\n    return this;\n  }).labelled = true;\n\n\n  stmt(\"break\", function() {\n    var v = state.tokens.next.value;\n\n    if (state.tokens.next.identifier &&\n        sameLine(state.tokens.curr, state.tokens.next)) {\n      if (!state.funct[\"(scope)\"].funct.hasLabel(v)) {\n        warning(\"W090\", state.tokens.next, v);\n      }\n      this.first = state.tokens.next;\n      advance();\n    } else {\n      if (state.funct[\"(breakage)\"] === 0)\n        warning(\"W052\", state.tokens.next, this.value);\n    }\n\n    reachable(this);\n\n    return this;\n  }).exps = true;\n\n\n  stmt(\"continue\", function() {\n    var v = state.tokens.next.value;\n\n    if (state.funct[\"(breakage)\"] === 0 || !state.funct[\"(loopage)\"]) {\n      warning(\"W052\", state.tokens.next, this.value);\n    }\n\n    if (state.tokens.next.identifier) {\n      if (sameLine(state.tokens.curr, state.tokens.next)) {\n        if (!state.funct[\"(scope)\"].funct.hasLabel(v)) {\n          warning(\"W090\", state.tokens.next, v);\n        }\n        this.first = state.tokens.next;\n        advance();\n      }\n    }\n\n    reachable(this);\n\n    return this;\n  }).exps = true;\n\n\n  stmt(\"return\", function(context) {\n    if (sameLine(this, state.tokens.next)) {\n      if (state.tokens.next.id !== \";\" && !state.tokens.next.reach) {\n        this.first = expression(context, 0);\n\n        if (this.first &&\n            this.first.type === \"(punctuator)\" && this.first.value === \"=\" &&\n            !this.first.paren && !state.option.boss) {\n          warning(\"W093\", this.first);\n        }\n\n        if (state.option.noreturnawait && context & prodParams.async &&\n            !(context & prodParams.tryClause) &&\n            this.first.identifier && this.first.value === \"await\") {\n          warning(\"W146\", this.first);\n        }\n      }\n    } else {\n      if (state.tokens.next.type === \"(punctuator)\" &&\n        [\"[\", \"{\", \"+\", \"-\"].indexOf(state.tokens.next.value) > -1) {\n        nolinebreak(this); // always warn (Line breaking error)\n      }\n    }\n\n    reachable(this);\n\n    return this;\n  }).exps = true;\n\n  prefix(\"await\", function(context) {\n    if (context & prodParams.async) {\n      // If the parameters of the current function scope have not been defined,\n      // it is because the current expression is contained within the parameter\n      // list.\n      if (!state.funct[\"(params)\"]) {\n        error(\"E024\", this, \"await\");\n      }\n\n      expression(context, 10);\n      return this;\n    } else {\n      this.exps = false;\n      return state.syntax[\"(identifier)\"].nud.apply(this, arguments);\n    }\n  }).exps = true;\n\n  (function(asyncSymbol) {\n    asyncSymbol.meta = { es5: true, isFutureReservedWord: true, strictOnly: true };\n    asyncSymbol.isFunc = function() {\n      var next = state.tokens.next;\n      var afterParens;\n\n      if (this.line !== next.line) {\n        return false;\n      }\n\n      if (next.id === \"function\") {\n        return true;\n      }\n\n      if (next.id === \"(\") {\n        afterParens = peekThroughParens(0);\n\n        return afterParens.id === \"=>\";\n      }\n\n      if (next.identifier) {\n        return peek().id === \"=>\";\n      }\n\n      return false;\n    };\n    asyncSymbol.useFud = asyncSymbol.isFunc;\n    // async function declaration\n    asyncSymbol.fud = function(context) {\n      if (!state.inES8()) {\n        warning(\"W119\", this, \"async functions\", \"8\");\n      }\n      context |= prodParams.preAsync;\n      context |= prodParams.initial;\n      this.func = expression(context, 0);\n      this.block = this.func.block;\n      this.exps = this.func.exps;\n      return this;\n    };\n    asyncSymbol.exps = true;\n    delete asyncSymbol.reserved;\n  }(prefix(\"async\", function(context, rbp) {\n    if (this.isFunc(context)) {\n      if (!state.inES8()) {\n        warning(\"W119\", this, \"async functions\", \"8\");\n      }\n\n      context |= prodParams.preAsync;\n      this.func = expression(context, rbp);\n      this.identifier = false;\n      return this;\n    }\n\n    this.exps = false;\n    return state.syntax[\"(identifier)\"].nud.apply(this, arguments);\n  })));\n\n  (function(yieldSymbol) {\n    yieldSymbol.rbp = yieldSymbol.lbp = 25;\n    yieldSymbol.exps = true;\n  })(prefix(\"yield\", function(context) {\n    if (state.inMoz()) {\n      return mozYield.call(this, context);\n    }\n\n    if (!(context & prodParams.yield)) {\n      this.exps = false;\n      return state.syntax[\"(identifier)\"].nud.apply(this, arguments);\n    }\n\n    var prev = state.tokens.prev;\n\n    // If the parameters of the current function scope have not been defined,\n    // it is because the current expression is contained within the parameter\n    // list.\n    if (!state.funct[\"(params)\"]) {\n      error(\"E024\", this, \"yield\");\n    }\n\n    if (!this.beginsStmt && prev.lbp > 30 && !checkPunctuators(prev, [\"(\"])) {\n      error(\"E061\", this);\n    }\n\n    if (!state.inES6()) {\n      warning(\"W104\", state.tokens.curr, \"yield\", \"6\");\n    }\n    state.funct[\"(yielded)\"] = true;\n\n    if (state.tokens.next.value === \"*\") {\n      advance(\"*\");\n    }\n\n    // Parse operand\n    if (state.tokens.curr.value === \"*\" || sameLine(state.tokens.curr, state.tokens.next)) {\n      if (state.tokens.next.nud) {\n\n        nobreaknonadjacent(state.tokens.curr, state.tokens.next);\n        this.first = expression(context, 10);\n\n        if (this.first.type === \"(punctuator)\" && this.first.value === \"=\" &&\n            !this.first.paren && !state.option.boss) {\n          warning(\"W093\", this.first);\n        }\n      } else if (state.tokens.next.led) {\n        if (state.tokens.next.id !== \",\") {\n          error(\"W017\", state.tokens.next);\n        }\n      }\n    }\n\n    return this;\n  }));\n\n  /**\n   * Parsing logic for non-standard Mozilla implementation of `yield`\n   * expressions.\n   */\n  var mozYield = function(context) {\n    var prev = state.tokens.prev;\n    if (state.inES6(true) && !(context & prodParams.yield)) {\n      error(\"E046\", state.tokens.curr, \"yield\");\n    }\n    state.funct[\"(yielded)\"] = true;\n    var delegatingYield = false;\n\n    if (state.tokens.next.value === \"*\") {\n      delegatingYield = true;\n      advance(\"*\");\n    }\n\n    if (sameLine(this, state.tokens.next)) {\n      if (delegatingYield ||\n          (state.tokens.next.id !== \";\" && !state.option.asi &&\n           !state.tokens.next.reach && state.tokens.next.nud)) {\n\n        nobreaknonadjacent(state.tokens.curr, state.tokens.next);\n        this.first = expression(context, 10);\n\n        if (this.first.type === \"(punctuator)\" && this.first.value === \"=\" &&\n            !this.first.paren && !state.option.boss) {\n          warning(\"W093\", this.first);\n        }\n      }\n      if (state.tokens.next.id !== \")\" &&\n          (prev.lbp > 30 || (!prev.assign && !isEndOfExpr()))) {\n        error(\"E050\", this);\n      }\n    } else if (!state.option.asi) {\n      nolinebreak(this); // always warn (Line breaking error)\n    }\n    return this;\n  };\n\n  stmt(\"throw\", function(context) {\n    nolinebreak(this);\n    this.first = expression(context, 20);\n\n    reachable(this);\n\n    return this;\n  }).exps = true;\n\n  prefix(\"import\", function(context) {\n    var mp = metaProperty(context, \"meta\", function() {\n      if (!state.inES11(true)) {\n        warning(\"W119\", state.tokens.prev, \"import.meta\", \"11\");\n      }\n      if (!state.option.module) {\n        error(\"E070\", state.tokens.prev);\n      }\n    });\n\n    if (mp) {\n      return mp;\n    }\n\n    if (!checkPunctuator(state.tokens.next, \"(\")) {\n      return state.syntax[\"(identifier)\"].nud.call(this, context);\n    }\n\n    if (!state.inES11()) {\n      warning(\"W119\", state.tokens.curr, \"dynamic import\", \"11\");\n    }\n\n    advance(\"(\");\n    expression(context, 10);\n    advance(\")\");\n    return this;\n  });\n\n  var importSymbol = stmt(\"import\", function(context) {\n    if (!state.funct[\"(scope)\"].block.isGlobal()) {\n      error(\"E053\", state.tokens.curr, \"Import\");\n    }\n\n    if (!state.inES6()) {\n      warning(\"W119\", state.tokens.curr, \"import\", \"6\");\n    }\n\n    if (state.tokens.next.type === \"(string)\") {\n      // ModuleSpecifier :: StringLiteral\n      advance(\"(string)\");\n      return this;\n    }\n\n    if (state.tokens.next.identifier) {\n      // ImportClause :: ImportedDefaultBinding\n      this.name = identifier(context);\n      // Import bindings are immutable (see ES6 8.1.1.5.5)\n      state.funct[\"(scope)\"].addbinding(this.name, {\n        type: \"import\",\n        initialized: true,\n        token: state.tokens.curr });\n\n      if (state.tokens.next.value === \",\") {\n        // ImportClause :: ImportedDefaultBinding , NameSpaceImport\n        // ImportClause :: ImportedDefaultBinding , NamedImports\n        advance(\",\");\n        // At this point, we intentionally fall through to continue matching\n        // either NameSpaceImport or NamedImports.\n        // Discussion:\n        // https://github.com/jshint/jshint/pull/2144#discussion_r23978406\n      } else {\n        advance(\"from\");\n        advance(\"(string)\");\n        return this;\n      }\n    }\n\n    if (state.tokens.next.id === \"*\") {\n      // ImportClause :: NameSpaceImport\n      advance(\"*\");\n      advance(\"as\");\n      if (state.tokens.next.identifier) {\n        this.name = identifier(context);\n        // Import bindings are immutable (see ES6 8.1.1.5.5)\n        state.funct[\"(scope)\"].addbinding(this.name, {\n          type: \"import\",\n          initialized: true,\n          token: state.tokens.curr });\n      }\n    } else {\n      // ImportClause :: NamedImports\n      advance(\"{\");\n      for (;;) {\n        if (state.tokens.next.value === \"}\") {\n          advance(\"}\");\n          break;\n        }\n        var importName;\n        if (peek().value === \"as\") {\n          identifier(context, true);\n          advance(\"as\");\n          importName = identifier(context);\n        } else {\n          importName = identifier(context);\n        }\n\n        // Import bindings are immutable (see ES6 8.1.1.5.5)\n        state.funct[\"(scope)\"].addbinding(importName, {\n          type: \"import\",\n          initialized: true,\n          token: state.tokens.curr });\n\n        if (state.tokens.next.value === \",\") {\n          advance(\",\");\n        } else if (state.tokens.next.value === \"}\") {\n          advance(\"}\");\n          break;\n        } else {\n          error(\"E024\", state.tokens.next, state.tokens.next.value);\n          break;\n        }\n      }\n    }\n\n    // FromClause\n    advance(\"from\");\n    advance(\"(string)\");\n\n    // Support for ES2015 modules was released without warning for `import`\n    // declarations that lack bindings. Issuing a warning would therefor\n    // constitute a breaking change.\n    // TODO: enable this warning in JSHint 3\n    // if (hasBindings) {\n    //   warning(\"W142\", this, \"import\", moduleSpecifier);\n    // }\n\n    return this;\n  });\n  importSymbol.exps = true;\n  importSymbol.reserved = true;\n  importSymbol.meta = { isFutureReservedWord: true, es5: true };\n  importSymbol.useFud = function() {\n    return !(checkPunctuators(state.tokens.next, [\".\", \"(\"]));\n  };\n  importSymbol.rbp = 161;\n\n  stmt(\"export\", function(context) {\n    var ok = true;\n    var token;\n    var moduleSpecifier;\n    context = context | prodParams.export;\n\n    if (!state.inES6()) {\n      warning(\"W119\", state.tokens.curr, \"export\", \"6\");\n      ok = false;\n    }\n\n    if (!state.funct[\"(scope)\"].block.isGlobal()) {\n      error(\"E053\", state.tokens.curr, \"Export\");\n      ok = false;\n    }\n\n    if (state.tokens.next.value === \"*\") {\n      // ExportDeclaration :: export * FromClause\n      // ExportDeclaration :: export * as IdentifierName FromClause\n      advance(\"*\");\n\n      if (state.tokens.next.value === \"as\") {\n        if (!state.inES11()) {\n          warning(\"W119\", state.tokens.curr, \"export * as ns from\", \"11\");\n        }\n        advance(\"as\");\n        identifier(context, true);\n        state.funct[\"(scope)\"].setExported(null, state.tokens.curr);\n      }\n\n      advance(\"from\");\n      advance(\"(string)\");\n      return this;\n    }\n\n    if (state.tokens.next.type === \"default\") {\n      // ExportDeclaration ::\n      //      export default [lookahead ∉ { function, class }] AssignmentExpression[In] ;\n      //      export default HoistableDeclaration\n      //      export default ClassDeclaration\n\n      // because the 'name' of a default-exported function is, confusingly, 'default'\n      // see https://bocoup.com/blog/whats-in-a-function-name\n      state.nameStack.set(state.tokens.next);\n\n      advance(\"default\");\n      var def = state.tokens.curr;\n      var exportType = state.tokens.next.id;\n      if (exportType === \"function\") {\n        this.block = true;\n        advance(\"function\");\n        token = state.syntax[\"function\"].fud(context);\n        state.funct[\"(scope)\"].setExported(token.name, def);\n      } else if (exportType === \"async\" && peek().id === \"function\") {\n        this.block = true;\n        advance(\"async\");\n        advance(\"function\");\n        token = state.syntax[\"function\"].fud(context | prodParams.preAsync);\n        state.funct[\"(scope)\"].setExported(token.name, def);\n      } else if (exportType === \"class\") {\n        this.block = true;\n        advance(\"class\");\n        token = state.syntax[\"class\"].fud(context);\n        state.funct[\"(scope)\"].setExported(token.name, def);\n      } else {\n        expression(context, 10);\n        state.funct[\"(scope)\"].setExported(null, def);\n      }\n      return this;\n    }\n    if (state.tokens.next.value === \"{\") {\n      // ExportDeclaration :: export ExportClause\n      advance(\"{\");\n      var exportedTokens = [];\n      while (!checkPunctuator(state.tokens.next, \"}\")) {\n        if (!state.tokens.next.identifier) {\n          /* istanbul ignore next */\n          error(\"E030\", state.tokens.next, state.tokens.next.value);\n        }\n        advance();\n\n        if (state.tokens.next.value === \"as\") {\n          advance(\"as\");\n          if (!state.tokens.next.identifier) {\n            /* istanbul ignore next */\n            error(\"E030\", state.tokens.next, state.tokens.next.value);\n          }\n          exportedTokens.push({\n            local: state.tokens.prev,\n            export: state.tokens.next\n          });\n          advance();\n        } else {\n          exportedTokens.push({\n            local: state.tokens.curr,\n            export: state.tokens.curr\n          });\n        }\n\n        if (!checkPunctuator(state.tokens.next, \"}\")) {\n          advance(\",\");\n        }\n      }\n      advance(\"}\");\n      if (state.tokens.next.value === \"from\") {\n        // ExportDeclaration :: export ExportClause FromClause\n        advance(\"from\");\n        moduleSpecifier = state.tokens.next;\n        advance(\"(string)\");\n      } else if (ok) {\n        exportedTokens.forEach(function(x) {\n          state.funct[\"(scope)\"].setExported(x.local, x.export);\n        });\n      }\n\n      if (exportedTokens.length === 0) {\n        if (moduleSpecifier) {\n          warning(\"W142\", this, \"export\", moduleSpecifier.value);\n        } else {\n          warning(\"W141\", this, \"export\");\n        }\n      }\n\n      return this;\n    } else if (state.tokens.next.id === \"var\") {\n      // ExportDeclaration :: export VariableStatement\n      advance(\"var\");\n      token = state.tokens.curr.fud(context);\n      token.first.forEach(function(binding) {\n        state.funct[\"(scope)\"].setExported(binding, binding);\n      });\n    } else if (state.tokens.next.id === \"let\") {\n      // ExportDeclaration :: export VariableStatement\n      advance(\"let\");\n      token = state.tokens.curr.fud(context);\n      token.first.forEach(function(binding) {\n        state.funct[\"(scope)\"].setExported(binding, binding);\n      });\n    } else if (state.tokens.next.id === \"const\") {\n      // ExportDeclaration :: export VariableStatement\n      advance(\"const\");\n      token = state.tokens.curr.fud(context);\n      token.first.forEach(function(binding) {\n        state.funct[\"(scope)\"].setExported(binding, binding);\n      });\n    } else if (state.tokens.next.id === \"function\") {\n      // ExportDeclaration :: export Declaration\n      this.block = true;\n      advance(\"function\");\n      token = state.syntax[\"function\"].fud(context);\n      state.funct[\"(scope)\"].setExported(token.name, token.name);\n    } else if (state.tokens.next.id === \"async\" && peek().id === \"function\") {\n      // ExportDeclaration :: export Declaration\n      this.block = true;\n      advance(\"async\");\n      advance(\"function\");\n      token = state.syntax[\"function\"].fud(context | prodParams.preAsync);\n      state.funct[\"(scope)\"].setExported(token.name, token.name);\n    } else if (state.tokens.next.id === \"class\") {\n      // ExportDeclaration :: export Declaration\n      this.block = true;\n      advance(\"class\");\n      token = state.syntax[\"class\"].fud(context);\n      state.funct[\"(scope)\"].setExported(token.name, token.name);\n    } else {\n      /* istanbul ignore next */\n      error(\"E024\", state.tokens.next, state.tokens.next.value);\n    }\n\n    return this;\n  }).exps = true;\n\n  /**\n   * Determine if SuperCall or SuperProperty may be used in the current context\n   * (as described by the provided \"functor\" object).\n   *\n   * @param {string} type - one of \"property\" or \"call\"\n   * @param {object} funct - a \"functor\" object describing the current function\n   *                         context\n   *\n   * @returns {boolean}\n   */\n  function supportsSuper(type, funct) {\n    if (type === \"call\" && funct[\"(async)\"]) {\n      return false;\n    }\n\n    if (type === \"property\" && funct[\"(method)\"]) {\n      return true;\n    }\n\n    if (type === \"call\" && funct[\"(statement)\"] &&\n      funct[\"(statement)\"].id === \"class\") {\n      return true;\n    }\n\n    if (funct[\"(arrow)\"]) {\n      return supportsSuper(type, funct[\"(context)\"]);\n    }\n\n    return false;\n  }\n\n  var superNud = function() {\n    var next = state.tokens.next;\n\n    if (checkPunctuators(next, [\"[\", \".\"])) {\n      if (!supportsSuper(\"property\", state.funct)) {\n        error(\"E063\", this);\n      }\n    } else if (checkPunctuator(next, \"(\")) {\n      if (!supportsSuper(\"call\", state.funct)) {\n        error(\"E064\", this);\n      }\n    } else {\n      error(\"E024\", next, next.value || next.id);\n    }\n\n    return this;\n  };\n\n  // Future Reserved Words\n\n  FutureReservedWord(\"abstract\");\n  FutureReservedWord(\"boolean\");\n  FutureReservedWord(\"byte\");\n  FutureReservedWord(\"char\");\n  FutureReservedWord(\"double\");\n  FutureReservedWord(\"enum\", { es5: true });\n  FutureReservedWord(\"export\", { es5: true });\n  FutureReservedWord(\"extends\", { es5: true });\n  FutureReservedWord(\"final\");\n  FutureReservedWord(\"float\");\n  FutureReservedWord(\"goto\");\n  FutureReservedWord(\"implements\", { es5: true, strictOnly: true });\n  FutureReservedWord(\"int\");\n  FutureReservedWord(\"interface\", { es5: true, strictOnly: true });\n  FutureReservedWord(\"long\");\n  FutureReservedWord(\"native\");\n  FutureReservedWord(\"package\", { es5: true, strictOnly: true });\n  FutureReservedWord(\"private\", { es5: true, strictOnly: true });\n  FutureReservedWord(\"protected\", { es5: true, strictOnly: true });\n  FutureReservedWord(\"public\", { es5: true, strictOnly: true });\n  FutureReservedWord(\"short\");\n  FutureReservedWord(\"static\", { es5: true, strictOnly: true });\n  FutureReservedWord(\"synchronized\");\n  FutureReservedWord(\"transient\");\n  FutureReservedWord(\"volatile\");\n\n  // this function is used to determine whether a squarebracket or a curlybracket\n  // expression is a comprehension array, destructuring assignment or a json value.\n\n  var lookupBlockType = function() {\n    var pn, pn1, prev;\n    var i = -1;\n    var bracketStack = 0;\n    var ret = {};\n    if (checkPunctuators(state.tokens.curr, [\"[\", \"{\"])) {\n      bracketStack += 1;\n    }\n    do {\n      prev = i === -1 ? state.tokens.curr : pn;\n      pn = i === -1 ? state.tokens.next : peek(i);\n      pn1 = peek(i + 1);\n      i = i + 1;\n      if (checkPunctuators(pn, [\"[\", \"{\"])) {\n        bracketStack += 1;\n      } else if (checkPunctuators(pn, [\"]\", \"}\"])) {\n        bracketStack -= 1;\n      }\n      if (bracketStack === 1 && pn.identifier && pn.value === \"for\" &&\n          !checkPunctuator(prev, \".\")) {\n        ret.isCompArray = true;\n        ret.notJson = true;\n        break;\n      }\n      if (bracketStack === 0 && checkPunctuators(pn, [\"}\", \"]\"])) {\n        if (pn1.value === \"=\") {\n          ret.isDestAssign = true;\n          ret.notJson = true;\n          break;\n        } else if (pn1.value === \".\") {\n          ret.notJson = true;\n          break;\n        }\n      }\n      if (checkPunctuator(pn, \";\")) {\n        ret.notJson = true;\n      }\n    } while (bracketStack > 0 && pn.id !== \"(end)\");\n    return ret;\n  };\n\n  /**\n   * Update an object used to track property names within object initializers\n   * and class bodies. Produce warnings in response to duplicated names.\n   *\n   * @param {object} props - a collection of all properties of the object or\n   *                         class to which the current property is being\n   *                         assigned\n   * @param {string} name - the property name\n   * @param {object} tkn - the token defining the property\n   * @param {boolean} [isClass] - whether the accessor is part of an ES6 Class\n   *                              definition\n   * @param {boolean} [isStatic] - whether the accessor is a static method\n   * @param {boolean} [isComputed] - whether the property is a computed expression like [Symbol.iterator]\n   */\n  function saveProperty(props, name, tkn, isClass, isStatic, isComputed) {\n    if (tkn.identifier) {\n      name = tkn.value;\n    }\n    var key = name;\n    if (isClass && isStatic) {\n      key = \"static \" + name;\n    }\n\n    if (props[key] && name !== \"__proto__\" && !isComputed) {\n      var msg = [\"key\", \"class method\", \"static class method\"];\n      msg = msg[(isClass || false) + (isStatic || false)];\n      warning(\"W075\", state.tokens.next, msg, name);\n    } else {\n      props[key] = Object.create(null);\n    }\n\n    props[key].basic = true;\n    props[key].basictkn = tkn;\n  }\n\n  /**\n   * Update an object used to track property names within object initializers\n   * and class bodies. Produce warnings in response to duplicated names.\n   *\n   * @param {string} accessorType - Either \"get\" or \"set\"\n   * @param {object} props - a collection of all properties of the object or\n   *                         class to which the current accessor is being\n   *                         assigned\n   * @param {object} tkn - the identifier token representing the accessor name\n   * @param {boolean} [isClass] - whether the accessor is part of an ES6 Class\n   *                              definition\n   * @param {boolean} [isStatic] - whether the accessor is a static method\n   */\n  function saveAccessor(accessorType, props, name, tkn, isClass, isStatic) {\n    var flagName = accessorType === \"get\" ? \"getterToken\" : \"setterToken\";\n    var key = name;\n    state.tokens.curr.accessorType = accessorType;\n    state.nameStack.set(tkn);\n    if (isClass && isStatic) {\n      key = \"static \" + name;\n    }\n\n    if (props[key]) {\n      if ((props[key].basic || props[key][flagName]) && name !== \"__proto__\") {\n        var msg = \"\";\n        if (isClass) {\n          if (isStatic) {\n            msg += \"static \";\n          }\n          msg += accessorType + \"ter method\";\n        } else {\n          msg = \"key\";\n        }\n        warning(\"W075\", state.tokens.next, msg, name);\n      }\n    } else {\n      props[key] = Object.create(null);\n    }\n\n    props[key][flagName] = tkn;\n    if (isStatic) {\n      props[key].static = true;\n    }\n  }\n\n  /**\n   * Parse a computed property name within object initializers and class bodies\n   * as introduced by ES2015. For example:\n   *\n   *     void {\n   *       [object.method()]: null\n   *     };\n   *\n   * @param {number} context - the parsing context\n   *\n   * @returns {object} - the token value that describes the expression which\n   *                     defines the property name\n   */\n  function computedPropertyName(context) {\n    advance(\"[\");\n\n    // Explicitly reclassify token as a delimeter to prevent its later\n    // interpretation as an \"infix\" operator.\n    state.tokens.curr.delim = true;\n    state.tokens.curr.lbp = 0;\n\n    if (!state.inES6()) {\n      warning(\"W119\", state.tokens.curr, \"computed property names\", \"6\");\n    }\n    var value = expression(context & ~prodParams.noin, 10);\n    advance(\"]\");\n    return value;\n  }\n\n  /**\n   * Test whether a given token is a punctuator whose `value` property matches\n   * one of the specified values. This function explicitly verifies the token's\n   * `type` property so that like-valued string literals (e.g. `\";\"`) do not\n   * produce false positives.\n   *\n   * @param {Token} token\n   * @param {Array.<string>} values\n   *\n   * @returns {boolean}\n   */\n  function checkPunctuators(token, values) {\n    if (token.type === \"(punctuator)\") {\n      return _.includes(values, token.value);\n    }\n    return false;\n  }\n\n  /**\n   * Test whether a given token is a punctuator whose `value` property matches\n   * the specified value. This function explicitly verifies the token's `type`\n   * property so that like-valued string literals (e.g. `\";\"`) do not produce\n   * false positives.\n   *\n   * @param {Token} token\n   * @param {string} value\n   *\n   * @returns {boolean}\n   */\n  function checkPunctuator(token, value) {\n    return token.type === \"(punctuator)\" && token.value === value;\n  }\n\n  // Check whether this function has been reached for a destructuring assign with undeclared values\n  function destructuringAssignOrJsonValue(context) {\n    // lookup for the assignment (ECMAScript 6 only)\n    // if it has semicolons, it is a block, so go parse it as a block\n    // or it's not a block, but there are assignments, check for undeclared variables\n\n    var block = lookupBlockType();\n    if (block.notJson) {\n      if (!state.inES6() && block.isDestAssign) {\n        /* istanbul ignore next */\n        warning(\"W104\", state.tokens.curr, \"destructuring assignment\", \"6\");\n      }\n      statements(context);\n    // otherwise parse json value\n    } else {\n      state.option.laxbreak = true;\n      state.jsonMode = true;\n      jsonValue();\n    }\n  }\n\n  /**\n   * Parse and define the three states of a list comprehension in order to\n   * avoid defining global variables, but keeping them to the list\n   * comprehension scope only. The order of the states are as follows:\n   *\n   * - \"use\" - which will be the returned iterative part of the list\n   *   comprehension\n   * - \"define\" - which will define the variables local to the list\n   *   comprehension\n   * - \"filter\" - which will help filter out values\n   */\n  var arrayComprehension = function() {\n    var CompArray = function() {\n      this.mode = \"use\";\n      this.variables = [];\n    };\n    var _carrays = [];\n    var _current;\n    function declare(v) {\n      var l = _current.variables.filter(function(elt) {\n        // if it has, change its undef state\n        if (elt.value === v) {\n          elt.undef = false;\n          return v;\n        }\n      }).length;\n      return l !== 0;\n    }\n    function use(v) {\n      var l = _current.variables.filter(function(elt) {\n        // and if it has been defined\n        if (elt.value === v && !elt.undef) {\n          if (elt.unused === true) {\n            elt.unused = false;\n          }\n          return v;\n        }\n      }).length;\n      // otherwise we warn about it\n      return (l === 0);\n    }\n    return { stack: function() {\n          _current = new CompArray();\n          _carrays.push(_current);\n        },\n        unstack: function() {\n          _current.variables.filter(function(v) {\n            if (v.unused)\n              warning(\"W098\", v.token, v.token.raw_text || v.value);\n            if (v.undef)\n              state.funct[\"(scope)\"].block.use(v.value, v.token);\n          });\n          _carrays.splice(-1, 1);\n          _current = _carrays[_carrays.length - 1];\n        },\n        setState: function(s) {\n          if (_.includes([\"use\", \"define\", \"generate\", \"filter\"], s))\n            _current.mode = s;\n        },\n        check: function(v) {\n          if (!_current) {\n            return;\n          }\n          // When we are in \"use\" state of the list comp, we enqueue that var\n          if (_current && _current.mode === \"use\") {\n            if (use(v)) {\n              _current.variables.push({\n                token: state.tokens.curr,\n                value: v,\n                undef: true,\n                unused: false\n              });\n            }\n            return true;\n          // When we are in \"define\" state of the list comp,\n          } else if (_current && _current.mode === \"define\") {\n            // check if the variable has been used previously\n            if (!declare(v)) {\n              _current.variables.push({\n                token: state.tokens.curr,\n                value: v,\n                undef: false,\n                unused: true\n              });\n            }\n            return true;\n          // When we are in the \"generate\" state of the list comp,\n          } else if (_current && _current.mode === \"generate\") {\n            state.funct[\"(scope)\"].block.use(v, state.tokens.curr);\n            return true;\n          // When we are in \"filter\" state,\n          } else if (_current && _current.mode === \"filter\") {\n            // we check whether current variable has been declared\n            if (use(v)) {\n              // if not we warn about it\n              /* istanbul ignore next */\n              state.funct[\"(scope)\"].block.use(v, state.tokens.curr);\n            }\n            return true;\n          }\n          /* istanbul ignore next */\n          return false;\n        }\n        };\n  };\n\n\n  /**\n   * Parse input according to the JSON format.\n   *\n   * http://json.org/\n   */\n  function jsonValue() {\n    function jsonObject() {\n      var o = {}, t = state.tokens.next;\n      advance(\"{\");\n      if (state.tokens.next.id !== \"}\") {\n        for (;;) {\n          if (state.tokens.next.id === \"(end)\") {\n            error(\"E026\", state.tokens.next, t.line);\n          } else if (state.tokens.next.id === \"}\") {\n            warning(\"W094\", state.tokens.curr);\n            break;\n          } else if (state.tokens.next.id === \",\") {\n            error(\"E028\", state.tokens.next);\n          } else if (state.tokens.next.id !== \"(string)\") {\n            warning(\"W095\", state.tokens.next, state.tokens.next.value);\n          }\n          if (o[state.tokens.next.value] === true) {\n            warning(\"W075\", state.tokens.next, \"key\", state.tokens.next.value);\n          } else if ((state.tokens.next.value === \"__proto__\" &&\n            !state.option.proto) || (state.tokens.next.value === \"__iterator__\" &&\n            !state.option.iterator)) {\n            warning(\"W096\", state.tokens.next, state.tokens.next.value);\n          } else {\n            o[state.tokens.next.value] = true;\n          }\n          advance();\n          advance(\":\");\n          jsonValue();\n          if (state.tokens.next.id !== \",\") {\n            break;\n          }\n          advance(\",\");\n        }\n      }\n      advance(\"}\");\n    }\n\n    function jsonArray() {\n      var t = state.tokens.next;\n      advance(\"[\");\n      if (state.tokens.next.id !== \"]\") {\n        for (;;) {\n          if (state.tokens.next.id === \"(end)\") {\n            error(\"E027\", state.tokens.next, t.line);\n          } else if (state.tokens.next.id === \"]\") {\n            warning(\"W094\", state.tokens.curr);\n            break;\n          } else if (state.tokens.next.id === \",\") {\n            error(\"E028\", state.tokens.next);\n          }\n          jsonValue();\n          if (state.tokens.next.id !== \",\") {\n            break;\n          }\n          advance(\",\");\n        }\n      }\n      advance(\"]\");\n    }\n\n    switch (state.tokens.next.id) {\n    case \"{\":\n      jsonObject();\n      break;\n    case \"[\":\n      jsonArray();\n      break;\n    case \"true\":\n    case \"false\":\n    case \"null\":\n    case \"(number)\":\n    case \"(string)\":\n      advance();\n      break;\n    case \"-\":\n      advance(\"-\");\n      advance(\"(number)\");\n      break;\n    default:\n      error(\"E003\", state.tokens.next);\n    }\n  }\n\n  /**\n   * Lint dynamically-evaluated code, appending any resulting errors/warnings\n   * into the global `errors` array.\n   *\n   * @param {array} internals - collection of \"internals\" objects describing\n   *                            string tokens that contain evaluated code\n   * @param {object} options - linting options to apply\n   * @param {object} globals - globally-defined bindings for the evaluated code\n   */\n  function lintEvalCode(internals, options, globals) {\n    var priorErrorCount, idx, jdx, internal;\n\n    for (idx = 0; idx < internals.length; idx += 1) {\n      internal = internals[idx];\n      options.scope = internal.elem;\n      priorErrorCount = JSHINT.errors.length;\n\n      itself(internal.code, options, globals);\n\n      for (jdx = priorErrorCount; jdx < JSHINT.errors.length; jdx += 1) {\n        JSHINT.errors[jdx].line += internal.token.line - 1;\n      }\n    }\n  }\n\n  var escapeRegex = function(str) {\n    return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n  };\n\n  // The actual JSHINT function itself.\n  var itself = function(s, o, g) {\n    var x, reIgnoreStr, reIgnore;\n    var optionKeys, newOptionObj, newIgnoredObj;\n\n    o = _.clone(o);\n    state.reset();\n    newOptionObj = state.option;\n    newIgnoredObj = state.ignored;\n\n    if (o && o.scope) {\n      JSHINT.scope = o.scope;\n    } else {\n      JSHINT.errors = [];\n      JSHINT.internals = [];\n      JSHINT.blacklist = {};\n      JSHINT.scope = \"(main)\";\n    }\n\n    predefined = Object.create(null);\n    combine(predefined, vars.ecmaIdentifiers[3]);\n    combine(predefined, vars.reservedVars);\n\n    declared = Object.create(null);\n    var exported = Object.create(null); // Variables that live outside the current file\n\n    function each(obj, cb) {\n      if (!obj)\n        return;\n\n      if (!Array.isArray(obj) && typeof obj === \"object\")\n        obj = Object.keys(obj);\n\n      obj.forEach(cb);\n    }\n\n    if (o) {\n\n      each([o.predef, o.globals], function(dict) {\n        each(dict, function(item) {\n          var slice, prop;\n\n          if (item[0] === \"-\") {\n            slice = item.slice(1);\n            JSHINT.blacklist[slice] = slice;\n            // remove from predefined if there\n            delete predefined[slice];\n          } else {\n            prop = Object.getOwnPropertyDescriptor(dict, item);\n            predefined[item] = prop ? prop.value : false;\n          }\n        });\n      });\n\n      each(o.exported || null, function(item) {\n        exported[item] = true;\n      });\n\n      delete o.predef;\n      delete o.exported;\n\n      optionKeys = Object.keys(o);\n      for (x = 0; x < optionKeys.length; x++) {\n        if (/^-W\\d{3}$/g.test(optionKeys[x])) {\n          newIgnoredObj[optionKeys[x].slice(1)] = true;\n        } else {\n          var optionKey = optionKeys[x];\n          newOptionObj[optionKey] = o[optionKey];\n        }\n      }\n    }\n\n    state.option = newOptionObj;\n    state.ignored = newIgnoredObj;\n\n    state.option.indent = state.option.indent || 4;\n    state.option.maxerr = state.option.maxerr || 50;\n\n    indent = 1;\n\n    var scopeManagerInst = scopeManager(state, predefined, exported, declared);\n    scopeManagerInst.on(\"warning\", function(ev) {\n      warning.apply(null, [ ev.code, ev.token].concat(ev.data));\n    });\n\n    scopeManagerInst.on(\"error\", function(ev) {\n      /* istanbul ignore next */\n      error.apply(null, [ ev.code, ev.token ].concat(ev.data));\n    });\n\n    state.funct = functor(\"(global)\", null, {\n      \"(global)\"    : true,\n      \"(scope)\"     : scopeManagerInst,\n      \"(comparray)\" : arrayComprehension(),\n      \"(metrics)\"   : createMetrics(state.tokens.next)\n    });\n\n    functions = [state.funct];\n    member = {};\n    membersOnly = null;\n    inblock = false;\n    lookahead = [];\n\n    if (!isString(s) && !Array.isArray(s)) {\n      errorAt(\"E004\", 0);\n      return false;\n    }\n\n    api = {\n      get isJSON() {\n        /* istanbul ignore next */\n        return state.jsonMode;\n      },\n\n      getOption: function(name) {\n        return state.option[name] || null;\n      },\n\n      getCache: function(name) {\n        return state.cache[name];\n      },\n\n      setCache: function(name, value) {\n        state.cache[name] = value;\n      },\n\n      warn: function(code, data) {\n        warningAt.apply(null, [ code, data.line, data.char ].concat(data.data));\n      },\n\n      on: function(names, listener) {\n        names.split(\" \").forEach(function(name) {\n          emitter.on(name, listener);\n        }.bind(this));\n      }\n    };\n\n    emitter.removeAllListeners();\n    (extraModules || []).forEach(function(func) {\n      func(api);\n    });\n\n    state.tokens.prev = state.tokens.curr = state.tokens.next = state.syntax[\"(begin)\"];\n    if (o && o.ignoreDelimiters) {\n\n      if (!Array.isArray(o.ignoreDelimiters)) {\n        /* istanbul ignore next */\n        o.ignoreDelimiters = [o.ignoreDelimiters];\n      }\n\n      o.ignoreDelimiters.forEach(function(delimiterPair) {\n        if (!delimiterPair.start || !delimiterPair.end)\n            return;\n\n        reIgnoreStr = escapeRegex(delimiterPair.start) +\n                      \"[\\\\s\\\\S]*?\" +\n                      escapeRegex(delimiterPair.end);\n\n        reIgnore = new RegExp(reIgnoreStr, \"ig\");\n\n        s = s.replace(reIgnore, function(match) {\n          return match.replace(/./g, \" \");\n        });\n      });\n    }\n\n    lex = new Lexer(s);\n\n    lex.on(\"warning\", function(ev) {\n      warningAt.apply(null, [ ev.code, ev.line, ev.character].concat(ev.data));\n    });\n\n    lex.on(\"error\", function(ev) {\n      errorAt.apply(null, [ ev.code, ev.line, ev.character ].concat(ev.data));\n    });\n\n    lex.on(\"fatal\", function(ev) {\n      quit(\"E041\", ev);\n    });\n\n    lex.on(\"Identifier\", function(ev) {\n      emitter.emit(\"Identifier\", ev);\n    });\n\n    lex.on(\"String\", function(ev) {\n      emitter.emit(\"String\", ev);\n    });\n\n    lex.on(\"Number\", function(ev) {\n      emitter.emit(\"Number\", ev);\n    });\n\n    // Check options\n    var name;\n    for (name in o) {\n      if (_.has(o, name)) {\n        checkOption(name, true, state.tokens.curr);\n      }\n    }\n    if (o) {\n      for (name in o.unstable) {\n        if (_.has(o.unstable, name)) {\n          checkOption(name, false, state.tokens.curr);\n        }\n      }\n    }\n\n    try {\n      applyOptions();\n\n      // combine the passed globals after we've assumed all our options\n      combine(predefined, g || {});\n\n      //reset values\n      checkComma.first = true;\n\n      advance();\n      switch (state.tokens.next.id) {\n      case \"{\":\n      case \"[\":\n        destructuringAssignOrJsonValue(0);\n        break;\n      default:\n        directives();\n\n        if (state.directive[\"use strict\"]) {\n          if (!state.allowsGlobalUsd()) {\n            warning(\"W097\", state.directive[\"use strict\"]);\n          }\n        }\n\n        statements(0);\n      }\n\n      if (state.tokens.next.id !== \"(end)\") {\n        quit(\"E041\", state.tokens.curr);\n      }\n\n      state.funct[\"(scope)\"].unstack();\n\n    } catch (err) {\n      if (err && err.name === \"JSHintError\") {\n        var nt = state.tokens.next || {};\n        JSHINT.errors.push({\n          scope     : \"(main)\",\n          raw       : err.raw,\n          code      : err.code,\n          reason    : err.reason,\n          line      : err.line || nt.line,\n          character : err.character || nt.from\n        });\n      } else {\n        /* istanbul ignore next */\n        throw err;\n      }\n    }\n\n    // Loop over the listed \"internals\", and check them as well.\n    if (JSHINT.scope === \"(main)\") {\n      lintEvalCode(JSHINT.internals, o || {}, g);\n    }\n\n    return JSHINT.errors.length === 0;\n  };\n\n  // Modules.\n  itself.addModule = function(func) {\n    extraModules.push(func);\n  };\n\n  itself.addModule(style.register);\n\n  // Data summary.\n  itself.data = function() {\n    var data = {\n      functions: [],\n      options: state.option\n    };\n\n    var fu, f, i, n, globals;\n\n    if (itself.errors.length) {\n      data.errors = itself.errors;\n    }\n\n    if (state.jsonMode) {\n      /* istanbul ignore next */\n      data.json = true;\n    }\n\n    var impliedGlobals = state.funct[\"(scope)\"].getImpliedGlobals();\n    if (impliedGlobals.length > 0) {\n      data.implieds = impliedGlobals;\n    }\n\n    globals = state.funct[\"(scope)\"].getUsedOrDefinedGlobals();\n    if (globals.length > 0) {\n      data.globals = globals;\n    }\n\n    for (i = 1; i < functions.length; i += 1) {\n      f = functions[i];\n      fu = {};\n\n      fu.name = f[\"(name)\"];\n      fu.param = f[\"(params)\"];\n      fu.line = f[\"(line)\"];\n      fu.character = f[\"(character)\"];\n      fu.last = f[\"(last)\"];\n      fu.lastcharacter = f[\"(lastcharacter)\"];\n\n      fu.metrics = {\n        complexity: f[\"(metrics)\"].ComplexityCount,\n        parameters: f[\"(metrics)\"].arity,\n        statements: f[\"(metrics)\"].statementCount\n      };\n\n      data.functions.push(fu);\n    }\n\n    var unuseds = state.funct[\"(scope)\"].getUnuseds();\n    if (unuseds.length > 0) {\n      data.unused = unuseds;\n    }\n\n    for (n in member) {\n      if (typeof member[n] === \"number\") {\n        data.member = member;\n        break;\n      }\n    }\n\n    return data;\n  };\n\n  itself.jshint = itself;\n\n  return itself;\n}());\n\n// Make JSHINT a Node module, if possible.\nif (typeof exports === \"object\" && exports) {\n  exports.JSHINT = JSHINT;\n}\n","var arrayMap = require('./_arrayMap'),\n    copyArray = require('./_copyArray'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol'),\n    stringToPath = require('./_stringToPath'),\n    toKey = require('./_toKey'),\n    toString = require('./toString');\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return arrayMap(value, toKey);\n  }\n  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n}\n\nmodule.exports = toPath;\n","\n/**\n * Topological sorting function\n *\n * @param {Array} edges\n * @returns {Array}\n */\n\nmodule.exports = function(edges) {\n  return toposort(uniqueNodes(edges), edges)\n}\n\nmodule.exports.array = toposort\n\nfunction toposort(nodes, edges) {\n  var cursor = nodes.length\n    , sorted = new Array(cursor)\n    , visited = {}\n    , i = cursor\n    // Better data structures make algorithm much faster.\n    , outgoingEdges = makeOutgoingEdges(edges)\n    , nodesHash = makeNodesHash(nodes)\n\n  // check for unknown nodes\n  edges.forEach(function(edge) {\n    if (!nodesHash.has(edge[0]) || !nodesHash.has(edge[1])) {\n      throw new Error('Unknown node. There is an unknown node in the supplied edges.')\n    }\n  })\n\n  while (i--) {\n    if (!visited[i]) visit(nodes[i], i, new Set())\n  }\n\n  return sorted\n\n  function visit(node, i, predecessors) {\n    if(predecessors.has(node)) {\n      var nodeRep\n      try {\n        nodeRep = \", node was:\" + JSON.stringify(node)\n      } catch(e) {\n        nodeRep = \"\"\n      }\n      throw new Error('Cyclic dependency' + nodeRep)\n    }\n\n    if (!nodesHash.has(node)) {\n      throw new Error('Found unknown node. Make sure to provided all involved nodes. Unknown node: '+JSON.stringify(node))\n    }\n\n    if (visited[i]) return;\n    visited[i] = true\n\n    var outgoing = outgoingEdges.get(node) || new Set()\n    outgoing = Array.from(outgoing)\n\n    if (i = outgoing.length) {\n      predecessors.add(node)\n      do {\n        var child = outgoing[--i]\n        visit(child, nodesHash.get(child), predecessors)\n      } while (i)\n      predecessors.delete(node)\n    }\n\n    sorted[--cursor] = node\n  }\n}\n\nfunction uniqueNodes(arr){\n  var res = new Set()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    res.add(edge[0])\n    res.add(edge[1])\n  }\n  return Array.from(res)\n}\n\nfunction makeOutgoingEdges(arr){\n  var edges = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var edge = arr[i]\n    if (!edges.has(edge[0])) edges.set(edge[0], new Set())\n    if (!edges.has(edge[1])) edges.set(edge[1], new Set())\n    edges.get(edge[0]).add(edge[1])\n  }\n  return edges\n}\n\nfunction makeNodesHash(arr){\n  var res = new Map()\n  for (var i = 0, len = arr.length; i < len; i++) {\n    res.set(arr[i], i)\n  }\n  return res\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"string.fromcodepoint\");\n\n/**\n * \\\\ - matches the backslash which indicates the beginning of an escape sequence\n * (\n *   u\\{([0-9A-Fa-f]+)\\} - first alternative; matches the variable-length hexadecimal escape sequence (\\u{ABCD0})\n * |\n *   u([0-9A-Fa-f]{4}) - second alternative; matches the 4-digit hexadecimal escape sequence (\\uABCD)\n * |\n *   x([0-9A-Fa-f]{2}) - third alternative; matches the 2-digit hexadecimal escape sequence (\\xA5)\n * |\n *   ([1-7][0-7]{0,2}|[0-7]{2,3}) - fourth alternative; matches the up-to-3-digit octal escape sequence (\\5 or \\512)\n * |\n *   (['\"tbrnfv0\\\\]) - fifth alternative; matches the special escape characters (\\t, \\n and so on)\n * |\n *   \\U([0-9A-Fa-f]+) - sixth alternative; matches the 8-digit hexadecimal escape sequence used by python (\\U0001F3B5)\n * )\n */\nvar jsEscapeRegex = /\\\\(u\\{([0-9A-Fa-f]+)\\}|u([0-9A-Fa-f]{4})|x([0-9A-Fa-f]{2})|([1-7][0-7]{0,2}|[0-7]{2,3})|(['\"tbrnfv0\\\\]))|\\\\U([0-9A-Fa-f]{8})/g;\nvar usualEscapeSequences = {\n  '0': '\\0',\n  'b': '\\b',\n  'f': '\\f',\n  'n': '\\n',\n  'r': '\\r',\n  't': '\\t',\n  'v': '\\v',\n  '\\'': '\\'',\n  '\"': '\"',\n  '\\\\': '\\\\'\n};\n\nvar fromHex = function fromHex(str) {\n  return String.fromCodePoint(parseInt(str, 16));\n};\n\nvar fromOct = function fromOct(str) {\n  return String.fromCodePoint(parseInt(str, 8));\n};\n\nvar _default = function _default(string) {\n  return string.replace(jsEscapeRegex, function (_, __, varHex, longHex, shortHex, octal, specialCharacter, python) {\n    if (varHex !== undefined) {\n      return fromHex(varHex);\n    } else if (longHex !== undefined) {\n      return fromHex(longHex);\n    } else if (shortHex !== undefined) {\n      return fromHex(shortHex);\n    } else if (octal !== undefined) {\n      return fromOct(octal);\n    } else if (python !== undefined) {\n      return fromHex(python);\n    } else {\n      return usualEscapeSequences[specialCharacter];\n    }\n  });\n};\n\nexports.default = _default;\nmodule.exports = exports.default;"],"names":["fallbackGlobalObject","getGlobalObject","isNodeEnv","global","window","self","uuid4","crypto","msCrypto","getRandomValues","arr","Uint16Array","pad","num","v","toString","length","replace","c","r","Math","random","Object","prototype","call","process","_","require","events","vars","messages","Lexer","reg","state","style","options","scopeManager","prodParams","JSHINT","api","declared","functions","inblock","indent","lookahead","lex","member","membersOnly","predefined","bang","extraModules","emitter","EventEmitter","checkOption","name","isStable","t","type","validNames","unstableNames","trim","test","indexOf","has","removed","error","isIdentifier","tkn","value","identifier","isReserved","context","token","reserved","meta","isFutureReservedWord","inES5","es5","isProperty","strictOnly","option","strict","isStrict","id","async","module","yield","supplant","str","data","a","b","combine","dest","src","keys","forEach","blacklist","applyOptions","badESOpt","enforceall","enforceopt","bool","enforcing","undefined","noenforceall","relaxopt","relaxing","processenforceall","inferEsVersion","quit","tokens","next","ecmaIdentifiers","inES6","inES8","inES11","warning","regexpu","couch","qunit","rhino","shelljs","node","typed","phantom","prototypejs","devel","dojo","browser","browserify","nonstandard","jasmine","jquery","mootools","worker","wsh","yui","mocha","code","percentage","floor","line","lines","message","errors","desc","exception","character","from","raw","reason","removeIgnoredMessages","ignored","ignoredLines","isEmpty","reject","err","d","ch","l","w","msg","warnings","info","curr","evidence","scope","push","filter","e","maxerr","warningAt","m","errorAt","addEvalCode","elem","internals","lintingDirective","directiveToken","previous","body","split","map","s","predef","key","item","idx","parts","charAt","slice","funct","addExported","ch1","substr","numvals","numberVal","val","isFinite","validthis","hasParsedCode","tn","match","exec","renamed","inverted","unstable","moz","esversion","latedef","unused","shadow","quotmark","caseFallsThrough","peek","p","i","j","peekIgnoreEOL","advance","expected","relatedToken","nextToken","prev","shift","check","isSpecial","isEndOfExpr","arguments","noin","infix","rbp","sameLine","expression","left","isArray","isObject","initial","nameStack","beginsStmt","fud","useFud","nud","lbp","first","led","pop","second","startLine","nobreaknonadjacent","right","laxbreak","nolinebreak","checkComma","opts","laxcomma","property","allowTrailing","symbol","x","syntax","delim","stmt","f","blockstmt","block","reserveName","prefix","this","arity","plusplus","checkLeftSideAssign","reserve","func","FutureReservedWord","relation","apply","beginsUnaryExpression","typeofValues","isTypoTypeof","values","notypeof","es6","es3","includes","isGlobalEval","isGlobal","assignToken","allowDestructuring","freeze","nativeObject","natives","walkPrototype","obj","isPredefined","walkNative","findNativePrototype","isMetaProperty","reassign","set","destructAssign","bindingtype","assignop","that","exps","assign","bitwise","bitwiseassignop","suffix","optionalidentifier","isName","preserve","spreadrest","operation","checkPunctuator","reachable","controlToken","inBracelessBlock","reach","parseFinalSemicolon","isUnclosed","isSameLine","blockEnd","asi","lastsemic","statement","hasOwnScope","res","stack","addLabel","labelled","unstack","stmtMissingStrict","expr","nonew","statements","directives","current","directive","inES7","undef","ordinary","isfunc","isfatarrow","iscase","old_indent","metrics","nestedBlockDepth","verifyMaxNestedBlockDepthPerFunction","statementCount","validateParams","curly","supportsFnDecl","declaration","toUpperCase","inMoz","noreturnawait","noempty","countMember","legacy","concat","isLoneArrowParam","use","baseTemplateSyntax","template","extend","doTemplateLiteral","noSubst","tail","superNud","nocomma","increaseComplexityCount","paren","eqnull","eqeqeq","tag","scripturl","javascriptURL","forgiveUndef","mp","metaProperty","inFunction","opening","evil","newcap","supernew","classDeclaration","className","classNameToken","inClassBody","addbinding","initialized","initialize","classBody","classToken","accessorType","isStatic","inGenerator","hasConstructor","props","create","preAsync","inES9","saveProperty","propertyName","doMethod","infer","computedPropertyName","saveAccessor","checkProperties","generator","doFunction","isMethod","peekThroughParens","parens","pn1","pn","functor","overwrites","createMetrics","leftOrRbp","ctx","depth","end","complete","classExprBinding","isGenerator","isArrow","ignoreLoopFunc","oldOption","oldIgnored","isAsync","tryClause","internallyAccessibleName","add","paramsInfo","ident","paramsIds","pastDefault","pastRest","loneArg","hasDestructuring","addParam","params","isSimple","parsedOpening","currentParams","destructuringPattern","checkPunctuators","addParamArgs","functionparams","verifyMaxParametersPerFunction","noyield","verifyMaxStatementsPerFunction","verifyMaxComplexityPerFunction","loopfunc","join","functionStartToken","ComplexityCount","maxstatements","isNumber","maxparams","maxdepth","max","maxcomplexity","cc","checkCondAssignment","boss","setterToken","getterToken","static","isAssignment","assignment","destructuringPatternRecursive","ids","identifiers","openingParsed","recursiveOptions","firstToken","nextInnerDE","assignTarget","assignmentProperty","isRest","element_after_rest","destructuringPatternMatch","zip","Array","blockVariableStatement","lone","letblock","isLet","isConst","isMozillaLet","names","hasOwnProperty","hasInitializer","hasComma","noarg","immed","n","ret","triggerFnExpr","last","preceeding","isNecessary","singleGroups","application","sub","blocktype","lookupBlockType","isCompArray","esnext","reversed","setState","comprehensiveArrayExpression","isDestAssign","elision","trailingcomma","nextVal","isGeneratorMethod","isAsyncMethod","inObjectBody","conststatement","asyncSymbol","yieldSymbol","letstatement","varstmt","impliedClosure","futurehostile","inexport","export","labelType","enablesStrictMode","forinifcheck","forin","forinifcheckneeded","forinifchecks","hasParameter","catchParameter","each","inES10","withstmt","g","noindent","seenCase","leanswitch","debug","nextop","comma","initializer","bindingPower","targets","target","decl","letscope","foreachtok","afterNext","headContext","hasLabel","isFunc","mozYield","delegatingYield","importSymbol","importName","supportsSuper","moduleSpecifier","ok","setExported","def","exportType","exportedTokens","local","binding","bracketStack","notJson","isClass","isComputed","basic","basictkn","flagName","destructuringAssignOrJsonValue","jsonMode","jsonValue","arrayComprehension","_current","CompArray","mode","variables","_carrays","elt","raw_text","splice","declare","o","proto","iterator","jsonObject","jsonArray","lintEvalCode","globals","priorErrorCount","jdx","internal","itself","escapeRegex","reIgnoreStr","reIgnore","optionKeys","newOptionObj","newIgnoredObj","clone","reset","reservedVars","exported","cb","dict","prop","getOwnPropertyDescriptor","optionKey","scopeManagerInst","on","ev","isJSON","getOption","getCache","cache","setCache","warn","char","listener","bind","removeAllListeners","ignoreDelimiters","delimiterPair","start","RegExp","emit","allowsGlobalUsd","nt","addModule","register","fu","json","impliedGlobals","getImpliedGlobals","implieds","getUsedOrDefinedGlobals","param","lastcharacter","complexity","parameters","unuseds","getUnuseds","jshint","exports","arrayMap","copyArray","isSymbol","stringToPath","toKey","toposort","nodes","edges","cursor","sorted","visited","outgoingEdges","Map","len","edge","Set","get","makeOutgoingEdges","nodesHash","makeNodesHash","Error","visit","predecessors","nodeRep","JSON","stringify","outgoing","child","delete","uniqueNodes","array","defineProperty","jsEscapeRegex","usualEscapeSequences","fromHex","String","fromCodePoint","parseInt","string","__","varHex","longHex","shortHex","octal","specialCharacter","python","default"],"sourceRoot":""}