{"version":3,"file":"static/js/447.a1205d55.chunk.js","mappings":"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","sources":["actions/themeActions.ts","components/editorComponents/CloseEditor.tsx","components/editorComponents/EditableText.tsx","ce/pages/Home/LeftPaneBottomSection.tsx","ee/pages/Home/LeftPaneBottomSection.tsx","entities/Datasource/RestAPIForm.ts","pages/Editor/DataSourceEditor/Collapsible.tsx","pages/Editor/DataSourceEditor/Connected.tsx","pages/Editor/DataSourceEditor/DatasourceSection.tsx","pages/Editor/DataSourceEditor/FormTitle.tsx","pages/Editor/DataSourceEditor/JSONtoForm.tsx","pages/Editor/DataSourceEditor/NewActionButton.tsx","pages/Editor/DataSourceEditor/SaveOrDiscardDatasourceModal.tsx","components/designSystems/appsmith/help/CollapsibleHelp.tsx","pages/Editor/DataSourceEditor/DBForm.tsx","transformers/RestAPIDatasourceFormTransformer.ts","components/designSystems/appsmith/CopyToClipBoard.tsx","pages/Editor/DataSourceEditor/RestAPIDatasourceForm.tsx","pages/Editor/DataSourceEditor/index.tsx","pages/Editor/EntityNotFoundPane.tsx","pages/common/datasourceAuth/AuthMessage.tsx","pages/Editor/SaaSEditor/DatasourceForm.tsx","pages/Editor/gitSync/components/TabItem.tsx","pages/Editor/gitSync/Menu.tsx","pages/Editor/gitSync/components/DatasourceListItem.tsx","pages/Editor/gitSync/ReconnectDatasourceModal.tsx","pages/Editor/gitSync/components/StyledComponents.tsx","pages/common/datasourceAuth/index.tsx"],"sourcesContent":["import { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport { ThemeMode } from \"selectors/themeSelectors\";\n\nexport const setThemeMode = (mode: ThemeMode) => ({\n  type: ReduxActionTypes.SET_THEME,\n  payload: mode,\n});\n\nexport const setHeaderMeta = (\n  hideHeaderShadow: boolean,\n  showHeaderSeparator: boolean,\n) => ({\n  type: ReduxActionTypes.SET_HEADER_META,\n  payload: { hideHeaderShadow, showHeaderSeparator },\n});\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { Text, TextType } from \"design-system-old\";\nimport { Icon } from \"@blueprintjs/core\";\nimport PerformanceTracker, {\n  PerformanceTransactionName,\n} from \"utils/PerformanceTracker\";\nimport { INTEGRATION_TABS } from \"constants/routes\";\nimport { getQueryParams } from \"utils/URLUtils\";\nimport { getIsGeneratePageInitiator } from \"utils/GenerateCrudUtil\";\nimport {\n  builderURL,\n  generateTemplateFormURL,\n  integrationEditorURL,\n} from \"RouteBuilder\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentPageId } from \"selectors/editorSelectors\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\n\nconst IconContainer = styled.div`\n  //width: 100%;\n  height: 30px;\n  display: flex;\n  flex-shrink: 0;\n  align-items: center;\n  cursor: pointer;\n  padding-left: 16px;\n  width: fit-content;\n  /* background-color: ${(props) => props.theme.colors.apiPane.iconHoverBg}; */\n`;\n\nfunction CloseEditor() {\n  const history = useHistory();\n  const params: string = location.search;\n  const searchParamsInstance = new URLSearchParams(params);\n  const redirectTo = searchParamsInstance.get(\"from\");\n  const pageId = useSelector(getCurrentPageId);\n\n  const isGeneratePageInitiator = getIsGeneratePageInitiator();\n  let integrationTab = INTEGRATION_TABS.ACTIVE;\n\n  if (isGeneratePageInitiator) {\n    // When users routes to Integrations page via generate CRUD page form\n    // the INTEGRATION_TABS.ACTIVE is hidden and\n    // hence when routing back, user should go back to INTEGRATION_TABS.NEW tab.\n    integrationTab = INTEGRATION_TABS.NEW;\n  }\n\n  const handleClose = (e: React.MouseEvent) => {\n    PerformanceTracker.startTracking(\n      PerformanceTransactionName.CLOSE_SIDE_PANE,\n      { path: location.pathname },\n    );\n    e.stopPropagation();\n\n    // if it is a generate CRUD page flow from which user came here\n    // then route user back to `/generate-page/form`\n    // else go back to BUILDER_PAGE\n    const redirectURL = isGeneratePageInitiator\n      ? generateTemplateFormURL({ pageId })\n      : builderURL({ pageId });\n\n    const URL =\n      redirectTo === \"datasources\"\n        ? integrationEditorURL({\n            pageId,\n            selectedTab: integrationTab,\n            params: getQueryParams(),\n          })\n        : redirectURL;\n\n    AnalyticsUtil.logEvent(\"BACK_BUTTON_CLICK\", {\n      type: \"BACK_BUTTON\",\n      fromUrl: location.pathname,\n      toUrl: URL,\n    });\n    history.push(URL);\n  };\n\n  return (\n    <IconContainer className=\"t--close-editor\" onClick={handleClose}>\n      <Icon icon=\"chevron-left\" iconSize={16} />\n      <Text style={{ color: \"#0c0000\", lineHeight: \"14px\" }} type={TextType.P1}>\n        Back\n      </Text>\n    </IconContainer>\n  );\n}\n\nexport default CloseEditor;\n","import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport {\n  EditableText as BlueprintEditableText,\n  Classes,\n} from \"@blueprintjs/core\";\nimport styled from \"styled-components\";\nimport _ from \"lodash\";\nimport ErrorTooltip from \"./ErrorTooltip\";\nimport { Icon, IconSize, Toaster, Variant } from \"design-system-old\";\n\nexport enum EditInteractionKind {\n  SINGLE,\n  DOUBLE,\n}\n\ntype EditableTextProps = {\n  type: \"text\" | \"password\" | \"email\" | \"phone\" | \"date\";\n  defaultValue: string;\n  onTextChanged: (value: string) => void;\n  placeholder: string;\n  className?: string;\n  valueTransform?: (value: string) => string;\n  isEditingDefault?: boolean;\n  forceDefault?: boolean;\n  updating?: boolean;\n  isInvalid?: (value: string) => string | boolean;\n  editInteractionKind: EditInteractionKind;\n  hideEditIcon?: boolean;\n  minimal?: boolean;\n  onBlur?: (value?: string) => void;\n  beforeUnmount?: (value?: string) => void;\n  errorTooltipClass?: string;\n  maxLength?: number;\n  underline?: boolean;\n  disabled?: boolean;\n  multiline?: boolean;\n  maxLines?: number;\n  minLines?: number;\n  customErrorTooltip?: string;\n  useFullWidth?: boolean;\n};\n\nconst EditableTextWrapper = styled.div<{\n  isEditing: boolean;\n  minimal: boolean;\n  useFullWidth: boolean;\n}>`\n  && {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n    width: 100%;\n    & .${Classes.EDITABLE_TEXT} {\n      background: ${(props) =>\n        props.isEditing && !props.minimal\n          ? props.theme.colors.editableText.bg\n          : \"none\"};\n      cursor: pointer;\n      padding: ${(props) => (!props.minimal ? \"5px 5px\" : \"0px\")};\n      text-transform: none;\n      flex: 1 0 100%;\n      max-width: 100%;\n      overflow: hidden;\n      display: flex;\n      &:before,\n      &:after {\n        display: none;\n      }\n    }\n    & div.${Classes.EDITABLE_TEXT_INPUT} {\n      text-transform: none;\n      width: 100%;\n    }\n  }\n\n  ${({ useFullWidth }) =>\n    useFullWidth &&\n    `\n    > div {\n    width: 100%;\n    }\n  `}\n`;\n\n// using the !important keyword here is mandatory because a style is being applied to that element using the style attribute\n// which has higher specificity than other css selectors. It seems the overriding style is being applied by the package itself.\nconst TextContainer = styled.div<{\n  isValid: boolean;\n  minimal: boolean;\n  underline?: boolean;\n}>`\n  display: flex;\n  &&&& .${Classes.EDITABLE_TEXT} {\n    & .${Classes.EDITABLE_TEXT_CONTENT} {\n      &:hover {\n        text-decoration: ${(props) => (props.minimal ? \"underline\" : \"none\")};\n      }\n    }\n  }\n  &&& .${Classes.EDITABLE_TEXT_CONTENT}:hover {\n    ${(props) =>\n      props.underline\n        ? `\n        border-bottom-style: solid;\n        border-bottom-width: 1px;\n        width: fit-content;\n      `\n        : null}\n  }\n  & span.bp3-editable-text-content {\n    height: auto !important;\n  }\n`;\n\nexport function EditableText(props: EditableTextProps) {\n  const {\n    beforeUnmount,\n    className,\n    customErrorTooltip = \"\",\n    defaultValue,\n    disabled,\n    editInteractionKind,\n    errorTooltipClass,\n    forceDefault,\n    hideEditIcon,\n    isEditingDefault,\n    isInvalid,\n    maxLength,\n    maxLines,\n    minimal,\n    minLines,\n    multiline,\n    onBlur,\n    onTextChanged,\n    placeholder,\n    underline,\n    updating,\n    useFullWidth,\n    valueTransform,\n  } = props;\n  const [isEditing, setIsEditing] = useState(!!isEditingDefault);\n  const [value, setStateValue] = useState(defaultValue);\n  const inputValRef = useRef(\"\");\n\n  const setValue = useCallback((value) => {\n    inputValRef.current = value;\n    setStateValue(value);\n  }, []);\n\n  useEffect(() => {\n    setValue(defaultValue);\n  }, [defaultValue]);\n\n  useEffect(() => {\n    setIsEditing(!!isEditingDefault);\n  }, [defaultValue, isEditingDefault]);\n\n  useEffect(() => {\n    if (forceDefault === true) setValue(defaultValue);\n  }, [forceDefault, defaultValue]);\n\n  // at times onTextChange is not fired\n  // for example when the modal is closed on clicking the overlay\n  useEffect(() => {\n    return () => {\n      if (typeof beforeUnmount === \"function\")\n        beforeUnmount(inputValRef.current);\n    };\n  }, [beforeUnmount]);\n\n  const edit = (e: any) => {\n    setIsEditing(true);\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  const onChange = useCallback(\n    (_value: string) => {\n      onBlur && onBlur();\n      const _isInvalid = isInvalid ? isInvalid(_value) : false;\n      if (!_isInvalid) {\n        onTextChanged(_value);\n        setIsEditing(false);\n      } else {\n        Toaster.show({\n          text: customErrorTooltip || \"Invalid name\",\n          variant: Variant.danger,\n        });\n      }\n    },\n    [isInvalid, onTextChanged],\n  );\n\n  const onInputchange = useCallback(\n    (_value: string) => {\n      let finalVal: string = _value;\n      if (valueTransform) {\n        finalVal = valueTransform(_value);\n      }\n      setValue(finalVal);\n    },\n    [valueTransform],\n  );\n\n  const errorMessage = isInvalid && isInvalid(value);\n  const error = errorMessage ? errorMessage : undefined;\n  const showEditIcon = !(\n    disabled ||\n    minimal ||\n    hideEditIcon ||\n    updating ||\n    isEditing\n  );\n  return (\n    <EditableTextWrapper\n      isEditing={isEditing}\n      minimal={!!minimal}\n      onClick={\n        editInteractionKind === EditInteractionKind.SINGLE ? edit : _.noop\n      }\n      onDoubleClick={\n        editInteractionKind === EditInteractionKind.DOUBLE ? edit : _.noop\n      }\n      useFullWidth={useFullWidth && isEditing ? true : false}\n    >\n      <ErrorTooltip\n        customClass={errorTooltipClass}\n        isOpen={!!error}\n        message={errorMessage as string}\n      >\n        <TextContainer\n          isValid={!error}\n          minimal={!!minimal}\n          underline={underline}\n        >\n          <BlueprintEditableText\n            className={className}\n            disabled={disabled || !isEditing}\n            isEditing={isEditing}\n            maxLength={maxLength}\n            maxLines={maxLines}\n            minLines={minLines}\n            multiline={multiline}\n            onCancel={onBlur}\n            onChange={onInputchange}\n            onConfirm={onChange}\n            placeholder={placeholder}\n            selectAllOnFocus\n            value={value}\n          />\n          {showEditIcon && (\n            <Icon\n              className=\"t--action-name-edit-icon\"\n              fillColor=\"#939090\"\n              name=\"edit\"\n              size={IconSize.XXL}\n            />\n          )}\n        </TextContainer>\n      </ErrorTooltip>\n    </EditableTextWrapper>\n  );\n}\n\nexport default EditableText;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { MenuItem } from \"design-system-old\";\nimport {\n  ADMIN_SETTINGS,\n  APPSMITH_DISPLAY_VERSION,\n  createMessage,\n  DOCUMENTATION,\n  WELCOME_TOUR,\n} from \"@appsmith/constants/messages\";\nimport { getIsFetchingApplications } from \"selectors/applicationSelectors\";\nimport { getOnboardingWorkspaces } from \"selectors/onboardingSelectors\";\nimport { getAppsmithConfigs } from \"@appsmith/configs\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { howMuchTimeBeforeText } from \"utils/helpers\";\nimport { onboardingCreateApplication } from \"actions/onboardingActions\";\nimport ProductUpdatesModal from \"pages/Applications/ProductUpdatesModal\";\nimport { Colors } from \"constants/Colors\";\nimport {\n  DropdownOnSelectActions,\n  getOnSelectAction,\n} from \"pages/common/CustomizedDropdown/dropdownHelpers\";\nimport { getCurrentUser } from \"selectors/usersSelectors\";\nimport {\n  getDefaultAdminSettingsPath,\n  showAdminSettings,\n} from \"@appsmith/utils/adminSettingsHelpers\";\nimport { getTenantPermissions } from \"@appsmith/selectors/tenantSelectors\";\n\nexport const Wrapper = styled.div`\n  padding-bottom: ${(props) => props.theme.spaces[3]}px;\n  background-color: ${Colors.WHITE};\n  width: 100%;\n  margin-top: auto;\n\n  & .ads-dialog-trigger {\n    margin-top: ${(props) => props.theme.spaces[1]}px;\n  }\n\n  & .ads-dialog-trigger > div {\n    position: initial;\n    width: 92%;\n    padding: ${(props) =>\n      `${props.theme.spaces[0]}px ${props.theme.spaces[6]}px`};\n  }\n`;\n\nexport const LeftPaneVersionData = styled.div`\n  display: flex;\n  justify-content: space-between;\n  color: ${Colors.MIRAGE_2};\n  font-size: 8px;\n  width: 92%;\n  margin-top: ${(props) => props.theme.spaces[3]}px;\n`;\n\nfunction LeftPaneBottomSection() {\n  const dispatch = useDispatch();\n  const onboardingWorkspaces = useSelector(getOnboardingWorkspaces);\n  const isFetchingApplications = useSelector(getIsFetchingApplications);\n  const { appVersion, cloudHosting } = getAppsmithConfigs();\n  const howMuchTimeBefore = howMuchTimeBeforeText(appVersion.releaseDate);\n  const user = useSelector(getCurrentUser);\n  const tenantPermissions = useSelector(getTenantPermissions);\n\n  return (\n    <Wrapper>\n      {showAdminSettings(user) && !isFetchingApplications && (\n        <MenuItem\n          className=\"admin-settings-menu-option\"\n          icon=\"setting\"\n          onSelect={() => {\n            getOnSelectAction(DropdownOnSelectActions.REDIRECT, {\n              path: getDefaultAdminSettingsPath({\n                isSuperUser: user?.isSuperUser,\n                tenantPermissions,\n              }),\n            });\n          }}\n          text={createMessage(ADMIN_SETTINGS)}\n        />\n      )}\n      <MenuItem\n        icon=\"discord\"\n        onSelect={() => {\n          window.open(\"https://discord.gg/rBTTVJp\", \"_blank\");\n        }}\n        text={\"Join our Discord\"}\n      />\n      <MenuItem\n        icon=\"book\"\n        onSelect={() => {\n          window.open(\"https://docs.appsmith.com/\", \"_blank\");\n        }}\n        text={createMessage(DOCUMENTATION)}\n      />\n\n      <MenuItem\n        containerClassName={\"t--welcome-tour\"}\n        icon=\"guide\"\n        onSelect={() => {\n          if (!isFetchingApplications && !!onboardingWorkspaces.length) {\n            AnalyticsUtil.logEvent(\"WELCOME_TOUR_CLICK\");\n            dispatch(onboardingCreateApplication());\n          }\n        }}\n        text={createMessage(WELCOME_TOUR)}\n      />\n\n      <ProductUpdatesModal />\n      <LeftPaneVersionData>\n        <span>\n          {createMessage(\n            APPSMITH_DISPLAY_VERSION,\n            appVersion.edition,\n            appVersion.id,\n            cloudHosting,\n          )}\n        </span>\n        {howMuchTimeBefore !== \"\" && (\n          <span>Released {howMuchTimeBefore} ago</span>\n        )}\n      </LeftPaneVersionData>\n    </Wrapper>\n  );\n}\n\nexport default LeftPaneBottomSection;\n","export * from \"ce/pages/Home/LeftPaneBottomSection\";\nimport { default as CE_LeftPaneBottomSection } from \"ce/pages/Home/LeftPaneBottomSection\";\nexport default CE_LeftPaneBottomSection;\n","import { Property } from \"entities/Action\";\n\nexport enum AuthType {\n  NONE = \"dbAuth\",\n  OAuth2 = \"oAuth2\",\n  basic = \"basic\",\n  apiKey = \"apiKey\",\n  bearerToken = \"bearerToken\",\n}\n\nexport enum SSLType {\n  DEFAULT = \"DEFAULT\",\n  SELF_SIGNED_CERTIFICATE = \"SELF_SIGNED_CERTIFICATE\",\n}\n\nexport enum ApiKeyAuthType {\n  QueryParams = \"queryParams\",\n  Header = \"header\",\n}\n\nexport enum GrantType {\n  ClientCredentials = \"client_credentials\",\n  AuthorizationCode = \"authorization_code\",\n}\n\nexport type Authentication =\n  | ClientCredentials\n  | AuthorizationCode\n  | Basic\n  | ApiKey\n  | BearerToken;\n\nexport interface Connection {\n  ssl: SSL;\n}\n\nexport interface SSL {\n  authType: SSLType;\n  certificateFile: Certificate;\n}\n\nexport interface Certificate {\n  name: string;\n  base64Content: string | ArrayBuffer | null;\n}\n\nexport interface ApiDatasourceForm {\n  datasourceId: string;\n  pluginId: string;\n  workspaceId: string;\n  isValid: boolean;\n  url: string;\n  headers?: Property[];\n  queryParameters?: Property[];\n  isSendSessionEnabled: boolean;\n  sessionSignatureKey: string;\n  authType: AuthType;\n  authentication?: Authentication;\n  connection?: Connection;\n}\n\nexport interface Oauth2Common {\n  authenticationType: AuthType.OAuth2;\n  accessTokenUrl: string;\n  clientId: string;\n  clientSecret: string;\n  headerPrefix: string;\n  scopeString: string;\n  isTokenHeader: boolean;\n  isAuthorizationHeader: boolean;\n  audience: string;\n  resource: string;\n  sendScopeWithRefreshToken: boolean;\n  refreshTokenClientCredentialsLocation: string;\n  useSelfSignedCert?: boolean;\n}\n\nexport interface ClientCredentials extends Oauth2Common {\n  grantType: GrantType.ClientCredentials;\n  customTokenParameters: Property[];\n}\n\nexport interface AuthorizationCode extends Oauth2Common {\n  grantType: GrantType.AuthorizationCode;\n  authorizationUrl: string;\n  customAuthenticationParameters: Property[];\n  isAuthorized: boolean;\n}\n\nexport interface Basic {\n  authenticationType: AuthType.basic;\n  username: string;\n  password: string;\n  secretExists?: Record<string, boolean>;\n}\n\nexport interface ApiKey {\n  authenticationType: AuthType.apiKey;\n  label: string;\n  headerPrefix: string;\n  value: string;\n  addTo: string;\n}\n\nexport interface BearerToken {\n  authenticationType: AuthType.bearerToken;\n  bearerToken: string;\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { Collapse, Icon } from \"@blueprintjs/core\";\nimport styled from \"styled-components\";\nimport { Icon as AdsIcon, IconName, IconSize } from \"design-system-old\";\nimport { Colors } from \"constants/Colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { getDatasourceCollapsibleState } from \"selectors/ui\";\nimport { setDatasourceCollapsible } from \"actions/datasourceActions\";\nimport isUndefined from \"lodash/isUndefined\";\n\nconst SectionLabel = styled.div`\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 24px;\n  letter-spacing: -0.17px;\n  color: #4e5d78;\n  display: flex;\n  .cs-icon {\n    margin-left: ${(props) => props.theme.spaces[2]}px;\n  }\n`;\n\nconst SectionContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  width: 240px;\n  cursor: pointer;\n  margin-bottom: 5;\n`;\n\nconst TopBorder = styled.div`\n  height: 1px;\n  background-color: ${Colors.ALTO};\n  margin-top: 24px;\n  margin-bottom: 24px;\n`;\n\ninterface ComponentProps {\n  children: any;\n  title: string;\n  defaultIsOpen?: boolean;\n  // header icon props of collapse header\n  headerIcon?: {\n    name: IconName;\n    color?: string;\n  };\n  showTopBorder?: boolean;\n  showSection?: boolean;\n}\n\ntype Props = ComponentProps;\n\nfunction Collapsible(props: Props) {\n  const {\n    children,\n    defaultIsOpen,\n    headerIcon,\n    showSection = true,\n    showTopBorder = true,\n    title,\n  } = props;\n  const dispatch = useDispatch();\n  const isOpen = useSelector((state: AppState) =>\n    getDatasourceCollapsibleState(state, title),\n  );\n\n  const setIsOpen = useCallback((open) => {\n    dispatch(setDatasourceCollapsible(title, open));\n  }, []);\n\n  useEffect(() => {\n    // We set the default value only when there is no state stored yet for the same\n    if (defaultIsOpen && isUndefined(isOpen)) {\n      setIsOpen(defaultIsOpen);\n    }\n  }, [defaultIsOpen, isOpen]);\n\n  return (\n    <section data-cy={`section-${title}`} data-replay-id={`section-${title}`}>\n      {showTopBorder && <TopBorder className=\"t--collapse-top-border\" />}\n      {showSection && (\n        <SectionContainer\n          className=\"t--collapse-section-container\"\n          onClick={() => setIsOpen(!isOpen)}\n        >\n          <SectionLabel>\n            {title}\n            {headerIcon && (\n              <AdsIcon\n                fillColor={headerIcon.color}\n                name={headerIcon.name}\n                size={IconSize.MEDIUM}\n              />\n            )}\n          </SectionLabel>\n          <Icon\n            icon={isOpen ? \"chevron-up\" : \"chevron-down\"}\n            iconSize={16}\n            style={{ color: \"#2E3D49\" }}\n          />\n        </SectionContainer>\n      )}\n\n      <Collapse isOpen={isOpen} keepChildrenMounted>\n        {children}\n      </Collapse>\n    </section>\n  );\n}\n\nexport default Collapsible;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { isNil } from \"lodash\";\nimport { getDatasource, getPlugin } from \"selectors/entitiesSelector\";\nimport { Colors } from \"constants/Colors\";\nimport { HeaderIcons } from \"icons/HeaderIcons\";\nimport styled from \"styled-components\";\nimport RenderDatasourceInformation from \"./DatasourceSection\";\nimport NewActionButton from \"./NewActionButton\";\n\nimport { hasCreateDatasourceActionPermission } from \"@appsmith/utils/permissionHelpers\";\nimport { getPagePermissions } from \"selectors/editorSelectors\";\n\nconst ConnectedText = styled.div`\n  color: ${Colors.OXFORD_BLUE};\n  font-size: 17px;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n`;\n\nconst Header = styled.div`\n  flex-direction: row;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  border-bottom: 1px solid #d0d7dd;\n  padding-top: 24px;\n  padding-bottom: 24px;\n`;\n\nfunction Connected({\n  errorComponent,\n  showDatasourceSavedText = true,\n}: {\n  errorComponent?: JSX.Element | null;\n  showDatasourceSavedText?: boolean;\n}) {\n  const params = useParams<{ datasourceId: string }>();\n\n  const datasource = useSelector((state: AppState) =>\n    getDatasource(state, params.datasourceId),\n  );\n\n  const datasourceFormConfigs = useSelector(\n    (state: AppState) => state.entities.plugins.formConfigs,\n  );\n\n  const plugin = useSelector((state: AppState) =>\n    getPlugin(state, datasource?.pluginId ?? \"\"),\n  );\n\n  const datasourcePermissions = datasource?.userPermissions || [];\n\n  const pagePermissions = useSelector(getPagePermissions);\n\n  const canCreateDatasourceActions = hasCreateDatasourceActionPermission([\n    ...datasourcePermissions,\n    ...pagePermissions,\n  ]);\n\n  const currentFormConfig: Array<any> =\n    datasourceFormConfigs[datasource?.pluginId ?? \"\"];\n\n  return (\n    <Wrapper>\n      {showDatasourceSavedText && (\n        <Header>\n          <ConnectedText>\n            <HeaderIcons.SAVE_SUCCESS\n              color={Colors.GREEN}\n              height={30}\n              width={30}\n            />\n            <div style={{ marginLeft: \"12px\" }}>Datasource Saved</div>\n          </ConnectedText>\n          <NewActionButton\n            datasource={datasource}\n            disabled={!canCreateDatasourceActions}\n            eventFrom=\"datasource-pane\"\n            plugin={plugin}\n          />\n        </Header>\n      )}\n      {errorComponent}\n      <div style={{ marginTop: showDatasourceSavedText ? \"30px\" : \"\" }}>\n        {!isNil(currentFormConfig) && !isNil(datasource) ? (\n          <RenderDatasourceInformation\n            config={currentFormConfig[0]}\n            datasource={datasource}\n          />\n        ) : (\n          undefined\n        )}\n      </div>\n    </Wrapper>\n  );\n}\n\nexport default Connected;\n","import { Datasource } from \"entities/Datasource\";\nimport React from \"react\";\nimport { map, get, isArray } from \"lodash\";\nimport { Colors } from \"constants/Colors\";\nimport styled from \"styled-components\";\nimport { isHidden, isKVArray } from \"components/formControls/utils\";\nimport log from \"loglevel\";\n\nconst Key = styled.div`\n  color: ${Colors.DOVE_GRAY};\n  font-size: 14px;\n  display: inline-block;\n`;\n\nconst Value = styled.div`\n  font-size: 14px;\n  font-weight: 500;\n  display: inline-block;\n  margin-left: 5px;\n`;\n\nconst ValueWrapper = styled.div`\n  display: inline-block;\n  &:not(:first-child) {\n    margin-left: 10px;\n  }\n`;\n\nconst FieldWrapper = styled.div`\n  &:not(:first-child) {\n    margin-top: 9px;\n  }\n`;\n\nexport default class RenderDatasourceInformation extends React.Component<{\n  config: any;\n  datasource: Datasource;\n}> {\n  renderKVArray = (children: Array<any>) => {\n    try {\n      // setup config for each child\n      const firstConfigProperty = children[0].configProperty;\n      const configPropertyInfo = firstConfigProperty.split(\"[*].\");\n      const values = get(this.props.datasource, configPropertyInfo[0], null);\n      const renderValues: Array<Array<{\n        key: string;\n        value: any;\n        label: string;\n      }>> = children.reduce(\n        (\n          acc,\n          { configProperty, label }: { configProperty: string; label: string },\n        ) => {\n          const configPropertyKey = configProperty.split(\"[*].\")[1];\n          values.forEach((value: any, index: number) => {\n            if (!acc[index]) {\n              acc[index] = [];\n            }\n\n            acc[index].push({\n              key: configPropertyKey,\n              label,\n              value: value[configPropertyKey],\n            });\n          });\n          return acc;\n        },\n        [],\n      );\n      return renderValues.map((renderValue, index: number) => (\n        <FieldWrapper key={`${firstConfigProperty}.${index}`}>\n          {renderValue.map(({ key, label, value }) => (\n            <ValueWrapper key={`${firstConfigProperty}.${key}.${index}`}>\n              <Key>{label}: </Key>\n              <Value>{value}</Value>\n            </ValueWrapper>\n          ))}\n        </FieldWrapper>\n      ));\n    } catch (e) {\n      return;\n    }\n  };\n\n  renderDatasourceSection(section: any) {\n    const { datasource } = this.props;\n    return (\n      <React.Fragment key={datasource.id}>\n        {map(section.children, (section) => {\n          if (isHidden(datasource, section.hidden)) return null;\n          if (\"children\" in section) {\n            if (isKVArray(section.children)) {\n              return this.renderKVArray(section.children);\n            }\n\n            return this.renderDatasourceSection(section);\n          } else {\n            try {\n              const { configProperty, controlType, label } = section;\n              const reactKey = datasource.id + \"_\" + label;\n\n              if (controlType === \"FIXED_KEY_INPUT\") {\n                return (\n                  <FieldWrapper key={reactKey}>\n                    <Key>{configProperty.key}: </Key>{\" \"}\n                    <Value>{configProperty.value}</Value>\n                  </FieldWrapper>\n                );\n              }\n\n              let value = get(datasource, configProperty);\n\n              if (controlType === \"DROP_DOWN\") {\n                if (Array.isArray(section.options)) {\n                  const option = section.options.find(\n                    (el: any) => el.value === value,\n                  );\n                  if (option && option.label) {\n                    value = option.label;\n                  }\n                }\n              }\n\n              if (!value || (isArray(value) && value.length < 1)) {\n                return;\n              }\n\n              if (isArray(value)) {\n                return (\n                  <FieldWrapper>\n                    <Key>{label}: </Key>\n                    {value.map(\n                      (\n                        { key, value }: { key: string; value: any },\n                        index: number,\n                      ) => (\n                        <div key={`${reactKey}.${index}`}>\n                          <div style={{ display: \"inline-block\" }}>\n                            <Key>Key: </Key>\n                            <Value>{key}</Value>\n                          </div>\n                          <ValueWrapper>\n                            <Key>Value: </Key>\n                            <Value>{value}</Value>\n                          </ValueWrapper>\n                        </div>\n                      ),\n                    )}\n                  </FieldWrapper>\n                );\n              }\n\n              return (\n                <FieldWrapper key={reactKey}>\n                  <Key>{label}: </Key> <Value>{value}</Value>\n                </FieldWrapper>\n              );\n            } catch (e) {\n              log.error(e);\n            }\n          }\n        })}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return this.renderDatasourceSection(this.props.config);\n  }\n}\n","import styled from \"styled-components\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport EditableText, {\n  EditInteractionKind,\n} from \"components/editorComponents/EditableText\";\n\nimport { AppState } from \"@appsmith/reducers\";\nimport { getDatasource, getDatasources } from \"selectors/entitiesSelector\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Datasource } from \"entities/Datasource\";\nimport { isNameValid } from \"utils/helpers\";\nimport {\n  saveDatasourceName,\n  updateDatasourceName,\n} from \"actions/datasourceActions\";\nimport { Spinner } from \"@blueprintjs/core\";\nimport { TEMP_DATASOURCE_ID } from \"constants/Datasource\";\n\nconst Wrapper = styled.div`\n  margin-left: 10px;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 24px;\n  display: flex;\n`;\n\ninterface ComponentProps {\n  focusOnMount: boolean;\n  disabled?: boolean;\n}\n\ntype FormTitleProps = ComponentProps;\n\nfunction FormTitle(props: FormTitleProps) {\n  const params = useParams<{ datasourceId: string }>();\n  const currentDatasource:\n    | Datasource\n    | undefined = useSelector((state: AppState) =>\n    getDatasource(state, params.datasourceId),\n  );\n  const datasources: Datasource[] = useSelector(getDatasources);\n  const [forceUpdate, setForceUpdate] = useState(false);\n  const dispatch = useDispatch();\n  const saveStatus: {\n    isSaving: boolean;\n    error: boolean;\n  } = useSelector((state: AppState) => {\n    const id = currentDatasource ? currentDatasource.id : \"\";\n\n    return {\n      isSaving: state.ui.datasourceName.isSaving[id],\n      error: state.ui.datasourceName.errors[id],\n    };\n  });\n\n  const hasNameConflict = React.useCallback(\n    (name: string) => {\n      const datasourcesNames: Record<string, any> = {};\n      datasources\n        // in case of REST API and Authenticated GraphQL API, when user clicks on save as datasource\n        // we first need to update the action and then redirect to action page,\n        // for that reason we need temporary datasource data to exist in store till action is updated,\n        // if temp datasource data is there, then duplicate name issue occurs\n        // hence added extra condition for REST and GraphQL.\n        .filter(\n          (datasource) =>\n            datasource.id !== currentDatasource?.id &&\n            !(\n              datasource.name === currentDatasource?.name &&\n              [\"REST API\", \"Authenticated GraphQL API\"].includes(\n                (datasource as any).pluginName,\n              ) &&\n              datasource.pluginId === currentDatasource?.pluginId\n            ),\n        )\n        .map((datasource) => {\n          datasourcesNames[datasource.name] = datasource;\n        });\n\n      return !isNameValid(name, { ...datasourcesNames });\n    },\n    [datasources, currentDatasource],\n  );\n\n  const isInvalidDatasourceName = React.useCallback(\n    (name: string): string | boolean => {\n      if (!name || name.trim().length === 0) {\n        return \"Please enter a valid name\";\n      } else if (hasNameConflict(name)) {\n        return `${name} is already being used or is a restricted keyword.`;\n      }\n      return false;\n    },\n    [hasNameConflict],\n  );\n\n  const handleDatasourceNameChange = useCallback(\n    (name: string) => {\n      // Check if the datasource name equals \"Untitled Datasource ABC\" if no , use the name passed.\n      const datsourceName = name || \"Untitled Datasource ABC\";\n      if (\n        !isInvalidDatasourceName(name) &&\n        currentDatasource &&\n        currentDatasource.name !== name\n      ) {\n        // if the currentDatasource id equals the temp datasource id,\n        // it means that you are about to create a new datasource hence\n        // saveDatasourceName would be dispatch\n        if (currentDatasource.id === TEMP_DATASOURCE_ID) {\n          dispatch(\n            saveDatasourceName({\n              id: currentDatasource?.id ?? \"\",\n              name: datsourceName,\n            }),\n          );\n        } else {\n          dispatch(\n            updateDatasourceName({\n              id: currentDatasource?.id ?? \"\",\n              name: datsourceName,\n            }),\n          );\n        }\n      }\n    },\n    [dispatch, isInvalidDatasourceName, currentDatasource],\n  );\n\n  useEffect(() => {\n    if (saveStatus.isSaving === false && saveStatus.error === true) {\n      setForceUpdate(true);\n    } else if (saveStatus.isSaving === true) {\n      setForceUpdate(false);\n    }\n  }, [saveStatus.isSaving, saveStatus.error]);\n\n  return (\n    <Wrapper>\n      <EditableText\n        className=\"t--edit-datasource-name\"\n        defaultValue={currentDatasource ? currentDatasource.name : \"\"}\n        disabled={props.disabled}\n        editInteractionKind={EditInteractionKind.SINGLE}\n        forceDefault={forceUpdate}\n        isEditingDefault={props.focusOnMount}\n        isInvalid={isInvalidDatasourceName}\n        maxLength={30}\n        onTextChanged={handleDatasourceNameChange}\n        placeholder=\"Datasource Name\"\n        type=\"text\"\n        underline\n        updating={saveStatus.isSaving}\n      />\n      {saveStatus.isSaving && <Spinner size={16} />}\n    </Wrapper>\n  );\n}\n\nexport default FormTitle;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport _ from \"lodash\";\nimport FormControl from \"../FormControl\";\nimport Collapsible from \"./Collapsible\";\nimport { ControlProps } from \"components/formControls/BaseControl\";\nimport { Datasource } from \"entities/Datasource\";\nimport { isHidden, isKVArray } from \"components/formControls/utils\";\nimport log from \"loglevel\";\nimport CloseEditor from \"components/editorComponents/CloseEditor\";\nimport { getType, Types } from \"utils/TypeHelpers\";\nimport { Colors } from \"constants/Colors\";\nimport { Button } from \"design-system-old\";\nimport FeatureFlags from \"entities/FeatureFlags\";\n\nexport const PluginImageWrapper = styled.div`\n  height: 34px;\n  width: 34px;\n  padding: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${Colors.GREY_200};\n  border-radius: 100%;\n  margin-right: 8px;\n  flex-shrink: 0;\n  img {\n    height: 100%;\n    width: auto;\n  }\n`;\n\nexport const PluginImage = (props: any) => {\n  return (\n    <PluginImageWrapper>\n      <img {...props} />\n    </PluginImageWrapper>\n  );\n};\n\nexport const FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n`;\n\nexport const FormContainerBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  height: 100%;\n  flex-grow: 1;\n  overflow-y: auto;\n  padding: 20px;\n`;\n\nexport const FormTitleContainer = styled.div`\n  flex-direction: row;\n  display: flex;\n  align-items: center;\n`;\n\nexport const Header = styled.div`\n  flex-direction: row;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${Colors.ALTO};\n  padding-bottom: 24px;\n  //margin-top: 16px;\n`;\n\nexport const ActionWrapper = styled.div`\n  display: flex;\n`;\n\nexport const ActionButton = styled(Button)`\n  &&& {\n    width: auto;\n    min-width: 74px;\n    margin-right: 9px;\n    min-height: 32px;\n\n    & > span {\n      max-width: 100%;\n    }\n  }\n`;\n\nexport const EditDatasourceButton = styled(Button)`\n  padding: 10px 20px;\n  &&&& {\n    height: 36px;\n    max-width: 160px;\n    border: 1px solid ${Colors.HIT_GRAY};\n    width: auto;\n  }\n`;\n\nexport interface JSONtoFormProps {\n  formData: Datasource;\n  formName: string;\n  formConfig: any[];\n  datasourceId: string;\n  isReconnectingModalOpen?: boolean;\n  featureFlags?: FeatureFlags;\n}\n\nexport class JSONtoForm<\n  P = unknown,\n  S = unknown,\n  SS = any\n> extends React.Component<JSONtoFormProps & P, S, SS> {\n  requiredFields: Record<string, any> = {};\n  configDetails: Record<string, any> = {};\n\n  componentDidMount() {\n    this.requiredFields = {};\n    this.configDetails = {};\n  }\n\n  componentDidUpdate(prevProps: JSONtoFormProps) {\n    if (prevProps.datasourceId !== this.props.datasourceId) {\n      this.requiredFields = {};\n      this.configDetails = {};\n    }\n  }\n\n  validate = () => {\n    const errors = {} as any;\n    const requiredFields = Object.keys(this.requiredFields);\n    const values = this.props.formData;\n\n    requiredFields.forEach((fieldConfigProperty) => {\n      const fieldConfig = this.requiredFields[fieldConfigProperty];\n      if (fieldConfig.controlType === \"KEYVALUE_ARRAY\") {\n        const configProperty = fieldConfig.configProperty.split(\"[*].\");\n        const arrayValues = _.get(values, configProperty[0], []);\n        const keyValueArrayErrors: Record<string, string>[] = [];\n\n        arrayValues.forEach((value: any, index: number) => {\n          const objectKeys = Object.keys(value);\n          const keyValueErrors: Record<string, string> = {};\n\n          if (!value[objectKeys[0]]) {\n            keyValueErrors[objectKeys[0]] = \"This field is required\";\n            keyValueArrayErrors[index] = keyValueErrors;\n          }\n          if (!value[objectKeys[1]]) {\n            keyValueErrors[objectKeys[1]] = \"This field is required\";\n            keyValueArrayErrors[index] = keyValueErrors;\n          }\n        });\n\n        if (keyValueArrayErrors.length) {\n          _.set(errors, configProperty[0], keyValueArrayErrors);\n        }\n      } else {\n        const value = _.get(values, fieldConfigProperty);\n\n        if (_.isNil(value)) {\n          _.set(errors, fieldConfigProperty, \"This field is required\");\n        }\n      }\n    });\n\n    return !_.isEmpty(errors);\n  };\n\n  normalizeValues = () => {\n    let { formData } = this.props;\n\n    const checked: Record<string, any> = {};\n    const configProperties = Object.keys(this.configDetails);\n\n    for (const configProperty of configProperties) {\n      const controlType = this.configDetails[configProperty];\n\n      if (controlType === \"KEYVALUE_ARRAY\") {\n        const properties = configProperty.split(\"[*].\");\n\n        if (checked[properties[0]]) continue;\n\n        checked[properties[0]] = 1;\n        const values = _.get(formData, properties[0], []);\n        const newValues: ({ [s: string]: unknown } | ArrayLike<unknown>)[] = [];\n\n        values.forEach(\n          (object: { [s: string]: unknown } | ArrayLike<unknown>) => {\n            const isEmpty = Object.values(object).every((x) => x === \"\");\n\n            if (!isEmpty) {\n              newValues.push(object);\n            }\n          },\n        );\n\n        if (newValues.length) {\n          formData = _.set(formData, properties[0], newValues);\n        } else {\n          formData = _.set(formData, properties[0], []);\n        }\n      }\n    }\n\n    return formData;\n  };\n\n  getTrimmedData = (formData: any) => {\n    const dataType = getType(formData);\n    const isArrayorObject = (type: ReturnType<typeof getType>) =>\n      type === Types.ARRAY || type === Types.OBJECT;\n\n    if (isArrayorObject(dataType)) {\n      Object.keys(formData).map((key) => {\n        const valueType = getType(formData[key]);\n        if (isArrayorObject(valueType)) {\n          this.getTrimmedData(formData[key]);\n        } else if (valueType === Types.STRING) {\n          _.set(formData, key, formData[key].trim());\n        }\n      });\n    }\n    return formData;\n  };\n\n  renderForm = (formContent: any) => {\n    return (\n      <FormContainer className=\"t--json-to-form-wrapper\">\n        <CloseEditor />\n        <FormContainerBody className=\"t--json-to-form-body\">\n          {formContent}\n        </FormContainerBody>\n      </FormContainer>\n    );\n  };\n\n  renderMainSection = (section: any, index: number) => {\n    // hides features/configs that are hidden behind feature flag\n    // TODO: remove hidden config property as well as this param,\n    // when feature flag is removed\n    if (\n      isHidden(\n        this.props.formData,\n        section.hidden,\n        this.props?.featureFlags?.LIMITING_GOOGLE_SHEET_ACCESS,\n      )\n    )\n      return null;\n    return (\n      <Collapsible\n        defaultIsOpen={index === 0 || section?.isDefaultOpen}\n        key={section.sectionName}\n        showSection={index !== 0 && !section?.isDefaultOpen}\n        showTopBorder={index !== 0 && !section?.isDefaultOpen}\n        title={section.sectionName}\n      >\n        {this.renderEachConfig(section)}\n      </Collapsible>\n    );\n  };\n\n  renderSingleConfig = (\n    config: ControlProps,\n    multipleConfig?: ControlProps[],\n  ) => {\n    multipleConfig = multipleConfig || [];\n\n    try {\n      this.setupConfig(config);\n      return (\n        <div key={config.configProperty} style={{ marginTop: \"16px\" }}>\n          <FormControl\n            config={config}\n            formName={this.props.formName}\n            multipleConfig={multipleConfig}\n          />\n        </div>\n      );\n    } catch (e) {\n      log.error(e);\n    }\n  };\n\n  setupConfig = (config: ControlProps) => {\n    const { configProperty, controlType, isRequired } = config;\n    this.configDetails[configProperty] = controlType;\n\n    if (isRequired) {\n      this.requiredFields[configProperty] = config;\n    }\n  };\n\n  renderKVArray = (children: Array<ControlProps>) => {\n    try {\n      // setup config for each child\n      children.forEach((c) => this.setupConfig(c));\n      // We pass last child for legacy reasons, to keep the logic here exactly same as before.\n      return this.renderSingleConfig(children[children.length - 1], children);\n    } catch (e) {\n      log.error(e);\n    }\n  };\n\n  renderEachConfig = (section: any) => {\n    return (\n      <div key={section.sectionName}>\n        {_.map(section.children, (propertyControlOrSection: ControlProps) => {\n          // If the section is hidden, skip rendering\n          // hides features/configs that are hidden behind feature flag\n          // TODO: remove hidden config property as well as this param,\n          // when feature flag is removed\n          if (\n            isHidden(\n              this.props.formData,\n              section.hidden,\n              this.props?.featureFlags?.LIMITING_GOOGLE_SHEET_ACCESS,\n            )\n          )\n            return null;\n          if (\"children\" in propertyControlOrSection) {\n            const { children } = propertyControlOrSection as any;\n            if (isKVArray(children)) {\n              return this.renderKVArray(children);\n            }\n            return this.renderEachConfig(propertyControlOrSection);\n          } else {\n            return this.renderSingleConfig(propertyControlOrSection);\n          }\n        })}\n      </div>\n    );\n  };\n}\n","import React, { useCallback, useState } from \"react\";\nimport { PluginType } from \"entities/Action\";\nimport styled from \"styled-components\";\nimport {\n  Button,\n  Classes,\n  IconPositions,\n  Toaster,\n  Variant,\n} from \"design-system-old\";\nimport {\n  createMessage,\n  ERROR_ADD_API_INVALID_URL,\n  NEW_API_BUTTON_TEXT,\n  NEW_QUERY_BUTTON_TEXT,\n} from \"@appsmith/constants/messages\";\nimport { createNewQueryAction } from \"actions/apiPaneActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { getCurrentPageId } from \"selectors/editorSelectors\";\nimport { Datasource } from \"entities/Datasource\";\nimport { Plugin } from \"api/PluginApi\";\nimport { EventLocation } from \"utils/AnalyticsUtil\";\nimport { noop } from \"utils/AppsmithUtils\";\n\nconst ActionButton = styled(Button)`\n  padding: 10px 10px;\n  font-size: 12px;\n  &&&& {\n    height: 36px;\n    width: 136px;\n  }\n  svg {\n    width: 14px;\n    height: 14px;\n  }\n  .${Classes.ICON} {\n    svg {\n      width: 16px;\n      height: 16px;\n    }\n  }\n`;\n\ntype NewActionButtonProps = {\n  datasource?: Datasource;\n  disabled?: boolean;\n  packageName?: string;\n  isLoading?: boolean;\n  eventFrom?: string; // this is to track from where the new action is being generated\n  plugin?: Plugin;\n  style?: any;\n};\nfunction NewActionButton(props: NewActionButtonProps) {\n  const { datasource, disabled, plugin, style = {} } = props;\n  const pluginType = plugin?.type;\n  const [isSelected, setIsSelected] = useState(false);\n\n  const dispatch = useDispatch();\n  const actions = useSelector((state: AppState) => state.entities.actions);\n  const currentPageId = useSelector(getCurrentPageId);\n\n  const createQueryAction = useCallback(\n    (e) => {\n      e?.stopPropagation();\n      if (\n        pluginType === PluginType.API &&\n        (!datasource ||\n          !datasource.datasourceConfiguration ||\n          !datasource.datasourceConfiguration.url)\n      ) {\n        Toaster.show({\n          text: ERROR_ADD_API_INVALID_URL(),\n          variant: Variant.danger,\n        });\n        return;\n      }\n\n      if (currentPageId) {\n        setIsSelected(true);\n        if (datasource) {\n          dispatch(\n            createNewQueryAction(\n              currentPageId,\n              props.eventFrom as EventLocation,\n              datasource?.id,\n            ),\n          );\n        }\n      }\n    },\n    [dispatch, actions, currentPageId, datasource, pluginType],\n  );\n\n  return (\n    <ActionButton\n      className=\"t--create-query\"\n      disabled={!!disabled}\n      icon=\"plus\"\n      iconPosition={IconPositions.left}\n      isLoading={isSelected || props.isLoading}\n      onClick={disabled ? noop : createQueryAction}\n      style={style}\n      tag=\"button\"\n      text={\n        pluginType === PluginType.DB || pluginType === PluginType.SAAS\n          ? createMessage(NEW_QUERY_BUTTON_TEXT)\n          : createMessage(NEW_API_BUTTON_TEXT)\n      }\n    />\n  );\n}\n\nexport default NewActionButton;\n","import React from \"react\";\nimport {\n  createMessage,\n  DELETE_CONFIRMATION_MODAL_TITLE,\n  DISCARD_POPUP_DONT_SAVE_BUTTON_TEXT,\n  SAVE_OR_DISCARD_DATASOURCE_WARNING,\n} from \"@appsmith/constants/messages\";\nimport {\n  Button,\n  Category,\n  DialogComponent as Dialog,\n  Size,\n} from \"design-system-old\";\nimport { TEMP_DATASOURCE_ID } from \"constants/Datasource\";\nimport { hasManageDatasourcePermission } from \"@appsmith/utils/permissionHelpers\";\n\ninterface SaveOrDiscardModalProps {\n  isOpen: boolean;\n  onDiscard(): void;\n  onSave?(): void;\n  onClose(): void;\n  datasourceId: string;\n  datasourcePermissions: string[];\n  saveButtonText: string;\n}\n\nfunction SaveOrDiscardDatasourceModal(props: SaveOrDiscardModalProps) {\n  const {\n    datasourceId,\n    datasourcePermissions,\n    isOpen,\n    onClose,\n    onDiscard,\n    onSave,\n    saveButtonText,\n  } = props;\n\n  const createMode = datasourceId === TEMP_DATASOURCE_ID;\n  const canManageDatasources = hasManageDatasourcePermission(\n    datasourcePermissions,\n  );\n  const disableSaveButton = !createMode && !canManageDatasources;\n\n  return (\n    <Dialog\n      canOutsideClickClose\n      isOpen={isOpen}\n      onClose={onClose}\n      title={createMessage(DELETE_CONFIRMATION_MODAL_TITLE)}\n      width={\"596px\"}\n    >\n      <div className=\"pb-8 space-y-3 \">\n        <p>{createMessage(SAVE_OR_DISCARD_DATASOURCE_WARNING)}</p>\n      </div>\n\n      <div className=\"\">\n        <div className=\"flex items-center justify-end space-x-3\">\n          <Button\n            category={Category.secondary}\n            className=\"t--datasource-modal-do-not-save\"\n            onClick={onDiscard}\n            size={Size.medium}\n            text={createMessage(DISCARD_POPUP_DONT_SAVE_BUTTON_TEXT)}\n          />\n          <Button\n            category={Category.primary}\n            className=\"t--datasource-modal-save\"\n            disabled={disableSaveButton}\n            onClick={!disableSaveButton && onSave}\n            size={Size.medium}\n            text={saveButtonText}\n          />\n        </div>\n      </div>\n    </Dialog>\n  );\n}\n\nexport default SaveOrDiscardDatasourceModal;\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { Icon } from \"@blueprintjs/core\";\ninterface CollapsibleHelpProps {\n  children?: ReactNode;\n}\n\nconst HelpIcon = styled(Icon)`\n  margin-right: 14.5px;\n  margin-left: 4px;\n  height: 100%;\n  background-color: #ef7541;\n  border: 2px solid rgba(239, 123, 99);\n  border-radius: 50%;\n`;\n\nconst Container = styled.div`\n  background-color: rgba(239, 123, 99, 0.15);\n  padding: 10px 10px;\n  width: 100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n\n  margin-top: 18px;\n  margin-bottom: 19px;\n  margin-left: 6px;\n  width: 89%;\n`;\n\nconst LeftBar = styled.div`\n  width: 2px;\n  background-color: #ef7541;\n  position: absolute;\n  left: 0;\n  height: 100%;\n`;\n\nexport default function CollapsibleHelp(props: CollapsibleHelpProps) {\n  //   const [isOpen, setIsOpen] = useState(false);\n  return (\n    <Container>\n      <LeftBar />\n      <HelpIcon color={\"#FDEBE8\"} icon=\"help\" />\n      <div>{props.children}</div>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport _ from \"lodash\";\nimport { DATASOURCE_DB_FORM } from \"@appsmith/constants/forms\";\nimport { Icon } from \"@blueprintjs/core\";\nimport FormTitle from \"./FormTitle\";\nimport { Callout, Category, Variant } from \"design-system-old\";\nimport CollapsibleHelp from \"components/designSystems/appsmith/help/CollapsibleHelp\";\nimport Connected from \"./Connected\";\nimport { Datasource } from \"entities/Datasource\";\nimport { reduxForm, InjectedFormProps } from \"redux-form\";\nimport { APPSMITH_IP_ADDRESSES } from \"constants/DatasourceEditorConstants\";\nimport { getAppsmithConfigs } from \"@appsmith/configs\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { convertArrayToSentence } from \"utils/helpers\";\nimport { PluginType } from \"entities/Action\";\nimport { AppState } from \"@appsmith/reducers\";\nimport {\n  EditDatasourceButton,\n  FormTitleContainer,\n  Header,\n  JSONtoForm,\n  JSONtoFormProps,\n  PluginImage,\n} from \"./JSONtoForm\";\nimport DatasourceAuth from \"pages/common/datasourceAuth\";\nimport { getDatasourceFormButtonConfig } from \"selectors/entitiesSelector\";\nimport { hasManageDatasourcePermission } from \"@appsmith/utils/permissionHelpers\";\nimport { TEMP_DATASOURCE_ID } from \"constants/Datasource\";\n\nconst { cloudHosting } = getAppsmithConfigs();\n\ninterface DatasourceDBEditorProps extends JSONtoFormProps {\n  setDatasourceViewMode: (viewMode: boolean) => void;\n  openOmnibarReadMore: (text: string) => void;\n  datasourceId: string;\n  applicationId: string;\n  pageId: string;\n  isNewDatasource: boolean;\n  pluginImage: string;\n  viewMode: boolean;\n  pluginType: string;\n  messages?: Array<string>;\n  datasource: Datasource;\n  datasourceButtonConfiguration: string[] | undefined;\n  hiddenHeader?: boolean;\n  canManageDatasource?: boolean;\n  datasourceName?: string;\n  isDatasourceBeingSavedFromPopup: boolean;\n  isFormDirty: boolean;\n  datasourceDeleteTrigger: () => void;\n}\n\ntype Props = DatasourceDBEditorProps &\n  InjectedFormProps<Datasource, DatasourceDBEditorProps>;\n\nconst StyledOpenDocsIcon = styled(Icon)`\n  svg {\n    width: 12px;\n    height: 18px;\n  }\n`;\n\nconst CollapsibleWrapper = styled.div`\n  width: max-content;\n`;\n\nclass DatasourceDBEditor extends JSONtoForm<Props> {\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.datasourceId !== this.props.datasourceId) {\n      super.componentDidUpdate(prevProps);\n    }\n  }\n  // returns normalized and trimmed datasource form data\n  getSanitizedData = () => {\n    return this.getTrimmedData({\n      ...this.normalizeValues(),\n      name: this.props.datasourceName,\n    });\n  };\n\n  openOmnibarReadMore = () => {\n    const { openOmnibarReadMore } = this.props;\n    openOmnibarReadMore(\"connect to databases\");\n    AnalyticsUtil.logEvent(\"OPEN_OMNIBAR\", { source: \"READ_MORE_DATASOURCE\" });\n  };\n\n  render() {\n    const { formConfig, viewMode } = this.props;\n\n    // make sure this redux form has been initialized before rendering anything.\n    // the initialized prop below comes from redux-form.\n    // The viewMode condition is added to allow the conditons only run on the editMode\n    if (!this.props.initialized && !viewMode) {\n      return null;\n    }\n\n    const content = this.renderDataSourceConfigForm(formConfig);\n    return this.renderForm(content);\n  }\n\n  renderDataSourceConfigForm = (sections: any) => {\n    const {\n      canManageDatasource,\n      datasource,\n      datasourceButtonConfiguration,\n      datasourceDeleteTrigger,\n      datasourceId,\n      formData,\n      messages,\n      pluginType,\n      viewMode,\n    } = this.props;\n\n    const createFlow = datasourceId === TEMP_DATASOURCE_ID;\n\n    return (\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n        }}\n      >\n        {!this.props.hiddenHeader && (\n          <Header>\n            <FormTitleContainer>\n              <PluginImage alt=\"Datasource\" src={this.props.pluginImage} />\n              <FormTitle\n                disabled={!createFlow && !canManageDatasource}\n                focusOnMount={this.props.isNewDatasource}\n              />\n            </FormTitleContainer>\n            {viewMode && (\n              <EditDatasourceButton\n                category={Category.secondary}\n                className=\"t--edit-datasource\"\n                onClick={() => {\n                  this.props.setDatasourceViewMode(false);\n                }}\n                text=\"EDIT\"\n              />\n            )}\n          </Header>\n        )}\n        {messages &&\n          messages.map((msg, i) => (\n            <Callout\n              addMarginTop\n              fill\n              key={i}\n              text={msg}\n              variant={Variant.warning}\n            />\n          ))}\n        {!this.props.hiddenHeader &&\n          cloudHosting &&\n          pluginType === PluginType.DB &&\n          !viewMode && (\n            <CollapsibleWrapper>\n              <CollapsibleHelp>\n                <span>{`Whitelist the IP ${convertArrayToSentence(\n                  APPSMITH_IP_ADDRESSES,\n                )}  on your database instance to connect to it. `}</span>\n                <a onClick={this.openOmnibarReadMore}>\n                  {\"Learn more \"}\n                  <StyledOpenDocsIcon icon=\"document-open\" />\n                </a>\n              </CollapsibleHelp>\n            </CollapsibleWrapper>\n          )}\n        {(!viewMode || datasourceId === TEMP_DATASOURCE_ID) && (\n          <>\n            {!_.isNil(sections)\n              ? _.map(sections, this.renderMainSection)\n              : undefined}\n            {\"\"}\n          </>\n        )}\n        {viewMode && <Connected />}\n        {/* Render datasource form call-to-actions */}\n        {datasource && (\n          <DatasourceAuth\n            datasource={datasource}\n            datasourceButtonConfiguration={datasourceButtonConfiguration}\n            datasourceDeleteTrigger={datasourceDeleteTrigger}\n            formData={formData}\n            getSanitizedFormData={_.memoize(this.getSanitizedData)}\n            isFormDirty={this.props.isFormDirty}\n            isInvalid={this.validate()}\n            shouldRender={!viewMode}\n            triggerSave={this.props.isDatasourceBeingSavedFromPopup}\n          />\n        )}\n      </form>\n    );\n  };\n}\n\nconst mapStateToProps = (state: AppState, props: any) => {\n  const datasource = state.entities.datasources.list.find(\n    (e) => e.id === props.datasourceId,\n  ) as Datasource;\n\n  const hintMessages = datasource && datasource.messages;\n\n  const datasourceButtonConfiguration = getDatasourceFormButtonConfig(\n    state,\n    props?.formData?.pluginId,\n  );\n\n  const datasourcePermissions = datasource.userPermissions || [];\n\n  const canManageDatasource = hasManageDatasourcePermission(\n    datasourcePermissions,\n  );\n\n  return {\n    messages: hintMessages,\n    datasource,\n    datasourceButtonConfiguration,\n    isReconnectingModalOpen: state.entities.datasources.isReconnectingModalOpen,\n    canManageDatasource: canManageDatasource,\n    datasourceName: datasource?.name ?? \"\",\n    isDatasourceBeingSavedFromPopup:\n      state.entities.datasources.isDatasourceBeingSavedFromPopup,\n  };\n};\n\nexport default connect(mapStateToProps)(\n  reduxForm<Datasource, DatasourceDBEditorProps>({\n    form: DATASOURCE_DB_FORM,\n    enableReinitialize: true,\n  })(DatasourceDBEditor),\n);\n","import { Property } from \"entities/Action\";\nimport { Datasource } from \"entities/Datasource\";\nimport {\n  ApiDatasourceForm,\n  Authentication,\n  AuthorizationCode,\n  AuthType,\n  ClientCredentials,\n  GrantType,\n  Oauth2Common,\n  Basic,\n  ApiKey,\n  BearerToken,\n  SSLType,\n} from \"entities/Datasource/RestAPIForm\";\nimport _ from \"lodash\";\n\nexport const datasourceToFormValues = (\n  datasource: Datasource,\n): ApiDatasourceForm => {\n  const authType = _.get(\n    datasource,\n    \"datasourceConfiguration.authentication.authenticationType\",\n    AuthType.NONE,\n  );\n  const connection = _.get(datasource, \"datasourceConfiguration.connection\", {\n    ssl: {\n      authType: SSLType.DEFAULT,\n    },\n  });\n  const authentication = datasourceToFormAuthentication(authType, datasource);\n  const isSendSessionEnabled =\n    _.get(datasource, \"datasourceConfiguration.properties[0].value\", \"N\") ===\n    \"Y\";\n  const sessionSignatureKey = isSendSessionEnabled\n    ? _.get(datasource, \"datasourceConfiguration.properties[1].value\")\n    : \"\";\n  return {\n    datasourceId: datasource.id,\n    workspaceId: datasource.workspaceId,\n    pluginId: datasource.pluginId,\n    isValid: datasource.isValid,\n    url: datasource.datasourceConfiguration?.url,\n    headers: cleanupProperties(datasource.datasourceConfiguration?.headers),\n    queryParameters: cleanupProperties(\n      datasource.datasourceConfiguration?.queryParameters,\n    ),\n    isSendSessionEnabled: isSendSessionEnabled,\n    sessionSignatureKey: sessionSignatureKey,\n    authType: authType,\n    authentication: authentication,\n    connection: connection,\n  };\n};\n\nexport const formValuesToDatasource = (\n  datasource: Datasource,\n  form: ApiDatasourceForm,\n): Datasource => {\n  const authentication = formToDatasourceAuthentication(\n    form.authType,\n    form.authentication,\n  );\n\n  return {\n    ...datasource,\n    datasourceConfiguration: {\n      url: form.url,\n      headers: cleanupProperties(form.headers),\n      queryParameters: cleanupProperties(form.queryParameters),\n      properties: [\n        {\n          key: \"isSendSessionEnabled\",\n          value: form.isSendSessionEnabled ? \"Y\" : \"N\",\n        },\n        { key: \"sessionSignatureKey\", value: form.sessionSignatureKey },\n      ],\n      authentication: authentication,\n      connection: form.connection,\n    },\n  } as Datasource;\n};\n\nconst formToDatasourceAuthentication = (\n  authType: AuthType,\n  authentication: Authentication | undefined,\n): Authentication | null => {\n  if (authType === AuthType.NONE || !authentication) return null;\n  if (\n    isClientCredentials(authType, authentication) ||\n    isAuthorizationCode(authType, authentication)\n  ) {\n    const oAuth2Common: Oauth2Common = {\n      authenticationType: AuthType.OAuth2,\n      accessTokenUrl: authentication.accessTokenUrl,\n      clientId: authentication.clientId,\n      headerPrefix: authentication.headerPrefix,\n      scopeString: authentication.scopeString,\n      clientSecret: authentication.clientSecret,\n      isAuthorizationHeader: authentication.isAuthorizationHeader,\n      isTokenHeader: authentication.isTokenHeader,\n      audience: authentication.audience,\n      resource: authentication.resource,\n      sendScopeWithRefreshToken: authentication.sendScopeWithRefreshToken,\n      refreshTokenClientCredentialsLocation:\n        authentication.refreshTokenClientCredentialsLocation,\n      useSelfSignedCert: authentication.useSelfSignedCert,\n    };\n    if (isClientCredentials(authType, authentication)) {\n      return {\n        ...oAuth2Common,\n        grantType: GrantType.ClientCredentials,\n        customTokenParameters: cleanupProperties(\n          authentication.customTokenParameters,\n        ),\n      };\n    }\n    if (isAuthorizationCode(authType, authentication)) {\n      return {\n        ...oAuth2Common,\n        grantType: GrantType.AuthorizationCode,\n        authorizationUrl: authentication.authorizationUrl,\n        isAuthorized: !!authentication.isAuthorized,\n        customAuthenticationParameters: cleanupProperties(\n          authentication.customAuthenticationParameters,\n        ),\n      };\n    }\n  }\n  if (authType === AuthType.basic) {\n    if (\"username\" in authentication) {\n      const basic: Basic = {\n        authenticationType: AuthType.basic,\n        username: authentication.username,\n        password: authentication.password,\n        secretExists: authentication.secretExists,\n      };\n      return basic;\n    }\n  }\n  if (authType === AuthType.apiKey) {\n    if (\"label\" in authentication) {\n      const apiKey: ApiKey = {\n        authenticationType: AuthType.apiKey,\n        label: authentication.label,\n        value: authentication.value,\n        headerPrefix: authentication.headerPrefix,\n        addTo: authentication.addTo,\n      };\n      return apiKey;\n    }\n  }\n  if (authType === AuthType.bearerToken) {\n    if (\"bearerToken\" in authentication) {\n      const bearerToken: BearerToken = {\n        authenticationType: AuthType.bearerToken,\n        bearerToken: authentication.bearerToken,\n      };\n      return bearerToken;\n    }\n  }\n  return null;\n};\n\nconst datasourceToFormAuthentication = (\n  authType: AuthType,\n  datasource: Datasource,\n): Authentication | undefined => {\n  if (\n    !datasource ||\n    !datasource.datasourceConfiguration ||\n    !datasource.datasourceConfiguration.authentication\n  ) {\n    return;\n  }\n\n  const authentication = datasource.datasourceConfiguration.authentication;\n  if (\n    isClientCredentials(authType, authentication) ||\n    isAuthorizationCode(authType, authentication)\n  ) {\n    const oAuth2Common: Oauth2Common = {\n      authenticationType: AuthType.OAuth2,\n      accessTokenUrl: authentication.accessTokenUrl || \"\",\n      clientId: authentication.clientId || \"\",\n      headerPrefix: authentication.headerPrefix || \"\",\n      scopeString: authentication.scopeString || \"\",\n      clientSecret: authentication.clientSecret,\n      isTokenHeader: !!authentication.isTokenHeader,\n      isAuthorizationHeader: !!authentication.isAuthorizationHeader,\n      audience: authentication.audience || \"\",\n      resource: authentication.resource || \"\",\n      sendScopeWithRefreshToken:\n        authentication.sendScopeWithRefreshToken || false,\n      refreshTokenClientCredentialsLocation:\n        authentication.refreshTokenClientCredentialsLocation || \"BODY\",\n    };\n    if (isClientCredentials(authType, authentication)) {\n      return {\n        ...oAuth2Common,\n        grantType: GrantType.ClientCredentials,\n        customTokenParameters: cleanupProperties(\n          authentication.customTokenParameters,\n        ),\n      };\n    }\n    if (isAuthorizationCode(authType, authentication)) {\n      return {\n        ...oAuth2Common,\n        grantType: GrantType.AuthorizationCode,\n        authorizationUrl: authentication.authorizationUrl || \"\",\n        customAuthenticationParameters: cleanupProperties(\n          authentication.customAuthenticationParameters,\n        ),\n        isAuthorized: !!authentication.isAuthorized,\n        isAuthorizationHeader:\n          typeof authentication.isAuthorizationHeader === \"undefined\"\n            ? true\n            : !!authentication.isAuthorizationHeader,\n      };\n    }\n  }\n  if (authType === AuthType.basic) {\n    const basic: Basic = {\n      authenticationType: AuthType.basic,\n      username: authentication.username || \"\",\n      password: authentication.password || \"\",\n      secretExists: authentication.secretExists,\n    };\n    return basic;\n  }\n  if (authType === AuthType.apiKey) {\n    const apiKey: ApiKey = {\n      authenticationType: AuthType.apiKey,\n      label: authentication.label || \"\",\n      value: authentication.value || \"\",\n      headerPrefix: authentication.headerPrefix || \"\",\n      addTo: authentication.addTo || \"\",\n    };\n    return apiKey;\n  }\n  if (authType === AuthType.bearerToken) {\n    const bearerToken: BearerToken = {\n      authenticationType: AuthType.bearerToken,\n      bearerToken: authentication.bearerToken || \"\",\n    };\n    return bearerToken;\n  }\n};\n\nconst isClientCredentials = (\n  authType: AuthType,\n  val: any,\n): val is ClientCredentials => {\n  if (authType !== AuthType.OAuth2) return false;\n  // If there's no authentication object at all and it is oauth2, it is client credentials by default\n  if (!val) return true;\n  return _.get(val, \"grantType\") === GrantType.ClientCredentials;\n};\n\nconst isAuthorizationCode = (\n  authType: AuthType,\n  val: any,\n): val is AuthorizationCode => {\n  if (authType !== AuthType.OAuth2) return false;\n  return _.get(val, \"grantType\") === GrantType.AuthorizationCode;\n};\n\nconst cleanupProperties = (values: Property[] | undefined): Property[] => {\n  if (!Array.isArray(values)) return [];\n\n  const newValues: Property[] = [];\n  values.forEach((object: Property) => {\n    const isEmpty = Object.values(object).every((x) => x === \"\");\n    if (!isEmpty) {\n      newValues.push(object);\n    }\n  });\n  return newValues;\n};\n","import React, { createRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport copy from \"copy-to-clipboard\";\nimport { BaseTextInput } from \"components/designSystems/appsmith/TextInputComponent\";\nimport { BaseButton } from \"./BaseButton\";\n\nconst Wrapper = styled.div`\n  display: flex;\n\n  div {\n    flex-basis: calc(100% - 90px);\n  }\n  input:disabled {\n    color: #555;\n  }\n  button {\n    flex-basis: 80px;\n    margin-left: 10px;\n  }\n`;\n\nfunction CopyToClipboard(props: any) {\n  const { copyText } = props;\n  const copyURLInput = createRef<HTMLInputElement>();\n  const [isCopied, setIsCopied] = useState(false);\n\n  const copyToClipboard = (url: string) => {\n    copy(url);\n    setIsCopied(true);\n    setTimeout(() => {\n      setIsCopied(false);\n    }, 3000);\n  };\n\n  const selectText = () => {\n    if (copyURLInput.current) {\n      copyURLInput.current.setSelectionRange(0, copyText.length);\n    }\n  };\n  return (\n    <Wrapper>\n      <BaseTextInput\n        defaultValue={copyText}\n        disabled\n        fill\n        onChange={() => {\n          selectText();\n        }}\n      />\n\n      <BaseButton\n        onClick={() => {\n          copyToClipboard(copyText);\n        }}\n        text={isCopied ? \"Copied\" : \"Copy\"}\n      />\n    </Wrapper>\n  );\n}\n\nexport default CopyToClipboard;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { createNewApiName } from \"utils/AppsmithUtils\";\nimport { DATASOURCE_REST_API_FORM } from \"@appsmith/constants/forms\";\nimport FormTitle from \"./FormTitle\";\nimport { Datasource } from \"entities/Datasource\";\nimport {\n  getFormMeta,\n  getFormValues,\n  InjectedFormProps,\n  reduxForm,\n} from \"redux-form\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport FormControl from \"pages/Editor/FormControl\";\nimport { StyledInfo } from \"components/formControls/InputTextControl\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { ApiActionConfig, PluginType } from \"entities/Action\";\nimport { ActionDataState } from \"reducers/entityReducers/actionsReducer\";\nimport { Button, Category, Toaster, Variant } from \"design-system-old\";\nimport { DEFAULT_API_ACTION_CONFIG } from \"constants/ApiEditorConstants/ApiEditorConstants\";\nimport { createActionRequest } from \"actions/pluginActionActions\";\nimport {\n  createDatasourceFromForm,\n  deleteDatasource,\n  redirectAuthorizationCode,\n  toggleSaveActionFlag,\n  updateDatasource,\n} from \"actions/datasourceActions\";\nimport { ReduxAction } from \"@appsmith/constants/ReduxActionConstants\";\nimport {\n  datasourceToFormValues,\n  formValuesToDatasource,\n} from \"transformers/RestAPIDatasourceFormTransformer\";\nimport {\n  ApiDatasourceForm,\n  ApiKeyAuthType,\n  AuthType,\n  GrantType,\n  SSLType,\n} from \"entities/Datasource/RestAPIForm\";\nimport { createMessage, INVALID_URL } from \"@appsmith/constants/messages\";\nimport Collapsible from \"./Collapsible\";\nimport _ from \"lodash\";\nimport FormLabel from \"components/editorComponents/FormLabel\";\nimport CopyToClipBoard from \"components/designSystems/appsmith/CopyToClipBoard\";\nimport { Callout } from \"design-system-old\";\nimport CloseEditor from \"components/editorComponents/CloseEditor\";\nimport { updateReplayEntity } from \"actions/pageActions\";\nimport { ENTITY_TYPE } from \"entities/AppsmithConsole\";\nimport {\n  FormContainer,\n  FormContainerBody,\n  FormTitleContainer,\n  Header,\n  PluginImage,\n} from \"./JSONtoForm\";\nimport DatasourceAuth, {\n  DatasourceButtonType,\n} from \"pages/common/datasourceAuth\";\nimport { TEMP_DATASOURCE_ID } from \"constants/Datasource\";\nimport { hasManageDatasourcePermission } from \"@appsmith/utils/permissionHelpers\";\n\ninterface DatasourceRestApiEditorProps {\n  initializeReplayEntity: (id: string, data: any) => void;\n  updateDatasource: (\n    formValues: Datasource,\n    onSuccess?: ReduxAction<unknown>,\n  ) => void;\n  deleteDatasource: (id: string) => void;\n  isSaving: boolean;\n  isDeleting: boolean;\n  applicationId: string;\n  datasourceId: string;\n  pageId: string;\n  isNewDatasource: boolean;\n  pluginImage: string;\n  location: {\n    search: string;\n  };\n  datasource: Datasource;\n  formData: ApiDatasourceForm;\n  actions: ActionDataState;\n  formMeta: any;\n  messages?: Array<string>;\n  hiddenHeader?: boolean;\n  responseStatus?: string;\n  responseMessage?: string;\n  datasourceName: string;\n  createDatasource: (\n    data: Datasource,\n    onSuccess?: ReduxAction<unknown>,\n  ) => void;\n  toggleSaveActionFlag: (flag: boolean) => void;\n  triggerSave?: boolean;\n  isFormDirty: boolean;\n  datasourceDeleteTrigger: () => void;\n}\n\ntype Props = DatasourceRestApiEditorProps &\n  InjectedFormProps<ApiDatasourceForm, DatasourceRestApiEditorProps>;\n\nconst FormInputContainer = styled.div`\n  margin-top: 16px;\n`;\n\nconst StyledButton = styled(Button)`\n  &&&& {\n    width: 87px;\n    height: 32px;\n  }\n`;\n\nconst AuthorizeButton = styled(StyledButton)`\n  &&&& {\n    width: 180px;\n  }\n`;\n\nclass DatasourceRestAPIEditor extends React.Component<\n  Props,\n  { confirmDelete: boolean }\n> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { confirmDelete: false };\n  }\n  componentDidMount() {\n    // set replay data\n    this.props.initializeReplayEntity(\n      this.props.datasource.id,\n      this.props.initialValues,\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (!this.props.formData) return;\n\n    if (this.state.confirmDelete) {\n      const delayConfirmDeleteToFalse = _.debounce(() => {\n        if (!this.props.isDeleting) this.setState({ confirmDelete: false });\n      }, 2200);\n\n      delayConfirmDeleteToFalse();\n    }\n\n    const { authType } = this.props.formData;\n\n    if (authType === AuthType.OAuth2) {\n      this.ensureOAuthDefaultsAreCorrect();\n    } else if (authType === AuthType.apiKey) {\n      this.ensureAPIKeyDefaultsAreCorrect();\n    }\n\n    // if trigger save changed, save datasource\n    if (\n      prevProps.triggerSave !== this.props.triggerSave &&\n      this.props.triggerSave\n    ) {\n      this.save();\n    }\n  }\n\n  isDirty(prop: any) {\n    const { formMeta } = this.props;\n    return _.get(formMeta, prop + \".visited\", false);\n  }\n\n  ensureAPIKeyDefaultsAreCorrect = () => {\n    if (!this.props.formData) return;\n    const { authentication } = this.props.formData;\n    if (!authentication || !_.get(authentication, \"addTo\")) {\n      this.props.change(\"authentication.addTo\", ApiKeyAuthType.Header);\n    }\n    if (!authentication || !_.get(authentication, \"headerPrefix\")) {\n      this.props.change(\"authentication.headerPefix\", \"ApiKeyAuthType.Header\");\n    }\n  };\n\n  ensureOAuthDefaultsAreCorrect = () => {\n    if (!this.props.formData) return;\n    const { authentication } = this.props.formData;\n\n    if (!authentication || !_.get(authentication, \"grantType\")) {\n      this.props.change(\n        \"authentication.grantType\",\n        GrantType.ClientCredentials,\n      );\n    }\n    if (_.get(authentication, \"isTokenHeader\") === undefined) {\n      this.props.change(\"authentication.isTokenHeader\", true);\n    }\n    if (\n      !this.isDirty(\"authentication.headerPrefix\") &&\n      _.get(authentication, \"headerPrefix\") === undefined\n    ) {\n      this.props.change(\"authentication.headerPrefix\", \"Bearer\");\n    }\n\n    if (_.get(authentication, \"grantType\") === GrantType.AuthorizationCode) {\n      if (_.get(authentication, \"isAuthorizationHeader\") === undefined) {\n        this.props.change(\"authentication.isAuthorizationHeader\", true);\n      }\n    }\n\n    if (_.get(authentication, \"grantType\") === GrantType.ClientCredentials) {\n      if (_.get(authentication, \"isAuthorizationHeader\") === undefined) {\n        this.props.change(\"authentication.isAuthorizationHeader\", false);\n      }\n    }\n\n    if (_.get(authentication, \"grantType\") === GrantType.AuthorizationCode) {\n      if (\n        _.get(authentication, \"sendScopeWithRefreshToken\") === undefined ||\n        _.get(authentication, \"sendScopeWithRefreshToken\") === \"\"\n      ) {\n        this.props.change(\"authentication.sendScopeWithRefreshToken\", false);\n      }\n    }\n\n    if (_.get(authentication, \"grantType\") === GrantType.AuthorizationCode) {\n      if (\n        _.get(authentication, \"refreshTokenClientCredentialsLocation\") ===\n          undefined ||\n        _.get(authentication, \"refreshTokenClientCredentialsLocation\") === \"\"\n      ) {\n        this.props.change(\n          \"authentication.refreshTokenClientCredentialsLocation\",\n          \"BODY\",\n        );\n      }\n    }\n  };\n\n  validate = (): boolean => {\n    const { datasource, datasourceId, formData } = this.props;\n    const createMode = datasourceId === TEMP_DATASOURCE_ID;\n    const canManageDatasource = hasManageDatasourcePermission(\n      datasource?.userPermissions || [],\n    );\n    if (!formData) return true;\n    return !formData.url || (!createMode && !canManageDatasource);\n  };\n\n  getSanitizedFormData = () =>\n    formValuesToDatasource(this.props.datasource, this.props.formData);\n\n  save = (onSuccess?: ReduxAction<unknown>) => {\n    this.props.toggleSaveActionFlag(true);\n    const normalizedValues = this.getSanitizedFormData();\n\n    AnalyticsUtil.logEvent(\"SAVE_DATA_SOURCE_CLICK\", {\n      pageId: this.props.pageId,\n      appId: this.props.applicationId,\n    });\n\n    if (this.props.datasource.id !== TEMP_DATASOURCE_ID) {\n      return this.props.updateDatasource(normalizedValues, onSuccess);\n    }\n\n    this.props.createDatasource(\n      {\n        ...normalizedValues,\n        name: this.props.datasourceName,\n      },\n      onSuccess,\n    );\n  };\n\n  createApiAction = () => {\n    const { actions, datasource, pageId } = this.props;\n    if (\n      !datasource ||\n      !datasource.datasourceConfiguration ||\n      !datasource.datasourceConfiguration.url\n    ) {\n      Toaster.show({\n        text: \"Unable to create API. Try adding a url to the datasource\",\n        variant: Variant.danger,\n      });\n      return;\n    }\n    const newApiName = createNewApiName(actions, pageId || \"\");\n\n    const headers =\n      this.props.datasource?.datasourceConfiguration?.headers ?? [];\n    const queryParameters =\n      this.props.datasource?.datasourceConfiguration?.queryParameters ?? [];\n    const defaultApiActionConfig: ApiActionConfig = {\n      ...DEFAULT_API_ACTION_CONFIG,\n      headers: headers.length ? headers : DEFAULT_API_ACTION_CONFIG.headers,\n      queryParameters: queryParameters.length\n        ? queryParameters\n        : DEFAULT_API_ACTION_CONFIG.queryParameters,\n    };\n\n    this.save(\n      createActionRequest({\n        name: newApiName,\n        pageId: pageId,\n        pluginId: datasource.pluginId,\n        datasource: {\n          id: datasource.id,\n        },\n        eventData: {\n          actionType: \"API\",\n          from: \"datasource-pane\",\n        },\n        actionConfiguration: defaultApiActionConfig,\n      }),\n    );\n  };\n\n  urlValidator = (value: string) => {\n    const validationRegex = \"^(http|https)://\";\n    if (value) {\n      const regex = new RegExp(validationRegex);\n\n      return regex.test(value)\n        ? { isValid: true, message: \"\" }\n        : {\n            isValid: false,\n            message: createMessage(INVALID_URL),\n          };\n    }\n\n    return { isValid: true, message: \"\" };\n  };\n\n  render = () => {\n    const { datasource, formData, hiddenHeader, pageId } = this.props;\n\n    return (\n      <FormContainer>\n        {/* this is true during import flow */}\n        {!hiddenHeader && <CloseEditor />}\n        <FormContainerBody>\n          <form\n            onSubmit={(e) => {\n              e.preventDefault();\n            }}\n          >\n            {this.renderHeader()}\n            {this.renderEditor()}\n            <DatasourceAuth\n              datasource={datasource}\n              datasourceButtonConfiguration={[\n                DatasourceButtonType.DELETE,\n                DatasourceButtonType.SAVE,\n              ]}\n              datasourceDeleteTrigger={this.props.datasourceDeleteTrigger}\n              formData={formData}\n              getSanitizedFormData={this.getSanitizedFormData}\n              isFormDirty={this.props.isFormDirty}\n              isInvalid={this.validate()}\n              pageId={pageId}\n              shouldRender\n            />\n          </form>\n        </FormContainerBody>\n      </FormContainer>\n    );\n  };\n\n  renderHeader = () => {\n    const {\n      datasource,\n      datasourceId,\n      hiddenHeader,\n      isNewDatasource,\n      pluginImage,\n    } = this.props;\n    const createMode = datasourceId === TEMP_DATASOURCE_ID;\n    const canManageDatasource = hasManageDatasourcePermission(\n      datasource?.userPermissions || [],\n    );\n    return !hiddenHeader ? (\n      <Header>\n        <FormTitleContainer>\n          <PluginImage alt=\"Datasource\" src={pluginImage} />\n          <FormTitle\n            disabled={!createMode && !canManageDatasource}\n            focusOnMount={isNewDatasource}\n          />\n        </FormTitleContainer>\n      </Header>\n    ) : null;\n  };\n\n  renderEditor = () => {\n    const {\n      datasource,\n      datasourceId,\n      formData,\n      isSaving,\n      messages,\n      pageId,\n    } = this.props;\n    const isAuthorized = _.get(\n      datasource,\n      \"datasourceConfiguration.authentication.isAuthorized\",\n      false,\n    );\n    if (!formData) return;\n\n    const { authentication } = formData;\n\n    return (\n      <>\n        {messages &&\n          messages.map((msg, i) => (\n            <Callout fill key={i} text={msg} variant={Variant.warning} />\n          ))}\n        {this.renderGeneralSettings()}\n        {this.renderAuthFields()}\n        {this.renderOauth2AdvancedSettings()}\n        {this.renderSelfSignedCertificateFields()}\n        {formData.authType &&\n          formData.authType === AuthType.OAuth2 &&\n          _.get(authentication, \"grantType\") ===\n            GrantType.AuthorizationCode && (\n            <FormInputContainer>\n              <AuthorizeButton\n                category={Category.primary}\n                className=\"t--save-and-authorize-datasource\"\n                disabled={this.validate()}\n                isLoading={isSaving}\n                onClick={() =>\n                  this.save(\n                    redirectAuthorizationCode(\n                      pageId,\n                      datasourceId,\n                      PluginType.API,\n                    ),\n                  )\n                }\n                tag=\"button\"\n                text={\n                  isAuthorized ? \"Save and Re-Authorize\" : \"Save and Authorize\"\n                }\n                variant={Variant.success}\n              />\n            </FormInputContainer>\n          )}\n      </>\n    );\n  };\n\n  renderGeneralSettings = () => {\n    const { formData } = this.props;\n\n    return (\n      <section data-cy=\"section-General\" data-replay-id=\"section-General\">\n        <FormInputContainer data-replay-id={btoa(\"url\")}>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"url\",\n            label: \"URL\",\n            placeholderText: \"https://example.com\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: true,\n            fieldValidator: this.urlValidator,\n          })}\n        </FormInputContainer>\n        <FormInputContainer\n          className=\"t--headers-array\"\n          data-replay-id={btoa(\"headers\")}\n        >\n          {this.renderKeyValueControlViaFormControl(\n            \"headers\",\n            \"Headers\",\n            \"\",\n            false,\n          )}\n        </FormInputContainer>\n        <FormInputContainer data-replay-id={btoa(\"queryParameters\")}>\n          {this.renderKeyValueControlViaFormControl(\n            \"queryParameters\",\n            \"Query Parameters\",\n            \"\",\n            false,\n          )}\n        </FormInputContainer>\n        <FormInputContainer data-replay-id={btoa(\"isSendSessionEnabled\")}>\n          {this.renderDropdownControlViaFormControl(\n            \"isSendSessionEnabled\",\n            [\n              {\n                label: \"Yes\",\n                value: true,\n              },\n              {\n                label: \"No\",\n                value: false,\n              },\n            ],\n            \"Send Appsmith signature header\",\n            \"\",\n            true,\n            \"Header key: X-APPSMITH-SIGNATURE\",\n          )}\n        </FormInputContainer>\n        {formData.isSendSessionEnabled && (\n          <FormInputContainer data-replay-id={btoa(\"sessionSignatureKey\")}>\n            {this.renderInputTextControlViaFormControl({\n              configProperty: \"sessionSignatureKey\",\n              label: \"Session Details Signature Key\",\n              placeholderText: \"\",\n              dataType: \"TEXT\",\n              encrypted: false,\n              isRequired: false,\n            })}\n          </FormInputContainer>\n        )}\n        <FormInputContainer data-replay-id={btoa(\"authType\")}>\n          {this.renderDropdownControlViaFormControl(\n            \"authType\",\n            [\n              {\n                label: \"None\",\n                value: AuthType.NONE,\n              },\n              {\n                label: \"Basic\",\n                value: AuthType.basic,\n              },\n              {\n                label: \"OAuth 2.0\",\n                value: AuthType.OAuth2,\n              },\n              {\n                label: \"API Key\",\n                value: AuthType.apiKey,\n              },\n              {\n                label: \"Bearer Token\",\n                value: AuthType.bearerToken,\n              },\n            ],\n            \"Authentication Type\",\n            \"\",\n            false,\n            \"\",\n          )}\n        </FormInputContainer>\n      </section>\n    );\n  };\n\n  renderSelfSignedCertificateFields = () => {\n    const { connection } = this.props.formData;\n    if (connection?.ssl.authType === SSLType.SELF_SIGNED_CERTIFICATE) {\n      return (\n        <Collapsible defaultIsOpen title=\"Certificate Details\">\n          {this.renderFilePickerControlViaFormControl(\n            \"connection.ssl.certificateFile\",\n            \"Upload Certificate\",\n            \"\",\n            false,\n            true,\n          )}\n        </Collapsible>\n      );\n    }\n  };\n\n  renderAuthFields = () => {\n    const { authType } = this.props.formData;\n\n    let content;\n    if (authType === AuthType.OAuth2) {\n      content = this.renderOauth2();\n    } else if (authType === AuthType.basic) {\n      content = this.renderBasic();\n    } else if (authType === AuthType.apiKey) {\n      content = this.renderApiKey();\n    } else if (authType === AuthType.bearerToken) {\n      content = this.renderBearerToken();\n    }\n    if (content) {\n      return (\n        <Collapsible defaultIsOpen title=\"Authentication\">\n          {content}\n        </Collapsible>\n      );\n    }\n  };\n\n  renderApiKey = () => {\n    const { authentication } = this.props.formData;\n    return (\n      <>\n        <FormInputContainer data-replay-id={btoa(\"authentication.label\")}>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.label\",\n            label: \"Key\",\n            placeholderText: \"api_key\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: false,\n          })}\n        </FormInputContainer>\n        <FormInputContainer>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.value\",\n            label: \"Value\",\n            placeholderText: \"value\",\n            dataType: \"TEXT\",\n            encrypted: true,\n            isRequired: false,\n          })}\n        </FormInputContainer>\n        <FormInputContainer>\n          {this.renderDropdownControlViaFormControl(\n            \"authentication.addTo\",\n            [\n              {\n                label: \"Query Params\",\n                value: ApiKeyAuthType.QueryParams,\n              },\n              {\n                label: \"Header\",\n                value: ApiKeyAuthType.Header,\n              },\n            ],\n            \"Add To\",\n            \"\",\n            false,\n            \"\",\n          )}\n        </FormInputContainer>\n        {_.get(authentication, \"addTo\") == \"header\" && (\n          <FormInputContainer\n            data-replay-id={btoa(\"authentication.headerPrefix\")}\n          >\n            {this.renderInputTextControlViaFormControl({\n              configProperty: \"authentication.headerPrefix\",\n              label: \"Header Prefix\",\n              placeholderText: \"eg: Bearer \",\n              dataType: \"TEXT\",\n              encrypted: false,\n              isRequired: false,\n            })}\n          </FormInputContainer>\n        )}\n      </>\n    );\n  };\n\n  renderBearerToken = () => {\n    return (\n      <FormInputContainer data-replay-id={btoa(\"authentication.bearerToken\")}>\n        {this.renderInputTextControlViaFormControl({\n          configProperty: \"authentication.bearerToken\",\n          label: \"Bearer Token\",\n          placeholderText: \"Bearer Token\",\n          dataType: \"TEXT\",\n          encrypted: true,\n          isRequired: false,\n        })}\n      </FormInputContainer>\n    );\n  };\n\n  renderBasic = () => {\n    return (\n      <>\n        <FormInputContainer data-replay-id={btoa(\"authentication.username\")}>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.username\",\n            label: \"Username\",\n            placeholderText: \"Username\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: false,\n          })}\n        </FormInputContainer>\n        <FormInputContainer data-replay-id={btoa(\"authentication.password\")}>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.password\",\n            label: \"Password\",\n            placeholderText: \"Password\",\n            dataType: \"PASSWORD\",\n            encrypted: true,\n            isRequired: false,\n            isSecretExistsPath: \"authentication.secretExists.password\",\n          })}\n        </FormInputContainer>\n      </>\n    );\n  };\n\n  renderOauth2 = () => {\n    const { authentication } = this.props.formData;\n    if (!authentication) return;\n    let content;\n    switch (_.get(authentication, \"grantType\")) {\n      case GrantType.AuthorizationCode:\n        content = this.renderOauth2AuthorizationCode();\n        break;\n      case GrantType.ClientCredentials:\n        content = this.renderOauth2ClientCredentials();\n        break;\n    }\n\n    return (\n      <>\n        <FormInputContainer data-replay-id={btoa(\"authentication.grantType\")}>\n          {this.renderDropdownControlViaFormControl(\n            \"authentication.grantType\",\n            [\n              {\n                label: \"Client Credentials\",\n                value: GrantType.ClientCredentials,\n              },\n              {\n                label: \"Authorization Code\",\n                value: GrantType.AuthorizationCode,\n              },\n            ],\n            \"Grant Type\",\n            \"\",\n            false,\n            \"\",\n          )}\n        </FormInputContainer>\n        {content}\n      </>\n    );\n  };\n\n  renderOauth2Common = () => {\n    const { formData } = this.props;\n    return (\n      <>\n        <FormInputContainer\n          data-replay-id={btoa(\"authentication.isTokenHeader\")}\n        >\n          {this.renderDropdownControlViaFormControl(\n            \"authentication.isTokenHeader\",\n            [\n              {\n                label: \"Request Header\",\n                value: true,\n              },\n              {\n                label: \"Request URL\",\n                value: false,\n              },\n            ],\n            \"Add Access Token To\",\n            \"\",\n            false,\n            \"\",\n          )}\n        </FormInputContainer>\n        {_.get(formData.authentication, \"isTokenHeader\") && (\n          <FormInputContainer\n            data-replay-id={btoa(\"authentication.headerPrefix\")}\n          >\n            {this.renderInputTextControlViaFormControl({\n              configProperty: \"authentication.headerPrefix\",\n              label: \"Header Prefix\",\n              placeholderText: \"eg: Bearer \",\n              dataType: \"TEXT\",\n              encrypted: false,\n              isRequired: false,\n            })}\n          </FormInputContainer>\n        )}\n        <FormInputContainer\n          data-replay-id={btoa(\"authentication.accessTokenUrl\")}\n        >\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.accessTokenUrl\",\n            label: \"Access Token URL\",\n            placeholderText: \"https://example.com/login/oauth/access_token\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: false,\n            fieldValidator: this.urlValidator,\n          })}\n        </FormInputContainer>\n        <FormInputContainer data-replay-id={btoa(\"authentication.clientId\")}>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.clientId\",\n            label: \"Client ID\",\n            placeholderText: \"Client ID\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: false,\n          })}\n        </FormInputContainer>\n        <FormInputContainer\n          data-replay-id={btoa(\"authentication.clientSecret\")}\n        >\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.clientSecret\",\n            label: \"Client Secret\",\n            placeholderText: \"Client Secret\",\n            dataType: \"PASSWORD\",\n            encrypted: true,\n            isRequired: false,\n            isSecretExistsPath: \"authentication.secretExists.clientSecret\",\n          })}\n        </FormInputContainer>\n        <FormInputContainer data-replay-id={btoa(\"authentication.scopeString\")}>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.scopeString\",\n            label: \"Scope(s)\",\n            placeholderText: \"e.g. read, write\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: false,\n          })}\n        </FormInputContainer>\n        <FormInputContainer\n          data-replay-id={btoa(\"authentication.isAuthorizationHeader\")}\n        >\n          {this.renderDropdownControlViaFormControl(\n            \"authentication.isAuthorizationHeader\",\n            [\n              {\n                label: \"Send as Basic Auth header\",\n                value: true,\n              },\n              {\n                label: \"Send client credentials in body\",\n                value: false,\n              },\n            ],\n            \"Client Authentication\",\n            \"\",\n            false,\n            \"\",\n          )}\n        </FormInputContainer>\n      </>\n    );\n  };\n\n  renderOauth2AdvancedSettings = () => {\n    const { authentication, authType, connection } = this.props.formData;\n    const isGrantTypeAuthorizationCode =\n      _.get(authentication, \"grantType\") === GrantType.AuthorizationCode;\n    const isAuthenticationTypeOAuth2 = authType === AuthType.OAuth2;\n    const isConnectSelfSigned =\n      _.get(connection, \"ssl.authType\") === SSLType.SELF_SIGNED_CERTIFICATE;\n\n    return (\n      <Collapsible title=\"Advanced Settings\">\n        {isAuthenticationTypeOAuth2 && isGrantTypeAuthorizationCode && (\n          <FormInputContainer\n            data-replay-id={btoa(\"authentication.sendScopeWithRefreshToken\")}\n          >\n            {this.renderDropdownControlViaFormControl(\n              \"authentication.sendScopeWithRefreshToken\",\n              [\n                {\n                  label: \"Yes\",\n                  value: true,\n                },\n                {\n                  label: \"No\",\n                  value: false,\n                },\n              ],\n              \"Send scope with refresh token\",\n              \"\",\n              false,\n              \"\",\n            )}\n          </FormInputContainer>\n        )}\n        {isAuthenticationTypeOAuth2 && isGrantTypeAuthorizationCode && (\n          <FormInputContainer\n            data-replay-id={btoa(\n              \"authentication.refreshTokenClientCredentialsLocation\",\n            )}\n          >\n            {this.renderDropdownControlViaFormControl(\n              \"authentication.refreshTokenClientCredentialsLocation\",\n              [\n                {\n                  label: \"Body\",\n                  value: \"BODY\",\n                },\n                {\n                  label: \"Header\",\n                  value: \"HEADER\",\n                },\n              ],\n              \"Send client credentials with (on refresh token):\",\n              \"\",\n              false,\n              \"\",\n            )}\n          </FormInputContainer>\n        )}\n        <FormInputContainer data-replay-id={btoa(\"ssl\")}>\n          {this.renderDropdownControlViaFormControl(\n            \"connection.ssl.authType\",\n            [\n              {\n                label: \"No\",\n                value: \"DEFAULT\",\n              },\n              {\n                label: \"Yes\",\n                value: \"SELF_SIGNED_CERTIFICATE\",\n              },\n            ],\n            \"Use Self-signed certificate\",\n            \"\",\n            true,\n            \"\",\n            \"DEFAULT\",\n          )}\n        </FormInputContainer>\n        {isAuthenticationTypeOAuth2 && isConnectSelfSigned && (\n          <FormInputContainer data-replay-id={btoa(\"selfsignedcert\")}>\n            {this.renderCheckboxViaFormControl(\n              \"authentication.useSelfSignedCert\",\n              \"Use Self-Signed Certificate for Authorization requests\",\n              \"\",\n              false,\n            )}\n          </FormInputContainer>\n        )}\n      </Collapsible>\n    );\n  };\n\n  renderOauth2CommonAdvanced = () => {\n    return (\n      <>\n        <FormInputContainer data-replay-id={btoa(\"authentication.audience\")}>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.audience\",\n            label: \"Audience\",\n            placeholderText: \"https://example.com/oauth/audience\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: false,\n          })}\n        </FormInputContainer>\n        <FormInputContainer data-replay-id={btoa(\"authentication.resource\")}>\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.resource\",\n            label: \"Resource\",\n            placeholderText: \"https://example.com/oauth/resource\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: false,\n          })}\n        </FormInputContainer>\n      </>\n    );\n  };\n\n  renderOauth2ClientCredentials = () => {\n    return (\n      <>\n        {this.renderOauth2Common()}\n        {this.renderOauth2CommonAdvanced()}\n      </>\n    );\n  };\n\n  renderOauth2AuthorizationCode = () => {\n    const { formData } = this.props;\n\n    const redirectURL =\n      window.location.origin + \"/api/v1/datasources/authorize\";\n    return (\n      <>\n        {this.renderOauth2Common()}\n        <FormInputContainer\n          data-replay-id={btoa(\"authentication.authorizationUrl\")}\n        >\n          {this.renderInputTextControlViaFormControl({\n            configProperty: \"authentication.authorizationUrl\",\n            label: \"Authorization URL\",\n            placeholderText: \"https://example.com/login/oauth/authorize\",\n            dataType: \"TEXT\",\n            encrypted: false,\n            isRequired: false,\n          })}\n        </FormInputContainer>\n        <FormInputContainer>\n          <div style={{ width: \"20vw\" }}>\n            <FormLabel>\n              Redirect URL\n              <br />\n              <StyledInfo>\n                Url that the oauth server should redirect to\n              </StyledInfo>\n            </FormLabel>\n            <CopyToClipBoard copyText={redirectURL} />\n          </div>\n        </FormInputContainer>\n        <FormInputContainer\n          data-replay-id={btoa(\"authentication.customAuthenticationParameters\")}\n        >\n          {this.renderKeyValueControlViaFormControl(\n            \"authentication.customAuthenticationParameters\",\n            \"Custom Authentication Parameters\",\n            \"\",\n            false,\n          )}\n        </FormInputContainer>\n\n        {!_.get(formData.authentication, \"isAuthorizationHeader\", true) &&\n          this.renderOauth2CommonAdvanced()}\n      </>\n    );\n  };\n\n  // All components in formControls must be rendered via FormControl.\n  // FormControl is the common wrapper for all formcontrol components and contains common elements i.e. label, subtitle, helpertext\n  renderInputTextControlViaFormControl({\n    configProperty,\n    dataType,\n    encrypted,\n    fieldValidator,\n    isRequired,\n    isSecretExistsPath,\n    label,\n    placeholderText,\n  }: {\n    configProperty: string;\n    label: string;\n    placeholderText: string;\n    dataType: \"TEXT\" | \"PASSWORD\" | \"NUMBER\";\n    encrypted: boolean;\n    isRequired: boolean;\n    fieldValidator?: (value: string) => { isValid: boolean; message: string };\n    isSecretExistsPath?: string;\n  }) {\n    return (\n      <FormControl\n        config={{\n          id: \"\",\n          isValid: false,\n          isRequired: isRequired,\n          controlType: \"INPUT_TEXT\",\n          dataType: dataType,\n          configProperty: configProperty,\n          encrypted: encrypted,\n          label: label,\n          conditionals: {},\n          placeholderText: placeholderText,\n          formName: DATASOURCE_REST_API_FORM,\n          validator: fieldValidator,\n          isSecretExistsPath,\n        }}\n        formName={DATASOURCE_REST_API_FORM}\n        multipleConfig={[]}\n      />\n    );\n  }\n\n  renderDropdownControlViaFormControl(\n    configProperty: string,\n    options: {\n      label: string;\n      value: string | boolean;\n    }[],\n    label: string,\n    placeholderText: string,\n    isRequired: boolean,\n    subtitle?: string,\n    initialValue?: any,\n  ) {\n    const config = {\n      id: \"\",\n      isValid: false,\n      isRequired: isRequired,\n      controlType: \"DROP_DOWN\",\n      configProperty: configProperty,\n      options: options,\n      subtitle: subtitle,\n      label: label,\n      conditionals: {},\n      placeholderText: placeholderText,\n      formName: DATASOURCE_REST_API_FORM,\n      initialValue: initialValue,\n    };\n    return (\n      <FormControl\n        config={config}\n        formName={DATASOURCE_REST_API_FORM}\n        multipleConfig={[]}\n      />\n    );\n  }\n\n  renderKeyValueControlViaFormControl(\n    configProperty: string,\n    label: string,\n    placeholderText: string,\n    isRequired: boolean,\n  ) {\n    const config = {\n      id: \"\",\n      configProperty: configProperty,\n      isValid: false,\n      controlType: \"KEYVALUE_ARRAY\",\n      placeholderText: placeholderText,\n      label: label,\n      conditionals: {},\n      formName: DATASOURCE_REST_API_FORM,\n      isRequired: isRequired,\n    };\n    return (\n      <FormControl\n        config={config}\n        formName={DATASOURCE_REST_API_FORM}\n        multipleConfig={[]}\n      />\n    );\n  }\n\n  renderFilePickerControlViaFormControl(\n    configProperty: string,\n    label: string,\n    placeholderText: string,\n    isRequired: boolean,\n    encrypted: boolean,\n  ) {\n    const config = {\n      id: \"\",\n      configProperty: configProperty,\n      isValid: false,\n      controlType: \"FILE_PICKER\",\n      placeholderText: placeholderText,\n      encrypted: encrypted,\n      label: label,\n      conditionals: {},\n      formName: DATASOURCE_REST_API_FORM,\n      isRequired: isRequired,\n    };\n    return (\n      <FormControl\n        config={config}\n        formName={DATASOURCE_REST_API_FORM}\n        multipleConfig={[]}\n      />\n    );\n  }\n\n  renderCheckboxViaFormControl(\n    configProperty: string,\n    label: string,\n    placeholderText: string,\n    isRequired: boolean,\n  ) {\n    return (\n      <FormControl\n        config={{\n          id: \"\",\n          isValid: false,\n          isRequired: isRequired,\n          controlType: \"CHECKBOX\",\n          configProperty: configProperty,\n          label: label,\n          conditionals: {},\n          placeholderText: placeholderText,\n          formName: DATASOURCE_REST_API_FORM,\n        }}\n        formName={DATASOURCE_REST_API_FORM}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState, props: any) => {\n  const datasource = state.entities.datasources.list.find(\n    (e) => e.id === props.datasourceId,\n  ) as Datasource;\n\n  const hintMessages = datasource && datasource.messages;\n\n  return {\n    initialValues: datasourceToFormValues(datasource),\n    datasource: datasource,\n    actions: state.entities.actions,\n    formData: getFormValues(DATASOURCE_REST_API_FORM)(\n      state,\n    ) as ApiDatasourceForm,\n    formMeta: getFormMeta(DATASOURCE_REST_API_FORM)(state),\n    messages: hintMessages,\n    datasourceName: datasource?.name ?? \"\",\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    initializeReplayEntity: (id: string, data: any) =>\n      dispatch(updateReplayEntity(id, data, ENTITY_TYPE.DATASOURCE)),\n    updateDatasource: (formData: any, onSuccess?: ReduxAction<unknown>) =>\n      dispatch(updateDatasource(formData, onSuccess)),\n    deleteDatasource: (id: string) => {\n      dispatch(deleteDatasource({ id }));\n    },\n    createDatasource: (formData: any, onSuccess?: ReduxAction<unknown>) =>\n      dispatch(createDatasourceFromForm(formData, onSuccess)),\n    toggleSaveActionFlag: (flag: boolean) =>\n      dispatch(toggleSaveActionFlag(flag)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(\n  reduxForm<ApiDatasourceForm, DatasourceRestApiEditorProps>({\n    form: DATASOURCE_REST_API_FORM,\n    enableReinitialize: true,\n  })(DatasourceRestAPIEditor),\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormInitialValues, getFormValues, isDirty } from \"redux-form\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { get, isEqual } from \"lodash\";\nimport {\n  getPluginImages,\n  getDatasource,\n  getPlugin,\n} from \"selectors/entitiesSelector\";\nimport {\n  switchDatasource,\n  setDatasourceViewMode,\n  removeTempDatasource,\n  deleteTempDSFromDraft,\n  toggleSaveActionFlag,\n  toggleSaveActionFromPopupFlag,\n  createTempDatasourceFromForm,\n  resetDefaultKeyValPairFlag,\n  initializeDatasourceFormDefaults,\n} from \"actions/datasourceActions\";\nimport {\n  DATASOURCE_DB_FORM,\n  DATASOURCE_REST_API_FORM,\n} from \"@appsmith/constants/forms\";\nimport DataSourceEditorForm from \"./DBForm\";\nimport RestAPIDatasourceForm from \"./RestAPIDatasourceForm\";\nimport { Datasource } from \"entities/Datasource\";\nimport { RouteComponentProps } from \"react-router\";\nimport EntityNotFoundPane from \"pages/Editor/EntityNotFoundPane\";\nimport { setGlobalSearchQuery } from \"actions/globalSearchActions\";\nimport { toggleShowGlobalSearchModal } from \"actions/globalSearchActions\";\nimport { DatasourceComponentTypes } from \"api/PluginApi\";\nimport DatasourceSaasForm from \"../SaaSEditor/DatasourceForm\";\n\nimport {\n  getCurrentApplicationId,\n  selectURLSlugs,\n} from \"selectors/editorSelectors\";\nimport { saasEditorDatasourceIdURL } from \"RouteBuilder\";\nimport {\n  createMessage,\n  REST_API_AUTHORIZATION_APPSMITH_ERROR,\n  REST_API_AUTHORIZATION_FAILED,\n  REST_API_AUTHORIZATION_SUCCESSFUL,\n  SAVE_BUTTON_TEXT,\n} from \"@appsmith/constants/messages\";\nimport { Toaster, Variant } from \"design-system-old\";\nimport { isDatasourceInViewMode } from \"selectors/ui\";\nimport { getQueryParams } from \"utils/URLUtils\";\nimport { TEMP_DATASOURCE_ID } from \"constants/Datasource\";\nimport SaveOrDiscardDatasourceModal from \"./SaveOrDiscardDatasourceModal\";\n\ninterface ReduxStateProps {\n  datasourceId: string;\n  formData: Datasource;\n  isSaving: boolean;\n  isTesting: boolean;\n  formConfig: any[];\n  isDeleting: boolean;\n  isNewDatasource: boolean;\n  pageId: string;\n  pluginImages: Record<string, string>;\n  pluginId: string;\n  viewMode: boolean;\n  pluginType: string;\n  pluginDatasourceForm: string;\n  pluginPackageName: string;\n  applicationId: string;\n  applicationSlug: string;\n  pageSlug: string;\n  fromImporting?: boolean;\n  isDatasourceBeingSaved: boolean;\n  triggerSave: boolean;\n  isFormDirty: boolean;\n  datasource: Datasource | undefined;\n  defaultKeyValueArrayConfig: Array<string>;\n  initialValue: Datasource | undefined;\n}\n\ninterface DatasourcEditorProps {\n  datasourceDeleteTrigger: () => void;\n}\n\ntype Props = ReduxStateProps &\n  DatasourcePaneFunctions &\n  DatasourcEditorProps &\n  RouteComponentProps<{\n    datasourceId: string;\n    pageId: string;\n  }>;\n\n/*\n  **** State Variables Description ****\n  showDialog: flag used to show/hide the datasource discard popup\n  routesBlocked: flag used to identity if routes are blocked or not\n  unblock: on blocking routes using history.block, it returns a function which can be used to unblock the routes\n  navigation: function that navigates to path that we want to transition to, after discard action on datasource discard dialog popup\n*/\ntype State = {\n  showDialog: boolean;\n  routesBlocked: boolean;\n  readUrlParams: boolean;\n\n  unblock(): void;\n  navigation(): void;\n};\n\nclass DataSourceEditor extends React.Component<Props> {\n  componentDidUpdate(prevProps: Props) {\n    //Fix to prevent restapi datasource from being set in DatasourceDBForm in view mode\n    //TODO: Needs cleanup\n    if (\n      this.props.pluginDatasourceForm !== \"RestAPIDatasourceForm\" &&\n      this.props.datasourceId &&\n      this.props.datasourceId !== prevProps.datasourceId\n    ) {\n      this.props.switchDatasource(this.props.datasourceId);\n    }\n  }\n\n  componentDidMount() {\n    //Fix to prevent restapi datasource from being set in DatasourceDBForm in datasource view mode\n    //TODO: Needs cleanup\n    if (\n      this.props.datasourceId &&\n      this.props.pluginDatasourceForm !== \"RestAPIDatasourceForm\"\n    ) {\n      this.props.switchDatasource(this.props.datasourceId);\n    }\n\n    if (\n      this.props.pluginDatasourceForm === \"RestAPIDatasourceForm\" &&\n      this.props.location\n    ) {\n      const search = new URLSearchParams(this.props.location.search);\n      const responseStatus = search.get(\"response_status\");\n      const responseMessage = search.get(\"display_message\");\n      if (responseStatus) {\n        // Set default error message\n        let message = REST_API_AUTHORIZATION_FAILED;\n        let variant = Variant.danger;\n        if (responseStatus === \"success\") {\n          message = REST_API_AUTHORIZATION_SUCCESSFUL;\n          variant = Variant.success;\n        } else if (responseStatus === \"appsmith_error\") {\n          message = REST_API_AUTHORIZATION_APPSMITH_ERROR;\n        }\n        Toaster.show({\n          text: responseMessage || createMessage(message),\n          variant,\n        });\n      }\n    }\n  }\n\n  render() {\n    const {\n      datasourceDeleteTrigger,\n      datasourceId,\n      formConfig,\n      formData,\n      fromImporting,\n      isDeleting,\n      isFormDirty,\n      isNewDatasource,\n      isSaving,\n      isTesting,\n      openOmnibarReadMore,\n      pageId,\n      pluginId,\n      pluginImages,\n      pluginType,\n      setDatasourceViewMode,\n      viewMode,\n    } = this.props;\n\n    return (\n      <DataSourceEditorForm\n        applicationId={this.props.applicationId}\n        datasourceDeleteTrigger={datasourceDeleteTrigger}\n        datasourceId={datasourceId}\n        formConfig={formConfig}\n        formData={formData}\n        formName={DATASOURCE_DB_FORM}\n        hiddenHeader={fromImporting}\n        isDeleting={isDeleting}\n        isFormDirty={isFormDirty}\n        isNewDatasource={isNewDatasource}\n        isSaving={isSaving}\n        isTesting={isTesting}\n        openOmnibarReadMore={openOmnibarReadMore}\n        pageId={pageId}\n        pluginImage={pluginImages[pluginId]}\n        pluginType={pluginType}\n        setDatasourceViewMode={setDatasourceViewMode}\n        viewMode={viewMode && !fromImporting}\n      />\n    );\n  }\n}\n\nexport interface DatasourcePaneFunctions {\n  switchDatasource: (id: string) => void;\n  setDatasourceViewMode: (viewMode: boolean) => void;\n  openOmnibarReadMore: (text: string) => void;\n  discardTempDatasource: () => void;\n  deleteTempDSFromDraft: () => void;\n  toggleSaveActionFlag: (flag: boolean) => void;\n  toggleSaveActionFromPopupFlag: (flag: boolean) => void;\n  createTempDatasource: (data: any) => void;\n  resetDefaultKeyValPairFlag: () => void;\n  initializeFormWithDefaults: (pluginType: string) => void;\n}\n\nclass DatasourceEditorRouter extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      showDialog: false,\n      routesBlocked: false,\n      readUrlParams: false,\n      unblock: () => {\n        return undefined;\n      },\n      navigation: () => {\n        return undefined;\n      },\n    };\n    this.closeDialog = this.closeDialog.bind(this);\n    this.onSave = this.onSave.bind(this);\n    this.onDiscard = this.onDiscard.bind(this);\n    this.datasourceDeleteTrigger = this.datasourceDeleteTrigger.bind(this);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    // update block state when form becomes dirty/view mode is switched on\n    if (prevProps.viewMode !== this.props.viewMode && !this.props.viewMode) {\n      this.blockRoutes();\n    }\n\n    // When save button is clicked in DS form, routes should be unblocked\n    if (this.props.isDatasourceBeingSaved) {\n      this.closeDialogAndUnblockRoutes();\n    }\n    this.setViewModeFromQueryParams();\n\n    if (\n      !isEqual(\n        this.props.defaultKeyValueArrayConfig,\n        prevProps.defaultKeyValueArrayConfig,\n      )\n    ) {\n      this.props.initializeFormWithDefaults(this.props.pluginType);\n    }\n  }\n\n  componentDidMount() {\n    // Create Temp Datasource on component mount,\n    // if user hasnt saved datasource for the first time and refreshed the page\n    if (\n      !this.props.datasource &&\n      this.props.match.params.datasourceId === TEMP_DATASOURCE_ID\n    ) {\n      const urlObject = new URL(window.location.href);\n      const pluginId = urlObject?.searchParams.get(\"pluginId\");\n      this.props.createTempDatasource({\n        pluginId,\n      });\n    }\n    if (!this.props.viewMode) {\n      this.blockRoutes();\n    }\n\n    if (\n      this.props.pluginDatasourceForm ===\n      DatasourceComponentTypes.RestAPIDatasourceForm\n    ) {\n      this.setViewModeFromQueryParams();\n    }\n  }\n\n  // To move to edit state for new datasources and when we want to move to edit state\n  // from outside the datasource route\n  setViewModeFromQueryParams() {\n    const params = getQueryParams();\n    if (this.props.viewMode) {\n      if (\n        (params.viewMode === \"false\" && !this.state.readUrlParams) ||\n        this.props.isNewDatasource\n      ) {\n        // We just want to read the query params once. Cannot remove query params\n        // here as this triggers history.block\n        this.setState(\n          {\n            readUrlParams: true,\n          },\n          () => {\n            this.props.setDatasourceViewMode(false);\n          },\n        );\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.discardTempDatasource();\n    this.props.deleteTempDSFromDraft();\n    !!this.state.unblock && this.state.unblock();\n    this.props.resetDefaultKeyValPairFlag();\n  }\n\n  routesBlockFormChangeCallback() {\n    if (this.props.isFormDirty) {\n      if (!this.state.routesBlocked) {\n        this.blockRoutes();\n      }\n    } else {\n      if (this.state.routesBlocked) {\n        this.closeDialogAndUnblockRoutes(true);\n      }\n    }\n  }\n\n  blockRoutes() {\n    this.setState({\n      unblock: this.props?.history?.block((tx: any) => {\n        const nextPath = tx.pathname + tx.search;\n        const prevPath =\n          this.props.history.location.pathname +\n          this.props.history.location.search;\n        // On reload, it goes from same path to same path, we do not need to show popup in that case\n        if (nextPath !== prevPath && this.props.isFormDirty) {\n          this.setState(\n            {\n              // need to pass in query params as well as state, when user navigates away from ds form page\n              navigation: () =>\n                this.props.history.push(tx.pathname + tx.search, tx.state),\n              showDialog: true,\n              routesBlocked: true,\n            },\n            this.routesBlockFormChangeCallback.bind(this),\n          );\n          return false;\n        }\n      }),\n    });\n  }\n\n  closeDialog() {\n    this.setState({ showDialog: false });\n  }\n\n  onSave() {\n    this.props.toggleSaveActionFromPopupFlag(true);\n  }\n\n  onDiscard() {\n    this.closeDialogAndUnblockRoutes();\n    this.props.discardTempDatasource();\n    this.props.deleteTempDSFromDraft();\n    this.state.navigation();\n  }\n\n  closeDialogAndUnblockRoutes(isNavigateBack?: boolean) {\n    this.closeDialog();\n    !!this.state.unblock && this.state.unblock();\n    this.props.toggleSaveActionFlag(false);\n    this.props.toggleSaveActionFromPopupFlag(false);\n    this.setState({ routesBlocked: false });\n    if (isNavigateBack) {\n      this.state.navigation();\n    }\n  }\n\n  datasourceDeleteTrigger() {\n    !!this.state.unblock && this.state.unblock();\n  }\n\n  resetDefaultKeyValPairFlag() {\n    if (\n      this.props.defaultKeyValueArrayConfig.length > 0 &&\n      !!this.props.initialValue\n    ) {\n      this.props.resetDefaultKeyValPairFlag();\n    }\n  }\n\n  renderSaveDisacardModal() {\n    return (\n      <SaveOrDiscardDatasourceModal\n        datasourceId={this.props.datasourceId}\n        datasourcePermissions={this.props.datasource?.userPermissions || []}\n        isOpen={this.state.showDialog}\n        onClose={this.closeDialog}\n        onDiscard={this.onDiscard}\n        onSave={this.onSave}\n        saveButtonText={createMessage(SAVE_BUTTON_TEXT)}\n      />\n    );\n  }\n  render() {\n    const {\n      datasourceId,\n      fromImporting,\n      history,\n      isDeleting,\n      isFormDirty,\n      isNewDatasource,\n      isSaving,\n      location,\n      pageId,\n      pluginDatasourceForm,\n      pluginId,\n      pluginImages,\n      pluginPackageName,\n      pluginType,\n      viewMode,\n    } = this.props;\n\n    if (!pluginId && datasourceId) {\n      return <EntityNotFoundPane />;\n    }\n\n    const shouldViewMode = viewMode && !fromImporting;\n    // Check for specific form types first\n    if (pluginDatasourceForm === \"RestAPIDatasourceForm\" && !shouldViewMode) {\n      return (\n        <>\n          <RestAPIDatasourceForm\n            applicationId={this.props.applicationId}\n            datasourceDeleteTrigger={this.datasourceDeleteTrigger}\n            datasourceId={datasourceId}\n            hiddenHeader={fromImporting}\n            isDeleting={isDeleting}\n            isFormDirty={isFormDirty}\n            isNewDatasource={isNewDatasource}\n            isSaving={isSaving}\n            location={location}\n            pageId={pageId}\n            pluginImage={pluginImages[pluginId]}\n            triggerSave={this.props.triggerSave}\n          />\n          {this.renderSaveDisacardModal()}\n        </>\n      );\n    }\n    // for saas form\n    if (pluginType === \"SAAS\") {\n      // todo check if we can remove the flag here\n      if (fromImporting) {\n        return (\n          <DatasourceSaasForm\n            datasourceId={datasourceId}\n            hiddenHeader\n            pageId={pageId}\n            pluginPackageName={pluginPackageName}\n          />\n        );\n      }\n      history.push(\n        saasEditorDatasourceIdURL({\n          pageId,\n          pluginPackageName,\n          datasourceId,\n        }),\n      );\n      return null;\n    }\n\n    // Default to old flow\n    // Todo: later refactor to make this \"AutoForm\"\n    return (\n      <>\n        <DataSourceEditor\n          {...this.props}\n          datasourceDeleteTrigger={this.datasourceDeleteTrigger}\n          datasourceId={datasourceId}\n          pageId={pageId}\n        />\n        {this.renderSaveDisacardModal()}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState, props: any): ReduxStateProps => {\n  const datasourceId = props.datasourceId ?? props.match?.params?.datasourceId;\n  const { datasourcePane } = state.ui;\n  const { datasources, plugins } = state.entities;\n  const viewMode = isDatasourceInViewMode(state);\n  const datasource = getDatasource(state, datasourceId);\n  const { formConfigs } = plugins;\n  const formData = getFormValues(DATASOURCE_DB_FORM)(state) as Datasource;\n  const pluginId = get(datasource, \"pluginId\", \"\");\n  const plugin = getPlugin(state, pluginId);\n  const { applicationSlug, pageSlug } = selectURLSlugs(state);\n  const formName =\n    plugin?.type === \"API\" ? DATASOURCE_REST_API_FORM : DATASOURCE_DB_FORM;\n  const isFormDirty =\n    datasourceId === TEMP_DATASOURCE_ID ? true : isDirty(formName)(state);\n  const initialValue = getFormInitialValues(formName)(state) as Datasource;\n  const defaultKeyValueArrayConfig = datasourcePane?.defaultKeyValueArrayConfig as any;\n\n  return {\n    datasourceId,\n    pluginImages: getPluginImages(state),\n    formData,\n    fromImporting: props.fromImporting ?? false,\n    pluginId,\n    isSaving: datasources.loading,\n    isDeleting: !!datasource?.isDeleting,\n    isTesting: datasources.isTesting,\n    formConfig: formConfigs[pluginId] || [],\n    isNewDatasource: datasourcePane.newDatasource === TEMP_DATASOURCE_ID,\n    pageId: props.pageId ?? props.match?.params?.pageId,\n    viewMode: viewMode ?? !props.fromImporting,\n    pluginType: plugin?.type ?? \"\",\n    pluginDatasourceForm:\n      plugin?.datasourceComponent ?? DatasourceComponentTypes.AutoForm,\n    pluginPackageName: plugin?.packageName ?? \"\",\n    applicationId: props.applicationId ?? getCurrentApplicationId(state),\n    applicationSlug,\n    pageSlug,\n    isDatasourceBeingSaved: datasources.isDatasourceBeingSaved,\n    triggerSave: datasources.isDatasourceBeingSavedFromPopup,\n    isFormDirty,\n    datasource,\n    defaultKeyValueArrayConfig,\n    initialValue,\n  };\n};\n\nconst mapDispatchToProps = (\n  dispatch: any,\n  ownProps: any,\n): DatasourcePaneFunctions => ({\n  switchDatasource: (id: string) => {\n    // on reconnect data modal, it shouldn't be redirected to datasource edit page\n    dispatch(switchDatasource(id, ownProps.fromImporting));\n  },\n  setDatasourceViewMode: (viewMode: boolean) =>\n    dispatch(setDatasourceViewMode(viewMode)),\n  openOmnibarReadMore: (text: string) => {\n    dispatch(setGlobalSearchQuery(text));\n    dispatch(toggleShowGlobalSearchModal());\n  },\n  discardTempDatasource: () => dispatch(removeTempDatasource()),\n  deleteTempDSFromDraft: () => dispatch(deleteTempDSFromDraft()),\n  toggleSaveActionFlag: (flag) => dispatch(toggleSaveActionFlag(flag)),\n  toggleSaveActionFromPopupFlag: (flag) =>\n    dispatch(toggleSaveActionFromPopupFlag(flag)),\n  createTempDatasource: (data: any) =>\n    dispatch(createTempDatasourceFromForm(data)),\n  resetDefaultKeyValPairFlag: () => dispatch(resetDefaultKeyValPairFlag()),\n  initializeFormWithDefaults: (pluginType: string) =>\n    dispatch(initializeDatasourceFormDefaults(pluginType)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DatasourceEditorRouter);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Size, Category } from \"design-system-old\";\nimport PageUnavailableImage from \"assets/images/invalid-page.png\";\nimport {\n  PAGE_NOT_FOUND_ERROR,\n  INVALID_URL_ERROR,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  align-items: center;\n  justify-content: flex-start;\n  padding-top: 15%;\n  background: #fcfcfc;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n\n  .page-details {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 450px;\n  }\n\n  .bold-text {\n    font-weight: ${(props) => props.theme.fontWeights[3]};\n    font-size: 24px;\n    margin-top: 20px;\n  }\n\n  .page-message {\n    margin-top: 14px;\n    color: #716e6e;\n    font-size: 14px;\n    line-height: 17px;\n    letter-spacing: 0.733333px;\n  }\n\n  .page-unavailable-img {\n    width: 72px;\n  }\n\n  .button-position {\n    margin-top: 14px;\n  }\n`;\n\ntype Props = {\n  goBackFn?: () => void; // custom function for returning to any declared route.\n};\n\nfunction EntityNotFoundPane(props: Props) {\n  const history = useHistory();\n  return (\n    <Wrapper>\n      <img\n        alt=\"Page Unavailable\"\n        className=\"page-unavailable-img\"\n        src={PageUnavailableImage}\n      />\n      <div className=\"page-details\">\n        <p className=\"bold-text\">{createMessage(INVALID_URL_ERROR)}</p>\n        <p className=\"page-message\">{createMessage(PAGE_NOT_FOUND_ERROR)}</p>\n        <p>Pathname: {history.location.pathname}</p>\n        <p>Search: {history.location.search}</p>\n        <p>Hash: {history.location.hash}</p>\n        <p>Action: {history.action}</p>\n        <Button\n          category={Category.secondary}\n          className=\"button-position\"\n          cypressSelector=\"t--invalid-page-go-back\"\n          onClick={props.goBackFn ? props.goBackFn : history.goBack}\n          size={Size.large}\n          tag=\"button\"\n          text=\"Go Back\"\n        />\n      </div>\n    </Wrapper>\n  );\n}\n\nexport default EntityNotFoundPane;\n","import { AppState } from \"@appsmith/reducers\";\nimport { redirectAuthorizationCode } from \"actions/datasourceActions\";\nimport { CalloutV2 } from \"design-system-old\";\nimport { Datasource } from \"entities/Datasource\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPluginTypeFromDatasourceId } from \"selectors/entitiesSelector\";\nimport styled from \"styled-components\";\n\nconst StyledAuthMessage = styled.div`\n  max-width: 560px;\n  margin-bottom: 16px;\n  & > div {\n    margin: 0;\n  }\n`;\n\ntype AuthMessageProps = {\n  // We can handle for other action types as well eg. save, delete etc.\n  actionType?: \"authorize\";\n  datasource: Datasource;\n  description: string;\n  pageId?: string;\n  style?: any;\n};\n\nexport default function AuthMessage(props: AuthMessageProps) {\n  const { actionType, datasource, description, pageId, style = {} } = props;\n  const dispatch = useDispatch();\n  const pluginType = useSelector((state: AppState) =>\n    getPluginTypeFromDatasourceId(state, datasource.id),\n  );\n  const handleOauthAuthorization: any = () => {\n    if (!pluginType || !pageId) return;\n    dispatch(redirectAuthorizationCode(pageId, datasource.id, pluginType));\n  };\n\n  const extraInfo: Partial<React.ComponentProps<typeof CalloutV2>> = {};\n\n  if (actionType === \"authorize\") {\n    extraInfo.actionLabel = \"Authorize Datasource\";\n    extraInfo.onClick = handleOauthAuthorization;\n  }\n\n  return (\n    <StyledAuthMessage style={style}>\n      <CalloutV2 desc={description} type=\"Warning\" {...extraInfo} />\n    </StyledAuthMessage>\n  );\n}\n","import React from \"react\";\nimport _, { merge } from \"lodash\";\nimport { DATASOURCE_SAAS_FORM } from \"@appsmith/constants/forms\";\nimport FormTitle from \"pages/Editor/DataSourceEditor/FormTitle\";\nimport { Category } from \"design-system-old\";\nimport { Datasource } from \"entities/Datasource\";\nimport {\n  getFormValues,\n  InjectedFormProps,\n  isDirty,\n  reduxForm,\n} from \"redux-form\";\nimport { RouteComponentProps } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"@appsmith/reducers\";\nimport {\n  getDatasource,\n  getPluginImages,\n  getDatasourceFormButtonConfig,\n  getPlugin,\n} from \"selectors/entitiesSelector\";\nimport { ActionDataState } from \"reducers/entityReducers/actionsReducer\";\nimport {\n  ActionWrapper,\n  EditDatasourceButton,\n  FormTitleContainer,\n  Header,\n  JSONtoForm,\n  JSONtoFormProps,\n  PluginImage,\n} from \"../DataSourceEditor/JSONtoForm\";\nimport { getConfigInitialValues } from \"components/formControls/utils\";\nimport Connected from \"../DataSourceEditor/Connected\";\n\nimport {\n  getCurrentApplicationId,\n  getPagePermissions,\n} from \"selectors/editorSelectors\";\nimport DatasourceAuth from \"pages/common/datasourceAuth\";\nimport EntityNotFoundPane from \"../EntityNotFoundPane\";\nimport { saasEditorDatasourceIdURL } from \"RouteBuilder\";\nimport NewActionButton from \"../DataSourceEditor/NewActionButton\";\nimport { Plugin } from \"api/PluginApi\";\nimport { isDatasourceAuthorizedForQueryCreation } from \"utils/editorContextUtils\";\nimport { PluginPackageName } from \"entities/Action\";\nimport AuthMessage from \"pages/common/datasourceAuth/AuthMessage\";\nimport { isDatasourceInViewMode } from \"selectors/ui\";\nimport {\n  hasCreateDatasourceActionPermission,\n  hasManageDatasourcePermission,\n} from \"@appsmith/utils/permissionHelpers\";\nimport { TEMP_DATASOURCE_ID } from \"constants/Datasource\";\nimport {\n  createTempDatasourceFromForm,\n  deleteTempDSFromDraft,\n  removeTempDatasource,\n  setDatasourceViewMode,\n  toggleSaveActionFlag,\n  toggleSaveActionFromPopupFlag,\n} from \"actions/datasourceActions\";\nimport SaveOrDiscardDatasourceModal from \"../DataSourceEditor/SaveOrDiscardDatasourceModal\";\nimport {\n  GSHEET_AUTHORIZATION_ERROR,\n  createMessage,\n  SAVE_AND_AUTHORIZE_BUTTON_TEXT,\n} from \"ce/constants/messages\";\nimport { selectFeatureFlags } from \"selectors/usersSelectors\";\n\ninterface StateProps extends JSONtoFormProps {\n  applicationId: string;\n  canManageDatasource?: boolean;\n  canCreateDatasourceActions?: boolean;\n  isSaving: boolean;\n  isDeleting: boolean;\n  loadingFormConfigs: boolean;\n  isNewDatasource: boolean;\n  pluginImage: string;\n  plugin?: Plugin;\n  pluginId: string;\n  actions: ActionDataState;\n  datasource?: Datasource;\n  datasourceButtonConfiguration: string[] | undefined;\n  hiddenHeader?: boolean; // for reconnect modal\n  pageId?: string; // for reconnect modal\n  pluginPackageName: string; // for reconnect modal\n  datasourceName: string;\n  viewMode: boolean;\n  isDatasourceBeingSaved: boolean;\n  isDatasourceBeingSavedFromPopup: boolean;\n  isFormDirty: boolean;\n}\ninterface DatasourceFormFunctions {\n  discardTempDatasource: () => void;\n  deleteTempDSFromDraft: () => void;\n  toggleSaveActionFlag: (flag: boolean) => void;\n  toggleSaveActionFromPopupFlag: (flag: boolean) => void;\n  createTempDatasource: (data: any) => void;\n  setDatasourceViewMode: (viewMode: boolean) => void;\n}\n\ntype DatasourceSaaSEditorProps = StateProps &\n  DatasourceFormFunctions &\n  RouteComponentProps<{\n    datasourceId: string;\n    pageId: string;\n    pluginPackageName: string;\n  }>;\n\ntype Props = DatasourceSaaSEditorProps &\n  InjectedFormProps<Datasource, DatasourceSaaSEditorProps>;\n\n/*\n  **** State Variables Description ****\n  showDialog: flag used to show/hide the datasource discard popup\n  routesBlocked: flag used to identity if routes are blocked or not\n  unblock: on blocking routes using history.block, it returns a function which can be used to unblock the routes\n  navigation: function that navigates to path that we want to transition to, after discard action on datasource discard dialog popup\n*/\ntype State = {\n  showDialog: boolean;\n  routesBlocked: boolean;\n  unblock(): void;\n  navigation(): void;\n};\n\nclass DatasourceSaaSEditor extends JSONtoForm<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      showDialog: false,\n      routesBlocked: false,\n      unblock: () => {\n        return undefined;\n      },\n      navigation: () => {\n        return undefined;\n      },\n    };\n    this.closeDialog = this.closeDialog.bind(this);\n    this.onSave = this.onSave.bind(this);\n    this.onDiscard = this.onDiscard.bind(this);\n    this.datasourceDeleteTrigger = this.datasourceDeleteTrigger.bind(this);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    // update block state when form becomes dirty/view mode is switched on\n    if (prevProps.viewMode !== this.props.viewMode && !this.props.viewMode) {\n      this.blockRoutes();\n    }\n\n    // When save button is clicked in DS form, routes should be unblocked\n    if (this.props.isDatasourceBeingSaved) {\n      this.closeDialogAndUnblockRoutes();\n    }\n  }\n\n  routesBlockFormChangeCallback() {\n    if (this.props.isFormDirty) {\n      if (!this.state.routesBlocked) {\n        this.blockRoutes();\n      }\n    } else {\n      if (this.state.routesBlocked) {\n        this.closeDialogAndUnblockRoutes(true);\n      }\n    }\n  }\n\n  componentDidMount() {\n    // Create Temp Datasource on component mount,\n    // if user hasnt saved datasource for the first time and refreshed the page\n    if (\n      !this.props.datasource &&\n      this.props.match.params.datasourceId === TEMP_DATASOURCE_ID\n    ) {\n      const urlObject = new URL(window.location.href);\n      const pluginId = urlObject?.searchParams.get(\"pluginId\");\n      this.props.createTempDatasource({\n        pluginId,\n      });\n    }\n    if (!this.props.viewMode) {\n      this.blockRoutes();\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.discardTempDatasource();\n    this.props.deleteTempDSFromDraft();\n    !!this.state.unblock && this.state.unblock();\n  }\n\n  closeDialog() {\n    this.setState({ showDialog: false });\n  }\n\n  onSave() {\n    this.props.toggleSaveActionFromPopupFlag(true);\n  }\n\n  blockRoutes() {\n    this.setState({\n      unblock: this.props?.history?.block((tx: any) => {\n        this.setState(\n          {\n            // need to pass in query params as well as state, when user navigates away from ds form page\n            navigation: () =>\n              this.props.history.push(tx.pathname + tx.search, tx.state),\n            showDialog: true,\n            routesBlocked: true,\n          },\n          this.routesBlockFormChangeCallback.bind(this),\n        );\n        return false;\n      }),\n    });\n  }\n\n  onDiscard() {\n    this.closeDialogAndUnblockRoutes();\n    this.state.navigation();\n  }\n\n  closeDialogAndUnblockRoutes(isNavigateBack?: boolean) {\n    this.closeDialog();\n    !!this.state.unblock && this.state.unblock();\n    this.props.toggleSaveActionFlag(false);\n    this.props.toggleSaveActionFromPopupFlag(false);\n    this.setState({ routesBlocked: false });\n    if (isNavigateBack) {\n      this.state.navigation();\n    }\n  }\n\n  datasourceDeleteTrigger() {\n    !!this.state.unblock && this.state.unblock();\n  }\n\n  render() {\n    const { formConfig, pluginId } = this.props;\n    if (!pluginId) {\n      return <EntityNotFoundPane />;\n    }\n    const content = this.renderDataSourceConfigForm(formConfig);\n    return this.renderForm(content);\n  }\n\n  getSanitizedData = () => {\n    return {\n      ...this.normalizeValues(),\n      name: this.props.datasourceName,\n    };\n  };\n\n  renderDataSourceConfigForm = (sections: any) => {\n    const {\n      canCreateDatasourceActions,\n      canManageDatasource,\n      datasource,\n      datasourceButtonConfiguration,\n      datasourceId,\n      formData,\n      hiddenHeader,\n      pageId,\n      plugin,\n      pluginPackageName,\n    } = this.props;\n    const params: string = location.search;\n    const viewMode =\n      !hiddenHeader && new URLSearchParams(params).get(\"viewMode\");\n\n    /* \n      TODO: This flag will be removed once the multiple environment is merged to avoid design inconsistency between different datasources.\n      Search for: GoogleSheetPluginFlag to check for all the google sheet conditional logic throughout the code.\n    */\n    const isGoogleSheetPlugin =\n      plugin?.packageName === PluginPackageName.GOOGLE_SHEETS;\n\n    const isPluginAuthorized =\n      plugin && isDatasourceAuthorizedForQueryCreation(formData, plugin);\n\n    const createFlow = datasourceId === TEMP_DATASOURCE_ID;\n\n    return (\n      <>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n          }}\n        >\n          {!hiddenHeader && (\n            <Header>\n              <FormTitleContainer>\n                <PluginImage alt=\"Datasource\" src={this.props.pluginImage} />\n                <FormTitle\n                  disabled={!createFlow && !canManageDatasource}\n                  focusOnMount={this.props.isNewDatasource}\n                />\n              </FormTitleContainer>\n\n              {viewMode && (\n                <ActionWrapper>\n                  <EditDatasourceButton\n                    category={Category.secondary}\n                    className=\"t--edit-datasource\"\n                    onClick={() => {\n                      this.props.setDatasourceViewMode(false);\n                      this.props.history.replace(\n                        saasEditorDatasourceIdURL({\n                          pageId: pageId || \"\",\n                          pluginPackageName,\n                          datasourceId,\n                          params: {\n                            viewMode: false,\n                          },\n                        }),\n                      );\n                    }}\n                    text=\"EDIT\"\n                  />\n                  {isGoogleSheetPlugin && (\n                    <NewActionButton\n                      datasource={datasource}\n                      disabled={\n                        !canCreateDatasourceActions || !isPluginAuthorized\n                      }\n                      eventFrom=\"datasource-pane\"\n                      plugin={plugin}\n                      style={{\n                        marginLeft: \"16px\",\n                      }}\n                    />\n                  )}\n                </ActionWrapper>\n              )}\n            </Header>\n          )}\n          {(!viewMode || datasourceId === TEMP_DATASOURCE_ID) && (\n            <>\n              {datasource && isGoogleSheetPlugin && !isPluginAuthorized ? (\n                <AuthMessage\n                  datasource={datasource}\n                  description={GSHEET_AUTHORIZATION_ERROR}\n                  pageId={pageId}\n                  style={{\n                    paddingTop: \"24px\",\n                  }}\n                />\n              ) : null}\n              {!_.isNil(sections)\n                ? _.map(sections, this.renderMainSection)\n                : null}\n              {\"\"}\n            </>\n          )}\n          {viewMode && (\n            <Connected\n              errorComponent={\n                datasource && isGoogleSheetPlugin && !isPluginAuthorized ? (\n                  <AuthMessage\n                    actionType=\"authorize\"\n                    datasource={datasource}\n                    description={GSHEET_AUTHORIZATION_ERROR}\n                    pageId={pageId}\n                  />\n                ) : null\n              }\n              showDatasourceSavedText={!isGoogleSheetPlugin}\n            />\n          )}\n          {/* Render datasource form call-to-actions */}\n          {datasource && (\n            <DatasourceAuth\n              datasource={datasource}\n              datasourceButtonConfiguration={datasourceButtonConfiguration}\n              datasourceDeleteTrigger={this.datasourceDeleteTrigger}\n              formData={formData}\n              getSanitizedFormData={_.memoize(this.getSanitizedData)}\n              isInvalid={this.validate()}\n              pageId={pageId}\n              shouldDisplayAuthMessage={!isGoogleSheetPlugin}\n              shouldRender={!viewMode}\n              triggerSave={this.props.isDatasourceBeingSavedFromPopup}\n            />\n          )}\n        </form>\n        <SaveOrDiscardDatasourceModal\n          datasourceId={datasourceId}\n          datasourcePermissions={datasource?.userPermissions || []}\n          isOpen={this.state.showDialog}\n          onClose={this.closeDialog}\n          onDiscard={this.onDiscard}\n          onSave={this.onSave}\n          saveButtonText={createMessage(SAVE_AND_AUTHORIZE_BUTTON_TEXT)}\n        />\n      </>\n    );\n  };\n}\n\nconst mapStateToProps = (state: AppState, props: any) => {\n  const datasourceId = props.datasourceId || props.match?.params?.datasourceId;\n  const { datasourcePane } = state.ui;\n  const { datasources, plugins } = state.entities;\n  const viewMode = isDatasourceInViewMode(state);\n  const datasource = getDatasource(state, datasourceId);\n  const { formConfigs } = plugins;\n  const formData = getFormValues(DATASOURCE_SAAS_FORM)(state) as Datasource;\n  const pluginId = _.get(datasource, \"pluginId\", \"\");\n  const plugin = getPlugin(state, pluginId);\n  const formConfig = formConfigs[pluginId];\n  const initialValues = {};\n  if (formConfig) {\n    merge(initialValues, getConfigInitialValues(formConfig));\n  }\n  merge(initialValues, datasource);\n\n  const datasourceButtonConfiguration = getDatasourceFormButtonConfig(\n    state,\n    formData?.pluginId,\n  );\n  const isFormDirty =\n    datasourceId === TEMP_DATASOURCE_ID\n      ? true\n      : isDirty(DATASOURCE_SAAS_FORM)(state);\n\n  const datasourcePermissions = datasource?.userPermissions || [];\n\n  const canManageDatasource = hasManageDatasourcePermission(\n    datasourcePermissions,\n  );\n\n  const pagePermissions = getPagePermissions(state);\n  const canCreateDatasourceActions = hasCreateDatasourceActionPermission([\n    ...datasourcePermissions,\n    ...pagePermissions,\n  ]);\n\n  return {\n    datasource,\n    datasourceButtonConfiguration,\n    datasourceId,\n    isSaving: datasources.loading,\n    isDeleting: !!datasource?.isDeleting,\n    formData: formData,\n    formConfig,\n    viewMode: viewMode ?? !props.fromImporting,\n    isNewDatasource: datasourcePane.newDatasource === TEMP_DATASOURCE_ID,\n    pageId: props.pageId || props.match?.params?.pageId,\n    plugin: plugin,\n    pluginImage: getPluginImages(state)[pluginId],\n    pluginPackageName:\n      props.pluginPackageName || props.match?.params?.pluginPackageName,\n    initialValues,\n    pluginId: pluginId,\n    actions: state.entities.actions,\n    formName: DATASOURCE_SAAS_FORM,\n    applicationId: getCurrentApplicationId(state),\n    canManageDatasource: canManageDatasource,\n    datasourceName: datasource?.name ?? \"\",\n    isDatasourceBeingSaved: datasources.isDatasourceBeingSaved,\n    isDatasourceBeingSavedFromPopup:\n      state.entities.datasources.isDatasourceBeingSavedFromPopup,\n    isFormDirty,\n    canCreateDatasourceActions,\n    featureFlags: selectFeatureFlags(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DatasourceFormFunctions => ({\n  discardTempDatasource: () => dispatch(removeTempDatasource()),\n  deleteTempDSFromDraft: () => dispatch(deleteTempDSFromDraft()),\n  toggleSaveActionFlag: (flag) => dispatch(toggleSaveActionFlag(flag)),\n  toggleSaveActionFromPopupFlag: (flag) =>\n    dispatch(toggleSaveActionFromPopupFlag(flag)),\n  setDatasourceViewMode: (viewMode: boolean) =>\n    dispatch(setDatasourceViewMode(viewMode)),\n  createTempDatasource: (data: any) =>\n    dispatch(createTempDatasourceFromForm(data)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(\n  reduxForm<Datasource, DatasourceSaaSEditorProps>({\n    form: DATASOURCE_SAAS_FORM,\n    enableReinitialize: true,\n  })(DatasourceSaaSEditor),\n);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Theme } from \"constants/DefaultTheme\";\nimport { getTypographyByKey, TabProp } from \"design-system-old\";\nimport { Colors } from \"constants/Colors\";\n\ntype WrapperProps = {\n  selected: boolean;\n  vertical: boolean;\n  theme: Theme;\n};\n\nconst getSelectedStyles = (props: WrapperProps) =>\n  props.selected\n    ? `color: ${props.theme.colors.tabItemBackgroundFill.highlightTextColor};\n      font-weight: 500;\n      border-bottom: 2px solid var(--ads-color-brand);\n\n     `\n    : `color: ${Colors.GREY_7}\n      `;\n\nconst Wrapper = styled.div<WrapperProps>`\n  display: flex;\n  ${getTypographyByKey(\"p0\")};\n  ${(props) => getSelectedStyles(props)};\n\n  &:hover,\n  &:focus {\n    color: ${(props) =>\n      props.theme.colors.tabItemBackgroundFill.highlightTextColor};\n  }\n\n  padding: ${(props) => `${props.theme.spaces[5]}px 0px`};\n\n  width: 100%;\n\n  align-items: center;\n`;\n\nexport default function TabItem(props: {\n  tab: TabProp;\n  selected: boolean;\n  vertical: boolean;\n}) {\n  const { selected, tab, vertical } = props;\n  return (\n    <Wrapper key={tab.title} selected={selected} vertical={vertical}>\n      {tab.title}\n    </Wrapper>\n  );\n}\n","import React from \"react\";\nimport { TabComponent } from \"design-system-old\";\nimport styled from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\nimport TabItem from \"./components/TabItem\";\n\ntype Props = {\n  activeTabIndex: number;\n  onSelect: (index: number) => void;\n  options: Array<{ key: string; title: string }>;\n};\n\nconst TabWrapper = styled.div`\n  .react-tabs {\n    border-bottom: 1px solid ${Colors.ALTO2};\n  }\n  .react-tabs__tab {\n    margin-right: 0px;\n    padding-right: ${(props) => props.theme.spaces[8]}px;\n  }\n`;\n\nexport default function Menu(props: Props) {\n  return (\n    <TabWrapper>\n      <TabComponent\n        onSelect={props.onSelect}\n        selectedIndex={props.activeTabIndex || 0}\n        tabItemComponent={TabItem}\n        tabs={props.options}\n      />\n    </TabWrapper>\n  );\n}\n","import { Icon, IconSize, Text, TextType } from \"design-system-old\";\nimport { Colors } from \"constants/Colors\";\nimport { Datasource } from \"entities/Datasource\";\nimport { PluginImage } from \"pages/Editor/DataSourceEditor/JSONtoForm\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst ListItem = styled.div<{ disabled?: boolean }>`\n  display: flex;\n  height: 64px;\n  width: 100%;\n  padding: 10px 18px;\n  margin-bottom: 10px;\n  cursor: pointer;\n  opacity: ${(props) => (props.disabled ? 0.4 : 1)};\n  &.active,\n  &:hover {\n    background-color: ${Colors.GEYSER_LIGHT};\n  }\n  img {\n    width: 24pxx;\n    height: 22.5px;\n  }\n`;\n\nconst ListLabels = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst DsTitle = styled.div`\n  width: 100%;\n  display: flex;\n  margin-bottom: ${(props) => props.theme.spaces[1]}px;\n  .t--ds-list-title {\n    max-width: 120px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  .cs-icon {\n    margin-left: ${(props) => props.theme.spaces[2]}px;\n  }\n`;\n\nfunction ListItemWrapper(props: {\n  ds: Datasource;\n  selected?: boolean;\n  plugin: {\n    image: string;\n    name: string;\n  };\n  onClick: (ds: Datasource) => void;\n}) {\n  const { ds, onClick, plugin, selected } = props;\n  return (\n    <ListItem\n      className={`t--ds-list ${selected ? \"active\" : \"\"}`}\n      onClick={() => onClick(ds)}\n    >\n      <PluginImage alt=\"Datasource\" src={plugin.image} />\n      <ListLabels>\n        <DsTitle>\n          <Text\n            className=\"t--ds-list-title\"\n            color={Colors.GRAY_800}\n            type={TextType.H4}\n          >\n            {ds.name}\n          </Text>\n          <Icon\n            fillColor={ds.isConfigured ? Colors.GREEN : Colors.ERROR_RED}\n            name={ds.isConfigured ? \"oval-check\" : \"info\"}\n            size={IconSize.MEDIUM}\n          />\n        </DsTitle>\n        <Text color={Colors.GRAY_700} type={TextType.H5}>\n          {plugin.name}\n        </Text>\n      </ListLabels>\n    </ListItem>\n  );\n}\n\nexport default ListItemWrapper;\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport {\n  getImportedApplication,\n  getIsDatasourceConfigForImportFetched,\n  getWorkspaceIdForImport,\n  getUserApplicationsWorkspacesList,\n  getPageIdForImport,\n} from \"selectors/applicationSelectors\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TabMenu from \"./Menu\";\nimport { Classes, MENU_HEIGHT } from \"./constants\";\nimport {\n  Button,\n  Category,\n  DialogComponent as Dialog,\n  Icon,\n  IconSize,\n  Size,\n  Toaster,\n  Text,\n  TextType,\n  TooltipComponent,\n  Variant,\n} from \"design-system-old\";\nimport { Colors } from \"constants/Colors\";\n\nimport styled, { useTheme } from \"styled-components\";\nimport { get } from \"lodash\";\nimport { Title } from \"./components/StyledComponents\";\nimport {\n  createMessage,\n  OAUTH_AUTHORIZATION_APPSMITH_ERROR,\n  OAUTH_AUTHORIZATION_FAILED,\n  RECONNECT_DATASOURCE_SUCCESS_MESSAGE1,\n  RECONNECT_DATASOURCE_SUCCESS_MESSAGE2,\n  RECONNECT_MISSING_DATASOURCE_CREDENTIALS,\n  RECONNECT_MISSING_DATASOURCE_CREDENTIALS_DESCRIPTION,\n  SKIP_TO_APPLICATION,\n  SKIP_TO_APPLICATION_TOOLTIP_DESCRIPTION,\n} from \"@appsmith/constants/messages\";\nimport {\n  getDatasourceLoading,\n  getIsDatasourceTesting,\n  getIsListing,\n  getIsReconnectingDatasourcesModalOpen,\n  getPluginImages,\n  getPluginNames,\n  getUnconfiguredDatasources,\n} from \"selectors/entitiesSelector\";\nimport {\n  initDatasourceConnectionDuringImportRequest,\n  resetDatasourceConfigForImportFetchedFlag,\n  setIsReconnectingDatasourcesModalOpen,\n  setPageIdForImport,\n  setWorkspaceIdForImport,\n} from \"actions/applicationActions\";\nimport { AuthType, Datasource } from \"entities/Datasource\";\nimport DatasourceForm from \"../DataSourceEditor\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { useQuery } from \"../utils\";\nimport ListItemWrapper from \"./components/DatasourceListItem\";\nimport { getDefaultPageId } from \"sagas/ApplicationSagas\";\nimport { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport { getOAuthAccessToken } from \"actions/datasourceActions\";\nimport { builderURL } from \"RouteBuilder\";\nimport localStorage from \"utils/localStorage\";\nimport { Theme } from \"constants/DefaultTheme\";\n\nconst Container = styled.div`\n  height: 765px;\n  max-height: 82vh;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  overflow-y: hidden;\n  padding: 0px 10px 0px 0px;\n`;\n\nconst Section = styled.div`\n  margin-bottom: ${(props) => props.theme.spaces[11]}px;\n  width: calc(100% - 206px);\n`;\n\nconst BodyContainer = styled.div`\n  flex: 3;\n  height: calc(100% - ${MENU_HEIGHT}px);\n  padding-left: ${(props) => props.theme.spaces[8]}px;\n`;\n\nconst TabsContainer = styled.div`\n  height: ${MENU_HEIGHT}px;\n  padding-left: ${(props) => props.theme.spaces[8]}px;\n\n  .react-tabs {\n    width: 1029px;\n  }\n`;\n\nconst ContentWrapper = styled.div`\n  height: calc(100% - 96px);\n  display: flex;\n  margin-left: -${(props) => props.theme.spaces[8]}px;\n\n  .t--json-to-form-wrapper {\n    width: 100%;\n\n    .t--json-to-form-body {\n      padding: 0 20px;\n      .t--collapse-section-container {\n        margin-top: 20px;\n      }\n    }\n\n    .t--close-editor {\n      display: none;\n    }\n\n    div[class^=\"JSONtoForm__DBForm-\"] {\n      padding-top: 0px;\n\n      div[class^=\"JSONtoForm__SaveButtonContainer-\"] {\n        button:first-child {\n          display: none;\n        }\n      }\n    }\n\n    .t--collapse-top-border {\n      height: 1px;\n      margin-top: ${(props) => props.theme.spaces[10]}px;\n      margin-bottom: ${(props) => props.theme.spaces[10]}px;\n\n      &:first-child {\n        display: none;\n      }\n    }\n\n    .t--collapse-section-container {\n      width: 816px;\n\n      & > div {\n        color: ${Colors.BLACK};\n      }\n    }\n\n    .label-icon-wrapper div[class^=\"IconConstants__IconWrapper-\"] {\n      width: 12px;\n      height: 14px;\n      margin-left: 6px;\n      margin-right: 6px;\n\n      svg {\n        width: 12px;\n        height: 14px;\n\n        path {\n          fill: ${Colors.GREEN};\n        }\n      }\n    }\n\n    div > label[class^=\"StyledFormComponents__StyledFormLabel-\"] {\n      &:last-child {\n        width: 140px !important;\n      }\n    }\n  }\n\n  .t--message-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n  }\n`;\n\nconst ListContainer = styled.div`\n  height: 100%;\n  overflow: auto;\n  width: 206px;\n\n  .t--collapse-top-border {\n    display: none;\n  }\n\n  .t--collapse-section-container {\n    width: 90%;\n    margin-left: 5%;\n    margin-bottom: ${(props) => props.theme.spaces[11] + 2}px;\n\n    & > div {\n      font-style: normal;\n      font-weight: normal;\n      font-size: 12px;\n      line-height: 16px;\n      color: ${Colors.BLACK};\n    }\n  }\n`;\n\nconst Message = styled.div`\n  font-size: ${(props) => props.theme.typography[\"p0\"].fontSize}px;\n  line-height: ${(props) => props.theme.typography[\"p0\"].lineHeight}px;\n  letter-spacing: ${(props) => props.theme.typography[\"p0\"].letterSpacing}px;\n  color: ${Colors.GREY_9};\n  text-align: center;\n  margin-bottom: ${(props) => props.theme.spaces[7]}px;\n`;\n\nconst CloseBtnContainer = styled.div`\n  position: absolute;\n  right: ${(props) => props.theme.spaces[1]}px;\n  top: ${(props) => -props.theme.spaces[4]}px;\n\n  padding: ${(props) => props.theme.spaces[1]}px;\n  border-radius: ${(props) => props.theme.radii[1]}px;\n`;\n\nconst SkipToAppButtonWrapper = styled.div`\n  position: absolute;\n  right: 0px;\n  top: ${(props) => props.theme.spaces[11]}px;\n\n  padding: ${(props) =>\n    `${props.theme.spaces[3]}px ${props.theme.spaces[7] - 1}px`};\n`;\n\nconst TooltipWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 320px;\n`;\n\nconst DBFormWrapper = styled.div`\n  width: calc(100% - 206px);\n  overflow: auto;\n\n  div[class^=\"RestAPIDatasourceForm__RestApiForm-\"] {\n    padding-top: 0px;\n    height: 100%;\n  }\n\n  .t--delete-datasource {\n    display: none;\n  }\n`;\n\nenum AuthorizationStatus {\n  SUCCESS = \"success\",\n  APPSMITH_ERROR = \"appsmith_error\",\n}\n\nfunction TooltipContent() {\n  return (\n    <TooltipWrapper>\n      <Text\n        color={Colors.WHITE}\n        style={{ marginBottom: \"4px\" }}\n        type={TextType.P3}\n      >\n        {createMessage(SKIP_TO_APPLICATION)}\n      </Text>\n      <Text color={Colors.WHITE} type={TextType.P3}>\n        {createMessage(SKIP_TO_APPLICATION_TOOLTIP_DESCRIPTION)}\n      </Text>\n    </TooltipWrapper>\n  );\n}\n\nfunction SuccessMessages() {\n  return (\n    <Section className=\"t--message-container\">\n      <Message>{createMessage(RECONNECT_DATASOURCE_SUCCESS_MESSAGE1)}</Message>\n      <Message>{createMessage(RECONNECT_DATASOURCE_SUCCESS_MESSAGE2)}</Message>\n    </Section>\n  );\n}\n\nfunction ReconnectDatasourceModal() {\n  const theme = useTheme() as Theme;\n  const dispatch = useDispatch();\n  const isModalOpen = useSelector(getIsReconnectingDatasourcesModalOpen);\n  const workspaceId = useSelector(getWorkspaceIdForImport);\n  const pageIdForImport = useSelector(getPageIdForImport);\n  const datasources = useSelector(getUnconfiguredDatasources);\n  const pluginImages = useSelector(getPluginImages);\n  const pluginNames = useSelector(getPluginNames);\n  const isLoading = useSelector(getIsListing);\n  const isDatasourceTesting = useSelector(getIsDatasourceTesting);\n  const isDatasourceUpdating = useSelector(getDatasourceLoading);\n\n  // checking refresh modal\n  const pendingApp = JSON.parse(\n    localStorage.getItem(\"importedAppPendingInfo\") || \"null\",\n  );\n  // getting query from redirection url\n  const userWorkspaces = useSelector(getUserApplicationsWorkspacesList);\n  const queryParams = useQuery();\n  const queryAppId =\n    queryParams.get(\"appId\") || (pendingApp ? pendingApp.appId : null);\n  const queryPageId =\n    queryParams.get(\"pageId\") || (pendingApp ? pendingApp.pageId : null);\n  const queryDatasourceId =\n    queryParams.get(\"datasourceId\") ||\n    (pendingApp ? pendingApp.datasourceId : null);\n  const queryIsImport =\n    queryParams.get(\"importForGit\") === \"true\" || !!pendingApp;\n\n  const [selectedDatasourceId, setSelectedDatasourceId] = useState<\n    string | null\n  >(queryDatasourceId);\n  const [pageId, setPageId] = useState<string | null>(queryPageId);\n  const [appId, setAppId] = useState<string | null>(queryAppId);\n  const [appURL, setAppURL] = useState(\"\");\n  const [datasource, setDatasource] = useState<Datasource | null>(null);\n  const [isImport, setIsImport] = useState(queryIsImport);\n  const [isTesting, setIsTesting] = useState(false);\n  const queryDS = datasources.find((ds) => ds.id === queryDatasourceId);\n  const dsName = queryDS?.name;\n  const orgId = queryDS?.workspaceId;\n  let pluginName = \"\";\n  if (!!queryDS?.pluginId) {\n    pluginName = pluginNames[queryDS.pluginId];\n  }\n\n  // when redirecting from oauth, processing the status\n  if (isImport) {\n    setIsImport(false);\n    const status = queryParams.get(\"response_status\");\n    const display_message = queryParams.get(\"display_message\");\n    const variant = Variant.danger;\n\n    if (status !== AuthorizationStatus.SUCCESS) {\n      const message =\n        status === AuthorizationStatus.APPSMITH_ERROR\n          ? OAUTH_AUTHORIZATION_APPSMITH_ERROR\n          : OAUTH_AUTHORIZATION_FAILED;\n      Toaster.show({ text: display_message || message, variant });\n      const oAuthStatus = status;\n      AnalyticsUtil.logEvent(\"UPDATE_DATASOURCE\", {\n        dsName,\n        oAuthStatus,\n        orgId,\n        pluginName,\n      });\n    } else if (queryDatasourceId) {\n      dispatch(getOAuthAccessToken(queryDatasourceId));\n    }\n    AnalyticsUtil.logEvent(\"DATASOURCE_AUTH_COMPLETE\", {\n      queryAppId,\n      queryDatasourceId,\n      queryPageId,\n    });\n  }\n\n  // should open reconnect datasource modal\n  useEffect(() => {\n    if (userWorkspaces && queryIsImport && queryDatasourceId) {\n      if (queryAppId) {\n        for (const ws of userWorkspaces) {\n          const { applications, workspace } = ws;\n          const application = applications.find(\n            (app: any) => app.id === queryAppId,\n          );\n          if (application) {\n            dispatch(setWorkspaceIdForImport(workspace.id));\n            dispatch(setIsReconnectingDatasourcesModalOpen({ isOpen: true }));\n            const defaultPageId = getDefaultPageId(application.pages);\n            if (pageIdForImport) {\n              setPageId(pageIdForImport);\n            } else if (defaultPageId) {\n              setPageId(defaultPageId);\n            }\n            if (!datasources.length) {\n              dispatch({\n                type: ReduxActionTypes.FETCH_UNCONFIGURED_DATASOURCE_LIST,\n                payload: {\n                  applicationId: appId,\n                  workspaceId: workspace.id,\n                },\n              });\n            }\n            break;\n          }\n        }\n      }\n    }\n  }, [userWorkspaces, queryIsImport]);\n\n  const isConfigFetched = useSelector(getIsDatasourceConfigForImportFetched);\n\n  // todo uncomment this to fetch datasource config\n  useEffect(() => {\n    if (isModalOpen && workspaceId) {\n      dispatch(\n        initDatasourceConnectionDuringImportRequest(workspaceId as string),\n      );\n    }\n  }, [workspaceId, isModalOpen]);\n\n  useEffect(() => {\n    if (isModalOpen) {\n      // while updating datasource, testing flag should be false\n      if (isDatasourceUpdating) {\n        setIsTesting(false);\n      }\n      // while testing datasource, testing flag should be true\n      if (isDatasourceTesting) {\n        setIsTesting(true);\n      }\n    }\n  }, [isModalOpen, isDatasourceTesting, isDatasourceUpdating]);\n\n  const handleClose = useCallback(() => {\n    localStorage.setItem(\"importedAppPendingInfo\", \"null\");\n    dispatch(setIsReconnectingDatasourcesModalOpen({ isOpen: false }));\n    dispatch(setWorkspaceIdForImport(\"\"));\n    dispatch(setPageIdForImport(\"\"));\n    dispatch(resetDatasourceConfigForImportFetchedFlag());\n    setSelectedDatasourceId(\"\");\n  }, [dispatch, setIsReconnectingDatasourcesModalOpen, isModalOpen]);\n\n  const onSelectDatasource = useCallback((ds: Datasource) => {\n    setIsTesting(false);\n    setSelectedDatasourceId(ds.id);\n    setDatasource(ds);\n    AnalyticsUtil.logEvent(\"RECONNECTING_DATASOURCE_ITEM_CLICK\", {\n      id: ds.id,\n      name: ds.name,\n      pluginName: pluginNames[ds.id],\n      isConfigured: ds.isConfigured,\n    });\n  }, []);\n\n  useEffect(() => {\n    if (\n      isConfigFetched &&\n      datasources &&\n      !selectedDatasourceId &&\n      !queryIsImport\n    ) {\n      setDatasource(datasources[0]);\n      setSelectedDatasourceId(datasources[0].id ?? \"\");\n    }\n  }, [isConfigFetched, selectedDatasourceId, queryIsImport]);\n\n  const menuOptions = [\n    {\n      key: \"RECONNECT_DATASOURCES\",\n      title: \"Reconnect Datasources\",\n    },\n  ];\n\n  const importedApplication = useSelector(getImportedApplication);\n  useEffect(() => {\n    if (!queryIsImport) {\n      // @ts-expect-error: importedApplication is of type unknown\n      const defaultPage = importedApplication?.pages?.find(\n        (page: any) => page.isDefault,\n      );\n      if (defaultPage) {\n        setPageId(defaultPage.id);\n        // @ts-expect-error: importedApplication is of type unknown\n        setAppId(importedApplication?.id);\n      }\n    }\n  }, [importedApplication, queryIsImport]);\n\n  useEffect(() => {\n    if (pageId && appId && datasources.length) {\n      // TODO: Update route params here\n      setAppURL(\n        builderURL({\n          pageId: pageId,\n        }),\n      );\n    }\n  }, [pageId, appId, datasources]);\n\n  // checking of full configured\n  useEffect(() => {\n    if (isModalOpen && !isTesting) {\n      // if selected datasource is gsheet datasource, it shouldn't be redirected to app immediately\n      if (queryParams.get(\"importForGit\") !== \"true\" && datasources.length) {\n        const selectedDS = datasources.find(\n          (ds: Datasource) => ds.id === selectedDatasourceId,\n        );\n        if (selectedDS) {\n          const authType =\n            selectedDS.datasourceConfiguration?.authentication\n              ?.authenticationType;\n\n          if (authType === AuthType.OAUTH2) return;\n        }\n      }\n      const id = selectedDatasourceId;\n      const pending = datasources.filter((ds: Datasource) => !ds.isConfigured);\n      if (pending.length > 0) {\n        let next: Datasource | undefined = undefined;\n        if (id) {\n          const index = datasources.findIndex((ds: Datasource) => ds.id === id);\n          if (index > -1 && !datasources[index].isConfigured) {\n            return;\n          }\n          next = datasources\n            .slice(index + 1)\n            .find((ds: Datasource) => !ds.isConfigured);\n        }\n        next = next || pending[0];\n        setSelectedDatasourceId(next.id);\n        setDatasource(next);\n        // when refresh, it should be opened.\n        const appInfo = {\n          appId: appId,\n          pageId: pageId,\n          datasourceId: next.id,\n        };\n        localStorage.setItem(\"importedAppPendingInfo\", JSON.stringify(appInfo));\n      } else if (appURL) {\n        // open application import successfule\n        localStorage.setItem(\"importApplicationSuccess\", \"true\");\n        localStorage.setItem(\"importedAppPendingInfo\", \"null\");\n        window.open(appURL, \"_self\");\n      }\n    }\n  }, [datasources, appURL, isModalOpen, isTesting, queryIsImport]);\n\n  const mappedDataSources = datasources.map((ds: Datasource) => {\n    return (\n      <ListItemWrapper\n        ds={ds}\n        key={ds.id}\n        onClick={() => {\n          onSelectDatasource(ds);\n        }}\n        plugin={{\n          name: pluginNames[ds.pluginId],\n          image: pluginImages[ds.pluginId],\n        }}\n        selected={ds.id === selectedDatasourceId}\n      />\n    );\n  });\n\n  const shouldShowDBForm =\n    isConfigFetched && !isLoading && !datasource?.isConfigured;\n\n  return (\n    <Dialog\n      canEscapeKeyClose\n      canOutsideClickClose\n      className={Classes.RECONNECT_DATASOURCE_MODAL}\n      isOpen={isModalOpen}\n      maxWidth={\"1300px\"}\n      onClose={handleClose}\n      width={\"1293px\"}\n    >\n      <Container>\n        <TabsContainer>\n          <TabMenu\n            activeTabIndex={0}\n            onSelect={() => undefined}\n            options={menuOptions}\n          />\n        </TabsContainer>\n        <BodyContainer>\n          <Title>\n            {createMessage(RECONNECT_MISSING_DATASOURCE_CREDENTIALS)}\n          </Title>\n          <Section>\n            <Text color={Colors.BLACK} type={TextType.P1}>\n              {createMessage(\n                RECONNECT_MISSING_DATASOURCE_CREDENTIALS_DESCRIPTION,\n              )}\n            </Text>\n          </Section>\n          <ContentWrapper>\n            <ListContainer>{mappedDataSources}</ListContainer>\n            {shouldShowDBForm && (\n              <DBFormWrapper>\n                <DatasourceForm\n                  applicationId={appId}\n                  datasourceId={selectedDatasourceId}\n                  fromImporting\n                  pageId={pageId}\n                />\n              </DBFormWrapper>\n            )}\n            {datasource?.isConfigured && SuccessMessages()}\n          </ContentWrapper>\n        </BodyContainer>\n        <SkipToAppButtonWrapper>\n          <TooltipComponent\n            boundary=\"viewport\"\n            content={<TooltipContent />}\n            maxWidth=\"320px\"\n            position=\"bottom-right\"\n          >\n            <Button\n              category={Category.secondary}\n              className=\"t--skip-to-application-btn\"\n              href={appURL}\n              onClick={() => {\n                AnalyticsUtil.logEvent(\n                  \"RECONNECTING_SKIP_TO_APPLICATION_BUTTON_CLICK\",\n                );\n                localStorage.setItem(\"importedAppPendingInfo\", \"null\");\n              }}\n              size={Size.medium}\n              text={createMessage(SKIP_TO_APPLICATION)}\n            />\n          </TooltipComponent>\n        </SkipToAppButtonWrapper>\n        <CloseBtnContainer\n          className=\"t--reconnect-close-btn\"\n          onClick={handleClose}\n        >\n          <Icon\n            fillColor={get(theme, \"colors.gitSyncModal.closeIcon\")}\n            name=\"close-modal\"\n            size={IconSize.XXXXL}\n          />\n        </CloseBtnContainer>\n      </Container>\n    </Dialog>\n  );\n}\n\nexport default ReconnectDatasourceModal;\n","import styled from \"styled-components\";\nimport { getTypographyByKey } from \"design-system-old\";\nimport { Colors } from \"constants/Colors\";\n\nexport const Title = styled.p`\n  ${getTypographyByKey(\"h1\")};\n  margin: ${(props) =>\n    `${props.theme.spaces[7]}px 0px ${props.theme.spaces[3]}px 0px`};\n  color: ${Colors.GREY_900};\n`;\n\nexport const Subtitle = styled.div`\n  margin-top: 8px;\n  ${getTypographyByKey(\"p1\")};\n  color: ${Colors.GREY_900};\n`;\n\nexport const Caption = styled.span`\n  ${getTypographyByKey(\"p1\")};\n`;\n\ntype sizeType =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15;\n\nexport const Space = styled.div<{ size: sizeType; horizontal?: boolean }>`\n  margin: ${(props) =>\n    props.horizontal\n      ? `0px ${props.theme.spaces[props.size]}px `\n      : `${props.theme.spaces[props.size]}px 0px`};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ActionButton } from \"pages/Editor/DataSourceEditor/JSONtoForm\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getEntities,\n  getPluginNameFromId,\n  getPluginTypeFromDatasourceId,\n} from \"selectors/entitiesSelector\";\nimport {\n  testDatasource,\n  deleteDatasource,\n  updateDatasource,\n  redirectAuthorizationCode,\n  getOAuthAccessToken,\n  setDatasourceViewMode,\n  createDatasourceFromForm,\n  toggleSaveActionFlag,\n} from \"actions/datasourceActions\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { getCurrentApplicationId } from \"selectors/editorSelectors\";\nimport { useParams, useLocation } from \"react-router\";\nimport { ExplorerURLParams } from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport { AppState } from \"@appsmith/reducers\";\nimport {\n  AuthType,\n  Datasource,\n  AuthenticationStatus,\n} from \"entities/Datasource\";\nimport {\n  CONFIRM_CONTEXT_DELETING,\n  OAUTH_AUTHORIZATION_APPSMITH_ERROR,\n  OAUTH_AUTHORIZATION_FAILED,\n} from \"@appsmith/constants/messages\";\nimport { Category, Toaster, Variant } from \"design-system-old\";\nimport {\n  CONTEXT_DELETE,\n  CONFIRM_CONTEXT_DELETE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { debounce } from \"lodash\";\nimport { ApiDatasourceForm } from \"entities/Datasource/RestAPIForm\";\nimport { TEMP_DATASOURCE_ID } from \"constants/Datasource\";\n\nimport {\n  hasDeleteDatasourcePermission,\n  hasManageDatasourcePermission,\n} from \"@appsmith/utils/permissionHelpers\";\n\ninterface Props {\n  datasource: Datasource;\n  formData: Datasource | ApiDatasourceForm;\n  getSanitizedFormData: () => Datasource;\n  isInvalid: boolean;\n  pageId?: string;\n  shouldRender?: boolean;\n  datasourceButtonConfiguration: string[] | undefined;\n  shouldDisplayAuthMessage?: boolean;\n  triggerSave?: boolean;\n  isFormDirty?: boolean;\n  datasourceDeleteTrigger: () => void;\n}\n\nexport type DatasourceFormButtonTypes = Record<string, string[]>;\n\nenum AuthorizationStatus {\n  SUCCESS = \"success\",\n  APPSMITH_ERROR = \"appsmith_error\",\n}\n\nexport enum DatasourceButtonTypeEnum {\n  DELETE = \"DELETE\",\n  SAVE = \"SAVE\",\n  TEST = \"TEST\",\n  SAVE_AND_AUTHORIZE = \"SAVE_AND_AUTHORIZE\",\n}\n\nexport const DatasourceButtonType: Record<\n  keyof typeof DatasourceButtonTypeEnum,\n  string\n> = {\n  DELETE: \"DELETE\",\n  SAVE: \"SAVE\",\n  TEST: \"TEST\",\n  SAVE_AND_AUTHORIZE: \"SAVE_AND_AUTHORIZE\",\n};\n\nconst StyledButton = styled(ActionButton)<{ fluidWidth?: boolean }>`\n  &&&& {\n    height: 32px;\n    width: ${(props) => (props.fluidWidth ? \"\" : \"87px\")};\n  }\n`;\n\nconst SaveButtonContainer = styled.div`\n  margin-top: 24px;\n  display: flex;\n  justify-content: flex-end;\n`;\n\nconst StyledAuthMessage = styled.div`\n  color: ${(props) => props.theme.colors.error};\n  margin-top: 15px;\n  &:after {\n    content: \" *\";\n    color: inherit;\n  }\n`;\n\nfunction DatasourceAuth({\n  datasource,\n  datasourceButtonConfiguration = [\"DELETE\", \"SAVE\"],\n  datasourceDeleteTrigger,\n  formData,\n  getSanitizedFormData,\n  isInvalid,\n  pageId: pageIdProp,\n  shouldRender,\n  shouldDisplayAuthMessage = true,\n  triggerSave,\n  isFormDirty,\n}: Props) {\n  const authType =\n    formData && \"authType\" in formData\n      ? formData?.authType\n      : formData?.datasourceConfiguration?.authentication?.authenticationType;\n\n  const { id: datasourceId, isDeleting, pluginId } = datasource;\n  const applicationId = useSelector(getCurrentApplicationId);\n  const pluginName = useSelector((state: AppState) =>\n    getPluginNameFromId(state, pluginId),\n  );\n\n  const datasourcePermissions = datasource.userPermissions || [];\n\n  const canManageDatasource = hasManageDatasourcePermission(\n    datasourcePermissions,\n  );\n\n  const canDeleteDatasource = hasDeleteDatasourcePermission(\n    datasourcePermissions,\n  );\n\n  // hooks\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const { pageId: pageIdQuery } = useParams<ExplorerURLParams>();\n\n  const pageId = (pageIdQuery || pageIdProp) as string;\n  const [confirmDelete, setConfirmDelete] = useState(false);\n  const dsName = datasource?.name;\n  const orgId = datasource?.workspaceId;\n\n  useEffect(() => {\n    if (confirmDelete) {\n      delayConfirmDeleteToFalse();\n    }\n  }, [confirmDelete]);\n\n  useEffect(() => {\n    if (authType === AuthType.OAUTH2) {\n      // When the authorization server redirects a user to the datasource form page, the url contains the \"response_status\" query parameter .\n      // Get the access token if response_status is successful else show a toast error\n\n      const search = new URLSearchParams(location.search);\n      const status = search.get(\"response_status\");\n      const queryIsImport = search.get(\"importForGit\");\n      const queryDatasourceId = search.get(\"datasourceId\");\n      const shouldNotify =\n        !queryIsImport || (queryIsImport && queryDatasourceId === datasourceId);\n      if (status && shouldNotify) {\n        const display_message = search.get(\"display_message\");\n        const variant = Variant.danger;\n\n        if (status !== AuthorizationStatus.SUCCESS) {\n          const message =\n            status === AuthorizationStatus.APPSMITH_ERROR\n              ? OAUTH_AUTHORIZATION_APPSMITH_ERROR\n              : OAUTH_AUTHORIZATION_FAILED;\n          Toaster.show({ text: display_message || message, variant });\n          const oAuthStatus = status;\n          AnalyticsUtil.logEvent(\"UPDATE_DATASOURCE\", {\n            dsName,\n            oAuthStatus,\n            orgId,\n            pluginName,\n          });\n        } else {\n          dispatch(getOAuthAccessToken(datasourceId));\n        }\n        AnalyticsUtil.logEvent(\"DATASOURCE_AUTH_COMPLETE\", {\n          applicationId,\n          datasourceId,\n          pageId,\n        });\n      }\n    }\n  }, [authType]);\n\n  // selectors\n  const {\n    datasources: { isTesting, loading: isSaving },\n  } = useSelector(getEntities);\n\n  const delayConfirmDeleteToFalse = debounce(\n    () => setConfirmDelete(false),\n    2200,\n  );\n\n  const pluginType = useSelector((state: AppState) =>\n    getPluginTypeFromDatasourceId(state, datasourceId),\n  );\n\n  useEffect(() => {\n    if (triggerSave) {\n      if (pluginType === \"SAAS\") {\n        handleOauthDatasourceSave();\n      } else {\n        handleDefaultAuthDatasourceSave();\n      }\n    }\n  }, [triggerSave]);\n\n  const isAuthorized =\n    datasource?.datasourceConfiguration?.authentication\n      ?.authenticationStatus === AuthenticationStatus.SUCCESS;\n\n  // Button Operations for respective buttons.\n\n  // Handles datasource deletion\n  const handleDatasourceDelete = () => {\n    dispatch(deleteDatasource({ id: datasourceId }));\n    datasourceDeleteTrigger();\n  };\n\n  // Handles datasource testing\n  const handleDatasourceTest = () => {\n    AnalyticsUtil.logEvent(\"TEST_DATA_SOURCE_CLICK\", {\n      pageId: pageId,\n      appId: applicationId,\n    });\n    dispatch(testDatasource(getSanitizedFormData()));\n  };\n\n  // Handles default auth datasource saving\n  const handleDefaultAuthDatasourceSave = () => {\n    dispatch(toggleSaveActionFlag(true));\n    AnalyticsUtil.logEvent(\"SAVE_DATA_SOURCE_CLICK\", {\n      pageId: pageId,\n      appId: applicationId,\n    });\n    // After saving datasource, only redirect to the 'new integrations' page\n    // if datasource is not used to generate a page\n    if (datasource.id === TEMP_DATASOURCE_ID) {\n      dispatch(createDatasourceFromForm(getSanitizedFormData()));\n    } else {\n      dispatch(setDatasourceViewMode(true));\n      // we dont need to redirect it to active ds list instead ds would be shown in view only mode\n      dispatch(updateDatasource(getSanitizedFormData()));\n    }\n  };\n\n  // Handles Oauth datasource saving\n  const handleOauthDatasourceSave = () => {\n    dispatch(toggleSaveActionFlag(true));\n    if (datasource.id === TEMP_DATASOURCE_ID) {\n      dispatch(\n        createDatasourceFromForm(\n          getSanitizedFormData(),\n          pluginType\n            ? redirectAuthorizationCode(pageId, datasourceId, pluginType)\n            : undefined,\n        ),\n      );\n    } else {\n      dispatch(setDatasourceViewMode(true));\n      dispatch(\n        updateDatasource(\n          getSanitizedFormData(),\n          pluginType\n            ? redirectAuthorizationCode(pageId, datasourceId, pluginType)\n            : undefined,\n        ),\n      );\n    }\n  };\n\n  const createMode = datasourceId === TEMP_DATASOURCE_ID;\n\n  const datasourceButtonsComponentMap = (buttonType: string): JSX.Element => {\n    return {\n      [DatasourceButtonType.DELETE]: (\n        <ActionButton\n          category={Category.primary}\n          className=\"t--delete-datasource\"\n          disabled={createMode || !canDeleteDatasource}\n          isLoading={isDeleting}\n          key={buttonType}\n          onClick={() => {\n            if (!isDeleting) {\n              confirmDelete ? handleDatasourceDelete() : setConfirmDelete(true);\n            }\n          }}\n          size=\"medium\"\n          tag=\"button\"\n          text={\n            isDeleting\n              ? createMessage(CONFIRM_CONTEXT_DELETING)\n              : confirmDelete\n              ? createMessage(CONFIRM_CONTEXT_DELETE)\n              : createMessage(CONTEXT_DELETE)\n          }\n          variant={Variant.danger}\n        />\n      ),\n      [DatasourceButtonType.TEST]: (\n        <ActionButton\n          category={Category.secondary}\n          className=\"t--test-datasource\"\n          isLoading={isTesting}\n          key={buttonType}\n          onClick={handleDatasourceTest}\n          size=\"medium\"\n          tag=\"button\"\n          text=\"Test\"\n          variant={Variant.success}\n        />\n      ),\n      [DatasourceButtonType.SAVE]: (\n        <ActionButton\n          category={Category.primary}\n          className=\"t--save-datasource\"\n          disabled={\n            isInvalid || !isFormDirty || (!createMode && !canManageDatasource)\n          }\n          filled\n          isLoading={isSaving}\n          key={buttonType}\n          onClick={handleDefaultAuthDatasourceSave}\n          size=\"medium\"\n          tag=\"button\"\n          text=\"Save\"\n          variant={Variant.success}\n        />\n      ),\n      [DatasourceButtonType.SAVE_AND_AUTHORIZE]: (\n        <StyledButton\n          category={Category.primary}\n          className=\"t--save-datasource\"\n          disabled={isInvalid || (!createMode && !canManageDatasource)}\n          filled\n          fluidWidth\n          isLoading={isSaving}\n          key={buttonType}\n          onClick={handleOauthDatasourceSave}\n          size=\"medium\"\n          tag=\"button\"\n          text=\"Save and Authorize\"\n          variant={Variant.success}\n        />\n      ),\n    }[buttonType];\n  };\n\n  return (\n    <>\n      {authType === AuthType.OAUTH2 &&\n        !isAuthorized &&\n        shouldDisplayAuthMessage && (\n          <StyledAuthMessage>Datasource not authorized</StyledAuthMessage>\n        )}\n      {shouldRender && (\n        <SaveButtonContainer>\n          {datasourceButtonConfiguration?.map((btnConfig) =>\n            datasourceButtonsComponentMap(btnConfig),\n          )}\n        </SaveButtonContainer>\n      )}\n    </>\n  );\n}\n\nexport default DatasourceAuth;\n"],"names":["setHeaderMeta","hideHeaderShadow","showHeaderSeparator","type","ReduxActionTypes","SET_HEADER_META","payload","IconContainer","styled","div","_templateObject","_taggedTemplateLiteral","props","theme","colors","apiPane","iconHoverBg","history","useHistory","params","location","search","redirectTo","URLSearchParams","get","pageId","useSelector","getCurrentPageId","isGeneratePageInitiator","getIsGeneratePageInitiator","integrationTab","INTEGRATION_TABS","ACTIVE","NEW","_jsxs","className","onClick","e","PerformanceTracker","startTracking","PerformanceTransactionName","CLOSE_SIDE_PANE","path","pathname","stopPropagation","redirectURL","generateTemplateFormURL","builderURL","URL","integrationEditorURL","selectedTab","getQueryParams","AnalyticsUtil","logEvent","fromUrl","toUrl","push","children","_jsx","Icon","icon","iconSize","Text","style","color","lineHeight","TextType","P1","EditInteractionKind","EditableTextWrapper","Classes","isEditing","minimal","editableText","bg","_ref","useFullWidth","TextContainer","_templateObject2","underline","beforeUnmount","_props$customErrorToo","customErrorTooltip","defaultValue","disabled","editInteractionKind","errorTooltipClass","forceDefault","hideEditIcon","isEditingDefault","isInvalid","maxLength","maxLines","minLines","multiline","onBlur","onTextChanged","placeholder","updating","valueTransform","_useState","useState","_useState2","_slicedToArray","setIsEditing","_useState3","_useState4","value","setStateValue","inputValRef","useRef","setValue","useCallback","current","useEffect","edit","preventDefault","onChange","_value","Toaster","show","text","variant","Variant","danger","onInputchange","finalVal","errorMessage","error","undefined","showEditIcon","SINGLE","_","onDoubleClick","DOUBLE","ErrorTooltip","customClass","isOpen","message","isValid","BlueprintEditableText","onCancel","onConfirm","selectAllOnFocus","fillColor","name","size","IconSize","XXL","Wrapper","spaces","Colors","WHITE","concat","LeftPaneVersionData","MIRAGE_2","dispatch","useDispatch","onboardingWorkspaces","getOnboardingWorkspaces","isFetchingApplications","getIsFetchingApplications","_getAppsmithConfigs","getAppsmithConfigs","appVersion","cloudHosting","howMuchTimeBefore","howMuchTimeBeforeText","releaseDate","user","getCurrentUser","tenantPermissions","getTenantPermissions","showAdminSettings","MenuItem","onSelect","getOnSelectAction","DropdownOnSelectActions","REDIRECT","getDefaultAdminSettingsPath","isSuperUser","createMessage","ADMIN_SETTINGS","window","open","DOCUMENTATION","containerClassName","length","onboardingCreateApplication","WELCOME_TOUR","ProductUpdatesModal","APPSMITH_DISPLAY_VERSION","edition","id","AuthType","SSLType","ApiKeyAuthType","GrantType","SectionLabel","SectionContainer","TopBorder","_templateObject3","ALTO","defaultIsOpen","headerIcon","_props$showSection","showSection","_props$showTopBorder","showTopBorder","title","state","getDatasourceCollapsibleState","setIsOpen","setDatasourceCollapsible","isUndefined","AdsIcon","MEDIUM","Collapse","keepChildrenMounted","ConnectedText","OXFORD_BLUE","Header","_datasource$pluginId2","errorComponent","_ref$showDatasourceSa","showDatasourceSavedText","useParams","datasource","getDatasource","datasourceId","datasourceFormConfigs","entities","plugins","formConfigs","plugin","_datasource$pluginId","getPlugin","pluginId","datasourcePermissions","userPermissions","pagePermissions","getPagePermissions","canCreateDatasourceActions","hasCreateDatasourceActionPermission","_toConsumableArray","currentFormConfig","HeaderIcons","SAVE_SUCCESS","GREEN","height","width","marginLeft","NewActionButton","eventFrom","marginTop","isNil","RenderDatasourceInformation","config","Key","DOVE_GRAY","Value","ValueWrapper","FieldWrapper","_templateObject4","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","apply","renderKVArray","firstConfigProperty","configProperty","configPropertyInfo","split","values","reduce","acc","label","configPropertyKey","forEach","index","key","map","renderValue","_ref2","_createClass","section","_this2","this","React","isHidden","hidden","isKVArray","renderDatasourceSection","controlType","reactKey","isArray","options","option","find","el","_ref3","display","log","currentDatasource","datasources","getDatasources","forceUpdate","setForceUpdate","saveStatus","isSaving","ui","datasourceName","errors","hasNameConflict","datasourcesNames","filter","includes","pluginName","isNameValid","_objectSpread","isInvalidDatasourceName","trim","handleDatasourceNameChange","_currentDatasource$id","_currentDatasource$id2","datsourceName","TEMP_DATASOURCE_ID","saveDatasourceName","updateDatasourceName","EditableText","focusOnMount","Spinner","PluginImageWrapper","GREY_200","PluginImage","FormContainer","FormContainerBody","FormTitleContainer","_templateObject5","ActionWrapper","_templateObject6","ActionButton","Button","_templateObject7","EditDatasourceButton","_templateObject8","HIT_GRAY","JSONtoForm","requiredFields","configDetails","validate","Object","keys","formData","fieldConfigProperty","fieldConfig","arrayValues","keyValueArrayErrors","objectKeys","keyValueErrors","normalizeValues","checked","configProperties","_loop","_configProperties","_i","properties","newValues","object","every","x","getTrimmedData","dataType","getType","isArrayorObject","Types","ARRAY","OBJECT","valueType","STRING","renderForm","formContent","CloseEditor","renderMainSection","_this$props","_this$props$featureFl","featureFlags","LIMITING_GOOGLE_SHEET_ACCESS","Collapsible","isDefaultOpen","sectionName","renderEachConfig","renderSingleConfig","multipleConfig","setupConfig","FormControl","formName","isRequired","c","propertyControlOrSection","_this$props2","_this$props2$featureF","prevProps","ICON","_props$style","pluginType","isSelected","setIsSelected","actions","currentPageId","createQueryAction","PluginType","API","datasourceConfiguration","url","createNewQueryAction","ERROR_ADD_API_INVALID_URL","iconPosition","IconPositions","left","isLoading","noop","tag","DB","SAAS","NEW_QUERY_BUTTON_TEXT","NEW_API_BUTTON_TEXT","onClose","onDiscard","onSave","saveButtonText","createMode","canManageDatasources","hasManageDatasourcePermission","disableSaveButton","Dialog","canOutsideClickClose","DELETE_CONFIRMATION_MODAL_TITLE","SAVE_OR_DISCARD_DATASOURCE_WARNING","category","Category","secondary","Size","medium","DISCARD_POPUP_DONT_SAVE_BUTTON_TEXT","primary","HelpIcon","Container","LeftBar","CollapsibleHelp","StyledOpenDocsIcon","CollapsibleWrapper","DatasourceDBEditor","_JSONtoForm","getSanitizedData","openOmnibarReadMore","source","renderDataSourceConfigForm","sections","canManageDatasource","datasourceButtonConfiguration","datasourceDeleteTrigger","messages","viewMode","createFlow","onSubmit","hiddenHeader","alt","src","pluginImage","FormTitle","isNewDatasource","setDatasourceViewMode","msg","i","Callout","addMarginTop","fill","warning","convertArrayToSentence","APPSMITH_IP_ADDRESSES","_Fragment","Connected","DatasourceAuth","getSanitizedFormData","isFormDirty","shouldRender","triggerSave","isDatasourceBeingSavedFromPopup","_get","_getPrototypeOf","prototype","formConfig","initialized","content","connect","_props$formData","_datasource$name","list","hintMessages","getDatasourceFormButtonConfig","isReconnectingModalOpen","reduxForm","form","DATASOURCE_DB_FORM","enableReinitialize","datasourceToFormValues","_datasource$datasourc","_datasource$datasourc2","_datasource$datasourc3","authType","NONE","connection","ssl","DEFAULT","authentication","datasourceToFormAuthentication","isSendSessionEnabled","sessionSignatureKey","workspaceId","headers","cleanupProperties","queryParameters","formToDatasourceAuthentication","isClientCredentials","isAuthorizationCode","oAuth2Common","authenticationType","OAuth2","accessTokenUrl","clientId","headerPrefix","scopeString","clientSecret","isAuthorizationHeader","isTokenHeader","audience","resource","sendScopeWithRefreshToken","refreshTokenClientCredentialsLocation","useSelfSignedCert","grantType","ClientCredentials","customTokenParameters","AuthorizationCode","authorizationUrl","isAuthorized","customAuthenticationParameters","basic","username","password","secretExists","apiKey","addTo","bearerToken","val","copyText","copyURLInput","createRef","isCopied","setIsCopied","BaseTextInput","setSelectionRange","BaseButton","copy","setTimeout","FormInputContainer","StyledButton","AuthorizeButton","DatasourceRestAPIEditor","ensureAPIKeyDefaultsAreCorrect","change","ensureOAuthDefaultsAreCorrect","isDirty","formValuesToDatasource","save","onSuccess","toggleSaveActionFlag","normalizedValues","appId","applicationId","updateDatasource","createDatasource","createApiAction","_this$props$datasourc","_this$props$datasourc2","_this$props$datasourc3","_this$props$datasourc4","_this$props$datasourc5","_this$props$datasourc6","newApiName","createNewApiName","defaultApiActionConfig","DEFAULT_API_ACTION_CONFIG","createActionRequest","eventData","actionType","from","actionConfiguration","urlValidator","RegExp","test","INVALID_URL","render","_this$props3","renderHeader","renderEditor","DatasourceButtonType","DELETE","SAVE","_this$props4","_this$props5","renderGeneralSettings","renderAuthFields","renderOauth2AdvancedSettings","renderSelfSignedCertificateFields","redirectAuthorizationCode","success","btoa","renderInputTextControlViaFormControl","placeholderText","encrypted","fieldValidator","renderKeyValueControlViaFormControl","renderDropdownControlViaFormControl","SELF_SIGNED_CERTIFICATE","renderFilePickerControlViaFormControl","renderOauth2","renderBasic","renderApiKey","renderBearerToken","QueryParams","isSecretExistsPath","renderOauth2AuthorizationCode","renderOauth2ClientCredentials","renderOauth2Common","_this$props$formData","isGrantTypeAuthorizationCode","isAuthenticationTypeOAuth2","isConnectSelfSigned","renderCheckboxViaFormControl","renderOauth2CommonAdvanced","origin","FormLabel","StyledInfo","CopyToClipBoard","confirmDelete","initializeReplayEntity","initialValues","isDeleting","setState","delayConfirmDeleteToFalse","prop","formMeta","conditionals","DATASOURCE_REST_API_FORM","validator","subtitle","initialValue","getFormValues","getFormMeta","data","updateReplayEntity","ENTITY_TYPE","DATASOURCE","deleteDatasource","createDatasourceFromForm","flag","DataSourceEditor","pluginDatasourceForm","switchDatasource","responseStatus","responseMessage","REST_API_AUTHORIZATION_FAILED","REST_API_AUTHORIZATION_SUCCESSFUL","REST_API_AUTHORIZATION_APPSMITH_ERROR","fromImporting","isTesting","pluginImages","DataSourceEditorForm","DatasourceEditorRouter","_React$Component2","_super2","showDialog","routesBlocked","readUrlParams","unblock","navigation","closeDialog","bind","_assertThisInitialized","blockRoutes","isDatasourceBeingSaved","closeDialogAndUnblockRoutes","setViewModeFromQueryParams","isEqual","defaultKeyValueArrayConfig","initializeFormWithDefaults","match","urlObject","href","searchParams","createTempDatasource","DatasourceComponentTypes","RestAPIDatasourceForm","discardTempDatasource","deleteTempDSFromDraft","resetDefaultKeyValPairFlag","_this$props2$history","_this3","block","tx","routesBlockFormChangeCallback","toggleSaveActionFromPopupFlag","isNavigateBack","SaveOrDiscardDatasourceModal","SAVE_BUTTON_TEXT","pluginPackageName","EntityNotFoundPane","DatasourceSaasForm","saasEditorDatasourceIdURL","renderSaveDisacardModal","_props$datasourceId","_props$match","_props$match$params","_props$fromImporting","_props$pageId","_props$match2","_props$match2$params","_plugin$type","_plugin$datasourceCom","_plugin$packageName","_props$applicationId","datasourcePane","_state$entities","isDatasourceInViewMode","_selectURLSlugs","selectURLSlugs","applicationSlug","pageSlug","getFormInitialValues","getPluginImages","loading","newDatasource","datasourceComponent","AutoForm","packageName","getCurrentApplicationId","ownProps","setGlobalSearchQuery","toggleShowGlobalSearchModal","removeTempDatasource","createTempDatasourceFromForm","initializeDatasourceFormDefaults","fontWeights","INVALID_URL_ERROR","PAGE_NOT_FOUND_ERROR","hash","action","cypressSelector","goBackFn","goBack","large","StyledAuthMessage","AuthMessage","description","getPluginTypeFromDatasourceId","extraInfo","actionLabel","CalloutV2","desc","DatasourceSaaSEditor","isGoogleSheetPlugin","PluginPackageName","GOOGLE_SHEETS","isPluginAuthorized","isDatasourceAuthorizedForQueryCreation","replace","GSHEET_AUTHORIZATION_ERROR","paddingTop","shouldDisplayAuthMessage","SAVE_AND_AUTHORIZE_BUTTON_TEXT","_props$match3","_props$match3$params","DATASOURCE_SAAS_FORM","merge","getConfigInitialValues","selectFeatureFlags","getTypographyByKey","selected","tabItemBackgroundFill","highlightTextColor","GREY_7","getSelectedStyles","TabItem","tab","vertical","TabWrapper","ALTO2","Menu","TabComponent","selectedIndex","activeTabIndex","tabItemComponent","tabs","ListItem","GEYSER_LIGHT","ListLabels","DsTitle","AuthorizationStatus","ds","image","GRAY_800","H4","isConfigured","ERROR_RED","GRAY_700","H5","Section","BodyContainer","MENU_HEIGHT","TabsContainer","ContentWrapper","BLACK","ListContainer","Message","typography","fontSize","letterSpacing","GREY_9","CloseBtnContainer","radii","SkipToAppButtonWrapper","_templateObject9","TooltipWrapper","_templateObject10","DBFormWrapper","_templateObject11","TooltipContent","marginBottom","P3","SKIP_TO_APPLICATION","SKIP_TO_APPLICATION_TOOLTIP_DESCRIPTION","useTheme","isModalOpen","getIsReconnectingDatasourcesModalOpen","getWorkspaceIdForImport","pageIdForImport","getPageIdForImport","getUnconfiguredDatasources","pluginNames","getPluginNames","getIsListing","isDatasourceTesting","getIsDatasourceTesting","isDatasourceUpdating","getDatasourceLoading","pendingApp","JSON","parse","localStorage","getItem","userWorkspaces","getUserApplicationsWorkspacesList","queryParams","useQuery","queryAppId","queryPageId","queryDatasourceId","queryIsImport","selectedDatasourceId","setSelectedDatasourceId","setPageId","_useState5","_useState6","setAppId","_useState7","_useState8","appURL","setAppURL","_useState9","_useState10","setDatasource","_useState11","_useState12","isImport","setIsImport","_useState13","_useState14","setIsTesting","queryDS","dsName","orgId","status","display_message","SUCCESS","APPSMITH_ERROR","OAUTH_AUTHORIZATION_APPSMITH_ERROR","OAUTH_AUTHORIZATION_FAILED","oAuthStatus","getOAuthAccessToken","_step","_iterator","_createForOfIteratorHelper","s","n","done","ws","applications","workspace","application","app","setWorkspaceIdForImport","setIsReconnectingDatasourcesModalOpen","defaultPageId","getDefaultPageId","pages","FETCH_UNCONFIGURED_DATASOURCE_LIST","err","f","isConfigFetched","getIsDatasourceConfigForImportFetched","initDatasourceConnectionDuringImportRequest","handleClose","setItem","setPageIdForImport","resetDatasourceConfigForImportFetchedFlag","onSelectDatasource","_datasources$0$id","importedApplication","getImportedApplication","_importedApplication$","defaultPage","page","isDefault","_selectedDS$datasourc","_selectedDS$datasourc2","selectedDS","OAUTH2","pending","next","findIndex","slice","appInfo","stringify","mappedDataSources","ListItemWrapper","shouldShowDBForm","canEscapeKeyClose","RECONNECT_DATASOURCE_MODAL","maxWidth","TabMenu","Title","RECONNECT_MISSING_DATASOURCE_CREDENTIALS","RECONNECT_MISSING_DATASOURCE_CREDENTIALS_DESCRIPTION","DatasourceForm","RECONNECT_DATASOURCE_SUCCESS_MESSAGE1","RECONNECT_DATASOURCE_SUCCESS_MESSAGE2","TooltipComponent","boundary","position","XXXXL","p","GREY_900","Subtitle","Caption","span","Space","horizontal","DatasourceButtonTypeEnum","TEST","SAVE_AND_AUTHORIZE","fluidWidth","SaveButtonContainer","_formData$datasourceC","_formData$datasourceC2","_ref$datasourceButton","pageIdProp","_ref$shouldDisplayAut","getPluginNameFromId","canDeleteDatasource","hasDeleteDatasourcePermission","useLocation","setConfirmDelete","_useSelector$datasour","getEntities","debounce","handleOauthDatasourceSave","handleDefaultAuthDatasourceSave","authenticationStatus","AuthenticationStatus","handleDatasourceTest","testDatasource","datasourceButtonsComponentMap","buttonType","_DatasourceButtonType","_defineProperty","CONFIRM_CONTEXT_DELETING","CONFIRM_CONTEXT_DELETE","CONTEXT_DELETE","filled","btnConfig"],"sourceRoot":""}