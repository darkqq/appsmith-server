{"version":3,"file":"static/js/31.9df7931d.chunk.js","mappings":"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","sources":["../node_modules/@emotion/sheet/dist/sheet.browser.esm.js","../node_modules/@emotion/cache/dist/cache.browser.esm.js","../node_modules/@emotion/utils/dist/utils.browser.esm.js","../node_modules/@emotion/core/dist/core.browser.esm.js","../node_modules/@emotion/css/dist/css.browser.esm.js","../node_modules/@emotion/hash/dist/hash.browser.esm.js","../node_modules/@emotion/serialize/node_modules/@emotion/memoize/dist/memoize.browser.esm.js","../node_modules/@emotion/serialize/dist/serialize.browser.esm.js","../node_modules/codemirror-graphql/src/hint.ts","../node_modules/codemirror-graphql/src/info.ts","../node_modules/codemirror-graphql/src/jump.ts","../node_modules/codemirror-graphql/src/mode.ts","../node_modules/codemirror-graphql/src/utils/SchemaReference.ts","../node_modules/codemirror-graphql/src/utils/forEachState.ts","../node_modules/codemirror-graphql/src/utils/getTypeInfo.ts","../node_modules/codemirror-graphql/src/utils/info-addon.ts","../node_modules/codemirror-graphql/src/utils/jump-addon.ts","../node_modules/codemirror-graphql/src/utils/mode-factory.ts","../node_modules/codemirror-graphql/src/utils/mode-indent.ts","../node_modules/graphql-language-service/src/interface/autocompleteUtils.ts","../node_modules/vscode-languageserver-types/lib/esm/main.js","../node_modules/graphql-language-service/src/parser/CharacterStream.ts","../node_modules/graphql-language-service/src/parser/RuleHelpers.ts","../node_modules/graphql-language-service/src/parser/Rules.ts","../node_modules/graphql-language-service/src/parser/onlineParser.ts","../node_modules/graphql-language-service/src/parser/types.ts","../node_modules/graphql-language-service/src/interface/getAutocompleteSuggestions.ts","../node_modules/graphql-language-service/src/utils/fragmentDependencies.ts","../node_modules/graphql-language-service/src/utils/getVariablesJSONSchema.ts","../node_modules/graphql-language-service/src/utils/getASTNodeAtPosition.ts","../node_modules/graphql-language-service/src/utils/Range.ts","../node_modules/graphql-language-service/src/utils/validateWithCustomRules.ts","../node_modules/graphql-language-service/src/utils/collectVariables.ts","../node_modules/graphql-language-service/src/utils/getOperationFacts.ts","../node_modules/graphql-language-service/src/interface/getDefinition.ts","../node_modules/graphql-language-service/src/interface/getDiagnostics.ts","../node_modules/graphql-language-service/src/interface/getOutline.ts","../node_modules/graphql-language-service/src/interface/getHoverInformation.ts","../node_modules/graphql-language-service/src/types.ts","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/noop.js","../node_modules/nullthrows/nullthrows.js","../node_modules/react-input-autosize/lib/AutosizeInput.js","../node_modules/react-instantsearch-dom/dist/es/components/Hits.js","../node_modules/react-instantsearch-dom/dist/es/widgets/Hits.js","../node_modules/react-instantsearch-core/dist/es/connectors/connectPoweredBy.js","../node_modules/react-instantsearch-dom/dist/es/components/PoweredBy.js","../node_modules/react-instantsearch-dom/dist/es/widgets/PoweredBy.js","../node_modules/react-instantsearch-dom/dist/es/widgets/SearchBox.js","../node_modules/react-masonry-css/dist/react-masonry-css.module.js","../node_modules/react-select/dist/stateManager-04f734a2.browser.esm.js","../node_modules/react-select/dist/react-select.browser.esm.js","../node_modules/react-select/dist/utils-06b0d5a4.browser.esm.js","../node_modules/redux-form/es/getFormMeta.js","../node_modules/redux-form/es/selectors/getFormMeta.js","../node_modules/remixicon-react/ArrowGoBackFillIcon.js","../node_modules/remixicon-react/FileAddLineIcon.js","../node_modules/remixicon-react/Layout2LineIcon.js","../node_modules/remixicon-react/Save2LineIcon.js","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/acorn-walk/dist/walk.mjs","../node_modules/acorn/dist/acorn.mjs","../node_modules/graphql/error/GraphQLError.mjs","../node_modules/graphql/error/syntaxError.mjs","../node_modules/graphql/execution/collectFields.mjs","../node_modules/graphql/execution/values.mjs","../node_modules/graphql/version.mjs","../node_modules/graphql/jsutils/isPromise.mjs","../node_modules/graphql/jsutils/toError.mjs","../node_modules/graphql/error/locatedError.mjs","../node_modules/graphql/execution/execute.mjs","../node_modules/graphql/jsutils/memoize3.mjs","../node_modules/graphql/jsutils/promiseReduce.mjs","../node_modules/graphql/jsutils/promiseForObject.mjs","../node_modules/graphql/graphql.mjs","../node_modules/graphql/jsutils/isAsyncIterable.mjs","../node_modules/graphql/execution/mapAsyncIterator.mjs","../node_modules/graphql/execution/subscribe.mjs","../node_modules/graphql/validation/rules/custom/NoSchemaIntrospectionCustomRule.mjs","../node_modules/graphql/utilities/getIntrospectionQuery.mjs","../node_modules/graphql/utilities/getOperationAST.mjs","../node_modules/graphql/utilities/getOperationRootType.mjs","../node_modules/graphql/utilities/introspectionFromSchema.mjs","../node_modules/graphql/utilities/buildClientSchema.mjs","../node_modules/graphql/utilities/extendSchema.mjs","../node_modules/graphql/utilities/buildASTSchema.mjs","../node_modules/graphql/utilities/lexicographicSortSchema.mjs","../node_modules/graphql/utilities/printSchema.mjs","../node_modules/graphql/utilities/concatAST.mjs","../node_modules/graphql/utilities/separateOperations.mjs","../node_modules/graphql/utilities/stripIgnoredCharacters.mjs","../node_modules/graphql/utilities/assertValidName.mjs","../node_modules/graphql/utilities/findBreakingChanges.mjs","../node_modules/graphql/jsutils/Path.mjs","../node_modules/graphql/jsutils/devAssert.mjs","../node_modules/graphql/jsutils/didYouMean.mjs","../node_modules/graphql/jsutils/groupBy.mjs","../node_modules/graphql/jsutils/inspect.mjs","../node_modules/graphql/jsutils/instanceOf.mjs","../node_modules/graphql/jsutils/invariant.mjs","../node_modules/graphql/jsutils/isIterableObject.mjs","../node_modules/graphql/jsutils/isObjectLike.mjs","../node_modules/graphql/jsutils/keyMap.mjs","../node_modules/graphql/jsutils/keyValMap.mjs","../node_modules/graphql/jsutils/mapValue.mjs","../node_modules/graphql/jsutils/naturalCompare.mjs","../node_modules/graphql/jsutils/printPathArray.mjs","../node_modules/graphql/jsutils/suggestionList.mjs","../node_modules/graphql/jsutils/toObjMap.mjs","../node_modules/graphql/language/ast.mjs","../node_modules/graphql/language/blockString.mjs","../node_modules/graphql/language/characterClasses.mjs","../node_modules/graphql/language/directiveLocation.mjs","../node_modules/graphql/language/kinds.mjs","../node_modules/graphql/language/lexer.mjs","../node_modules/graphql/language/location.mjs","../node_modules/graphql/language/parser.mjs","../node_modules/graphql/language/predicates.mjs","../node_modules/graphql/language/printLocation.mjs","../node_modules/graphql/language/printString.mjs","../node_modules/graphql/language/printer.mjs","../node_modules/graphql/language/source.mjs","../node_modules/graphql/language/tokenKind.mjs","../node_modules/graphql/language/visitor.mjs","../node_modules/graphql/type/assertName.mjs","../node_modules/graphql/jsutils/identityFunc.mjs","../node_modules/graphql/type/definition.mjs","../node_modules/graphql/type/directives.mjs","../node_modules/graphql/type/introspection.mjs","../node_modules/graphql/type/scalars.mjs","../node_modules/graphql/type/schema.mjs","../node_modules/graphql/type/validate.mjs","../node_modules/graphql/utilities/TypeInfo.mjs","../node_modules/graphql/utilities/astFromValue.mjs","../node_modules/graphql/utilities/coerceInputValue.mjs","../node_modules/graphql/utilities/sortValueNode.mjs","../node_modules/graphql/utilities/typeComparators.mjs","../node_modules/graphql/utilities/typeFromAST.mjs","../node_modules/graphql/utilities/valueFromAST.mjs","../node_modules/graphql/utilities/valueFromASTUntyped.mjs","../node_modules/graphql/validation/ValidationContext.mjs","../node_modules/graphql/validation/rules/ExecutableDefinitionsRule.mjs","../node_modules/graphql/validation/rules/FieldsOnCorrectTypeRule.mjs","../node_modules/graphql/validation/rules/FragmentsOnCompositeTypesRule.mjs","../node_modules/graphql/validation/rules/KnownArgumentNamesRule.mjs","../node_modules/graphql/validation/rules/KnownDirectivesRule.mjs","../node_modules/graphql/validation/rules/KnownFragmentNamesRule.mjs","../node_modules/graphql/validation/rules/KnownTypeNamesRule.mjs","../node_modules/graphql/validation/rules/LoneAnonymousOperationRule.mjs","../node_modules/graphql/validation/rules/LoneSchemaDefinitionRule.mjs","../node_modules/graphql/validation/rules/NoFragmentCyclesRule.mjs","../node_modules/graphql/validation/rules/NoUndefinedVariablesRule.mjs","../node_modules/graphql/validation/rules/NoUnusedFragmentsRule.mjs","../node_modules/graphql/validation/rules/NoUnusedVariablesRule.mjs","../node_modules/graphql/validation/rules/OverlappingFieldsCanBeMergedRule.mjs","../node_modules/graphql/validation/rules/PossibleFragmentSpreadsRule.mjs","../node_modules/graphql/validation/rules/PossibleTypeExtensionsRule.mjs","../node_modules/graphql/validation/rules/ProvidedRequiredArgumentsRule.mjs","../node_modules/graphql/validation/rules/ScalarLeafsRule.mjs","../node_modules/graphql/validation/rules/SingleFieldSubscriptionsRule.mjs","../node_modules/graphql/validation/rules/UniqueArgumentDefinitionNamesRule.mjs","../node_modules/graphql/validation/rules/UniqueArgumentNamesRule.mjs","../node_modules/graphql/validation/rules/UniqueDirectiveNamesRule.mjs","../node_modules/graphql/validation/rules/UniqueDirectivesPerLocationRule.mjs","../node_modules/graphql/validation/rules/UniqueEnumValueNamesRule.mjs","../node_modules/graphql/validation/rules/UniqueFieldDefinitionNamesRule.mjs","../node_modules/graphql/validation/rules/UniqueFragmentNamesRule.mjs","../node_modules/graphql/validation/rules/UniqueInputFieldNamesRule.mjs","../node_modules/graphql/validation/rules/UniqueOperationNamesRule.mjs","../node_modules/graphql/validation/rules/UniqueOperationTypesRule.mjs","../node_modules/graphql/validation/rules/UniqueTypeNamesRule.mjs","../node_modules/graphql/validation/rules/UniqueVariableNamesRule.mjs","../node_modules/graphql/validation/rules/ValuesOfCorrectTypeRule.mjs","../node_modules/graphql/validation/rules/VariablesAreInputTypesRule.mjs","../node_modules/graphql/validation/rules/VariablesInAllowedPositionRule.mjs","../node_modules/graphql/validation/rules/custom/NoDeprecatedCustomRule.mjs","../node_modules/graphql/validation/specifiedRules.mjs","../node_modules/graphql/validation/validate.mjs","../node_modules/react-dnd-touch-backend/dist/esm/interfaces.js","../node_modules/react-dnd-touch-backend/dist/esm/utils/predicates.js","../node_modules/react-dnd-touch-backend/dist/esm/utils/offsets.js","../node_modules/react-dnd-touch-backend/dist/esm/utils/supportsPassive.js","../node_modules/react-dnd-touch-backend/dist/esm/OptionsReader.js","../node_modules/react-dnd-touch-backend/dist/esm/TouchBackend.js","../node_modules/react-dnd-touch-backend/dist/esm/utils/math.js","../node_modules/react-dnd-touch-backend/dist/esm/index.js"],"sourcesContent":["/*\n\nBased off glamor's StyleSheet, thanks Sunil ❤️\n\nhigh performance StyleSheet for css-in-js systems\n\n- uses multiple style tags behind the scenes for millions of rules\n- uses `insertRule` for appending in production for *much* faster performance\n\n// usage\n\nimport { StyleSheet } from '@emotion/sheet'\n\nlet styleSheet = new StyleSheet({ key: '', container: document.head })\n\nstyleSheet.insert('#box { border: 1px solid red; }')\n- appends a css rule into the stylesheet\n\nstyleSheet.flush()\n- empties the stylesheet of all its contents\n\n*/\n// $FlowFixMe\nfunction sheetForTag(tag) {\n  if (tag.sheet) {\n    // $FlowFixMe\n    return tag.sheet;\n  } // this weirdness brought to you by firefox\n\n  /* istanbul ignore next */\n\n\n  for (var i = 0; i < document.styleSheets.length; i++) {\n    if (document.styleSheets[i].ownerNode === tag) {\n      // $FlowFixMe\n      return document.styleSheets[i];\n    }\n  }\n}\n\nfunction createStyleElement(options) {\n  var tag = document.createElement('style');\n  tag.setAttribute('data-emotion', options.key);\n\n  if (options.nonce !== undefined) {\n    tag.setAttribute('nonce', options.nonce);\n  }\n\n  tag.appendChild(document.createTextNode(''));\n  return tag;\n}\n\nvar StyleSheet =\n/*#__PURE__*/\nfunction () {\n  function StyleSheet(options) {\n    this.isSpeedy = options.speedy === undefined ? process.env.NODE_ENV === 'production' : options.speedy;\n    this.tags = [];\n    this.ctr = 0;\n    this.nonce = options.nonce; // key is the value of the data-emotion attribute, it's used to identify different sheets\n\n    this.key = options.key;\n    this.container = options.container;\n    this.before = null;\n  }\n\n  var _proto = StyleSheet.prototype;\n\n  _proto.insert = function insert(rule) {\n    // the max length is how many rules we have per style tag, it's 65000 in speedy mode\n    // it's 1 in dev because we insert source maps that map a single rule to a location\n    // and you can only have one source map per style tag\n    if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {\n      var _tag = createStyleElement(this);\n\n      var before;\n\n      if (this.tags.length === 0) {\n        before = this.before;\n      } else {\n        before = this.tags[this.tags.length - 1].nextSibling;\n      }\n\n      this.container.insertBefore(_tag, before);\n      this.tags.push(_tag);\n    }\n\n    var tag = this.tags[this.tags.length - 1];\n\n    if (this.isSpeedy) {\n      var sheet = sheetForTag(tag);\n\n      try {\n        // this is a really hot path\n        // we check the second character first because having \"i\"\n        // as the second character will happen less often than\n        // having \"@\" as the first character\n        var isImportRule = rule.charCodeAt(1) === 105 && rule.charCodeAt(0) === 64; // this is the ultrafast version, works across browsers\n        // the big drawback is that the css won't be editable in devtools\n\n        sheet.insertRule(rule, // we need to insert @import rules before anything else\n        // otherwise there will be an error\n        // technically this means that the @import rules will\n        // _usually_(not always since there could be multiple style tags)\n        // be the first ones in prod and generally later in dev\n        // this shouldn't really matter in the real world though\n        // @import is generally only used for font faces from google fonts and etc.\n        // so while this could be technically correct then it would be slower and larger\n        // for a tiny bit of correctness that won't matter in the real world\n        isImportRule ? 0 : sheet.cssRules.length);\n      } catch (e) {\n        if (process.env.NODE_ENV !== 'production') {\n          console.warn(\"There was a problem inserting the following rule: \\\"\" + rule + \"\\\"\", e);\n        }\n      }\n    } else {\n      tag.appendChild(document.createTextNode(rule));\n    }\n\n    this.ctr++;\n  };\n\n  _proto.flush = function flush() {\n    // $FlowFixMe\n    this.tags.forEach(function (tag) {\n      return tag.parentNode.removeChild(tag);\n    });\n    this.tags = [];\n    this.ctr = 0;\n  };\n\n  return StyleSheet;\n}();\n\nexport { StyleSheet };\n","import { StyleSheet } from '@emotion/sheet';\nimport Stylis from '@emotion/stylis';\nimport '@emotion/weak-memoize';\n\n// https://github.com/thysultan/stylis.js/tree/master/plugins/rule-sheet\n// inlined to avoid umd wrapper and peerDep warnings/installing stylis\n// since we use stylis after closure compiler\nvar delimiter = '/*|*/';\nvar needle = delimiter + '}';\n\nfunction toSheet(block) {\n  if (block) {\n    Sheet.current.insert(block + '}');\n  }\n}\n\nvar Sheet = {\n  current: null\n};\nvar ruleSheet = function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {\n  switch (context) {\n    // property\n    case 1:\n      {\n        switch (content.charCodeAt(0)) {\n          case 64:\n            {\n              // @import\n              Sheet.current.insert(content + ';');\n              return '';\n            }\n          // charcode for l\n\n          case 108:\n            {\n              // charcode for b\n              // this ignores label\n              if (content.charCodeAt(2) === 98) {\n                return '';\n              }\n            }\n        }\n\n        break;\n      }\n    // selector\n\n    case 2:\n      {\n        if (ns === 0) return content + delimiter;\n        break;\n      }\n    // at-rule\n\n    case 3:\n      {\n        switch (ns) {\n          // @font-face, @page\n          case 102:\n          case 112:\n            {\n              Sheet.current.insert(selectors[0] + content);\n              return '';\n            }\n\n          default:\n            {\n              return content + (at === 0 ? delimiter : '');\n            }\n        }\n      }\n\n    case -2:\n      {\n        content.split(needle).forEach(toSheet);\n      }\n  }\n};\n\nvar createCache = function createCache(options) {\n  if (options === undefined) options = {};\n  var key = options.key || 'css';\n  var stylisOptions;\n\n  if (options.prefix !== undefined) {\n    stylisOptions = {\n      prefix: options.prefix\n    };\n  }\n\n  var stylis = new Stylis(stylisOptions);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe\n    if (/[^a-z-]/.test(key)) {\n      throw new Error(\"Emotion key must only contain lower case alphabetical characters and - but \\\"\" + key + \"\\\" was passed\");\n    }\n  }\n\n  var inserted = {}; // $FlowFixMe\n\n  var container;\n\n  {\n    container = options.container || document.head;\n    var nodes = document.querySelectorAll(\"style[data-emotion-\" + key + \"]\");\n    Array.prototype.forEach.call(nodes, function (node) {\n      var attrib = node.getAttribute(\"data-emotion-\" + key); // $FlowFixMe\n\n      attrib.split(' ').forEach(function (id) {\n        inserted[id] = true;\n      });\n\n      if (node.parentNode !== container) {\n        container.appendChild(node);\n      }\n    });\n  }\n\n  var _insert;\n\n  {\n    stylis.use(options.stylisPlugins)(ruleSheet);\n\n    _insert = function insert(selector, serialized, sheet, shouldCache) {\n      var name = serialized.name;\n      Sheet.current = sheet;\n\n      if (process.env.NODE_ENV !== 'production' && serialized.map !== undefined) {\n        var map = serialized.map;\n        Sheet.current = {\n          insert: function insert(rule) {\n            sheet.insert(rule + map);\n          }\n        };\n      }\n\n      stylis(selector, serialized.styles);\n\n      if (shouldCache) {\n        cache.inserted[name] = true;\n      }\n    };\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // https://esbench.com/bench/5bf7371a4cd7e6009ef61d0a\n    var commentStart = /\\/\\*/g;\n    var commentEnd = /\\*\\//g;\n    stylis.use(function (context, content) {\n      switch (context) {\n        case -1:\n          {\n            while (commentStart.test(content)) {\n              commentEnd.lastIndex = commentStart.lastIndex;\n\n              if (commentEnd.test(content)) {\n                commentStart.lastIndex = commentEnd.lastIndex;\n                continue;\n              }\n\n              throw new Error('Your styles have an unterminated comment (\"/*\" without corresponding \"*/\").');\n            }\n\n            commentStart.lastIndex = 0;\n            break;\n          }\n      }\n    });\n    stylis.use(function (context, content, selectors) {\n      switch (context) {\n        case -1:\n          {\n            var flag = 'emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason';\n            var unsafePseudoClasses = content.match(/(:first|:nth|:nth-last)-child/g);\n\n            if (unsafePseudoClasses && cache.compat !== true) {\n              unsafePseudoClasses.forEach(function (unsafePseudoClass) {\n                var ignoreRegExp = new RegExp(unsafePseudoClass + \".*\\\\/\\\\* \" + flag + \" \\\\*\\\\/\");\n                var ignore = ignoreRegExp.test(content);\n\n                if (unsafePseudoClass && !ignore) {\n                  console.error(\"The pseudo class \\\"\" + unsafePseudoClass + \"\\\" is potentially unsafe when doing server-side rendering. Try changing it to \\\"\" + unsafePseudoClass.split('-child')[0] + \"-of-type\\\".\");\n                }\n              });\n            }\n\n            break;\n          }\n      }\n    });\n  }\n\n  var cache = {\n    key: key,\n    sheet: new StyleSheet({\n      key: key,\n      container: container,\n      nonce: options.nonce,\n      speedy: options.speedy\n    }),\n    nonce: options.nonce,\n    inserted: inserted,\n    registered: {},\n    insert: _insert\n  };\n  return cache;\n};\n\nexport default createCache;\n","var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className]);\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false && cache.compat !== undefined) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(\".\" + className, current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles };\n","import _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport { createContext, forwardRef, createElement, Component } from 'react';\nimport createCache from '@emotion/cache';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\nimport { serializeStyles } from '@emotion/serialize';\nimport { StyleSheet } from '@emotion/sheet';\nimport css from '@emotion/css';\nexport { default as css } from '@emotion/css';\n\nvar EmotionCacheContext = createContext( // we're doing this to avoid preconstruct's dead code elimination in this one case\n// because this module is primarily intended for the browser and node\n// but it's also required in react native and similar environments sometimes\n// and we could have a special build just for that\n// but this is much easier and the native packages\n// might use a different theme context in the future anyway\ntypeof HTMLElement !== 'undefined' ? createCache() : null);\nvar ThemeContext = createContext({});\nvar CacheProvider = EmotionCacheContext.Provider;\n\nvar withEmotionCache = function withEmotionCache(func) {\n  var render = function render(props, ref) {\n    return createElement(EmotionCacheContext.Consumer, null, function (cache) {\n      return func(props, cache, ref);\n    });\n  }; // $FlowFixMe\n\n\n  return forwardRef(render);\n};\n\n// thus we only need to replace what is a valid character for JS, but not for CSS\n\nvar sanitizeIdentifier = function sanitizeIdentifier(identifier) {\n  return identifier.replace(/\\$/g, '-');\n};\n\nvar typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__';\nvar labelPropName = '__EMOTION_LABEL_PLEASE_DO_NOT_USE__';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar render = function render(cache, props, theme, ref) {\n  var cssProp = theme === null ? props.css : props.css(theme); // so that using `css` from `emotion` and passing the result to the css prop works\n  // not passing the registered cache to serializeStyles because it would\n  // make certain babel optimisations not possible\n\n  if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {\n    cssProp = cache.registered[cssProp];\n  }\n\n  var type = props[typePropName];\n  var registeredStyles = [cssProp];\n  var className = '';\n\n  if (typeof props.className === 'string') {\n    className = getRegisteredStyles(cache.registered, registeredStyles, props.className);\n  } else if (props.className != null) {\n    className = props.className + \" \";\n  }\n\n  var serialized = serializeStyles(registeredStyles);\n\n  if (process.env.NODE_ENV !== 'production' && serialized.name.indexOf('-') === -1) {\n    var labelFromStack = props[labelPropName];\n\n    if (labelFromStack) {\n      serialized = serializeStyles([serialized, 'label:' + labelFromStack + ';']);\n    }\n  }\n\n  var rules = insertStyles(cache, serialized, typeof type === 'string');\n  className += cache.key + \"-\" + serialized.name;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key) && key !== 'css' && key !== typePropName && (process.env.NODE_ENV === 'production' || key !== labelPropName)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps.ref = ref;\n  newProps.className = className;\n  var ele = createElement(type, newProps);\n\n  return ele;\n};\n\nvar Emotion =\n/* #__PURE__ */\nwithEmotionCache(function (props, cache, ref) {\n  // use Context.read for the theme when it's stable\n  if (typeof props.css === 'function') {\n    return createElement(ThemeContext.Consumer, null, function (theme) {\n      return render(cache, props, theme, ref);\n    });\n  }\n\n  return render(cache, props, null, ref);\n});\n\nif (process.env.NODE_ENV !== 'production') {\n  Emotion.displayName = 'EmotionCssPropInternal';\n} // $FlowFixMe\n\n\nvar jsx = function jsx(type, props) {\n  var args = arguments;\n\n  if (props == null || !hasOwnProperty.call(props, 'css')) {\n    // $FlowFixMe\n    return createElement.apply(undefined, args);\n  }\n\n  if (process.env.NODE_ENV !== 'production' && typeof props.css === 'string' && // check if there is a css declaration\n  props.css.indexOf(':') !== -1) {\n    throw new Error(\"Strings are not allowed as css prop values, please wrap it in a css template literal from '@emotion/css' like this: css`\" + props.css + \"`\");\n  }\n\n  var argsLength = args.length;\n  var createElementArgArray = new Array(argsLength);\n  createElementArgArray[0] = Emotion;\n  var newProps = {};\n\n  for (var key in props) {\n    if (hasOwnProperty.call(props, key)) {\n      newProps[key] = props[key];\n    }\n  }\n\n  newProps[typePropName] = type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var error = new Error();\n\n    if (error.stack) {\n      // chrome\n      var match = error.stack.match(/at (?:Object\\.|Module\\.|)jsx.*\\n\\s+at (?:Object\\.|)([A-Z][A-Za-z$]+) /);\n\n      if (!match) {\n        // safari and firefox\n        match = error.stack.match(/.*\\n([A-Z][A-Za-z$]+)@/);\n      }\n\n      if (match) {\n        newProps[labelPropName] = sanitizeIdentifier(match[1]);\n      }\n    }\n  }\n\n  createElementArgArray[1] = newProps;\n\n  for (var i = 2; i < argsLength; i++) {\n    createElementArgArray[i] = args[i];\n  } // $FlowFixMe\n\n\n  return createElement.apply(null, createElementArgArray);\n};\n\nvar warnedAboutCssPropForGlobal = false;\nvar Global =\n/* #__PURE__ */\nwithEmotionCache(function (props, cache) {\n  if (process.env.NODE_ENV !== 'production' && !warnedAboutCssPropForGlobal && ( // check for className as well since the user is\n  // probably using the custom createElement which\n  // means it will be turned into a className prop\n  // $FlowFixMe I don't really want to add it to the type since it shouldn't be used\n  props.className || props.css)) {\n    console.error(\"It looks like you're using the css prop on Global, did you mean to use the styles prop instead?\");\n    warnedAboutCssPropForGlobal = true;\n  }\n\n  var styles = props.styles;\n\n  if (typeof styles === 'function') {\n    return createElement(ThemeContext.Consumer, null, function (theme) {\n      var serialized = serializeStyles([styles(theme)]);\n      return createElement(InnerGlobal, {\n        serialized: serialized,\n        cache: cache\n      });\n    });\n  }\n\n  var serialized = serializeStyles([styles]);\n  return createElement(InnerGlobal, {\n    serialized: serialized,\n    cache: cache\n  });\n});\n\n// maintain place over rerenders.\n// initial render from browser, insertBefore context.sheet.tags[0] or if a style hasn't been inserted there yet, appendChild\n// initial client-side render from SSR, use place of hydrating tag\nvar InnerGlobal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(InnerGlobal, _React$Component);\n\n  function InnerGlobal(props, context, updater) {\n    return _React$Component.call(this, props, context, updater) || this;\n  }\n\n  var _proto = InnerGlobal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.sheet = new StyleSheet({\n      key: this.props.cache.key + \"-global\",\n      nonce: this.props.cache.sheet.nonce,\n      container: this.props.cache.sheet.container\n    }); // $FlowFixMe\n\n    var node = document.querySelector(\"style[data-emotion-\" + this.props.cache.key + \"=\\\"\" + this.props.serialized.name + \"\\\"]\");\n\n    if (node !== null) {\n      this.sheet.tags.push(node);\n    }\n\n    if (this.props.cache.sheet.tags.length) {\n      this.sheet.before = this.props.cache.sheet.tags[0];\n    }\n\n    this.insertStyles();\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.serialized.name !== this.props.serialized.name) {\n      this.insertStyles();\n    }\n  };\n\n  _proto.insertStyles = function insertStyles$1() {\n    if (this.props.serialized.next !== undefined) {\n      // insert keyframes\n      insertStyles(this.props.cache, this.props.serialized.next, true);\n    }\n\n    if (this.sheet.tags.length) {\n      // if this doesn't exist then it will be null so the style element will be appended\n      var element = this.sheet.tags[this.sheet.tags.length - 1].nextElementSibling;\n      this.sheet.before = element;\n      this.sheet.flush();\n    }\n\n    this.props.cache.insert(\"\", this.props.serialized, this.sheet, false);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.sheet.flush();\n  };\n\n  _proto.render = function render() {\n\n    return null;\n  };\n\n  return InnerGlobal;\n}(Component);\n\nvar keyframes = function keyframes() {\n  var insertable = css.apply(void 0, arguments);\n  var name = \"animation-\" + insertable.name; // $FlowFixMe\n\n  return {\n    name: name,\n    styles: \"@keyframes \" + name + \"{\" + insertable.styles + \"}\",\n    anim: 1,\n    toString: function toString() {\n      return \"_EMO_\" + this.name + \"_\" + this.styles + \"_EMO_\";\n    }\n  };\n};\n\nvar classnames = function classnames(args) {\n  var len = args.length;\n  var i = 0;\n  var cls = '';\n\n  for (; i < len; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar ClassNames = withEmotionCache(function (props, context) {\n  return createElement(ThemeContext.Consumer, null, function (theme) {\n    var hasRendered = false;\n\n    var css = function css() {\n      if (hasRendered && process.env.NODE_ENV !== 'production') {\n        throw new Error('css can only be used during render');\n      }\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var serialized = serializeStyles(args, context.registered);\n\n      {\n        insertStyles(context, serialized, false);\n      }\n\n      return context.key + \"-\" + serialized.name;\n    };\n\n    var cx = function cx() {\n      if (hasRendered && process.env.NODE_ENV !== 'production') {\n        throw new Error('cx can only be used during render');\n      }\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return merge(context.registered, css, classnames(args));\n    };\n\n    var content = {\n      css: css,\n      cx: cx,\n      theme: theme\n    };\n    var ele = props.children(content);\n    hasRendered = true;\n\n    return ele;\n  });\n});\n\nexport { CacheProvider, ClassNames, Global, ThemeContext, jsx, keyframes, withEmotionCache };\n","import { serializeStyles } from '@emotion/serialize';\n\nfunction css() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return serializeStyles(args);\n}\n\nexport default css;\n","/* eslint-disable */\n// Inspired by https://github.com/garycourt/murmurhash-js\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\nfunction murmur2(str) {\n  // 'm' and 'r' are mixing constants generated offline.\n  // They're not really 'magic', they just happen to work well.\n  // const m = 0x5bd1e995;\n  // const r = 24;\n  // Initialize the hash\n  var h = 0; // Mix 4 bytes at a time into the hash\n\n  var k,\n      i = 0,\n      len = str.length;\n\n  for (; len >= 4; ++i, len -= 4) {\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\n    k =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\n    k ^=\n    /* k >>> r: */\n    k >>> 24;\n    h =\n    /* Math.imul(k, m): */\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\n    /* Math.imul(h, m): */\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Handle the last few bytes of the input array\n\n\n  switch (len) {\n    case 3:\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\n\n    case 2:\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\n\n    case 1:\n      h ^= str.charCodeAt(i) & 0xff;\n      h =\n      /* Math.imul(h, m): */\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  } // Do a few final mixes of the hash to ensure the last few\n  // bytes are well-incorporated.\n\n\n  h ^= h >>> 13;\n  h =\n  /* Math.imul(h, m): */\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\n  return ((h ^ h >>> 15) >>> 0).toString(36);\n}\n\nexport default murmur2;\n","function memoize(fn) {\n  var cache = {};\n  return function (arg) {\n    if (cache[arg] === undefined) cache[arg] = fn(arg);\n    return cache[arg];\n  };\n}\n\nexport default memoize;\n","import hashString from '@emotion/hash';\nimport unitless from '@emotion/unitless';\nimport memoize from '@emotion/memoize';\n\nvar ILLEGAL_ESCAPE_SEQUENCE_ERROR = \"You have illegal escape sequence in your template literal, most likely inside content's property value.\\nBecause you write your CSS inside a JavaScript string you actually have to do double escaping, so for example \\\"content: '\\\\00d7';\\\" should become \\\"content: '\\\\\\\\00d7';\\\".\\nYou can read more about this here:\\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#ES2018_revision_of_illegal_escape_sequences\";\nvar UNDEFINED_AS_OBJECT_KEY_ERROR = \"You have passed in falsy value as style object's key (can happen when in example you pass unexported component as computed key).\";\nvar hyphenateRegex = /[A-Z]|^ms/g;\nvar animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g;\n\nvar isCustomProperty = function isCustomProperty(property) {\n  return property.charCodeAt(1) === 45;\n};\n\nvar isProcessableValue = function isProcessableValue(value) {\n  return value != null && typeof value !== 'boolean';\n};\n\nvar processStyleName = memoize(function (styleName) {\n  return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase();\n});\n\nvar processStyleValue = function processStyleValue(key, value) {\n  switch (key) {\n    case 'animation':\n    case 'animationName':\n      {\n        if (typeof value === 'string') {\n          return value.replace(animationRegex, function (match, p1, p2) {\n            cursor = {\n              name: p1,\n              styles: p2,\n              next: cursor\n            };\n            return p1;\n          });\n        }\n      }\n  }\n\n  if (unitless[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {\n    return value + 'px';\n  }\n\n  return value;\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  var contentValuePattern = /(attr|calc|counters?|url)\\(/;\n  var contentValues = ['normal', 'none', 'counter', 'open-quote', 'close-quote', 'no-open-quote', 'no-close-quote', 'initial', 'inherit', 'unset'];\n  var oldProcessStyleValue = processStyleValue;\n  var msPattern = /^-ms-/;\n  var hyphenPattern = /-(.)/g;\n  var hyphenatedCache = {};\n\n  processStyleValue = function processStyleValue(key, value) {\n    if (key === 'content') {\n      if (typeof value !== 'string' || contentValues.indexOf(value) === -1 && !contentValuePattern.test(value) && (value.charAt(0) !== value.charAt(value.length - 1) || value.charAt(0) !== '\"' && value.charAt(0) !== \"'\")) {\n        console.error(\"You seem to be using a value for 'content' without quotes, try replacing it with `content: '\\\"\" + value + \"\\\"'`\");\n      }\n    }\n\n    var processed = oldProcessStyleValue(key, value);\n\n    if (processed !== '' && !isCustomProperty(key) && key.indexOf('-') !== -1 && hyphenatedCache[key] === undefined) {\n      hyphenatedCache[key] = true;\n      console.error(\"Using kebab-case for css properties in objects is not supported. Did you mean \" + key.replace(msPattern, 'ms-').replace(hyphenPattern, function (str, _char) {\n        return _char.toUpperCase();\n      }) + \"?\");\n    }\n\n    return processed;\n  };\n}\n\nvar shouldWarnAboutInterpolatingClassNameFromCss = true;\n\nfunction handleInterpolation(mergedProps, registered, interpolation, couldBeSelectorInterpolation) {\n  if (interpolation == null) {\n    return '';\n  }\n\n  if (interpolation.__emotion_styles !== undefined) {\n    if (process.env.NODE_ENV !== 'production' && interpolation.toString() === 'NO_COMPONENT_SELECTOR') {\n      throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n    }\n\n    return interpolation;\n  }\n\n  switch (typeof interpolation) {\n    case 'boolean':\n      {\n        return '';\n      }\n\n    case 'object':\n      {\n        if (interpolation.anim === 1) {\n          cursor = {\n            name: interpolation.name,\n            styles: interpolation.styles,\n            next: cursor\n          };\n          return interpolation.name;\n        }\n\n        if (interpolation.styles !== undefined) {\n          var next = interpolation.next;\n\n          if (next !== undefined) {\n            // not the most efficient thing ever but this is a pretty rare case\n            // and there will be very few iterations of this generally\n            while (next !== undefined) {\n              cursor = {\n                name: next.name,\n                styles: next.styles,\n                next: cursor\n              };\n              next = next.next;\n            }\n          }\n\n          var styles = interpolation.styles + \";\";\n\n          if (process.env.NODE_ENV !== 'production' && interpolation.map !== undefined) {\n            styles += interpolation.map;\n          }\n\n          return styles;\n        }\n\n        return createStringFromObject(mergedProps, registered, interpolation);\n      }\n\n    case 'function':\n      {\n        if (mergedProps !== undefined) {\n          var previousCursor = cursor;\n          var result = interpolation(mergedProps);\n          cursor = previousCursor;\n          return handleInterpolation(mergedProps, registered, result, couldBeSelectorInterpolation);\n        } else if (process.env.NODE_ENV !== 'production') {\n          console.error('Functions that are interpolated in css calls will be stringified.\\n' + 'If you want to have a css call based on props, create a function that returns a css call like this\\n' + 'let dynamicStyle = (props) => css`color: ${props.color}`\\n' + 'It can be called directly with props or interpolated in a styled call like this\\n' + \"let SomeComponent = styled('div')`${dynamicStyle}`\");\n        }\n\n        break;\n      }\n\n    case 'string':\n      if (process.env.NODE_ENV !== 'production') {\n        var matched = [];\n        var replaced = interpolation.replace(animationRegex, function (match, p1, p2) {\n          var fakeVarName = \"animation\" + matched.length;\n          matched.push(\"const \" + fakeVarName + \" = keyframes`\" + p2.replace(/^@keyframes animation-\\w+/, '') + \"`\");\n          return \"${\" + fakeVarName + \"}\";\n        });\n\n        if (matched.length) {\n          console.error('`keyframes` output got interpolated into plain string, please wrap it with `css`.\\n\\n' + 'Instead of doing this:\\n\\n' + [].concat(matched, [\"`\" + replaced + \"`\"]).join('\\n') + '\\n\\nYou should wrap it with `css` like this:\\n\\n' + (\"css`\" + replaced + \"`\"));\n        }\n      }\n\n      break;\n  } // finalize string values (regular strings and functions interpolated into css calls)\n\n\n  if (registered == null) {\n    return interpolation;\n  }\n\n  var cached = registered[interpolation];\n\n  if (process.env.NODE_ENV !== 'production' && couldBeSelectorInterpolation && shouldWarnAboutInterpolatingClassNameFromCss && cached !== undefined) {\n    console.error('Interpolating a className from css`` is not recommended and will cause problems with composition.\\n' + 'Interpolating a className from css`` will be completely unsupported in a future major version of Emotion');\n    shouldWarnAboutInterpolatingClassNameFromCss = false;\n  }\n\n  return cached !== undefined && !couldBeSelectorInterpolation ? cached : interpolation;\n}\n\nfunction createStringFromObject(mergedProps, registered, obj) {\n  var string = '';\n\n  if (Array.isArray(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      string += handleInterpolation(mergedProps, registered, obj[i], false);\n    }\n  } else {\n    for (var _key in obj) {\n      var value = obj[_key];\n\n      if (typeof value !== 'object') {\n        if (registered != null && registered[value] !== undefined) {\n          string += _key + \"{\" + registered[value] + \"}\";\n        } else if (isProcessableValue(value)) {\n          string += processStyleName(_key) + \":\" + processStyleValue(_key, value) + \";\";\n        }\n      } else {\n        if (_key === 'NO_COMPONENT_SELECTOR' && process.env.NODE_ENV !== 'production') {\n          throw new Error('Component selectors can only be used in conjunction with babel-plugin-emotion.');\n        }\n\n        if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {\n          for (var _i = 0; _i < value.length; _i++) {\n            if (isProcessableValue(value[_i])) {\n              string += processStyleName(_key) + \":\" + processStyleValue(_key, value[_i]) + \";\";\n            }\n          }\n        } else {\n          var interpolated = handleInterpolation(mergedProps, registered, value, false);\n\n          switch (_key) {\n            case 'animation':\n            case 'animationName':\n              {\n                string += processStyleName(_key) + \":\" + interpolated + \";\";\n                break;\n              }\n\n            default:\n              {\n                if (process.env.NODE_ENV !== 'production' && _key === 'undefined') {\n                  console.error(UNDEFINED_AS_OBJECT_KEY_ERROR);\n                }\n\n                string += _key + \"{\" + interpolated + \"}\";\n              }\n          }\n        }\n      }\n    }\n  }\n\n  return string;\n}\n\nvar labelPattern = /label:\\s*([^\\s;\\n{]+)\\s*;/g;\nvar sourceMapPattern;\n\nif (process.env.NODE_ENV !== 'production') {\n  sourceMapPattern = /\\/\\*#\\ssourceMappingURL=data:application\\/json;\\S+\\s+\\*\\//;\n} // this is the cursor for keyframes\n// keyframes are stored on the SerializedStyles object as a linked list\n\n\nvar cursor;\nvar serializeStyles = function serializeStyles(args, registered, mergedProps) {\n  if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {\n    return args[0];\n  }\n\n  var stringMode = true;\n  var styles = '';\n  cursor = undefined;\n  var strings = args[0];\n\n  if (strings == null || strings.raw === undefined) {\n    stringMode = false;\n    styles += handleInterpolation(mergedProps, registered, strings, false);\n  } else {\n    if (process.env.NODE_ENV !== 'production' && strings[0] === undefined) {\n      console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n    }\n\n    styles += strings[0];\n  } // we start at 1 since we've already handled the first arg\n\n\n  for (var i = 1; i < args.length; i++) {\n    styles += handleInterpolation(mergedProps, registered, args[i], styles.charCodeAt(styles.length - 1) === 46);\n\n    if (stringMode) {\n      if (process.env.NODE_ENV !== 'production' && strings[i] === undefined) {\n        console.error(ILLEGAL_ESCAPE_SEQUENCE_ERROR);\n      }\n\n      styles += strings[i];\n    }\n  }\n\n  var sourceMap;\n\n  if (process.env.NODE_ENV !== 'production') {\n    styles = styles.replace(sourceMapPattern, function (match) {\n      sourceMap = match;\n      return '';\n    });\n  } // using a global regex with .exec is stateful so lastIndex has to be reset each time\n\n\n  labelPattern.lastIndex = 0;\n  var identifierName = '';\n  var match; // https://esbench.com/bench/5b809c2cf2949800a0f61fb5\n\n  while ((match = labelPattern.exec(styles)) !== null) {\n    identifierName += '-' + // $FlowFixMe we know it's not null\n    match[1];\n  }\n\n  var name = hashString(styles) + identifierName;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // $FlowFixMe SerializedStyles type doesn't have toString property (and we don't want to add it)\n    return {\n      name: name,\n      styles: styles,\n      map: sourceMap,\n      next: cursor,\n      toString: function toString() {\n        return \"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";\n      }\n    };\n  }\n\n  return {\n    name: name,\n    styles: styles,\n    next: cursor\n  };\n};\n\nexport { serializeStyles };\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n *\n */\n\nimport CodeMirror, { Hints, Hint } from 'codemirror';\nimport 'codemirror/addon/hint/show-hint';\n\nimport { FragmentDefinitionNode, GraphQLSchema, GraphQLType } from 'graphql';\nimport type { Maybe } from 'graphql-language-service';\nimport { getAutocompleteSuggestions, Position } from 'graphql-language-service';\n\nexport interface GraphQLHintOptions {\n  schema?: GraphQLSchema;\n  externalFragments?: string | FragmentDefinitionNode[];\n}\n\ninterface IHint extends Hint {\n  isDeprecated?: boolean;\n  type?: Maybe<GraphQLType>;\n  description?: Maybe<string>;\n  deprecationReason?: Maybe<string>;\n}\n\ninterface IHints extends Hints {\n  list: IHint[];\n}\n\ndeclare module 'codemirror' {\n  interface ShowHintOptions {\n    schema?: GraphQLSchema;\n    externalFragments?: string | FragmentDefinitionNode[];\n  }\n\n  interface CodeMirrorHintMap {\n    graphql: (\n      editor: CodeMirror.Editor,\n      options: GraphQLHintOptions,\n    ) => IHints | undefined;\n  }\n}\n\n/**\n * Registers a \"hint\" helper for CodeMirror.\n *\n * Using CodeMirror's \"hint\" addon: https://codemirror.net/demo/complete.html\n * Given an editor, this helper will take the token at the cursor and return a\n * list of suggested tokens.\n *\n * Options:\n *\n *   - schema: GraphQLSchema provides the hinter with positionally relevant info\n *\n * Additional Events:\n *\n *   - hasCompletion (codemirror, data, token) - signaled when the hinter has a\n *     new list of completion suggestions.\n *\n */\nCodeMirror.registerHelper(\n  'hint',\n  'graphql',\n  (\n    editor: CodeMirror.Editor,\n    options: GraphQLHintOptions,\n  ): IHints | undefined => {\n    const schema = options.schema;\n    if (!schema) {\n      return;\n    }\n\n    const cur = editor.getCursor();\n    const token = editor.getTokenAt(cur);\n\n    const tokenStart =\n      token.type !== null && /\"|\\w/.test(token.string[0])\n        ? token.start\n        : token.end;\n\n    const position = new Position(cur.line, tokenStart);\n\n    const rawResults = getAutocompleteSuggestions(\n      schema,\n      editor.getValue(),\n      position,\n      token,\n      options.externalFragments,\n    );\n\n    const results = {\n      list: rawResults.map(item => ({\n        text: item.label,\n        type: item.type,\n        description: item.documentation,\n        isDeprecated: item.isDeprecated,\n        deprecationReason: item.deprecationReason,\n      })),\n      from: { line: cur.line, ch: tokenStart },\n      to: { line: cur.line, ch: token.end },\n    };\n\n    if (results?.list && results.list.length > 0) {\n      results.from = CodeMirror.Pos(results.from.line, results.from.ch);\n      results.to = CodeMirror.Pos(results.to.line, results.to.ch);\n      CodeMirror.signal(editor, 'hasCompletion', editor, results, token);\n    }\n\n    return results;\n  },\n);\n// exporting here so we don't need to import the codemirror show-hint addon module (and its implementation)\nexport type { IHint, IHints };\n","/* @flow */\n/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport {\n  GraphQLDirective,\n  GraphQLEnumType,\n  GraphQLEnumValue,\n  GraphQLInputField,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  GraphQLSchema,\n  GraphQLType,\n} from 'graphql';\nimport CodeMirror from 'codemirror';\n\nimport getTypeInfo, { TypeInfo } from './utils/getTypeInfo';\nimport {\n  getArgumentReference,\n  getDirectiveReference,\n  getEnumValueReference,\n  getFieldReference,\n  getTypeReference,\n  SchemaReference,\n} from './utils/SchemaReference';\nimport './utils/info-addon';\nimport type { Maybe } from 'graphql-language-service';\n\nexport interface GraphQLInfoOptions {\n  schema?: GraphQLSchema;\n  onClick?: Maybe<(ref: Maybe<SchemaReference>, e: MouseEvent) => void>;\n  renderDescription?: (str: string) => string;\n  render?: () => string;\n}\n\n/**\n * Registers GraphQL \"info\" tooltips for CodeMirror.\n *\n * When hovering over a token, this presents a tooltip explaining it.\n *\n * Options:\n *\n *   - schema: GraphQLSchema provides positionally relevant info.\n *   - hoverTime: The number of ms to wait before showing info. (Default 500)\n *   - renderDescription: Convert a description to some HTML, Useful since\n *                        descriptions are often Markdown formatted.\n *   - onClick: A function called when a named thing is clicked.\n *\n */\nCodeMirror.registerHelper(\n  'info',\n  'graphql',\n  (token: CodeMirror.Token, options: GraphQLInfoOptions) => {\n    if (!options.schema || !token.state) {\n      return;\n    }\n\n    const state = token.state;\n    const kind = state.kind;\n    const step = state.step;\n    const typeInfo = getTypeInfo(options.schema, token.state);\n\n    // Given a Schema and a Token, produce the contents of an info tooltip.\n    // To do this, create a div element that we will render \"into\" and then pass\n    // it to various rendering functions.\n    if (\n      (kind === 'Field' && step === 0 && typeInfo.fieldDef) ||\n      (kind === 'AliasedField' && step === 2 && typeInfo.fieldDef)\n    ) {\n      const into = document.createElement('div');\n      renderField(into, typeInfo, options);\n      renderDescription(into, options, typeInfo.fieldDef as any);\n      return into;\n    } else if (kind === 'Directive' && step === 1 && typeInfo.directiveDef) {\n      const into = document.createElement('div');\n      renderDirective(into, typeInfo, options);\n      renderDescription(into, options, typeInfo.directiveDef);\n      return into;\n    } else if (kind === 'Argument' && step === 0 && typeInfo.argDef) {\n      const into = document.createElement('div');\n      renderArg(into, typeInfo, options);\n      renderDescription(into, options, typeInfo.argDef);\n      return into;\n    } else if (\n      kind === 'EnumValue' &&\n      typeInfo.enumValue &&\n      typeInfo.enumValue.description\n    ) {\n      const into = document.createElement('div');\n      renderEnumValue(into, typeInfo, options);\n      renderDescription(into, options, typeInfo.enumValue);\n      return into;\n    } else if (\n      kind === 'NamedType' &&\n      typeInfo.type &&\n      (typeInfo.type as GraphQLObjectType).description\n    ) {\n      const into = document.createElement('div');\n      renderType(into, typeInfo, options, typeInfo.type);\n      renderDescription(into, options, typeInfo.type);\n      return into;\n    }\n  },\n);\n\nfunction renderField(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n) {\n  renderQualifiedField(into, typeInfo, options);\n  renderTypeAnnotation(into, typeInfo, options, typeInfo.type);\n}\n\nfunction renderQualifiedField(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n) {\n  const fieldName = typeInfo.fieldDef?.name || '';\n  if (fieldName.slice(0, 2) !== '__') {\n    renderType(into, typeInfo, options, typeInfo.parentType);\n    text(into, '.');\n  }\n  text(into, fieldName, 'field-name', options, getFieldReference(typeInfo));\n}\n\nfunction renderDirective(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n) {\n  const name = '@' + (typeInfo.directiveDef?.name || '');\n  text(into, name, 'directive-name', options, getDirectiveReference(typeInfo));\n}\n\nfunction renderArg(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n) {\n  if (typeInfo.directiveDef) {\n    renderDirective(into, typeInfo, options);\n  } else if (typeInfo.fieldDef) {\n    renderQualifiedField(into, typeInfo, options);\n  }\n\n  const name = typeInfo.argDef?.name || '';\n  text(into, '(');\n  text(into, name, 'arg-name', options, getArgumentReference(typeInfo));\n  renderTypeAnnotation(into, typeInfo, options, typeInfo.inputType);\n  text(into, ')');\n}\n\nfunction renderTypeAnnotation(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n  t: Maybe<GraphQLType>,\n) {\n  text(into, ': ');\n  renderType(into, typeInfo, options, t);\n}\n\nfunction renderEnumValue(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n) {\n  const name = typeInfo.enumValue?.name || '';\n  renderType(into, typeInfo, options, typeInfo.inputType);\n  text(into, '.');\n  text(into, name, 'enum-value', options, getEnumValueReference(typeInfo));\n}\n\nfunction renderType(\n  into: HTMLElement,\n  typeInfo: TypeInfo,\n  options: GraphQLInfoOptions,\n  t: Maybe<GraphQLType>,\n) {\n  if (t instanceof GraphQLNonNull) {\n    renderType(into, typeInfo, options, t.ofType);\n    text(into, '!');\n  } else if (t instanceof GraphQLList) {\n    text(into, '[');\n    renderType(into, typeInfo, options, t.ofType);\n    text(into, ']');\n  } else {\n    text(\n      into,\n      t?.name || '',\n      'type-name',\n      options,\n      getTypeReference(typeInfo, t),\n    );\n  }\n}\n\nfunction renderDescription(\n  into: HTMLElement,\n  options: GraphQLInfoOptions,\n  def:\n    | GraphQLInputField\n    | GraphQLEnumType\n    | GraphQLDirective\n    | GraphQLEnumValue\n    | GraphQLType,\n) {\n  const description = (def as GraphQLInputField).description;\n  if (description) {\n    const descriptionDiv = document.createElement('div');\n    descriptionDiv.className = 'info-description';\n    if (options.renderDescription) {\n      descriptionDiv.innerHTML = options.renderDescription(description);\n    } else {\n      descriptionDiv.appendChild(document.createTextNode(description));\n    }\n    into.appendChild(descriptionDiv);\n  }\n\n  renderDeprecation(into, options, def);\n}\n\nfunction renderDeprecation(\n  into: HTMLElement,\n  options: GraphQLInfoOptions,\n  def:\n    | GraphQLInputField\n    | GraphQLEnumType\n    | GraphQLDirective\n    | GraphQLEnumValue\n    | GraphQLType,\n) {\n  const reason = (def as GraphQLInputField).deprecationReason;\n  if (reason) {\n    const deprecationDiv = document.createElement('div');\n    deprecationDiv.className = 'info-deprecation';\n    if (options.renderDescription) {\n      deprecationDiv.innerHTML = options.renderDescription(reason);\n    } else {\n      deprecationDiv.appendChild(document.createTextNode(reason));\n    }\n    const label = document.createElement('span');\n    label.className = 'info-deprecation-label';\n    label.appendChild(document.createTextNode('Deprecated: '));\n    deprecationDiv.insertBefore(label, deprecationDiv.firstChild);\n    into.appendChild(deprecationDiv);\n  }\n}\n\nfunction text(\n  into: HTMLElement,\n  content: string,\n  className = '',\n  options: GraphQLInfoOptions = { onClick: null },\n  ref: Maybe<SchemaReference> = null,\n) {\n  if (className) {\n    const onClick = options.onClick;\n    let node;\n    if (onClick) {\n      node = document.createElement('a');\n\n      // Providing a href forces proper a tag behavior, though we don't actually\n      // want clicking the node to navigate anywhere.\n      node.href = 'javascript:void 0'; // eslint-disable-line no-script-url\n      node.addEventListener('click', (e: MouseEvent) => {\n        onClick(ref, e);\n      });\n    } else {\n      node = document.createElement('span');\n    }\n    node.className = className;\n    node.appendChild(document.createTextNode(content));\n    into.appendChild(node);\n  } else {\n    into.appendChild(document.createTextNode(content));\n  }\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n *\n */\n\nimport CodeMirror from 'codemirror';\n\nimport getTypeInfo from './utils/getTypeInfo';\nimport {\n  getArgumentReference,\n  getDirectiveReference,\n  getEnumValueReference,\n  getFieldReference,\n  getTypeReference,\n} from './utils/SchemaReference';\nimport './utils/jump-addon';\nimport { GraphQLSchema } from 'graphql';\nimport type { State } from 'graphql-language-service';\n\nexport interface GraphQLJumpOptions {\n  schema?: GraphQLSchema;\n  onClick?: () => void;\n  state?: State;\n}\n\n/**\n * Registers GraphQL \"jump\" links for CodeMirror.\n *\n * When command-hovering over a token, this converts it to a link, which when\n * pressed will call the provided onClick handler.\n *\n * Options:\n *\n *   - schema: GraphQLSchema provides positionally relevant info.\n *   - onClick: A function called when a named thing is clicked.\n *\n */\nCodeMirror.registerHelper(\n  'jump',\n  'graphql',\n  (token: CodeMirror.Token, options: GraphQLJumpOptions) => {\n    if (!options.schema || !options.onClick || !token.state) {\n      return;\n    }\n\n    // Given a Schema and a Token, produce a \"SchemaReference\" which refers to\n    // the particular artifact from the schema (such as a type, field, argument,\n    // or directive) that token references.\n    const state = token.state;\n    const kind = state.kind;\n    const step = state.step;\n    const typeInfo = getTypeInfo(options.schema, state);\n\n    if (\n      (kind === 'Field' && step === 0 && typeInfo.fieldDef) ||\n      (kind === 'AliasedField' && step === 2 && typeInfo.fieldDef)\n    ) {\n      return getFieldReference(typeInfo);\n    } else if (kind === 'Directive' && step === 1 && typeInfo.directiveDef) {\n      return getDirectiveReference(typeInfo);\n    } else if (kind === 'Argument' && step === 0 && typeInfo.argDef) {\n      return getArgumentReference(typeInfo);\n    } else if (kind === 'EnumValue' && typeInfo.enumValue) {\n      return getEnumValueReference(typeInfo);\n    } else if (kind === 'NamedType' && typeInfo.type) {\n      return getTypeReference(typeInfo);\n    }\n  },\n);\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport CodeMirror from 'codemirror';\nimport modeFactory from './utils/mode-factory';\n\nCodeMirror.defineMode('graphql', modeFactory);\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport { getNamedType, GraphQLSchema } from 'graphql';\n\nimport type {\n  GraphQLArgument,\n  GraphQLDirective,\n  GraphQLEnumValue,\n  GraphQLEnumType,\n  GraphQLField,\n  GraphQLNamedType,\n} from 'graphql';\nimport { Maybe } from 'graphql/jsutils/Maybe';\nimport { TypeInfo } from './getTypeInfo';\n\nexport type SchemaReference =\n  | FieldReference\n  | DirectiveReference\n  | ArgumentReference\n  | EnumValueReference\n  | TypeReference;\n\nexport type FieldReference = {\n  kind: 'Field';\n  field: GraphQLField<any, any>;\n  type: Maybe<GraphQLNamedType>;\n  schema?: GraphQLSchema;\n};\n\nexport type DirectiveReference = {\n  kind: 'Directive';\n  directive: GraphQLDirective;\n  schema?: GraphQLSchema;\n};\n\nexport type ArgumentReference = {\n  kind: 'Argument';\n  argument: GraphQLArgument;\n  field?: GraphQLField<any, any>;\n  type?: GraphQLNamedType;\n  directive?: GraphQLDirective;\n  schema?: GraphQLSchema;\n};\n\nexport type EnumValueReference = {\n  kind: 'EnumValue';\n  value?: GraphQLEnumValue;\n  type?: GraphQLEnumType;\n  schema?: GraphQLSchema;\n};\n\nexport type TypeReference = {\n  kind: 'Type';\n  type: GraphQLNamedType;\n  schema?: GraphQLSchema;\n};\n\nexport function getFieldReference(typeInfo: any): FieldReference {\n  return {\n    kind: 'Field',\n    schema: typeInfo.schema,\n    field: typeInfo.fieldDef,\n    type: isMetaField(typeInfo.fieldDef) ? null : typeInfo.parentType,\n  };\n}\n\nexport function getDirectiveReference(typeInfo: any): DirectiveReference {\n  return {\n    kind: 'Directive',\n    schema: typeInfo.schema,\n    directive: typeInfo.directiveDef,\n  };\n}\n\nexport function getArgumentReference(typeInfo: any): ArgumentReference {\n  return typeInfo.directiveDef\n    ? {\n        kind: 'Argument',\n        schema: typeInfo.schema,\n        argument: typeInfo.argDef,\n        directive: typeInfo.directiveDef,\n      }\n    : {\n        kind: 'Argument',\n        schema: typeInfo.schema,\n        argument: typeInfo.argDef,\n        field: typeInfo.fieldDef,\n        type: isMetaField(typeInfo.fieldDef) ? null : typeInfo.parentType,\n      };\n}\n\nexport function getEnumValueReference(typeInfo: TypeInfo): EnumValueReference {\n  return {\n    kind: 'EnumValue',\n    value: typeInfo.enumValue || undefined,\n    // $FlowFixMe\n    type: typeInfo.inputType\n      ? (getNamedType(typeInfo.inputType) as GraphQLEnumType)\n      : undefined,\n  };\n}\n\n// Note: for reusability, getTypeReference can produce a reference to any type,\n// though it defaults to the current type.\nexport function getTypeReference(\n  typeInfo: any,\n  type?: Maybe<GraphQLNamedType>,\n): TypeReference {\n  return {\n    kind: 'Type',\n    schema: typeInfo.schema,\n    type: type || typeInfo.type,\n  };\n}\n\nfunction isMetaField(fieldDef: GraphQLField<any, any>) {\n  return fieldDef.name.slice(0, 2) === '__';\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport type { State, Maybe } from 'graphql-language-service';\n\n// Utility for iterating through a CodeMirror parse state stack bottom-up.\nexport default function forEachState(stack: State, fn: (state: State) => void) {\n  const reverseStateStack = [];\n  let state: Maybe<State> = stack;\n  while (state?.kind) {\n    reverseStateStack.push(state);\n    state = state.prevState;\n  }\n  for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n    fn(reverseStateStack[i]);\n  }\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport {\n  isCompositeType,\n  getNullableType,\n  getNamedType,\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLList,\n  GraphQLSchema,\n  GraphQLType,\n  GraphQLObjectType,\n  GraphQLField,\n  GraphQLDirective,\n  GraphQLArgument,\n  GraphQLInputType,\n  GraphQLEnumValue,\n  GraphQLInputFieldMap,\n} from 'graphql';\nimport type { State, Maybe } from 'graphql-language-service';\n\nimport {\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef,\n} from 'graphql/type/introspection';\n\nimport forEachState from './forEachState';\n\nexport interface TypeInfo {\n  schema: GraphQLSchema;\n  type?: Maybe<GraphQLType>;\n  parentType?: Maybe<GraphQLType>;\n  inputType?: Maybe<GraphQLInputType>;\n  directiveDef?: Maybe<GraphQLDirective>;\n  fieldDef?: Maybe<GraphQLField<any, any>>;\n  argDef?: Maybe<GraphQLArgument>;\n  argDefs?: Maybe<GraphQLArgument[]>;\n  enumValue?: Maybe<GraphQLEnumValue>;\n  objectFieldDefs?: Maybe<GraphQLInputFieldMap>;\n}\n\n/**\n * Utility for collecting rich type information given any token's state\n * from the graphql-mode parser.\n */\nexport default function getTypeInfo(schema: GraphQLSchema, tokenState: State) {\n  const info: TypeInfo = {\n    schema,\n    type: null,\n    parentType: null,\n    inputType: null,\n    directiveDef: null,\n    fieldDef: null,\n    argDef: null,\n    argDefs: null,\n    objectFieldDefs: null,\n  };\n\n  forEachState(tokenState, (state: State) => {\n    switch (state.kind) {\n      case 'Query':\n      case 'ShortQuery':\n        info.type = schema.getQueryType();\n        break;\n      case 'Mutation':\n        info.type = schema.getMutationType();\n        break;\n      case 'Subscription':\n        info.type = schema.getSubscriptionType();\n        break;\n      case 'InlineFragment':\n      case 'FragmentDefinition':\n        if (state.type) {\n          info.type = schema.getType(state.type);\n        }\n        break;\n      case 'Field':\n      case 'AliasedField':\n        info.fieldDef =\n          info.type && state.name\n            ? getFieldDef(schema, info.parentType, state.name)\n            : null;\n        info.type = info.fieldDef?.type;\n        break;\n      case 'SelectionSet':\n        info.parentType = info.type ? getNamedType(info.type) : null;\n        break;\n      case 'Directive':\n        info.directiveDef = state.name ? schema.getDirective(state.name) : null;\n        break;\n      case 'Arguments':\n        const parentDef = state.prevState\n          ? state.prevState.kind === 'Field'\n            ? info.fieldDef\n            : state.prevState.kind === 'Directive'\n            ? info.directiveDef\n            : state.prevState.kind === 'AliasedField'\n            ? state.prevState.name &&\n              getFieldDef(schema, info.parentType, state.prevState.name)\n            : null\n          : null;\n        info.argDefs = parentDef ? (parentDef.args as GraphQLArgument[]) : null;\n        break;\n      case 'Argument':\n        info.argDef = null;\n        if (info.argDefs) {\n          for (let i = 0; i < info.argDefs.length; i++) {\n            if (info.argDefs[i].name === state.name) {\n              info.argDef = info.argDefs[i];\n              break;\n            }\n          }\n        }\n        info.inputType = info.argDef?.type;\n        break;\n      case 'EnumValue':\n        const enumType = info.inputType ? getNamedType(info.inputType) : null;\n        info.enumValue =\n          enumType instanceof GraphQLEnumType\n            ? find(\n                enumType.getValues() as GraphQLEnumValue[],\n                val => val.value === state.name,\n              )\n            : null;\n        break;\n      case 'ListValue':\n        const nullableType = info.inputType\n          ? getNullableType(info.inputType)\n          : null;\n        info.inputType =\n          nullableType instanceof GraphQLList ? nullableType.ofType : null;\n        break;\n      case 'ObjectValue':\n        const objectType = info.inputType ? getNamedType(info.inputType) : null;\n        info.objectFieldDefs =\n          objectType instanceof GraphQLInputObjectType\n            ? objectType.getFields()\n            : null;\n        break;\n      case 'ObjectField':\n        const objectField =\n          state.name && info.objectFieldDefs\n            ? info.objectFieldDefs[state.name]\n            : null;\n        info.inputType = objectField?.type;\n        break;\n      case 'NamedType':\n        info.type = state.name ? schema.getType(state.name) : null;\n        break;\n    }\n  });\n\n  return info;\n}\n\n// Gets the field definition given a type and field name\nfunction getFieldDef(\n  schema: GraphQLSchema,\n  type: Maybe<GraphQLType>,\n  fieldName: string,\n) {\n  if (fieldName === SchemaMetaFieldDef.name && schema.getQueryType() === type) {\n    return SchemaMetaFieldDef;\n  }\n  if (fieldName === TypeMetaFieldDef.name && schema.getQueryType() === type) {\n    return TypeMetaFieldDef;\n  }\n  if (fieldName === TypeNameMetaFieldDef.name && isCompositeType(type)) {\n    return TypeNameMetaFieldDef;\n  }\n  if (type && (type as GraphQLObjectType).getFields) {\n    return (type as GraphQLObjectType).getFields()[fieldName];\n  }\n}\n\n// Returns the first item in the array which causes predicate to return truthy.\nfunction find<T>(array: T[], predicate: (item: T) => boolean) {\n  for (let i = 0; i < array.length; i++) {\n    if (predicate(array[i])) {\n      return array[i];\n    }\n  }\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport CodeMirror from 'codemirror';\nimport { GraphQLInfoOptions } from '../info';\n\nCodeMirror.defineOption(\n  'info',\n  false,\n  (\n    cm: CodeMirror.Editor,\n    options: GraphQLInfoOptions,\n    old?: GraphQLInfoOptions,\n  ) => {\n    if (old && old !== CodeMirror.Init) {\n      const oldOnMouseOver = cm.state.info.onMouseOver;\n      CodeMirror.off(cm.getWrapperElement(), 'mouseover', oldOnMouseOver);\n      clearTimeout(cm.state.info.hoverTimeout);\n      delete cm.state.info;\n    }\n\n    if (options) {\n      const state: Record<string, any> = (cm.state.info = createState(options));\n      state.onMouseOver = onMouseOver.bind(null, cm);\n      CodeMirror.on(cm.getWrapperElement(), 'mouseover', state.onMouseOver);\n    }\n  },\n);\n\nfunction createState(options: GraphQLInfoOptions) {\n  return {\n    options:\n      options instanceof Function\n        ? { render: options }\n        : options === true\n        ? {}\n        : options,\n  };\n}\n\nfunction getHoverTime(cm: CodeMirror.Editor) {\n  const options = cm.state.info.options;\n  return options?.hoverTime || 500;\n}\n\nfunction onMouseOver(cm: CodeMirror.Editor, e: MouseEvent) {\n  const state = cm.state.info;\n\n  const target = e.target || e.srcElement;\n\n  if (!(target instanceof HTMLElement)) {\n    return;\n  }\n  if (target.nodeName !== 'SPAN' || state.hoverTimeout !== undefined) {\n    return;\n  }\n\n  const box = target.getBoundingClientRect();\n\n  const onMouseMove = function () {\n    clearTimeout(state.hoverTimeout);\n    state.hoverTimeout = setTimeout(onHover, hoverTime);\n  };\n\n  const onMouseOut = function () {\n    CodeMirror.off(document, 'mousemove', onMouseMove);\n    CodeMirror.off(cm.getWrapperElement(), 'mouseout', onMouseOut);\n    clearTimeout(state.hoverTimeout);\n    state.hoverTimeout = undefined;\n  };\n\n  const onHover = function () {\n    CodeMirror.off(document, 'mousemove', onMouseMove);\n    CodeMirror.off(cm.getWrapperElement(), 'mouseout', onMouseOut);\n    state.hoverTimeout = undefined;\n    onMouseHover(cm, box);\n  };\n\n  const hoverTime = getHoverTime(cm);\n  state.hoverTimeout = setTimeout(onHover, hoverTime);\n\n  CodeMirror.on(document, 'mousemove', onMouseMove);\n  CodeMirror.on(cm.getWrapperElement(), 'mouseout', onMouseOut);\n}\n\nfunction onMouseHover(cm: CodeMirror.Editor, box: DOMRect) {\n  const pos = cm.coordsChar({\n    left: (box.left + box.right) / 2,\n    top: (box.top + box.bottom) / 2,\n  });\n\n  const state = cm.state.info;\n  const options = state.options;\n  const render = options.render || cm.getHelper(pos, 'info');\n  if (render) {\n    const token = cm.getTokenAt(pos, true);\n    if (token) {\n      const info: HTMLDivElement = render(token, options, cm, pos);\n      if (info) {\n        showPopup(cm, box, info);\n      }\n    }\n  }\n}\n\nfunction showPopup(cm: CodeMirror.Editor, box: DOMRect, info: HTMLDivElement) {\n  const popup = document.createElement('div');\n  popup.className = 'CodeMirror-info';\n  popup.appendChild(info);\n  document.body.appendChild(popup);\n\n  const popupBox = popup.getBoundingClientRect();\n  const popupStyle = window.getComputedStyle(popup);\n  const popupWidth =\n    popupBox.right -\n    popupBox.left +\n    parseFloat(popupStyle.marginLeft) +\n    parseFloat(popupStyle.marginRight);\n  const popupHeight =\n    popupBox.bottom -\n    popupBox.top +\n    parseFloat(popupStyle.marginTop) +\n    parseFloat(popupStyle.marginBottom);\n\n  let topPos = box.bottom;\n  if (\n    popupHeight > window.innerHeight - box.bottom - 15 &&\n    box.top > window.innerHeight - box.bottom\n  ) {\n    topPos = box.top - popupHeight;\n  }\n\n  if (topPos < 0) {\n    topPos = box.bottom;\n  }\n\n  let leftPos = Math.max(0, window.innerWidth - popupWidth - 15);\n  if (leftPos > box.left) {\n    leftPos = box.left;\n  }\n\n  popup.style.opacity = '1';\n  popup.style.top = topPos + 'px';\n  popup.style.left = leftPos + 'px';\n\n  let popupTimeout: NodeJS.Timeout;\n\n  const onMouseOverPopup = function () {\n    clearTimeout(popupTimeout);\n  };\n\n  const onMouseOut = function () {\n    clearTimeout(popupTimeout);\n    popupTimeout = setTimeout(hidePopup, 200);\n  };\n\n  const hidePopup = function () {\n    CodeMirror.off(popup, 'mouseover', onMouseOverPopup);\n    CodeMirror.off(popup, 'mouseout', onMouseOut);\n    CodeMirror.off(cm.getWrapperElement(), 'mouseout', onMouseOut);\n\n    if (popup.style.opacity) {\n      popup.style.opacity = '0';\n      setTimeout(() => {\n        if (popup.parentNode) {\n          popup.parentNode.removeChild(popup);\n        }\n      }, 600);\n    } else if (popup.parentNode) {\n      popup.parentNode.removeChild(popup);\n    }\n  };\n\n  CodeMirror.on(popup, 'mouseover', onMouseOverPopup);\n  CodeMirror.on(popup, 'mouseout', onMouseOut);\n  CodeMirror.on(cm.getWrapperElement(), 'mouseout', onMouseOut);\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport CodeMirror from 'codemirror';\nimport { GraphQLJumpOptions } from '../jump';\n\nCodeMirror.defineOption(\n  'jump',\n  false,\n  (\n    cm: CodeMirror.Editor,\n    options: GraphQLJumpOptions,\n    old?: GraphQLJumpOptions,\n  ) => {\n    if (old && old !== CodeMirror.Init) {\n      const oldOnMouseOver = cm.state.jump.onMouseOver;\n      CodeMirror.off(cm.getWrapperElement(), 'mouseover', oldOnMouseOver);\n      const oldOnMouseOut = cm.state.jump.onMouseOut;\n      CodeMirror.off(cm.getWrapperElement(), 'mouseout', oldOnMouseOut);\n      CodeMirror.off(document, 'keydown', cm.state.jump.onKeyDown);\n      delete cm.state.jump;\n    }\n\n    if (options) {\n      const state = (cm.state.jump = {\n        options,\n        onMouseOver: onMouseOver.bind(null, cm),\n        onMouseOut: onMouseOut.bind(null, cm),\n        onKeyDown: onKeyDown.bind(null, cm),\n      });\n\n      CodeMirror.on(cm.getWrapperElement(), 'mouseover', state.onMouseOver);\n      CodeMirror.on(cm.getWrapperElement(), 'mouseout', state.onMouseOut);\n      CodeMirror.on(document, 'keydown', state.onKeyDown);\n    }\n  },\n);\n\nfunction onMouseOver(cm: CodeMirror.Editor, event: MouseEvent) {\n  const target = event.target || event.srcElement;\n  if (!(target instanceof HTMLElement)) {\n    return;\n  }\n  if (target?.nodeName !== 'SPAN') {\n    return;\n  }\n\n  const box = target.getBoundingClientRect();\n  const cursor = {\n    left: (box.left + box.right) / 2,\n    top: (box.top + box.bottom) / 2,\n  };\n\n  cm.state.jump.cursor = cursor;\n\n  if (cm.state.jump.isHoldingModifier) {\n    enableJumpMode(cm);\n  }\n}\n\nfunction onMouseOut(cm: CodeMirror.Editor) {\n  if (!cm.state.jump.isHoldingModifier && cm.state.jump.cursor) {\n    cm.state.jump.cursor = null;\n    return;\n  }\n\n  if (cm.state.jump.isHoldingModifier && cm.state.jump.marker) {\n    disableJumpMode(cm);\n  }\n}\n\nfunction onKeyDown(cm: CodeMirror.Editor, event: KeyboardEvent) {\n  if (cm.state.jump.isHoldingModifier || !isJumpModifier(event.key)) {\n    return;\n  }\n\n  cm.state.jump.isHoldingModifier = true;\n\n  if (cm.state.jump.cursor) {\n    enableJumpMode(cm);\n  }\n\n  const onKeyUp = (upEvent: KeyboardEvent) => {\n    if (upEvent.code !== event.code) {\n      return;\n    }\n\n    cm.state.jump.isHoldingModifier = false;\n\n    if (cm.state.jump.marker) {\n      disableJumpMode(cm);\n    }\n\n    CodeMirror.off(document, 'keyup', onKeyUp);\n    CodeMirror.off(document, 'click', onClick);\n    cm.off('mousedown', onMouseDown);\n  };\n\n  const onClick = (clickEvent: MouseEvent) => {\n    const destination = cm.state.jump.destination;\n    if (destination) {\n      cm.state.jump.options.onClick(destination, clickEvent);\n    }\n  };\n\n  const onMouseDown = (_: any, downEvent: MouseEvent) => {\n    if (cm.state.jump.destination) {\n      (downEvent as any).codemirrorIgnore = true;\n    }\n  };\n\n  CodeMirror.on(document, 'keyup', onKeyUp);\n  CodeMirror.on(document, 'click', onClick);\n  cm.on('mousedown', onMouseDown);\n}\n\nconst isMac =\n  typeof navigator !== 'undefined' &&\n  navigator &&\n  navigator.appVersion.indexOf('Mac') !== -1;\n\nfunction isJumpModifier(key: string) {\n  return key === (isMac ? 'Meta' : 'Control');\n}\n\nfunction enableJumpMode(cm: CodeMirror.Editor) {\n  if (cm.state.jump.marker) {\n    return;\n  }\n\n  const cursor = cm.state.jump.cursor;\n  const pos = cm.coordsChar(cursor);\n  const token = cm.getTokenAt(pos, true);\n\n  const options = cm.state.jump.options;\n  const getDestination = options.getDestination || cm.getHelper(pos, 'jump');\n  if (getDestination) {\n    const destination = getDestination(token, options, cm);\n    if (destination) {\n      const marker = cm.markText(\n        { line: pos.line, ch: token.start },\n        { line: pos.line, ch: token.end },\n        { className: 'CodeMirror-jump-token' },\n      );\n\n      cm.state.jump.marker = marker;\n      cm.state.jump.destination = destination;\n    }\n  }\n}\n\nfunction disableJumpMode(cm: CodeMirror.Editor) {\n  const marker = cm.state.jump.marker;\n  cm.state.jump.marker = null;\n  cm.state.jump.destination = null;\n\n  marker.clear();\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport CodeMirror from 'codemirror';\nimport {\n  LexRules,\n  ParseRules,\n  isIgnored,\n  onlineParser,\n} from 'graphql-language-service';\nimport indent from './mode-indent';\n\n/**\n * The GraphQL mode is defined as a tokenizer along with a list of rules, each\n * of which is either a function or an array.\n *\n *   * Function: Provided a token and the stream, returns an expected next step.\n *   * Array: A list of steps to take in order.\n *\n * A step is either another rule, or a terminal description of a token. If it\n * is a rule, that rule is pushed onto the stack and the parsing continues from\n * that point.\n *\n * If it is a terminal description, the token is checked against it using a\n * `match` function. If the match is successful, the token is colored and the\n * rule is stepped forward. If the match is unsuccessful, the remainder of the\n * rule is skipped and the previous rule is advanced.\n *\n * This parsing algorithm allows for incremental online parsing within various\n * levels of the syntax tree and results in a structured `state` linked-list\n * which contains the relevant information to produce valuable typeaheads.\n */\nconst graphqlModeFactory: CodeMirror.ModeFactory<any> = config => {\n  const parser = onlineParser({\n    eatWhitespace: stream => stream.eatWhile(isIgnored),\n    lexRules: LexRules,\n    parseRules: ParseRules,\n    editorConfig: { tabSize: config.tabSize },\n  });\n\n  return {\n    config,\n    startState: parser.startState,\n    token: (parser.token as unknown) as NonNullable<\n      CodeMirror.Mode<any>['token']\n    >, // TODO: Check if the types are indeed compatible\n    indent,\n    electricInput: /^\\s*[})\\]]/,\n    fold: 'brace',\n    lineComment: '#',\n    closeBrackets: {\n      pairs: '()[]{}\"\"',\n      explode: '()[]{}',\n    },\n  };\n};\n\nexport default graphqlModeFactory;\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport CodeMirror from 'codemirror';\nimport { State } from 'graphql-language-service';\n\n// Seems the electricInput type in @types/codemirror is wrong (i.e it is written as electricinput instead of electricInput)\nexport default function indent(\n  this: CodeMirror.Mode<any> & {\n    electricInput?: RegExp;\n    config?: CodeMirror.EditorConfiguration;\n  },\n  state: State,\n  textAfter: string,\n) {\n  const levels = state.levels;\n  // If there is no stack of levels, use the current level.\n  // Otherwise, use the top level, pre-emptively dedenting for close braces.\n  const level =\n    !levels || levels.length === 0\n      ? state.indentLevel\n      : levels[levels.length - 1] -\n        (this.electricInput?.test(textAfter) ? 1 : 0);\n  return (level || 0) * (this.config?.indentUnit || 0);\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { GraphQLField, GraphQLSchema, GraphQLType } from 'graphql';\nimport { isCompositeType } from 'graphql';\nimport {\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef,\n} from 'graphql/type/introspection';\nimport { CompletionItemBase, AllTypeInfo } from '../types';\n\nimport { ContextTokenUnion, State } from '../parser';\n\n// Utility for returning the state representing the Definition this token state\n// is within, if any.\nexport function getDefinitionState(\n  tokenState: State,\n): State | null | undefined {\n  let definitionState;\n\n  // TODO - couldn't figure this one out\n  forEachState(tokenState, (state: State): void => {\n    switch (state.kind) {\n      case 'Query':\n      case 'ShortQuery':\n      case 'Mutation':\n      case 'Subscription':\n      case 'FragmentDefinition':\n        definitionState = state;\n        break;\n    }\n  });\n\n  return definitionState;\n}\n\n// Gets the field definition given a type and field name\nexport function getFieldDef(\n  schema: GraphQLSchema,\n  type: GraphQLType,\n  fieldName: string,\n): GraphQLField<any, any> | null | undefined {\n  if (fieldName === SchemaMetaFieldDef.name && schema.getQueryType() === type) {\n    return SchemaMetaFieldDef;\n  }\n  if (fieldName === TypeMetaFieldDef.name && schema.getQueryType() === type) {\n    return TypeMetaFieldDef;\n  }\n  if (fieldName === TypeNameMetaFieldDef.name && isCompositeType(type)) {\n    return TypeNameMetaFieldDef;\n  }\n  if ('getFields' in type) {\n    return type.getFields()[fieldName] as any;\n  }\n\n  return null;\n}\n\n// Utility for iterating through a CodeMirror parse state stack bottom-up.\nexport function forEachState(\n  stack: State,\n  fn: (state: State) => AllTypeInfo | null | void,\n): void {\n  const reverseStateStack = [];\n  let state: State | null | undefined = stack;\n  while (state?.kind) {\n    reverseStateStack.push(state);\n    state = state.prevState;\n  }\n  for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n    fn(reverseStateStack[i]);\n  }\n}\n\nexport function objectValues<T>(object: Record<string, T>): Array<T> {\n  const keys = Object.keys(object);\n  const len = keys.length;\n  const values = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    values[i] = object[keys[i]];\n  }\n  return values;\n}\n\n// Create the expected hint response given a possible list and a token\nexport function hintList<T extends CompletionItemBase>(\n  token: ContextTokenUnion,\n  list: Array<T>,\n): Array<T> {\n  return filterAndSortList(list, normalizeText(token.string));\n}\n\n// Given a list of hint entries and currently typed text, sort and filter to\n// provide a concise list.\nfunction filterAndSortList<T extends CompletionItemBase>(\n  list: Array<T>,\n  text: string,\n): Array<T> {\n  if (!text) {\n    return filterNonEmpty<T>(list, entry => !entry.isDeprecated);\n  }\n\n  const byProximity = list.map(entry => ({\n    proximity: getProximity(normalizeText(entry.label), text),\n    entry,\n  }));\n\n  return filterNonEmpty(\n    filterNonEmpty(byProximity, pair => pair.proximity <= 2),\n    pair => !pair.entry.isDeprecated,\n  )\n    .sort(\n      (a, b) =>\n        (a.entry.isDeprecated ? 1 : 0) - (b.entry.isDeprecated ? 1 : 0) ||\n        a.proximity - b.proximity ||\n        a.entry.label.length - b.entry.label.length,\n    )\n    .map(pair => pair.entry);\n}\n\n// Filters the array by the predicate, unless it results in an empty array,\n// in which case return the original array.\nfunction filterNonEmpty<T>(\n  array: Array<T>,\n  predicate: (entry: T) => boolean,\n): Array<T> {\n  const filtered = array.filter(predicate);\n  return filtered.length === 0 ? array : filtered;\n}\n\nfunction normalizeText(text: string): string {\n  return text.toLowerCase().replace(/\\W/g, '');\n}\n\n// Determine a numeric proximity for a suggestion based on current text.\nfunction getProximity(suggestion: string, text: string): number {\n  // start with lexical distance\n  let proximity = lexicalDistance(text, suggestion);\n  if (suggestion.length > text.length) {\n    // do not penalize long suggestions.\n    proximity -= suggestion.length - text.length - 1;\n    // penalize suggestions not starting with this phrase\n    proximity += suggestion.indexOf(text) === 0 ? 0 : 0.5;\n  }\n  return proximity;\n}\n\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * This distance can be useful for detecting typos in input or sorting\n *\n * @param {string} a\n * @param {string} b\n * @return {int} distance in number of edits\n */\nfunction lexicalDistance(a: string, b: string): number {\n  let i;\n  let j;\n  const d = [];\n  const aLength = a.length;\n  const bLength = b.length;\n\n  for (i = 0; i <= aLength; i++) {\n    d[i] = [i];\n  }\n\n  for (j = 1; j <= bLength; j++) {\n    d[0][j] = j;\n  }\n\n  for (i = 1; i <= aLength; i++) {\n    for (j = 1; j <= bLength; j++) {\n      const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n\n      d[i][j] = Math.min(\n        d[i - 1][j] + 1,\n        d[i][j - 1] + 1,\n        d[i - 1][j - 1] + cost,\n      );\n\n      if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n      }\n    }\n  }\n\n  return d[aLength][bLength];\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nexport var integer;\n(function (integer) {\n    integer.MIN_VALUE = -2147483648;\n    integer.MAX_VALUE = 2147483647;\n})(integer || (integer = {}));\nexport var uinteger;\n(function (uinteger) {\n    uinteger.MIN_VALUE = 0;\n    uinteger.MAX_VALUE = 2147483647;\n})(uinteger || (uinteger = {}));\n/**\n * The Position namespace provides helper functions to work with\n * [Position](#Position) literals.\n */\nexport var Position;\n(function (Position) {\n    /**\n     * Creates a new Position literal from the given line and character.\n     * @param line The position's line.\n     * @param character The position's character.\n     */\n    function create(line, character) {\n        if (line === Number.MAX_VALUE) {\n            line = uinteger.MAX_VALUE;\n        }\n        if (character === Number.MAX_VALUE) {\n            character = uinteger.MAX_VALUE;\n        }\n        return { line: line, character: character };\n    }\n    Position.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Position](#Position) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\n    }\n    Position.is = is;\n})(Position || (Position = {}));\n/**\n * The Range namespace provides helper functions to work with\n * [Range](#Range) literals.\n */\nexport var Range;\n(function (Range) {\n    function create(one, two, three, four) {\n        if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\n            return { start: Position.create(one, two), end: Position.create(three, four) };\n        }\n        else if (Position.is(one) && Position.is(two)) {\n            return { start: one, end: two };\n        }\n        else {\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\n        }\n    }\n    Range.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\n    }\n    Range.is = is;\n})(Range || (Range = {}));\n/**\n * The Location namespace provides helper functions to work with\n * [Location](#Location) literals.\n */\nexport var Location;\n(function (Location) {\n    /**\n     * Creates a Location literal.\n     * @param uri The location's uri.\n     * @param range The location's range.\n     */\n    function create(uri, range) {\n        return { uri: uri, range: range };\n    }\n    Location.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\n    }\n    Location.is = is;\n})(Location || (Location = {}));\n/**\n * The LocationLink namespace provides helper functions to work with\n * [LocationLink](#LocationLink) literals.\n */\nexport var LocationLink;\n(function (LocationLink) {\n    /**\n     * Creates a LocationLink literal.\n     * @param targetUri The definition's uri.\n     * @param targetRange The full range of the definition.\n     * @param targetSelectionRange The span of the symbol definition at the target.\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\n     */\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\n    }\n    LocationLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\n    }\n    LocationLink.is = is;\n})(LocationLink || (LocationLink = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [Color](#Color) literals.\n */\nexport var Color;\n(function (Color) {\n    /**\n     * Creates a new Color literal.\n     */\n    function create(red, green, blue, alpha) {\n        return {\n            red: red,\n            green: green,\n            blue: blue,\n            alpha: alpha,\n        };\n    }\n    Color.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.numberRange(candidate.red, 0, 1)\n            && Is.numberRange(candidate.green, 0, 1)\n            && Is.numberRange(candidate.blue, 0, 1)\n            && Is.numberRange(candidate.alpha, 0, 1);\n    }\n    Color.is = is;\n})(Color || (Color = {}));\n/**\n * The ColorInformation namespace provides helper functions to work with\n * [ColorInformation](#ColorInformation) literals.\n */\nexport var ColorInformation;\n(function (ColorInformation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(range, color) {\n        return {\n            range: range,\n            color: color,\n        };\n    }\n    ColorInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Range.is(candidate.range) && Color.is(candidate.color);\n    }\n    ColorInformation.is = is;\n})(ColorInformation || (ColorInformation = {}));\n/**\n * The Color namespace provides helper functions to work with\n * [ColorPresentation](#ColorPresentation) literals.\n */\nexport var ColorPresentation;\n(function (ColorPresentation) {\n    /**\n     * Creates a new ColorInformation literal.\n     */\n    function create(label, textEdit, additionalTextEdits) {\n        return {\n            label: label,\n            textEdit: textEdit,\n            additionalTextEdits: additionalTextEdits,\n        };\n    }\n    ColorPresentation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate.label)\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\n    }\n    ColorPresentation.is = is;\n})(ColorPresentation || (ColorPresentation = {}));\n/**\n * Enum of known range kinds\n */\nexport var FoldingRangeKind;\n(function (FoldingRangeKind) {\n    /**\n     * Folding range for a comment\n     */\n    FoldingRangeKind[\"Comment\"] = \"comment\";\n    /**\n     * Folding range for a imports or includes\n     */\n    FoldingRangeKind[\"Imports\"] = \"imports\";\n    /**\n     * Folding range for a region (e.g. `#region`)\n     */\n    FoldingRangeKind[\"Region\"] = \"region\";\n})(FoldingRangeKind || (FoldingRangeKind = {}));\n/**\n * The folding range namespace provides helper functions to work with\n * [FoldingRange](#FoldingRange) literals.\n */\nexport var FoldingRange;\n(function (FoldingRange) {\n    /**\n     * Creates a new FoldingRange literal.\n     */\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\n        var result = {\n            startLine: startLine,\n            endLine: endLine\n        };\n        if (Is.defined(startCharacter)) {\n            result.startCharacter = startCharacter;\n        }\n        if (Is.defined(endCharacter)) {\n            result.endCharacter = endCharacter;\n        }\n        if (Is.defined(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    FoldingRange.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine)\n            && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter))\n            && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter))\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\n    }\n    FoldingRange.is = is;\n})(FoldingRange || (FoldingRange = {}));\n/**\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\n */\nexport var DiagnosticRelatedInformation;\n(function (DiagnosticRelatedInformation) {\n    /**\n     * Creates a new DiagnosticRelatedInformation literal.\n     */\n    function create(location, message) {\n        return {\n            location: location,\n            message: message\n        };\n    }\n    DiagnosticRelatedInformation.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\n    }\n    DiagnosticRelatedInformation.is = is;\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\n/**\n * The diagnostic's severity.\n */\nexport var DiagnosticSeverity;\n(function (DiagnosticSeverity) {\n    /**\n     * Reports an error.\n     */\n    DiagnosticSeverity.Error = 1;\n    /**\n     * Reports a warning.\n     */\n    DiagnosticSeverity.Warning = 2;\n    /**\n     * Reports an information.\n     */\n    DiagnosticSeverity.Information = 3;\n    /**\n     * Reports a hint.\n     */\n    DiagnosticSeverity.Hint = 4;\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\n/**\n * The diagnostic tags.\n *\n * @since 3.15.0\n */\nexport var DiagnosticTag;\n(function (DiagnosticTag) {\n    /**\n     * Unused or unnecessary code.\n     *\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\n     * an error squiggle.\n     */\n    DiagnosticTag.Unnecessary = 1;\n    /**\n     * Deprecated or obsolete code.\n     *\n     * Clients are allowed to rendered diagnostics with this tag strike through.\n     */\n    DiagnosticTag.Deprecated = 2;\n})(DiagnosticTag || (DiagnosticTag = {}));\n/**\n * The CodeDescription namespace provides functions to deal with descriptions for diagnostic codes.\n *\n * @since 3.16.0\n */\nexport var CodeDescription;\n(function (CodeDescription) {\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && candidate !== null && Is.string(candidate.href);\n    }\n    CodeDescription.is = is;\n})(CodeDescription || (CodeDescription = {}));\n/**\n * The Diagnostic namespace provides helper functions to work with\n * [Diagnostic](#Diagnostic) literals.\n */\nexport var Diagnostic;\n(function (Diagnostic) {\n    /**\n     * Creates a new Diagnostic literal.\n     */\n    function create(range, message, severity, code, source, relatedInformation) {\n        var result = { range: range, message: message };\n        if (Is.defined(severity)) {\n            result.severity = severity;\n        }\n        if (Is.defined(code)) {\n            result.code = code;\n        }\n        if (Is.defined(source)) {\n            result.source = source;\n        }\n        if (Is.defined(relatedInformation)) {\n            result.relatedInformation = relatedInformation;\n        }\n        return result;\n    }\n    Diagnostic.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\n     */\n    function is(value) {\n        var _a;\n        var candidate = value;\n        return Is.defined(candidate)\n            && Range.is(candidate.range)\n            && Is.string(candidate.message)\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\n            && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\n            && (Is.undefined(candidate.codeDescription) || (Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)))\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\n    }\n    Diagnostic.is = is;\n})(Diagnostic || (Diagnostic = {}));\n/**\n * The Command namespace provides helper functions to work with\n * [Command](#Command) literals.\n */\nexport var Command;\n(function (Command) {\n    /**\n     * Creates a new Command literal.\n     */\n    function create(title, command) {\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        var result = { title: title, command: command };\n        if (Is.defined(args) && args.length > 0) {\n            result.arguments = args;\n        }\n        return result;\n    }\n    Command.create = create;\n    /**\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\n    }\n    Command.is = is;\n})(Command || (Command = {}));\n/**\n * The TextEdit namespace provides helper function to create replace,\n * insert and delete edits more easily.\n */\nexport var TextEdit;\n(function (TextEdit) {\n    /**\n     * Creates a replace text edit.\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     */\n    function replace(range, newText) {\n        return { range: range, newText: newText };\n    }\n    TextEdit.replace = replace;\n    /**\n     * Creates a insert text edit.\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     */\n    function insert(position, newText) {\n        return { range: { start: position, end: position }, newText: newText };\n    }\n    TextEdit.insert = insert;\n    /**\n     * Creates a delete text edit.\n     * @param range The range of text to be deleted.\n     */\n    function del(range) {\n        return { range: range, newText: '' };\n    }\n    TextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(candidate)\n            && Is.string(candidate.newText)\n            && Range.is(candidate.range);\n    }\n    TextEdit.is = is;\n})(TextEdit || (TextEdit = {}));\nexport var ChangeAnnotation;\n(function (ChangeAnnotation) {\n    function create(label, needsConfirmation, description) {\n        var result = { label: label };\n        if (needsConfirmation !== undefined) {\n            result.needsConfirmation = needsConfirmation;\n        }\n        if (description !== undefined) {\n            result.description = description;\n        }\n        return result;\n    }\n    ChangeAnnotation.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && Is.objectLiteral(candidate) && Is.string(candidate.label) &&\n            (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === undefined) &&\n            (Is.string(candidate.description) || candidate.description === undefined);\n    }\n    ChangeAnnotation.is = is;\n})(ChangeAnnotation || (ChangeAnnotation = {}));\nexport var ChangeAnnotationIdentifier;\n(function (ChangeAnnotationIdentifier) {\n    function is(value) {\n        var candidate = value;\n        return typeof candidate === 'string';\n    }\n    ChangeAnnotationIdentifier.is = is;\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\nexport var AnnotatedTextEdit;\n(function (AnnotatedTextEdit) {\n    /**\n     * Creates an annotated replace text edit.\n     *\n     * @param range The range of text to be replaced.\n     * @param newText The new text.\n     * @param annotation The annotation.\n     */\n    function replace(range, newText, annotation) {\n        return { range: range, newText: newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.replace = replace;\n    /**\n     * Creates an annotated insert text edit.\n     *\n     * @param position The position to insert the text at.\n     * @param newText The text to be inserted.\n     * @param annotation The annotation.\n     */\n    function insert(position, newText, annotation) {\n        return { range: { start: position, end: position }, newText: newText, annotationId: annotation };\n    }\n    AnnotatedTextEdit.insert = insert;\n    /**\n     * Creates an annotated delete text edit.\n     *\n     * @param range The range of text to be deleted.\n     * @param annotation The annotation.\n     */\n    function del(range, annotation) {\n        return { range: range, newText: '', annotationId: annotation };\n    }\n    AnnotatedTextEdit.del = del;\n    function is(value) {\n        var candidate = value;\n        return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    AnnotatedTextEdit.is = is;\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\n/**\n * The TextDocumentEdit namespace provides helper function to create\n * an edit that manipulates a text document.\n */\nexport var TextDocumentEdit;\n(function (TextDocumentEdit) {\n    /**\n     * Creates a new `TextDocumentEdit`\n     */\n    function create(textDocument, edits) {\n        return { textDocument: textDocument, edits: edits };\n    }\n    TextDocumentEdit.create = create;\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate)\n            && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument)\n            && Array.isArray(candidate.edits);\n    }\n    TextDocumentEdit.is = is;\n})(TextDocumentEdit || (TextDocumentEdit = {}));\nexport var CreateFile;\n(function (CreateFile) {\n    function create(uri, options, annotation) {\n        var result = {\n            kind: 'create',\n            uri: uri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    CreateFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    CreateFile.is = is;\n})(CreateFile || (CreateFile = {}));\nexport var RenameFile;\n(function (RenameFile) {\n    function create(oldUri, newUri, options, annotation) {\n        var result = {\n            kind: 'rename',\n            oldUri: oldUri,\n            newUri: newUri\n        };\n        if (options !== undefined && (options.overwrite !== undefined || options.ignoreIfExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    RenameFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === undefined ||\n            ((candidate.options.overwrite === undefined || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === undefined || Is.boolean(candidate.options.ignoreIfExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    RenameFile.is = is;\n})(RenameFile || (RenameFile = {}));\nexport var DeleteFile;\n(function (DeleteFile) {\n    function create(uri, options, annotation) {\n        var result = {\n            kind: 'delete',\n            uri: uri\n        };\n        if (options !== undefined && (options.recursive !== undefined || options.ignoreIfNotExists !== undefined)) {\n            result.options = options;\n        }\n        if (annotation !== undefined) {\n            result.annotationId = annotation;\n        }\n        return result;\n    }\n    DeleteFile.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) && (candidate.options === undefined ||\n            ((candidate.options.recursive === undefined || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === undefined || Is.boolean(candidate.options.ignoreIfNotExists)))) && (candidate.annotationId === undefined || ChangeAnnotationIdentifier.is(candidate.annotationId));\n    }\n    DeleteFile.is = is;\n})(DeleteFile || (DeleteFile = {}));\nexport var WorkspaceEdit;\n(function (WorkspaceEdit) {\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            (candidate.changes !== undefined || candidate.documentChanges !== undefined) &&\n            (candidate.documentChanges === undefined || candidate.documentChanges.every(function (change) {\n                if (Is.string(change.kind)) {\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\n                }\n                else {\n                    return TextDocumentEdit.is(change);\n                }\n            }));\n    }\n    WorkspaceEdit.is = is;\n})(WorkspaceEdit || (WorkspaceEdit = {}));\nvar TextEditChangeImpl = /** @class */ (function () {\n    function TextEditChangeImpl(edits, changeAnnotations) {\n        this.edits = edits;\n        this.changeAnnotations = changeAnnotations;\n    }\n    TextEditChangeImpl.prototype.insert = function (position, newText, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.insert(position, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.insert(position, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.insert(position, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.replace = function (range, newText, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.replace(range, newText);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.replace(range, newText, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.replace(range, newText, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.delete = function (range, annotation) {\n        var edit;\n        var id;\n        if (annotation === undefined) {\n            edit = TextEdit.del(range);\n        }\n        else if (ChangeAnnotationIdentifier.is(annotation)) {\n            id = annotation;\n            edit = AnnotatedTextEdit.del(range, annotation);\n        }\n        else {\n            this.assertChangeAnnotations(this.changeAnnotations);\n            id = this.changeAnnotations.manage(annotation);\n            edit = AnnotatedTextEdit.del(range, id);\n        }\n        this.edits.push(edit);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    TextEditChangeImpl.prototype.add = function (edit) {\n        this.edits.push(edit);\n    };\n    TextEditChangeImpl.prototype.all = function () {\n        return this.edits;\n    };\n    TextEditChangeImpl.prototype.clear = function () {\n        this.edits.splice(0, this.edits.length);\n    };\n    TextEditChangeImpl.prototype.assertChangeAnnotations = function (value) {\n        if (value === undefined) {\n            throw new Error(\"Text edit change is not configured to manage change annotations.\");\n        }\n    };\n    return TextEditChangeImpl;\n}());\n/**\n * A helper class\n */\nvar ChangeAnnotations = /** @class */ (function () {\n    function ChangeAnnotations(annotations) {\n        this._annotations = annotations === undefined ? Object.create(null) : annotations;\n        this._counter = 0;\n        this._size = 0;\n    }\n    ChangeAnnotations.prototype.all = function () {\n        return this._annotations;\n    };\n    Object.defineProperty(ChangeAnnotations.prototype, \"size\", {\n        get: function () {\n            return this._size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ChangeAnnotations.prototype.manage = function (idOrAnnotation, annotation) {\n        var id;\n        if (ChangeAnnotationIdentifier.is(idOrAnnotation)) {\n            id = idOrAnnotation;\n        }\n        else {\n            id = this.nextId();\n            annotation = idOrAnnotation;\n        }\n        if (this._annotations[id] !== undefined) {\n            throw new Error(\"Id \" + id + \" is already in use.\");\n        }\n        if (annotation === undefined) {\n            throw new Error(\"No annotation provided for id \" + id);\n        }\n        this._annotations[id] = annotation;\n        this._size++;\n        return id;\n    };\n    ChangeAnnotations.prototype.nextId = function () {\n        this._counter++;\n        return this._counter.toString();\n    };\n    return ChangeAnnotations;\n}());\n/**\n * A workspace change helps constructing changes to a workspace.\n */\nvar WorkspaceChange = /** @class */ (function () {\n    function WorkspaceChange(workspaceEdit) {\n        var _this = this;\n        this._textEditChanges = Object.create(null);\n        if (workspaceEdit !== undefined) {\n            this._workspaceEdit = workspaceEdit;\n            if (workspaceEdit.documentChanges) {\n                this._changeAnnotations = new ChangeAnnotations(workspaceEdit.changeAnnotations);\n                workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                workspaceEdit.documentChanges.forEach(function (change) {\n                    if (TextDocumentEdit.is(change)) {\n                        var textEditChange = new TextEditChangeImpl(change.edits, _this._changeAnnotations);\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\n                    }\n                });\n            }\n            else if (workspaceEdit.changes) {\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\n                    _this._textEditChanges[key] = textEditChange;\n                });\n            }\n        }\n        else {\n            this._workspaceEdit = {};\n        }\n    }\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\n        /**\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\n         * use to be returned from a workspace edit operation like rename.\n         */\n        get: function () {\n            this.initDocumentChanges();\n            if (this._changeAnnotations !== undefined) {\n                if (this._changeAnnotations.size === 0) {\n                    this._workspaceEdit.changeAnnotations = undefined;\n                }\n                else {\n                    this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n                }\n            }\n            return this._workspaceEdit;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\n        if (OptionalVersionedTextDocumentIdentifier.is(key)) {\n            this.initDocumentChanges();\n            if (this._workspaceEdit.documentChanges === undefined) {\n                throw new Error('Workspace edit is not configured for document changes.');\n            }\n            var textDocument = { uri: key.uri, version: key.version };\n            var result = this._textEditChanges[textDocument.uri];\n            if (!result) {\n                var edits = [];\n                var textDocumentEdit = {\n                    textDocument: textDocument,\n                    edits: edits\n                };\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\n                result = new TextEditChangeImpl(edits, this._changeAnnotations);\n                this._textEditChanges[textDocument.uri] = result;\n            }\n            return result;\n        }\n        else {\n            this.initChanges();\n            if (this._workspaceEdit.changes === undefined) {\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\n            }\n            var result = this._textEditChanges[key];\n            if (!result) {\n                var edits = [];\n                this._workspaceEdit.changes[key] = edits;\n                result = new TextEditChangeImpl(edits);\n                this._textEditChanges[key] = result;\n            }\n            return result;\n        }\n    };\n    WorkspaceChange.prototype.initDocumentChanges = function () {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._changeAnnotations = new ChangeAnnotations();\n            this._workspaceEdit.documentChanges = [];\n            this._workspaceEdit.changeAnnotations = this._changeAnnotations.all();\n        }\n    };\n    WorkspaceChange.prototype.initChanges = function () {\n        if (this._workspaceEdit.documentChanges === undefined && this._workspaceEdit.changes === undefined) {\n            this._workspaceEdit.changes = Object.create(null);\n        }\n    };\n    WorkspaceChange.prototype.createFile = function (uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = CreateFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = CreateFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = RenameFile.create(oldUri, newUri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = RenameFile.create(oldUri, newUri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    WorkspaceChange.prototype.deleteFile = function (uri, optionsOrAnnotation, options) {\n        this.initDocumentChanges();\n        if (this._workspaceEdit.documentChanges === undefined) {\n            throw new Error('Workspace edit is not configured for document changes.');\n        }\n        var annotation;\n        if (ChangeAnnotation.is(optionsOrAnnotation) || ChangeAnnotationIdentifier.is(optionsOrAnnotation)) {\n            annotation = optionsOrAnnotation;\n        }\n        else {\n            options = optionsOrAnnotation;\n        }\n        var operation;\n        var id;\n        if (annotation === undefined) {\n            operation = DeleteFile.create(uri, options);\n        }\n        else {\n            id = ChangeAnnotationIdentifier.is(annotation) ? annotation : this._changeAnnotations.manage(annotation);\n            operation = DeleteFile.create(uri, options, id);\n        }\n        this._workspaceEdit.documentChanges.push(operation);\n        if (id !== undefined) {\n            return id;\n        }\n    };\n    return WorkspaceChange;\n}());\nexport { WorkspaceChange };\n/**\n * The TextDocumentIdentifier namespace provides helper functions to work with\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\n */\nexport var TextDocumentIdentifier;\n(function (TextDocumentIdentifier) {\n    /**\n     * Creates a new TextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     */\n    function create(uri) {\n        return { uri: uri };\n    }\n    TextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri);\n    }\n    TextDocumentIdentifier.is = is;\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\n/**\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\n */\nexport var VersionedTextDocumentIdentifier;\n(function (VersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new VersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    VersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\n    }\n    VersionedTextDocumentIdentifier.is = is;\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\n/**\n * The OptionalVersionedTextDocumentIdentifier namespace provides helper functions to work with\n * [OptionalVersionedTextDocumentIdentifier](#OptionalVersionedTextDocumentIdentifier) literals.\n */\nexport var OptionalVersionedTextDocumentIdentifier;\n(function (OptionalVersionedTextDocumentIdentifier) {\n    /**\n     * Creates a new OptionalVersionedTextDocumentIdentifier literal.\n     * @param uri The document's uri.\n     * @param uri The document's text.\n     */\n    function create(uri, version) {\n        return { uri: uri, version: version };\n    }\n    OptionalVersionedTextDocumentIdentifier.create = create;\n    /**\n     * Checks whether the given literal conforms to the [OptionalVersionedTextDocumentIdentifier](#OptionalVersionedTextDocumentIdentifier) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\n    }\n    OptionalVersionedTextDocumentIdentifier.is = is;\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\n/**\n * The TextDocumentItem namespace provides helper functions to work with\n * [TextDocumentItem](#TextDocumentItem) literals.\n */\nexport var TextDocumentItem;\n(function (TextDocumentItem) {\n    /**\n     * Creates a new TextDocumentItem literal.\n     * @param uri The document's uri.\n     * @param languageId The document's language identifier.\n     * @param version The document's version number.\n     * @param text The document's text.\n     */\n    function create(uri, languageId, version, text) {\n        return { uri: uri, languageId: languageId, version: version, text: text };\n    }\n    TextDocumentItem.create = create;\n    /**\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\n    }\n    TextDocumentItem.is = is;\n})(TextDocumentItem || (TextDocumentItem = {}));\n/**\n * Describes the content type that a client supports in various\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\n *\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\n * are reserved for internal usage.\n */\nexport var MarkupKind;\n(function (MarkupKind) {\n    /**\n     * Plain text is supported as a content format\n     */\n    MarkupKind.PlainText = 'plaintext';\n    /**\n     * Markdown is supported as a content format\n     */\n    MarkupKind.Markdown = 'markdown';\n})(MarkupKind || (MarkupKind = {}));\n(function (MarkupKind) {\n    /**\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\n    }\n    MarkupKind.is = is;\n})(MarkupKind || (MarkupKind = {}));\nexport var MarkupContent;\n(function (MarkupContent) {\n    /**\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\n    }\n    MarkupContent.is = is;\n})(MarkupContent || (MarkupContent = {}));\n/**\n * The kind of a completion entry.\n */\nexport var CompletionItemKind;\n(function (CompletionItemKind) {\n    CompletionItemKind.Text = 1;\n    CompletionItemKind.Method = 2;\n    CompletionItemKind.Function = 3;\n    CompletionItemKind.Constructor = 4;\n    CompletionItemKind.Field = 5;\n    CompletionItemKind.Variable = 6;\n    CompletionItemKind.Class = 7;\n    CompletionItemKind.Interface = 8;\n    CompletionItemKind.Module = 9;\n    CompletionItemKind.Property = 10;\n    CompletionItemKind.Unit = 11;\n    CompletionItemKind.Value = 12;\n    CompletionItemKind.Enum = 13;\n    CompletionItemKind.Keyword = 14;\n    CompletionItemKind.Snippet = 15;\n    CompletionItemKind.Color = 16;\n    CompletionItemKind.File = 17;\n    CompletionItemKind.Reference = 18;\n    CompletionItemKind.Folder = 19;\n    CompletionItemKind.EnumMember = 20;\n    CompletionItemKind.Constant = 21;\n    CompletionItemKind.Struct = 22;\n    CompletionItemKind.Event = 23;\n    CompletionItemKind.Operator = 24;\n    CompletionItemKind.TypeParameter = 25;\n})(CompletionItemKind || (CompletionItemKind = {}));\n/**\n * Defines whether the insert text in a completion item should be interpreted as\n * plain text or a snippet.\n */\nexport var InsertTextFormat;\n(function (InsertTextFormat) {\n    /**\n     * The primary text to be inserted is treated as a plain string.\n     */\n    InsertTextFormat.PlainText = 1;\n    /**\n     * The primary text to be inserted is treated as a snippet.\n     *\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\n     * the end of the snippet. Placeholders with equal identifiers are linked,\n     * that is typing in one will update others too.\n     *\n     * See also: https://microsoft.github.io/language-server-protocol/specifications/specification-current/#snippet_syntax\n     */\n    InsertTextFormat.Snippet = 2;\n})(InsertTextFormat || (InsertTextFormat = {}));\n/**\n * Completion item tags are extra annotations that tweak the rendering of a completion\n * item.\n *\n * @since 3.15.0\n */\nexport var CompletionItemTag;\n(function (CompletionItemTag) {\n    /**\n     * Render a completion as obsolete, usually using a strike-out.\n     */\n    CompletionItemTag.Deprecated = 1;\n})(CompletionItemTag || (CompletionItemTag = {}));\n/**\n * The InsertReplaceEdit namespace provides functions to deal with insert / replace edits.\n *\n * @since 3.16.0\n */\nexport var InsertReplaceEdit;\n(function (InsertReplaceEdit) {\n    /**\n     * Creates a new insert / replace edit\n     */\n    function create(newText, insert, replace) {\n        return { newText: newText, insert: insert, replace: replace };\n    }\n    InsertReplaceEdit.create = create;\n    /**\n     * Checks whether the given literal conforms to the [InsertReplaceEdit](#InsertReplaceEdit) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\n    }\n    InsertReplaceEdit.is = is;\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\n/**\n * How whitespace and indentation is handled during completion\n * item insertion.\n *\n * @since 3.16.0\n */\nexport var InsertTextMode;\n(function (InsertTextMode) {\n    /**\n     * The insertion or replace strings is taken as it is. If the\n     * value is multi line the lines below the cursor will be\n     * inserted using the indentation defined in the string value.\n     * The client will not apply any kind of adjustments to the\n     * string.\n     */\n    InsertTextMode.asIs = 1;\n    /**\n     * The editor adjusts leading whitespace of new lines so that\n     * they match the indentation up to the cursor of the line for\n     * which the item is accepted.\n     *\n     * Consider a line like this: <2tabs><cursor><3tabs>foo. Accepting a\n     * multi line completion item is indented using 2 tabs and all\n     * following lines inserted will be indented using 2 tabs as well.\n     */\n    InsertTextMode.adjustIndentation = 2;\n})(InsertTextMode || (InsertTextMode = {}));\n/**\n * The CompletionItem namespace provides functions to deal with\n * completion items.\n */\nexport var CompletionItem;\n(function (CompletionItem) {\n    /**\n     * Create a completion item and seed it with a label.\n     * @param label The completion item's label\n     */\n    function create(label) {\n        return { label: label };\n    }\n    CompletionItem.create = create;\n})(CompletionItem || (CompletionItem = {}));\n/**\n * The CompletionList namespace provides functions to deal with\n * completion lists.\n */\nexport var CompletionList;\n(function (CompletionList) {\n    /**\n     * Creates a new completion list.\n     *\n     * @param items The completion items.\n     * @param isIncomplete The list is not complete.\n     */\n    function create(items, isIncomplete) {\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\n    }\n    CompletionList.create = create;\n})(CompletionList || (CompletionList = {}));\nexport var MarkedString;\n(function (MarkedString) {\n    /**\n     * Creates a marked string from plain text.\n     *\n     * @param plainText The plain text.\n     */\n    function fromPlainText(plainText) {\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    MarkedString.fromPlainText = fromPlainText;\n    /**\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\n    }\n    MarkedString.is = is;\n})(MarkedString || (MarkedString = {}));\nexport var Hover;\n(function (Hover) {\n    /**\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\n            MarkedString.is(candidate.contents) ||\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === undefined || Range.is(value.range));\n    }\n    Hover.is = is;\n})(Hover || (Hover = {}));\n/**\n * The ParameterInformation namespace provides helper functions to work with\n * [ParameterInformation](#ParameterInformation) literals.\n */\nexport var ParameterInformation;\n(function (ParameterInformation) {\n    /**\n     * Creates a new parameter information literal.\n     *\n     * @param label A label string.\n     * @param documentation A doc string.\n     */\n    function create(label, documentation) {\n        return documentation ? { label: label, documentation: documentation } : { label: label };\n    }\n    ParameterInformation.create = create;\n})(ParameterInformation || (ParameterInformation = {}));\n/**\n * The SignatureInformation namespace provides helper functions to work with\n * [SignatureInformation](#SignatureInformation) literals.\n */\nexport var SignatureInformation;\n(function (SignatureInformation) {\n    function create(label, documentation) {\n        var parameters = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            parameters[_i - 2] = arguments[_i];\n        }\n        var result = { label: label };\n        if (Is.defined(documentation)) {\n            result.documentation = documentation;\n        }\n        if (Is.defined(parameters)) {\n            result.parameters = parameters;\n        }\n        else {\n            result.parameters = [];\n        }\n        return result;\n    }\n    SignatureInformation.create = create;\n})(SignatureInformation || (SignatureInformation = {}));\n/**\n * A document highlight kind.\n */\nexport var DocumentHighlightKind;\n(function (DocumentHighlightKind) {\n    /**\n     * A textual occurrence.\n     */\n    DocumentHighlightKind.Text = 1;\n    /**\n     * Read-access of a symbol, like reading a variable.\n     */\n    DocumentHighlightKind.Read = 2;\n    /**\n     * Write-access of a symbol, like writing to a variable.\n     */\n    DocumentHighlightKind.Write = 3;\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\n/**\n * DocumentHighlight namespace to provide helper functions to work with\n * [DocumentHighlight](#DocumentHighlight) literals.\n */\nexport var DocumentHighlight;\n(function (DocumentHighlight) {\n    /**\n     * Create a DocumentHighlight object.\n     * @param range The range the highlight applies to.\n     */\n    function create(range, kind) {\n        var result = { range: range };\n        if (Is.number(kind)) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    DocumentHighlight.create = create;\n})(DocumentHighlight || (DocumentHighlight = {}));\n/**\n * A symbol kind.\n */\nexport var SymbolKind;\n(function (SymbolKind) {\n    SymbolKind.File = 1;\n    SymbolKind.Module = 2;\n    SymbolKind.Namespace = 3;\n    SymbolKind.Package = 4;\n    SymbolKind.Class = 5;\n    SymbolKind.Method = 6;\n    SymbolKind.Property = 7;\n    SymbolKind.Field = 8;\n    SymbolKind.Constructor = 9;\n    SymbolKind.Enum = 10;\n    SymbolKind.Interface = 11;\n    SymbolKind.Function = 12;\n    SymbolKind.Variable = 13;\n    SymbolKind.Constant = 14;\n    SymbolKind.String = 15;\n    SymbolKind.Number = 16;\n    SymbolKind.Boolean = 17;\n    SymbolKind.Array = 18;\n    SymbolKind.Object = 19;\n    SymbolKind.Key = 20;\n    SymbolKind.Null = 21;\n    SymbolKind.EnumMember = 22;\n    SymbolKind.Struct = 23;\n    SymbolKind.Event = 24;\n    SymbolKind.Operator = 25;\n    SymbolKind.TypeParameter = 26;\n})(SymbolKind || (SymbolKind = {}));\n/**\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\n * @since 3.16\n */\nexport var SymbolTag;\n(function (SymbolTag) {\n    /**\n     * Render a symbol as obsolete, usually using a strike-out.\n     */\n    SymbolTag.Deprecated = 1;\n})(SymbolTag || (SymbolTag = {}));\nexport var SymbolInformation;\n(function (SymbolInformation) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the location of the symbol.\n     * @param uri The resource of the location of symbol, defaults to the current document.\n     * @param containerName The name of the symbol containing the symbol.\n     */\n    function create(name, kind, range, uri, containerName) {\n        var result = {\n            name: name,\n            kind: kind,\n            location: { uri: uri, range: range }\n        };\n        if (containerName) {\n            result.containerName = containerName;\n        }\n        return result;\n    }\n    SymbolInformation.create = create;\n})(SymbolInformation || (SymbolInformation = {}));\nexport var DocumentSymbol;\n(function (DocumentSymbol) {\n    /**\n     * Creates a new symbol information literal.\n     *\n     * @param name The name of the symbol.\n     * @param detail The detail of the symbol.\n     * @param kind The kind of the symbol.\n     * @param range The range of the symbol.\n     * @param selectionRange The selectionRange of the symbol.\n     * @param children Children of the symbol.\n     */\n    function create(name, detail, kind, range, selectionRange, children) {\n        var result = {\n            name: name,\n            detail: detail,\n            kind: kind,\n            range: range,\n            selectionRange: selectionRange\n        };\n        if (children !== undefined) {\n            result.children = children;\n        }\n        return result;\n    }\n    DocumentSymbol.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return candidate &&\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\n            (candidate.detail === undefined || Is.string(candidate.detail)) &&\n            (candidate.deprecated === undefined || Is.boolean(candidate.deprecated)) &&\n            (candidate.children === undefined || Array.isArray(candidate.children)) &&\n            (candidate.tags === undefined || Array.isArray(candidate.tags));\n    }\n    DocumentSymbol.is = is;\n})(DocumentSymbol || (DocumentSymbol = {}));\n/**\n * A set of predefined code action kinds\n */\nexport var CodeActionKind;\n(function (CodeActionKind) {\n    /**\n     * Empty kind.\n     */\n    CodeActionKind.Empty = '';\n    /**\n     * Base kind for quickfix actions: 'quickfix'\n     */\n    CodeActionKind.QuickFix = 'quickfix';\n    /**\n     * Base kind for refactoring actions: 'refactor'\n     */\n    CodeActionKind.Refactor = 'refactor';\n    /**\n     * Base kind for refactoring extraction actions: 'refactor.extract'\n     *\n     * Example extract actions:\n     *\n     * - Extract method\n     * - Extract function\n     * - Extract variable\n     * - Extract interface from class\n     * - ...\n     */\n    CodeActionKind.RefactorExtract = 'refactor.extract';\n    /**\n     * Base kind for refactoring inline actions: 'refactor.inline'\n     *\n     * Example inline actions:\n     *\n     * - Inline function\n     * - Inline variable\n     * - Inline constant\n     * - ...\n     */\n    CodeActionKind.RefactorInline = 'refactor.inline';\n    /**\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\n     *\n     * Example rewrite actions:\n     *\n     * - Convert JavaScript function to class\n     * - Add or remove parameter\n     * - Encapsulate field\n     * - Make method static\n     * - Move method to base class\n     * - ...\n     */\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\n    /**\n     * Base kind for source actions: `source`\n     *\n     * Source code actions apply to the entire file.\n     */\n    CodeActionKind.Source = 'source';\n    /**\n     * Base kind for an organize imports source action: `source.organizeImports`\n     */\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\n    /**\n     * Base kind for auto-fix source actions: `source.fixAll`.\n     *\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\n     *\n     * @since 3.15.0\n     */\n    CodeActionKind.SourceFixAll = 'source.fixAll';\n})(CodeActionKind || (CodeActionKind = {}));\n/**\n * The CodeActionContext namespace provides helper functions to work with\n * [CodeActionContext](#CodeActionContext) literals.\n */\nexport var CodeActionContext;\n(function (CodeActionContext) {\n    /**\n     * Creates a new CodeActionContext literal.\n     */\n    function create(diagnostics, only) {\n        var result = { diagnostics: diagnostics };\n        if (only !== undefined && only !== null) {\n            result.only = only;\n        }\n        return result;\n    }\n    CodeActionContext.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === undefined || Is.typedArray(candidate.only, Is.string));\n    }\n    CodeActionContext.is = is;\n})(CodeActionContext || (CodeActionContext = {}));\nexport var CodeAction;\n(function (CodeAction) {\n    function create(title, kindOrCommandOrEdit, kind) {\n        var result = { title: title };\n        var checkKind = true;\n        if (typeof kindOrCommandOrEdit === 'string') {\n            checkKind = false;\n            result.kind = kindOrCommandOrEdit;\n        }\n        else if (Command.is(kindOrCommandOrEdit)) {\n            result.command = kindOrCommandOrEdit;\n        }\n        else {\n            result.edit = kindOrCommandOrEdit;\n        }\n        if (checkKind && kind !== undefined) {\n            result.kind = kind;\n        }\n        return result;\n    }\n    CodeAction.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.title) &&\n            (candidate.diagnostics === undefined || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\n            (candidate.kind === undefined || Is.string(candidate.kind)) &&\n            (candidate.edit !== undefined || candidate.command !== undefined) &&\n            (candidate.command === undefined || Command.is(candidate.command)) &&\n            (candidate.isPreferred === undefined || Is.boolean(candidate.isPreferred)) &&\n            (candidate.edit === undefined || WorkspaceEdit.is(candidate.edit));\n    }\n    CodeAction.is = is;\n})(CodeAction || (CodeAction = {}));\n/**\n * The CodeLens namespace provides helper functions to work with\n * [CodeLens](#CodeLens) literals.\n */\nexport var CodeLens;\n(function (CodeLens) {\n    /**\n     * Creates a new CodeLens literal.\n     */\n    function create(range, data) {\n        var result = { range: range };\n        if (Is.defined(data)) {\n            result.data = data;\n        }\n        return result;\n    }\n    CodeLens.create = create;\n    /**\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\n    }\n    CodeLens.is = is;\n})(CodeLens || (CodeLens = {}));\n/**\n * The FormattingOptions namespace provides helper functions to work with\n * [FormattingOptions](#FormattingOptions) literals.\n */\nexport var FormattingOptions;\n(function (FormattingOptions) {\n    /**\n     * Creates a new FormattingOptions literal.\n     */\n    function create(tabSize, insertSpaces) {\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\n    }\n    FormattingOptions.create = create;\n    /**\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\n    }\n    FormattingOptions.is = is;\n})(FormattingOptions || (FormattingOptions = {}));\n/**\n * The DocumentLink namespace provides helper functions to work with\n * [DocumentLink](#DocumentLink) literals.\n */\nexport var DocumentLink;\n(function (DocumentLink) {\n    /**\n     * Creates a new DocumentLink literal.\n     */\n    function create(range, target, data) {\n        return { range: range, target: target, data: data };\n    }\n    DocumentLink.create = create;\n    /**\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\n    }\n    DocumentLink.is = is;\n})(DocumentLink || (DocumentLink = {}));\n/**\n * The SelectionRange namespace provides helper function to work with\n * SelectionRange literals.\n */\nexport var SelectionRange;\n(function (SelectionRange) {\n    /**\n     * Creates a new SelectionRange\n     * @param range the range.\n     * @param parent an optional parent.\n     */\n    function create(range, parent) {\n        return { range: range, parent: parent };\n    }\n    SelectionRange.create = create;\n    function is(value) {\n        var candidate = value;\n        return candidate !== undefined && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\n    }\n    SelectionRange.is = is;\n})(SelectionRange || (SelectionRange = {}));\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nexport var TextDocument;\n(function (TextDocument) {\n    /**\n     * Creates a new ITextDocument literal from the given uri and content.\n     * @param uri The document's uri.\n     * @param languageId  The document's language Id.\n     * @param content The document's content.\n     */\n    function create(uri, languageId, version, content) {\n        return new FullTextDocument(uri, languageId, version, content);\n    }\n    TextDocument.create = create;\n    /**\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\n     */\n    function is(value) {\n        var candidate = value;\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount)\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\n    }\n    TextDocument.is = is;\n    function applyEdits(document, edits) {\n        var text = document.getText();\n        var sortedEdits = mergeSort(edits, function (a, b) {\n            var diff = a.range.start.line - b.range.start.line;\n            if (diff === 0) {\n                return a.range.start.character - b.range.start.character;\n            }\n            return diff;\n        });\n        var lastModifiedOffset = text.length;\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\n            var e = sortedEdits[i];\n            var startOffset = document.offsetAt(e.range.start);\n            var endOffset = document.offsetAt(e.range.end);\n            if (endOffset <= lastModifiedOffset) {\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\n            }\n            else {\n                throw new Error('Overlapping edit');\n            }\n            lastModifiedOffset = startOffset;\n        }\n        return text;\n    }\n    TextDocument.applyEdits = applyEdits;\n    function mergeSort(data, compare) {\n        if (data.length <= 1) {\n            // sorted\n            return data;\n        }\n        var p = (data.length / 2) | 0;\n        var left = data.slice(0, p);\n        var right = data.slice(p);\n        mergeSort(left, compare);\n        mergeSort(right, compare);\n        var leftIdx = 0;\n        var rightIdx = 0;\n        var i = 0;\n        while (leftIdx < left.length && rightIdx < right.length) {\n            var ret = compare(left[leftIdx], right[rightIdx]);\n            if (ret <= 0) {\n                // smaller_equal -> take left to preserve order\n                data[i++] = left[leftIdx++];\n            }\n            else {\n                // greater -> take right\n                data[i++] = right[rightIdx++];\n            }\n        }\n        while (leftIdx < left.length) {\n            data[i++] = left[leftIdx++];\n        }\n        while (rightIdx < right.length) {\n            data[i++] = right[rightIdx++];\n        }\n        return data;\n    }\n})(TextDocument || (TextDocument = {}));\n/**\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\n */\nvar FullTextDocument = /** @class */ (function () {\n    function FullTextDocument(uri, languageId, version, content) {\n        this._uri = uri;\n        this._languageId = languageId;\n        this._version = version;\n        this._content = content;\n        this._lineOffsets = undefined;\n    }\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\n        get: function () {\n            return this._uri;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\n        get: function () {\n            return this._languageId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\n        get: function () {\n            return this._version;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FullTextDocument.prototype.getText = function (range) {\n        if (range) {\n            var start = this.offsetAt(range.start);\n            var end = this.offsetAt(range.end);\n            return this._content.substring(start, end);\n        }\n        return this._content;\n    };\n    FullTextDocument.prototype.update = function (event, version) {\n        this._content = event.text;\n        this._version = version;\n        this._lineOffsets = undefined;\n    };\n    FullTextDocument.prototype.getLineOffsets = function () {\n        if (this._lineOffsets === undefined) {\n            var lineOffsets = [];\n            var text = this._content;\n            var isLineStart = true;\n            for (var i = 0; i < text.length; i++) {\n                if (isLineStart) {\n                    lineOffsets.push(i);\n                    isLineStart = false;\n                }\n                var ch = text.charAt(i);\n                isLineStart = (ch === '\\r' || ch === '\\n');\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    i++;\n                }\n            }\n            if (isLineStart && text.length > 0) {\n                lineOffsets.push(text.length);\n            }\n            this._lineOffsets = lineOffsets;\n        }\n        return this._lineOffsets;\n    };\n    FullTextDocument.prototype.positionAt = function (offset) {\n        offset = Math.max(Math.min(offset, this._content.length), 0);\n        var lineOffsets = this.getLineOffsets();\n        var low = 0, high = lineOffsets.length;\n        if (high === 0) {\n            return Position.create(0, offset);\n        }\n        while (low < high) {\n            var mid = Math.floor((low + high) / 2);\n            if (lineOffsets[mid] > offset) {\n                high = mid;\n            }\n            else {\n                low = mid + 1;\n            }\n        }\n        // low is the least x for which the line offset is larger than the current offset\n        // or array.length if no line offset is larger than the current offset\n        var line = low - 1;\n        return Position.create(line, offset - lineOffsets[line]);\n    };\n    FullTextDocument.prototype.offsetAt = function (position) {\n        var lineOffsets = this.getLineOffsets();\n        if (position.line >= lineOffsets.length) {\n            return this._content.length;\n        }\n        else if (position.line < 0) {\n            return 0;\n        }\n        var lineOffset = lineOffsets[position.line];\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\n    };\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\n        get: function () {\n            return this.getLineOffsets().length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return FullTextDocument;\n}());\nvar Is;\n(function (Is) {\n    var toString = Object.prototype.toString;\n    function defined(value) {\n        return typeof value !== 'undefined';\n    }\n    Is.defined = defined;\n    function undefined(value) {\n        return typeof value === 'undefined';\n    }\n    Is.undefined = undefined;\n    function boolean(value) {\n        return value === true || value === false;\n    }\n    Is.boolean = boolean;\n    function string(value) {\n        return toString.call(value) === '[object String]';\n    }\n    Is.string = string;\n    function number(value) {\n        return toString.call(value) === '[object Number]';\n    }\n    Is.number = number;\n    function numberRange(value, min, max) {\n        return toString.call(value) === '[object Number]' && min <= value && value <= max;\n    }\n    Is.numberRange = numberRange;\n    function integer(value) {\n        return toString.call(value) === '[object Number]' && -2147483648 <= value && value <= 2147483647;\n    }\n    Is.integer = integer;\n    function uinteger(value) {\n        return toString.call(value) === '[object Number]' && 0 <= value && value <= 2147483647;\n    }\n    Is.uinteger = uinteger;\n    function func(value) {\n        return toString.call(value) === '[object Function]';\n    }\n    Is.func = func;\n    function objectLiteral(value) {\n        // Strictly speaking class instances pass this check as well. Since the LSP\n        // doesn't use classes we ignore this for now. If we do we need to add something\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\n        return value !== null && typeof value === 'object';\n    }\n    Is.objectLiteral = objectLiteral;\n    function typedArray(value, check) {\n        return Array.isArray(value) && value.every(check);\n    }\n    Is.typedArray = typedArray;\n})(Is || (Is = {}));\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * CharacterStream implements a stream of character tokens given a source text.\n * The API design follows that of CodeMirror.StringStream.\n *\n * Required:\n *\n *      sourceText: (string), A raw GraphQL source text. Works best if a line\n *        is supplied.\n *\n */\nimport { TokenPattern, CharacterStreamInterface } from './types';\n\nexport default class CharacterStream implements CharacterStreamInterface {\n  private _start: number;\n  private _pos: number;\n  private _sourceText: string;\n\n  constructor(sourceText: string) {\n    this._start = 0;\n    this._pos = 0;\n    this._sourceText = sourceText;\n  }\n\n  public getStartOfToken = (): number => this._start;\n\n  public getCurrentPosition = (): number => this._pos;\n\n  private _testNextCharacter(pattern: TokenPattern): boolean {\n    const character = this._sourceText.charAt(this._pos);\n    let isMatched = false;\n    if (typeof pattern === 'string') {\n      isMatched = character === pattern;\n    } else {\n      isMatched =\n        pattern instanceof RegExp\n          ? pattern.test(character)\n          : pattern(character);\n    }\n    return isMatched;\n  }\n\n  public eol = (): boolean => this._sourceText.length === this._pos;\n\n  public sol = (): boolean => this._pos === 0;\n\n  public peek = (): string | null => {\n    return this._sourceText.charAt(this._pos)\n      ? this._sourceText.charAt(this._pos)\n      : null;\n  };\n\n  public next = (): string => {\n    const char = this._sourceText.charAt(this._pos);\n    this._pos++;\n    return char;\n  };\n\n  public eat = (pattern: TokenPattern): string | undefined => {\n    const isMatched = this._testNextCharacter(pattern);\n    if (isMatched) {\n      this._start = this._pos;\n      this._pos++;\n      return this._sourceText.charAt(this._pos - 1);\n    }\n    return undefined;\n  };\n\n  public eatWhile = (match: TokenPattern): boolean => {\n    let isMatched = this._testNextCharacter(match);\n    let didEat = false;\n\n    // If a match, treat the total upcoming matches as one token\n    if (isMatched) {\n      didEat = isMatched;\n      this._start = this._pos;\n    }\n\n    while (isMatched) {\n      this._pos++;\n      isMatched = this._testNextCharacter(match);\n      didEat = true;\n    }\n\n    return didEat;\n  };\n\n  public eatSpace = (): boolean => this.eatWhile(/[\\s\\u00a0]/);\n\n  public skipToEnd = (): void => {\n    this._pos = this._sourceText.length;\n  };\n\n  public skipTo = (position: number): void => {\n    this._pos = position;\n  };\n\n  public match = (\n    pattern: TokenPattern,\n    consume: boolean | null | undefined = true,\n    caseFold: boolean | null | undefined = false,\n  ): Array<string> | boolean => {\n    let token = null;\n    let match = null;\n\n    if (typeof pattern === 'string') {\n      const regex = new RegExp(pattern, caseFold ? 'i' : 'g');\n      match = regex.test(this._sourceText.substr(this._pos, pattern.length));\n      token = pattern;\n    } else if (pattern instanceof RegExp) {\n      match = this._sourceText.slice(this._pos).match(pattern);\n      token = match?.[0];\n    }\n\n    if (match != null) {\n      if (\n        typeof pattern === 'string' ||\n        (match instanceof Array &&\n          // String.match returns 'index' property, which flow fails to detect\n          // for some reason. The below is a workaround, but an easier solution\n          // is just checking if `match.index === 0`\n          this._sourceText.startsWith(match[0], this._pos))\n      ) {\n        if (consume) {\n          this._start = this._pos;\n          // eslint-disable-next-line @typescript-eslint/prefer-optional-chain -- otherwise has type issue\n          if (token && token.length) {\n            this._pos += token.length;\n          }\n        }\n        return match;\n      }\n    }\n\n    // No match available.\n    return false;\n  };\n\n  public backUp = (num: number): void => {\n    this._pos -= num;\n  };\n\n  public column = (): number => this._pos;\n\n  public indentation = (): number => {\n    const match = this._sourceText.match(/\\s*/);\n    let indent = 0;\n    if (match && match.length !== 0) {\n      const whitespaces = match[0];\n      let pos = 0;\n      while (whitespaces.length > pos) {\n        if (whitespaces.charCodeAt(pos) === 9) {\n          indent += 2;\n        } else {\n          indent++;\n        }\n        pos++;\n      }\n    }\n\n    return indent;\n  };\n\n  public current = (): string => this._sourceText.slice(this._start, this._pos);\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\n// These functions help build matching rules for ParseRules.\n\nimport { Rule, Token } from './types';\n\n// An optional rule.\nexport function opt(ofRule: Rule | string): Rule {\n  return { ofRule };\n}\n\n// A list of another rule.\nexport function list(ofRule: Rule | string, separator?: string | Rule): Rule {\n  return { ofRule, isList: true, separator };\n}\n\n// An constraint described as `but not` in the GraphQL spec.\nexport function butNot(rule: Rule, exclusions: Array<Rule>) {\n  const ruleMatch = rule.match;\n  rule.match = token => {\n    let check = false;\n    if (ruleMatch) {\n      check = ruleMatch(token);\n    }\n    return (\n      check &&\n      exclusions.every(exclusion => exclusion.match && !exclusion.match(token))\n    );\n  };\n  return rule;\n}\n\n// Token of a kind\nexport function t(kind: string, style: string) {\n  return { style, match: (token: Token) => token.kind === kind };\n}\n\n// Punctuator\nexport function p(value: string, style?: string): Rule {\n  return {\n    style: style || 'punctuation',\n    match: (token: Token) =>\n      token.kind === 'Punctuation' && token.value === value,\n  };\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { State, Token, Rule, RuleKind, ParseRule } from './types';\nimport CharacterStream from './CharacterStream';\nimport { opt, list, butNot, t, p } from './RuleHelpers';\nimport { Kind } from 'graphql';\n\n/**\n * Whitespace tokens defined in GraphQL spec.\n */\nexport const isIgnored = (ch: string) =>\n  ch === ' ' ||\n  ch === '\\t' ||\n  ch === ',' ||\n  ch === '\\n' ||\n  ch === '\\r' ||\n  ch === '\\uFEFF' ||\n  ch === '\\u00A0';\n\n/**\n * The lexer rules. These are exactly as described by the spec.\n */\nexport const LexRules = {\n  // The Name token.\n  Name: /^[_A-Za-z][_0-9A-Za-z]*/,\n\n  // All Punctuation used in GraphQL\n  Punctuation: /^(?:!|\\$|\\(|\\)|\\.\\.\\.|:|=|&|@|\\[|]|\\{|\\||\\})/,\n\n  // Combines the IntValue and FloatValue tokens.\n  Number: /^-?(?:0|(?:[1-9][0-9]*))(?:\\.[0-9]*)?(?:[eE][+-]?[0-9]+)?/,\n\n  // Note the closing quote is made optional as an IDE experience improvment.\n  String: /^(?:\"\"\"(?:\\\\\"\"\"|[^\"]|\"[^\"]|\"\"[^\"])*(?:\"\"\")?|\"(?:[^\"\\\\]|\\\\(?:\"|\\/|\\\\|b|f|n|r|t|u[0-9a-fA-F]{4}))*\"?)/,\n\n  // Comments consume entire lines.\n  Comment: /^#.*/,\n};\n\n/**\n * The parser rules. These are very close to, but not exactly the same as the\n * spec. Minor deviations allow for a simpler implementation. The resulting\n * parser can parse everything the spec declares possible.\n */\nexport const ParseRules: { [name: string]: ParseRule } = {\n  Document: [list('Definition')],\n  Definition(token: Token): RuleKind | void {\n    switch (token.value) {\n      case '{':\n        return 'ShortQuery';\n      case 'query':\n        return 'Query';\n      case 'mutation':\n        return 'Mutation';\n      case 'subscription':\n        return 'Subscription';\n      case 'fragment':\n        return Kind.FRAGMENT_DEFINITION;\n      case 'schema':\n        return 'SchemaDef';\n      case 'scalar':\n        return 'ScalarDef';\n      case 'type':\n        return 'ObjectTypeDef';\n      case 'interface':\n        return 'InterfaceDef';\n      case 'union':\n        return 'UnionDef';\n      case 'enum':\n        return 'EnumDef';\n      case 'input':\n        return 'InputDef';\n      case 'extend':\n        return 'ExtendDef';\n      case 'directive':\n        return 'DirectiveDef';\n    }\n  },\n  // Note: instead of \"Operation\", these rules have been separated out.\n  ShortQuery: ['SelectionSet'],\n  Query: [\n    word('query'),\n    opt(name('def')),\n    opt('VariableDefinitions'),\n    list('Directive'),\n    'SelectionSet',\n  ],\n\n  Mutation: [\n    word('mutation'),\n    opt(name('def')),\n    opt('VariableDefinitions'),\n    list('Directive'),\n    'SelectionSet',\n  ],\n\n  Subscription: [\n    word('subscription'),\n    opt(name('def')),\n    opt('VariableDefinitions'),\n    list('Directive'),\n    'SelectionSet',\n  ],\n\n  VariableDefinitions: [p('('), list('VariableDefinition'), p(')')],\n  VariableDefinition: ['Variable', p(':'), 'Type', opt('DefaultValue')],\n  Variable: [p('$', 'variable'), name('variable')],\n  DefaultValue: [p('='), 'Value'],\n  SelectionSet: [p('{'), list('Selection'), p('}')],\n  Selection(token: Token, stream: CharacterStream) {\n    return token.value === '...'\n      ? stream.match(/[\\s\\u00a0,]*(on\\b|@|{)/, false)\n        ? 'InlineFragment'\n        : 'FragmentSpread'\n      : stream.match(/[\\s\\u00a0,]*:/, false)\n      ? 'AliasedField'\n      : 'Field';\n  },\n  // Note: this minor deviation of \"AliasedField\" simplifies the lookahead.\n  AliasedField: [\n    name('property'),\n    p(':'),\n    name('qualifier'),\n    opt('Arguments'),\n    list('Directive'),\n    opt('SelectionSet'),\n  ],\n\n  Field: [\n    name('property'),\n    opt('Arguments'),\n    list('Directive'),\n    opt('SelectionSet'),\n  ],\n\n  Arguments: [p('('), list('Argument'), p(')')],\n  Argument: [name('attribute'), p(':'), 'Value'],\n  FragmentSpread: [p('...'), name('def'), list('Directive')],\n  InlineFragment: [\n    p('...'),\n    opt('TypeCondition'),\n    list('Directive'),\n    'SelectionSet',\n  ],\n\n  FragmentDefinition: [\n    word('fragment'),\n    opt(butNot(name('def'), [word('on')])),\n    'TypeCondition',\n    list('Directive'),\n    'SelectionSet',\n  ],\n\n  TypeCondition: [word('on'), 'NamedType'],\n  // Variables could be parsed in cases where only Const is expected by spec.\n  Value(token: Token) {\n    switch (token.kind) {\n      case 'Number':\n        return 'NumberValue';\n      case 'String':\n        return 'StringValue';\n      case 'Punctuation':\n        switch (token.value) {\n          case '[':\n            return 'ListValue';\n          case '{':\n            return 'ObjectValue';\n          case '$':\n            return 'Variable';\n          case '&':\n            return 'NamedType';\n        }\n\n        return null;\n      case 'Name':\n        switch (token.value) {\n          case 'true':\n          case 'false':\n            return 'BooleanValue';\n        }\n\n        if (token.value === 'null') {\n          return 'NullValue';\n        }\n        return 'EnumValue';\n    }\n  },\n  NumberValue: [t('Number', 'number')],\n  StringValue: [\n    {\n      style: 'string',\n      match: (token: Token) => token.kind === 'String',\n      update(state: State, token: Token) {\n        if (token.value.startsWith('\"\"\"')) {\n          state.inBlockstring = !token.value.slice(3).endsWith('\"\"\"');\n        }\n      },\n    },\n  ],\n  BooleanValue: [t('Name', 'builtin')],\n  NullValue: [t('Name', 'keyword')],\n  EnumValue: [name('string-2')],\n  ListValue: [p('['), list('Value'), p(']')],\n  ObjectValue: [p('{'), list('ObjectField'), p('}')],\n  ObjectField: [name('attribute'), p(':'), 'Value'],\n  Type(token: Token) {\n    return token.value === '[' ? 'ListType' : 'NonNullType';\n  },\n  // NonNullType has been merged into ListType to simplify.\n  ListType: [p('['), 'Type', p(']'), opt(p('!'))],\n  NonNullType: ['NamedType', opt(p('!'))],\n  NamedType: [type('atom')],\n  Directive: [p('@', 'meta'), name('meta'), opt('Arguments')],\n  DirectiveDef: [\n    word('directive'),\n    p('@', 'meta'),\n    name('meta'),\n    opt('ArgumentsDef'),\n    word('on'),\n    list('DirectiveLocation', p('|')),\n  ],\n  InterfaceDef: [\n    word('interface'),\n    name('atom'),\n    opt('Implements'),\n    list('Directive'),\n    p('{'),\n    list('FieldDef'),\n    p('}'),\n  ],\n  Implements: [word('implements'), list('NamedType', p('&'))],\n  DirectiveLocation: [name('string-2')],\n  // GraphQL schema language\n  SchemaDef: [\n    word('schema'),\n    list('Directive'),\n    p('{'),\n    list('OperationTypeDef'),\n    p('}'),\n  ],\n\n  OperationTypeDef: [name('keyword'), p(':'), name('atom')],\n  ScalarDef: [word('scalar'), name('atom'), list('Directive')],\n  ObjectTypeDef: [\n    word('type'),\n    name('atom'),\n    opt('Implements'),\n    list('Directive'),\n    p('{'),\n    list('FieldDef'),\n    p('}'),\n  ],\n\n  FieldDef: [\n    name('property'),\n    opt('ArgumentsDef'),\n    p(':'),\n    'Type',\n    list('Directive'),\n  ],\n\n  ArgumentsDef: [p('('), list('InputValueDef'), p(')')],\n  InputValueDef: [\n    name('attribute'),\n    p(':'),\n    'Type',\n    opt('DefaultValue'),\n    list('Directive'),\n  ],\n\n  UnionDef: [\n    word('union'),\n    name('atom'),\n    list('Directive'),\n    p('='),\n    list('UnionMember', p('|')),\n  ],\n\n  UnionMember: ['NamedType'],\n  EnumDef: [\n    word('enum'),\n    name('atom'),\n    list('Directive'),\n    p('{'),\n    list('EnumValueDef'),\n    p('}'),\n  ],\n\n  EnumValueDef: [name('string-2'), list('Directive')],\n  InputDef: [\n    word('input'),\n    name('atom'),\n    list('Directive'),\n    p('{'),\n    list('InputValueDef'),\n    p('}'),\n  ],\n  ExtendDef: [word('extend'), 'ObjectTypeDef'],\n};\n\n// A keyword Token.\nfunction word(value: string) {\n  return {\n    style: 'keyword',\n    match: (token: Token) => token.kind === 'Name' && token.value === value,\n  };\n}\n\n// A Name Token which will decorate the state with a `name`.\nfunction name(style: string): Rule {\n  return {\n    style,\n    match: (token: Token) => token.kind === 'Name',\n    update(state: State, token: Token) {\n      state.name = token.value;\n    },\n  };\n}\n\n// A Name Token which will decorate the previous state with a `type`.\nfunction type(style: string) {\n  return {\n    style,\n    match: (token: Token) => token.kind === 'Name',\n    update(state: State, token: Token) {\n      if (state.prevState?.prevState) {\n        state.name = token.value;\n        state.prevState.prevState.type = token.value;\n      }\n    },\n  };\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Builds an online immutable parser, designed to be used as part of a syntax\n * highlighting and code intelligence tools.\n *\n * Options:\n *\n *     eatWhitespace: (\n *       stream: Stream | CodeMirror.StringStream | CharacterStream\n *     ) => boolean\n *       Use CodeMirror API.\n *\n *     LexRules: { [name: string]: RegExp }, Includes `Punctuation`, `Comment`.\n *\n *     ParseRules: { [name: string]: Array<Rule> }, Includes `Document`.\n *\n *     editorConfig: { [name: string]: any }, Provides an editor-specific\n *       configurations set.\n *\n */\n\nimport {\n  LexRules as LexRulesType,\n  ParseRules as ParseRulesType,\n} from './Rules';\nimport CharacterStream from './CharacterStream';\nimport { State, Token, Rule, RuleKind } from './types';\n\nimport { LexRules, ParseRules, isIgnored } from './Rules';\nimport { Kind } from 'graphql';\n\nexport type ParserOptions = {\n  eatWhitespace: (stream: CharacterStream) => boolean;\n  lexRules: Partial<typeof LexRulesType>;\n  parseRules: typeof ParseRulesType;\n  editorConfig: { [name: string]: any };\n};\n\nexport default function onlineParser(\n  options: ParserOptions = {\n    eatWhitespace: stream => stream.eatWhile(isIgnored),\n    lexRules: LexRules,\n    parseRules: ParseRules,\n    editorConfig: {},\n  },\n): {\n  startState: () => State;\n  token: (stream: CharacterStream, state: State) => string;\n} {\n  return {\n    startState() {\n      const initialState = {\n        level: 0,\n        step: 0,\n        name: null,\n        kind: null,\n        type: null,\n        rule: null,\n        needsSeperator: false,\n        prevState: null,\n      };\n\n      pushRule(options.parseRules, initialState, Kind.DOCUMENT);\n      return initialState;\n    },\n    token(stream: CharacterStream, state: State) {\n      return getToken(stream, state, options);\n    },\n  };\n}\n\nfunction getToken(\n  stream: CharacterStream,\n  state: State,\n  options: ParserOptions,\n): string {\n  if (state.inBlockstring) {\n    if (stream.match(/.*\"\"\"/)) {\n      state.inBlockstring = false;\n      return 'string';\n    } else {\n      stream.skipToEnd();\n      return 'string';\n    }\n  }\n\n  const { lexRules, parseRules, eatWhitespace, editorConfig } = options;\n  // Restore state after an empty-rule.\n  if (state.rule && state.rule.length === 0) {\n    popRule(state);\n  } else if (state.needsAdvance) {\n    state.needsAdvance = false;\n    advanceRule(state, true);\n  }\n\n  // Remember initial indentation\n  if (stream.sol()) {\n    const tabSize = editorConfig?.tabSize || 2;\n    state.indentLevel = Math.floor(stream.indentation() / tabSize);\n  }\n\n  // Consume spaces and ignored characters\n  if (eatWhitespace(stream)) {\n    return 'ws';\n  }\n\n  // Get a matched token from the stream, using lex\n  const token = lex(lexRules, stream);\n\n  // If there's no matching token, skip ahead.\n  if (!token) {\n    const matchedSomething = stream.match(/\\S+/);\n    if (!matchedSomething) {\n      // We need to eat at least one character, and we couldn't match any\n      // non-whitespace, so it must be exotic whitespace.\n      stream.match(/\\s/);\n    }\n    pushRule(SpecialParseRules, state, 'Invalid');\n    return 'invalidchar';\n  }\n\n  // If the next token is a Comment, insert a Comment parsing rule.\n  if (token.kind === 'Comment') {\n    pushRule(SpecialParseRules, state, 'Comment');\n    return 'comment';\n  }\n\n  // Save state before continuing.\n  const backupState = assign({}, state);\n\n  // Handle changes in expected indentation level\n  if (token.kind === 'Punctuation') {\n    if (/^[{([]/.test(token.value)) {\n      if (state.indentLevel !== undefined) {\n        // Push on the stack of levels one level deeper than the current level.\n        state.levels = (state.levels || []).concat(state.indentLevel + 1);\n      }\n    } else if (/^[})\\]]/.test(token.value)) {\n      // Pop from the stack of levels.\n      // If the top of the stack is lower than the current level, lower the\n      // current level to match.\n      const levels = (state.levels = (state.levels || []).slice(0, -1));\n      // FIXME\n      // what if state.indentLevel === 0?\n      if (state.indentLevel) {\n        if (\n          levels.length > 0 &&\n          levels[levels.length - 1] < state.indentLevel\n        ) {\n          state.indentLevel = levels[levels.length - 1];\n        }\n      }\n    }\n  }\n\n  while (state.rule) {\n    // If this is a forking rule, determine what rule to use based on\n    // the current token, otherwise expect based on the current step.\n    let expected: any =\n      typeof state.rule === 'function'\n        ? state.step === 0\n          ? state.rule(token, stream)\n          : null\n        : state.rule[state.step];\n\n    // Separator between list elements if necessary.\n    if (state.needsSeperator) {\n      expected = expected?.separator;\n    }\n\n    if (expected) {\n      // Un-wrap optional/list parseRules.\n      if (expected.ofRule) {\n        expected = expected.ofRule;\n      }\n\n      // A string represents a Rule\n      if (typeof expected === 'string') {\n        pushRule(parseRules, state, expected as RuleKind);\n        continue;\n      }\n\n      // Otherwise, match a Terminal.\n      if (expected.match?.(token)) {\n        if (expected.update) {\n          expected.update(state, token);\n        }\n\n        // If this token was a punctuator, advance the parse rule, otherwise\n        // mark the state to be advanced before the next token. This ensures\n        // that tokens which can be appended to keep the appropriate state.\n        if (token.kind === 'Punctuation') {\n          advanceRule(state, true);\n        } else {\n          state.needsAdvance = true;\n        }\n\n        return expected.style;\n      }\n    }\n    unsuccessful(state);\n  }\n\n  // The parser does not know how to interpret this token, do not affect state.\n  assign(state, backupState);\n  pushRule(SpecialParseRules, state, 'Invalid');\n  return 'invalidchar';\n}\n\n// Utility function to assign from object to another object.\nfunction assign(to: Object, from: Object): Object {\n  const keys = Object.keys(from);\n  for (let i = 0; i < keys.length; i++) {\n    // @ts-ignore\n    // TODO: ParseRules as numerical index\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n// A special rule set for parsing comment tokens.\nconst SpecialParseRules = {\n  Invalid: [],\n  Comment: [],\n};\n\n// Push a new rule onto the state.\nfunction pushRule(\n  rules: typeof ParseRulesType,\n  state: State,\n  ruleKind: RuleKind,\n): void {\n  if (!rules[ruleKind]) {\n    throw new TypeError('Unknown rule: ' + ruleKind);\n  }\n  state.prevState = { ...state };\n  state.kind = ruleKind;\n  state.name = null;\n  state.type = null;\n  state.rule = rules[ruleKind];\n  state.step = 0;\n  state.needsSeperator = false;\n}\n\n// Pop the current rule from the state.\nfunction popRule(state: State): undefined {\n  // Check if there's anything to pop\n  if (!state.prevState) {\n    return;\n  }\n  state.kind = state.prevState.kind;\n  state.name = state.prevState.name;\n  state.type = state.prevState.type;\n  state.rule = state.prevState.rule;\n  state.step = state.prevState.step;\n  state.needsSeperator = state.prevState.needsSeperator;\n  state.prevState = state.prevState.prevState;\n}\n\n// Advance the step of the current rule.\nfunction advanceRule(state: State, successful: boolean): undefined {\n  // If this is advancing successfully and the current state is a list, give\n  // it an opportunity to repeat itself.\n  if (isList(state) && state.rule) {\n    // @ts-ignore\n    // TODO: ParseRules as numerical index\n    const step = state.rule[state.step];\n    if (step.separator) {\n      const separator = step.separator;\n      state.needsSeperator = !state.needsSeperator;\n      // If the separator was optional, then give it an opportunity to repeat.\n      if (!state.needsSeperator && separator.ofRule) {\n        return;\n      }\n    }\n    // If this was a successful list parse, then allow it to repeat itself.\n    if (successful) {\n      return;\n    }\n  }\n\n  // Advance the step in the rule. If the rule is completed, pop\n  // the rule and advance the parent rule as well (recursively).\n  state.needsSeperator = false;\n  state.step++;\n\n  // While the current rule is completed.\n  while (\n    state.rule &&\n    !(Array.isArray(state.rule) && state.step < state.rule.length)\n  ) {\n    popRule(state);\n\n    if (state.rule) {\n      // Do not advance a List step so it has the opportunity to repeat itself.\n      if (isList(state)) {\n        // @ts-ignore\n        // TODO: ParseRules as numerical index\n        if (state.rule?.[state.step].separator) {\n          state.needsSeperator = !state.needsSeperator;\n        }\n      } else {\n        state.needsSeperator = false;\n        state.step++;\n      }\n    }\n  }\n}\n\nfunction isList(state: State): boolean | null | undefined {\n  const step =\n    Array.isArray(state.rule) &&\n    typeof state.rule[state.step] !== 'string' &&\n    (state.rule[state.step] as Rule);\n  // eslint-disable-next-line @typescript-eslint/prefer-optional-chain -- otherwise has type issue\n  return step && step.isList;\n}\n\n// Unwind the state after an unsuccessful match.\nfunction unsuccessful(state: State): void {\n  // Fall back to the parent rule until you get to an optional or list rule or\n  // until the entire stack of rules is empty.\n  while (\n    state.rule &&\n    // TODO: not sure how to fix this performantly\n    // @ts-ignore\n    !(Array.isArray(state.rule) && state.rule[state.step].ofRule)\n  ) {\n    popRule(state);\n  }\n\n  // If there is still a rule, it must be an optional or list rule.\n  // Consider this rule a success so that we may move past it.\n  if (state.rule) {\n    advanceRule(state, false);\n  }\n}\n\n// Given a stream, returns a { kind, value } pair, or null.\nfunction lex(\n  lexRules: Partial<typeof LexRulesType>,\n  stream: CharacterStream,\n): Token | null | undefined {\n  const kinds = Object.keys(lexRules);\n  for (let i = 0; i < kinds.length; i++) {\n    // @ts-ignore\n    // TODO: ParseRules as numerical index\n    const match = stream.match(lexRules[kinds[i]]);\n    if (match && match instanceof Array) {\n      return { kind: kinds[i], value: match[0] };\n    }\n  }\n}\n","import { Kind } from 'graphql';\nimport { Maybe } from '../types';\nimport CharacterStream from './CharacterStream';\n\nexport type ContextToken = {\n  start: number;\n  end: number;\n  string: string;\n  state: State;\n  style?: string;\n};\n\nexport type ContextTokenForCodeMirror = {\n  start: number;\n  end: number;\n  string: string;\n  type: string | null;\n  state: State;\n};\n\nexport type ContextTokenUnion = ContextToken | ContextTokenForCodeMirror;\n\nexport type RuleOrString = Rule | string;\n\nexport type ParseRule =\n  | RuleOrString[]\n  | ((token: Token, stream: CharacterStream) => string | null | void);\n\nexport type Token = {\n  kind: string;\n  value: string;\n};\n\nexport type Rule = {\n  style?: string;\n  match?: (token: Token) => boolean;\n  update?: (state: State, token: Token) => void;\n  separator?: string | Rule;\n  isList?: boolean;\n  ofRule?: Rule | string;\n};\n\nexport type State = {\n  level: number;\n  levels?: number[];\n  prevState: Maybe<State>;\n  rule: Maybe<ParseRule>;\n  kind: Maybe<RuleKind>;\n  name: Maybe<string>;\n  type: Maybe<string>;\n  step: number;\n  needsSeperator: boolean;\n  needsAdvance?: boolean;\n  indentLevel?: number;\n  inBlockstring?: boolean;\n};\n\nexport const AdditionalRuleKinds: _AdditionalRuleKinds = {\n  ALIASED_FIELD: 'AliasedField',\n  ARGUMENTS: 'Arguments',\n  SHORT_QUERY: 'ShortQuery',\n  QUERY: 'Query',\n  MUTATION: 'Mutation',\n  SUBSCRIPTION: 'Subscription',\n  TYPE_CONDITION: 'TypeCondition',\n  INVALID: 'Invalid',\n  COMMENT: 'Comment',\n  SCHEMA_DEF: 'SchemaDef',\n  SCALAR_DEF: 'ScalarDef',\n  OBJECT_TYPE_DEF: 'ObjectTypeDef',\n  OBJECT_VALUE: 'ObjectValue',\n  LIST_VALUE: 'ListValue',\n  INTERFACE_DEF: 'InterfaceDef',\n  UNION_DEF: 'UnionDef',\n  ENUM_DEF: 'EnumDef',\n  ENUM_VALUE: 'EnumValue',\n  FIELD_DEF: 'FieldDef',\n  INPUT_DEF: 'InputDef',\n  INPUT_VALUE_DEF: 'InputValueDef',\n  ARGUMENTS_DEF: 'ArgumentsDef',\n  EXTEND_DEF: 'ExtendDef',\n  DIRECTIVE_DEF: 'DirectiveDef',\n  IMPLEMENTS: 'Implements',\n  VARIABLE_DEFINITIONS: 'VariableDefinitions',\n  TYPE: 'Type',\n};\n\nexport type _AdditionalRuleKinds = {\n  ALIASED_FIELD: 'AliasedField';\n  ARGUMENTS: 'Arguments';\n  SHORT_QUERY: 'ShortQuery';\n  QUERY: 'Query';\n  MUTATION: 'Mutation';\n  SUBSCRIPTION: 'Subscription';\n  TYPE_CONDITION: 'TypeCondition';\n  INVALID: 'Invalid';\n  COMMENT: 'Comment';\n  SCHEMA_DEF: 'SchemaDef';\n  SCALAR_DEF: 'ScalarDef';\n  OBJECT_TYPE_DEF: 'ObjectTypeDef';\n  OBJECT_VALUE: 'ObjectValue';\n  LIST_VALUE: 'ListValue';\n  INTERFACE_DEF: 'InterfaceDef';\n  UNION_DEF: 'UnionDef';\n  ENUM_DEF: 'EnumDef';\n  ENUM_VALUE: 'EnumValue';\n  FIELD_DEF: 'FieldDef';\n  INPUT_DEF: 'InputDef';\n  INPUT_VALUE_DEF: 'InputValueDef';\n  ARGUMENTS_DEF: 'ArgumentsDef';\n  EXTEND_DEF: 'ExtendDef';\n  DIRECTIVE_DEF: 'DirectiveDef';\n  IMPLEMENTS: 'Implements';\n  VARIABLE_DEFINITIONS: 'VariableDefinitions';\n  TYPE: 'Type';\n};\n\nexport const RuleKinds = {\n  ...Kind,\n  ...AdditionalRuleKinds,\n};\n\nexport type _RuleKinds = typeof Kind & typeof AdditionalRuleKinds;\n\nexport type RuleKind = _RuleKinds[keyof _RuleKinds];\nexport type RuleKindEnum = RuleKind;\nexport type TokenPattern = string | ((char: string) => boolean) | RegExp;\n\nexport interface CharacterStreamInterface {\n  getStartOfToken: () => number;\n  getCurrentPosition: () => number;\n  eol: () => boolean;\n  sol: () => boolean;\n  peek: () => string | null;\n  next: () => string;\n  eat: (pattern: TokenPattern) => string | undefined;\n  eatWhile: (match: TokenPattern) => boolean;\n  eatSpace: () => boolean;\n  skipToEnd: () => void;\n  skipTo: (position: number) => void;\n  match: (\n    pattern: TokenPattern,\n    consume?: Maybe<boolean>,\n    caseFold?: Maybe<boolean>,\n  ) => string[] | boolean;\n  backUp: (num: number) => void;\n  column: () => number;\n  indentation: () => number;\n  current: () => string;\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\nimport {\n  CompletionItemKind,\n  InsertTextFormat,\n} from 'vscode-languageserver-types';\n\nimport {\n  FragmentDefinitionNode,\n  GraphQLDirective,\n  GraphQLSchema,\n  GraphQLType,\n  GraphQLCompositeType,\n  GraphQLEnumValue,\n  GraphQLField,\n  GraphQLFieldMap,\n  GraphQLNamedType,\n  isInterfaceType,\n  GraphQLInterfaceType,\n  GraphQLObjectType,\n  Kind,\n  DirectiveLocation,\n  GraphQLArgument,\n  isListType,\n  isNonNullType,\n} from 'graphql';\n\nimport { CompletionItem, AllTypeInfo, IPosition } from '../types';\n\nimport {\n  GraphQLBoolean,\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLList,\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef,\n  assertAbstractType,\n  doTypesOverlap,\n  getNamedType,\n  getNullableType,\n  isAbstractType,\n  isCompositeType,\n  isInputType,\n  visit,\n  parse,\n} from 'graphql';\n\nimport {\n  CharacterStream,\n  onlineParser,\n  ContextToken,\n  State,\n  RuleKinds,\n  RuleKind,\n  ContextTokenForCodeMirror,\n} from '../parser';\n\nimport {\n  forEachState,\n  getDefinitionState,\n  getFieldDef,\n  hintList,\n  objectValues,\n} from './autocompleteUtils';\n\nexport const SuggestionCommand = {\n  command: 'editor.action.triggerSuggest',\n  title: 'Suggestions',\n};\n\nconst collectFragmentDefs = (op: string | undefined) => {\n  const externalFragments: FragmentDefinitionNode[] = [];\n  if (op) {\n    try {\n      visit(parse(op), {\n        FragmentDefinition(def) {\n          externalFragments.push(def);\n        },\n      });\n    } catch {\n      return [];\n    }\n  }\n  return externalFragments;\n};\n\nexport type AutocompleteSuggestionOptions = {\n  fillLeafsOnComplete?: boolean;\n  schema?: GraphQLSchema;\n};\n\n/**\n * Given GraphQLSchema, queryText, and context of the current position within\n * the source text, provide a list of typeahead entries.\n */\nexport function getAutocompleteSuggestions(\n  schema: GraphQLSchema,\n  queryText: string,\n  cursor: IPosition,\n  contextToken?: ContextTokenForCodeMirror,\n  fragmentDefs?: FragmentDefinitionNode[] | string,\n  options?: AutocompleteSuggestionOptions,\n): Array<CompletionItem> {\n  const opts = {\n    ...options,\n    schema,\n  };\n  const token: ContextToken =\n    contextToken || getTokenAtPosition(queryText, cursor);\n\n  const state =\n    token.state.kind === 'Invalid' ? token.state.prevState : token.state;\n\n  // relieve flow errors by checking if `state` exists\n  if (!state) {\n    return [];\n  }\n\n  const kind = state.kind;\n  const step = state.step;\n  const typeInfo = getTypeInfo(schema, token.state);\n  // Definition kinds\n  if (kind === RuleKinds.DOCUMENT) {\n    return hintList(token, [\n      { label: 'query', kind: CompletionItemKind.Function },\n      { label: 'mutation', kind: CompletionItemKind.Function },\n      { label: 'subscription', kind: CompletionItemKind.Function },\n      { label: 'fragment', kind: CompletionItemKind.Function },\n      { label: '{', kind: CompletionItemKind.Constructor },\n    ]);\n  }\n\n  if (\n    kind === RuleKinds.IMPLEMENTS ||\n    (kind === RuleKinds.NAMED_TYPE &&\n      state.prevState?.kind === RuleKinds.IMPLEMENTS)\n  ) {\n    return getSuggestionsForImplements(\n      token,\n      state,\n      schema,\n      queryText,\n      typeInfo,\n    );\n  }\n\n  // Field names\n  if (\n    kind === RuleKinds.SELECTION_SET ||\n    kind === RuleKinds.FIELD ||\n    kind === RuleKinds.ALIASED_FIELD\n  ) {\n    return getSuggestionsForFieldNames(token, typeInfo, opts);\n  }\n\n  // Argument names\n  if (\n    kind === RuleKinds.ARGUMENTS ||\n    (kind === RuleKinds.ARGUMENT && step === 0)\n  ) {\n    const argDefs = typeInfo.argDefs;\n    if (argDefs) {\n      return hintList(\n        token,\n        argDefs.map(\n          (argDef: GraphQLArgument): CompletionItem => ({\n            label: argDef.name,\n            insertText: argDef.name + ': ',\n            command: SuggestionCommand,\n            detail: String(argDef.type),\n            documentation: argDef.description ?? undefined,\n            kind: CompletionItemKind.Variable,\n            type: argDef.type,\n          }),\n        ),\n      );\n    }\n  }\n\n  // Input Object fields\n  if (\n    kind === RuleKinds.OBJECT_VALUE ||\n    (kind === RuleKinds.OBJECT_FIELD && step === 0)\n  ) {\n    if (typeInfo.objectFieldDefs) {\n      const objectFields = objectValues(typeInfo.objectFieldDefs);\n      const completionKind =\n        kind === RuleKinds.OBJECT_VALUE\n          ? CompletionItemKind.Value\n          : CompletionItemKind.Field;\n      return hintList(\n        token,\n        objectFields.map(field => ({\n          label: field.name,\n          detail: String(field.type),\n          documentation: field.description ?? undefined,\n          kind: completionKind,\n          type: field.type,\n        })),\n      );\n    }\n  }\n\n  // Input values: Enum and Boolean\n  if (\n    kind === RuleKinds.ENUM_VALUE ||\n    (kind === RuleKinds.LIST_VALUE && step === 1) ||\n    (kind === RuleKinds.OBJECT_FIELD && step === 2) ||\n    (kind === RuleKinds.ARGUMENT && step === 2)\n  ) {\n    return getSuggestionsForInputValues(token, typeInfo, queryText, schema);\n  }\n  // complete for all variables available in the query\n  if (kind === RuleKinds.VARIABLE && step === 1) {\n    const namedInputType = getNamedType(typeInfo.inputType as GraphQLType);\n    const variableDefinitions = getVariableCompletions(\n      queryText,\n      schema,\n      token,\n    );\n    return hintList(\n      token,\n      variableDefinitions.filter(v => v.detail === namedInputType?.name),\n    );\n  }\n\n  // Fragment type conditions\n  if (\n    (kind === RuleKinds.TYPE_CONDITION && step === 1) ||\n    (kind === RuleKinds.NAMED_TYPE &&\n      state.prevState != null &&\n      state.prevState.kind === RuleKinds.TYPE_CONDITION)\n  ) {\n    return getSuggestionsForFragmentTypeConditions(\n      token,\n      typeInfo,\n      schema,\n      kind,\n    );\n  }\n\n  // Fragment spread names\n  if (kind === RuleKinds.FRAGMENT_SPREAD && step === 1) {\n    return getSuggestionsForFragmentSpread(\n      token,\n      typeInfo,\n      schema,\n      queryText,\n      Array.isArray(fragmentDefs)\n        ? fragmentDefs\n        : collectFragmentDefs(fragmentDefs),\n    );\n  }\n\n  // Variable definition types\n  if (\n    (kind === RuleKinds.VARIABLE_DEFINITION && step === 2) ||\n    (kind === RuleKinds.LIST_TYPE && step === 1) ||\n    (kind === RuleKinds.NAMED_TYPE &&\n      state.prevState &&\n      (state.prevState.kind === RuleKinds.VARIABLE_DEFINITION ||\n        state.prevState.kind === RuleKinds.LIST_TYPE ||\n        state.prevState.kind === RuleKinds.NON_NULL_TYPE))\n  ) {\n    return getSuggestionsForVariableDefinition(token, schema, kind);\n  }\n\n  // Directive names\n  if (kind === RuleKinds.DIRECTIVE) {\n    return getSuggestionsForDirective(token, state, schema, kind);\n  }\n\n  return [];\n}\n\nconst insertSuffix = ` {\\n  $1\\n}`;\n\n/**\n * Choose carefully when to insert the `insertText`!\n * @param field\n * @returns\n */\nconst getInsertText = (field: GraphQLField<null, null>) => {\n  const type = field.type;\n  if (isCompositeType(type)) {\n    return insertSuffix;\n  }\n  if (isListType(type) && isCompositeType(type.ofType)) {\n    return insertSuffix;\n  }\n  if (isNonNullType(type)) {\n    if (isCompositeType(type.ofType)) {\n      return insertSuffix;\n    }\n    if (isListType(type.ofType) && isCompositeType(type.ofType.ofType)) {\n      return insertSuffix;\n    }\n  }\n  return null;\n};\n\n// Helper functions to get suggestions for each kinds\nfunction getSuggestionsForFieldNames(\n  token: ContextToken,\n  typeInfo: AllTypeInfo,\n  options?: AutocompleteSuggestionOptions,\n): Array<CompletionItem> {\n  if (typeInfo.parentType) {\n    const parentType = typeInfo.parentType;\n    let fields: GraphQLField<null, null>[] = [];\n    if ('getFields' in parentType) {\n      fields = objectValues<GraphQLField<null, null>>(\n        // TODO: getFields returns `GraphQLFieldMap<any, any> | GraphQLInputFieldMap`\n        parentType.getFields() as GraphQLFieldMap<any, any>,\n      );\n    }\n\n    if (isCompositeType(parentType)) {\n      fields.push(TypeNameMetaFieldDef);\n    }\n    if (parentType === options?.schema?.getQueryType()) {\n      fields.push(SchemaMetaFieldDef, TypeMetaFieldDef);\n    }\n    return hintList(\n      token,\n      fields.map<CompletionItem>((field, index) => {\n        const suggestion: CompletionItem = {\n          // This will sort the fields in the same order they are listed in the schema\n          sortText: String(index) + field.name,\n          label: field.name,\n          detail: String(field.type),\n          documentation: field.description ?? undefined,\n          deprecated: Boolean(field.deprecationReason),\n          isDeprecated: Boolean(field.deprecationReason),\n          deprecationReason: field.deprecationReason,\n          kind: CompletionItemKind.Field,\n          type: field.type,\n        };\n        // TODO: fillLeafs capability\n        const insertText = getInsertText(field);\n\n        if (insertText) {\n          suggestion.insertText = field.name + insertText;\n          suggestion.insertTextFormat = InsertTextFormat.Snippet;\n          suggestion.command = SuggestionCommand;\n        }\n        return suggestion;\n      }),\n    );\n  }\n  return [];\n}\n\nfunction getSuggestionsForInputValues(\n  token: ContextToken,\n  typeInfo: AllTypeInfo,\n  queryText: string,\n  schema: GraphQLSchema,\n): Array<CompletionItem> {\n  const namedInputType = getNamedType(typeInfo.inputType as GraphQLType);\n\n  const queryVariables: CompletionItem[] = getVariableCompletions(\n    queryText,\n    schema,\n    token,\n  ).filter(v => v.detail === namedInputType.name);\n\n  if (namedInputType instanceof GraphQLEnumType) {\n    const values = namedInputType.getValues();\n    return hintList(\n      token,\n      values\n        .map<CompletionItem>((value: GraphQLEnumValue) => ({\n          label: value.name,\n          detail: String(namedInputType),\n          documentation: value.description ?? undefined,\n          deprecated: Boolean(value.deprecationReason),\n          isDeprecated: Boolean(value.deprecationReason),\n          deprecationReason: value.deprecationReason,\n          kind: CompletionItemKind.EnumMember,\n          type: namedInputType,\n        }))\n        .concat(queryVariables),\n    );\n  } else if (namedInputType === GraphQLBoolean) {\n    return hintList(\n      token,\n      queryVariables.concat([\n        {\n          label: 'true',\n          detail: String(GraphQLBoolean),\n          documentation: 'Not false.',\n          kind: CompletionItemKind.Variable,\n          type: GraphQLBoolean,\n        },\n        {\n          label: 'false',\n          detail: String(GraphQLBoolean),\n          documentation: 'Not true.',\n          kind: CompletionItemKind.Variable,\n          type: GraphQLBoolean,\n        },\n      ]),\n    );\n  }\n\n  return queryVariables;\n}\n\nfunction getSuggestionsForImplements(\n  token: ContextToken,\n  tokenState: State,\n  schema: GraphQLSchema,\n  documentText: string,\n  typeInfo: AllTypeInfo,\n): Array<CompletionItem> {\n  // exit empty if we need an &\n  if (tokenState.needsSeperator) {\n    return [];\n  }\n  const typeMap = schema.getTypeMap();\n\n  const schemaInterfaces = objectValues(typeMap).filter(isInterfaceType);\n  const schemaInterfaceNames = schemaInterfaces.map(({ name }) => name);\n  const inlineInterfaces: Set<string> = new Set();\n  runOnlineParser(documentText, (_, state: State) => {\n    if (state.name) {\n      // gather inline interface definitions\n      if (\n        state.kind === RuleKinds.INTERFACE_DEF &&\n        !schemaInterfaceNames.includes(state.name)\n      ) {\n        inlineInterfaces.add(<string>state.name);\n      }\n      // gather the other interfaces the current type/interface definition implements\n      // so we can filter them out below\n      if (\n        state.kind === RuleKinds.NAMED_TYPE &&\n        state.prevState?.kind === RuleKinds.IMPLEMENTS\n      ) {\n        if (typeInfo.interfaceDef) {\n          const existingType = typeInfo.interfaceDef\n            ?.getInterfaces()\n            .find(({ name }) => name === state.name);\n          if (existingType) {\n            return;\n          }\n          const type = schema.getType(state.name);\n          const interfaceConfig = typeInfo.interfaceDef?.toConfig()!;\n          typeInfo.interfaceDef = new GraphQLInterfaceType({\n            ...interfaceConfig,\n            interfaces: [\n              ...interfaceConfig.interfaces,\n              (type as GraphQLInterfaceType) ||\n                new GraphQLInterfaceType({ name: state.name, fields: {} }),\n            ],\n          });\n        } else if (typeInfo.objectTypeDef) {\n          const existingType = typeInfo.objectTypeDef\n            ?.getInterfaces()\n            .find(({ name }) => name === state.name);\n          if (existingType) {\n            return;\n          }\n          const type = schema.getType(state.name);\n          const objectTypeConfig = typeInfo.objectTypeDef?.toConfig()!;\n          typeInfo.objectTypeDef = new GraphQLObjectType({\n            ...objectTypeConfig,\n            interfaces: [\n              ...objectTypeConfig.interfaces,\n              (type as GraphQLInterfaceType) ||\n                new GraphQLInterfaceType({ name: state.name, fields: {} }),\n            ],\n          });\n        }\n      }\n    }\n  });\n\n  const currentTypeToExtend = typeInfo.interfaceDef || typeInfo.objectTypeDef;\n\n  const siblingInterfaces = currentTypeToExtend?.getInterfaces() || [];\n  const siblingInterfaceNames = siblingInterfaces.map(({ name }) => name);\n\n  // TODO: we should be using schema.getPossibleTypes() here, but\n  const possibleInterfaces = schemaInterfaces\n    .concat(\n      [...inlineInterfaces].map(name => ({ name } as GraphQLInterfaceType)),\n    )\n    .filter(\n      ({ name }) =>\n        name !== currentTypeToExtend?.name &&\n        !siblingInterfaceNames.includes(name),\n    );\n\n  return hintList(\n    token,\n    possibleInterfaces.map(type => {\n      const result = {\n        label: type.name,\n        kind: CompletionItemKind.Interface,\n        type,\n      } as CompletionItem;\n      if (type?.description) {\n        result.documentation = type.description;\n      }\n      // TODO: should we report what an interface implements in CompletionItem.detail?\n      // result.detail = 'Interface'\n      // const interfaces = type.astNode?.interfaces;\n      // if (interfaces && interfaces.length > 0) {\n      //   result.detail += ` (implements ${interfaces\n      //     .map(i => i.name.value)\n      //     .join(' & ')})`;\n      // }\n\n      return result;\n    }),\n  );\n}\n\nfunction getSuggestionsForFragmentTypeConditions(\n  token: ContextToken,\n  typeInfo: AllTypeInfo,\n  schema: GraphQLSchema,\n  _kind: 'NamedType' | 'TypeCondition',\n): Array<CompletionItem> {\n  let possibleTypes: GraphQLType[];\n  if (typeInfo.parentType) {\n    if (isAbstractType(typeInfo.parentType)) {\n      const abstractType = assertAbstractType(typeInfo.parentType);\n      // Collect both the possible Object types as well as the interfaces\n      // they implement.\n      const possibleObjTypes = schema.getPossibleTypes(abstractType);\n      const possibleIfaceMap = Object.create(null);\n      possibleObjTypes.forEach(type => {\n        type.getInterfaces().forEach(iface => {\n          possibleIfaceMap[iface.name] = iface;\n        });\n      });\n      possibleTypes = possibleObjTypes.concat(objectValues(possibleIfaceMap));\n    } else {\n      // The parent type is a non-abstract Object type, so the only possible\n      // type that can be used is that same type.\n      possibleTypes = [typeInfo.parentType];\n    }\n  } else {\n    const typeMap = schema.getTypeMap();\n    possibleTypes = objectValues(typeMap).filter(isCompositeType);\n  }\n  return hintList(\n    token,\n    possibleTypes.map(type => {\n      const namedType = getNamedType(type);\n      return {\n        label: String(type),\n        documentation: namedType?.description || '',\n        kind: CompletionItemKind.Field,\n      };\n    }),\n  );\n}\n\nfunction getSuggestionsForFragmentSpread(\n  token: ContextToken,\n  typeInfo: AllTypeInfo,\n  schema: GraphQLSchema,\n  queryText: string,\n  fragmentDefs?: FragmentDefinitionNode[],\n): Array<CompletionItem> {\n  if (!queryText) {\n    return [];\n  }\n  const typeMap = schema.getTypeMap();\n  const defState = getDefinitionState(token.state);\n  const fragments = getFragmentDefinitions(queryText);\n\n  if (fragmentDefs && fragmentDefs.length > 0) {\n    fragments.push(...fragmentDefs);\n  }\n\n  // Filter down to only the fragments which may exist here.\n  const relevantFrags = fragments.filter(\n    frag =>\n      // Only include fragments with known types.\n      typeMap[frag.typeCondition.name.value] &&\n      // Only include fragments which are not cyclic.\n      !(\n        defState &&\n        defState.kind === RuleKinds.FRAGMENT_DEFINITION &&\n        defState.name === frag.name.value\n      ) &&\n      // Only include fragments which could possibly be spread here.\n      isCompositeType(typeInfo.parentType) &&\n      isCompositeType(typeMap[frag.typeCondition.name.value]) &&\n      doTypesOverlap(\n        schema,\n        typeInfo.parentType,\n        typeMap[frag.typeCondition.name.value] as GraphQLCompositeType,\n      ),\n  );\n\n  return hintList(\n    token,\n    relevantFrags.map(frag => ({\n      label: frag.name.value,\n      detail: String(typeMap[frag.typeCondition.name.value]),\n      documentation: `fragment ${frag.name.value} on ${frag.typeCondition.name.value}`,\n      kind: CompletionItemKind.Field,\n      type: typeMap[frag.typeCondition.name.value],\n    })),\n  );\n}\n\n// TODO: should be using getTypeInfo() for this if we can\nconst getParentDefinition = (state: State, kind: RuleKind) => {\n  if (state.prevState?.kind === kind) {\n    return state.prevState;\n  }\n  if (state.prevState?.prevState?.kind === kind) {\n    return state.prevState.prevState;\n  }\n  if (state.prevState?.prevState?.prevState?.kind === kind) {\n    return state.prevState.prevState.prevState;\n  }\n  if (state.prevState?.prevState?.prevState?.prevState?.kind === kind) {\n    return state.prevState.prevState.prevState.prevState;\n  }\n};\n\nexport function getVariableCompletions(\n  queryText: string,\n  schema: GraphQLSchema,\n  token: ContextToken,\n): CompletionItem[] {\n  let variableName: null | string = null;\n  let variableType: GraphQLInputObjectType | undefined | null;\n  const definitions: Record<string, any> = Object.create({});\n  runOnlineParser(queryText, (_, state: State) => {\n    // TODO: gather this as part of `AllTypeInfo`, as I don't think it's optimal to re-run the parser like this\n    if (state?.kind === RuleKinds.VARIABLE && state.name) {\n      variableName = state.name;\n    }\n    if (state?.kind === RuleKinds.NAMED_TYPE && variableName) {\n      const parentDefinition = getParentDefinition(state, RuleKinds.TYPE);\n      if (parentDefinition?.type) {\n        variableType = schema.getType(\n          parentDefinition?.type,\n        ) as GraphQLInputObjectType;\n      }\n    }\n\n    if (variableName && variableType) {\n      if (!definitions[variableName]) {\n        // append `$` if the `token.string` is not already `$`\n\n        definitions[variableName] = {\n          detail: variableType.toString(),\n          insertText: token.string === '$' ? variableName : '$' + variableName,\n          label: variableName, // keep label the same for `codemirror-graphql`\n          type: variableType,\n          kind: CompletionItemKind.Variable,\n        } as CompletionItem;\n\n        variableName = null;\n        variableType = null;\n      }\n    }\n  });\n\n  return objectValues(definitions);\n}\n\nexport function getFragmentDefinitions(\n  queryText: string,\n): Array<FragmentDefinitionNode> {\n  const fragmentDefs: FragmentDefinitionNode[] = [];\n  runOnlineParser(queryText, (_, state: State) => {\n    if (\n      state.kind === RuleKinds.FRAGMENT_DEFINITION &&\n      state.name &&\n      state.type\n    ) {\n      fragmentDefs.push({\n        kind: RuleKinds.FRAGMENT_DEFINITION,\n        name: {\n          kind: Kind.NAME,\n          value: state.name,\n        },\n\n        selectionSet: {\n          kind: RuleKinds.SELECTION_SET,\n          selections: [],\n        },\n\n        typeCondition: {\n          kind: RuleKinds.NAMED_TYPE,\n          name: {\n            kind: Kind.NAME,\n            value: state.type,\n          },\n        },\n      });\n    }\n  });\n\n  return fragmentDefs;\n}\n\nfunction getSuggestionsForVariableDefinition(\n  token: ContextToken,\n  schema: GraphQLSchema,\n  _kind: string,\n): Array<CompletionItem> {\n  const inputTypeMap = schema.getTypeMap();\n  const inputTypes = objectValues(inputTypeMap).filter(isInputType);\n  return hintList(\n    token,\n    // TODO: couldn't get Exclude<> working here\n    inputTypes.map((type: GraphQLNamedType) => ({\n      label: type.name,\n      documentation: type.description as string,\n      kind: CompletionItemKind.Variable,\n    })),\n  );\n}\n\nfunction getSuggestionsForDirective(\n  token: ContextToken,\n  state: State,\n  schema: GraphQLSchema,\n  _kind: string,\n): Array<CompletionItem> {\n  if (state.prevState?.kind) {\n    const directives = schema\n      .getDirectives()\n      .filter(directive => canUseDirective(state.prevState, directive));\n    return hintList(\n      token,\n      directives.map(directive => ({\n        label: directive.name,\n        documentation: directive.description || '',\n        kind: CompletionItemKind.Function,\n      })),\n    );\n  }\n  return [];\n}\n\nexport function getTokenAtPosition(\n  queryText: string,\n  cursor: IPosition,\n): ContextToken {\n  let styleAtCursor = null;\n  let stateAtCursor = null;\n  let stringAtCursor = null;\n  const token = runOnlineParser(queryText, (stream, state, style, index) => {\n    if (index === cursor.line) {\n      if (stream.getCurrentPosition() >= cursor.character) {\n        styleAtCursor = style;\n        stateAtCursor = { ...state };\n        stringAtCursor = stream.current();\n        return 'BREAK';\n      }\n    }\n  });\n\n  // Return the state/style of parsed token in case those at cursor aren't\n  // available.\n  return {\n    start: token.start,\n    end: token.end,\n    string: stringAtCursor || token.string,\n    state: stateAtCursor || token.state,\n    style: styleAtCursor || token.style,\n  };\n}\n\n/**\n * Provides an utility function to parse a given query text and construct a\n * `token` context object.\n * A token context provides useful information about the token/style that\n * CharacterStream currently possesses, as well as the end state and style\n * of the token.\n */\ntype callbackFnType = (\n  stream: CharacterStream,\n  state: State,\n  style: string,\n  index: number,\n) => void | 'BREAK';\n\nexport function runOnlineParser(\n  queryText: string,\n  callback: callbackFnType,\n): ContextToken {\n  const lines = queryText.split('\\n');\n  const parser = onlineParser();\n  let state = parser.startState();\n  let style = '';\n\n  let stream: CharacterStream = new CharacterStream('');\n\n  for (let i = 0; i < lines.length; i++) {\n    stream = new CharacterStream(lines[i]);\n    while (!stream.eol()) {\n      style = parser.token(stream, state);\n      const code = callback(stream, state, style, i);\n      if (code === 'BREAK') {\n        break;\n      }\n    }\n\n    // Above while loop won't run if there is an empty line.\n    // Run the callback one more time to catch this.\n    callback(stream, state, style, i);\n\n    if (!state.kind) {\n      state = parser.startState();\n    }\n  }\n\n  return {\n    start: stream.getStartOfToken(),\n    end: stream.getCurrentPosition(),\n    string: stream.current(),\n    state,\n    style,\n  };\n}\n\nexport function canUseDirective(\n  state: State['prevState'],\n  directive: GraphQLDirective,\n): boolean {\n  if (!state || !state.kind) {\n    return false;\n  }\n  const kind = state.kind;\n  const locations = directive.locations;\n  switch (kind) {\n    case RuleKinds.QUERY:\n      return locations.indexOf(DirectiveLocation.QUERY) !== -1;\n    case RuleKinds.MUTATION:\n      return locations.indexOf(DirectiveLocation.MUTATION) !== -1;\n    case RuleKinds.SUBSCRIPTION:\n      return locations.indexOf(DirectiveLocation.SUBSCRIPTION) !== -1;\n    case RuleKinds.FIELD:\n    case RuleKinds.ALIASED_FIELD:\n      return locations.indexOf(DirectiveLocation.FIELD) !== -1;\n    case RuleKinds.FRAGMENT_DEFINITION:\n      return locations.indexOf(DirectiveLocation.FRAGMENT_DEFINITION) !== -1;\n    case RuleKinds.FRAGMENT_SPREAD:\n      return locations.indexOf(DirectiveLocation.FRAGMENT_SPREAD) !== -1;\n    case RuleKinds.INLINE_FRAGMENT:\n      return locations.indexOf(DirectiveLocation.INLINE_FRAGMENT) !== -1;\n\n    // Schema Definitions\n    case RuleKinds.SCHEMA_DEF:\n      return locations.indexOf(DirectiveLocation.SCHEMA) !== -1;\n    case RuleKinds.SCALAR_DEF:\n      return locations.indexOf(DirectiveLocation.SCALAR) !== -1;\n    case RuleKinds.OBJECT_TYPE_DEF:\n      return locations.indexOf(DirectiveLocation.OBJECT) !== -1;\n    case RuleKinds.FIELD_DEF:\n      return locations.indexOf(DirectiveLocation.FIELD_DEFINITION) !== -1;\n    case RuleKinds.INTERFACE_DEF:\n      return locations.indexOf(DirectiveLocation.INTERFACE) !== -1;\n    case RuleKinds.UNION_DEF:\n      return locations.indexOf(DirectiveLocation.UNION) !== -1;\n    case RuleKinds.ENUM_DEF:\n      return locations.indexOf(DirectiveLocation.ENUM) !== -1;\n    case RuleKinds.ENUM_VALUE:\n      return locations.indexOf(DirectiveLocation.ENUM_VALUE) !== -1;\n    case RuleKinds.INPUT_DEF:\n      return locations.indexOf(DirectiveLocation.INPUT_OBJECT) !== -1;\n    case RuleKinds.INPUT_VALUE_DEF:\n      const prevStateKind = state.prevState?.kind;\n      switch (prevStateKind) {\n        case RuleKinds.ARGUMENTS_DEF:\n          return (\n            locations.indexOf(DirectiveLocation.ARGUMENT_DEFINITION) !== -1\n          );\n        case RuleKinds.INPUT_DEF:\n          return (\n            locations.indexOf(DirectiveLocation.INPUT_FIELD_DEFINITION) !== -1\n          );\n      }\n  }\n\n  return false;\n}\n\n// Utility for collecting rich type information given any token's state\n// from the graphql-mode parser.\nexport function getTypeInfo(\n  schema: GraphQLSchema,\n  tokenState: State,\n): AllTypeInfo {\n  let argDef: AllTypeInfo['argDef'];\n  let argDefs: AllTypeInfo['argDefs'];\n  let directiveDef: AllTypeInfo['directiveDef'];\n  let enumValue: AllTypeInfo['enumValue'];\n  let fieldDef: AllTypeInfo['fieldDef'];\n  let inputType: AllTypeInfo['inputType'];\n  let objectTypeDef: AllTypeInfo['objectTypeDef'];\n  let objectFieldDefs: AllTypeInfo['objectFieldDefs'];\n  let parentType: AllTypeInfo['parentType'];\n  let type: AllTypeInfo['type'];\n  let interfaceDef: AllTypeInfo['interfaceDef'];\n  forEachState(tokenState, state => {\n    switch (state.kind) {\n      case RuleKinds.QUERY:\n      case 'ShortQuery':\n        type = schema.getQueryType();\n        break;\n      case RuleKinds.MUTATION:\n        type = schema.getMutationType();\n        break;\n      case RuleKinds.SUBSCRIPTION:\n        type = schema.getSubscriptionType();\n        break;\n      case RuleKinds.INLINE_FRAGMENT:\n      case RuleKinds.FRAGMENT_DEFINITION:\n        if (state.type) {\n          type = schema.getType(state.type);\n        }\n        break;\n      case RuleKinds.FIELD:\n      case RuleKinds.ALIASED_FIELD: {\n        if (!type || !state.name) {\n          fieldDef = null;\n        } else {\n          fieldDef = parentType\n            ? getFieldDef(schema, parentType, state.name)\n            : null;\n          type = fieldDef ? fieldDef.type : null;\n        }\n        break;\n      }\n      case RuleKinds.SELECTION_SET:\n        parentType = getNamedType(type as GraphQLType);\n        break;\n      case RuleKinds.DIRECTIVE:\n        directiveDef = state.name ? schema.getDirective(state.name) : null;\n        break;\n\n      case RuleKinds.INTERFACE_DEF:\n        if (state.name) {\n          objectTypeDef = null;\n          interfaceDef = new GraphQLInterfaceType({\n            name: state.name,\n            interfaces: [],\n            fields: {},\n          });\n        }\n\n        break;\n\n      case RuleKinds.OBJECT_TYPE_DEF:\n        if (state.name) {\n          interfaceDef = null;\n          objectTypeDef = new GraphQLObjectType({\n            name: state.name,\n            interfaces: [],\n            fields: {},\n          });\n        }\n\n        break;\n      case RuleKinds.ARGUMENTS: {\n        if (!state.prevState) {\n          argDefs = null;\n        } else {\n          switch (state.prevState.kind) {\n            case RuleKinds.FIELD:\n              argDefs = fieldDef && (fieldDef.args as GraphQLArgument[]);\n              break;\n            case RuleKinds.DIRECTIVE:\n              argDefs =\n                directiveDef && (directiveDef.args as GraphQLArgument[]);\n              break;\n            // TODO: needs more tests\n            case RuleKinds.ALIASED_FIELD: {\n              const name = state.prevState?.name;\n              if (!name) {\n                argDefs = null;\n                break;\n              }\n              const field = parentType\n                ? getFieldDef(schema, parentType, name)\n                : null;\n              if (!field) {\n                argDefs = null;\n                break;\n              }\n              argDefs = field.args as GraphQLArgument[];\n              break;\n            }\n            default:\n              argDefs = null;\n              break;\n          }\n        }\n        break;\n      }\n      case RuleKinds.ARGUMENT:\n        if (argDefs) {\n          for (let i = 0; i < argDefs.length; i++) {\n            if (argDefs[i].name === state.name) {\n              argDef = argDefs[i];\n              break;\n            }\n          }\n        }\n        inputType = argDef?.type;\n        break;\n      // TODO: needs tests\n      case RuleKinds.ENUM_VALUE:\n        const enumType = getNamedType(inputType as GraphQLType);\n        enumValue =\n          enumType instanceof GraphQLEnumType\n            ? enumType\n                .getValues()\n                .find((val: GraphQLEnumValue) => val.value === state.name)\n            : null;\n        break;\n      // TODO: needs tests\n      case RuleKinds.LIST_VALUE:\n        const nullableType = getNullableType(inputType as GraphQLType);\n        inputType =\n          nullableType instanceof GraphQLList ? nullableType.ofType : null;\n        break;\n      case RuleKinds.OBJECT_VALUE:\n        const objectType = getNamedType(inputType as GraphQLType);\n        objectFieldDefs =\n          objectType instanceof GraphQLInputObjectType\n            ? objectType.getFields()\n            : null;\n        break;\n      // TODO: needs tests\n      case RuleKinds.OBJECT_FIELD:\n        const objectField =\n          state.name && objectFieldDefs ? objectFieldDefs[state.name] : null;\n        inputType = objectField?.type;\n\n        break;\n      case RuleKinds.NAMED_TYPE:\n        if (state.name) {\n          type = schema.getType(state.name);\n        }\n        // TODO: collect already extended interfaces of the type/interface we're extending\n        //  here to eliminate them from the completion list\n        // because \"type A extends B & C &\" should not show completion options for B & C still.\n\n        break;\n    }\n  });\n\n  return {\n    argDef,\n    argDefs,\n    directiveDef,\n    enumValue,\n    fieldDef,\n    inputType,\n    objectFieldDefs,\n    parentType,\n    type,\n    interfaceDef,\n    objectTypeDef,\n  };\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors.\n *\n *  This source code is licensed under the MIT license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\nimport { DocumentNode, FragmentDefinitionNode, parse, visit } from 'graphql';\nimport nullthrows from 'nullthrows';\n\nexport const getFragmentDependencies = (\n  operationString: string,\n  fragmentDefinitions?: Map<string, FragmentDefinitionNode> | null,\n): FragmentDefinitionNode[] => {\n  // If there isn't context for fragment references,\n  // return an empty array.\n  if (!fragmentDefinitions) {\n    return [];\n  }\n  // If the operation cannot be parsed, validations cannot happen yet.\n  // Return an empty array.\n  let parsedOperation;\n  try {\n    parsedOperation = parse(operationString);\n  } catch (error) {\n    return [];\n  }\n  return getFragmentDependenciesForAST(parsedOperation, fragmentDefinitions);\n};\n\nexport const getFragmentDependenciesForAST = (\n  parsedOperation: DocumentNode,\n  fragmentDefinitions: Map<string, FragmentDefinitionNode>,\n): FragmentDefinitionNode[] => {\n  if (!fragmentDefinitions) {\n    return [];\n  }\n\n  const existingFrags = new Map();\n  const referencedFragNames = new Set<string>();\n\n  visit(parsedOperation, {\n    FragmentDefinition(node) {\n      existingFrags.set(node.name.value, true);\n    },\n    FragmentSpread(node) {\n      if (!referencedFragNames.has(node.name.value)) {\n        referencedFragNames.add(node.name.value);\n      }\n    },\n  });\n\n  const asts = new Set<FragmentDefinitionNode>();\n  referencedFragNames.forEach(name => {\n    if (!existingFrags.has(name) && fragmentDefinitions.has(name)) {\n      asts.add(nullthrows(fragmentDefinitions.get(name)));\n    }\n  });\n\n  const referencedFragments: FragmentDefinitionNode[] = [];\n\n  asts.forEach(ast => {\n    visit(ast, {\n      FragmentSpread(node) {\n        if (\n          !referencedFragNames.has(node.name.value) &&\n          fragmentDefinitions.get(node.name.value)\n        ) {\n          asts.add(nullthrows(fragmentDefinitions.get(node.name.value)));\n          referencedFragNames.add(node.name.value);\n        }\n      },\n    });\n    if (!existingFrags.has(ast.name.value)) {\n      referencedFragments.push(ast);\n    }\n  });\n\n  return referencedFragments;\n};\n","/**\n *  Copyright (c) 2021 GraphQL Contributors.\n *\n *  This source code is licensed under the MIT license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  GraphQLInputField,\n  GraphQLInputType,\n  isEnumType,\n  isInputObjectType,\n  isListType,\n  isNonNullType,\n  isScalarType,\n} from 'graphql';\n\nimport type {\n  JSONSchema4Type,\n  JSONSchema6,\n  JSONSchema6Definition,\n  JSONSchema6TypeName,\n} from 'json-schema';\nimport type { VariableToType } from './collectVariables';\n\nexport type { JSONSchema6, JSONSchema6TypeName };\n\nexport type JsonSchemaOptions = {\n  /**\n   * use undocumented `monaco-json` `markdownDescription` field in place of json-schema spec `description` field.\n   */\n  useMarkdownDescription?: boolean;\n};\n\ntype PropertiedJSON6 = JSONSchema6 & {\n  properties: {\n    [k: string]: JSONSchema6;\n  };\n};\n\nexport type JSONSchemaOptions = {\n  /**\n   * whether to append a non-json schema valid 'markdownDescription` for `monaco-json`\n   */\n  useMarkdownDescription?: boolean;\n};\n\nexport const defaultJSONSchemaOptions = {\n  useMarkdownDescription: false,\n};\n\nexport type MonacoEditorJSONSchema = JSONSchema6 & {\n  markdownDescription?: string;\n};\n\nexport type CombinedSchema = JSONSchema6 | MonacoEditorJSONSchema;\n\ntype Definitions = { [k: string]: JSONSchema6Definition };\n\nexport type DefinitionResult = {\n  definition: JSONSchema6 | MonacoEditorJSONSchema;\n  required: boolean;\n  definitions?: Definitions;\n};\n\nfunction text(into: string[], newText: string) {\n  into.push(newText);\n}\n\nfunction renderType(into: string[], t: GraphQLInputType | GraphQLInputField) {\n  if (isNonNullType(t)) {\n    renderType(into, t.ofType);\n    text(into, '!');\n  } else if (isListType(t)) {\n    text(into, '[');\n    // @ts-ignore\n    renderType(into, t.ofType);\n    text(into, ']');\n  } else {\n    text(into, t.name);\n  }\n}\n\nfunction renderTypeToString(\n  t: GraphQLInputType | GraphQLInputField,\n  useMarkdown?: boolean,\n) {\n  const into: string[] = [];\n  if (useMarkdown) {\n    text(into, '```graphql\\n');\n  }\n  renderType(into, t);\n  if (useMarkdown) {\n    text(into, '\\n```');\n  }\n  return into.join('');\n}\n\nconst scalarTypesMap: { [key: string]: JSONSchema6TypeName } = {\n  Int: 'integer',\n  String: 'string',\n  Float: 'number',\n  ID: 'string',\n  Boolean: 'boolean',\n  // { \"type\": \"string\", \"format\": \"date\" } is not compatible with proposed DateTime GraphQL-Scalars.com spec\n  DateTime: 'string',\n};\n\n/**\n *\n * @param type {GraphQLInputType}\n * @returns {DefinitionResult}\n */\nfunction getJSONSchemaFromGraphQLType(\n  type: GraphQLInputType | GraphQLInputField,\n  options?: JSONSchemaOptions,\n): DefinitionResult {\n  let required = false;\n  let definition: CombinedSchema = Object.create(null);\n  const definitions: Definitions = Object.create(null);\n\n  // TODO: test that this works?\n  if ('defaultValue' in type && type.defaultValue !== undefined) {\n    definition.default = type.defaultValue as JSONSchema4Type | undefined;\n  }\n  if (isEnumType(type)) {\n    definition.type = 'string';\n    definition.enum = type.getValues().map(val => val.name);\n  }\n\n  if (isScalarType(type)) {\n    // I think this makes sense for custom scalars?\n    definition.type = scalarTypesMap[type.name] ?? 'any';\n  }\n  if (isListType(type)) {\n    definition.type = 'array';\n    const { definition: def, definitions: defs } = getJSONSchemaFromGraphQLType(\n      type.ofType,\n      options,\n    );\n    if (def.$ref) {\n      definition.items = { $ref: def.$ref };\n    } else {\n      definition.items = def;\n    }\n    if (defs) {\n      Object.keys(defs).forEach(defName => {\n        definitions[defName] = defs[defName];\n      });\n    }\n  }\n  if (isNonNullType(type)) {\n    required = true;\n    const { definition: def, definitions: defs } = getJSONSchemaFromGraphQLType(\n      type.ofType,\n      options,\n    );\n    definition = def;\n    if (defs) {\n      Object.keys(defs).forEach(defName => {\n        definitions[defName] = defs[defName];\n      });\n    }\n  }\n  if (isInputObjectType(type)) {\n    definition.$ref = `#/definitions/${type.name}`;\n    const fields = type.getFields();\n\n    const fieldDef: PropertiedJSON6 = {\n      type: 'object',\n      properties: {},\n      required: [],\n    };\n    if (type.description) {\n      fieldDef.description = type.description + `\\n` + renderTypeToString(type);\n      if (options?.useMarkdownDescription) {\n        // @ts-expect-error\n        fieldDef.markdownDescription =\n          type.description + `\\n` + renderTypeToString(type, true);\n      }\n    } else {\n      fieldDef.description = renderTypeToString(type);\n      if (options?.useMarkdownDescription) {\n        // @ts-expect-error\n        fieldDef.markdownDescription = renderTypeToString(type, true);\n      }\n    }\n\n    Object.keys(fields).forEach(fieldName => {\n      const field = fields[fieldName];\n      const {\n        required: fieldRequired,\n        definition: typeDefinition,\n        definitions: typeDefinitions,\n      } = getJSONSchemaFromGraphQLType(field.type, options);\n\n      const {\n        definition: fieldDefinition,\n        // definitions: fieldDefinitions,\n      } = getJSONSchemaFromGraphQLType(field, options);\n\n      fieldDef.properties[fieldName] = {\n        ...typeDefinition,\n        ...fieldDefinition,\n      } as JSONSchema6;\n\n      const renderedField = renderTypeToString(field.type);\n      fieldDef.properties[fieldName].description = field.description\n        ? field.description + '\\n' + renderedField\n        : renderedField;\n      if (options?.useMarkdownDescription) {\n        const renderedFieldMarkdown = renderTypeToString(field.type, true);\n        fieldDef.properties[\n          fieldName\n          // @ts-expect-error\n        ].markdownDescription = field.description\n          ? field.description + '\\n' + renderedFieldMarkdown\n          : renderedFieldMarkdown;\n      }\n\n      if (fieldRequired) {\n        fieldDef.required!.push(fieldName);\n      }\n      if (typeDefinitions) {\n        Object.keys(typeDefinitions).map(defName => {\n          definitions[defName] = typeDefinitions[defName];\n        });\n      }\n    });\n    definitions![type.name] = fieldDef;\n  }\n  // append descriptions\n  if (\n    'description' in type &&\n    !isScalarType(type) &&\n    type.description &&\n    !definition.description\n  ) {\n    definition.description = type.description + '\\n' + renderTypeToString(type);\n    if (options?.useMarkdownDescription) {\n      // @ts-expect-error\n      definition.markdownDescription =\n        type.description + '\\n' + renderTypeToString(type, true);\n    }\n  } else {\n    definition.description = renderTypeToString(type);\n    if (options?.useMarkdownDescription) {\n      // @ts-expect-error\n      definition.markdownDescription = renderTypeToString(type, true);\n    }\n  }\n\n  return { required, definition, definitions };\n}\n/**\n * Generates a JSONSchema6 valid document for operation(s) from a map of Map<string, GraphQLInputType>.\n *\n * It generates referenced Definitions for each type, so that no graphql types are repeated.\n *\n * Note: you must install `@types/json-schema` if you want a valid result type\n *\n * @param facts {OperationFacts} the result of getOperationFacts, or getOperationASTFacts\n * @returns {JSONSchema6}'\n *\n * @example\n * simple usage:\n *\n * ```ts\n * import { parse } from 'graphql'\n * import { collectVariables, getVariablesJSONSchema } from 'graphql-language-service'\n * const variablesToType = collectVariables(parse(query), schema)\n * const JSONSchema6Result = getVariablesJSONSchema(variablesToType, schema)\n * ```\n *\n * @example\n * advanced usage:\n * ```ts\n *\n * import { parse } from 'graphql'\n * import { collectVariables, getVariablesJSONSchema } from 'graphql-language-service'\n * const variablesToType = collectVariables(parse(query), schema)\n *\n * // you can append `markdownDescription` to JSON schema, which  monaco-json uses.\n * const JSONSchema6Result = getVariablesJSONSchema(variablesToType, schema, { useMarkdownDescription: true })\n *\n * // let's say we want to use it with an IDE extension that expects a JSON file\n * // the resultant object literal can be written to string\n * import fs from 'fs/promises'\n * await fs.writeFile('operation-schema.json', JSON.stringify(JSONSchema6Result, null, 2))\n * ```\n */\nexport function getVariablesJSONSchema(\n  variableToType: VariableToType,\n  options?: JSONSchemaOptions,\n): JSONSchema6 {\n  const jsonSchema: PropertiedJSON6 = {\n    $schema: 'https://json-schema.org/draft/2020-12/schema',\n    type: 'object',\n    properties: {},\n    required: [],\n  };\n\n  if (variableToType) {\n    // I would use a reduce here, but I wanted it to be readable.\n    Object.entries(variableToType).forEach(([variableName, type]) => {\n      const {\n        definition,\n        required,\n        definitions,\n      } = getJSONSchemaFromGraphQLType(type, options);\n      jsonSchema.properties[variableName] = definition;\n      if (required) {\n        jsonSchema.required?.push(variableName);\n      }\n      if (definitions) {\n        jsonSchema.definitions = { ...jsonSchema?.definitions, ...definitions };\n      }\n    });\n  }\n  return jsonSchema;\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { ASTNode } from 'graphql/language';\n\nimport { IPosition as TPosition } from '../types';\nimport { visit } from 'graphql';\n\nexport function getASTNodeAtPosition(\n  query: string,\n  ast: ASTNode,\n  point: TPosition,\n): ASTNode | undefined {\n  const offset = pointToOffset(query, point);\n  let nodeContainingPosition: ASTNode | undefined;\n  visit(ast, {\n    enter(node) {\n      if (\n        node.kind !== 'Name' && // We're usually interested in their parents\n        node.loc &&\n        node.loc.start <= offset &&\n        offset <= node.loc.end\n      ) {\n        nodeContainingPosition = node;\n      } else {\n        return false;\n      }\n    },\n    leave(node) {\n      if (node.loc && node.loc.start <= offset && offset <= node.loc.end) {\n        return false;\n      }\n    },\n  });\n\n  return nodeContainingPosition;\n}\n\nexport function pointToOffset(text: string, point: TPosition): number {\n  const linesUntilPosition = text.split('\\n').slice(0, point.line);\n  return (\n    point.character +\n    linesUntilPosition\n      .map(\n        line => line.length + 1, // count EOL\n      )\n      .reduce((a, b) => a + b, 0)\n  );\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\nimport { Location } from 'graphql/language';\nimport { IRange, IPosition } from '../types';\n\nexport class Range implements IRange {\n  start: IPosition;\n  end: IPosition;\n  constructor(start: IPosition, end: IPosition) {\n    this.start = start;\n    this.end = end;\n  }\n\n  setStart(line: number, character: number) {\n    this.start = new Position(line, character);\n  }\n\n  setEnd(line: number, character: number) {\n    this.end = new Position(line, character);\n  }\n\n  containsPosition = (position: IPosition): boolean => {\n    if (this.start.line === position.line) {\n      return this.start.character <= position.character;\n    } else if (this.end.line === position.line) {\n      return this.end.character >= position.character;\n    } else {\n      return this.start.line <= position.line && this.end.line >= position.line;\n    }\n  };\n}\n\nexport class Position implements IPosition {\n  line: number;\n  character: number;\n  constructor(line: number, character: number) {\n    this.line = line;\n    this.character = character;\n  }\n\n  setLine(line: number) {\n    this.line = line;\n  }\n\n  setCharacter(character: number) {\n    this.character = character;\n  }\n\n  lessThanOrEqualTo = (position: IPosition): boolean =>\n    this.line < position.line ||\n    (this.line === position.line && this.character <= position.character);\n}\n\nexport function offsetToPosition(text: string, loc: number): Position {\n  const EOL = '\\n';\n  const buf = text.slice(0, loc);\n  const lines = buf.split(EOL).length - 1;\n  const lastLineIndex = buf.lastIndexOf(EOL);\n  return new Position(lines, loc - lastLineIndex - 1);\n}\n\nexport function locToRange(text: string, loc: Location): Range {\n  const start = offsetToPosition(text, loc.start);\n  const end = offsetToPosition(text, loc.end);\n  return new Range(start, end);\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\nimport {\n  ValidationRule,\n  DocumentNode,\n  specifiedRules,\n  validate,\n  GraphQLError,\n  GraphQLSchema,\n  NoUnusedFragmentsRule,\n  KnownFragmentNamesRule,\n  Kind,\n  ExecutableDefinitionsRule,\n  // specifiedSDLRules:\n  LoneSchemaDefinitionRule,\n  UniqueOperationTypesRule,\n  UniqueTypeNamesRule,\n  UniqueEnumValueNamesRule,\n  UniqueFieldDefinitionNamesRule,\n  UniqueDirectiveNamesRule,\n  KnownTypeNamesRule,\n  KnownDirectivesRule,\n  UniqueDirectivesPerLocationRule,\n  PossibleTypeExtensionsRule,\n  // KnownArgumentNamesOnDirectivesRule,\n  UniqueArgumentNamesRule,\n  UniqueInputFieldNamesRule,\n  // ProvidedRequiredArgumentsOnDirectivesRule,\n} from 'graphql';\n\nconst specifiedSDLRules = [\n  LoneSchemaDefinitionRule,\n  UniqueOperationTypesRule,\n  UniqueTypeNamesRule,\n  UniqueEnumValueNamesRule,\n  UniqueFieldDefinitionNamesRule,\n  UniqueDirectiveNamesRule,\n  KnownTypeNamesRule,\n  KnownDirectivesRule,\n  UniqueDirectivesPerLocationRule,\n  PossibleTypeExtensionsRule,\n  // KnownArgumentNamesOnDirectivesRule,\n  UniqueArgumentNamesRule,\n  UniqueInputFieldNamesRule,\n  // ProvidedRequiredArgumentsOnDirectivesRule,\n];\n\n/**\n * Validate a GraphQL Document optionally with custom validation rules.\n */\nexport function validateWithCustomRules(\n  schema: GraphQLSchema,\n  ast: DocumentNode,\n  customRules?: Array<ValidationRule> | null,\n  isRelayCompatMode?: boolean,\n  isSchemaDocument?: boolean,\n): Array<GraphQLError> {\n  const rules = specifiedRules.filter(rule => {\n    // Because every fragment is considered for determining model subsets that may\n    // be used anywhere in the codebase they're all technically \"used\" by clients\n    // of graphql-data. So we remove this rule from the validators.\n    if (rule === NoUnusedFragmentsRule || rule === ExecutableDefinitionsRule) {\n      return false;\n    }\n    if (isRelayCompatMode && rule === KnownFragmentNamesRule) {\n      return false;\n    }\n    return true;\n  });\n\n  if (customRules) {\n    Array.prototype.push.apply(rules, customRules);\n  }\n  if (isSchemaDocument) {\n    Array.prototype.push.apply(rules, specifiedSDLRules);\n  }\n  const errors = validate(schema, ast, rules);\n  return errors.filter(error => {\n    if (error.message.indexOf('Unknown directive') !== -1 && error.nodes) {\n      const node = error.nodes[0];\n      if (node && node.kind === Kind.DIRECTIVE) {\n        const name = node.name.value;\n        if (name === 'arguments' || name === 'argumentDefinitions') {\n          return false;\n        }\n      }\n    }\n    return true;\n  });\n}\n","import {\n  typeFromAST,\n  GraphQLSchema,\n  DocumentNode,\n  NamedTypeNode,\n  GraphQLInputType,\n  GraphQLFloat,\n  Kind,\n} from 'graphql';\n\nexport type VariableToType = {\n  [variable: string]: GraphQLInputType;\n};\n\n/**\n * Generates a map of GraphQLInputTypes for\n * all the variables in an AST document of operations\n *\n * @param schema\n * @param documentAST\n * @returns {VariableToType}\n */\nexport function collectVariables(\n  schema: GraphQLSchema,\n  documentAST: DocumentNode,\n): VariableToType {\n  const variableToType: VariableToType = Object.create(null);\n  // it would be more ideal to use visitWithTypeInfo here but it's very simple\n  documentAST.definitions.forEach(definition => {\n    if (definition.kind === 'OperationDefinition') {\n      const variableDefinitions = definition.variableDefinitions;\n      if (variableDefinitions) {\n        variableDefinitions.forEach(({ variable, type }) => {\n          const inputType = typeFromAST(\n            schema,\n            type as NamedTypeNode,\n          ) as GraphQLInputType;\n          if (inputType) {\n            variableToType[variable.name.value] = inputType;\n          } else if (type.kind === Kind.NAMED_TYPE) {\n            // in the experimental stream defer branch we are using, it seems typeFromAST() doesn't recognize Floats?\n            if (type.name.value === 'Float') {\n              variableToType[variable.name.value] = GraphQLFloat;\n            }\n          }\n        });\n      }\n    }\n  });\n  return variableToType;\n}\n","/* eslint-disable no-redeclare */\n/**\n *  Copyright (c) 2021 GraphQL Contributors.\n *\n *  This source code is licensed under the MIT license found in the\n *  LICENSE file in the root directory of this source tree.\n */\nimport { parse, visit } from 'graphql';\nimport { collectVariables } from './collectVariables';\n\nimport type { VariableToType } from './collectVariables';\nimport type {\n  GraphQLSchema,\n  DocumentNode,\n  OperationDefinitionNode,\n} from 'graphql';\n\nexport type OperationASTFacts = {\n  variableToType?: VariableToType;\n  operations: OperationDefinitionNode[];\n};\n\n/**\n * extract all operation nodes, and if schema is present, variable definitions, in a map\n *\n * @param documentAST {DocumentNode} a graphql-js compatible AST node\n * @param schema {GraphQLSchema} optional schema\n * @returns {OperationASTFacts}\n * @example\n *\n * ```ts\n *  const { variablesToType, operations } = getOperationASTFacts(\n *    parse('documentString'),\n *  );\n *  operations.forEach(op => {\n *    console.log(op.name, op.operation, op.loc);\n *  });\n *   Object.entries(variablesToType).forEach(([variableName, type]) => {\n *    console.log(variableName, type);\n *  });\n * ```\n */\n\nexport function getOperationASTFacts(\n  documentAST: DocumentNode,\n  schema?: GraphQLSchema | null,\n): OperationASTFacts {\n  const variableToType = schema\n    ? collectVariables(schema, documentAST)\n    : undefined;\n\n  // Collect operations by their names.\n  const operations: OperationDefinitionNode[] = [];\n\n  visit(documentAST, {\n    OperationDefinition(node) {\n      operations.push(node);\n    },\n  });\n\n  return { variableToType, operations };\n}\n\nexport type OperationFacts = {\n  documentAST: DocumentNode;\n} & OperationASTFacts;\n\nexport type QueryFacts = OperationFacts;\n\n/**\n * Provided previous \"queryFacts\", a GraphQL schema, and a query document\n * string, return a set of facts about that query useful for GraphiQL features.\n *\n * If the query cannot be parsed, returns undefined.\n * @param schema {GraphQLSchema} (optional)\n * @param documentString {string} the document you want to parse for operations (optional)\n *\n * @returns {OperationFacts | undefined}\n */\nexport default function getOperationFacts(\n  schema?: GraphQLSchema | null,\n  documentString?: string | null,\n): OperationFacts | undefined {\n  if (!documentString) {\n    return;\n  }\n\n  try {\n    const documentAST = parse(documentString);\n    return {\n      ...getOperationASTFacts(documentAST, schema),\n      documentAST,\n    };\n  } catch {\n    return;\n  }\n}\n\n/**\n * for backwards compatibility\n */\nexport const getQueryFacts = getOperationFacts;\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\nimport {\n  ASTNode,\n  FragmentSpreadNode,\n  FragmentDefinitionNode,\n  OperationDefinitionNode,\n  NamedTypeNode,\n  TypeDefinitionNode,\n  Location,\n  ObjectTypeDefinitionNode,\n  FieldDefinitionNode,\n} from 'graphql';\n\nimport { Definition, FragmentInfo, Uri, ObjectTypeInfo } from '../types';\n\nimport { locToRange, offsetToPosition, Range, Position } from '../utils';\n\nexport type DefinitionQueryResult = {\n  queryRange: Range[];\n  definitions: Definition[];\n};\n\nexport const LANGUAGE = 'GraphQL';\n\nfunction assert(value: any, message: string) {\n  if (!value) {\n    throw new Error(message);\n  }\n}\n\nfunction getRange(text: string, node: ASTNode): Range {\n  const location = node.loc as Location;\n  assert(location, 'Expected ASTNode to have a location.');\n  return locToRange(text, location) as Range;\n}\n\nfunction getPosition(text: string, node: ASTNode): Position {\n  const location = node.loc as Location;\n  assert(location, 'Expected ASTNode to have a location.');\n  return offsetToPosition(text, location.start);\n}\n\nexport async function getDefinitionQueryResultForNamedType(\n  text: string,\n  node: NamedTypeNode,\n  dependencies: Array<ObjectTypeInfo>,\n): Promise<DefinitionQueryResult> {\n  const name = node.name.value;\n  const defNodes = dependencies.filter(\n    ({ definition }) => definition.name && definition.name.value === name,\n  );\n\n  if (defNodes.length === 0) {\n    throw Error(`Definition not found for GraphQL type ${name}`);\n  }\n  const definitions: Array<Definition> = defNodes.map(\n    ({ filePath, content, definition }) =>\n      getDefinitionForNodeDefinition(filePath || '', content, definition),\n  );\n\n  return {\n    definitions,\n    queryRange: definitions.map(_ => getRange(text, node)),\n  };\n}\n\nexport async function getDefinitionQueryResultForField(\n  fieldName: string,\n  typeName: string,\n  dependencies: Array<ObjectTypeInfo>,\n): Promise<DefinitionQueryResult> {\n  const defNodes = dependencies.filter(\n    ({ definition }) => definition.name && definition.name.value === typeName,\n  );\n\n  if (defNodes.length === 0) {\n    throw Error(`Definition not found for GraphQL type ${typeName}`);\n  }\n\n  const definitions: Array<Definition> = [];\n\n  defNodes.forEach(({ filePath, content, definition }) => {\n    const fieldDefinition = (definition as ObjectTypeDefinitionNode).fields?.find(\n      item => item.name.value === fieldName,\n    );\n\n    if (fieldDefinition == null) {\n      return null;\n    }\n\n    definitions.push(\n      getDefinitionForFieldDefinition(filePath || '', content, fieldDefinition),\n    );\n  });\n\n  return {\n    definitions,\n    // TODO: seems like it's not using\n    queryRange: [],\n  };\n}\n\nexport async function getDefinitionQueryResultForFragmentSpread(\n  text: string,\n  fragment: FragmentSpreadNode,\n  dependencies: Array<FragmentInfo>,\n): Promise<DefinitionQueryResult> {\n  const name = fragment.name.value;\n  const defNodes = dependencies.filter(\n    ({ definition }) => definition.name.value === name,\n  );\n\n  if (defNodes.length === 0) {\n    throw Error(`Definition not found for GraphQL fragment ${name}`);\n  }\n  const definitions: Array<Definition> = defNodes.map(\n    ({ filePath, content, definition }) =>\n      getDefinitionForFragmentDefinition(filePath || '', content, definition),\n  );\n\n  return {\n    definitions,\n    queryRange: definitions.map(_ => getRange(text, fragment)),\n  };\n}\n\nexport function getDefinitionQueryResultForDefinitionNode(\n  path: Uri,\n  text: string,\n  definition: FragmentDefinitionNode | OperationDefinitionNode,\n): DefinitionQueryResult {\n  return {\n    definitions: [getDefinitionForFragmentDefinition(path, text, definition)],\n    queryRange: definition.name ? [getRange(text, definition.name)] : [],\n  };\n}\n\nfunction getDefinitionForFragmentDefinition(\n  path: Uri,\n  text: string,\n  definition: FragmentDefinitionNode | OperationDefinitionNode,\n): Definition {\n  const name = definition.name;\n  if (!name) {\n    throw Error('Expected ASTNode to have a Name.');\n  }\n\n  return {\n    path,\n    position: getPosition(text, definition),\n    range: getRange(text, definition),\n    // TODO: doesnt seem to pick up the inference\n    // from assert() exception logic\n    name: name.value || '',\n    language: LANGUAGE,\n    // This is a file inside the project root, good enough for now\n    projectRoot: path,\n  };\n}\n\nfunction getDefinitionForNodeDefinition(\n  path: Uri,\n  text: string,\n  definition: TypeDefinitionNode,\n): Definition {\n  const name = definition.name;\n  assert(name, 'Expected ASTNode to have a Name.');\n  return {\n    path,\n    position: getPosition(text, definition),\n    range: getRange(text, definition),\n    name: name.value || '',\n    language: LANGUAGE,\n    // This is a file inside the project root, good enough for now\n    projectRoot: path,\n  };\n}\n\nfunction getDefinitionForFieldDefinition(\n  path: Uri,\n  text: string,\n  definition: FieldDefinitionNode,\n): Definition {\n  const name = definition.name;\n  assert(name, 'Expected ASTNode to have a Name.');\n  return {\n    path,\n    position: getPosition(text, definition),\n    range: getRange(text, definition),\n    name: name.value || '',\n    language: LANGUAGE,\n    // This is a file inside the project root, good enough for now\n    projectRoot: path,\n  };\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\nimport {\n  ASTNode,\n  DocumentNode,\n  FragmentDefinitionNode,\n  GraphQLError,\n  GraphQLSchema,\n  Location,\n  SourceLocation,\n  ValidationRule,\n  print,\n  validate,\n  NoDeprecatedCustomRule,\n} from 'graphql';\n\nimport { parse } from 'graphql';\n\nimport { CharacterStream, onlineParser } from '../parser';\n\nimport { Range, validateWithCustomRules, Position } from '../utils';\n\nimport { DiagnosticSeverity, Diagnostic } from 'vscode-languageserver-types';\n\nimport { IRange } from '../types';\n\n// this doesn't work without the 'as', kinda goofy\n\nexport const SEVERITY = {\n  Error: 'Error',\n  Warning: 'Warning',\n  Information: 'Information',\n  Hint: 'Hint',\n} as const;\n\nexport type Severity = typeof SEVERITY;\n\nexport type SeverityEnum = keyof Severity;\n\nexport const DIAGNOSTIC_SEVERITY = {\n  [SEVERITY.Error]: 1 as DiagnosticSeverity,\n  [SEVERITY.Warning]: 2 as DiagnosticSeverity,\n  [SEVERITY.Information]: 3 as DiagnosticSeverity,\n  [SEVERITY.Hint]: 4 as DiagnosticSeverity,\n};\n\nconst invariant = (condition: any, message: string) => {\n  if (!condition) {\n    throw new Error(message);\n  }\n};\n\nexport function getDiagnostics(\n  query: string,\n  schema: GraphQLSchema | null | undefined = null,\n  customRules?: Array<ValidationRule>,\n  isRelayCompatMode?: boolean,\n  externalFragments?: FragmentDefinitionNode[] | string,\n): Array<Diagnostic> {\n  let ast = null;\n  if (externalFragments) {\n    if (typeof externalFragments === 'string') {\n      query += '\\n\\n' + externalFragments;\n    } else {\n      query +=\n        '\\n\\n' +\n        externalFragments.reduce((agg, node) => {\n          agg += print(node) + '\\n\\n';\n          return agg;\n        }, '');\n    }\n  }\n\n  try {\n    ast = parse(query);\n  } catch (error) {\n    if (error instanceof GraphQLError) {\n      const range = getRange(\n        error.locations?.[0] ?? { line: 0, column: 0 },\n        query,\n      );\n\n      return [\n        {\n          severity: DIAGNOSTIC_SEVERITY.Error as DiagnosticSeverity,\n          message: error.message,\n          source: 'GraphQL: Syntax',\n          range,\n        },\n      ];\n    }\n    throw error;\n  }\n\n  return validateQuery(ast, schema, customRules, isRelayCompatMode);\n}\n\nexport function validateQuery(\n  ast: DocumentNode,\n  schema: GraphQLSchema | null | undefined = null,\n  customRules?: Array<ValidationRule> | null,\n  isRelayCompatMode?: boolean,\n): Array<Diagnostic> {\n  // We cannot validate the query unless a schema is provided.\n  if (!schema) {\n    return [];\n  }\n\n  const validationErrorAnnotations = mapCat(\n    validateWithCustomRules(schema, ast, customRules, isRelayCompatMode),\n    error => annotations(error, DIAGNOSTIC_SEVERITY.Error, 'Validation'),\n  );\n\n  // TODO: detect if > graphql@15.2.0, and use the new rule for this.\n  const deprecationWarningAnnotations = mapCat(\n    validate(schema, ast, [NoDeprecatedCustomRule]),\n    error => annotations(error, DIAGNOSTIC_SEVERITY.Warning, 'Deprecation'),\n  );\n  return validationErrorAnnotations.concat(deprecationWarningAnnotations);\n}\n\n// General utility for map-cating (aka flat-mapping).\nfunction mapCat<T>(\n  array: ReadonlyArray<T>,\n  mapper: (item: T) => Array<any>,\n): Array<any> {\n  return Array.prototype.concat.apply([], array.map(mapper));\n}\n\nfunction annotations(\n  error: GraphQLError,\n  severity: DiagnosticSeverity,\n  type: string,\n): Diagnostic[] {\n  if (!error.nodes) {\n    return [];\n  }\n  const highlightedNodes: Diagnostic[] = [];\n  error.nodes.forEach(node => {\n    const highlightNode =\n      node.kind !== 'Variable' && 'name' in node && node.name !== undefined\n        ? node.name\n        : 'variable' in node && node.variable !== undefined\n        ? node.variable\n        : node;\n    if (highlightNode) {\n      invariant(\n        error.locations,\n        'GraphQL validation error requires locations.',\n      );\n\n      // @ts-ignore\n      // https://github.com/microsoft/TypeScript/pull/32695\n      const loc = error.locations[0];\n      const highlightLoc = getLocation(highlightNode);\n      const end = loc.column + (highlightLoc.end - highlightLoc.start);\n      highlightedNodes.push({\n        source: `GraphQL: ${type}`,\n        message: error.message,\n        severity,\n        range: new Range(\n          new Position(loc.line - 1, loc.column - 1),\n          new Position(loc.line - 1, end),\n        ),\n      });\n    }\n  });\n  return highlightedNodes;\n}\n\nexport function getRange(location: SourceLocation, queryText: string): IRange {\n  const parser = onlineParser();\n  const state = parser.startState();\n  const lines = queryText.split('\\n');\n\n  invariant(\n    lines.length >= location.line,\n    'Query text must have more lines than where the error happened',\n  );\n\n  let stream = null;\n\n  for (let i = 0; i < location.line; i++) {\n    stream = new CharacterStream(lines[i]);\n    while (!stream.eol()) {\n      const style = parser.token(stream, state);\n      if (style === 'invalidchar') {\n        break;\n      }\n    }\n  }\n\n  invariant(stream, 'Expected Parser stream to be available.');\n  const line = location.line - 1;\n  // @ts-ignore\n  // https://github.com/microsoft/TypeScript/pull/32695\n  const start = stream.getStartOfToken();\n  // @ts-ignore\n  // https://github.com/microsoft/TypeScript/pull/32695\n  const end = stream.getCurrentPosition();\n  return new Range(new Position(line, start), new Position(line, end));\n}\n\n/**\n * Get location info from a node in a type-safe way.\n *\n * The only way a node could not have a location is if we initialized the parser\n * (and therefore the lexer) with the `noLocation` option, but we always\n * call `parse` without options above.\n */\nfunction getLocation(node: any): Location {\n  const typeCastedNode = node as ASTNode;\n  const location = typeCastedNode.loc;\n  invariant(location, 'Expected ASTNode to have a location.');\n  // @ts-ignore\n  // https://github.com/microsoft/TypeScript/pull/32695\n  return location;\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\nimport {\n  Outline,\n  TextToken,\n  TokenKind,\n  IPosition,\n  OutlineTree,\n} from '../types';\n\nimport {\n  Kind,\n  parse,\n  visit,\n  FieldNode,\n  InlineFragmentNode,\n  DocumentNode,\n  FragmentSpreadNode,\n  OperationDefinitionNode,\n  NameNode,\n  FragmentDefinitionNode,\n  SelectionSetNode,\n  SelectionNode,\n  InterfaceTypeDefinitionNode,\n  ObjectTypeDefinitionNode,\n  EnumTypeDefinitionNode,\n  DefinitionNode,\n  InputValueDefinitionNode,\n  FieldDefinitionNode,\n  EnumValueDefinitionNode,\n} from 'graphql';\n\nimport { offsetToPosition } from '../utils';\n\nconst { INLINE_FRAGMENT } = Kind;\n\nconst OUTLINEABLE_KINDS = {\n  Field: true,\n  OperationDefinition: true,\n  Document: true,\n  SelectionSet: true,\n  Name: true,\n  FragmentDefinition: true,\n  FragmentSpread: true,\n  InlineFragment: true,\n  ObjectTypeDefinition: true,\n  InputObjectTypeDefinition: true,\n  InterfaceTypeDefinition: true,\n  EnumTypeDefinition: true,\n  EnumValueDefinition: true,\n  InputValueDefinition: true,\n  FieldDefinition: true,\n};\n\nexport type OutlineableKinds = keyof typeof OUTLINEABLE_KINDS;\n\n// type OutlineableNodes = FieldNode | OperationDefinitionNode | DocumentNode | SelectionSetNode | NameNode | FragmentDefinitionNode | FragmentSpreadNode |InlineFragmentNode | ObjectTypeDefinitionNode | InterfaceTypeDefinitionNode\n\ntype OutlineTreeResult =\n  | {\n      representativeName: string;\n      startPosition: IPosition;\n      endPosition: IPosition;\n      children: SelectionSetNode[] | [];\n      tokenizedText: TextToken[];\n    }\n  | string\n  | readonly DefinitionNode[]\n  | readonly SelectionNode[]\n  | FieldNode[]\n  | SelectionSetNode;\n\ntype OutlineTreeConverterType = Partial<\n  {\n    [key in OutlineableKinds]: (node: any) => OutlineTreeResult;\n  }\n>;\n\nexport function getOutline(documentText: string): Outline | null {\n  let ast;\n  try {\n    ast = parse(documentText);\n  } catch (error) {\n    return null;\n  }\n\n  const visitorFns = outlineTreeConverter(documentText);\n  const outlineTrees = (visit(ast, {\n    leave(node) {\n      if (visitorFns !== undefined && node.kind in visitorFns) {\n        // @ts-ignore\n        return visitorFns[node.kind](node);\n      }\n      return null;\n    },\n  }) as unknown) as OutlineTree[];\n\n  return { outlineTrees };\n}\n\nfunction outlineTreeConverter(docText: string): OutlineTreeConverterType {\n  // TODO: couldn't find a type that would work for all cases here,\n  // however the inference is not broken by this at least\n  const meta = (node: any) => {\n    return {\n      representativeName: node.name,\n      startPosition: offsetToPosition(docText, node.loc.start),\n      endPosition: offsetToPosition(docText, node.loc.end),\n      kind: node.kind,\n      children:\n        node.selectionSet || node.fields || node.values || node.arguments || [],\n    };\n  };\n\n  return {\n    Field: (node: FieldNode) => {\n      const tokenizedText = node.alias\n        ? [buildToken('plain', node.alias), buildToken('plain', ': ')]\n        : [];\n      tokenizedText.push(buildToken('plain', node.name));\n      return { tokenizedText, ...meta(node) };\n    },\n    OperationDefinition: (node: OperationDefinitionNode) => ({\n      tokenizedText: [\n        buildToken('keyword', node.operation),\n        buildToken('whitespace', ' '),\n        buildToken('class-name', (node.name as unknown) as string),\n      ],\n      ...meta(node),\n    }),\n\n    Document: (node: DocumentNode) => node.definitions,\n    SelectionSet: (node: SelectionSetNode) =>\n      concatMap<SelectionNode>(node.selections, (child: SelectionNode) => {\n        return child.kind === INLINE_FRAGMENT ? child.selectionSet : child;\n      }),\n    Name: (node: NameNode) => node.value,\n    FragmentDefinition: (node: FragmentDefinitionNode) => ({\n      tokenizedText: [\n        buildToken('keyword', 'fragment'),\n        buildToken('whitespace', ' '),\n        buildToken('class-name', node.name),\n      ],\n      ...meta(node),\n    }),\n    InterfaceTypeDefinition: (node: InterfaceTypeDefinitionNode) => ({\n      tokenizedText: [\n        buildToken('keyword', 'interface'),\n        buildToken('whitespace', ' '),\n        buildToken('class-name', node.name),\n      ],\n      ...meta(node),\n    }),\n    EnumTypeDefinition: (node: EnumTypeDefinitionNode) => ({\n      tokenizedText: [\n        buildToken('keyword', 'enum'),\n        buildToken('whitespace', ' '),\n        buildToken('class-name', node.name),\n      ],\n      ...meta(node),\n    }),\n    EnumValueDefinition: (node: EnumValueDefinitionNode) => ({\n      tokenizedText: [buildToken('plain', node.name)],\n      ...meta(node),\n    }),\n    ObjectTypeDefinition: (node: ObjectTypeDefinitionNode) => ({\n      tokenizedText: [\n        buildToken('keyword', 'type'),\n        buildToken('whitespace', ' '),\n        buildToken('class-name', node.name),\n      ],\n      ...meta(node),\n    }),\n    InputObjectTypeDefinition: (node: ObjectTypeDefinitionNode) => ({\n      tokenizedText: [\n        buildToken('keyword', 'input'),\n        buildToken('whitespace', ' '),\n        buildToken('class-name', node.name),\n      ],\n      ...meta(node),\n    }),\n    FragmentSpread: (node: FragmentSpreadNode) => ({\n      tokenizedText: [\n        buildToken('plain', '...'),\n        buildToken('class-name', node.name),\n      ],\n      ...meta(node),\n    }),\n    InputValueDefinition: (node: InputValueDefinitionNode) => {\n      return {\n        tokenizedText: [buildToken('plain', node.name)],\n        ...meta(node),\n      };\n    },\n    FieldDefinition: (node: FieldDefinitionNode) => {\n      return {\n        tokenizedText: [buildToken('plain', node.name)],\n        ...meta(node),\n      };\n    },\n\n    InlineFragment: (node: InlineFragmentNode) => node.selectionSet,\n  };\n}\n\nfunction buildToken(kind: TokenKind, value: string | NameNode): TextToken {\n  return { kind, value };\n}\n\nfunction concatMap<V>(arr: Readonly<V[]>, fn: Function): Readonly<V[]> {\n  const res = [];\n  for (let i = 0; i < arr.length; i++) {\n    const x = fn(arr[i], i);\n    if (Array.isArray(x)) {\n      res.push(...x);\n    } else {\n      res.push(x);\n    }\n  }\n  return res;\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\n\n/**\n * Ported from codemirror-graphql\n * https://github.com/graphql/blob/main/packages/codemirror-graphql/src/info.js\n */\n\nimport {\n  GraphQLSchema,\n  GraphQLNonNull,\n  GraphQLList,\n  GraphQLType,\n  GraphQLField,\n  GraphQLFieldConfig,\n} from 'graphql';\nimport { ContextToken } from '../parser';\nimport { AllTypeInfo, IPosition } from '../types';\n\nimport { Hover } from 'vscode-languageserver-types';\nimport { getTokenAtPosition, getTypeInfo } from './getAutocompleteSuggestions';\n\nexport type HoverConfig = { useMarkdown?: boolean };\n\nexport function getHoverInformation(\n  schema: GraphQLSchema,\n  queryText: string,\n  cursor: IPosition,\n  contextToken?: ContextToken,\n  config?: HoverConfig,\n): Hover['contents'] {\n  const token = contextToken || getTokenAtPosition(queryText, cursor);\n\n  if (!schema || !token || !token.state) {\n    return '';\n  }\n\n  const state = token.state;\n  const kind = state.kind;\n  const step = state.step;\n  const typeInfo = getTypeInfo(schema, token.state);\n  const options = { ...config, schema };\n\n  // Given a Schema and a Token, produce the contents of an info tooltip.\n  // To do this, create a div element that we will render \"into\" and then pass\n  // it to various rendering functions.\n  if (\n    (kind === 'Field' && step === 0 && typeInfo.fieldDef) ||\n    (kind === 'AliasedField' && step === 2 && typeInfo.fieldDef)\n  ) {\n    const into: string[] = [];\n    renderMdCodeStart(into, options);\n    renderField(into, typeInfo, options);\n    renderMdCodeEnd(into, options);\n    renderDescription(into, options, typeInfo.fieldDef);\n    return into.join('').trim();\n  } else if (kind === 'Directive' && step === 1 && typeInfo.directiveDef) {\n    const into: string[] = [];\n    renderMdCodeStart(into, options);\n    renderDirective(into, typeInfo, options);\n    renderMdCodeEnd(into, options);\n    renderDescription(into, options, typeInfo.directiveDef);\n    return into.join('').trim();\n  } else if (kind === 'Argument' && step === 0 && typeInfo.argDef) {\n    const into: string[] = [];\n    renderMdCodeStart(into, options);\n    renderArg(into, typeInfo, options);\n    renderMdCodeEnd(into, options);\n    renderDescription(into, options, typeInfo.argDef);\n    return into.join('').trim();\n  } else if (\n    kind === 'EnumValue' &&\n    typeInfo.enumValue &&\n    'description' in typeInfo.enumValue\n  ) {\n    const into: string[] = [];\n    renderMdCodeStart(into, options);\n    renderEnumValue(into, typeInfo, options);\n    renderMdCodeEnd(into, options);\n    renderDescription(into, options, typeInfo.enumValue);\n    return into.join('').trim();\n  } else if (\n    kind === 'NamedType' &&\n    typeInfo.type &&\n    'description' in typeInfo.type\n  ) {\n    const into: string[] = [];\n    renderMdCodeStart(into, options);\n    renderType(into, typeInfo, options, typeInfo.type);\n    renderMdCodeEnd(into, options);\n    renderDescription(into, options, typeInfo.type);\n    return into.join('').trim();\n  }\n  return '';\n}\n\nfunction renderMdCodeStart(into: string[], options: any) {\n  if (options.useMarkdown) {\n    text(into, '```graphql\\n');\n  }\n}\nfunction renderMdCodeEnd(into: string[], options: any) {\n  if (options.useMarkdown) {\n    text(into, '\\n```');\n  }\n}\n\nfunction renderField(into: string[], typeInfo: AllTypeInfo, options: any) {\n  renderQualifiedField(into, typeInfo, options);\n  renderTypeAnnotation(into, typeInfo, options, typeInfo.type as GraphQLType);\n}\n\nfunction renderQualifiedField(\n  into: string[],\n  typeInfo: AllTypeInfo,\n  options: any,\n) {\n  if (!typeInfo.fieldDef) {\n    return;\n  }\n  const fieldName = typeInfo.fieldDef.name as string;\n  if (fieldName.slice(0, 2) !== '__') {\n    renderType(into, typeInfo, options, typeInfo.parentType as GraphQLType);\n    text(into, '.');\n  }\n  text(into, fieldName);\n}\n\nfunction renderDirective(into: string[], typeInfo: AllTypeInfo, _options: any) {\n  if (!typeInfo.directiveDef) {\n    return;\n  }\n  const name = '@' + typeInfo.directiveDef.name;\n  text(into, name);\n}\n\nfunction renderArg(into: string[], typeInfo: AllTypeInfo, options: any) {\n  if (typeInfo.directiveDef) {\n    renderDirective(into, typeInfo, options);\n  } else if (typeInfo.fieldDef) {\n    renderQualifiedField(into, typeInfo, options);\n  }\n\n  if (!typeInfo.argDef) {\n    return;\n  }\n\n  const name = typeInfo.argDef.name;\n  text(into, '(');\n  text(into, name);\n  renderTypeAnnotation(\n    into,\n    typeInfo,\n    options,\n    typeInfo.inputType as GraphQLType,\n  );\n  text(into, ')');\n}\n\nfunction renderTypeAnnotation(\n  into: string[],\n  typeInfo: AllTypeInfo,\n  options: any,\n  t: GraphQLType,\n) {\n  text(into, ': ');\n  renderType(into, typeInfo, options, t);\n}\n\nfunction renderEnumValue(into: string[], typeInfo: AllTypeInfo, options: any) {\n  if (!typeInfo.enumValue) {\n    return;\n  }\n  const name = typeInfo.enumValue.name;\n  renderType(into, typeInfo, options, typeInfo.inputType as GraphQLType);\n  text(into, '.');\n  text(into, name);\n}\n\nfunction renderType(\n  into: string[],\n  typeInfo: AllTypeInfo,\n  options: any,\n  t: GraphQLType,\n) {\n  if (!t) {\n    return;\n  }\n\n  if (t instanceof GraphQLNonNull) {\n    renderType(into, typeInfo, options, t.ofType);\n    text(into, '!');\n  } else if (t instanceof GraphQLList) {\n    text(into, '[');\n    renderType(into, typeInfo, options, t.ofType);\n    text(into, ']');\n  } else {\n    text(into, t.name);\n  }\n}\n\nfunction renderDescription(\n  into: string[],\n  options: any,\n  // TODO: Figure out the right type for this one\n  def: any,\n) {\n  if (!def) {\n    return;\n  }\n  const description =\n    typeof def.description === 'string' ? def.description : null;\n  if (description) {\n    text(into, '\\n\\n');\n    text(into, description);\n  }\n  renderDeprecation(into, options, def);\n}\n\nfunction renderDeprecation(\n  into: string[],\n  _options: any,\n  def: GraphQLField<any, any> | GraphQLFieldConfig<any, any>,\n) {\n  if (!def) {\n    return;\n  }\n\n  const reason = def.deprecationReason ? def.deprecationReason : null;\n  if (!reason) {\n    return;\n  }\n  text(into, '\\n\\n');\n  text(into, 'Deprecated: ');\n  text(into, reason);\n}\n\nfunction text(into: string[], content: string) {\n  into.push(content);\n}\n","/**\n *  Copyright (c) 2021 GraphQL Contributors\n *  All rights reserved.\n *\n *  This source code is licensed under the license found in the\n *  LICENSE file in the root directory of this source tree.\n *\n */\nimport type {\n  Diagnostic as DiagnosticType,\n  CompletionItem as CompletionItemType,\n} from 'vscode-languageserver-types';\n\nimport type { ASTNode, GraphQLSchema } from 'graphql';\n\nimport type {\n  DocumentNode,\n  FragmentDefinitionNode,\n  NamedTypeNode,\n  TypeDefinitionNode,\n  NameNode,\n} from 'graphql/language';\n\nimport type {\n  GraphQLArgument,\n  GraphQLEnumValue,\n  GraphQLField,\n  GraphQLInputFieldMap,\n  GraphQLInterfaceType,\n  GraphQLObjectType,\n  GraphQLType,\n} from 'graphql/type/definition';\nimport type { GraphQLDirective } from 'graphql/type/directives';\n\nexport type Maybe<T> = T | null | undefined;\n\nimport type {\n  GraphQLConfig,\n  GraphQLProjectConfig,\n  GraphQLExtensionDeclaration,\n} from 'graphql-config';\n\nexport type {\n  GraphQLConfig,\n  GraphQLProjectConfig,\n  GraphQLExtensionDeclaration,\n};\n\nexport interface GraphQLCache {\n  getGraphQLConfig: () => GraphQLConfig;\n\n  getProjectForFile: (uri: string) => GraphQLProjectConfig | void;\n\n  getObjectTypeDependencies: (\n    query: string,\n    fragmentDefinitions: Map<string, ObjectTypeInfo>,\n  ) => Promise<ObjectTypeInfo[]>;\n\n  getObjectTypeDependenciesForAST: (\n    parsedQuery: ASTNode,\n    fragmentDefinitions: Map<string, ObjectTypeInfo>,\n  ) => Promise<ObjectTypeInfo[]>;\n\n  getObjectTypeDefinitions: (\n    graphQLConfig: GraphQLProjectConfig,\n  ) => Promise<Map<string, ObjectTypeInfo>>;\n\n  updateObjectTypeDefinition: (\n    rootDir: Uri,\n    filePath: Uri,\n    contents: CachedContent[],\n  ) => Promise<void>;\n\n  updateObjectTypeDefinitionCache: (\n    rootDir: Uri,\n    filePath: Uri,\n    exists: boolean,\n  ) => Promise<void>;\n\n  getFragmentDependencies: (\n    query: string,\n    fragmentDefinitions: Maybe<Map<string, FragmentInfo>>,\n  ) => Promise<FragmentInfo[]>;\n\n  getFragmentDependenciesForAST: (\n    parsedQuery: ASTNode,\n    fragmentDefinitions: Map<string, FragmentInfo>,\n  ) => Promise<FragmentInfo[]>;\n\n  getFragmentDefinitions: (\n    graphQLConfig: GraphQLProjectConfig,\n  ) => Promise<Map<string, FragmentInfo>>;\n\n  updateFragmentDefinition: (\n    rootDir: Uri,\n    filePath: Uri,\n    contents: CachedContent[],\n  ) => Promise<void>;\n\n  updateFragmentDefinitionCache: (\n    rootDir: Uri,\n    filePath: Uri,\n    exists: boolean,\n  ) => Promise<void>;\n\n  getSchema: (\n    appName?: string,\n    queryHasExtensions?: boolean,\n  ) => Promise<GraphQLSchema | null>;\n}\n\n// online-parser related\nexport interface IPosition {\n  line: number;\n  character: number;\n  setLine(line: number): void;\n  setCharacter(character: number): void;\n  lessThanOrEqualTo(position: IPosition): boolean;\n}\n\nexport interface IRange {\n  start: IPosition;\n  end: IPosition;\n  setEnd(line: number, character: number): void;\n  setStart(line: number, character: number): void;\n  containsPosition(position: IPosition): boolean;\n}\nexport type CachedContent = {\n  query: string;\n  range: IRange | null;\n};\n\n// GraphQL Language Service related types\nexport type Uri = string;\n\nexport type GraphQLFileMetadata = {\n  filePath: Uri;\n  size: number;\n  mtime: number;\n};\n\nexport type GraphQLFileInfo = {\n  filePath: Uri;\n  content: string;\n  asts: DocumentNode[];\n  queries: CachedContent[];\n  size: number;\n  mtime: number;\n};\n\nexport type AllTypeInfo = {\n  type: Maybe<GraphQLType>;\n  parentType: Maybe<GraphQLType>;\n  inputType: Maybe<GraphQLType>;\n  directiveDef: Maybe<GraphQLDirective>;\n  fieldDef: Maybe<GraphQLField<any, any>>;\n  enumValue: Maybe<GraphQLEnumValue>;\n  argDef: Maybe<GraphQLArgument>;\n  argDefs: Maybe<GraphQLArgument[]>;\n  objectFieldDefs: Maybe<GraphQLInputFieldMap>;\n  interfaceDef: Maybe<GraphQLInterfaceType>;\n  objectTypeDef: Maybe<GraphQLObjectType>;\n};\n\nexport type FragmentInfo = {\n  filePath?: Uri;\n  content: string;\n  definition: FragmentDefinitionNode;\n};\n\nexport type NamedTypeInfo = {\n  filePath?: Uri;\n  content: string;\n  definition: NamedTypeNode;\n};\n\nexport type ObjectTypeInfo = {\n  filePath?: Uri;\n  content: string;\n  definition: TypeDefinitionNode;\n};\n\nexport type Diagnostic = DiagnosticType;\n\nexport type CompletionItemBase = {\n  label: string;\n  isDeprecated?: boolean;\n};\n\nexport type CompletionItem = CompletionItemType & {\n  isDeprecated?: boolean;\n  documentation?: string | null;\n  deprecationReason?: string | null;\n  type?: GraphQLType;\n  command?: CompletionItemType['command'];\n};\n// Below are basically a copy-paste from Nuclide rpc types for definitions.\n\n// Definitions/hyperlink\nexport type Definition = {\n  path: Uri;\n  position: IPosition;\n  range?: IRange;\n  id?: string;\n  name?: string;\n  language?: string;\n  projectRoot?: Uri;\n};\n\n// Outline view\nexport type TokenKind =\n  | 'keyword'\n  | 'class-name'\n  | 'constructor'\n  | 'method'\n  | 'param'\n  | 'string'\n  | 'whitespace'\n  | 'plain'\n  | 'type';\nexport type TextToken = {\n  kind: TokenKind;\n  value: string | NameNode;\n};\n\nexport type TokenizedText = TextToken[];\nexport type OutlineTree = {\n  // Must be one or the other. If both are present, tokenizedText is preferred.\n  plainText?: string;\n  tokenizedText?: TokenizedText;\n  representativeName?: string;\n  kind: string;\n  startPosition: IPosition;\n  endPosition?: IPosition;\n  children: OutlineTree[];\n};\n\nexport type Outline = {\n  outlineTrees: OutlineTree[];\n};\n\nexport interface FileEvent {\n  uri: string;\n  type: FileChangeType;\n}\n\nexport const FileChangeTypeKind = {\n  Created: 1,\n  Changed: 2,\n  Deleted: 3,\n};\n\n// eslint-disable-next-line no-redeclare\nexport type FileChangeTypeKind = {\n  Created: 1;\n  Changed: 2;\n  Deleted: 3;\n};\n\nexport type FileChangeTypeKeys = keyof FileChangeTypeKind;\n\nexport type FileChangeType = FileChangeTypeKind[FileChangeTypeKeys];\n\n// copied from `microsoft/vscode-languageserver-types` to prevent import issues\n\n/**\n * The kind of a completion entry.\n */\nexport namespace CompletionItemKind {\n  export const Text = 1 as const;\n  export const Method = 2 as const;\n  export const Function = 3 as const;\n  export const Constructor = 4 as const;\n  export const Field = 5 as const;\n  export const Variable = 6 as const;\n  export const Class = 7 as const;\n  export const Interface = 8 as const;\n  export const Module = 9 as const;\n  export const Property = 10 as const;\n  export const Unit = 11 as const;\n  export const Value = 12 as const;\n  export const Enum = 13 as const;\n  export const Keyword = 14 as const;\n  export const Snippet = 15 as const;\n  export const Color = 16 as const;\n  export const File = 17 as const;\n  export const Reference = 18 as const;\n  export const Folder = 19 as const;\n  export const EnumMember = 20 as const;\n  export const Constant = 21 as const;\n  export const Struct = 22 as const;\n  export const Event = 23 as const;\n  export const Operator = 24 as const;\n  export const TypeParameter = 25 as const;\n}\n\n// eslint-disable-next-line no-redeclare\nexport type CompletionItemKind =\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24\n  | 25;\n","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;\n","var baseEach = require('./_baseEach');\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;\n","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n","'use strict';\n\nfunction nullthrows(x, message) {\n  if (x != null) {\n    return x;\n  }\n  var error = new Error(message !== undefined ? message : 'Got unexpected ' + x);\n  error.framesToPop = 1; // Skip nullthrows's own stack frame.\n  throw error;\n}\n\nmodule.exports = nullthrows;\nmodule.exports.default = nullthrows;\n\nObject.defineProperty(module.exports, '__esModule', {value: true});\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar sizerStyle = {\n\tposition: 'absolute',\n\ttop: 0,\n\tleft: 0,\n\tvisibility: 'hidden',\n\theight: 0,\n\toverflow: 'scroll',\n\twhiteSpace: 'pre'\n};\n\nvar INPUT_PROPS_BLACKLIST = ['extraWidth', 'injectStyles', 'inputClassName', 'inputRef', 'inputStyle', 'minWidth', 'onAutosize', 'placeholderIsMinWidth'];\n\nvar cleanInputProps = function cleanInputProps(inputProps) {\n\tINPUT_PROPS_BLACKLIST.forEach(function (field) {\n\t\treturn delete inputProps[field];\n\t});\n\treturn inputProps;\n};\n\nvar copyStyles = function copyStyles(styles, node) {\n\tnode.style.fontSize = styles.fontSize;\n\tnode.style.fontFamily = styles.fontFamily;\n\tnode.style.fontWeight = styles.fontWeight;\n\tnode.style.fontStyle = styles.fontStyle;\n\tnode.style.letterSpacing = styles.letterSpacing;\n\tnode.style.textTransform = styles.textTransform;\n};\n\nvar isIE = typeof window !== 'undefined' && window.navigator ? /MSIE |Trident\\/|Edge\\//.test(window.navigator.userAgent) : false;\n\nvar generateId = function generateId() {\n\t// we only need an auto-generated ID for stylesheet injection, which is only\n\t// used for IE. so if the browser is not IE, this should return undefined.\n\treturn isIE ? '_' + Math.random().toString(36).substr(2, 12) : undefined;\n};\n\nvar AutosizeInput = function (_Component) {\n\t_inherits(AutosizeInput, _Component);\n\n\tfunction AutosizeInput(props) {\n\t\t_classCallCheck(this, AutosizeInput);\n\n\t\tvar _this = _possibleConstructorReturn(this, (AutosizeInput.__proto__ || Object.getPrototypeOf(AutosizeInput)).call(this, props));\n\n\t\t_this.inputRef = function (el) {\n\t\t\t_this.input = el;\n\t\t\tif (typeof _this.props.inputRef === 'function') {\n\t\t\t\t_this.props.inputRef(el);\n\t\t\t}\n\t\t};\n\n\t\t_this.placeHolderSizerRef = function (el) {\n\t\t\t_this.placeHolderSizer = el;\n\t\t};\n\n\t\t_this.sizerRef = function (el) {\n\t\t\t_this.sizer = el;\n\t\t};\n\n\t\t_this.state = {\n\t\t\tinputWidth: props.minWidth,\n\t\t\tinputId: props.id || generateId()\n\t\t};\n\t\treturn _this;\n\t}\n\n\t_createClass(AutosizeInput, [{\n\t\tkey: 'componentDidMount',\n\t\tvalue: function componentDidMount() {\n\t\t\tthis.mounted = true;\n\t\t\tthis.copyInputStyles();\n\t\t\tthis.updateInputWidth();\n\t\t}\n\t}, {\n\t\tkey: 'UNSAFE_componentWillReceiveProps',\n\t\tvalue: function UNSAFE_componentWillReceiveProps(nextProps) {\n\t\t\tvar id = nextProps.id;\n\n\t\t\tif (id !== this.props.id) {\n\t\t\t\tthis.setState({ inputId: id || generateId() });\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'componentDidUpdate',\n\t\tvalue: function componentDidUpdate(prevProps, prevState) {\n\t\t\tif (prevState.inputWidth !== this.state.inputWidth) {\n\t\t\t\tif (typeof this.props.onAutosize === 'function') {\n\t\t\t\t\tthis.props.onAutosize(this.state.inputWidth);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.updateInputWidth();\n\t\t}\n\t}, {\n\t\tkey: 'componentWillUnmount',\n\t\tvalue: function componentWillUnmount() {\n\t\t\tthis.mounted = false;\n\t\t}\n\t}, {\n\t\tkey: 'copyInputStyles',\n\t\tvalue: function copyInputStyles() {\n\t\t\tif (!this.mounted || !window.getComputedStyle) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar inputStyles = this.input && window.getComputedStyle(this.input);\n\t\t\tif (!inputStyles) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcopyStyles(inputStyles, this.sizer);\n\t\t\tif (this.placeHolderSizer) {\n\t\t\t\tcopyStyles(inputStyles, this.placeHolderSizer);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'updateInputWidth',\n\t\tvalue: function updateInputWidth() {\n\t\t\tif (!this.mounted || !this.sizer || typeof this.sizer.scrollWidth === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar newInputWidth = void 0;\n\t\t\tif (this.props.placeholder && (!this.props.value || this.props.value && this.props.placeholderIsMinWidth)) {\n\t\t\t\tnewInputWidth = Math.max(this.sizer.scrollWidth, this.placeHolderSizer.scrollWidth) + 2;\n\t\t\t} else {\n\t\t\t\tnewInputWidth = this.sizer.scrollWidth + 2;\n\t\t\t}\n\t\t\t// add extraWidth to the detected width. for number types, this defaults to 16 to allow for the stepper UI\n\t\t\tvar extraWidth = this.props.type === 'number' && this.props.extraWidth === undefined ? 16 : parseInt(this.props.extraWidth) || 0;\n\t\t\tnewInputWidth += extraWidth;\n\t\t\tif (newInputWidth < this.props.minWidth) {\n\t\t\t\tnewInputWidth = this.props.minWidth;\n\t\t\t}\n\t\t\tif (newInputWidth !== this.state.inputWidth) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tinputWidth: newInputWidth\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'getInput',\n\t\tvalue: function getInput() {\n\t\t\treturn this.input;\n\t\t}\n\t}, {\n\t\tkey: 'focus',\n\t\tvalue: function focus() {\n\t\t\tthis.input.focus();\n\t\t}\n\t}, {\n\t\tkey: 'blur',\n\t\tvalue: function blur() {\n\t\t\tthis.input.blur();\n\t\t}\n\t}, {\n\t\tkey: 'select',\n\t\tvalue: function select() {\n\t\t\tthis.input.select();\n\t\t}\n\t}, {\n\t\tkey: 'renderStyles',\n\t\tvalue: function renderStyles() {\n\t\t\t// this method injects styles to hide IE's clear indicator, which messes\n\t\t\t// with input size detection. the stylesheet is only injected when the\n\t\t\t// browser is IE, and can also be disabled by the `injectStyles` prop.\n\t\t\tvar injectStyles = this.props.injectStyles;\n\n\t\t\treturn isIE && injectStyles ? _react2.default.createElement('style', { dangerouslySetInnerHTML: {\n\t\t\t\t\t__html: 'input#' + this.state.inputId + '::-ms-clear {display: none;}'\n\t\t\t\t} }) : null;\n\t\t}\n\t}, {\n\t\tkey: 'render',\n\t\tvalue: function render() {\n\t\t\tvar sizerValue = [this.props.defaultValue, this.props.value, ''].reduce(function (previousValue, currentValue) {\n\t\t\t\tif (previousValue !== null && previousValue !== undefined) {\n\t\t\t\t\treturn previousValue;\n\t\t\t\t}\n\t\t\t\treturn currentValue;\n\t\t\t});\n\n\t\t\tvar wrapperStyle = _extends({}, this.props.style);\n\t\t\tif (!wrapperStyle.display) wrapperStyle.display = 'inline-block';\n\n\t\t\tvar inputStyle = _extends({\n\t\t\t\tboxSizing: 'content-box',\n\t\t\t\twidth: this.state.inputWidth + 'px'\n\t\t\t}, this.props.inputStyle);\n\n\t\t\tvar inputProps = _objectWithoutProperties(this.props, []);\n\n\t\t\tcleanInputProps(inputProps);\n\t\t\tinputProps.className = this.props.inputClassName;\n\t\t\tinputProps.id = this.state.inputId;\n\t\t\tinputProps.style = inputStyle;\n\n\t\t\treturn _react2.default.createElement(\n\t\t\t\t'div',\n\t\t\t\t{ className: this.props.className, style: wrapperStyle },\n\t\t\t\tthis.renderStyles(),\n\t\t\t\t_react2.default.createElement('input', _extends({}, inputProps, { ref: this.inputRef })),\n\t\t\t\t_react2.default.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ ref: this.sizerRef, style: sizerStyle },\n\t\t\t\t\tsizerValue\n\t\t\t\t),\n\t\t\t\tthis.props.placeholder ? _react2.default.createElement(\n\t\t\t\t\t'div',\n\t\t\t\t\t{ ref: this.placeHolderSizerRef, style: sizerStyle },\n\t\t\t\t\tthis.props.placeholder\n\t\t\t\t) : null\n\t\t\t);\n\t\t}\n\t}]);\n\n\treturn AutosizeInput;\n}(_react.Component);\n\nAutosizeInput.propTypes = {\n\tclassName: _propTypes2.default.string, // className for the outer element\n\tdefaultValue: _propTypes2.default.any, // default field value\n\textraWidth: _propTypes2.default.oneOfType([// additional width for input element\n\t_propTypes2.default.number, _propTypes2.default.string]),\n\tid: _propTypes2.default.string, // id to use for the input, can be set for consistent snapshots\n\tinjectStyles: _propTypes2.default.bool, // inject the custom stylesheet to hide clear UI, defaults to true\n\tinputClassName: _propTypes2.default.string, // className for the input element\n\tinputRef: _propTypes2.default.func, // ref callback for the input element\n\tinputStyle: _propTypes2.default.object, // css styles for the input element\n\tminWidth: _propTypes2.default.oneOfType([// minimum width for input element\n\t_propTypes2.default.number, _propTypes2.default.string]),\n\tonAutosize: _propTypes2.default.func, // onAutosize handler: function(newWidth) {}\n\tonChange: _propTypes2.default.func, // onChange handler: function(event) {}\n\tplaceholder: _propTypes2.default.string, // placeholder text\n\tplaceholderIsMinWidth: _propTypes2.default.bool, // don't collapse size to less than the placeholder\n\tstyle: _propTypes2.default.object, // css styles for the outer element\n\tvalue: _propTypes2.default.any // field value\n};\nAutosizeInput.defaultProps = {\n\tminWidth: 1,\n\tinjectStyles: true\n};\n\nexports.default = AutosizeInput;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { createClassNames } from '../core/utils';\nvar cx = createClassNames('Hits');\n\nvar DefaultHitComponent = function DefaultHitComponent(props) {\n  return React.createElement(\"div\", {\n    style: {\n      borderBottom: '1px solid #bbb',\n      paddingBottom: '5px',\n      marginBottom: '5px',\n      wordBreak: 'break-all'\n    }\n  }, JSON.stringify(props).slice(0, 100), \"...\");\n};\n\nvar Hits = function Hits(_ref) {\n  var hits = _ref.hits,\n      _ref$className = _ref.className,\n      className = _ref$className === void 0 ? '' : _ref$className,\n      _ref$hitComponent = _ref.hitComponent,\n      HitComponent = _ref$hitComponent === void 0 ? DefaultHitComponent : _ref$hitComponent;\n  return React.createElement(\"div\", {\n    className: classNames(cx(''), className)\n  }, React.createElement(\"ul\", {\n    className: cx('list')\n  }, hits.map(function (hit) {\n    return React.createElement(\"li\", {\n      className: cx('item'),\n      key: hit.objectID\n    }, React.createElement(HitComponent, {\n      hit: hit\n    }));\n  })));\n};\n\nvar HitPropTypes = PropTypes.shape({\n  objectID: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n});\nHits.propTypes = {\n  hits: PropTypes.arrayOf(HitPropTypes.isRequired).isRequired,\n  className: PropTypes.string,\n  hitComponent: PropTypes.func\n};\nexport default Hits;","import { connectHits } from 'react-instantsearch-core';\nimport Hits from '../components/Hits';\n/**\n * Displays a list of hits.\n *\n * To configure the number of hits being shown, use the [HitsPerPage widget](widgets/HitsPerPage.html),\n * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or the [Configure widget](widgets/Configure.html).\n *\n * @name Hits\n * @kind widget\n * @propType {Component} [hitComponent] - Component used for rendering each hit from\n *   the results. If it is not provided the rendering defaults to displaying the\n *   hit in its JSON form. The component will be called with a `hit` prop.\n * @themeKey ais-Hits - the root div of the widget\n * @themeKey ais-Hits-list - the list of results\n * @themeKey ais-Hits-item - the hit list item\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Hits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <Hits />\n *   </InstantSearch>\n * );\n */\n\nexport default connectHits(Hits);","import createConnector from '../core/createConnector';\n/**\n * connectPoweredBy connector provides the logic to build a widget that\n * will display a link to algolia.\n * @name connectPoweredBy\n * @kind connector\n * @providedPropType {string} url - the url to redirect to algolia\n */\n\nexport default createConnector({\n  displayName: 'AlgoliaPoweredBy',\n  getProvidedProps: function getProvidedProps() {\n    var hostname = typeof window === 'undefined' ? '' : window.location.hostname;\n    var url = 'https://www.algolia.com/?' + 'utm_source=react-instantsearch&' + 'utm_medium=website&' + \"utm_content=\".concat(hostname, \"&\") + 'utm_campaign=poweredby';\n    return {\n      url: url\n    };\n  }\n});","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { translatable } from 'react-instantsearch-core';\nimport { createClassNames } from '../core/utils';\nvar cx = createClassNames('PoweredBy');\n/* eslint-disable max-len */\n\nvar AlgoliaLogo = function AlgoliaLogo() {\n  return React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    baseProfile: \"basic\",\n    viewBox: \"0 0 1366 362\",\n    width: \"100\",\n    height: \"27\",\n    className: cx('logo')\n  }, React.createElement(\"linearGradient\", {\n    id: \"g\",\n    x1: \"428.258\",\n    x2: \"434.145\",\n    y1: \"404.15\",\n    y2: \"409.85\",\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"matrix(94.045 0 0 -94.072 -40381.527 38479.52)\"\n  }, React.createElement(\"stop\", {\n    offset: \"0\",\n    stopColor: \"#00AEFF\"\n  }), React.createElement(\"stop\", {\n    offset: \"1\",\n    stopColor: \"#3369E7\"\n  })), React.createElement(\"path\", {\n    d: \"M61.8 15.4h242.8c23.9 0 43.4 19.4 43.4 43.4v242.9c0 23.9-19.4 43.4-43.4 43.4H61.8c-23.9 0-43.4-19.4-43.4-43.4v-243c0-23.9 19.4-43.3 43.4-43.3z\",\n    fill: \"url(#g)\"\n  }), React.createElement(\"path\", {\n    d: \"M187 98.7c-51.4 0-93.1 41.7-93.1 93.2S135.6 285 187 285s93.1-41.7 93.1-93.2-41.6-93.1-93.1-93.1zm0 158.8c-36.2 0-65.6-29.4-65.6-65.6s29.4-65.6 65.6-65.6 65.6 29.4 65.6 65.6-29.3 65.6-65.6 65.6zm0-117.8v48.9c0 1.4 1.5 2.4 2.8 1.7l43.4-22.5c1-.5 1.3-1.7.8-2.7-9-15.8-25.7-26.6-45-27.3-1 0-2 .8-2 1.9zm-60.8-35.9l-5.7-5.7c-5.6-5.6-14.6-5.6-20.2 0l-6.8 6.8c-5.6 5.6-5.6 14.6 0 20.2l5.6 5.6c.9.9 2.2.7 3-.2 3.3-4.5 6.9-8.8 10.9-12.8 4.1-4.1 8.3-7.7 12.9-11 1-.6 1.1-2 .3-2.9zM217.5 89V77.7c0-7.9-6.4-14.3-14.3-14.3h-33.3c-7.9 0-14.3 6.4-14.3 14.3v11.6c0 1.3 1.2 2.2 2.5 1.9 9.3-2.7 19.1-4.1 29-4.1 9.5 0 18.9 1.3 28 3.8 1.2.3 2.4-.6 2.4-1.9z\",\n    fill: \"#FFFFFF\"\n  }), React.createElement(\"path\", {\n    d: \"M842.5 267.6c0 26.7-6.8 46.2-20.5 58.6-13.7 12.4-34.6 18.6-62.8 18.6-10.3 0-31.7-2-48.8-5.8l6.3-31c14.3 3 33.2 3.8 43.1 3.8 15.7 0 26.9-3.2 33.6-9.6s10-15.9 10-28.5v-6.4c-3.9 1.9-9 3.8-15.3 5.8-6.3 1.9-13.6 2.9-21.8 2.9-10.8 0-20.6-1.7-29.5-5.1-8.9-3.4-16.6-8.4-22.9-15-6.3-6.6-11.3-14.9-14.8-24.8s-5.3-27.6-5.3-40.6c0-12.2 1.9-27.5 5.6-37.7 3.8-10.2 9.2-19 16.5-26.3 7.2-7.3 16-12.9 26.3-17s22.4-6.7 35.5-6.7c12.7 0 24.4 1.6 35.8 3.5 11.4 1.9 21.1 3.9 29 6.1v155.2zm-108.7-77.2c0 16.4 3.6 34.6 10.8 42.2 7.2 7.6 16.5 11.4 27.9 11.4 6.2 0 12.1-.9 17.6-2.6 5.5-1.7 9.9-3.7 13.4-6.1v-97.1c-2.8-.6-14.5-3-25.8-3.3-14.2-.4-25 5.4-32.6 14.7-7.5 9.3-11.3 25.6-11.3 40.8zm294.3 0c0 13.2-1.9 23.2-5.8 34.1s-9.4 20.2-16.5 27.9c-7.1 7.7-15.6 13.7-25.6 17.9s-25.4 6.6-33.1 6.6c-7.7-.1-23-2.3-32.9-6.6-9.9-4.3-18.4-10.2-25.5-17.9-7.1-7.7-12.6-17-16.6-27.9s-6-20.9-6-34.1c0-13.2 1.8-25.9 5.8-36.7 4-10.8 9.6-20 16.8-27.7s15.8-13.6 25.6-17.8c9.9-4.2 20.8-6.2 32.6-6.2s22.7 2.1 32.7 6.2c10 4.2 18.6 10.1 25.6 17.8 7.1 7.7 12.6 16.9 16.6 27.7 4.2 10.8 6.3 23.5 6.3 36.7zm-40 .1c0-16.9-3.7-31-10.9-40.8-7.2-9.9-17.3-14.8-30.2-14.8-12.9 0-23 4.9-30.2 14.8-7.2 9.9-10.7 23.9-10.7 40.8 0 17.1 3.6 28.6 10.8 38.5 7.2 10 17.3 14.9 30.2 14.9 12.9 0 23-5 30.2-14.9 7.2-10 10.8-21.4 10.8-38.5zm127.1 86.4c-64.1.3-64.1-51.8-64.1-60.1L1051 32l39.1-6.2v183.6c0 4.7 0 34.5 25.1 34.6v32.9zm68.9 0h-39.3V108.1l39.3-6.2v175zm-19.7-193.5c13.1 0 23.8-10.6 23.8-23.7S1177.6 36 1164.4 36s-23.8 10.6-23.8 23.7 10.7 23.7 23.8 23.7zm117.4 18.6c12.9 0 23.8 1.6 32.6 4.8 8.8 3.2 15.9 7.7 21.1 13.4s8.9 13.5 11.1 21.7c2.3 8.2 3.4 17.2 3.4 27.1v100.6c-6 1.3-15.1 2.8-27.3 4.6s-25.9 2.7-41.1 2.7c-10.1 0-19.4-1-27.7-2.9-8.4-1.9-15.5-5-21.5-9.3-5.9-4.3-10.5-9.8-13.9-16.6-3.3-6.8-5-16.4-5-26.4 0-9.6 1.9-15.7 5.6-22.3 3.8-6.6 8.9-12 15.3-16.2 6.5-4.2 13.9-7.2 22.4-9s17.4-2.7 26.6-2.7c4.3 0 8.8.3 13.6.8s9.8 1.4 15.2 2.7v-6.4c0-4.5-.5-8.8-1.6-12.8-1.1-4.1-3-7.6-5.6-10.7-2.7-3.1-6.2-5.5-10.6-7.2s-10-3-16.7-3c-9 0-17.2 1.1-24.7 2.4-7.5 1.3-13.7 2.8-18.4 4.5l-4.7-32.1c4.9-1.7 12.2-3.4 21.6-5.1s19.5-2.6 30.3-2.6zm3.3 141.9c12 0 20.9-.7 27.1-1.9v-39.8c-2.2-.6-5.3-1.3-9.4-1.9-4.1-.6-8.6-1-13.6-1-4.3 0-8.7.3-13.1 1-4.4.6-8.4 1.8-11.9 3.5s-6.4 4.1-8.5 7.2c-2.2 3.1-3.2 4.9-3.2 9.6 0 9.2 3.2 14.5 9 18 5.9 3.6 13.7 5.3 23.6 5.3zM512.9 103c12.9 0 23.8 1.6 32.6 4.8 8.8 3.2 15.9 7.7 21.1 13.4 5.3 5.8 8.9 13.5 11.1 21.7 2.3 8.2 3.4 17.2 3.4 27.1v100.6c-6 1.3-15.1 2.8-27.3 4.6-12.2 1.8-25.9 2.7-41.1 2.7-10.1 0-19.4-1-27.7-2.9-8.4-1.9-15.5-5-21.5-9.3-5.9-4.3-10.5-9.8-13.9-16.6-3.3-6.8-5-16.4-5-26.4 0-9.6 1.9-15.7 5.6-22.3 3.8-6.6 8.9-12 15.3-16.2 6.5-4.2 13.9-7.2 22.4-9s17.4-2.7 26.6-2.7c4.3 0 8.8.3 13.6.8 4.7.5 9.8 1.4 15.2 2.7v-6.4c0-4.5-.5-8.8-1.6-12.8-1.1-4.1-3-7.6-5.6-10.7-2.7-3.1-6.2-5.5-10.6-7.2-4.4-1.7-10-3-16.7-3-9 0-17.2 1.1-24.7 2.4-7.5 1.3-13.7 2.8-18.4 4.5l-4.7-32.1c4.9-1.7 12.2-3.4 21.6-5.1 9.4-1.8 19.5-2.6 30.3-2.6zm3.4 142c12 0 20.9-.7 27.1-1.9v-39.8c-2.2-.6-5.3-1.3-9.4-1.9-4.1-.6-8.6-1-13.6-1-4.3 0-8.7.3-13.1 1-4.4.6-8.4 1.8-11.9 3.5s-6.4 4.1-8.5 7.2c-2.2 3.1-3.2 4.9-3.2 9.6 0 9.2 3.2 14.5 9 18s13.7 5.3 23.6 5.3zm158.5 31.9c-64.1.3-64.1-51.8-64.1-60.1L610.6 32l39.1-6.2v183.6c0 4.7 0 34.5 25.1 34.6v32.9z\",\n    fill: \"#182359\"\n  }));\n};\n/* eslint-enable max-len */\n\n\nvar PoweredBy =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PoweredBy, _Component);\n\n  function PoweredBy() {\n    _classCallCheck(this, PoweredBy);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PoweredBy).apply(this, arguments));\n  }\n\n  _createClass(PoweredBy, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          url = _this$props.url,\n          translate = _this$props.translate,\n          className = _this$props.className;\n      return React.createElement(\"div\", {\n        className: classNames(cx(''), className)\n      }, React.createElement(\"span\", {\n        className: cx('text')\n      }, translate('searchBy')), ' ', React.createElement(\"a\", {\n        href: url,\n        target: \"_blank\",\n        className: cx('link'),\n        \"aria-label\": \"Algolia\",\n        rel: \"noopener noreferrer\"\n      }, React.createElement(AlgoliaLogo, null)));\n    }\n  }]);\n\n  return PoweredBy;\n}(Component);\n\n_defineProperty(PoweredBy, \"propTypes\", {\n  url: PropTypes.string.isRequired,\n  translate: PropTypes.func.isRequired,\n  className: PropTypes.string\n});\n\nexport default translatable({\n  searchBy: 'Search by'\n})(PoweredBy);","import { connectPoweredBy } from 'react-instantsearch-core';\nimport PoweredBy from '../components/PoweredBy';\n/**\n * PoweredBy displays an Algolia logo.\n *\n * Algolia requires that you use this widget if you are on a [community or free plan](https://www.algolia.com/pricing).\n * @name PoweredBy\n * @kind widget\n * @themeKey ais-PoweredBy - the root div of the widget\n * @themeKey ais-PoweredBy-text - the text of the widget\n * @themeKey ais-PoweredBy-link - the link of the logo\n * @themeKey ais-PoweredBy-logo - the logo of the widget\n * @translationKey searchBy - Label value for the powered by\n * @example\n * import React from 'react';\n * import { InstantSearch, PoweredBy } from 'react-instantsearch-dom';\n * import algoliasearch from 'algoliasearch/lite';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <PoweredBy />\n *   </InstantSearch>\n * );\n */\n\nexport default connectPoweredBy(PoweredBy);","import { connectSearchBox } from 'react-instantsearch-core';\nimport SearchBox from '../components/SearchBox';\n/**\n * The SearchBox component displays a search box that lets the user search for a specific query.\n * @name SearchBox\n * @kind widget\n * @propType {string[]} [focusShortcuts=['s','/']] - List of keyboard shortcuts that focus the search box. Accepts key names and key codes.\n * @propType {boolean} [autoFocus=false] - Should the search box be focused on render?\n * @propType {boolean} [searchAsYouType=true] - Should we search on every change to the query? If you disable this option, new searches will only be triggered by clicking the search button or by pressing the enter key while the search box is focused.\n * @propType {function} [onSubmit] - Intercept submit event sent from the SearchBox form container.\n * @propType {function} [onReset] - Listen to `reset` event sent from the SearchBox form container.\n * @propType {function} [on*] - Listen to any events sent from the search input itself.\n * @propType {node} [submit] - Change the apparence of the default submit button (magnifying glass).\n * @propType {node} [reset] - Change the apparence of the default reset button (cross).\n * @propType {node} [loadingIndicator] - Change the apparence of the default loading indicator (spinning circle).\n * @propType {string} [defaultRefinement] - Provide default refinement value when component is mounted.\n * @propType {boolean} [showLoadingIndicator=false] - Display that the search is loading. This only happens after a certain amount of time to avoid a blinking effect. This timer can be configured with `stalledSearchDelay` props on <InstantSearch>. By default, the value is 200ms.\n * @themeKey ais-SearchBox - the root div of the widget\n * @themeKey ais-SearchBox-form - the wrapping form\n * @themeKey ais-SearchBox-input - the search input\n * @themeKey ais-SearchBox-submit - the submit button\n * @themeKey ais-SearchBox-submitIcon - the default magnifier icon used with the search input\n * @themeKey ais-SearchBox-reset - the reset button used to clear the content of the input\n * @themeKey ais-SearchBox-resetIcon - the default reset icon used inside the reset button\n * @themeKey ais-SearchBox-loadingIndicator - the loading indicator container\n * @themeKey ais-SearchBox-loadingIcon - the default loading icon\n * @translationkey submitTitle - The submit button title\n * @translationkey resetTitle - The reset button title\n * @translationkey placeholder - The label of the input placeholder\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox />\n *   </InstantSearch>\n * );\n */\n\nexport default connectSearchBox(SearchBox);","import React from 'react';\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nconst defaultProps = {\n  breakpointCols: undefined,\n  // optional, number or object { default: number, [key: number]: number }\n  className: undefined,\n  // required, string\n  columnClassName: undefined,\n  // optional, string\n  // Any React children. Typically an array of JSX items\n  children: undefined,\n  // Custom attributes, however it is advised against\n  // using these to prevent unintended issues and future conflicts\n  // ...any other attribute, will be added to the container\n  columnAttrs: undefined,\n  // object, added to the columns\n  // Deprecated props\n  // The column property is deprecated.\n  // It is an alias of the `columnAttrs` property\n  column: undefined\n};\nconst DEFAULT_COLUMNS = 2;\n\nclass Masonry extends React.Component {\n  constructor(props) {\n    super(props); // Correct scope for when methods are accessed externally\n\n    this.reCalculateColumnCount = this.reCalculateColumnCount.bind(this);\n    this.reCalculateColumnCountDebounce = this.reCalculateColumnCountDebounce.bind(this); // default state\n\n    let columnCount;\n\n    if (this.props.breakpointCols && this.props.breakpointCols.default) {\n      columnCount = this.props.breakpointCols.default;\n    } else {\n      columnCount = parseInt(this.props.breakpointCols) || DEFAULT_COLUMNS;\n    }\n\n    this.state = {\n      columnCount\n    };\n  }\n\n  componentDidMount() {\n    this.reCalculateColumnCount(); // window may not be available in some environments\n\n    if (window) {\n      window.addEventListener('resize', this.reCalculateColumnCountDebounce);\n    }\n  }\n\n  componentDidUpdate() {\n    this.reCalculateColumnCount();\n  }\n\n  componentWillUnmount() {\n    if (window) {\n      window.removeEventListener('resize', this.reCalculateColumnCountDebounce);\n    }\n  }\n\n  reCalculateColumnCountDebounce() {\n    if (!window || !window.requestAnimationFrame) {\n      // IE10+\n      this.reCalculateColumnCount();\n      return;\n    }\n\n    if (window.cancelAnimationFrame) {\n      // IE10+\n      window.cancelAnimationFrame(this._lastRecalculateAnimationFrame);\n    }\n\n    this._lastRecalculateAnimationFrame = window.requestAnimationFrame(() => {\n      this.reCalculateColumnCount();\n    });\n  }\n\n  reCalculateColumnCount() {\n    const windowWidth = window && window.innerWidth || Infinity;\n    let breakpointColsObject = this.props.breakpointCols; // Allow passing a single number to `breakpointCols` instead of an object\n\n    if (typeof breakpointColsObject !== 'object') {\n      breakpointColsObject = {\n        default: parseInt(breakpointColsObject) || DEFAULT_COLUMNS\n      };\n    }\n\n    let matchedBreakpoint = Infinity;\n    let columns = breakpointColsObject.default || DEFAULT_COLUMNS;\n\n    for (let breakpoint in breakpointColsObject) {\n      const optBreakpoint = parseInt(breakpoint);\n      const isCurrentBreakpoint = optBreakpoint > 0 && windowWidth <= optBreakpoint;\n\n      if (isCurrentBreakpoint && optBreakpoint < matchedBreakpoint) {\n        matchedBreakpoint = optBreakpoint;\n        columns = breakpointColsObject[breakpoint];\n      }\n    }\n\n    columns = Math.max(1, parseInt(columns) || 1);\n\n    if (this.state.columnCount !== columns) {\n      this.setState({\n        columnCount: columns\n      });\n    }\n  }\n\n  itemsInColumns() {\n    const currentColumnCount = this.state.columnCount;\n    const itemsInColumns = new Array(currentColumnCount); // Force children to be handled as an array\n\n    const items = React.Children.toArray(this.props.children);\n\n    for (let i = 0; i < items.length; i++) {\n      const columnIndex = i % currentColumnCount;\n\n      if (!itemsInColumns[columnIndex]) {\n        itemsInColumns[columnIndex] = [];\n      }\n\n      itemsInColumns[columnIndex].push(items[i]);\n    }\n\n    return itemsInColumns;\n  }\n\n  renderColumns() {\n    const {\n      column,\n      columnAttrs = {},\n      columnClassName\n    } = this.props;\n    const childrenInColumns = this.itemsInColumns();\n    const columnWidth = `${100 / childrenInColumns.length}%`;\n    let className = columnClassName;\n\n    if (className && typeof className !== 'string') {\n      this.logDeprecated('The property \"columnClassName\" requires a string'); // This is a deprecated default and will be removed soon.\n\n      if (typeof className === 'undefined') {\n        className = 'my-masonry-grid_column';\n      }\n    }\n\n    const columnAttributes = _objectSpread(_objectSpread(_objectSpread({}, column), columnAttrs), {}, {\n      style: _objectSpread(_objectSpread({}, columnAttrs.style), {}, {\n        width: columnWidth\n      }),\n      className\n    });\n\n    return childrenInColumns.map((items, i) => {\n      return /*#__PURE__*/React.createElement(\"div\", _extends({}, columnAttributes, {\n        key: i\n      }), items);\n    });\n  }\n\n  logDeprecated(message) {\n    console.error('[Masonry]', message);\n  }\n\n  render() {\n    const _this$props = this.props,\n          {\n      // ignored\n      children,\n      breakpointCols,\n      columnClassName,\n      columnAttrs,\n      column,\n      // used\n      className\n    } = _this$props,\n          rest = _objectWithoutProperties(_this$props, [\"children\", \"breakpointCols\", \"columnClassName\", \"columnAttrs\", \"column\", \"className\"]);\n\n    let classNameOutput = className;\n\n    if (typeof className !== 'string') {\n      this.logDeprecated('The property \"className\" requires a string'); // This is a deprecated default and will be removed soon.\n\n      if (typeof className === 'undefined') {\n        classNameOutput = 'my-masonry-grid';\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n      className: classNameOutput\n    }), this.renderColumns());\n  }\n\n}\n\nMasonry.defaultProps = defaultProps;\n\nexport default Masonry;\n","import React, { Component } from 'react';\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\nvar defaultProps = {\n  defaultInputValue: '',\n  defaultMenuIsOpen: false,\n  defaultValue: null\n};\n\nvar manageState = function manageState(SelectComponent) {\n  var _class, _temp;\n\n  return _temp = _class =\n  /*#__PURE__*/\n  function (_Component) {\n    _inheritsLoose(StateManager, _Component);\n\n    function StateManager() {\n      var _this;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n      _this.select = void 0;\n      _this.state = {\n        inputValue: _this.props.inputValue !== undefined ? _this.props.inputValue : _this.props.defaultInputValue,\n        menuIsOpen: _this.props.menuIsOpen !== undefined ? _this.props.menuIsOpen : _this.props.defaultMenuIsOpen,\n        value: _this.props.value !== undefined ? _this.props.value : _this.props.defaultValue\n      };\n\n      _this.onChange = function (value, actionMeta) {\n        _this.callProp('onChange', value, actionMeta);\n\n        _this.setState({\n          value: value\n        });\n      };\n\n      _this.onInputChange = function (value, actionMeta) {\n        // TODO: for backwards compatibility, we allow the prop to return a new\n        // value, but now inputValue is a controllable prop we probably shouldn't\n        var newValue = _this.callProp('onInputChange', value, actionMeta);\n\n        _this.setState({\n          inputValue: newValue !== undefined ? newValue : value\n        });\n      };\n\n      _this.onMenuOpen = function () {\n        _this.callProp('onMenuOpen');\n\n        _this.setState({\n          menuIsOpen: true\n        });\n      };\n\n      _this.onMenuClose = function () {\n        _this.callProp('onMenuClose');\n\n        _this.setState({\n          menuIsOpen: false\n        });\n      };\n\n      return _this;\n    }\n\n    var _proto = StateManager.prototype;\n\n    _proto.focus = function focus() {\n      this.select.focus();\n    };\n\n    _proto.blur = function blur() {\n      this.select.blur();\n    } // FIXME: untyped flow code, return any\n    ;\n\n    _proto.getProp = function getProp(key) {\n      return this.props[key] !== undefined ? this.props[key] : this.state[key];\n    } // FIXME: untyped flow code, return any\n    ;\n\n    _proto.callProp = function callProp(name) {\n      if (typeof this.props[name] === 'function') {\n        var _this$props;\n\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        return (_this$props = this.props)[name].apply(_this$props, args);\n      }\n    };\n\n    _proto.render = function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          defaultInputValue = _this$props2.defaultInputValue,\n          defaultMenuIsOpen = _this$props2.defaultMenuIsOpen,\n          defaultValue = _this$props2.defaultValue,\n          props = _objectWithoutPropertiesLoose(_this$props2, [\"defaultInputValue\", \"defaultMenuIsOpen\", \"defaultValue\"]);\n\n      return React.createElement(SelectComponent, _extends({}, props, {\n        ref: function ref(_ref) {\n          _this2.select = _ref;\n        },\n        inputValue: this.getProp('inputValue'),\n        menuIsOpen: this.getProp('menuIsOpen'),\n        onChange: this.onChange,\n        onInputChange: this.onInputChange,\n        onMenuClose: this.onMenuClose,\n        onMenuOpen: this.onMenuOpen,\n        value: this.getProp('value')\n      }));\n    };\n\n    return StateManager;\n  }(Component), _class.defaultProps = defaultProps, _temp;\n};\n\nexport { manageState as m };\n","import React, { Component } from 'react';\nimport memoizeOne from 'memoize-one';\nimport { CacheProvider } from '@emotion/core';\nimport 'react-dom';\nimport 'prop-types';\nimport './utils-06b0d5a4.browser.esm.js';\nexport { y as components } from './index-4322c0ed.browser.esm.js';\nimport { S as Select } from './Select-9fdb8cd0.browser.esm.js';\nexport { c as createFilter, a as defaultTheme, m as mergeStyles } from './Select-9fdb8cd0.browser.esm.js';\nimport '@emotion/css';\nimport 'react-input-autosize';\nimport { m as manageState } from './stateManager-04f734a2.browser.esm.js';\nimport createCache from '@emotion/cache';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar NonceProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(NonceProvider, _Component);\n\n  function NonceProvider(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n\n    _this.createEmotionCache = function (nonce) {\n      return createCache({\n        nonce: nonce\n      });\n    };\n\n    _this.createEmotionCache = memoizeOne(_this.createEmotionCache);\n    return _this;\n  }\n\n  var _proto = NonceProvider.prototype;\n\n  _proto.render = function render() {\n    var emotionCache = this.createEmotionCache(this.props.nonce);\n    return React.createElement(CacheProvider, {\n      value: emotionCache\n    }, this.props.children);\n  };\n\n  return NonceProvider;\n}(Component);\n\nvar index = manageState(Select);\n\nexport default index;\nexport { NonceProvider };\n","// ==============================\n// NO OP\n// ==============================\nvar noop = function noop() {};\n// Class Name Prefixer\n// ==============================\n\n/**\n String representation of component state for styling with class names.\n\n Expects an array of strings OR a string/object pair:\n - className(['comp', 'comp-arg', 'comp-arg-2'])\n   @returns 'react-select__comp react-select__comp-arg react-select__comp-arg-2'\n - className('comp', { some: true, state: false })\n   @returns 'react-select__comp react-select__comp--some'\n*/\n\nfunction applyPrefixToName(prefix, name) {\n  if (!name) {\n    return prefix;\n  } else if (name[0] === '-') {\n    return prefix + name;\n  } else {\n    return prefix + '__' + name;\n  }\n}\n\nfunction classNames(prefix, state, className) {\n  var arr = [className];\n\n  if (state && prefix) {\n    for (var key in state) {\n      if (state.hasOwnProperty(key) && state[key]) {\n        arr.push(\"\" + applyPrefixToName(prefix, key));\n      }\n    }\n  }\n\n  return arr.filter(function (i) {\n    return i;\n  }).map(function (i) {\n    return String(i).trim();\n  }).join(' ');\n} // ==============================\n// Clean Value\n// ==============================\n\nvar cleanValue = function cleanValue(value) {\n  if (Array.isArray(value)) return value.filter(Boolean);\n  if (typeof value === 'object' && value !== null) return [value];\n  return [];\n}; // ==============================\n// Handle Input Change\n// ==============================\n\nfunction handleInputChange(inputValue, actionMeta, onInputChange) {\n  if (onInputChange) {\n    var newValue = onInputChange(inputValue, actionMeta);\n    if (typeof newValue === 'string') return newValue;\n  }\n\n  return inputValue;\n} // ==============================\n// Scroll Helpers\n// ==============================\n\nfunction isDocumentElement(el) {\n  return [document.documentElement, document.body, window].indexOf(el) > -1;\n} // Normalized Scroll Top\n// ------------------------------\n\nfunction getScrollTop(el) {\n  if (isDocumentElement(el)) {\n    return window.pageYOffset;\n  }\n\n  return el.scrollTop;\n}\nfunction scrollTo(el, top) {\n  // with a scroll distance, we perform scroll on the element\n  if (isDocumentElement(el)) {\n    window.scrollTo(0, top);\n    return;\n  }\n\n  el.scrollTop = top;\n} // Get Scroll Parent\n// ------------------------------\n\nfunction getScrollParent(element) {\n  var style = getComputedStyle(element);\n  var excludeStaticParent = style.position === 'absolute';\n  var overflowRx = /(auto|scroll)/;\n  var docEl = document.documentElement; // suck it, flow...\n\n  if (style.position === 'fixed') return docEl;\n\n  for (var parent = element; parent = parent.parentElement;) {\n    style = getComputedStyle(parent);\n\n    if (excludeStaticParent && style.position === 'static') {\n      continue;\n    }\n\n    if (overflowRx.test(style.overflow + style.overflowY + style.overflowX)) {\n      return parent;\n    }\n  }\n\n  return docEl;\n} // Animated Scroll To\n// ------------------------------\n\n/**\n  @param t: time (elapsed)\n  @param b: initial value\n  @param c: amount of change\n  @param d: duration\n*/\n\nfunction easeOutCubic(t, b, c, d) {\n  return c * ((t = t / d - 1) * t * t + 1) + b;\n}\n\nfunction animatedScrollTo(element, to, duration, callback) {\n  if (duration === void 0) {\n    duration = 200;\n  }\n\n  if (callback === void 0) {\n    callback = noop;\n  }\n\n  var start = getScrollTop(element);\n  var change = to - start;\n  var increment = 10;\n  var currentTime = 0;\n\n  function animateScroll() {\n    currentTime += increment;\n    var val = easeOutCubic(currentTime, start, change, duration);\n    scrollTo(element, val);\n\n    if (currentTime < duration) {\n      window.requestAnimationFrame(animateScroll);\n    } else {\n      callback(element);\n    }\n  }\n\n  animateScroll();\n} // Scroll Into View\n// ------------------------------\n\nfunction scrollIntoView(menuEl, focusedEl) {\n  var menuRect = menuEl.getBoundingClientRect();\n  var focusedRect = focusedEl.getBoundingClientRect();\n  var overScroll = focusedEl.offsetHeight / 3;\n\n  if (focusedRect.bottom + overScroll > menuRect.bottom) {\n    scrollTo(menuEl, Math.min(focusedEl.offsetTop + focusedEl.clientHeight - menuEl.offsetHeight + overScroll, menuEl.scrollHeight));\n  } else if (focusedRect.top - overScroll < menuRect.top) {\n    scrollTo(menuEl, Math.max(focusedEl.offsetTop - overScroll, 0));\n  }\n} // ==============================\n// Get bounding client object\n// ==============================\n// cannot get keys using array notation with DOMRect\n\nfunction getBoundingClientObj(element) {\n  var rect = element.getBoundingClientRect();\n  return {\n    bottom: rect.bottom,\n    height: rect.height,\n    left: rect.left,\n    right: rect.right,\n    top: rect.top,\n    width: rect.width\n  };\n}\n// Touch Capability Detector\n// ==============================\n\nfunction isTouchCapable() {\n  try {\n    document.createEvent('TouchEvent');\n    return true;\n  } catch (e) {\n    return false;\n  }\n} // ==============================\n// Mobile Device Detector\n// ==============================\n\nfunction isMobileDevice() {\n  try {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  } catch (e) {\n    return false;\n  }\n}\n\nexport { getScrollParent as a, getScrollTop as b, animatedScrollTo as c, isMobileDevice as d, cleanValue as e, scrollIntoView as f, getBoundingClientObj as g, classNames as h, isTouchCapable as i, isDocumentElement as j, handleInputChange as k, noop as n, scrollTo as s };\n","import createGetFormMeta from './selectors/getFormMeta';\nimport plain from './structure/plain';\nexport default createGetFormMeta(plain);","export default function createGetFormMeta(_ref) {\n  var getIn = _ref.getIn,\n      empty = _ref.empty;\n  return function (form, getFormState) {\n    return function (state) {\n      var nonNullGetFormState = getFormState || function (state) {\n        return getIn(state, 'form');\n      };\n\n      return getIn(nonNullGetFormState(state), form + \".fields\") || empty;\n    };\n  };\n}","'use strict';\n\nvar React = require('react');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar ArrowGoBackFillIcon = function ArrowGoBackFillIcon(_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === undefined ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === undefined ? 24 : _ref$size,\n      children = _ref.children,\n      props = objectWithoutProperties(_ref, ['color', 'size', 'children']);\n\n  var className = 'remixicon-icon ' + (props.className || '');\n\n  return React__default['default'].createElement(\n    'svg',\n    _extends({}, props, { className: className, width: size, height: size, fill: color, viewBox: '0 0 24 24' }),\n    React__default['default'].createElement('path', { d: 'M8 7v4L2 6l6-5v4h5a8 8 0 1 1 0 16H4v-2h9a6 6 0 1 0 0-12H8z' })\n  );\n};\n\nvar ArrowGoBackFillIcon$1 = React__default['default'].memo ? React__default['default'].memo(ArrowGoBackFillIcon) : ArrowGoBackFillIcon;\n\nmodule.exports = ArrowGoBackFillIcon$1;\n","'use strict';\n\nvar React = require('react');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar FileAddLineIcon = function FileAddLineIcon(_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === undefined ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === undefined ? 24 : _ref$size,\n      children = _ref.children,\n      props = objectWithoutProperties(_ref, ['color', 'size', 'children']);\n\n  var className = 'remixicon-icon ' + (props.className || '');\n\n  return React__default['default'].createElement(\n    'svg',\n    _extends({}, props, { className: className, width: size, height: size, fill: color, viewBox: '0 0 24 24' }),\n    React__default['default'].createElement('path', { d: 'M15 4H5v16h14V8h-4V4zM3 2.992C3 2.444 3.447 2 3.999 2H16l5 5v13.993A1 1 0 0 1 20.007 22H3.993A1 1 0 0 1 3 21.008V2.992zM11 11V8h2v3h3v2h-3v3h-2v-3H8v-2h3z' })\n  );\n};\n\nvar FileAddLineIcon$1 = React__default['default'].memo ? React__default['default'].memo(FileAddLineIcon) : FileAddLineIcon;\n\nmodule.exports = FileAddLineIcon$1;\n","'use strict';\n\nvar React = require('react');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar Layout2LineIcon = function Layout2LineIcon(_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === undefined ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === undefined ? 24 : _ref$size,\n      children = _ref.children,\n      props = objectWithoutProperties(_ref, ['color', 'size', 'children']);\n\n  var className = 'remixicon-icon ' + (props.className || '');\n\n  return React__default['default'].createElement(\n    'svg',\n    _extends({}, props, { className: className, width: size, height: size, fill: color, viewBox: '0 0 24 24' }),\n    React__default['default'].createElement('path', { d: 'M21 20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1h16a1 1 0 0 1 1 1v16zM11 5H5v14h6V5zm8 8h-6v6h6v-6zm0-8h-6v6h6V5z' })\n  );\n};\n\nvar Layout2LineIcon$1 = React__default['default'].memo ? React__default['default'].memo(Layout2LineIcon) : Layout2LineIcon;\n\nmodule.exports = Layout2LineIcon$1;\n","'use strict';\n\nvar React = require('react');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nvar Save2LineIcon = function Save2LineIcon(_ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === undefined ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === undefined ? 24 : _ref$size,\n      children = _ref.children,\n      props = objectWithoutProperties(_ref, ['color', 'size', 'children']);\n\n  var className = 'remixicon-icon ' + (props.className || '');\n\n  return React__default['default'].createElement(\n    'svg',\n    _extends({}, props, { className: className, width: size, height: size, fill: color, viewBox: '0 0 24 24' }),\n    React__default['default'].createElement('path', { d: 'M5 5v14h14V7.828L16.172 5H5zM4 3h13l3.707 3.707a1 1 0 0 1 .293.707V20a1 1 0 0 1-1 1H4a1 1 0 0 1-1-1V4a1 1 0 0 1 1-1zm8 15a3 3 0 1 1 0-6 3 3 0 0 1 0 6zM6 6h9v4H6V6z' })\n  );\n};\n\nvar Save2LineIcon$1 = React__default['default'].memo ? React__default['default'].memo(Save2LineIcon) : Save2LineIcon;\n\nmodule.exports = Save2LineIcon$1;\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","// AST walker module for Mozilla Parser API compatible trees\n\n// A simple walk is one where you simply specify callbacks to be\n// called on specific nodes. The last two arguments are optional. A\n// simple use would be\n//\n//     walk.simple(myTree, {\n//         Expression: function(node) { ... }\n//     });\n//\n// to do something with all expressions. All Parser API node types\n// can be used to identify node types, as well as Expression and\n// Statement, which denote categories of nodes.\n//\n// The base argument can be used to pass a custom (recursive)\n// walker, and state can be used to give this walked an initial\n// state.\n\nfunction simple(node, visitors, baseVisitor, state, override) {\n  if (!baseVisitor) { baseVisitor = base\n  ; }(function c(node, st, override) {\n    var type = override || node.type, found = visitors[type];\n    baseVisitor[type](node, st, c);\n    if (found) { found(node, st); }\n  })(node, state, override);\n}\n\n// An ancestor walk keeps an array of ancestor nodes (including the\n// current node) and passes them to the callback as third parameter\n// (and also as state parameter when no other state is present).\nfunction ancestor(node, visitors, baseVisitor, state, override) {\n  var ancestors = [];\n  if (!baseVisitor) { baseVisitor = base\n  ; }(function c(node, st, override) {\n    var type = override || node.type, found = visitors[type];\n    var isNew = node !== ancestors[ancestors.length - 1];\n    if (isNew) { ancestors.push(node); }\n    baseVisitor[type](node, st, c);\n    if (found) { found(node, st || ancestors, ancestors); }\n    if (isNew) { ancestors.pop(); }\n  })(node, state, override);\n}\n\n// A recursive walk is one where your functions override the default\n// walkers. They can modify and replace the state parameter that's\n// threaded through the walk, and can opt how and whether to walk\n// their child nodes (by calling their third argument on these\n// nodes).\nfunction recursive(node, state, funcs, baseVisitor, override) {\n  var visitor = funcs ? make(funcs, baseVisitor || undefined) : baseVisitor\n  ;(function c(node, st, override) {\n    visitor[override || node.type](node, st, c);\n  })(node, state, override);\n}\n\nfunction makeTest(test) {\n  if (typeof test === \"string\")\n    { return function (type) { return type === test; } }\n  else if (!test)\n    { return function () { return true; } }\n  else\n    { return test }\n}\n\nvar Found = function Found(node, state) { this.node = node; this.state = state; };\n\n// A full walk triggers the callback on each node\nfunction full(node, callback, baseVisitor, state, override) {\n  if (!baseVisitor) { baseVisitor = base; }\n  var last\n  ;(function c(node, st, override) {\n    var type = override || node.type;\n    baseVisitor[type](node, st, c);\n    if (last !== node) {\n      callback(node, st, type);\n      last = node;\n    }\n  })(node, state, override);\n}\n\n// An fullAncestor walk is like an ancestor walk, but triggers\n// the callback on each node\nfunction fullAncestor(node, callback, baseVisitor, state) {\n  if (!baseVisitor) { baseVisitor = base; }\n  var ancestors = [], last\n  ;(function c(node, st, override) {\n    var type = override || node.type;\n    var isNew = node !== ancestors[ancestors.length - 1];\n    if (isNew) { ancestors.push(node); }\n    baseVisitor[type](node, st, c);\n    if (last !== node) {\n      callback(node, st || ancestors, ancestors, type);\n      last = node;\n    }\n    if (isNew) { ancestors.pop(); }\n  })(node, state);\n}\n\n// Find a node with a given start, end, and type (all are optional,\n// null can be used as wildcard). Returns a {node, state} object, or\n// undefined when it doesn't find a matching node.\nfunction findNodeAt(node, start, end, test, baseVisitor, state) {\n  if (!baseVisitor) { baseVisitor = base; }\n  test = makeTest(test);\n  try {\n    (function c(node, st, override) {\n      var type = override || node.type;\n      if ((start == null || node.start <= start) &&\n          (end == null || node.end >= end))\n        { baseVisitor[type](node, st, c); }\n      if ((start == null || node.start === start) &&\n          (end == null || node.end === end) &&\n          test(type, node))\n        { throw new Found(node, st) }\n    })(node, state);\n  } catch (e) {\n    if (e instanceof Found) { return e }\n    throw e\n  }\n}\n\n// Find the innermost node of a given type that contains the given\n// position. Interface similar to findNodeAt.\nfunction findNodeAround(node, pos, test, baseVisitor, state) {\n  test = makeTest(test);\n  if (!baseVisitor) { baseVisitor = base; }\n  try {\n    (function c(node, st, override) {\n      var type = override || node.type;\n      if (node.start > pos || node.end < pos) { return }\n      baseVisitor[type](node, st, c);\n      if (test(type, node)) { throw new Found(node, st) }\n    })(node, state);\n  } catch (e) {\n    if (e instanceof Found) { return e }\n    throw e\n  }\n}\n\n// Find the outermost matching node after a given position.\nfunction findNodeAfter(node, pos, test, baseVisitor, state) {\n  test = makeTest(test);\n  if (!baseVisitor) { baseVisitor = base; }\n  try {\n    (function c(node, st, override) {\n      if (node.end < pos) { return }\n      var type = override || node.type;\n      if (node.start >= pos && test(type, node)) { throw new Found(node, st) }\n      baseVisitor[type](node, st, c);\n    })(node, state);\n  } catch (e) {\n    if (e instanceof Found) { return e }\n    throw e\n  }\n}\n\n// Find the outermost matching node before a given position.\nfunction findNodeBefore(node, pos, test, baseVisitor, state) {\n  test = makeTest(test);\n  if (!baseVisitor) { baseVisitor = base; }\n  var max\n  ;(function c(node, st, override) {\n    if (node.start > pos) { return }\n    var type = override || node.type;\n    if (node.end <= pos && (!max || max.node.end < node.end) && test(type, node))\n      { max = new Found(node, st); }\n    baseVisitor[type](node, st, c);\n  })(node, state);\n  return max\n}\n\n// Used to create a custom walker. Will fill in all missing node\n// type properties with the defaults.\nfunction make(funcs, baseVisitor) {\n  var visitor = Object.create(baseVisitor || base);\n  for (var type in funcs) { visitor[type] = funcs[type]; }\n  return visitor\n}\n\nfunction skipThrough(node, st, c) { c(node, st); }\nfunction ignore(_node, _st, _c) {}\n\n// Node walkers.\n\nvar base = {};\n\nbase.Program = base.BlockStatement = base.StaticBlock = function (node, st, c) {\n  for (var i = 0, list = node.body; i < list.length; i += 1)\n    {\n    var stmt = list[i];\n\n    c(stmt, st, \"Statement\");\n  }\n};\nbase.Statement = skipThrough;\nbase.EmptyStatement = ignore;\nbase.ExpressionStatement = base.ParenthesizedExpression = base.ChainExpression =\n  function (node, st, c) { return c(node.expression, st, \"Expression\"); };\nbase.IfStatement = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.consequent, st, \"Statement\");\n  if (node.alternate) { c(node.alternate, st, \"Statement\"); }\n};\nbase.LabeledStatement = function (node, st, c) { return c(node.body, st, \"Statement\"); };\nbase.BreakStatement = base.ContinueStatement = ignore;\nbase.WithStatement = function (node, st, c) {\n  c(node.object, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase.SwitchStatement = function (node, st, c) {\n  c(node.discriminant, st, \"Expression\");\n  for (var i$1 = 0, list$1 = node.cases; i$1 < list$1.length; i$1 += 1) {\n    var cs = list$1[i$1];\n\n    if (cs.test) { c(cs.test, st, \"Expression\"); }\n    for (var i = 0, list = cs.consequent; i < list.length; i += 1)\n      {\n      var cons = list[i];\n\n      c(cons, st, \"Statement\");\n    }\n  }\n};\nbase.SwitchCase = function (node, st, c) {\n  if (node.test) { c(node.test, st, \"Expression\"); }\n  for (var i = 0, list = node.consequent; i < list.length; i += 1)\n    {\n    var cons = list[i];\n\n    c(cons, st, \"Statement\");\n  }\n};\nbase.ReturnStatement = base.YieldExpression = base.AwaitExpression = function (node, st, c) {\n  if (node.argument) { c(node.argument, st, \"Expression\"); }\n};\nbase.ThrowStatement = base.SpreadElement =\n  function (node, st, c) { return c(node.argument, st, \"Expression\"); };\nbase.TryStatement = function (node, st, c) {\n  c(node.block, st, \"Statement\");\n  if (node.handler) { c(node.handler, st); }\n  if (node.finalizer) { c(node.finalizer, st, \"Statement\"); }\n};\nbase.CatchClause = function (node, st, c) {\n  if (node.param) { c(node.param, st, \"Pattern\"); }\n  c(node.body, st, \"Statement\");\n};\nbase.WhileStatement = base.DoWhileStatement = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase.ForStatement = function (node, st, c) {\n  if (node.init) { c(node.init, st, \"ForInit\"); }\n  if (node.test) { c(node.test, st, \"Expression\"); }\n  if (node.update) { c(node.update, st, \"Expression\"); }\n  c(node.body, st, \"Statement\");\n};\nbase.ForInStatement = base.ForOfStatement = function (node, st, c) {\n  c(node.left, st, \"ForInit\");\n  c(node.right, st, \"Expression\");\n  c(node.body, st, \"Statement\");\n};\nbase.ForInit = function (node, st, c) {\n  if (node.type === \"VariableDeclaration\") { c(node, st); }\n  else { c(node, st, \"Expression\"); }\n};\nbase.DebuggerStatement = ignore;\n\nbase.FunctionDeclaration = function (node, st, c) { return c(node, st, \"Function\"); };\nbase.VariableDeclaration = function (node, st, c) {\n  for (var i = 0, list = node.declarations; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    c(decl, st);\n  }\n};\nbase.VariableDeclarator = function (node, st, c) {\n  c(node.id, st, \"Pattern\");\n  if (node.init) { c(node.init, st, \"Expression\"); }\n};\n\nbase.Function = function (node, st, c) {\n  if (node.id) { c(node.id, st, \"Pattern\"); }\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    c(param, st, \"Pattern\");\n  }\n  c(node.body, st, node.expression ? \"Expression\" : \"Statement\");\n};\n\nbase.Pattern = function (node, st, c) {\n  if (node.type === \"Identifier\")\n    { c(node, st, \"VariablePattern\"); }\n  else if (node.type === \"MemberExpression\")\n    { c(node, st, \"MemberPattern\"); }\n  else\n    { c(node, st); }\n};\nbase.VariablePattern = ignore;\nbase.MemberPattern = skipThrough;\nbase.RestElement = function (node, st, c) { return c(node.argument, st, \"Pattern\"); };\nbase.ArrayPattern = function (node, st, c) {\n  for (var i = 0, list = node.elements; i < list.length; i += 1) {\n    var elt = list[i];\n\n    if (elt) { c(elt, st, \"Pattern\"); }\n  }\n};\nbase.ObjectPattern = function (node, st, c) {\n  for (var i = 0, list = node.properties; i < list.length; i += 1) {\n    var prop = list[i];\n\n    if (prop.type === \"Property\") {\n      if (prop.computed) { c(prop.key, st, \"Expression\"); }\n      c(prop.value, st, \"Pattern\");\n    } else if (prop.type === \"RestElement\") {\n      c(prop.argument, st, \"Pattern\");\n    }\n  }\n};\n\nbase.Expression = skipThrough;\nbase.ThisExpression = base.Super = base.MetaProperty = ignore;\nbase.ArrayExpression = function (node, st, c) {\n  for (var i = 0, list = node.elements; i < list.length; i += 1) {\n    var elt = list[i];\n\n    if (elt) { c(elt, st, \"Expression\"); }\n  }\n};\nbase.ObjectExpression = function (node, st, c) {\n  for (var i = 0, list = node.properties; i < list.length; i += 1)\n    {\n    var prop = list[i];\n\n    c(prop, st);\n  }\n};\nbase.FunctionExpression = base.ArrowFunctionExpression = base.FunctionDeclaration;\nbase.SequenceExpression = function (node, st, c) {\n  for (var i = 0, list = node.expressions; i < list.length; i += 1)\n    {\n    var expr = list[i];\n\n    c(expr, st, \"Expression\");\n  }\n};\nbase.TemplateLiteral = function (node, st, c) {\n  for (var i = 0, list = node.quasis; i < list.length; i += 1)\n    {\n    var quasi = list[i];\n\n    c(quasi, st);\n  }\n\n  for (var i$1 = 0, list$1 = node.expressions; i$1 < list$1.length; i$1 += 1)\n    {\n    var expr = list$1[i$1];\n\n    c(expr, st, \"Expression\");\n  }\n};\nbase.TemplateElement = ignore;\nbase.UnaryExpression = base.UpdateExpression = function (node, st, c) {\n  c(node.argument, st, \"Expression\");\n};\nbase.BinaryExpression = base.LogicalExpression = function (node, st, c) {\n  c(node.left, st, \"Expression\");\n  c(node.right, st, \"Expression\");\n};\nbase.AssignmentExpression = base.AssignmentPattern = function (node, st, c) {\n  c(node.left, st, \"Pattern\");\n  c(node.right, st, \"Expression\");\n};\nbase.ConditionalExpression = function (node, st, c) {\n  c(node.test, st, \"Expression\");\n  c(node.consequent, st, \"Expression\");\n  c(node.alternate, st, \"Expression\");\n};\nbase.NewExpression = base.CallExpression = function (node, st, c) {\n  c(node.callee, st, \"Expression\");\n  if (node.arguments)\n    { for (var i = 0, list = node.arguments; i < list.length; i += 1)\n      {\n        var arg = list[i];\n\n        c(arg, st, \"Expression\");\n      } }\n};\nbase.MemberExpression = function (node, st, c) {\n  c(node.object, st, \"Expression\");\n  if (node.computed) { c(node.property, st, \"Expression\"); }\n};\nbase.ExportNamedDeclaration = base.ExportDefaultDeclaration = function (node, st, c) {\n  if (node.declaration)\n    { c(node.declaration, st, node.type === \"ExportNamedDeclaration\" || node.declaration.id ? \"Statement\" : \"Expression\"); }\n  if (node.source) { c(node.source, st, \"Expression\"); }\n};\nbase.ExportAllDeclaration = function (node, st, c) {\n  if (node.exported)\n    { c(node.exported, st); }\n  c(node.source, st, \"Expression\");\n};\nbase.ImportDeclaration = function (node, st, c) {\n  for (var i = 0, list = node.specifiers; i < list.length; i += 1)\n    {\n    var spec = list[i];\n\n    c(spec, st);\n  }\n  c(node.source, st, \"Expression\");\n};\nbase.ImportExpression = function (node, st, c) {\n  c(node.source, st, \"Expression\");\n};\nbase.ImportSpecifier = base.ImportDefaultSpecifier = base.ImportNamespaceSpecifier = base.Identifier = base.PrivateIdentifier = base.Literal = ignore;\n\nbase.TaggedTemplateExpression = function (node, st, c) {\n  c(node.tag, st, \"Expression\");\n  c(node.quasi, st, \"Expression\");\n};\nbase.ClassDeclaration = base.ClassExpression = function (node, st, c) { return c(node, st, \"Class\"); };\nbase.Class = function (node, st, c) {\n  if (node.id) { c(node.id, st, \"Pattern\"); }\n  if (node.superClass) { c(node.superClass, st, \"Expression\"); }\n  c(node.body, st);\n};\nbase.ClassBody = function (node, st, c) {\n  for (var i = 0, list = node.body; i < list.length; i += 1)\n    {\n    var elt = list[i];\n\n    c(elt, st);\n  }\n};\nbase.MethodDefinition = base.PropertyDefinition = base.Property = function (node, st, c) {\n  if (node.computed) { c(node.key, st, \"Expression\"); }\n  if (node.value) { c(node.value, st, \"Expression\"); }\n};\n\nexport { ancestor, base, findNodeAfter, findNodeAround, findNodeAt, findNodeBefore, full, fullAncestor, make, recursive, simple };\n","// This file was generated. Do not modify manually!\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n// This file was generated. Do not modify manually!\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\n// These are a run-length and offset encoded representation of the\n\n// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords$1 = {\n  5: ecma5AndLessKeywords,\n  \"5module\": ecma5AndLessKeywords + \" export import\",\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords[name] = new TokenType(name, options)\n}\n\nvar types$1 = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  privateId: new TokenType(\"privateId\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n  coalesce: binop(\"??\", 1),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\", startsExpr),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n}\n\nfunction nextLineBreak(code, from, end) {\n  if ( end === void 0 ) end = code.length;\n\n  for (var i = from; i < end; i++) {\n    var next = code.charCodeAt(i);\n    if (isNewLine(next))\n      { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\n  }\n  return -1\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\nvar hasOwn = Object.hasOwn || (function (obj, propName) { return (\n  hasOwnProperty.call(obj, propName)\n); });\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\nfunction wordsRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\nvar loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    var nextBreak = nextLineBreak(input, cur, offset);\n    if (nextBreak < 0) { return new Position(line, offset - cur) }\n    ++line;\n    cur = nextBreak;\n  }\n}\n\n// A second argument must be given to configure the parser process.\n// These options are recognized (only `ecmaVersion` is required):\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n  // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n  // (2019), 11 (2020), 12 (2021), 13 (2022), or `\"latest\"` (the\n  // latest version the library supports). This influences support\n  // for strict mode, the set of reserved words, and support for\n  // new syntax features.\n  ecmaVersion: null,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // the position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program, and an import.meta expression\n  // in a script isn't considered an error.\n  allowImportExportEverywhere: false,\n  // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: null,\n  // When enabled, super identifiers are not constrained to\n  // appearing in methods and do not raise an error when they appear elsewhere.\n  allowSuperOutsideMethod: null,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false\n};\n\n// Interpret and default an options object\n\nvar warnedAboutEcmaVersion = false;\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion === \"latest\") {\n    options.ecmaVersion = 1e8;\n  } else if (options.ecmaVersion == null) {\n    if (!warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n      warnedAboutEcmaVersion = true;\n      console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n    }\n    options.ecmaVersion = 11;\n  } else if (options.ecmaVersion >= 2015) {\n    options.ecmaVersion -= 2009;\n  }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Each scope gets a bitset that may contain these flags\nvar\n    SCOPE_TOP = 1,\n    SCOPE_FUNCTION = 2,\n    SCOPE_ASYNC = 4,\n    SCOPE_GENERATOR = 8,\n    SCOPE_ARROW = 16,\n    SCOPE_SIMPLE_CATCH = 32,\n    SCOPE_SUPER = 64,\n    SCOPE_DIRECT_SUPER = 128,\n    SCOPE_CLASS_STATIC_BLOCK = 256,\n    SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\n\nfunction functionFlags(async, generator) {\n  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n}\n\n// Used in checkLVal* and declareName to determine the type of a binding\nvar\n    BIND_NONE = 0, // Not a binding\n    BIND_VAR = 1, // Var-style binding\n    BIND_LEXICAL = 2, // Let- or const-style binding\n    BIND_FUNCTION = 3, // Function declaration\n    BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n    BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n  var reserved = \"\";\n  if (options.allowReserved !== true) {\n    reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = wordsRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = wordsRegexp(reservedStrict);\n  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types$1.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n  this.potentialArrowInForAwait = false;\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n  // Labels in scope.\n  this.labels = [];\n  // Thus-far undefined exports.\n  this.undefinedExports = Object.create(null);\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterScope(SCOPE_TOP);\n\n  // For RegExp validation\n  this.regexpState = null;\n\n  // The stack of private names.\n  // Each element has two properties: 'declared' and 'used'.\n  // When it exited from the outermost class definition, all used private names must be declared.\n  this.privateNameStack = [];\n};\n\nvar prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nprototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n\nprototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit };\n\nprototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit };\n\nprototypeAccessors.canAwait.get = function () {\n  for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) { return false }\n    if (scope.flags & SCOPE_FUNCTION) { return (scope.flags & SCOPE_ASYNC) > 0 }\n  }\n  return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\n};\n\nprototypeAccessors.allowSuper.get = function () {\n  var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod\n};\n\nprototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n\nprototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\nprototypeAccessors.allowNewDotTarget.get = function () {\n  var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit\n};\n\nprototypeAccessors.inClassStaticBlock.get = function () {\n  return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\n};\n\nParser.extend = function extend () {\n    var plugins = [], len = arguments.length;\n    while ( len-- ) plugins[ len ] = arguments[ len ];\n\n  var cls = this;\n  for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n  return cls\n};\n\nParser.parse = function parse (input, options) {\n  return new this(options, input).parse()\n};\n\nParser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n  var parser = new this(options, input, pos);\n  parser.nextToken();\n  return parser.parseExpression()\n};\n\nParser.tokenizer = function tokenizer (input, options) {\n  return new this(options, input)\n};\n\nObject.defineProperties( Parser.prototype, prototypeAccessors );\n\nvar pp$9 = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'\\\\])*?)'|\"((?:\\\\.|[^\"\\\\])*?)\")/;\npp$9.strictDirective = function(start) {\n  if (this.options.ecmaVersion < 5) { return false }\n  for (;;) {\n    // Try to find string literal.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    var match = literal.exec(this.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") {\n      skipWhiteSpace.lastIndex = start + match[0].length;\n      var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n      var next = this.input.charAt(end);\n      return next === \";\" || next === \"}\" ||\n        (lineBreak.test(spaceAfter[0]) &&\n         !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n    }\n    start += match[0].length;\n\n    // Skip semicolon, if any.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    if (this.input[start] === \";\")\n      { start++; }\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp$9.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp$9.isContextual = function(name) {\n  return this.type === types$1.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp$9.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp$9.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp$9.canInsertSemicolon = function() {\n  return this.type === types$1.eof ||\n    this.type === types$1.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp$9.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp$9.semicolon = function() {\n  if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp$9.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp$9.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp$9.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nvar DestructuringErrors = function DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n};\n\npp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n};\n\npp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp$9.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp$9.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$8 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$8.parseTopLevel = function(node) {\n  var exports = Object.create(null);\n  if (!node.body) { node.body = []; }\n  while (this.type !== types$1.eof) {\n    var stmt = this.parseStatement(null, true, exports);\n    node.body.push(stmt);\n  }\n  if (this.inModule)\n    { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n      {\n        var name = list[i];\n\n        this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n      } }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  node.sourceType = this.options.sourceType;\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\npp$8.isLet = function(context) {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  // For ambiguous cases, determine if a LexicalDeclaration (or only a\n  // Statement) is allowed here. If context is not empty then only a Statement\n  // is allowed. However, `let [` is an explicit negative lookahead for\n  // ExpressionStatement, so special-case it first.\n  if (nextCh === 91 || nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '[', '/', astral\n  if (context) { return false }\n\n  if (nextCh === 123) { return true } // '{'\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }\n    if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$8.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, after;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length ||\n     !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$8.parseStatement = function(context, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet(context)) {\n    starttype = types$1._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types$1._debugger: return this.parseDebuggerStatement(node)\n  case types$1._do: return this.parseDoStatement(node)\n  case types$1._for: return this.parseForStatement(node)\n  case types$1._function:\n    // Function as sole body of either an if statement or a labeled statement\n    // works, but not when it is part of a labeled statement that is the sole\n    // body of an if statement.\n    if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false, !context)\n  case types$1._class:\n    if (context) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types$1._if: return this.parseIfStatement(node)\n  case types$1._return: return this.parseReturnStatement(node)\n  case types$1._switch: return this.parseSwitchStatement(node)\n  case types$1._throw: return this.parseThrowStatement(node)\n  case types$1._try: return this.parseTryStatement(node)\n  case types$1._const: case types$1._var:\n    kind = kind || this.value;\n    if (context && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types$1._while: return this.parseWhileStatement(node)\n  case types$1._with: return this.parseWithStatement(node)\n  case types$1.braceL: return this.parseBlock(true, node)\n  case types$1.semi: return this.parseEmptyStatement(node)\n  case types$1._export:\n  case types$1._import:\n    if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\n      skipWhiteSpace.lastIndex = this.pos;\n      var skip = skipWhiteSpace.exec(this.input);\n      var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n      if (nextCh === 40 || nextCh === 46) // '(' or '.'\n        { return this.parseExpressionStatement(node, this.parseExpression()) }\n    }\n\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (context) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true, !context)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr, context) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$8.parseBreakContinueStatement = function(node, keyword) {\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types$1.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$8.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$8.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"do\");\n  this.labels.pop();\n  this.expect(types$1._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types$1.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$8.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterScope(0);\n  this.expect(types$1.parenL);\n  if (this.type === types$1.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types$1._var || this.type === types$1._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types$1._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var startsWithLet = this.isContextual(\"let\"), isForOf = false;\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(awaitAt > -1 ? \"await\" : true, refDestructuringErrors);\n  if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types$1._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    if (startsWithLet && isForOf) { this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\"); }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLValPattern(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n  this.next();\n  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n};\n\npp$8.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(\"if\");\n  node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$8.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$8.parseSwitchStatement = function(node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types$1.braceL);\n  this.labels.push(switchLabel);\n  this.enterScope(0);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types$1.braceR;) {\n    if (this.type === types$1._case || this.type === types$1._default) {\n      var isCase = this.type === types$1._case;\n      if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(types$1.colon);\n    } else {\n      if (!cur) { this.unexpected(); }\n      cur.consequent.push(this.parseStatement(null));\n    }\n  }\n  this.exitScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$8.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty$1 = [];\n\npp$8.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types$1._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types$1.parenL)) {\n      clause.param = this.parseBindingAtom();\n      var simple = clause.param.type === \"Identifier\";\n      this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n      this.checkLValPattern(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n      this.expect(types$1.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterScope(0);\n    }\n    clause.body = this.parseBlock(false);\n    this.exitScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$8.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$8.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"while\");\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$8.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(\"with\");\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$8.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$8.parseLabeledStatement = function(node, maybeName, expr, context) {\n  for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types$1._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$8.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n  if ( node === void 0 ) node = this.startNode();\n\n  node.body = [];\n  this.expect(types$1.braceL);\n  if (createNewLexicalScope) { this.enterScope(0); }\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  if (exitStrict) { this.strict = false; }\n  this.next();\n  if (createNewLexicalScope) { this.exitScope(); }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$8.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types$1.semi);\n  node.test = this.type === types$1.semi ? null : this.parseExpression();\n  this.expect(types$1.semi);\n  node.update = this.type === types$1.parenR ? null : this.parseExpression();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$8.parseForIn = function(node, init) {\n  var isForIn = this.type === types$1._in;\n  this.next();\n\n  if (\n    init.type === \"VariableDeclaration\" &&\n    init.declarations[0].init != null &&\n    (\n      !isForIn ||\n      this.options.ecmaVersion < 8 ||\n      this.strict ||\n      init.kind !== \"var\" ||\n      init.declarations[0].id.type !== \"Identifier\"\n    )\n  ) {\n    this.raise(\n      init.start,\n      ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n    );\n  }\n  node.left = init;\n  node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n};\n\n// Parse a list of variable declarations.\n\npp$8.parseVar = function(node, isFor, kind) {\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarId(decl, kind);\n    if (this.eat(types$1.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n      this.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types$1._in || this.isContextual(\"of\")))) {\n      this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n    if (!this.eat(types$1.comma)) { break }\n  }\n  return node\n};\n\npp$8.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom();\n  this.checkLValPattern(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n};\n\nvar FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n// Parse a function declaration or literal (depending on the\n// `statement & FUNC_STATEMENT`).\n\n// Remove `allowExpressionBody` for 7.0.0, as it is only called with false\npp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n    if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\n      { this.unexpected(); }\n    node.generator = this.eat(types$1.star);\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (statement & FUNC_STATEMENT) {\n    node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();\n    if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n      // If it is a regular function declaration in sloppy mode, then it is\n      // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n      // mode depends on properties of the current scope (see\n      // treatFunctionsAsVar).\n      { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n  }\n\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(node.async, node.generator));\n\n  if (!(statement & FUNC_STATEMENT))\n    { node.id = this.type === types$1.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$8.parseFunctionParams = function(node) {\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$8.parseClass = function(node, isStatement) {\n  this.next();\n\n  // ecma-262 14.6 Class Definitions\n  // A class definition is always strict mode code.\n  var oldStrict = this.strict;\n  this.strict = true;\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var privateNameMap = this.enterClassBody();\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types$1.braceL);\n  while (this.type !== types$1.braceR) {\n    var element = this.parseClassElement(node.superClass !== null);\n    if (element) {\n      classBody.body.push(element);\n      if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n        if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n        hadConstructor = true;\n      } else if (element.key && element.key.type === \"PrivateIdentifier\" && isPrivateNameConflicted(privateNameMap, element)) {\n        this.raiseRecoverable(element.key.start, (\"Identifier '#\" + (element.key.name) + \"' has already been declared\"));\n      }\n    }\n  }\n  this.strict = oldStrict;\n  this.next();\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  this.exitClassBody();\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$8.parseClassElement = function(constructorAllowsSuper) {\n  if (this.eat(types$1.semi)) { return null }\n\n  var ecmaVersion = this.options.ecmaVersion;\n  var node = this.startNode();\n  var keyName = \"\";\n  var isGenerator = false;\n  var isAsync = false;\n  var kind = \"method\";\n  var isStatic = false;\n\n  if (this.eatContextual(\"static\")) {\n    // Parse static init block\n    if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\n      this.parseClassStaticBlock(node);\n      return node\n    }\n    if (this.isClassElementNameStart() || this.type === types$1.star) {\n      isStatic = true;\n    } else {\n      keyName = \"static\";\n    }\n  }\n  node.static = isStatic;\n  if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n    if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\n      isAsync = true;\n    } else {\n      keyName = \"async\";\n    }\n  }\n  if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\n    isGenerator = true;\n  }\n  if (!keyName && !isAsync && !isGenerator) {\n    var lastValue = this.value;\n    if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n      if (this.isClassElementNameStart()) {\n        kind = lastValue;\n      } else {\n        keyName = lastValue;\n      }\n    }\n  }\n\n  // Parse element name\n  if (keyName) {\n    // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n    // The last token is any of those. Make it the element name.\n    node.computed = false;\n    node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n    node.key.name = keyName;\n    this.finishNode(node.key, \"Identifier\");\n  } else {\n    this.parseClassElementName(node);\n  }\n\n  // Parse element value\n  if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== \"method\" || isGenerator || isAsync) {\n    var isConstructor = !node.static && checkKeyName(node, \"constructor\");\n    var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n    // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\n    if (isConstructor && kind !== \"method\") { this.raise(node.key.start, \"Constructor can't have get/set modifier\"); }\n    node.kind = isConstructor ? \"constructor\" : kind;\n    this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n  } else {\n    this.parseClassField(node);\n  }\n\n  return node\n};\n\npp$8.isClassElementNameStart = function() {\n  return (\n    this.type === types$1.name ||\n    this.type === types$1.privateId ||\n    this.type === types$1.num ||\n    this.type === types$1.string ||\n    this.type === types$1.bracketL ||\n    this.type.keyword\n  )\n};\n\npp$8.parseClassElementName = function(element) {\n  if (this.type === types$1.privateId) {\n    if (this.value === \"constructor\") {\n      this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n    }\n    element.computed = false;\n    element.key = this.parsePrivateIdent();\n  } else {\n    this.parsePropertyName(element);\n  }\n};\n\npp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n  // Check key and flags\n  var key = method.key;\n  if (method.kind === \"constructor\") {\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n  } else if (method.static && checkKeyName(method, \"prototype\")) {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n\n  // Parse value\n  var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n\n  // Check value\n  if (method.kind === \"get\" && value.params.length !== 0)\n    { this.raiseRecoverable(value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && value.params.length !== 1)\n    { this.raiseRecoverable(value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\"); }\n\n  return this.finishNode(method, \"MethodDefinition\")\n};\n\npp$8.parseClassField = function(field) {\n  if (checkKeyName(field, \"constructor\")) {\n    this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n  } else if (field.static && checkKeyName(field, \"prototype\")) {\n    this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n  }\n\n  if (this.eat(types$1.eq)) {\n    // To raise SyntaxError if 'arguments' exists in the initializer.\n    var scope = this.currentThisScope();\n    var inClassFieldInit = scope.inClassFieldInit;\n    scope.inClassFieldInit = true;\n    field.value = this.parseMaybeAssign();\n    scope.inClassFieldInit = inClassFieldInit;\n  } else {\n    field.value = null;\n  }\n  this.semicolon();\n\n  return this.finishNode(field, \"PropertyDefinition\")\n};\n\npp$8.parseClassStaticBlock = function(node) {\n  node.body = [];\n\n  var oldLabels = this.labels;\n  this.labels = [];\n  this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  this.next();\n  this.exitScope();\n  this.labels = oldLabels;\n\n  return this.finishNode(node, \"StaticBlock\")\n};\n\npp$8.parseClassId = function(node, isStatement) {\n  if (this.type === types$1.name) {\n    node.id = this.parseIdent();\n    if (isStatement)\n      { this.checkLValSimple(node.id, BIND_LEXICAL, false); }\n  } else {\n    if (isStatement === true)\n      { this.unexpected(); }\n    node.id = null;\n  }\n};\n\npp$8.parseClassSuper = function(node) {\n  node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(false) : null;\n};\n\npp$8.enterClassBody = function() {\n  var element = {declared: Object.create(null), used: []};\n  this.privateNameStack.push(element);\n  return element.declared\n};\n\npp$8.exitClassBody = function() {\n  var ref = this.privateNameStack.pop();\n  var declared = ref.declared;\n  var used = ref.used;\n  var len = this.privateNameStack.length;\n  var parent = len === 0 ? null : this.privateNameStack[len - 1];\n  for (var i = 0; i < used.length; ++i) {\n    var id = used[i];\n    if (!hasOwn(declared, id.name)) {\n      if (parent) {\n        parent.used.push(id);\n      } else {\n        this.raiseRecoverable(id.start, (\"Private field '#\" + (id.name) + \"' must be declared in an enclosing class\"));\n      }\n    }\n  }\n};\n\nfunction isPrivateNameConflicted(privateNameMap, element) {\n  var name = element.key.name;\n  var curr = privateNameMap[name];\n\n  var next = \"true\";\n  if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) {\n    next = (element.static ? \"s\" : \"i\") + element.kind;\n  }\n\n  // `class { get #a(){}; static set #a(_){} }` is also conflict.\n  if (\n    curr === \"iget\" && next === \"iset\" ||\n    curr === \"iset\" && next === \"iget\" ||\n    curr === \"sget\" && next === \"sset\" ||\n    curr === \"sset\" && next === \"sget\"\n  ) {\n    privateNameMap[name] = \"true\";\n    return false\n  } else if (!curr) {\n    privateNameMap[name] = next;\n    return false\n  } else {\n    return true\n  }\n}\n\nfunction checkKeyName(node, name) {\n  var computed = node.computed;\n  var key = node.key;\n  return !computed && (\n    key.type === \"Identifier\" && key.name === name ||\n    key.type === \"Literal\" && key.value === name\n  )\n}\n\n// Parses module export declaration.\n\npp$8.parseExport = function(node, exports) {\n  this.next();\n  // export * from '...'\n  if (this.eat(types$1.star)) {\n    if (this.options.ecmaVersion >= 11) {\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n        this.checkExport(exports, node.exported, this.lastTokStart);\n      } else {\n        node.exported = null;\n      }\n    }\n    this.expectContextual(\"from\");\n    if (this.type !== types$1.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types$1._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n    } else if (this.type === types$1._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(null);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types$1.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        // check for keywords used as local names\n        var spec = list[i];\n\n        this.checkUnreserved(spec.local);\n        // check if export is defined\n        this.checkLocalExport(spec.local);\n\n        if (spec.local.type === \"Literal\") {\n          this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n        }\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$8.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (typeof name !== \"string\")\n    { name = name.type === \"Identifier\" ? name.name : name.value; }\n  if (hasOwn(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$8.checkPatternExport = function(exports, pat) {\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$8.checkVariableExport = function(exports, decls) {\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$8.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$8.parseExportSpecifiers = function(exports) {\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var node = this.startNode();\n    node.local = this.parseModuleExportName();\n    node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n    this.checkExport(\n      exports,\n      node.exported,\n      node.exported.start\n    );\n    nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$8.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types$1.string) {\n    node.specifiers = empty$1;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$8.parseImportSpecifiers = function() {\n  var nodes = [], first = true;\n  if (this.type === types$1.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types$1.comma)) { return nodes }\n  }\n  if (this.type === types$1.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLValSimple(node$1.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this.startNode();\n    node$2.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      node$2.local = this.parseIdent();\n    } else {\n      this.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this.checkLValSimple(node$2.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\npp$8.parseModuleExportName = function() {\n  if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\n    var stringLiteral = this.parseLiteral(this.value);\n    if (loneSurrogate.test(stringLiteral.value)) {\n      this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n    }\n    return stringLiteral\n  }\n  return this.parseIdent(true)\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$8.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$8.isDirectiveCandidate = function(statement) {\n  return (\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$7 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"AssignmentPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$7.toAssignableList = function(exprList, isBinding) {\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$7.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$7.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$7.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types$1.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types$1.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types$1.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this.expect(types$1.comma); }\n    if (allowEmpty && this.type === types$1.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n      break\n    } else if (this.type === types$1.ellipsis) {\n      var rest = this.parseRestBinding();\n      this.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this.type === types$1.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n      this.expect(close);\n      break\n    } else {\n      var elem = this.parseMaybeDefault(this.start, this.startLoc);\n      this.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$7.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$7.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// The following three functions all verify that a node is an lvalue —\n// something that can be bound, or assigned to. In order to do so, they perform\n// a variety of checks:\n//\n// - Check that none of the bound/assigned-to identifiers are reserved words.\n// - Record name declarations for bindings in the appropriate scope.\n// - Check duplicate argument names, if checkClashes is set.\n//\n// If a complex binding pattern is encountered (e.g., object and array\n// destructuring), the entire pattern is recursively checked.\n//\n// There are three versions of checkLVal*() appropriate for different\n// circumstances:\n//\n// - checkLValSimple() shall be used if the syntactic construct supports\n//   nothing other than identifiers and member expressions. Parenthesized\n//   expressions are also correctly handled. This is generally appropriate for\n//   constructs for which the spec says\n//\n//   > It is a Syntax Error if AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   It is also appropriate for checking if an identifier is valid and not\n//   defined elsewhere, like import declarations or function/class identifiers.\n//\n//   Examples where this is used include:\n//     a += …;\n//     import a from '…';\n//   where a is the node to be checked.\n//\n// - checkLValPattern() shall be used if the syntactic construct supports\n//   anything checkLValSimple() supports, as well as object and array\n//   destructuring patterns. This is generally appropriate for constructs for\n//   which the spec says\n//\n//   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\n//   > an ArrayLiteral and AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   Examples where this is used include:\n//     (a = …);\n//     const a = …;\n//     try { … } catch (a) { … }\n//   where a is the node to be checked.\n//\n// - checkLValInnerPattern() shall be used if the syntactic construct supports\n//   anything checkLValPattern() supports, as well as default assignment\n//   patterns, rest elements, and other constructs that may appear within an\n//   object or array destructuring pattern.\n//\n//   As a special case, function parameters also use checkLValInnerPattern(),\n//   as they also support defaults and rest constructs.\n//\n// These functions deliberately support both assignment and binding constructs,\n// as the logic for both is exceedingly similar. If the node is the target of\n// an assignment, then bindingType should be set to BIND_NONE. Otherwise, it\n// should be set to the appropriate BIND_* constant, like BIND_VAR or\n// BIND_LEXICAL.\n//\n// If the function is called with a non-BIND_NONE bindingType, then\n// additionally a checkClashes object may be specified to allow checking for\n// duplicate argument names. checkClashes is ignored if the provided construct\n// is an assignment (i.e., bindingType is BIND_NONE).\n\npp$7.checkLValSimple = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  var isBind = bindingType !== BIND_NONE;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (isBind) {\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (checkClashes) {\n        if (hasOwn(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n    }\n    break\n\n  case \"ChainExpression\":\n    this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n    break\n\n  case \"MemberExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ParenthesizedExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding parenthesized expression\"); }\n    return this.checkLValSimple(expr.expression, bindingType, checkClashes)\n\n  default:\n    this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\npp$7.checkLValPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n      var prop = list[i];\n\n    this.checkLValInnerPattern(prop, bindingType, checkClashes);\n    }\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }\n    }\n    break\n\n  default:\n    this.checkLValSimple(expr, bindingType, checkClashes);\n  }\n};\n\npp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLValPattern(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLValPattern(expr.argument, bindingType, checkClashes);\n    break\n\n  default:\n    this.checkLValPattern(expr, bindingType, checkClashes);\n  }\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$6 = Parser.prototype;\n\npp$6.initialContext = function() {\n  return [types.b_stat]\n};\n\npp$6.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\npp$6.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types.f_expr || parent === types.f_stat)\n    { return true }\n  if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\n    { return true }\n  if (prevType === types$1.braceL)\n    { return parent === types.b_stat }\n  if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$6.inGeneratorContext = function() {\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$6.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types$1.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Used to handle egde case when token context could not be inferred correctly in tokenize phase\npp$6.overrideContext = function(tokenCtx) {\n  if (this.curContext() !== tokenCtx) {\n    this.context[this.context.length - 1] = tokenCtx;\n  }\n};\n\n// Token-specific context update code\n\ntypes$1.parenR.updateContext = types$1.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes$1.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.dollarBraceL.updateContext = function() {\n  this.context.push(types.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes$1.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n  this.context.push(statementParens ? types.p_stat : types.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes$1._function.updateContext = types$1._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types$1._else &&\n      !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\n      !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n      !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\n    { this.context.push(types.f_expr); }\n  else\n    { this.context.push(types.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes$1.backQuote.updateContext = function() {\n  if (this.curContext() === types.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes$1.star.updateContext = function(prevType) {\n  if (prevType === types$1._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types.f_expr)\n      { this.context[index] = types.f_expr_gen; }\n    else\n      { this.context[index] = types.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes$1.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\n// A recursive descent parser operates by defining functions for all\n\nvar pp$5 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors) {\n          if (refDestructuringErrors.doubleProto < 0) {\n            refDestructuringErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n        }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$5.parseExpression = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n  if (this.type === types$1.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {\n  if (this.isContextual(\"yield\")) {\n    if (this.inGenerator) { return this.parseYield(forInit) }\n    // The tokenizer will assume an expression is allowed after\n    // `yield`, but this isn't that kind of yield\n    else { this.exprAllowed = false; }\n  }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    oldDoubleProto = refDestructuringErrors.doubleProto;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types$1.parenL || this.type === types$1.name) {\n    this.potentialArrowAt = this.start;\n    this.potentialArrowInForAwait = forInit === \"await\";\n  }\n  var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    if (this.type === types$1.eq)\n      { left = this.toAssignable(left, false, refDestructuringErrors); }\n    if (!ownDestructuringErrors) {\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n    }\n    if (refDestructuringErrors.shorthandAssign >= left.start)\n      { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n    if (this.type === types$1.eq)\n      { this.checkLValPattern(left); }\n    else\n      { this.checkLValSimple(left); }\n    node.left = left;\n    this.next();\n    node.right = this.parseMaybeAssign(forInit);\n    if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(forInit, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types$1.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types$1.colon);\n    node.alternate = this.parseMaybeAssign(forInit);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$5.parseExprOps = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {\n  var prec = this.type.binop;\n  if (prec != null && (!forInit || this.type !== types$1._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\n      var coalesce = this.type === types$1.coalesce;\n      if (coalesce) {\n        // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n        // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n        prec = types$1.logicalAND.binop;\n      }\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n      if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\n        this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n      }\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)\n    }\n  }\n  return left\n};\n\npp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  if (right.type === \"PrivateIdentifier\") { this.raise(right.start, \"Private identifier can only be left side of binary expression\"); }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && this.canAwait) {\n    expr = this.parseAwait(forInit);\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types$1.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, update, forInit);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLValSimple(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else if (node.operator === \"delete\" && isPrivateFieldAccess(node.argument))\n      { this.raiseRecoverable(node.start, \"Private fields can not be deleted\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else if (!sawUnary && this.type === types$1.privateId) {\n    if (forInit || this.privateNameStack.length === 0) { this.unexpected(); }\n    expr = this.parsePrivateIdent();\n    // only could be private fields in 'in', such as #x in obj\n    if (this.type !== types$1._in) { this.unexpected(); }\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.operator = this.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this.checkLValSimple(expr);\n      this.next();\n      expr = this.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!incDec && this.eat(types$1.starstar)) {\n    if (sawUnary)\n      { this.unexpected(this.lastTokStart); }\n    else\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false) }\n  } else {\n    return expr\n  }\n};\n\nfunction isPrivateFieldAccess(node) {\n  return (\n    node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" ||\n    node.type === \"ChainExpression\" && isPrivateFieldAccess(node.expression)\n  )\n}\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n  if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n    { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\n  }\n  return result\n};\n\npp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n      this.potentialArrowAt === base.start;\n  var optionalChained = false;\n\n  while (true) {\n    var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n\n    if (element.optional) { optionalChained = true; }\n    if (element === base || element.type === \"ArrowFunctionExpression\") {\n      if (optionalChained) {\n        var chainNode = this.startNodeAt(startPos, startLoc);\n        chainNode.expression = element;\n        element = this.finishNode(chainNode, \"ChainExpression\");\n      }\n      return element\n    }\n\n    base = element;\n  }\n};\n\npp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n  var optionalSupported = this.options.ecmaVersion >= 11;\n  var optional = optionalSupported && this.eat(types$1.questionDot);\n  if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n  var computed = this.eat(types$1.bracketL);\n  if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(types$1.bracketR);\n    } else if (this.type === types$1.privateId && base.type !== \"Super\") {\n      node.property = this.parsePrivateIdent();\n    } else {\n      node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n    }\n    node.computed = !!computed;\n    if (optionalSupported) {\n      node.optional = optional;\n    }\n    base = this.finishNode(node, \"MemberExpression\");\n  } else if (!noCalls && this.eat(types$1.parenL)) {\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n    if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      if (this.awaitIdentPos > 0)\n        { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos;\n      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)\n    }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n    var node$1 = this.startNodeAt(startPos, startLoc);\n    node$1.callee = base;\n    node$1.arguments = exprList;\n    if (optionalSupported) {\n      node$1.optional = optional;\n    }\n    base = this.finishNode(node$1, \"CallExpression\");\n  } else if (this.type === types$1.backQuote) {\n    if (optional || optionalChained) {\n      this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n    }\n    var node$2 = this.startNodeAt(startPos, startLoc);\n    node$2.tag = base;\n    node$2.quasi = this.parseTemplate({isTagged: true});\n    base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n  }\n  return base\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$5.parseExprAtom = function(refDestructuringErrors, forInit) {\n  // If a division operator appears in an expression position, the\n  // tokenizer got confused, and we force it to read a regexp instead.\n  if (this.type === types$1.slash) { this.readRegexp(); }\n\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types$1._super:\n    if (!this.allowSuper)\n      { this.raise(this.start, \"'super' keyword outside a method\"); }\n    node = this.startNode();\n    this.next();\n    if (this.type === types$1.parenL && !this.allowDirectSuper)\n      { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super ( Arguments )\n    if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types$1._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types$1.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(false);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\n      this.overrideContext(types.f_expr);\n      return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)\n    }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types$1.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types$1.name && !containsEsc &&\n          (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n        id = this.parseIdent(false);\n        if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)\n      }\n    }\n    return id\n\n  case types$1.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types$1.num: case types$1.string:\n    return this.parseLiteral(this.value)\n\n  case types$1._null: case types$1._true: case types$1._false:\n    node = this.startNode();\n    node.value = this.type === types$1._null ? null : this.type === types$1._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types$1.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types$1.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types$1.braceL:\n    this.overrideContext(types.b_expr);\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types$1._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, 0)\n\n  case types$1._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types$1._new:\n    return this.parseNew()\n\n  case types$1.backQuote:\n    return this.parseTemplate()\n\n  case types$1._import:\n    if (this.options.ecmaVersion >= 11) {\n      return this.parseExprImport()\n    } else {\n      return this.unexpected()\n    }\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$5.parseExprImport = function() {\n  var node = this.startNode();\n\n  // Consume `import` as an identifier for `import.meta`.\n  // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n  var meta = this.parseIdent(true);\n\n  switch (this.type) {\n  case types$1.parenL:\n    return this.parseDynamicImport(node)\n  case types$1.dot:\n    node.meta = meta;\n    return this.parseImportMeta(node)\n  default:\n    this.unexpected();\n  }\n};\n\npp$5.parseDynamicImport = function(node) {\n  this.next(); // skip `(`\n\n  // Parse node.source.\n  node.source = this.parseMaybeAssign();\n\n  // Verify ending.\n  if (!this.eat(types$1.parenR)) {\n    var errorPos = this.start;\n    if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\n      this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n    } else {\n      this.unexpected(errorPos);\n    }\n  }\n\n  return this.finishNode(node, \"ImportExpression\")\n};\n\npp$5.parseImportMeta = function(node) {\n  this.next(); // skip `.`\n\n  var containsEsc = this.containsEsc;\n  node.property = this.parseIdent(true);\n\n  if (node.property.name !== \"meta\")\n    { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n  if (containsEsc)\n    { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n  if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere)\n    { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n  return this.finishNode(node, \"MetaProperty\")\n};\n\npp$5.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$5.parseParenExpression = function() {\n  this.expect(types$1.parenL);\n  var val = this.parseExpression();\n  this.expect(types$1.parenR);\n  return val\n};\n\npp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    // Do not save awaitIdentPos to allow checking awaits nested in parameters\n    while (this.type !== types$1.parenR) {\n      first ? first = false : this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this.type === types$1.ellipsis) {\n        spreadStart = this.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding()));\n        if (this.type === types$1.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n      }\n    }\n    var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;\n    this.expect(types$1.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList, forInit)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$5.parseParenItem = function(item) {\n  return item\n};\n\npp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty = [];\n\npp$5.parseNew = function() {\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types$1.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n    if (!this.allowNewDotTarget)\n      { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types$1._import;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true, false);\n  if (isImport && node.callee.type === \"ImportExpression\") {\n    this.raise(startPos, \"Cannot use new with import()\");\n  }\n  if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$5.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types$1.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types$1.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$5.parseTemplate = function(ref) {\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this.type === types$1.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n    this.expect(types$1.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(types$1.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$5.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$5.parseObj = function(isPattern, refDestructuringErrors) {\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$5.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types$1.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // To disallow parenthesized identifier via `this.toAssignable()`.\n    if (this.type === types$1.parenL && refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0) {\n        refDestructuringErrors.parenthesizedAssign = this.start;\n      }\n      if (refDestructuringErrors.parenthesizedBind < 0) {\n        refDestructuringErrors.parenthesizedBind = this.start;\n      }\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types$1.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types$1.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types$1.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    this.checkUnreserved(prop.key);\n    if (prop.key.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = startPos; }\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else if (this.type === types$1.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else {\n      prop.value = this.copyNode(prop.key);\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$5.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types$1.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n};\n\n// Initialize empty function node.\n\npp$5.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n  if (this.options.ecmaVersion >= 8) { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n  var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false, true, false);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$5.parseArrowExpression = function(node, params, isAsync, forInit) {\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {\n  var isExpression = isArrowFunction && this.type !== types$1.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign(forInit);\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }\n    node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitScope();\n};\n\npp$5.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$5.checkParams = function(node, allowDuplicates) {\n  var nameHash = Object.create(null);\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this.type === types$1.comma)\n      { elt = null; }\n    else if (this.type === types$1.ellipsis) {\n      elt = this.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this.start; }\n    } else {\n      elt = this.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$5.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n  if (this.currentThisScope().inClassFieldInit && name === \"arguments\")\n    { this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\"); }\n  if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\"))\n    { this.raise(start, (\"Cannot use \" + name + \" in class static initialization block\")); }\n  if (this.keywords.test(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$5.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (this.type === types$1.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next(!!liberal);\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) {\n    this.checkUnreserved(node);\n    if (node.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = node.start; }\n  }\n  return node\n};\n\npp$5.parsePrivateIdent = function() {\n  var node = this.startNode();\n  if (this.type === types$1.privateId) {\n    node.name = this.value;\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"PrivateIdentifier\");\n\n  // For validating existence\n  if (this.privateNameStack.length === 0) {\n    this.raise(node.start, (\"Private field '#\" + (node.name) + \"' must be declared in an enclosing class\"));\n  } else {\n    this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n  }\n\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$5.parseYield = function(forInit) {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types$1.star);\n    node.argument = this.parseMaybeAssign(forInit);\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$5.parseAwait = function(forInit) {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true, false, forInit);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$3 = Parser.prototype;\n\nvar Scope = function Scope(flags) {\n  this.flags = flags;\n  // A list of var-declared names in the current lexical scope\n  this.var = [];\n  // A list of lexically-declared names in the current lexical scope\n  this.lexical = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  this.functions = [];\n  // A switch to disallow the identifier reference 'arguments'\n  this.inClassFieldInit = false;\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$3.enterScope = function(flags) {\n  this.scopeStack.push(new Scope(flags));\n};\n\npp$3.exitScope = function() {\n  this.scopeStack.pop();\n};\n\n// The spec says:\n// > At the top level of a function, or script, function declarations are\n// > treated like var declarations rather than like lexical declarations.\npp$3.treatFunctionsAsVarInScope = function(scope) {\n  return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n};\n\npp$3.declareName = function(name, bindingType, pos) {\n  var redeclared = false;\n  if (bindingType === BIND_LEXICAL) {\n    var scope = this.currentScope();\n    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    scope.lexical.push(name);\n    if (this.inModule && (scope.flags & SCOPE_TOP))\n      { delete this.undefinedExports[name]; }\n  } else if (bindingType === BIND_SIMPLE_CATCH) {\n    var scope$1 = this.currentScope();\n    scope$1.lexical.push(name);\n  } else if (bindingType === BIND_FUNCTION) {\n    var scope$2 = this.currentScope();\n    if (this.treatFunctionsAsVar)\n      { redeclared = scope$2.lexical.indexOf(name) > -1; }\n    else\n      { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n    scope$2.functions.push(name);\n  } else {\n    for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n      var scope$3 = this.scopeStack[i];\n      if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n          !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n        redeclared = true;\n        break\n      }\n      scope$3.var.push(name);\n      if (this.inModule && (scope$3.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n      if (scope$3.flags & SCOPE_VAR) { break }\n    }\n  }\n  if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n};\n\npp$3.checkLocalExport = function(id) {\n  // scope.functions must be empty as Module code is always strict.\n  if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1) {\n    this.undefinedExports[id.name] = id;\n  }\n};\n\npp$3.currentScope = function() {\n  return this.scopeStack[this.scopeStack.length - 1]\n};\n\npp$3.currentVarScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR) { return scope }\n  }\n};\n\n// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\npp$3.currentThisScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n  }\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$2 = Parser.prototype;\n\npp$2.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$2.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$2.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$2.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\npp$2.copyNode = function(node) {\n  var newNode = new Node(this, node.start, this.startLoc);\n  for (var prop in node) { newNode[prop] = node[prop]; }\n  return newNode\n};\n\n// This file contains Unicode properties extracted from the ECMAScript\n// specification. The lists are extracted like so:\n// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n// #table-binary-unicode-properties\nvar ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\nvar ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\nvar ecma11BinaryProperties = ecma10BinaryProperties;\nvar ecma12BinaryProperties = ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\nvar ecma13BinaryProperties = ecma12BinaryProperties;\nvar unicodeBinaryProperties = {\n  9: ecma9BinaryProperties,\n  10: ecma10BinaryProperties,\n  11: ecma11BinaryProperties,\n  12: ecma12BinaryProperties,\n  13: ecma13BinaryProperties\n};\n\n// #table-unicode-general-category-values\nvar unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n// #table-unicode-script-values\nvar ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\nvar ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\nvar ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\nvar ecma12ScriptValues = ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\nvar ecma13ScriptValues = ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\nvar unicodeScriptValues = {\n  9: ecma9ScriptValues,\n  10: ecma10ScriptValues,\n  11: ecma11ScriptValues,\n  12: ecma12ScriptValues,\n  13: ecma13ScriptValues\n};\n\nvar data = {};\nfunction buildUnicodeData(ecmaVersion) {\n  var d = data[ecmaVersion] = {\n    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n    nonBinary: {\n      General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n    }\n  };\n  d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n  d.nonBinary.gc = d.nonBinary.General_Category;\n  d.nonBinary.sc = d.nonBinary.Script;\n  d.nonBinary.scx = d.nonBinary.Script_Extensions;\n}\n\nfor (var i = 0, list = [9, 10, 11, 12, 13]; i < list.length; i += 1) {\n  var ecmaVersion = list[i];\n\n  buildUnicodeData(ecmaVersion);\n}\n\nvar pp$1 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\");\n  this.unicodeProperties = data[parser.options.ecmaVersion >= 13 ? 13 : parser.options.ecmaVersion];\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  var next = s.charCodeAt(i + 1);\n  return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i), next;\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n      (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.pos, forceU)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.nextIndex(this.pos, forceU), forceU)\n};\n\nRegExpValidationState.prototype.advance = function advance (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  this.pos = this.nextIndex(this.pos, forceU);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  if (this.current(forceU) === ch) {\n    this.advance(forceU);\n    return true\n  }\n  return false\n};\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpFlags = function(state) {\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$1.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$1.regexp_disjunction = function(state) {\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$1.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    { }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$1.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$1.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$1.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$1.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$1.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$1.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$1.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$1.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$1.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$1.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$1.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier ::\n//   [empty]\n//   `?` GroupName\npp$1.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName ::\n//   `<` RegExpIdentifierName `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName ::\n//   RegExpIdentifierStart\n//   RegExpIdentifierName RegExpIdentifierPart\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\npp$1.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\n//   <ZWNJ>\n//   <ZWJ>\npp$1.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$1.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$1.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$1.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$1.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$1.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$1.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n  if ( forceU === void 0 ) forceU = false;\n\n  var start = state.pos;\n  var switchU = forceU || state.switchU;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$1.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$1.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$1.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true\n  }\n\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatUnicodePropertyValueExpression(state) &&\n      state.eat(0x7D /* } */)\n    ) {\n      return true\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return false\n};\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true\n  }\n  return false\n};\npp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!hasOwn(state.unicodeProperties.nonBinary, name))\n    { state.raise(\"Invalid property name\"); }\n  if (!state.unicodeProperties.nonBinary[name].test(value))\n    { state.raise(\"Invalid property value\"); }\n};\npp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (!state.unicodeProperties.binary.test(nameOrValue))\n    { state.raise(\"Invalid property name\"); }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$1.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$1.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* ] */)) {\n      return true\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$1.regexp_classRanges = function(state) {\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$1.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* ] */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$1.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$1.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$1.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$1.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$1.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp = Parser.prototype;\n\n// Move to the next token\n\npp.next = function(ignoreEscapeSequenceInKeyword) {\n  if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n    { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp[Symbol.iterator] = function() {\n    var this$1$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1$1.getToken();\n        return {\n          done: token.type === types$1.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xdc00) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\n};\n\npp.skipBlockComment = function() {\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {\n      ++this.curLine;\n      pos = this.lineStart = nextBreak;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp.skipLineComment = function(startSkip) {\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this.input.charCodeAt(++this.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp.skipSpace = function() {\n  loop: while (this.pos < this.input.length) {\n    var ch = this.input.charCodeAt(this.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this.pos;\n      break\n    case 13:\n      if (this.input.charCodeAt(this.pos + 1) === 10) {\n        ++this.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this.pos;\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this.input.charCodeAt(this.pos + 1)) {\n      case 42: // '*'\n        this.skipBlockComment();\n        break\n      case 47:\n        this.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types$1.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types$1.dot)\n  }\n};\n\npp.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.slash, 1)\n};\n\npp.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types$1.star : types$1.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types$1.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types$1.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (this.options.ecmaVersion >= 12) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 === 61) { return this.finishOp(types$1.assign, 3) }\n    }\n    return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)\n};\n\npp.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.bitwiseXOR, 1)\n};\n\npp.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types$1.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.plusMin, 1)\n};\n\npp.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }\n    return this.finishOp(types$1.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types$1.relational, size)\n};\n\npp.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types$1.arrow)\n  }\n  return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)\n};\n\npp.readToken_question = function() { // '?'\n  var ecmaVersion = this.options.ecmaVersion;\n  if (ecmaVersion >= 11) {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 46) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }\n    }\n    if (next === 63) {\n      if (ecmaVersion >= 12) {\n        var next2$1 = this.input.charCodeAt(this.pos + 2);\n        if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }\n      }\n      return this.finishOp(types$1.coalesce, 2)\n    }\n  }\n  return this.finishOp(types$1.question, 1)\n};\n\npp.readToken_numberSign = function() { // '#'\n  var ecmaVersion = this.options.ecmaVersion;\n  var code = 35; // '#'\n  if (ecmaVersion >= 13) {\n    ++this.pos;\n    code = this.fullCharCodeAtPos();\n    if (isIdentifierStart(code, true) || code === 92 /* '\\' */) {\n      return this.finishToken(types$1.privateId, this.readWord1())\n    }\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types$1.parenL)\n  case 41: ++this.pos; return this.finishToken(types$1.parenR)\n  case 59: ++this.pos; return this.finishToken(types$1.semi)\n  case 44: ++this.pos; return this.finishToken(types$1.comma)\n  case 91: ++this.pos; return this.finishToken(types$1.bracketL)\n  case 93: ++this.pos; return this.finishToken(types$1.bracketR)\n  case 123: ++this.pos; return this.finishToken(types$1.braceL)\n  case 125: ++this.pos; return this.finishToken(types$1.braceR)\n  case 58: ++this.pos; return this.finishToken(types$1.colon)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types$1.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 63: // '?'\n    return this.readToken_question()\n\n  case 126: // '~'\n    return this.finishOp(types$1.prefix, 1)\n\n  case 35: // '#'\n    return this.readToken_numberSign()\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp.readRegexp = function() {\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n    var ch = this.input.charAt(this.pos);\n    if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n  // `len` is used for character escape sequences. In that case, disallow separators.\n  var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n  // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n  // and isn't fraction part nor exponent part. In that case, if the first digit\n  // is zero then disallow separators.\n  var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n  var start = this.pos, total = 0, lastCode = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n    var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n    if (allowSeparators && code === 95) {\n      if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n      if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n      if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n      lastCode = code;\n      continue\n    }\n\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    lastCode = code;\n    total = total * radix + val;\n  }\n\n  if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\nfunction stringToNumber(str, isLegacyOctalNumericLiteral) {\n  if (isLegacyOctalNumericLiteral) {\n    return parseInt(str, 8)\n  }\n\n  // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n  return parseFloat(str.replace(/_/g, \"\"))\n}\n\nfunction stringToBigInt(str) {\n  if (typeof BigInt !== \"function\") {\n    return null\n  }\n\n  // `BigInt(value)` throws syntax error if the string contains numeric separators.\n  return BigInt(str.replace(/_/g, \"\"))\n}\n\npp.readRadixNumber = function(radix) {\n  var start = this.pos;\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n    val = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n  } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types$1.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  var next = this.input.charCodeAt(this.pos);\n  if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n    var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types$1.num, val$1)\n  }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var val = stringToNumber(this.input.slice(start, this.pos), octal);\n  return this.finishToken(types$1.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\npp.readString = function(quote) {\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(false);\n      chunkStart = this.pos;\n    } else if (ch === 0x2028 || ch === 0x2029) {\n      if (this.options.ecmaVersion < 10) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n      if (this.options.locations) {\n        this.curLine++;\n        this.lineStart = this.pos;\n      }\n    } else {\n      if (isNewLine(ch)) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types$1.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp.readTmplToken = function() {\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n      if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\n        if (ch === 36) {\n          this.pos += 2;\n          return this.finishToken(types$1.dollarBraceL)\n        } else {\n          ++this.pos;\n          return this.finishToken(types$1.backQuote)\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos);\n      return this.finishToken(types$1.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(true);\n      chunkStart = this.pos;\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos);\n      ++this.pos;\n      switch (ch) {\n      case 13:\n        if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      chunkStart = this.pos;\n    } else {\n      ++this.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp.readInvalidTemplateToken = function() {\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this.input[this.pos]) {\n    case \"\\\\\":\n      ++this.pos;\n      break\n\n    case \"$\":\n      if (this.input[this.pos + 1] !== \"{\") {\n        break\n      }\n\n    // falls through\n    case \"`\":\n      return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  case 56:\n  case 57:\n    if (this.strict) {\n      this.invalidStringToken(\n        this.pos - 1,\n        \"Invalid escape sequence\"\n      );\n    }\n    if (inTemplate) {\n      var codePos = this.pos - 1;\n\n      this.invalidStringToken(\n        codePos,\n        \"Invalid escape sequence in template string\"\n      );\n\n      return null\n    }\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    if (isNewLine(ch)) {\n      // Unicode new line characters after \\ get removed from output in both\n      // template literals and strings\n      return \"\"\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp.readWord1 = function() {\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this.containsEsc = true;\n      word += this.input.slice(chunkStart, this.pos);\n      var escStart = this.pos;\n      if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n        { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this.pos;\n      var esc = this.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp.readWord = function() {\n  var word = this.readWord1();\n  var type = types$1.name;\n  if (this.keywords.test(word)) {\n    type = keywords[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n\nvar version = \"8.7.1\";\n\nParser.acorn = {\n  Parser: Parser,\n  version: version,\n  defaultOptions: defaultOptions,\n  Position: Position,\n  SourceLocation: SourceLocation,\n  getLineInfo: getLineInfo,\n  Node: Node,\n  TokenType: TokenType,\n  tokTypes: types$1,\n  keywordTypes: keywords,\n  TokContext: TokContext,\n  tokContexts: types,\n  isIdentifierChar: isIdentifierChar,\n  isIdentifierStart: isIdentifierStart,\n  Token: Token,\n  isNewLine: isNewLine,\n  lineBreak: lineBreak,\n  lineBreakG: lineBreakG,\n  nonASCIIwhitespace: nonASCIIwhitespace\n};\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return Parser.parse(input, options)\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  return Parser.parseExpressionAt(input, pos, options)\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return Parser.tokenizer(input, options)\n}\n\nexport { Node, Parser, Position, SourceLocation, TokContext, Token, TokenType, defaultOptions, getLineInfo, isIdentifierChar, isIdentifierStart, isNewLine, keywords as keywordTypes, lineBreak, lineBreakG, nonASCIIwhitespace, parse, parseExpressionAt, types as tokContexts, types$1 as tokTypes, tokenizer, version };\n","import { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { getLocation } from '../language/location.mjs';\nimport {\n  printLocation,\n  printSourceLocation,\n} from '../language/printLocation.mjs';\n\nfunction toNormalizedOptions(args) {\n  const firstArg = args[0];\n\n  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {\n    return {\n      nodes: firstArg,\n      source: args[1],\n      positions: args[2],\n      path: args[3],\n      originalError: args[4],\n      extensions: args[5],\n    };\n  }\n\n  return firstArg;\n}\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport class GraphQLError extends Error {\n  /**\n   * An array of `{ line, column }` locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n\n  /**\n   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.\n   */\n  constructor(message, ...rawArgs) {\n    var _this$nodes, _nodeLocations$, _ref;\n\n    const { nodes, source, positions, path, originalError, extensions } =\n      toNormalizedOptions(rawArgs);\n    super(message);\n    this.name = 'GraphQLError';\n    this.path = path !== null && path !== void 0 ? path : undefined;\n    this.originalError =\n      originalError !== null && originalError !== void 0\n        ? originalError\n        : undefined; // Compute list of blame nodes.\n\n    this.nodes = undefinedIfEmpty(\n      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,\n    );\n    const nodeLocations = undefinedIfEmpty(\n      (_this$nodes = this.nodes) === null || _this$nodes === void 0\n        ? void 0\n        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),\n    ); // Compute locations in the source for the given nodes/positions.\n\n    this.source =\n      source !== null && source !== void 0\n        ? source\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : (_nodeLocations$ = nodeLocations[0]) === null ||\n          _nodeLocations$ === void 0\n        ? void 0\n        : _nodeLocations$.source;\n    this.positions =\n      positions !== null && positions !== void 0\n        ? positions\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => loc.start);\n    this.locations =\n      positions && source\n        ? positions.map((pos) => getLocation(source, pos))\n        : nodeLocations === null || nodeLocations === void 0\n        ? void 0\n        : nodeLocations.map((loc) => getLocation(loc.source, loc.start));\n    const originalExtensions = isObjectLike(\n      originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions,\n    )\n      ? originalError === null || originalError === void 0\n        ? void 0\n        : originalError.extensions\n      : undefined;\n    this.extensions =\n      (_ref =\n        extensions !== null && extensions !== void 0\n          ? extensions\n          : originalExtensions) !== null && _ref !== void 0\n        ? _ref\n        : Object.create(null); // Only properties prescribed by the spec should be enumerable.\n    // Keep the rest as non-enumerable.\n\n    Object.defineProperties(this, {\n      message: {\n        writable: true,\n        enumerable: true,\n      },\n      name: {\n        enumerable: false,\n      },\n      nodes: {\n        enumerable: false,\n      },\n      source: {\n        enumerable: false,\n      },\n      positions: {\n        enumerable: false,\n      },\n      originalError: {\n        enumerable: false,\n      },\n    }); // Include (non-enumerable) stack trace.\n\n    /* c8 ignore start */\n    // FIXME: https://github.com/graphql/graphql-js/issues/2317\n\n    if (\n      originalError !== null &&\n      originalError !== void 0 &&\n      originalError.stack\n    ) {\n      Object.defineProperty(this, 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true,\n      });\n    } else if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, GraphQLError);\n    } else {\n      Object.defineProperty(this, 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true,\n      });\n    }\n    /* c8 ignore stop */\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLError';\n  }\n\n  toString() {\n    let output = this.message;\n\n    if (this.nodes) {\n      for (const node of this.nodes) {\n        if (node.loc) {\n          output += '\\n\\n' + printLocation(node.loc);\n        }\n      }\n    } else if (this.source && this.locations) {\n      for (const location of this.locations) {\n        output += '\\n\\n' + printSourceLocation(this.source, location);\n      }\n    }\n\n    return output;\n  }\n\n  toJSON() {\n    const formattedError = {\n      message: this.message,\n    };\n\n    if (this.locations != null) {\n      formattedError.locations = this.locations;\n    }\n\n    if (this.path != null) {\n      formattedError.path = this.path;\n    }\n\n    if (this.extensions != null && Object.keys(this.extensions).length > 0) {\n      formattedError.extensions = this.extensions;\n    }\n\n    return formattedError;\n  }\n}\n\nfunction undefinedIfEmpty(array) {\n  return array === undefined || array.length === 0 ? undefined : array;\n}\n/**\n * See: https://spec.graphql.org/draft/#sec-Errors\n */\n\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n *\n * @deprecated Please use `error.toString` instead. Will be removed in v17\n */\nexport function printError(error) {\n  return error.toString();\n}\n/**\n * Given a GraphQLError, format it according to the rules described by the\n * Response Format, Errors section of the GraphQL Specification.\n *\n * @deprecated Please use `error.toJSON` instead. Will be removed in v17\n */\n\nexport function formatError(error) {\n  return error.toJSON();\n}\n","import { GraphQLError } from './GraphQLError.mjs';\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(`Syntax Error: ${description}`, {\n    source,\n    positions: [position],\n  });\n}\n","import { Kind } from '../language/kinds.mjs';\nimport { isAbstractType } from '../type/definition.mjs';\nimport {\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n} from '../type/directives.mjs';\nimport { typeFromAST } from '../utilities/typeFromAST.mjs';\nimport { getDirectiveValues } from './values.mjs';\n/**\n * Given a selectionSet, collects all of the fields and returns them.\n *\n * CollectFields requires the \"runtime type\" of an object. For a field that\n * returns an Interface or Union type, the \"runtime type\" will be the actual\n * object type returned by that field.\n *\n * @internal\n */\n\nexport function collectFields(\n  schema,\n  fragments,\n  variableValues,\n  runtimeType,\n  selectionSet,\n) {\n  const fields = new Map();\n  collectFieldsImpl(\n    schema,\n    fragments,\n    variableValues,\n    runtimeType,\n    selectionSet,\n    fields,\n    new Set(),\n  );\n  return fields;\n}\n/**\n * Given an array of field nodes, collects all of the subfields of the passed\n * in fields, and returns them at the end.\n *\n * CollectSubFields requires the \"return type\" of an object. For a field that\n * returns an Interface or Union type, the \"return type\" will be the actual\n * object type returned by that field.\n *\n * @internal\n */\n\nexport function collectSubfields(\n  schema,\n  fragments,\n  variableValues,\n  returnType,\n  fieldNodes,\n) {\n  const subFieldNodes = new Map();\n  const visitedFragmentNames = new Set();\n\n  for (const node of fieldNodes) {\n    if (node.selectionSet) {\n      collectFieldsImpl(\n        schema,\n        fragments,\n        variableValues,\n        returnType,\n        node.selectionSet,\n        subFieldNodes,\n        visitedFragmentNames,\n      );\n    }\n  }\n\n  return subFieldNodes;\n}\n\nfunction collectFieldsImpl(\n  schema,\n  fragments,\n  variableValues,\n  runtimeType,\n  selectionSet,\n  fields,\n  visitedFragmentNames,\n) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case Kind.FIELD: {\n        if (!shouldIncludeNode(variableValues, selection)) {\n          continue;\n        }\n\n        const name = getFieldEntryKey(selection);\n        const fieldList = fields.get(name);\n\n        if (fieldList !== undefined) {\n          fieldList.push(selection);\n        } else {\n          fields.set(name, [selection]);\n        }\n\n        break;\n      }\n\n      case Kind.INLINE_FRAGMENT: {\n        if (\n          !shouldIncludeNode(variableValues, selection) ||\n          !doesFragmentConditionMatch(schema, selection, runtimeType)\n        ) {\n          continue;\n        }\n\n        collectFieldsImpl(\n          schema,\n          fragments,\n          variableValues,\n          runtimeType,\n          selection.selectionSet,\n          fields,\n          visitedFragmentNames,\n        );\n        break;\n      }\n\n      case Kind.FRAGMENT_SPREAD: {\n        const fragName = selection.name.value;\n\n        if (\n          visitedFragmentNames.has(fragName) ||\n          !shouldIncludeNode(variableValues, selection)\n        ) {\n          continue;\n        }\n\n        visitedFragmentNames.add(fragName);\n        const fragment = fragments[fragName];\n\n        if (\n          !fragment ||\n          !doesFragmentConditionMatch(schema, fragment, runtimeType)\n        ) {\n          continue;\n        }\n\n        collectFieldsImpl(\n          schema,\n          fragments,\n          variableValues,\n          runtimeType,\n          fragment.selectionSet,\n          fields,\n          visitedFragmentNames,\n        );\n        break;\n      }\n    }\n  }\n}\n/**\n * Determines if a field should be included based on the `@include` and `@skip`\n * directives, where `@skip` has higher precedence than `@include`.\n */\n\nfunction shouldIncludeNode(variableValues, node) {\n  const skip = getDirectiveValues(GraphQLSkipDirective, node, variableValues);\n\n  if ((skip === null || skip === void 0 ? void 0 : skip.if) === true) {\n    return false;\n  }\n\n  const include = getDirectiveValues(\n    GraphQLIncludeDirective,\n    node,\n    variableValues,\n  );\n\n  if (\n    (include === null || include === void 0 ? void 0 : include.if) === false\n  ) {\n    return false;\n  }\n\n  return true;\n}\n/**\n * Determines if a fragment is applicable to the given type.\n */\n\nfunction doesFragmentConditionMatch(schema, fragment, type) {\n  const typeConditionNode = fragment.typeCondition;\n\n  if (!typeConditionNode) {\n    return true;\n  }\n\n  const conditionalType = typeFromAST(schema, typeConditionNode);\n\n  if (conditionalType === type) {\n    return true;\n  }\n\n  if (isAbstractType(conditionalType)) {\n    return schema.isSubType(conditionalType, type);\n  }\n\n  return false;\n}\n/**\n * Implements the logic to compute the key of a given field's entry\n */\n\nfunction getFieldEntryKey(node) {\n  return node.alias ? node.alias.value : node.name.value;\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { printPathArray } from '../jsutils/printPathArray.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport { isInputType, isNonNullType } from '../type/definition.mjs';\nimport { coerceInputValue } from '../utilities/coerceInputValue.mjs';\nimport { typeFromAST } from '../utilities/typeFromAST.mjs';\nimport { valueFromAST } from '../utilities/valueFromAST.mjs';\n\n/**\n * Prepares an object map of variableValues of the correct type based on the\n * provided variable definitions and arbitrary input. If the input cannot be\n * parsed to match the variable definitions, a GraphQLError will be thrown.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\nexport function getVariableValues(schema, varDefNodes, inputs, options) {\n  const errors = [];\n  const maxErrors =\n    options === null || options === void 0 ? void 0 : options.maxErrors;\n\n  try {\n    const coerced = coerceVariableValues(\n      schema,\n      varDefNodes,\n      inputs,\n      (error) => {\n        if (maxErrors != null && errors.length >= maxErrors) {\n          throw new GraphQLError(\n            'Too many errors processing variables, error limit reached. Execution aborted.',\n          );\n        }\n\n        errors.push(error);\n      },\n    );\n\n    if (errors.length === 0) {\n      return {\n        coerced,\n      };\n    }\n  } catch (error) {\n    errors.push(error);\n  }\n\n  return {\n    errors,\n  };\n}\n\nfunction coerceVariableValues(schema, varDefNodes, inputs, onError) {\n  const coercedValues = {};\n\n  for (const varDefNode of varDefNodes) {\n    const varName = varDefNode.variable.name.value;\n    const varType = typeFromAST(schema, varDefNode.type);\n\n    if (!isInputType(varType)) {\n      // Must use input types for variables. This should be caught during\n      // validation, however is checked again here for safety.\n      const varTypeStr = print(varDefNode.type);\n      onError(\n        new GraphQLError(\n          `Variable \"$${varName}\" expected value of type \"${varTypeStr}\" which cannot be used as an input type.`,\n          {\n            nodes: varDefNode.type,\n          },\n        ),\n      );\n      continue;\n    }\n\n    if (!hasOwnProperty(inputs, varName)) {\n      if (varDefNode.defaultValue) {\n        coercedValues[varName] = valueFromAST(varDefNode.defaultValue, varType);\n      } else if (isNonNullType(varType)) {\n        const varTypeStr = inspect(varType);\n        onError(\n          new GraphQLError(\n            `Variable \"$${varName}\" of required type \"${varTypeStr}\" was not provided.`,\n            {\n              nodes: varDefNode,\n            },\n          ),\n        );\n      }\n\n      continue;\n    }\n\n    const value = inputs[varName];\n\n    if (value === null && isNonNullType(varType)) {\n      const varTypeStr = inspect(varType);\n      onError(\n        new GraphQLError(\n          `Variable \"$${varName}\" of non-null type \"${varTypeStr}\" must not be null.`,\n          {\n            nodes: varDefNode,\n          },\n        ),\n      );\n      continue;\n    }\n\n    coercedValues[varName] = coerceInputValue(\n      value,\n      varType,\n      (path, invalidValue, error) => {\n        let prefix =\n          `Variable \"$${varName}\" got invalid value ` + inspect(invalidValue);\n\n        if (path.length > 0) {\n          prefix += ` at \"${varName}${printPathArray(path)}\"`;\n        }\n\n        onError(\n          new GraphQLError(prefix + '; ' + error.message, {\n            nodes: varDefNode,\n            originalError: error.originalError,\n          }),\n        );\n      },\n    );\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a list of argument\n * definitions and list of argument AST nodes.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nexport function getArgumentValues(def, node, variableValues) {\n  var _node$arguments;\n\n  const coercedValues = {}; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n\n  const argumentNodes =\n    (_node$arguments = node.arguments) !== null && _node$arguments !== void 0\n      ? _node$arguments\n      : [];\n  const argNodeMap = keyMap(argumentNodes, (arg) => arg.name.value);\n\n  for (const argDef of def.args) {\n    const name = argDef.name;\n    const argType = argDef.type;\n    const argumentNode = argNodeMap[name];\n\n    if (!argumentNode) {\n      if (argDef.defaultValue !== undefined) {\n        coercedValues[name] = argDef.defaultValue;\n      } else if (isNonNullType(argType)) {\n        throw new GraphQLError(\n          `Argument \"${name}\" of required type \"${inspect(argType)}\" ` +\n            'was not provided.',\n          {\n            nodes: node,\n          },\n        );\n      }\n\n      continue;\n    }\n\n    const valueNode = argumentNode.value;\n    let isNull = valueNode.kind === Kind.NULL;\n\n    if (valueNode.kind === Kind.VARIABLE) {\n      const variableName = valueNode.name.value;\n\n      if (\n        variableValues == null ||\n        !hasOwnProperty(variableValues, variableName)\n      ) {\n        if (argDef.defaultValue !== undefined) {\n          coercedValues[name] = argDef.defaultValue;\n        } else if (isNonNullType(argType)) {\n          throw new GraphQLError(\n            `Argument \"${name}\" of required type \"${inspect(argType)}\" ` +\n              `was provided the variable \"$${variableName}\" which was not provided a runtime value.`,\n            {\n              nodes: valueNode,\n            },\n          );\n        }\n\n        continue;\n      }\n\n      isNull = variableValues[variableName] == null;\n    }\n\n    if (isNull && isNonNullType(argType)) {\n      throw new GraphQLError(\n        `Argument \"${name}\" of non-null type \"${inspect(argType)}\" ` +\n          'must not be null.',\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const coercedValue = valueFromAST(valueNode, argType, variableValues);\n\n    if (coercedValue === undefined) {\n      // Note: ValuesOfCorrectTypeRule validation should catch this before\n      // execution. This is a runtime check to ensure execution does not\n      // continue with an invalid argument value.\n      throw new GraphQLError(\n        `Argument \"${name}\" has invalid value ${print(valueNode)}.`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    coercedValues[name] = coercedValue;\n  }\n\n  return coercedValues;\n}\n/**\n * Prepares an object map of argument values given a directive definition\n * and a AST node which may contain directives. Optionally also accepts a map\n * of variable values.\n *\n * If the directive does not exist on the node, returns undefined.\n *\n * Note: The returned value is a plain Object with a prototype, since it is\n * exposed to user code. Care should be taken to not pull values from the\n * Object prototype.\n */\n\nexport function getDirectiveValues(directiveDef, node, variableValues) {\n  var _node$directives;\n\n  const directiveNode =\n    (_node$directives = node.directives) === null || _node$directives === void 0\n      ? void 0\n      : _node$directives.find(\n          (directive) => directive.name.value === directiveDef.name,\n        );\n\n  if (directiveNode) {\n    return getArgumentValues(directiveDef, directiveNode, variableValues);\n  }\n}\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","// Note: This file is autogenerated using \"resources/gen-version.js\" script and\n// automatically updated by \"npm version\" command.\n\n/**\n * A string containing the version of the GraphQL.js library\n */\nexport const version = '16.5.0';\n/**\n * An object containing the components of the GraphQL.js version string\n */\n\nexport const versionInfo = Object.freeze({\n  major: 16,\n  minor: 5,\n  patch: 0,\n  preReleaseTag: null,\n});\n","/**\n * Returns true if the value acts like a Promise, i.e. has a \"then\" function,\n * otherwise returns false.\n */\nexport function isPromise(value) {\n  return (\n    typeof (value === null || value === void 0 ? void 0 : value.then) ===\n    'function'\n  );\n}\n","import { inspect } from './inspect.mjs';\n/**\n * Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.\n */\n\nexport function toError(thrownValue) {\n  return thrownValue instanceof Error\n    ? thrownValue\n    : new NonErrorThrown(thrownValue);\n}\n\nclass NonErrorThrown extends Error {\n  constructor(thrownValue) {\n    super('Unexpected error value: ' + inspect(thrownValue));\n    this.name = 'NonErrorThrown';\n    this.thrownValue = thrownValue;\n  }\n}\n","import { toError } from '../jsutils/toError.mjs';\nimport { GraphQLError } from './GraphQLError.mjs';\n/**\n * Given an arbitrary value, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\n\nexport function locatedError(rawOriginalError, nodes, path) {\n  var _nodes;\n\n  const originalError = toError(rawOriginalError); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.\n\n  if (isLocatedGraphQLError(originalError)) {\n    return originalError;\n  }\n\n  return new GraphQLError(originalError.message, {\n    nodes:\n      (_nodes = originalError.nodes) !== null && _nodes !== void 0\n        ? _nodes\n        : nodes,\n    source: originalError.source,\n    positions: originalError.positions,\n    path,\n    originalError,\n  });\n}\n\nfunction isLocatedGraphQLError(error) {\n  return Array.isArray(error.path);\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { isIterableObject } from '../jsutils/isIterableObject.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { isPromise } from '../jsutils/isPromise.mjs';\nimport { memoize3 } from '../jsutils/memoize3.mjs';\nimport { addPath, pathToArray } from '../jsutils/Path.mjs';\nimport { promiseForObject } from '../jsutils/promiseForObject.mjs';\nimport { promiseReduce } from '../jsutils/promiseReduce.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { locatedError } from '../error/locatedError.mjs';\nimport { OperationTypeNode } from '../language/ast.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport {\n  isAbstractType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n} from '../type/definition.mjs';\nimport {\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef,\n} from '../type/introspection.mjs';\nimport { assertValidSchema } from '../type/validate.mjs';\nimport {\n  collectFields,\n  collectSubfields as _collectSubfields,\n} from './collectFields.mjs';\nimport { getArgumentValues, getVariableValues } from './values.mjs';\n/**\n * A memoized collection of relevant subfields with regard to the return\n * type. Memoizing ensures the subfields are not repeatedly calculated, which\n * saves overhead when resolving lists of values.\n */\n\nconst collectSubfields = memoize3((exeContext, returnType, fieldNodes) =>\n  _collectSubfields(\n    exeContext.schema,\n    exeContext.fragments,\n    exeContext.variableValues,\n    returnType,\n    fieldNodes,\n  ),\n);\n/**\n * Terminology\n *\n * \"Definitions\" are the generic name for top-level statements in the document.\n * Examples of this include:\n * 1) Operations (such as a query)\n * 2) Fragments\n *\n * \"Operations\" are a generic name for requests in the document.\n * Examples of this include:\n * 1) query,\n * 2) mutation\n *\n * \"Selections\" are the definitions that can appear legally and at\n * single level of the query. These include:\n * 1) field references e.g `a`\n * 2) fragment \"spreads\" e.g. `...c`\n * 3) inline fragment \"spreads\" e.g. `...on Type { a }`\n */\n\n/**\n * Data that must be available at all points during query execution.\n *\n * Namely, schema of the type system that is currently executing,\n * and the fragments defined in the query document\n */\n\n/**\n * Implements the \"Executing requests\" section of the GraphQL specification.\n *\n * Returns either a synchronous ExecutionResult (if all encountered resolvers\n * are synchronous), or a Promise of an ExecutionResult that will eventually be\n * resolved and never rejected.\n *\n * If the arguments to this function do not result in a legal execution context,\n * a GraphQLError will be thrown immediately explaining the invalid input.\n */\nexport function execute(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 ||\n    devAssert(\n      false,\n      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',\n    );\n  const { schema, document, variableValues, rootValue } = args; // If arguments are missing or incorrect, throw an error.\n\n  assertValidExecutionArguments(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n\n  const exeContext = buildExecutionContext(args); // Return early errors if execution context failed.\n\n  if (!('schema' in exeContext)) {\n    return {\n      errors: exeContext,\n    };\n  } // Return a Promise that will eventually resolve to the data described by\n  // The \"Response\" section of the GraphQL specification.\n  //\n  // If errors are encountered while executing a GraphQL field, only that\n  // field and its descendants will be omitted, and sibling fields will still\n  // be executed. An execution which encounters errors will still result in a\n  // resolved Promise.\n  //\n  // Errors from sub-fields of a NonNull type may propagate to the top level,\n  // at which point we still log the error and null the parent field, which\n  // in this case is the entire response.\n\n  try {\n    const { operation } = exeContext;\n    const result = executeOperation(exeContext, operation, rootValue);\n\n    if (isPromise(result)) {\n      return result.then(\n        (data) => buildResponse(data, exeContext.errors),\n        (error) => {\n          exeContext.errors.push(error);\n          return buildResponse(null, exeContext.errors);\n        },\n      );\n    }\n\n    return buildResponse(result, exeContext.errors);\n  } catch (error) {\n    exeContext.errors.push(error);\n    return buildResponse(null, exeContext.errors);\n  }\n}\n/**\n * Also implements the \"Executing requests\" section of the GraphQL specification.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nexport function executeSync(args) {\n  const result = execute(args); // Assert that the execution was synchronous.\n\n  if (isPromise(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n/**\n * Given a completed execution context and data, build the `{ errors, data }`\n * response defined by the \"Response\" section of the GraphQL specification.\n */\n\nfunction buildResponse(data, errors) {\n  return errors.length === 0\n    ? {\n        data,\n      }\n    : {\n        errors,\n        data,\n      };\n}\n/**\n * Essential assertions before executing to provide developer feedback for\n * improper use of the GraphQL library.\n *\n * @internal\n */\n\nexport function assertValidExecutionArguments(\n  schema,\n  document,\n  rawVariableValues,\n) {\n  document || devAssert(false, 'Must provide document.'); // If the schema used for execution is invalid, throw an error.\n\n  assertValidSchema(schema); // Variables, if provided, must be an object.\n\n  rawVariableValues == null ||\n    isObjectLike(rawVariableValues) ||\n    devAssert(\n      false,\n      'Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.',\n    );\n}\n/**\n * Constructs a ExecutionContext object from the arguments passed to\n * execute, which we will pass throughout the other execution methods.\n *\n * Throws a GraphQLError if a valid execution context cannot be created.\n *\n * @internal\n */\n\nexport function buildExecutionContext(args) {\n  var _definition$name, _operation$variableDe;\n\n  const {\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues: rawVariableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n    subscribeFieldResolver,\n  } = args;\n  let operation;\n  const fragments = Object.create(null);\n\n  for (const definition of document.definitions) {\n    switch (definition.kind) {\n      case Kind.OPERATION_DEFINITION:\n        if (operationName == null) {\n          if (operation !== undefined) {\n            return [\n              new GraphQLError(\n                'Must provide operation name if query contains multiple operations.',\n              ),\n            ];\n          }\n\n          operation = definition;\n        } else if (\n          ((_definition$name = definition.name) === null ||\n          _definition$name === void 0\n            ? void 0\n            : _definition$name.value) === operationName\n        ) {\n          operation = definition;\n        }\n\n        break;\n\n      case Kind.FRAGMENT_DEFINITION:\n        fragments[definition.name.value] = definition;\n        break;\n\n      default: // ignore non-executable definitions\n    }\n  }\n\n  if (!operation) {\n    if (operationName != null) {\n      return [new GraphQLError(`Unknown operation named \"${operationName}\".`)];\n    }\n\n    return [new GraphQLError('Must provide an operation.')];\n  } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n\n  const variableDefinitions =\n    (_operation$variableDe = operation.variableDefinitions) !== null &&\n    _operation$variableDe !== void 0\n      ? _operation$variableDe\n      : [];\n  const coercedVariableValues = getVariableValues(\n    schema,\n    variableDefinitions,\n    rawVariableValues !== null && rawVariableValues !== void 0\n      ? rawVariableValues\n      : {},\n    {\n      maxErrors: 50,\n    },\n  );\n\n  if (coercedVariableValues.errors) {\n    return coercedVariableValues.errors;\n  }\n\n  return {\n    schema,\n    fragments,\n    rootValue,\n    contextValue,\n    operation,\n    variableValues: coercedVariableValues.coerced,\n    fieldResolver:\n      fieldResolver !== null && fieldResolver !== void 0\n        ? fieldResolver\n        : defaultFieldResolver,\n    typeResolver:\n      typeResolver !== null && typeResolver !== void 0\n        ? typeResolver\n        : defaultTypeResolver,\n    subscribeFieldResolver:\n      subscribeFieldResolver !== null && subscribeFieldResolver !== void 0\n        ? subscribeFieldResolver\n        : defaultFieldResolver,\n    errors: [],\n  };\n}\n/**\n * Implements the \"Executing operations\" section of the spec.\n */\n\nfunction executeOperation(exeContext, operation, rootValue) {\n  const rootType = exeContext.schema.getRootType(operation.operation);\n\n  if (rootType == null) {\n    throw new GraphQLError(\n      `Schema is not configured to execute ${operation.operation} operation.`,\n      {\n        nodes: operation,\n      },\n    );\n  }\n\n  const rootFields = collectFields(\n    exeContext.schema,\n    exeContext.fragments,\n    exeContext.variableValues,\n    rootType,\n    operation.selectionSet,\n  );\n  const path = undefined;\n\n  switch (operation.operation) {\n    case OperationTypeNode.QUERY:\n      return executeFields(exeContext, rootType, rootValue, path, rootFields);\n\n    case OperationTypeNode.MUTATION:\n      return executeFieldsSerially(\n        exeContext,\n        rootType,\n        rootValue,\n        path,\n        rootFields,\n      );\n\n    case OperationTypeNode.SUBSCRIPTION:\n      // TODO: deprecate `subscribe` and move all logic here\n      // Temporary solution until we finish merging execute and subscribe together\n      return executeFields(exeContext, rootType, rootValue, path, rootFields);\n  }\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that must be executed serially.\n */\n\nfunction executeFieldsSerially(\n  exeContext,\n  parentType,\n  sourceValue,\n  path,\n  fields,\n) {\n  return promiseReduce(\n    fields.entries(),\n    (results, [responseName, fieldNodes]) => {\n      const fieldPath = addPath(path, responseName, parentType.name);\n      const result = executeField(\n        exeContext,\n        parentType,\n        sourceValue,\n        fieldNodes,\n        fieldPath,\n      );\n\n      if (result === undefined) {\n        return results;\n      }\n\n      if (isPromise(result)) {\n        return result.then((resolvedResult) => {\n          results[responseName] = resolvedResult;\n          return results;\n        });\n      }\n\n      results[responseName] = result;\n      return results;\n    },\n    Object.create(null),\n  );\n}\n/**\n * Implements the \"Executing selection sets\" section of the spec\n * for fields that may be executed in parallel.\n */\n\nfunction executeFields(exeContext, parentType, sourceValue, path, fields) {\n  const results = Object.create(null);\n  let containsPromise = false;\n\n  for (const [responseName, fieldNodes] of fields.entries()) {\n    const fieldPath = addPath(path, responseName, parentType.name);\n    const result = executeField(\n      exeContext,\n      parentType,\n      sourceValue,\n      fieldNodes,\n      fieldPath,\n    );\n\n    if (result !== undefined) {\n      results[responseName] = result;\n\n      if (isPromise(result)) {\n        containsPromise = true;\n      }\n    }\n  } // If there are no promises, we can just return the object\n\n  if (!containsPromise) {\n    return results;\n  } // Otherwise, results is a map from field name to the result of resolving that\n  // field, which is possibly a promise. Return a promise that will return this\n  // same map, but with any promises replaced with the values they resolved to.\n\n  return promiseForObject(results);\n}\n/**\n * Implements the \"Executing fields\" section of the spec\n * In particular, this function figures out the value that the field returns by\n * calling its resolve function, then calls completeValue to complete promises,\n * serialize scalars, or execute the sub-selection-set for objects.\n */\n\nfunction executeField(exeContext, parentType, source, fieldNodes, path) {\n  var _fieldDef$resolve;\n\n  const fieldDef = getFieldDef(exeContext.schema, parentType, fieldNodes[0]);\n\n  if (!fieldDef) {\n    return;\n  }\n\n  const returnType = fieldDef.type;\n  const resolveFn =\n    (_fieldDef$resolve = fieldDef.resolve) !== null &&\n    _fieldDef$resolve !== void 0\n      ? _fieldDef$resolve\n      : exeContext.fieldResolver;\n  const info = buildResolveInfo(\n    exeContext,\n    fieldDef,\n    fieldNodes,\n    parentType,\n    path,\n  ); // Get the resolve function, regardless of if its result is normal or abrupt (error).\n\n  try {\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    // TODO: find a way to memoize, in case this field is within a List type.\n    const args = getArgumentValues(\n      fieldDef,\n      fieldNodes[0],\n      exeContext.variableValues,\n    ); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    const contextValue = exeContext.contextValue;\n    const result = resolveFn(source, args, contextValue, info);\n    let completed;\n\n    if (isPromise(result)) {\n      completed = result.then((resolved) =>\n        completeValue(exeContext, returnType, fieldNodes, info, path, resolved),\n      );\n    } else {\n      completed = completeValue(\n        exeContext,\n        returnType,\n        fieldNodes,\n        info,\n        path,\n        result,\n      );\n    }\n\n    if (isPromise(completed)) {\n      // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n      // to take a second callback for the error case.\n      return completed.then(undefined, (rawError) => {\n        const error = locatedError(rawError, fieldNodes, pathToArray(path));\n        return handleFieldError(error, returnType, exeContext);\n      });\n    }\n\n    return completed;\n  } catch (rawError) {\n    const error = locatedError(rawError, fieldNodes, pathToArray(path));\n    return handleFieldError(error, returnType, exeContext);\n  }\n}\n/**\n * @internal\n */\n\nexport function buildResolveInfo(\n  exeContext,\n  fieldDef,\n  fieldNodes,\n  parentType,\n  path,\n) {\n  // The resolve function's optional fourth argument is a collection of\n  // information about the current execution state.\n  return {\n    fieldName: fieldDef.name,\n    fieldNodes,\n    returnType: fieldDef.type,\n    parentType,\n    path,\n    schema: exeContext.schema,\n    fragments: exeContext.fragments,\n    rootValue: exeContext.rootValue,\n    operation: exeContext.operation,\n    variableValues: exeContext.variableValues,\n  };\n}\n\nfunction handleFieldError(error, returnType, exeContext) {\n  // If the field type is non-nullable, then it is resolved without any\n  // protection from errors, however it still properly locates the error.\n  if (isNonNullType(returnType)) {\n    throw error;\n  } // Otherwise, error protection is applied, logging the error and resolving\n  // a null value for this field if one is encountered.\n\n  exeContext.errors.push(error);\n  return null;\n}\n/**\n * Implements the instructions for completeValue as defined in the\n * \"Value Completion\" section of the spec.\n *\n * If the field type is Non-Null, then this recursively completes the value\n * for the inner type. It throws a field error if that completion returns null,\n * as per the \"Nullability\" section of the spec.\n *\n * If the field type is a List, then this recursively completes the value\n * for the inner type on each item in the list.\n *\n * If the field type is a Scalar or Enum, ensures the completed value is a legal\n * value of the type by calling the `serialize` method of GraphQL type\n * definition.\n *\n * If the field is an abstract type, determine the runtime type of the value\n * and then complete based on that type\n *\n * Otherwise, the field type expects a sub-selection set, and will complete the\n * value by executing all sub-selections.\n */\n\nfunction completeValue(exeContext, returnType, fieldNodes, info, path, result) {\n  // If result is an Error, throw a located error.\n  if (result instanceof Error) {\n    throw result;\n  } // If field type is NonNull, complete for inner type, and throw field error\n  // if result is null.\n\n  if (isNonNullType(returnType)) {\n    const completed = completeValue(\n      exeContext,\n      returnType.ofType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n\n    if (completed === null) {\n      throw new Error(\n        `Cannot return null for non-nullable field ${info.parentType.name}.${info.fieldName}.`,\n      );\n    }\n\n    return completed;\n  } // If result value is null or undefined then return null.\n\n  if (result == null) {\n    return null;\n  } // If field type is List, complete each item in the list with the inner type\n\n  if (isListType(returnType)) {\n    return completeListValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  } // If field type is a leaf type, Scalar or Enum, serialize to a valid value,\n  // returning null if serialization is not possible.\n\n  if (isLeafType(returnType)) {\n    return completeLeafValue(returnType, result);\n  } // If field type is an abstract type, Interface or Union, determine the\n  // runtime Object type and complete for that type.\n\n  if (isAbstractType(returnType)) {\n    return completeAbstractValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  } // If field type is Object, execute and complete all sub-selections.\n\n  if (isObjectType(returnType)) {\n    return completeObjectValue(\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      path,\n      result,\n    );\n  }\n  /* c8 ignore next 6 */\n  // Not reachable, all possible output types have been considered.\n\n  false ||\n    invariant(\n      false,\n      'Cannot complete value of unexpected output type: ' + inspect(returnType),\n    );\n}\n/**\n * Complete a list value by completing each item in the list with the\n * inner type\n */\n\nfunction completeListValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  if (!isIterableObject(result)) {\n    throw new GraphQLError(\n      `Expected Iterable, but did not find one for field \"${info.parentType.name}.${info.fieldName}\".`,\n    );\n  } // This is specified as a simple map, however we're optimizing the path\n  // where the list contains no Promises by avoiding creating another Promise.\n\n  const itemType = returnType.ofType;\n  let containsPromise = false;\n  const completedResults = Array.from(result, (item, index) => {\n    // No need to modify the info object containing the path,\n    // since from here on it is not ever accessed by resolver functions.\n    const itemPath = addPath(path, index, undefined);\n\n    try {\n      let completedItem;\n\n      if (isPromise(item)) {\n        completedItem = item.then((resolved) =>\n          completeValue(\n            exeContext,\n            itemType,\n            fieldNodes,\n            info,\n            itemPath,\n            resolved,\n          ),\n        );\n      } else {\n        completedItem = completeValue(\n          exeContext,\n          itemType,\n          fieldNodes,\n          info,\n          itemPath,\n          item,\n        );\n      }\n\n      if (isPromise(completedItem)) {\n        containsPromise = true; // Note: we don't rely on a `catch` method, but we do expect \"thenable\"\n        // to take a second callback for the error case.\n\n        return completedItem.then(undefined, (rawError) => {\n          const error = locatedError(\n            rawError,\n            fieldNodes,\n            pathToArray(itemPath),\n          );\n          return handleFieldError(error, itemType, exeContext);\n        });\n      }\n\n      return completedItem;\n    } catch (rawError) {\n      const error = locatedError(rawError, fieldNodes, pathToArray(itemPath));\n      return handleFieldError(error, itemType, exeContext);\n    }\n  });\n  return containsPromise ? Promise.all(completedResults) : completedResults;\n}\n/**\n * Complete a Scalar or Enum by serializing to a valid value, returning\n * null if serialization is not possible.\n */\n\nfunction completeLeafValue(returnType, result) {\n  const serializedResult = returnType.serialize(result);\n\n  if (serializedResult == null) {\n    throw new Error(\n      `Expected \\`${inspect(returnType)}.serialize(${inspect(result)})\\` to ` +\n        `return non-nullable value, returned: ${inspect(serializedResult)}`,\n    );\n  }\n\n  return serializedResult;\n}\n/**\n * Complete a value of an abstract type by determining the runtime object type\n * of that value, then complete the value for that type.\n */\n\nfunction completeAbstractValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  var _returnType$resolveTy;\n\n  const resolveTypeFn =\n    (_returnType$resolveTy = returnType.resolveType) !== null &&\n    _returnType$resolveTy !== void 0\n      ? _returnType$resolveTy\n      : exeContext.typeResolver;\n  const contextValue = exeContext.contextValue;\n  const runtimeType = resolveTypeFn(result, contextValue, info, returnType);\n\n  if (isPromise(runtimeType)) {\n    return runtimeType.then((resolvedRuntimeType) =>\n      completeObjectValue(\n        exeContext,\n        ensureValidRuntimeType(\n          resolvedRuntimeType,\n          exeContext,\n          returnType,\n          fieldNodes,\n          info,\n          result,\n        ),\n        fieldNodes,\n        info,\n        path,\n        result,\n      ),\n    );\n  }\n\n  return completeObjectValue(\n    exeContext,\n    ensureValidRuntimeType(\n      runtimeType,\n      exeContext,\n      returnType,\n      fieldNodes,\n      info,\n      result,\n    ),\n    fieldNodes,\n    info,\n    path,\n    result,\n  );\n}\n\nfunction ensureValidRuntimeType(\n  runtimeTypeName,\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  result,\n) {\n  if (runtimeTypeName == null) {\n    throw new GraphQLError(\n      `Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\". Either the \"${returnType.name}\" type should provide a \"resolveType\" function or each possible type should provide an \"isTypeOf\" function.`,\n      fieldNodes,\n    );\n  } // releases before 16.0.0 supported returning `GraphQLObjectType` from `resolveType`\n  // TODO: remove in 17.0.0 release\n\n  if (isObjectType(runtimeTypeName)) {\n    throw new GraphQLError(\n      'Support for returning GraphQLObjectType from resolveType was removed in graphql-js@16.0.0 please return type name instead.',\n    );\n  }\n\n  if (typeof runtimeTypeName !== 'string') {\n    throw new GraphQLError(\n      `Abstract type \"${returnType.name}\" must resolve to an Object type at runtime for field \"${info.parentType.name}.${info.fieldName}\" with ` +\n        `value ${inspect(result)}, received \"${inspect(runtimeTypeName)}\".`,\n    );\n  }\n\n  const runtimeType = exeContext.schema.getType(runtimeTypeName);\n\n  if (runtimeType == null) {\n    throw new GraphQLError(\n      `Abstract type \"${returnType.name}\" was resolved to a type \"${runtimeTypeName}\" that does not exist inside the schema.`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  if (!isObjectType(runtimeType)) {\n    throw new GraphQLError(\n      `Abstract type \"${returnType.name}\" was resolved to a non-object type \"${runtimeTypeName}\".`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  if (!exeContext.schema.isSubType(returnType, runtimeType)) {\n    throw new GraphQLError(\n      `Runtime Object type \"${runtimeType.name}\" is not a possible type for \"${returnType.name}\".`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  return runtimeType;\n}\n/**\n * Complete an Object value by executing all sub-selections.\n */\n\nfunction completeObjectValue(\n  exeContext,\n  returnType,\n  fieldNodes,\n  info,\n  path,\n  result,\n) {\n  // Collect sub-fields to execute to complete this value.\n  const subFieldNodes = collectSubfields(exeContext, returnType, fieldNodes); // If there is an isTypeOf predicate function, call it with the\n  // current result. If isTypeOf returns false, then raise an error rather\n  // than continuing execution.\n\n  if (returnType.isTypeOf) {\n    const isTypeOf = returnType.isTypeOf(result, exeContext.contextValue, info);\n\n    if (isPromise(isTypeOf)) {\n      return isTypeOf.then((resolvedIsTypeOf) => {\n        if (!resolvedIsTypeOf) {\n          throw invalidReturnTypeError(returnType, result, fieldNodes);\n        }\n\n        return executeFields(\n          exeContext,\n          returnType,\n          result,\n          path,\n          subFieldNodes,\n        );\n      });\n    }\n\n    if (!isTypeOf) {\n      throw invalidReturnTypeError(returnType, result, fieldNodes);\n    }\n  }\n\n  return executeFields(exeContext, returnType, result, path, subFieldNodes);\n}\n\nfunction invalidReturnTypeError(returnType, result, fieldNodes) {\n  return new GraphQLError(\n    `Expected value of type \"${returnType.name}\" but got: ${inspect(result)}.`,\n    {\n      nodes: fieldNodes,\n    },\n  );\n}\n/**\n * If a resolveType function is not given, then a default resolve behavior is\n * used which attempts two strategies:\n *\n * First, See if the provided value has a `__typename` field defined, if so, use\n * that value as name of the resolved type.\n *\n * Otherwise, test each possible type for the abstract type by calling\n * isTypeOf for the object being coerced, returning the first type that matches.\n */\n\nexport const defaultTypeResolver = function (\n  value,\n  contextValue,\n  info,\n  abstractType,\n) {\n  // First, look for `__typename`.\n  if (isObjectLike(value) && typeof value.__typename === 'string') {\n    return value.__typename;\n  } // Otherwise, test each possible type.\n\n  const possibleTypes = info.schema.getPossibleTypes(abstractType);\n  const promisedIsTypeOfResults = [];\n\n  for (let i = 0; i < possibleTypes.length; i++) {\n    const type = possibleTypes[i];\n\n    if (type.isTypeOf) {\n      const isTypeOfResult = type.isTypeOf(value, contextValue, info);\n\n      if (isPromise(isTypeOfResult)) {\n        promisedIsTypeOfResults[i] = isTypeOfResult;\n      } else if (isTypeOfResult) {\n        return type.name;\n      }\n    }\n  }\n\n  if (promisedIsTypeOfResults.length) {\n    return Promise.all(promisedIsTypeOfResults).then((isTypeOfResults) => {\n      for (let i = 0; i < isTypeOfResults.length; i++) {\n        if (isTypeOfResults[i]) {\n          return possibleTypes[i].name;\n        }\n      }\n    });\n  }\n};\n/**\n * If a resolve function is not given, then a default resolve behavior is used\n * which takes the property of the source object of the same name as the field\n * and returns it as the result, or if it's a function, returns the result\n * of calling that function while passing along args and context value.\n */\n\nexport const defaultFieldResolver = function (\n  source,\n  args,\n  contextValue,\n  info,\n) {\n  // ensure source is a value for which property access is acceptable.\n  if (isObjectLike(source) || typeof source === 'function') {\n    const property = source[info.fieldName];\n\n    if (typeof property === 'function') {\n      return source[info.fieldName](args, contextValue, info);\n    }\n\n    return property;\n  }\n};\n/**\n * This method looks up the field on the given type definition.\n * It has special casing for the three introspection fields,\n * __schema, __type and __typename. __typename is special because\n * it can always be queried as a field, even in situations where no\n * other fields are allowed, like on a Union. __schema and __type\n * could get automatically added to the query type, but that would\n * require mutating type definitions, which would cause issues.\n *\n * @internal\n */\n\nexport function getFieldDef(schema, parentType, fieldNode) {\n  const fieldName = fieldNode.name.value;\n\n  if (\n    fieldName === SchemaMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return SchemaMetaFieldDef;\n  } else if (\n    fieldName === TypeMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return TypeMetaFieldDef;\n  } else if (fieldName === TypeNameMetaFieldDef.name) {\n    return TypeNameMetaFieldDef;\n  }\n\n  return parentType.getFields()[fieldName];\n}\n","/**\n * Memoizes the provided three-argument function.\n */\nexport function memoize3(fn) {\n  let cache0;\n  return function memoized(a1, a2, a3) {\n    if (cache0 === undefined) {\n      cache0 = new WeakMap();\n    }\n\n    let cache1 = cache0.get(a1);\n\n    if (cache1 === undefined) {\n      cache1 = new WeakMap();\n      cache0.set(a1, cache1);\n    }\n\n    let cache2 = cache1.get(a2);\n\n    if (cache2 === undefined) {\n      cache2 = new WeakMap();\n      cache1.set(a2, cache2);\n    }\n\n    let fnResult = cache2.get(a3);\n\n    if (fnResult === undefined) {\n      fnResult = fn(a1, a2, a3);\n      cache2.set(a3, fnResult);\n    }\n\n    return fnResult;\n  };\n}\n","import { isPromise } from './isPromise.mjs';\n\n/**\n * Similar to Array.prototype.reduce(), however the reducing callback may return\n * a Promise, in which case reduction will continue after each promise resolves.\n *\n * If the callback does not return a Promise, then this function will also not\n * return a Promise.\n */\nexport function promiseReduce(values, callbackFn, initialValue) {\n  let accumulator = initialValue;\n\n  for (const value of values) {\n    accumulator = isPromise(accumulator)\n      ? accumulator.then((resolved) => callbackFn(resolved, value))\n      : callbackFn(accumulator, value);\n  }\n\n  return accumulator;\n}\n","/**\n * This function transforms a JS object `ObjMap<Promise<T>>` into\n * a `Promise<ObjMap<T>>`\n *\n * This is akin to bluebird's `Promise.props`, but implemented only using\n * `Promise.all` so it will work with any implementation of ES6 promises.\n */\nexport function promiseForObject(object) {\n  return Promise.all(Object.values(object)).then((resolvedValues) => {\n    const resolvedObject = Object.create(null);\n\n    for (const [i, key] of Object.keys(object).entries()) {\n      resolvedObject[key] = resolvedValues[i];\n    }\n\n    return resolvedObject;\n  });\n}\n","import { devAssert } from './jsutils/devAssert.mjs';\nimport { isPromise } from './jsutils/isPromise.mjs';\nimport { parse } from './language/parser.mjs';\nimport { validateSchema } from './type/validate.mjs';\nimport { validate } from './validation/validate.mjs';\nimport { execute } from './execution/execute.mjs';\n/**\n * This is the primary entry point function for fulfilling GraphQL operations\n * by parsing, validating, and executing a GraphQL document along side a\n * GraphQL schema.\n *\n * More sophisticated GraphQL servers, such as those which persist queries,\n * may wish to separate the validation and execution phases to a static time\n * tooling step, and a server runtime step.\n *\n * Accepts either an object with named arguments, or individual arguments:\n *\n * schema:\n *    The GraphQL type system to use when validating and executing a query.\n * source:\n *    A GraphQL language formatted string representing the requested operation.\n * rootValue:\n *    The value provided as the first argument to resolver functions on the top\n *    level type (e.g. the query object type).\n * contextValue:\n *    The context value is provided as an argument to resolver functions after\n *    field arguments. It is used to pass shared information useful at any point\n *    during executing this query, for example the currently logged in user and\n *    connections to databases or other services.\n * variableValues:\n *    A mapping of variable name to runtime value to use for all variables\n *    defined in the requestString.\n * operationName:\n *    The name of the operation to use if requestString contains multiple\n *    possible operations. Can be omitted if requestString contains only\n *    one operation.\n * fieldResolver:\n *    A resolver function to use when one is not provided by the schema.\n *    If not provided, the default field resolver is used (which looks for a\n *    value or method on the source value with the field's name).\n * typeResolver:\n *    A type resolver function to use when none is provided by the schema.\n *    If not provided, the default type resolver is used (which looks for a\n *    `__typename` field or alternatively calls the `isTypeOf` method).\n */\n\nexport function graphql(args) {\n  // Always return a Promise for a consistent API.\n  return new Promise((resolve) => resolve(graphqlImpl(args)));\n}\n/**\n * The graphqlSync function also fulfills GraphQL operations by parsing,\n * validating, and executing a GraphQL document along side a GraphQL schema.\n * However, it guarantees to complete synchronously (or throw an error) assuming\n * that all field resolvers are also synchronous.\n */\n\nexport function graphqlSync(args) {\n  const result = graphqlImpl(args); // Assert that the execution was synchronous.\n\n  if (isPromise(result)) {\n    throw new Error('GraphQL execution failed to complete synchronously.');\n  }\n\n  return result;\n}\n\nfunction graphqlImpl(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 ||\n    devAssert(\n      false,\n      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',\n    );\n  const {\n    schema,\n    source,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n  } = args; // Validate Schema\n\n  const schemaValidationErrors = validateSchema(schema);\n\n  if (schemaValidationErrors.length > 0) {\n    return {\n      errors: schemaValidationErrors,\n    };\n  } // Parse\n\n  let document;\n\n  try {\n    document = parse(source);\n  } catch (syntaxError) {\n    return {\n      errors: [syntaxError],\n    };\n  } // Validate\n\n  const validationErrors = validate(schema, document);\n\n  if (validationErrors.length > 0) {\n    return {\n      errors: validationErrors,\n    };\n  } // Execute\n\n  return execute({\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    fieldResolver,\n    typeResolver,\n  });\n}\n","/**\n * Returns true if the provided object implements the AsyncIterator protocol via\n * implementing a `Symbol.asyncIterator` method.\n */\nexport function isAsyncIterable(maybeAsyncIterable) {\n  return (\n    typeof (maybeAsyncIterable === null || maybeAsyncIterable === void 0\n      ? void 0\n      : maybeAsyncIterable[Symbol.asyncIterator]) === 'function'\n  );\n}\n","/**\n * Given an AsyncIterable and a callback function, return an AsyncIterator\n * which produces values mapped via calling the callback function.\n */\nexport function mapAsyncIterator(iterable, callback) {\n  const iterator = iterable[Symbol.asyncIterator]();\n\n  async function mapResult(result) {\n    if (result.done) {\n      return result;\n    }\n\n    try {\n      return {\n        value: await callback(result.value),\n        done: false,\n      };\n    } catch (error) {\n      /* c8 ignore start */\n      // FIXME: add test case\n      if (typeof iterator.return === 'function') {\n        try {\n          await iterator.return();\n        } catch (_e) {\n          /* ignore error */\n        }\n      }\n\n      throw error;\n      /* c8 ignore stop */\n    }\n  }\n\n  return {\n    async next() {\n      return mapResult(await iterator.next());\n    },\n\n    async return() {\n      // If iterator.return() does not exist, then type R must be undefined.\n      return typeof iterator.return === 'function'\n        ? mapResult(await iterator.return())\n        : {\n            value: undefined,\n            done: true,\n          };\n    },\n\n    async throw(error) {\n      if (typeof iterator.throw === 'function') {\n        return mapResult(await iterator.throw(error));\n      }\n\n      throw error;\n    },\n\n    [Symbol.asyncIterator]() {\n      return this;\n    },\n  };\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isAsyncIterable } from '../jsutils/isAsyncIterable.mjs';\nimport { addPath, pathToArray } from '../jsutils/Path.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { locatedError } from '../error/locatedError.mjs';\nimport { collectFields } from './collectFields.mjs';\nimport {\n  assertValidExecutionArguments,\n  buildExecutionContext,\n  buildResolveInfo,\n  execute,\n  getFieldDef,\n} from './execute.mjs';\nimport { mapAsyncIterator } from './mapAsyncIterator.mjs';\nimport { getArgumentValues } from './values.mjs';\n/**\n * Implements the \"Subscribe\" algorithm described in the GraphQL specification.\n *\n * Returns a Promise which resolves to either an AsyncIterator (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with\n * descriptive errors and no data will be returned.\n *\n * If the source stream could not be created due to faulty subscription\n * resolver logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to an AsyncIterator, which\n * yields a stream of ExecutionResults representing the response stream.\n *\n * Accepts either an object with named arguments, or individual arguments.\n */\n\nexport async function subscribe(args) {\n  // Temporary for v15 to v16 migration. Remove in v17\n  arguments.length < 2 ||\n    devAssert(\n      false,\n      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',\n    );\n  const {\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    fieldResolver,\n    subscribeFieldResolver,\n  } = args;\n  const resultOrStream = await createSourceEventStream(\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    subscribeFieldResolver,\n  );\n\n  if (!isAsyncIterable(resultOrStream)) {\n    return resultOrStream;\n  } // For each payload yielded from a subscription, map it over the normal\n  // GraphQL `execute` function, with `payload` as the rootValue.\n  // This implements the \"MapSourceToResponseEvent\" algorithm described in\n  // the GraphQL specification. The `execute` function provides the\n  // \"ExecuteSubscriptionEvent\" algorithm, as it is nearly identical to the\n  // \"ExecuteQuery\" algorithm, for which `execute` is also used.\n\n  const mapSourceToResponse = (payload) =>\n    execute({\n      schema,\n      document,\n      rootValue: payload,\n      contextValue,\n      variableValues,\n      operationName,\n      fieldResolver,\n    }); // Map every source value to a ExecutionResult value as described above.\n\n  return mapAsyncIterator(resultOrStream, mapSourceToResponse);\n}\n/**\n * Implements the \"CreateSourceEventStream\" algorithm described in the\n * GraphQL specification, resolving the subscription source event stream.\n *\n * Returns a Promise which resolves to either an AsyncIterable (if successful)\n * or an ExecutionResult (error). The promise will be rejected if the schema or\n * other arguments to this function are invalid, or if the resolved event stream\n * is not an async iterable.\n *\n * If the client-provided arguments to this function do not result in a\n * compliant subscription, a GraphQL Response (ExecutionResult) with\n * descriptive errors and no data will be returned.\n *\n * If the the source stream could not be created due to faulty subscription\n * resolver logic or underlying systems, the promise will resolve to a single\n * ExecutionResult containing `errors` and no `data`.\n *\n * If the operation succeeded, the promise resolves to the AsyncIterable for the\n * event stream returned by the resolver.\n *\n * A Source Event Stream represents a sequence of events, each of which triggers\n * a GraphQL execution for that event.\n *\n * This may be useful when hosting the stateful subscription service in a\n * different process or machine than the stateless GraphQL execution engine,\n * or otherwise separating these two steps. For more on this, see the\n * \"Supporting Subscriptions at Scale\" information in the GraphQL specification.\n */\n\nexport async function createSourceEventStream(\n  schema,\n  document,\n  rootValue,\n  contextValue,\n  variableValues,\n  operationName,\n  subscribeFieldResolver,\n) {\n  // If arguments are missing or incorrectly typed, this is an internal\n  // developer mistake which should throw an early error.\n  assertValidExecutionArguments(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,\n  // a \"Response\" with only errors is returned.\n\n  const exeContext = buildExecutionContext({\n    schema,\n    document,\n    rootValue,\n    contextValue,\n    variableValues,\n    operationName,\n    subscribeFieldResolver,\n  }); // Return early errors if execution context failed.\n\n  if (!('schema' in exeContext)) {\n    return {\n      errors: exeContext,\n    };\n  }\n\n  try {\n    const eventStream = await executeSubscription(exeContext); // Assert field returned an event stream, otherwise yield an error.\n\n    if (!isAsyncIterable(eventStream)) {\n      throw new Error(\n        'Subscription field must return Async Iterable. ' +\n          `Received: ${inspect(eventStream)}.`,\n      );\n    }\n\n    return eventStream;\n  } catch (error) {\n    // If it GraphQLError, report it as an ExecutionResult, containing only errors and no data.\n    // Otherwise treat the error as a system-class error and re-throw it.\n    if (error instanceof GraphQLError) {\n      return {\n        errors: [error],\n      };\n    }\n\n    throw error;\n  }\n}\n\nasync function executeSubscription(exeContext) {\n  const { schema, fragments, operation, variableValues, rootValue } =\n    exeContext;\n  const rootType = schema.getSubscriptionType();\n\n  if (rootType == null) {\n    throw new GraphQLError(\n      'Schema is not configured to execute subscription operation.',\n      {\n        nodes: operation,\n      },\n    );\n  }\n\n  const rootFields = collectFields(\n    schema,\n    fragments,\n    variableValues,\n    rootType,\n    operation.selectionSet,\n  );\n  const [responseName, fieldNodes] = [...rootFields.entries()][0];\n  const fieldDef = getFieldDef(schema, rootType, fieldNodes[0]);\n\n  if (!fieldDef) {\n    const fieldName = fieldNodes[0].name.value;\n    throw new GraphQLError(\n      `The subscription field \"${fieldName}\" is not defined.`,\n      {\n        nodes: fieldNodes,\n      },\n    );\n  }\n\n  const path = addPath(undefined, responseName, rootType.name);\n  const info = buildResolveInfo(\n    exeContext,\n    fieldDef,\n    fieldNodes,\n    rootType,\n    path,\n  );\n\n  try {\n    var _fieldDef$subscribe;\n\n    // Implements the \"ResolveFieldEventStream\" algorithm from GraphQL specification.\n    // It differs from \"ResolveFieldValue\" due to providing a different `resolveFn`.\n    // Build a JS object of arguments from the field.arguments AST, using the\n    // variables scope to fulfill any variable references.\n    const args = getArgumentValues(fieldDef, fieldNodes[0], variableValues); // The resolve function's optional third argument is a context value that\n    // is provided to every resolve function within an execution. It is commonly\n    // used to represent an authenticated user, or request-specific caches.\n\n    const contextValue = exeContext.contextValue; // Call the `subscribe()` resolver or the default resolver to produce an\n    // AsyncIterable yielding raw payloads.\n\n    const resolveFn =\n      (_fieldDef$subscribe = fieldDef.subscribe) !== null &&\n      _fieldDef$subscribe !== void 0\n        ? _fieldDef$subscribe\n        : exeContext.subscribeFieldResolver;\n    const eventStream = await resolveFn(rootValue, args, contextValue, info);\n\n    if (eventStream instanceof Error) {\n      throw eventStream;\n    }\n\n    return eventStream;\n  } catch (error) {\n    throw locatedError(error, fieldNodes, pathToArray(path));\n  }\n}\n","import { GraphQLError } from '../../../error/GraphQLError.mjs';\nimport { getNamedType } from '../../../type/definition.mjs';\nimport { isIntrospectionType } from '../../../type/introspection.mjs';\n\n/**\n * Prohibit introspection queries\n *\n * A GraphQL document is only valid if all fields selected are not fields that\n * return an introspection type.\n *\n * Note: This rule is optional and is not part of the Validation section of the\n * GraphQL Specification. This rule effectively disables introspection, which\n * does not reflect best practices and should only be done if absolutely necessary.\n */\nexport function NoSchemaIntrospectionCustomRule(context) {\n  return {\n    Field(node) {\n      const type = getNamedType(context.getType());\n\n      if (type && isIntrospectionType(type)) {\n        context.reportError(\n          new GraphQLError(\n            `GraphQL introspection has been disabled, but the requested query contained the field \"${node.name.value}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n","/**\n * Produce the GraphQL query recommended for a full schema introspection.\n * Accepts optional IntrospectionOptions.\n */\nexport function getIntrospectionQuery(options) {\n  const optionsWithDefault = {\n    descriptions: true,\n    specifiedByUrl: false,\n    directiveIsRepeatable: false,\n    schemaDescription: false,\n    inputValueDeprecation: false,\n    ...options,\n  };\n  const descriptions = optionsWithDefault.descriptions ? 'description' : '';\n  const specifiedByUrl = optionsWithDefault.specifiedByUrl\n    ? 'specifiedByURL'\n    : '';\n  const directiveIsRepeatable = optionsWithDefault.directiveIsRepeatable\n    ? 'isRepeatable'\n    : '';\n  const schemaDescription = optionsWithDefault.schemaDescription\n    ? descriptions\n    : '';\n\n  function inputDeprecation(str) {\n    return optionsWithDefault.inputValueDeprecation ? str : '';\n  }\n\n  return `\n    query IntrospectionQuery {\n      __schema {\n        ${schemaDescription}\n        queryType { name }\n        mutationType { name }\n        subscriptionType { name }\n        types {\n          ...FullType\n        }\n        directives {\n          name\n          ${descriptions}\n          ${directiveIsRepeatable}\n          locations\n          args${inputDeprecation('(includeDeprecated: true)')} {\n            ...InputValue\n          }\n        }\n      }\n    }\n\n    fragment FullType on __Type {\n      kind\n      name\n      ${descriptions}\n      ${specifiedByUrl}\n      fields(includeDeprecated: true) {\n        name\n        ${descriptions}\n        args${inputDeprecation('(includeDeprecated: true)')} {\n          ...InputValue\n        }\n        type {\n          ...TypeRef\n        }\n        isDeprecated\n        deprecationReason\n      }\n      inputFields${inputDeprecation('(includeDeprecated: true)')} {\n        ...InputValue\n      }\n      interfaces {\n        ...TypeRef\n      }\n      enumValues(includeDeprecated: true) {\n        name\n        ${descriptions}\n        isDeprecated\n        deprecationReason\n      }\n      possibleTypes {\n        ...TypeRef\n      }\n    }\n\n    fragment InputValue on __InputValue {\n      name\n      ${descriptions}\n      type { ...TypeRef }\n      defaultValue\n      ${inputDeprecation('isDeprecated')}\n      ${inputDeprecation('deprecationReason')}\n    }\n\n    fragment TypeRef on __Type {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                  ofType {\n                    kind\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n}\n","import { Kind } from '../language/kinds.mjs';\n/**\n * Returns an operation AST given a document AST and optionally an operation\n * name. If a name is not provided, an operation is only returned if only one is\n * provided in the document.\n */\n\nexport function getOperationAST(documentAST, operationName) {\n  let operation = null;\n\n  for (const definition of documentAST.definitions) {\n    if (definition.kind === Kind.OPERATION_DEFINITION) {\n      var _definition$name;\n\n      if (operationName == null) {\n        // If no operation name was provided, only return an Operation if there\n        // is one defined in the document. Upon encountering the second, return\n        // null.\n        if (operation) {\n          return null;\n        }\n\n        operation = definition;\n      } else if (\n        ((_definition$name = definition.name) === null ||\n        _definition$name === void 0\n          ? void 0\n          : _definition$name.value) === operationName\n      ) {\n        return definition;\n      }\n    }\n  }\n\n  return operation;\n}\n","import { GraphQLError } from '../error/GraphQLError.mjs';\n\n/**\n * Extracts the root type of the operation from the schema.\n *\n * @deprecated Please use `GraphQLSchema.getRootType` instead. Will be removed in v17\n */\nexport function getOperationRootType(schema, operation) {\n  if (operation.operation === 'query') {\n    const queryType = schema.getQueryType();\n\n    if (!queryType) {\n      throw new GraphQLError(\n        'Schema does not define the required query root type.',\n        {\n          nodes: operation,\n        },\n      );\n    }\n\n    return queryType;\n  }\n\n  if (operation.operation === 'mutation') {\n    const mutationType = schema.getMutationType();\n\n    if (!mutationType) {\n      throw new GraphQLError('Schema is not configured for mutations.', {\n        nodes: operation,\n      });\n    }\n\n    return mutationType;\n  }\n\n  if (operation.operation === 'subscription') {\n    const subscriptionType = schema.getSubscriptionType();\n\n    if (!subscriptionType) {\n      throw new GraphQLError('Schema is not configured for subscriptions.', {\n        nodes: operation,\n      });\n    }\n\n    return subscriptionType;\n  }\n\n  throw new GraphQLError(\n    'Can only have query, mutation and subscription operations.',\n    {\n      nodes: operation,\n    },\n  );\n}\n","import { invariant } from '../jsutils/invariant.mjs';\nimport { parse } from '../language/parser.mjs';\nimport { executeSync } from '../execution/execute.mjs';\nimport { getIntrospectionQuery } from './getIntrospectionQuery.mjs';\n/**\n * Build an IntrospectionQuery from a GraphQLSchema\n *\n * IntrospectionQuery is useful for utilities that care about type and field\n * relationships, but do not need to traverse through those relationships.\n *\n * This is the inverse of buildClientSchema. The primary use case is outside\n * of the server context, for instance when doing schema comparisons.\n */\n\nexport function introspectionFromSchema(schema, options) {\n  const optionsWithDefaults = {\n    specifiedByUrl: true,\n    directiveIsRepeatable: true,\n    schemaDescription: true,\n    inputValueDeprecation: true,\n    ...options,\n  };\n  const document = parse(getIntrospectionQuery(optionsWithDefaults));\n  const result = executeSync({\n    schema,\n    document,\n  });\n  (!result.errors && result.data) || invariant(false);\n  return result.data;\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { parseValue } from '../language/parser.mjs';\nimport {\n  assertInterfaceType,\n  assertNullableType,\n  assertObjectType,\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLInterfaceType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  GraphQLScalarType,\n  GraphQLUnionType,\n  isInputType,\n  isOutputType,\n} from '../type/definition.mjs';\nimport { GraphQLDirective } from '../type/directives.mjs';\nimport { introspectionTypes, TypeKind } from '../type/introspection.mjs';\nimport { specifiedScalarTypes } from '../type/scalars.mjs';\nimport { GraphQLSchema } from '../type/schema.mjs';\nimport { valueFromAST } from './valueFromAST.mjs';\n/**\n * Build a GraphQLSchema for use by client tools.\n *\n * Given the result of a client running the introspection query, creates and\n * returns a GraphQLSchema instance which can be then used with all graphql-js\n * tools, but cannot be used to execute a query, as introspection does not\n * represent the \"resolver\", \"parse\" or \"serialize\" functions or any other\n * server-internal mechanisms.\n *\n * This function expects a complete introspection result. Don't forget to check\n * the \"errors\" field of a server response before calling this function.\n */\n\nexport function buildClientSchema(introspection, options) {\n  (isObjectLike(introspection) && isObjectLike(introspection.__schema)) ||\n    devAssert(\n      false,\n      `Invalid or incomplete introspection result. Ensure that you are passing \"data\" property of introspection response and no \"errors\" was returned alongside: ${inspect(\n        introspection,\n      )}.`,\n    ); // Get the schema from the introspection result.\n\n  const schemaIntrospection = introspection.__schema; // Iterate through all types, getting the type definition for each.\n\n  const typeMap = keyValMap(\n    schemaIntrospection.types,\n    (typeIntrospection) => typeIntrospection.name,\n    (typeIntrospection) => buildType(typeIntrospection),\n  ); // Include standard types only if they are used.\n\n  for (const stdType of [...specifiedScalarTypes, ...introspectionTypes]) {\n    if (typeMap[stdType.name]) {\n      typeMap[stdType.name] = stdType;\n    }\n  } // Get the root Query, Mutation, and Subscription types.\n\n  const queryType = schemaIntrospection.queryType\n    ? getObjectType(schemaIntrospection.queryType)\n    : null;\n  const mutationType = schemaIntrospection.mutationType\n    ? getObjectType(schemaIntrospection.mutationType)\n    : null;\n  const subscriptionType = schemaIntrospection.subscriptionType\n    ? getObjectType(schemaIntrospection.subscriptionType)\n    : null; // Get the directives supported by Introspection, assuming empty-set if\n  // directives were not queried for.\n\n  const directives = schemaIntrospection.directives\n    ? schemaIntrospection.directives.map(buildDirective)\n    : []; // Then produce and return a Schema with these types.\n\n  return new GraphQLSchema({\n    description: schemaIntrospection.description,\n    query: queryType,\n    mutation: mutationType,\n    subscription: subscriptionType,\n    types: Object.values(typeMap),\n    directives,\n    assumeValid:\n      options === null || options === void 0 ? void 0 : options.assumeValid,\n  }); // Given a type reference in introspection, return the GraphQLType instance.\n  // preferring cached instances before building new instances.\n\n  function getType(typeRef) {\n    if (typeRef.kind === TypeKind.LIST) {\n      const itemRef = typeRef.ofType;\n\n      if (!itemRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      return new GraphQLList(getType(itemRef));\n    }\n\n    if (typeRef.kind === TypeKind.NON_NULL) {\n      const nullableRef = typeRef.ofType;\n\n      if (!nullableRef) {\n        throw new Error('Decorated type deeper than introspection query.');\n      }\n\n      const nullableType = getType(nullableRef);\n      return new GraphQLNonNull(assertNullableType(nullableType));\n    }\n\n    return getNamedType(typeRef);\n  }\n\n  function getNamedType(typeRef) {\n    const typeName = typeRef.name;\n\n    if (!typeName) {\n      throw new Error(`Unknown type reference: ${inspect(typeRef)}.`);\n    }\n\n    const type = typeMap[typeName];\n\n    if (!type) {\n      throw new Error(\n        `Invalid or incomplete schema, unknown type: ${typeName}. Ensure that a full introspection query is used in order to build a client schema.`,\n      );\n    }\n\n    return type;\n  }\n\n  function getObjectType(typeRef) {\n    return assertObjectType(getNamedType(typeRef));\n  }\n\n  function getInterfaceType(typeRef) {\n    return assertInterfaceType(getNamedType(typeRef));\n  } // Given a type's introspection result, construct the correct\n  // GraphQLType instance.\n\n  function buildType(type) {\n    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain\n    if (type != null && type.name != null && type.kind != null) {\n      // FIXME: Properly type IntrospectionType, it's a breaking change so fix in v17\n      // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check\n      switch (type.kind) {\n        case TypeKind.SCALAR:\n          return buildScalarDef(type);\n\n        case TypeKind.OBJECT:\n          return buildObjectDef(type);\n\n        case TypeKind.INTERFACE:\n          return buildInterfaceDef(type);\n\n        case TypeKind.UNION:\n          return buildUnionDef(type);\n\n        case TypeKind.ENUM:\n          return buildEnumDef(type);\n\n        case TypeKind.INPUT_OBJECT:\n          return buildInputObjectDef(type);\n      }\n    }\n\n    const typeStr = inspect(type);\n    throw new Error(\n      `Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${typeStr}.`,\n    );\n  }\n\n  function buildScalarDef(scalarIntrospection) {\n    return new GraphQLScalarType({\n      name: scalarIntrospection.name,\n      description: scalarIntrospection.description,\n      specifiedByURL: scalarIntrospection.specifiedByURL,\n    });\n  }\n\n  function buildImplementationsList(implementingIntrospection) {\n    // TODO: Temporary workaround until GraphQL ecosystem will fully support\n    // 'interfaces' on interface types.\n    if (\n      implementingIntrospection.interfaces === null &&\n      implementingIntrospection.kind === TypeKind.INTERFACE\n    ) {\n      return [];\n    }\n\n    if (!implementingIntrospection.interfaces) {\n      const implementingIntrospectionStr = inspect(implementingIntrospection);\n      throw new Error(\n        `Introspection result missing interfaces: ${implementingIntrospectionStr}.`,\n      );\n    }\n\n    return implementingIntrospection.interfaces.map(getInterfaceType);\n  }\n\n  function buildObjectDef(objectIntrospection) {\n    return new GraphQLObjectType({\n      name: objectIntrospection.name,\n      description: objectIntrospection.description,\n      interfaces: () => buildImplementationsList(objectIntrospection),\n      fields: () => buildFieldDefMap(objectIntrospection),\n    });\n  }\n\n  function buildInterfaceDef(interfaceIntrospection) {\n    return new GraphQLInterfaceType({\n      name: interfaceIntrospection.name,\n      description: interfaceIntrospection.description,\n      interfaces: () => buildImplementationsList(interfaceIntrospection),\n      fields: () => buildFieldDefMap(interfaceIntrospection),\n    });\n  }\n\n  function buildUnionDef(unionIntrospection) {\n    if (!unionIntrospection.possibleTypes) {\n      const unionIntrospectionStr = inspect(unionIntrospection);\n      throw new Error(\n        `Introspection result missing possibleTypes: ${unionIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLUnionType({\n      name: unionIntrospection.name,\n      description: unionIntrospection.description,\n      types: () => unionIntrospection.possibleTypes.map(getObjectType),\n    });\n  }\n\n  function buildEnumDef(enumIntrospection) {\n    if (!enumIntrospection.enumValues) {\n      const enumIntrospectionStr = inspect(enumIntrospection);\n      throw new Error(\n        `Introspection result missing enumValues: ${enumIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLEnumType({\n      name: enumIntrospection.name,\n      description: enumIntrospection.description,\n      values: keyValMap(\n        enumIntrospection.enumValues,\n        (valueIntrospection) => valueIntrospection.name,\n        (valueIntrospection) => ({\n          description: valueIntrospection.description,\n          deprecationReason: valueIntrospection.deprecationReason,\n        }),\n      ),\n    });\n  }\n\n  function buildInputObjectDef(inputObjectIntrospection) {\n    if (!inputObjectIntrospection.inputFields) {\n      const inputObjectIntrospectionStr = inspect(inputObjectIntrospection);\n      throw new Error(\n        `Introspection result missing inputFields: ${inputObjectIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLInputObjectType({\n      name: inputObjectIntrospection.name,\n      description: inputObjectIntrospection.description,\n      fields: () => buildInputValueDefMap(inputObjectIntrospection.inputFields),\n    });\n  }\n\n  function buildFieldDefMap(typeIntrospection) {\n    if (!typeIntrospection.fields) {\n      throw new Error(\n        `Introspection result missing fields: ${inspect(typeIntrospection)}.`,\n      );\n    }\n\n    return keyValMap(\n      typeIntrospection.fields,\n      (fieldIntrospection) => fieldIntrospection.name,\n      buildField,\n    );\n  }\n\n  function buildField(fieldIntrospection) {\n    const type = getType(fieldIntrospection.type);\n\n    if (!isOutputType(type)) {\n      const typeStr = inspect(type);\n      throw new Error(\n        `Introspection must provide output type for fields, but received: ${typeStr}.`,\n      );\n    }\n\n    if (!fieldIntrospection.args) {\n      const fieldIntrospectionStr = inspect(fieldIntrospection);\n      throw new Error(\n        `Introspection result missing field args: ${fieldIntrospectionStr}.`,\n      );\n    }\n\n    return {\n      description: fieldIntrospection.description,\n      deprecationReason: fieldIntrospection.deprecationReason,\n      type,\n      args: buildInputValueDefMap(fieldIntrospection.args),\n    };\n  }\n\n  function buildInputValueDefMap(inputValueIntrospections) {\n    return keyValMap(\n      inputValueIntrospections,\n      (inputValue) => inputValue.name,\n      buildInputValue,\n    );\n  }\n\n  function buildInputValue(inputValueIntrospection) {\n    const type = getType(inputValueIntrospection.type);\n\n    if (!isInputType(type)) {\n      const typeStr = inspect(type);\n      throw new Error(\n        `Introspection must provide input type for arguments, but received: ${typeStr}.`,\n      );\n    }\n\n    const defaultValue =\n      inputValueIntrospection.defaultValue != null\n        ? valueFromAST(parseValue(inputValueIntrospection.defaultValue), type)\n        : undefined;\n    return {\n      description: inputValueIntrospection.description,\n      type,\n      defaultValue,\n      deprecationReason: inputValueIntrospection.deprecationReason,\n    };\n  }\n\n  function buildDirective(directiveIntrospection) {\n    if (!directiveIntrospection.args) {\n      const directiveIntrospectionStr = inspect(directiveIntrospection);\n      throw new Error(\n        `Introspection result missing directive args: ${directiveIntrospectionStr}.`,\n      );\n    }\n\n    if (!directiveIntrospection.locations) {\n      const directiveIntrospectionStr = inspect(directiveIntrospection);\n      throw new Error(\n        `Introspection result missing directive locations: ${directiveIntrospectionStr}.`,\n      );\n    }\n\n    return new GraphQLDirective({\n      name: directiveIntrospection.name,\n      description: directiveIntrospection.description,\n      isRepeatable: directiveIntrospection.isRepeatable,\n      locations: directiveIntrospection.locations.slice(),\n      args: buildInputValueDefMap(directiveIntrospection.args),\n    });\n  }\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { mapValue } from '../jsutils/mapValue.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport {\n  isTypeDefinitionNode,\n  isTypeExtensionNode,\n} from '../language/predicates.mjs';\nimport {\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLInterfaceType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  GraphQLScalarType,\n  GraphQLUnionType,\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n  isScalarType,\n  isUnionType,\n} from '../type/definition.mjs';\nimport {\n  GraphQLDeprecatedDirective,\n  GraphQLDirective,\n  GraphQLSpecifiedByDirective,\n} from '../type/directives.mjs';\nimport {\n  introspectionTypes,\n  isIntrospectionType,\n} from '../type/introspection.mjs';\nimport {\n  isSpecifiedScalarType,\n  specifiedScalarTypes,\n} from '../type/scalars.mjs';\nimport { assertSchema, GraphQLSchema } from '../type/schema.mjs';\nimport { assertValidSDLExtension } from '../validation/validate.mjs';\nimport { getDirectiveValues } from '../execution/values.mjs';\nimport { valueFromAST } from './valueFromAST.mjs';\n\n/**\n * Produces a new schema given an existing schema and a document which may\n * contain GraphQL type extensions and definitions. The original schema will\n * remain unaltered.\n *\n * Because a schema represents a graph of references, a schema cannot be\n * extended without effectively making an entire copy. We do not know until it's\n * too late if subgraphs remain unchanged.\n *\n * This algorithm copies the provided schema, applying extensions while\n * producing the copy. The original schema remains unaltered.\n */\nexport function extendSchema(schema, documentAST, options) {\n  assertSchema(schema);\n  (documentAST != null && documentAST.kind === Kind.DOCUMENT) ||\n    devAssert(false, 'Must provide valid Document AST.');\n\n  if (\n    (options === null || options === void 0 ? void 0 : options.assumeValid) !==\n      true &&\n    (options === null || options === void 0\n      ? void 0\n      : options.assumeValidSDL) !== true\n  ) {\n    assertValidSDLExtension(documentAST, schema);\n  }\n\n  const schemaConfig = schema.toConfig();\n  const extendedConfig = extendSchemaImpl(schemaConfig, documentAST, options);\n  return schemaConfig === extendedConfig\n    ? schema\n    : new GraphQLSchema(extendedConfig);\n}\n/**\n * @internal\n */\n\nexport function extendSchemaImpl(schemaConfig, documentAST, options) {\n  var _schemaDef, _schemaDef$descriptio, _schemaDef2, _options$assumeValid;\n\n  // Collect the type definitions and extensions found in the document.\n  const typeDefs = [];\n  const typeExtensionsMap = Object.create(null); // New directives and types are separate because a directives and types can\n  // have the same name. For example, a type named \"skip\".\n\n  const directiveDefs = [];\n  let schemaDef; // Schema extensions are collected which may add additional operation types.\n\n  const schemaExtensions = [];\n\n  for (const def of documentAST.definitions) {\n    if (def.kind === Kind.SCHEMA_DEFINITION) {\n      schemaDef = def;\n    } else if (def.kind === Kind.SCHEMA_EXTENSION) {\n      schemaExtensions.push(def);\n    } else if (isTypeDefinitionNode(def)) {\n      typeDefs.push(def);\n    } else if (isTypeExtensionNode(def)) {\n      const extendedTypeName = def.name.value;\n      const existingTypeExtensions = typeExtensionsMap[extendedTypeName];\n      typeExtensionsMap[extendedTypeName] = existingTypeExtensions\n        ? existingTypeExtensions.concat([def])\n        : [def];\n    } else if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      directiveDefs.push(def);\n    }\n  } // If this document contains no new types, extensions, or directives then\n  // return the same unmodified GraphQLSchema instance.\n\n  if (\n    Object.keys(typeExtensionsMap).length === 0 &&\n    typeDefs.length === 0 &&\n    directiveDefs.length === 0 &&\n    schemaExtensions.length === 0 &&\n    schemaDef == null\n  ) {\n    return schemaConfig;\n  }\n\n  const typeMap = Object.create(null);\n\n  for (const existingType of schemaConfig.types) {\n    typeMap[existingType.name] = extendNamedType(existingType);\n  }\n\n  for (const typeNode of typeDefs) {\n    var _stdTypeMap$name;\n\n    const name = typeNode.name.value;\n    typeMap[name] =\n      (_stdTypeMap$name = stdTypeMap[name]) !== null &&\n      _stdTypeMap$name !== void 0\n        ? _stdTypeMap$name\n        : buildType(typeNode);\n  }\n\n  const operationTypes = {\n    // Get the extended root operation types.\n    query: schemaConfig.query && replaceNamedType(schemaConfig.query),\n    mutation: schemaConfig.mutation && replaceNamedType(schemaConfig.mutation),\n    subscription:\n      schemaConfig.subscription && replaceNamedType(schemaConfig.subscription),\n    // Then, incorporate schema definition and all schema extensions.\n    ...(schemaDef && getOperationTypes([schemaDef])),\n    ...getOperationTypes(schemaExtensions),\n  }; // Then produce and return a Schema config with these types.\n\n  return {\n    description:\n      (_schemaDef = schemaDef) === null || _schemaDef === void 0\n        ? void 0\n        : (_schemaDef$descriptio = _schemaDef.description) === null ||\n          _schemaDef$descriptio === void 0\n        ? void 0\n        : _schemaDef$descriptio.value,\n    ...operationTypes,\n    types: Object.values(typeMap),\n    directives: [\n      ...schemaConfig.directives.map(replaceDirective),\n      ...directiveDefs.map(buildDirective),\n    ],\n    extensions: Object.create(null),\n    astNode:\n      (_schemaDef2 = schemaDef) !== null && _schemaDef2 !== void 0\n        ? _schemaDef2\n        : schemaConfig.astNode,\n    extensionASTNodes: schemaConfig.extensionASTNodes.concat(schemaExtensions),\n    assumeValid:\n      (_options$assumeValid =\n        options === null || options === void 0\n          ? void 0\n          : options.assumeValid) !== null && _options$assumeValid !== void 0\n        ? _options$assumeValid\n        : false,\n  }; // Below are functions used for producing this schema that have closed over\n  // this scope and have access to the schema, cache, and newly defined types.\n\n  function replaceType(type) {\n    if (isListType(type)) {\n      // @ts-expect-error\n      return new GraphQLList(replaceType(type.ofType));\n    }\n\n    if (isNonNullType(type)) {\n      // @ts-expect-error\n      return new GraphQLNonNull(replaceType(type.ofType));\n    } // @ts-expect-error FIXME\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    // Note: While this could make early assertions to get the correctly\n    // typed values, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    return typeMap[type.name];\n  }\n\n  function replaceDirective(directive) {\n    const config = directive.toConfig();\n    return new GraphQLDirective({\n      ...config,\n      args: mapValue(config.args, extendArg),\n    });\n  }\n\n  function extendNamedType(type) {\n    if (isIntrospectionType(type) || isSpecifiedScalarType(type)) {\n      // Builtin types are not extended.\n      return type;\n    }\n\n    if (isScalarType(type)) {\n      return extendScalarType(type);\n    }\n\n    if (isObjectType(type)) {\n      return extendObjectType(type);\n    }\n\n    if (isInterfaceType(type)) {\n      return extendInterfaceType(type);\n    }\n\n    if (isUnionType(type)) {\n      return extendUnionType(type);\n    }\n\n    if (isEnumType(type)) {\n      return extendEnumType(type);\n    }\n\n    if (isInputObjectType(type)) {\n      return extendInputObjectType(type);\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible type definition nodes have been considered.\n\n    false || invariant(false, 'Unexpected type: ' + inspect(type));\n  }\n\n  function extendInputObjectType(type) {\n    var _typeExtensionsMap$co;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co !== void 0\n        ? _typeExtensionsMap$co\n        : [];\n    return new GraphQLInputObjectType({\n      ...config,\n      fields: () => ({\n        ...mapValue(config.fields, (field) => ({\n          ...field,\n          type: replaceType(field.type),\n        })),\n        ...buildInputFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendEnumType(type) {\n    var _typeExtensionsMap$ty;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$ty = typeExtensionsMap[type.name]) !== null &&\n      _typeExtensionsMap$ty !== void 0\n        ? _typeExtensionsMap$ty\n        : [];\n    return new GraphQLEnumType({\n      ...config,\n      values: { ...config.values, ...buildEnumValueMap(extensions) },\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendScalarType(type) {\n    var _typeExtensionsMap$co2;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co2 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co2 !== void 0\n        ? _typeExtensionsMap$co2\n        : [];\n    let specifiedByURL = config.specifiedByURL;\n\n    for (const extensionNode of extensions) {\n      var _getSpecifiedByURL;\n\n      specifiedByURL =\n        (_getSpecifiedByURL = getSpecifiedByURL(extensionNode)) !== null &&\n        _getSpecifiedByURL !== void 0\n          ? _getSpecifiedByURL\n          : specifiedByURL;\n    }\n\n    return new GraphQLScalarType({\n      ...config,\n      specifiedByURL,\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendObjectType(type) {\n    var _typeExtensionsMap$co3;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co3 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co3 !== void 0\n        ? _typeExtensionsMap$co3\n        : [];\n    return new GraphQLObjectType({\n      ...config,\n      interfaces: () => [\n        ...type.getInterfaces().map(replaceNamedType),\n        ...buildInterfaces(extensions),\n      ],\n      fields: () => ({\n        ...mapValue(config.fields, extendField),\n        ...buildFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendInterfaceType(type) {\n    var _typeExtensionsMap$co4;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co4 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co4 !== void 0\n        ? _typeExtensionsMap$co4\n        : [];\n    return new GraphQLInterfaceType({\n      ...config,\n      interfaces: () => [\n        ...type.getInterfaces().map(replaceNamedType),\n        ...buildInterfaces(extensions),\n      ],\n      fields: () => ({\n        ...mapValue(config.fields, extendField),\n        ...buildFieldMap(extensions),\n      }),\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendUnionType(type) {\n    var _typeExtensionsMap$co5;\n\n    const config = type.toConfig();\n    const extensions =\n      (_typeExtensionsMap$co5 = typeExtensionsMap[config.name]) !== null &&\n      _typeExtensionsMap$co5 !== void 0\n        ? _typeExtensionsMap$co5\n        : [];\n    return new GraphQLUnionType({\n      ...config,\n      types: () => [\n        ...type.getTypes().map(replaceNamedType),\n        ...buildUnionTypes(extensions),\n      ],\n      extensionASTNodes: config.extensionASTNodes.concat(extensions),\n    });\n  }\n\n  function extendField(field) {\n    return {\n      ...field,\n      type: replaceType(field.type),\n      args: field.args && mapValue(field.args, extendArg),\n    };\n  }\n\n  function extendArg(arg) {\n    return { ...arg, type: replaceType(arg.type) };\n  }\n\n  function getOperationTypes(nodes) {\n    const opTypes = {};\n\n    for (const node of nodes) {\n      var _node$operationTypes;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const operationTypesNodes =\n        /* c8 ignore next */\n        (_node$operationTypes = node.operationTypes) !== null &&\n        _node$operationTypes !== void 0\n          ? _node$operationTypes\n          : [];\n\n      for (const operationType of operationTypesNodes) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        // @ts-expect-error\n        opTypes[operationType.operation] = getNamedType(operationType.type);\n      }\n    }\n\n    return opTypes;\n  }\n\n  function getNamedType(node) {\n    var _stdTypeMap$name2;\n\n    const name = node.name.value;\n    const type =\n      (_stdTypeMap$name2 = stdTypeMap[name]) !== null &&\n      _stdTypeMap$name2 !== void 0\n        ? _stdTypeMap$name2\n        : typeMap[name];\n\n    if (type === undefined) {\n      throw new Error(`Unknown type: \"${name}\".`);\n    }\n\n    return type;\n  }\n\n  function getWrappedType(node) {\n    if (node.kind === Kind.LIST_TYPE) {\n      return new GraphQLList(getWrappedType(node.type));\n    }\n\n    if (node.kind === Kind.NON_NULL_TYPE) {\n      return new GraphQLNonNull(getWrappedType(node.type));\n    }\n\n    return getNamedType(node);\n  }\n\n  function buildDirective(node) {\n    var _node$description;\n\n    return new GraphQLDirective({\n      name: node.name.value,\n      description:\n        (_node$description = node.description) === null ||\n        _node$description === void 0\n          ? void 0\n          : _node$description.value,\n      // @ts-expect-error\n      locations: node.locations.map(({ value }) => value),\n      isRepeatable: node.repeatable,\n      args: buildArgumentMap(node.arguments),\n      astNode: node,\n    });\n  }\n\n  function buildFieldMap(nodes) {\n    const fieldConfigMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$fields;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const nodeFields =\n        /* c8 ignore next */\n        (_node$fields = node.fields) !== null && _node$fields !== void 0\n          ? _node$fields\n          : [];\n\n      for (const field of nodeFields) {\n        var _field$description;\n\n        fieldConfigMap[field.name.value] = {\n          // Note: While this could make assertions to get the correctly typed\n          // value, that would throw immediately while type system validation\n          // with validateSchema() will produce more actionable results.\n          type: getWrappedType(field.type),\n          description:\n            (_field$description = field.description) === null ||\n            _field$description === void 0\n              ? void 0\n              : _field$description.value,\n          args: buildArgumentMap(field.arguments),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field,\n        };\n      }\n    }\n\n    return fieldConfigMap;\n  }\n\n  function buildArgumentMap(args) {\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n    const argsNodes =\n      /* c8 ignore next */\n      args !== null && args !== void 0 ? args : [];\n    const argConfigMap = Object.create(null);\n\n    for (const arg of argsNodes) {\n      var _arg$description;\n\n      // Note: While this could make assertions to get the correctly typed\n      // value, that would throw immediately while type system validation\n      // with validateSchema() will produce more actionable results.\n      const type = getWrappedType(arg.type);\n      argConfigMap[arg.name.value] = {\n        type,\n        description:\n          (_arg$description = arg.description) === null ||\n          _arg$description === void 0\n            ? void 0\n            : _arg$description.value,\n        defaultValue: valueFromAST(arg.defaultValue, type),\n        deprecationReason: getDeprecationReason(arg),\n        astNode: arg,\n      };\n    }\n\n    return argConfigMap;\n  }\n\n  function buildInputFieldMap(nodes) {\n    const inputFieldMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$fields2;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const fieldsNodes =\n        /* c8 ignore next */\n        (_node$fields2 = node.fields) !== null && _node$fields2 !== void 0\n          ? _node$fields2\n          : [];\n\n      for (const field of fieldsNodes) {\n        var _field$description2;\n\n        // Note: While this could make assertions to get the correctly typed\n        // value, that would throw immediately while type system validation\n        // with validateSchema() will produce more actionable results.\n        const type = getWrappedType(field.type);\n        inputFieldMap[field.name.value] = {\n          type,\n          description:\n            (_field$description2 = field.description) === null ||\n            _field$description2 === void 0\n              ? void 0\n              : _field$description2.value,\n          defaultValue: valueFromAST(field.defaultValue, type),\n          deprecationReason: getDeprecationReason(field),\n          astNode: field,\n        };\n      }\n    }\n\n    return inputFieldMap;\n  }\n\n  function buildEnumValueMap(nodes) {\n    const enumValueMap = Object.create(null);\n\n    for (const node of nodes) {\n      var _node$values;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      const valuesNodes =\n        /* c8 ignore next */\n        (_node$values = node.values) !== null && _node$values !== void 0\n          ? _node$values\n          : [];\n\n      for (const value of valuesNodes) {\n        var _value$description;\n\n        enumValueMap[value.name.value] = {\n          description:\n            (_value$description = value.description) === null ||\n            _value$description === void 0\n              ? void 0\n              : _value$description.value,\n          deprecationReason: getDeprecationReason(value),\n          astNode: value,\n        };\n      }\n    }\n\n    return enumValueMap;\n  }\n\n  function buildInterfaces(nodes) {\n    // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    // @ts-expect-error\n    return nodes.flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (node) => {\n        var _node$interfaces$map, _node$interfaces;\n\n        return (\n          /* c8 ignore next */\n          (_node$interfaces$map =\n            (_node$interfaces = node.interfaces) === null ||\n            _node$interfaces === void 0\n              ? void 0\n              : _node$interfaces.map(getNamedType)) !== null &&\n            _node$interfaces$map !== void 0\n            ? _node$interfaces$map\n            : []\n        );\n      },\n    );\n  }\n\n  function buildUnionTypes(nodes) {\n    // Note: While this could make assertions to get the correctly typed\n    // values below, that would throw immediately while type system\n    // validation with validateSchema() will produce more actionable results.\n    // @ts-expect-error\n    return nodes.flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (node) => {\n        var _node$types$map, _node$types;\n\n        return (\n          /* c8 ignore next */\n          (_node$types$map =\n            (_node$types = node.types) === null || _node$types === void 0\n              ? void 0\n              : _node$types.map(getNamedType)) !== null &&\n            _node$types$map !== void 0\n            ? _node$types$map\n            : []\n        );\n      },\n    );\n  }\n\n  function buildType(astNode) {\n    var _typeExtensionsMap$na;\n\n    const name = astNode.name.value;\n    const extensionASTNodes =\n      (_typeExtensionsMap$na = typeExtensionsMap[name]) !== null &&\n      _typeExtensionsMap$na !== void 0\n        ? _typeExtensionsMap$na\n        : [];\n\n    switch (astNode.kind) {\n      case Kind.OBJECT_TYPE_DEFINITION: {\n        var _astNode$description;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLObjectType({\n          name,\n          description:\n            (_astNode$description = astNode.description) === null ||\n            _astNode$description === void 0\n              ? void 0\n              : _astNode$description.value,\n          interfaces: () => buildInterfaces(allNodes),\n          fields: () => buildFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.INTERFACE_TYPE_DEFINITION: {\n        var _astNode$description2;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLInterfaceType({\n          name,\n          description:\n            (_astNode$description2 = astNode.description) === null ||\n            _astNode$description2 === void 0\n              ? void 0\n              : _astNode$description2.value,\n          interfaces: () => buildInterfaces(allNodes),\n          fields: () => buildFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.ENUM_TYPE_DEFINITION: {\n        var _astNode$description3;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLEnumType({\n          name,\n          description:\n            (_astNode$description3 = astNode.description) === null ||\n            _astNode$description3 === void 0\n              ? void 0\n              : _astNode$description3.value,\n          values: buildEnumValueMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.UNION_TYPE_DEFINITION: {\n        var _astNode$description4;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLUnionType({\n          name,\n          description:\n            (_astNode$description4 = astNode.description) === null ||\n            _astNode$description4 === void 0\n              ? void 0\n              : _astNode$description4.value,\n          types: () => buildUnionTypes(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.SCALAR_TYPE_DEFINITION: {\n        var _astNode$description5;\n\n        return new GraphQLScalarType({\n          name,\n          description:\n            (_astNode$description5 = astNode.description) === null ||\n            _astNode$description5 === void 0\n              ? void 0\n              : _astNode$description5.value,\n          specifiedByURL: getSpecifiedByURL(astNode),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n\n      case Kind.INPUT_OBJECT_TYPE_DEFINITION: {\n        var _astNode$description6;\n\n        const allNodes = [astNode, ...extensionASTNodes];\n        return new GraphQLInputObjectType({\n          name,\n          description:\n            (_astNode$description6 = astNode.description) === null ||\n            _astNode$description6 === void 0\n              ? void 0\n              : _astNode$description6.value,\n          fields: () => buildInputFieldMap(allNodes),\n          astNode,\n          extensionASTNodes,\n        });\n      }\n    }\n  }\n}\nconst stdTypeMap = keyMap(\n  [...specifiedScalarTypes, ...introspectionTypes],\n  (type) => type.name,\n);\n/**\n * Given a field or enum value node, returns the string value for the\n * deprecation reason.\n */\n\nfunction getDeprecationReason(node) {\n  const deprecated = getDirectiveValues(GraphQLDeprecatedDirective, node); // @ts-expect-error validated by `getDirectiveValues`\n\n  return deprecated === null || deprecated === void 0\n    ? void 0\n    : deprecated.reason;\n}\n/**\n * Given a scalar node, returns the string value for the specifiedByURL.\n */\n\nfunction getSpecifiedByURL(node) {\n  const specifiedBy = getDirectiveValues(GraphQLSpecifiedByDirective, node); // @ts-expect-error validated by `getDirectiveValues`\n\n  return specifiedBy === null || specifiedBy === void 0\n    ? void 0\n    : specifiedBy.url;\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { parse } from '../language/parser.mjs';\nimport { specifiedDirectives } from '../type/directives.mjs';\nimport { GraphQLSchema } from '../type/schema.mjs';\nimport { assertValidSDL } from '../validation/validate.mjs';\nimport { extendSchemaImpl } from './extendSchema.mjs';\n\n/**\n * This takes the ast of a schema document produced by the parse function in\n * src/language/parser.js.\n *\n * If no schema definition is provided, then it will look for types named Query,\n * Mutation and Subscription.\n *\n * Given that AST it constructs a GraphQLSchema. The resulting schema\n * has no resolve methods, so execution will use default resolvers.\n */\nexport function buildASTSchema(documentAST, options) {\n  (documentAST != null && documentAST.kind === Kind.DOCUMENT) ||\n    devAssert(false, 'Must provide valid Document AST.');\n\n  if (\n    (options === null || options === void 0 ? void 0 : options.assumeValid) !==\n      true &&\n    (options === null || options === void 0\n      ? void 0\n      : options.assumeValidSDL) !== true\n  ) {\n    assertValidSDL(documentAST);\n  }\n\n  const emptySchemaConfig = {\n    description: undefined,\n    types: [],\n    directives: [],\n    extensions: Object.create(null),\n    extensionASTNodes: [],\n    assumeValid: false,\n  };\n  const config = extendSchemaImpl(emptySchemaConfig, documentAST, options);\n\n  if (config.astNode == null) {\n    for (const type of config.types) {\n      switch (type.name) {\n        // Note: While this could make early assertions to get the correctly\n        // typed values below, that would throw immediately while type system\n        // validation with validateSchema() will produce more actionable results.\n        case 'Query':\n          // @ts-expect-error validated in `validateSchema`\n          config.query = type;\n          break;\n\n        case 'Mutation':\n          // @ts-expect-error validated in `validateSchema`\n          config.mutation = type;\n          break;\n\n        case 'Subscription':\n          // @ts-expect-error validated in `validateSchema`\n          config.subscription = type;\n          break;\n      }\n    }\n  }\n\n  const directives = [\n    ...config.directives, // If specified directives were not explicitly declared, add them.\n    ...specifiedDirectives.filter((stdDirective) =>\n      config.directives.every(\n        (directive) => directive.name !== stdDirective.name,\n      ),\n    ),\n  ];\n  return new GraphQLSchema({ ...config, directives });\n}\n/**\n * A helper function to build a GraphQLSchema directly from a source\n * document.\n */\n\nexport function buildSchema(source, options) {\n  const document = parse(source, {\n    noLocation:\n      options === null || options === void 0 ? void 0 : options.noLocation,\n    allowLegacyFragmentVariables:\n      options === null || options === void 0\n        ? void 0\n        : options.allowLegacyFragmentVariables,\n  });\n  return buildASTSchema(document, {\n    assumeValidSDL:\n      options === null || options === void 0 ? void 0 : options.assumeValidSDL,\n    assumeValid:\n      options === null || options === void 0 ? void 0 : options.assumeValid,\n  });\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { naturalCompare } from '../jsutils/naturalCompare.mjs';\nimport {\n  GraphQLEnumType,\n  GraphQLInputObjectType,\n  GraphQLInterfaceType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  GraphQLUnionType,\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n  isScalarType,\n  isUnionType,\n} from '../type/definition.mjs';\nimport { GraphQLDirective } from '../type/directives.mjs';\nimport { isIntrospectionType } from '../type/introspection.mjs';\nimport { GraphQLSchema } from '../type/schema.mjs';\n/**\n * Sort GraphQLSchema.\n *\n * This function returns a sorted copy of the given GraphQLSchema.\n */\n\nexport function lexicographicSortSchema(schema) {\n  const schemaConfig = schema.toConfig();\n  const typeMap = keyValMap(\n    sortByName(schemaConfig.types),\n    (type) => type.name,\n    sortNamedType,\n  );\n  return new GraphQLSchema({\n    ...schemaConfig,\n    types: Object.values(typeMap),\n    directives: sortByName(schemaConfig.directives).map(sortDirective),\n    query: replaceMaybeType(schemaConfig.query),\n    mutation: replaceMaybeType(schemaConfig.mutation),\n    subscription: replaceMaybeType(schemaConfig.subscription),\n  });\n\n  function replaceType(type) {\n    if (isListType(type)) {\n      // @ts-expect-error\n      return new GraphQLList(replaceType(type.ofType));\n    } else if (isNonNullType(type)) {\n      // @ts-expect-error\n      return new GraphQLNonNull(replaceType(type.ofType));\n    } // @ts-expect-error FIXME: TS Conversion\n\n    return replaceNamedType(type);\n  }\n\n  function replaceNamedType(type) {\n    return typeMap[type.name];\n  }\n\n  function replaceMaybeType(maybeType) {\n    return maybeType && replaceNamedType(maybeType);\n  }\n\n  function sortDirective(directive) {\n    const config = directive.toConfig();\n    return new GraphQLDirective({\n      ...config,\n      locations: sortBy(config.locations, (x) => x),\n      args: sortArgs(config.args),\n    });\n  }\n\n  function sortArgs(args) {\n    return sortObjMap(args, (arg) => ({ ...arg, type: replaceType(arg.type) }));\n  }\n\n  function sortFields(fieldsMap) {\n    return sortObjMap(fieldsMap, (field) => ({\n      ...field,\n      type: replaceType(field.type),\n      args: field.args && sortArgs(field.args),\n    }));\n  }\n\n  function sortInputFields(fieldsMap) {\n    return sortObjMap(fieldsMap, (field) => ({\n      ...field,\n      type: replaceType(field.type),\n    }));\n  }\n\n  function sortTypes(array) {\n    return sortByName(array).map(replaceNamedType);\n  }\n\n  function sortNamedType(type) {\n    if (isScalarType(type) || isIntrospectionType(type)) {\n      return type;\n    }\n\n    if (isObjectType(type)) {\n      const config = type.toConfig();\n      return new GraphQLObjectType({\n        ...config,\n        interfaces: () => sortTypes(config.interfaces),\n        fields: () => sortFields(config.fields),\n      });\n    }\n\n    if (isInterfaceType(type)) {\n      const config = type.toConfig();\n      return new GraphQLInterfaceType({\n        ...config,\n        interfaces: () => sortTypes(config.interfaces),\n        fields: () => sortFields(config.fields),\n      });\n    }\n\n    if (isUnionType(type)) {\n      const config = type.toConfig();\n      return new GraphQLUnionType({\n        ...config,\n        types: () => sortTypes(config.types),\n      });\n    }\n\n    if (isEnumType(type)) {\n      const config = type.toConfig();\n      return new GraphQLEnumType({\n        ...config,\n        values: sortObjMap(config.values, (value) => value),\n      });\n    }\n\n    if (isInputObjectType(type)) {\n      const config = type.toConfig();\n      return new GraphQLInputObjectType({\n        ...config,\n        fields: () => sortInputFields(config.fields),\n      });\n    }\n    /* c8 ignore next 3 */\n    // Not reachable, all possible types have been considered.\n\n    false || invariant(false, 'Unexpected type: ' + inspect(type));\n  }\n}\n\nfunction sortObjMap(map, sortValueFn) {\n  const sortedMap = Object.create(null);\n\n  for (const key of Object.keys(map).sort(naturalCompare)) {\n    sortedMap[key] = sortValueFn(map[key]);\n  }\n\n  return sortedMap;\n}\n\nfunction sortByName(array) {\n  return sortBy(array, (obj) => obj.name);\n}\n\nfunction sortBy(array, mapToKey) {\n  return array.slice().sort((obj1, obj2) => {\n    const key1 = mapToKey(obj1);\n    const key2 = mapToKey(obj2);\n    return naturalCompare(key1, key2);\n  });\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { isPrintableAsBlockString } from '../language/blockString.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isObjectType,\n  isScalarType,\n  isUnionType,\n} from '../type/definition.mjs';\nimport {\n  DEFAULT_DEPRECATION_REASON,\n  isSpecifiedDirective,\n} from '../type/directives.mjs';\nimport { isIntrospectionType } from '../type/introspection.mjs';\nimport { isSpecifiedScalarType } from '../type/scalars.mjs';\nimport { astFromValue } from './astFromValue.mjs';\nexport function printSchema(schema) {\n  return printFilteredSchema(\n    schema,\n    (n) => !isSpecifiedDirective(n),\n    isDefinedType,\n  );\n}\nexport function printIntrospectionSchema(schema) {\n  return printFilteredSchema(schema, isSpecifiedDirective, isIntrospectionType);\n}\n\nfunction isDefinedType(type) {\n  return !isSpecifiedScalarType(type) && !isIntrospectionType(type);\n}\n\nfunction printFilteredSchema(schema, directiveFilter, typeFilter) {\n  const directives = schema.getDirectives().filter(directiveFilter);\n  const types = Object.values(schema.getTypeMap()).filter(typeFilter);\n  return [\n    printSchemaDefinition(schema),\n    ...directives.map((directive) => printDirective(directive)),\n    ...types.map((type) => printType(type)),\n  ]\n    .filter(Boolean)\n    .join('\\n\\n');\n}\n\nfunction printSchemaDefinition(schema) {\n  if (schema.description == null && isSchemaOfCommonNames(schema)) {\n    return;\n  }\n\n  const operationTypes = [];\n  const queryType = schema.getQueryType();\n\n  if (queryType) {\n    operationTypes.push(`  query: ${queryType.name}`);\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType) {\n    operationTypes.push(`  mutation: ${mutationType.name}`);\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType) {\n    operationTypes.push(`  subscription: ${subscriptionType.name}`);\n  }\n\n  return printDescription(schema) + `schema {\\n${operationTypes.join('\\n')}\\n}`;\n}\n/**\n * GraphQL schema define root types for each type of operation. These types are\n * the same as any other type and can be named in any manner, however there is\n * a common naming convention:\n *\n * ```graphql\n *   schema {\n *     query: Query\n *     mutation: Mutation\n *     subscription: Subscription\n *   }\n * ```\n *\n * When using this naming convention, the schema description can be omitted.\n */\n\nfunction isSchemaOfCommonNames(schema) {\n  const queryType = schema.getQueryType();\n\n  if (queryType && queryType.name !== 'Query') {\n    return false;\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && mutationType.name !== 'Mutation') {\n    return false;\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && subscriptionType.name !== 'Subscription') {\n    return false;\n  }\n\n  return true;\n}\n\nexport function printType(type) {\n  if (isScalarType(type)) {\n    return printScalar(type);\n  }\n\n  if (isObjectType(type)) {\n    return printObject(type);\n  }\n\n  if (isInterfaceType(type)) {\n    return printInterface(type);\n  }\n\n  if (isUnionType(type)) {\n    return printUnion(type);\n  }\n\n  if (isEnumType(type)) {\n    return printEnum(type);\n  }\n\n  if (isInputObjectType(type)) {\n    return printInputObject(type);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false || invariant(false, 'Unexpected type: ' + inspect(type));\n}\n\nfunction printScalar(type) {\n  return (\n    printDescription(type) + `scalar ${type.name}` + printSpecifiedByURL(type)\n  );\n}\n\nfunction printImplementedInterfaces(type) {\n  const interfaces = type.getInterfaces();\n  return interfaces.length\n    ? ' implements ' + interfaces.map((i) => i.name).join(' & ')\n    : '';\n}\n\nfunction printObject(type) {\n  return (\n    printDescription(type) +\n    `type ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printInterface(type) {\n  return (\n    printDescription(type) +\n    `interface ${type.name}` +\n    printImplementedInterfaces(type) +\n    printFields(type)\n  );\n}\n\nfunction printUnion(type) {\n  const types = type.getTypes();\n  const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';\n  return printDescription(type) + 'union ' + type.name + possibleTypes;\n}\n\nfunction printEnum(type) {\n  const values = type\n    .getValues()\n    .map(\n      (value, i) =>\n        printDescription(value, '  ', !i) +\n        '  ' +\n        value.name +\n        printDeprecated(value.deprecationReason),\n    );\n  return printDescription(type) + `enum ${type.name}` + printBlock(values);\n}\n\nfunction printInputObject(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) => printDescription(f, '  ', !i) + '  ' + printInputValue(f),\n  );\n  return printDescription(type) + `input ${type.name}` + printBlock(fields);\n}\n\nfunction printFields(type) {\n  const fields = Object.values(type.getFields()).map(\n    (f, i) =>\n      printDescription(f, '  ', !i) +\n      '  ' +\n      f.name +\n      printArgs(f.args, '  ') +\n      ': ' +\n      String(f.type) +\n      printDeprecated(f.deprecationReason),\n  );\n  return printBlock(fields);\n}\n\nfunction printBlock(items) {\n  return items.length !== 0 ? ' {\\n' + items.join('\\n') + '\\n}' : '';\n}\n\nfunction printArgs(args, indentation = '') {\n  if (args.length === 0) {\n    return '';\n  } // If every arg does not have a description, print them on one line.\n\n  if (args.every((arg) => !arg.description)) {\n    return '(' + args.map(printInputValue).join(', ') + ')';\n  }\n\n  return (\n    '(\\n' +\n    args\n      .map(\n        (arg, i) =>\n          printDescription(arg, '  ' + indentation, !i) +\n          '  ' +\n          indentation +\n          printInputValue(arg),\n      )\n      .join('\\n') +\n    '\\n' +\n    indentation +\n    ')'\n  );\n}\n\nfunction printInputValue(arg) {\n  const defaultAST = astFromValue(arg.defaultValue, arg.type);\n  let argDecl = arg.name + ': ' + String(arg.type);\n\n  if (defaultAST) {\n    argDecl += ` = ${print(defaultAST)}`;\n  }\n\n  return argDecl + printDeprecated(arg.deprecationReason);\n}\n\nfunction printDirective(directive) {\n  return (\n    printDescription(directive) +\n    'directive @' +\n    directive.name +\n    printArgs(directive.args) +\n    (directive.isRepeatable ? ' repeatable' : '') +\n    ' on ' +\n    directive.locations.join(' | ')\n  );\n}\n\nfunction printDeprecated(reason) {\n  if (reason == null) {\n    return '';\n  }\n\n  if (reason !== DEFAULT_DEPRECATION_REASON) {\n    const astValue = print({\n      kind: Kind.STRING,\n      value: reason,\n    });\n    return ` @deprecated(reason: ${astValue})`;\n  }\n\n  return ' @deprecated';\n}\n\nfunction printSpecifiedByURL(scalar) {\n  if (scalar.specifiedByURL == null) {\n    return '';\n  }\n\n  const astValue = print({\n    kind: Kind.STRING,\n    value: scalar.specifiedByURL,\n  });\n  return ` @specifiedBy(url: ${astValue})`;\n}\n\nfunction printDescription(def, indentation = '', firstInBlock = true) {\n  const { description } = def;\n\n  if (description == null) {\n    return '';\n  }\n\n  const blockString = print({\n    kind: Kind.STRING,\n    value: description,\n    block: isPrintableAsBlockString(description),\n  });\n  const prefix =\n    indentation && !firstInBlock ? '\\n' + indentation : indentation;\n  return prefix + blockString.replace(/\\n/g, '\\n' + indentation) + '\\n';\n}\n","import { Kind } from '../language/kinds.mjs';\n/**\n * Provided a collection of ASTs, presumably each from different files,\n * concatenate the ASTs together into batched AST, useful for validating many\n * GraphQL source files which together represent one conceptual application.\n */\n\nexport function concatAST(documents) {\n  const definitions = [];\n\n  for (const doc of documents) {\n    definitions.push(...doc.definitions);\n  }\n\n  return {\n    kind: Kind.DOCUMENT,\n    definitions,\n  };\n}\n","import { Kind } from '../language/kinds.mjs';\nimport { visit } from '../language/visitor.mjs';\n/**\n * separateOperations accepts a single AST document which may contain many\n * operations and fragments and returns a collection of AST documents each of\n * which contains a single operation as well the fragment definitions it\n * refers to.\n */\n\nexport function separateOperations(documentAST) {\n  const operations = [];\n  const depGraph = Object.create(null); // Populate metadata and build a dependency graph.\n\n  for (const definitionNode of documentAST.definitions) {\n    switch (definitionNode.kind) {\n      case Kind.OPERATION_DEFINITION:\n        operations.push(definitionNode);\n        break;\n\n      case Kind.FRAGMENT_DEFINITION:\n        depGraph[definitionNode.name.value] = collectDependencies(\n          definitionNode.selectionSet,\n        );\n        break;\n\n      default: // ignore non-executable definitions\n    }\n  } // For each operation, produce a new synthesized AST which includes only what\n  // is necessary for completing that operation.\n\n  const separatedDocumentASTs = Object.create(null);\n\n  for (const operation of operations) {\n    const dependencies = new Set();\n\n    for (const fragmentName of collectDependencies(operation.selectionSet)) {\n      collectTransitiveDependencies(dependencies, depGraph, fragmentName);\n    } // Provides the empty string for anonymous operations.\n\n    const operationName = operation.name ? operation.name.value : ''; // The list of definition nodes to be included for this operation, sorted\n    // to retain the same order as the original document.\n\n    separatedDocumentASTs[operationName] = {\n      kind: Kind.DOCUMENT,\n      definitions: documentAST.definitions.filter(\n        (node) =>\n          node === operation ||\n          (node.kind === Kind.FRAGMENT_DEFINITION &&\n            dependencies.has(node.name.value)),\n      ),\n    };\n  }\n\n  return separatedDocumentASTs;\n}\n\n// From a dependency graph, collects a list of transitive dependencies by\n// recursing through a dependency graph.\nfunction collectTransitiveDependencies(collected, depGraph, fromName) {\n  if (!collected.has(fromName)) {\n    collected.add(fromName);\n    const immediateDeps = depGraph[fromName];\n\n    if (immediateDeps !== undefined) {\n      for (const toName of immediateDeps) {\n        collectTransitiveDependencies(collected, depGraph, toName);\n      }\n    }\n  }\n}\n\nfunction collectDependencies(selectionSet) {\n  const dependencies = [];\n  visit(selectionSet, {\n    FragmentSpread(node) {\n      dependencies.push(node.name.value);\n    },\n  });\n  return dependencies;\n}\n","import { printBlockString } from '../language/blockString.mjs';\nimport { isPunctuatorTokenKind, Lexer } from '../language/lexer.mjs';\nimport { isSource, Source } from '../language/source.mjs';\nimport { TokenKind } from '../language/tokenKind.mjs';\n/**\n * Strips characters that are not significant to the validity or execution\n * of a GraphQL document:\n *   - UnicodeBOM\n *   - WhiteSpace\n *   - LineTerminator\n *   - Comment\n *   - Comma\n *   - BlockString indentation\n *\n * Note: It is required to have a delimiter character between neighboring\n * non-punctuator tokens and this function always uses single space as delimiter.\n *\n * It is guaranteed that both input and output documents if parsed would result\n * in the exact same AST except for nodes location.\n *\n * Warning: It is guaranteed that this function will always produce stable results.\n * However, it's not guaranteed that it will stay the same between different\n * releases due to bugfixes or changes in the GraphQL specification.\n *\n * Query example:\n *\n * ```graphql\n * query SomeQuery($foo: String!, $bar: String) {\n *   someField(foo: $foo, bar: $bar) {\n *     a\n *     b {\n *       c\n *       d\n *     }\n *   }\n * }\n * ```\n *\n * Becomes:\n *\n * ```graphql\n * query SomeQuery($foo:String!$bar:String){someField(foo:$foo bar:$bar){a b{c d}}}\n * ```\n *\n * SDL example:\n *\n * ```graphql\n * \"\"\"\n * Type description\n * \"\"\"\n * type Foo {\n *   \"\"\"\n *   Field description\n *   \"\"\"\n *   bar: String\n * }\n * ```\n *\n * Becomes:\n *\n * ```graphql\n * \"\"\"Type description\"\"\" type Foo{\"\"\"Field description\"\"\" bar:String}\n * ```\n */\n\nexport function stripIgnoredCharacters(source) {\n  const sourceObj = isSource(source) ? source : new Source(source);\n  const body = sourceObj.body;\n  const lexer = new Lexer(sourceObj);\n  let strippedBody = '';\n  let wasLastAddedTokenNonPunctuator = false;\n\n  while (lexer.advance().kind !== TokenKind.EOF) {\n    const currentToken = lexer.token;\n    const tokenKind = currentToken.kind;\n    /**\n     * Every two non-punctuator tokens should have space between them.\n     * Also prevent case of non-punctuator token following by spread resulting\n     * in invalid token (e.g. `1...` is invalid Float token).\n     */\n\n    const isNonPunctuator = !isPunctuatorTokenKind(currentToken.kind);\n\n    if (wasLastAddedTokenNonPunctuator) {\n      if (isNonPunctuator || currentToken.kind === TokenKind.SPREAD) {\n        strippedBody += ' ';\n      }\n    }\n\n    const tokenBody = body.slice(currentToken.start, currentToken.end);\n\n    if (tokenKind === TokenKind.BLOCK_STRING) {\n      strippedBody += printBlockString(currentToken.value, {\n        minimize: true,\n      });\n    } else {\n      strippedBody += tokenBody;\n    }\n\n    wasLastAddedTokenNonPunctuator = isNonPunctuator;\n  }\n\n  return strippedBody;\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { assertName } from '../type/assertName.mjs';\n/* c8 ignore start */\n\n/**\n * Upholds the spec rules about naming.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\n\nexport function assertValidName(name) {\n  const error = isValidNameError(name);\n\n  if (error) {\n    throw error;\n  }\n\n  return name;\n}\n/**\n * Returns an Error if a name is invalid.\n * @deprecated Please use `assertName` instead. Will be removed in v17\n */\n\nexport function isValidNameError(name) {\n  typeof name === 'string' || devAssert(false, 'Expected name to be a string.');\n\n  if (name.startsWith('__')) {\n    return new GraphQLError(\n      `Name \"${name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\n    );\n  }\n\n  try {\n    assertName(name);\n  } catch (error) {\n    return error;\n  }\n}\n/* c8 ignore stop */\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { print } from '../language/printer.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isListType,\n  isNamedType,\n  isNonNullType,\n  isObjectType,\n  isRequiredArgument,\n  isRequiredInputField,\n  isScalarType,\n  isUnionType,\n} from '../type/definition.mjs';\nimport { isSpecifiedScalarType } from '../type/scalars.mjs';\nimport { astFromValue } from './astFromValue.mjs';\nimport { sortValueNode } from './sortValueNode.mjs';\nexport let BreakingChangeType;\n\n(function (BreakingChangeType) {\n  BreakingChangeType['TYPE_REMOVED'] = 'TYPE_REMOVED';\n  BreakingChangeType['TYPE_CHANGED_KIND'] = 'TYPE_CHANGED_KIND';\n  BreakingChangeType['TYPE_REMOVED_FROM_UNION'] = 'TYPE_REMOVED_FROM_UNION';\n  BreakingChangeType['VALUE_REMOVED_FROM_ENUM'] = 'VALUE_REMOVED_FROM_ENUM';\n  BreakingChangeType['REQUIRED_INPUT_FIELD_ADDED'] =\n    'REQUIRED_INPUT_FIELD_ADDED';\n  BreakingChangeType['IMPLEMENTED_INTERFACE_REMOVED'] =\n    'IMPLEMENTED_INTERFACE_REMOVED';\n  BreakingChangeType['FIELD_REMOVED'] = 'FIELD_REMOVED';\n  BreakingChangeType['FIELD_CHANGED_KIND'] = 'FIELD_CHANGED_KIND';\n  BreakingChangeType['REQUIRED_ARG_ADDED'] = 'REQUIRED_ARG_ADDED';\n  BreakingChangeType['ARG_REMOVED'] = 'ARG_REMOVED';\n  BreakingChangeType['ARG_CHANGED_KIND'] = 'ARG_CHANGED_KIND';\n  BreakingChangeType['DIRECTIVE_REMOVED'] = 'DIRECTIVE_REMOVED';\n  BreakingChangeType['DIRECTIVE_ARG_REMOVED'] = 'DIRECTIVE_ARG_REMOVED';\n  BreakingChangeType['REQUIRED_DIRECTIVE_ARG_ADDED'] =\n    'REQUIRED_DIRECTIVE_ARG_ADDED';\n  BreakingChangeType['DIRECTIVE_REPEATABLE_REMOVED'] =\n    'DIRECTIVE_REPEATABLE_REMOVED';\n  BreakingChangeType['DIRECTIVE_LOCATION_REMOVED'] =\n    'DIRECTIVE_LOCATION_REMOVED';\n})(BreakingChangeType || (BreakingChangeType = {}));\n\nexport let DangerousChangeType;\n\n(function (DangerousChangeType) {\n  DangerousChangeType['VALUE_ADDED_TO_ENUM'] = 'VALUE_ADDED_TO_ENUM';\n  DangerousChangeType['TYPE_ADDED_TO_UNION'] = 'TYPE_ADDED_TO_UNION';\n  DangerousChangeType['OPTIONAL_INPUT_FIELD_ADDED'] =\n    'OPTIONAL_INPUT_FIELD_ADDED';\n  DangerousChangeType['OPTIONAL_ARG_ADDED'] = 'OPTIONAL_ARG_ADDED';\n  DangerousChangeType['IMPLEMENTED_INTERFACE_ADDED'] =\n    'IMPLEMENTED_INTERFACE_ADDED';\n  DangerousChangeType['ARG_DEFAULT_VALUE_CHANGE'] = 'ARG_DEFAULT_VALUE_CHANGE';\n})(DangerousChangeType || (DangerousChangeType = {}));\n\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of breaking changes covered by the other functions down below.\n */\nexport function findBreakingChanges(oldSchema, newSchema) {\n  // @ts-expect-error\n  return findSchemaChanges(oldSchema, newSchema).filter(\n    (change) => change.type in BreakingChangeType,\n  );\n}\n/**\n * Given two schemas, returns an Array containing descriptions of all the types\n * of potentially dangerous changes covered by the other functions down below.\n */\n\nexport function findDangerousChanges(oldSchema, newSchema) {\n  // @ts-expect-error\n  return findSchemaChanges(oldSchema, newSchema).filter(\n    (change) => change.type in DangerousChangeType,\n  );\n}\n\nfunction findSchemaChanges(oldSchema, newSchema) {\n  return [\n    ...findTypeChanges(oldSchema, newSchema),\n    ...findDirectiveChanges(oldSchema, newSchema),\n  ];\n}\n\nfunction findDirectiveChanges(oldSchema, newSchema) {\n  const schemaChanges = [];\n  const directivesDiff = diff(\n    oldSchema.getDirectives(),\n    newSchema.getDirectives(),\n  );\n\n  for (const oldDirective of directivesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.DIRECTIVE_REMOVED,\n      description: `${oldDirective.name} was removed.`,\n    });\n  }\n\n  for (const [oldDirective, newDirective] of directivesDiff.persisted) {\n    const argsDiff = diff(oldDirective.args, newDirective.args);\n\n    for (const newArg of argsDiff.added) {\n      if (isRequiredArgument(newArg)) {\n        schemaChanges.push({\n          type: BreakingChangeType.REQUIRED_DIRECTIVE_ARG_ADDED,\n          description: `A required arg ${newArg.name} on directive ${oldDirective.name} was added.`,\n        });\n      }\n    }\n\n    for (const oldArg of argsDiff.removed) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,\n        description: `${oldArg.name} was removed from ${oldDirective.name}.`,\n      });\n    }\n\n    if (oldDirective.isRepeatable && !newDirective.isRepeatable) {\n      schemaChanges.push({\n        type: BreakingChangeType.DIRECTIVE_REPEATABLE_REMOVED,\n        description: `Repeatable flag was removed from ${oldDirective.name}.`,\n      });\n    }\n\n    for (const location of oldDirective.locations) {\n      if (!newDirective.locations.includes(location)) {\n        schemaChanges.push({\n          type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,\n          description: `${location} was removed from ${oldDirective.name}.`,\n        });\n      }\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findTypeChanges(oldSchema, newSchema) {\n  const schemaChanges = [];\n  const typesDiff = diff(\n    Object.values(oldSchema.getTypeMap()),\n    Object.values(newSchema.getTypeMap()),\n  );\n\n  for (const oldType of typesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED,\n      description: isSpecifiedScalarType(oldType)\n        ? `Standard scalar ${oldType.name} was removed because it is not referenced anymore.`\n        : `${oldType.name} was removed.`,\n    });\n  }\n\n  for (const [oldType, newType] of typesDiff.persisted) {\n    if (isEnumType(oldType) && isEnumType(newType)) {\n      schemaChanges.push(...findEnumTypeChanges(oldType, newType));\n    } else if (isUnionType(oldType) && isUnionType(newType)) {\n      schemaChanges.push(...findUnionTypeChanges(oldType, newType));\n    } else if (isInputObjectType(oldType) && isInputObjectType(newType)) {\n      schemaChanges.push(...findInputObjectTypeChanges(oldType, newType));\n    } else if (isObjectType(oldType) && isObjectType(newType)) {\n      schemaChanges.push(\n        ...findFieldChanges(oldType, newType),\n        ...findImplementedInterfacesChanges(oldType, newType),\n      );\n    } else if (isInterfaceType(oldType) && isInterfaceType(newType)) {\n      schemaChanges.push(\n        ...findFieldChanges(oldType, newType),\n        ...findImplementedInterfacesChanges(oldType, newType),\n      );\n    } else if (oldType.constructor !== newType.constructor) {\n      schemaChanges.push({\n        type: BreakingChangeType.TYPE_CHANGED_KIND,\n        description:\n          `${oldType.name} changed from ` +\n          `${typeKindName(oldType)} to ${typeKindName(newType)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findInputObjectTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const fieldsDiff = diff(\n    Object.values(oldType.getFields()),\n    Object.values(newType.getFields()),\n  );\n\n  for (const newField of fieldsDiff.added) {\n    if (isRequiredInputField(newField)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_INPUT_FIELD_ADDED,\n        description: `A required field ${newField.name} on input type ${oldType.name} was added.`,\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_INPUT_FIELD_ADDED,\n        description: `An optional field ${newField.name} on input type ${oldType.name} was added.`,\n      });\n    }\n  }\n\n  for (const oldField of fieldsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: `${oldType.name}.${oldField.name} was removed.`,\n    });\n  }\n\n  for (const [oldField, newField] of fieldsDiff.persisted) {\n    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(\n      oldField.type,\n      newField.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} changed type from ` +\n          `${String(oldField.type)} to ${String(newField.type)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findUnionTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const possibleTypesDiff = diff(oldType.getTypes(), newType.getTypes());\n\n  for (const newPossibleType of possibleTypesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.TYPE_ADDED_TO_UNION,\n      description: `${newPossibleType.name} was added to union type ${oldType.name}.`,\n    });\n  }\n\n  for (const oldPossibleType of possibleTypesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,\n      description: `${oldPossibleType.name} was removed from union type ${oldType.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findEnumTypeChanges(oldType, newType) {\n  const schemaChanges = [];\n  const valuesDiff = diff(oldType.getValues(), newType.getValues());\n\n  for (const newValue of valuesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.VALUE_ADDED_TO_ENUM,\n      description: `${newValue.name} was added to enum type ${oldType.name}.`,\n    });\n  }\n\n  for (const oldValue of valuesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,\n      description: `${oldValue.name} was removed from enum type ${oldType.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findImplementedInterfacesChanges(oldType, newType) {\n  const schemaChanges = [];\n  const interfacesDiff = diff(oldType.getInterfaces(), newType.getInterfaces());\n\n  for (const newInterface of interfacesDiff.added) {\n    schemaChanges.push({\n      type: DangerousChangeType.IMPLEMENTED_INTERFACE_ADDED,\n      description: `${newInterface.name} added to interfaces implemented by ${oldType.name}.`,\n    });\n  }\n\n  for (const oldInterface of interfacesDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.IMPLEMENTED_INTERFACE_REMOVED,\n      description: `${oldType.name} no longer implements interface ${oldInterface.name}.`,\n    });\n  }\n\n  return schemaChanges;\n}\n\nfunction findFieldChanges(oldType, newType) {\n  const schemaChanges = [];\n  const fieldsDiff = diff(\n    Object.values(oldType.getFields()),\n    Object.values(newType.getFields()),\n  );\n\n  for (const oldField of fieldsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.FIELD_REMOVED,\n      description: `${oldType.name}.${oldField.name} was removed.`,\n    });\n  }\n\n  for (const [oldField, newField] of fieldsDiff.persisted) {\n    schemaChanges.push(...findArgChanges(oldType, oldField, newField));\n    const isSafe = isChangeSafeForObjectOrInterfaceField(\n      oldField.type,\n      newField.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.FIELD_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} changed type from ` +\n          `${String(oldField.type)} to ${String(newField.type)}.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction findArgChanges(oldType, oldField, newField) {\n  const schemaChanges = [];\n  const argsDiff = diff(oldField.args, newField.args);\n\n  for (const oldArg of argsDiff.removed) {\n    schemaChanges.push({\n      type: BreakingChangeType.ARG_REMOVED,\n      description: `${oldType.name}.${oldField.name} arg ${oldArg.name} was removed.`,\n    });\n  }\n\n  for (const [oldArg, newArg] of argsDiff.persisted) {\n    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(\n      oldArg.type,\n      newArg.type,\n    );\n\n    if (!isSafe) {\n      schemaChanges.push({\n        type: BreakingChangeType.ARG_CHANGED_KIND,\n        description:\n          `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed type from ` +\n          `${String(oldArg.type)} to ${String(newArg.type)}.`,\n      });\n    } else if (oldArg.defaultValue !== undefined) {\n      if (newArg.defaultValue === undefined) {\n        schemaChanges.push({\n          type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n          description: `${oldType.name}.${oldField.name} arg ${oldArg.name} defaultValue was removed.`,\n        });\n      } else {\n        // Since we looking only for client's observable changes we should\n        // compare default values in the same representation as they are\n        // represented inside introspection.\n        const oldValueStr = stringifyValue(oldArg.defaultValue, oldArg.type);\n        const newValueStr = stringifyValue(newArg.defaultValue, newArg.type);\n\n        if (oldValueStr !== newValueStr) {\n          schemaChanges.push({\n            type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,\n            description: `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed defaultValue from ${oldValueStr} to ${newValueStr}.`,\n          });\n        }\n      }\n    }\n  }\n\n  for (const newArg of argsDiff.added) {\n    if (isRequiredArgument(newArg)) {\n      schemaChanges.push({\n        type: BreakingChangeType.REQUIRED_ARG_ADDED,\n        description: `A required arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`,\n      });\n    } else {\n      schemaChanges.push({\n        type: DangerousChangeType.OPTIONAL_ARG_ADDED,\n        description: `An optional arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`,\n      });\n    }\n  }\n\n  return schemaChanges;\n}\n\nfunction isChangeSafeForObjectOrInterfaceField(oldType, newType) {\n  if (isListType(oldType)) {\n    return (\n      // if they're both lists, make sure the underlying types are compatible\n      (isListType(newType) &&\n        isChangeSafeForObjectOrInterfaceField(\n          oldType.ofType,\n          newType.ofType,\n        )) || // moving from nullable to non-null of the same underlying type is safe\n      (isNonNullType(newType) &&\n        isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType))\n    );\n  }\n\n  if (isNonNullType(oldType)) {\n    // if they're both non-null, make sure the underlying types are compatible\n    return (\n      isNonNullType(newType) &&\n      isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType)\n    );\n  }\n\n  return (\n    // if they're both named types, see if their names are equivalent\n    (isNamedType(newType) && oldType.name === newType.name) || // moving from nullable to non-null of the same underlying type is safe\n    (isNonNullType(newType) &&\n      isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType))\n  );\n}\n\nfunction isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {\n  if (isListType(oldType)) {\n    // if they're both lists, make sure the underlying types are compatible\n    return (\n      isListType(newType) &&\n      isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType)\n    );\n  }\n\n  if (isNonNullType(oldType)) {\n    return (\n      // if they're both non-null, make sure the underlying types are\n      // compatible\n      (isNonNullType(newType) &&\n        isChangeSafeForInputObjectFieldOrFieldArg(\n          oldType.ofType,\n          newType.ofType,\n        )) || // moving from non-null to nullable of the same underlying type is safe\n      (!isNonNullType(newType) &&\n        isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType))\n    );\n  } // if they're both named types, see if their names are equivalent\n\n  return isNamedType(newType) && oldType.name === newType.name;\n}\n\nfunction typeKindName(type) {\n  if (isScalarType(type)) {\n    return 'a Scalar type';\n  }\n\n  if (isObjectType(type)) {\n    return 'an Object type';\n  }\n\n  if (isInterfaceType(type)) {\n    return 'an Interface type';\n  }\n\n  if (isUnionType(type)) {\n    return 'a Union type';\n  }\n\n  if (isEnumType(type)) {\n    return 'an Enum type';\n  }\n\n  if (isInputObjectType(type)) {\n    return 'an Input type';\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false || invariant(false, 'Unexpected type: ' + inspect(type));\n}\n\nfunction stringifyValue(value, type) {\n  const ast = astFromValue(value, type);\n  ast != null || invariant(false);\n  return print(sortValueNode(ast));\n}\n\nfunction diff(oldArray, newArray) {\n  const added = [];\n  const removed = [];\n  const persisted = [];\n  const oldMap = keyMap(oldArray, ({ name }) => name);\n  const newMap = keyMap(newArray, ({ name }) => name);\n\n  for (const oldItem of oldArray) {\n    const newItem = newMap[oldItem.name];\n\n    if (newItem === undefined) {\n      removed.push(oldItem);\n    } else {\n      persisted.push([oldItem, newItem]);\n    }\n  }\n\n  for (const newItem of newArray) {\n    if (oldMap[newItem.name] === undefined) {\n      added.push(newItem);\n    }\n  }\n\n  return {\n    added,\n    persisted,\n    removed,\n  };\n}\n","/**\n * Given a Path and a key, return a new Path containing the new key.\n */\nexport function addPath(prev, key, typename) {\n  return {\n    prev,\n    key,\n    typename,\n  };\n}\n/**\n * Given a Path, return an Array of the path keys.\n */\n\nexport function pathToArray(path) {\n  const flattened = [];\n  let curr = path;\n\n  while (curr) {\n    flattened.push(curr.key);\n    curr = curr.prev;\n  }\n\n  return flattened.reverse();\n}\n","export function devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","const MAX_SUGGESTIONS = 5;\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\n\nexport function didYouMean(firstArg, secondArg) {\n  const [subMessage, suggestionsArg] = secondArg\n    ? [firstArg, secondArg]\n    : [undefined, firstArg];\n  let message = ' Did you mean ';\n\n  if (subMessage) {\n    message += subMessage + ' ';\n  }\n\n  const suggestions = suggestionsArg.map((x) => `\"${x}\"`);\n\n  switch (suggestions.length) {\n    case 0:\n      return '';\n\n    case 1:\n      return message + suggestions[0] + '?';\n\n    case 2:\n      return message + suggestions[0] + ' or ' + suggestions[1] + '?';\n  }\n\n  const selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  const lastItem = selected.pop();\n  return message + selected.join(', ') + ', or ' + lastItem + '?';\n}\n","/**\n * Groups array items into a Map, given a function to produce grouping key.\n */\nexport function groupBy(list, keyFn) {\n  const result = new Map();\n\n  for (const item of list) {\n    const key = keyFn(item);\n    const group = result.get(key);\n\n    if (group === undefined) {\n      result.set(key, [item]);\n    } else {\n      group.push(item);\n    }\n  }\n\n  return result;\n}\n","const MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","import { inspect } from './inspect.mjs';\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n * See: https://webpack.js.org/guides/production/\n */\n\nexport const instanceOf =\n  /* c8 ignore next 6 */\n  // FIXME: https://github.com/graphql/graphql-js/issues/2317\n  // eslint-disable-next-line no-undef\n  process.env.NODE_ENV === 'production'\n    ? function instanceOf(value, constructor) {\n        return value instanceof constructor;\n      }\n    : function instanceOf(value, constructor) {\n        if (value instanceof constructor) {\n          return true;\n        }\n\n        if (typeof value === 'object' && value !== null) {\n          var _value$constructor;\n\n          // Prefer Symbol.toStringTag since it is immune to minification.\n          const className = constructor.prototype[Symbol.toStringTag];\n          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009\n              ? value[Symbol.toStringTag]\n              : (_value$constructor = value.constructor) === null ||\n                _value$constructor === void 0\n              ? void 0\n              : _value$constructor.name;\n\n          if (className === valueClassName) {\n            const stringifiedValue = inspect(value);\n            throw new Error(`Cannot use ${className} \"${stringifiedValue}\" from another module or realm.\n\nEnsure that there is only one instance of \"graphql\" in the node_modules\ndirectory. If different versions of \"graphql\" are the dependencies of other\nrelied on modules, use \"resolutions\" to ensure only one version is installed.\n\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\n\nDuplicate \"graphql\" modules cannot be used at the same time since different\nversions may have different capabilities and behavior. The data from one\nversion used in the function from another could produce confusing and\nspurious results.`);\n          }\n        }\n\n        return false;\n      };\n","export function invariant(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(\n      message != null ? message : 'Unexpected invariant triggered.',\n    );\n  }\n}\n","/**\n * Returns true if the provided object is an Object (i.e. not a string literal)\n * and implements the Iterator protocol.\n *\n * This may be used in place of [Array.isArray()][isArray] to determine if\n * an object should be iterated-over e.g. Array, Map, Set, Int8Array,\n * TypedArray, etc. but excludes string literals.\n *\n * @example\n * ```ts\n * isIterableObject([ 1, 2, 3 ]) // true\n * isIterableObject(new Map()) // true\n * isIterableObject('ABC') // false\n * isIterableObject({ key: 'value' }) // false\n * isIterableObject({ length: 1, 0: 'Alpha' }) // false\n * ```\n */\nexport function isIterableObject(maybeIterable) {\n  return (\n    typeof maybeIterable === 'object' &&\n    typeof (maybeIterable === null || maybeIterable === void 0\n      ? void 0\n      : maybeIterable[Symbol.iterator]) === 'function'\n  );\n}\n","/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport function isObjectLike(value) {\n  return typeof value == 'object' && value !== null;\n}\n","/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * const entriesByName = keyMap(\n *   phoneBook,\n *   entry => entry.name\n * )\n *\n * // {\n * //   Jon: { name: 'Jon', num: '555-1234' },\n * //   Jenny: { name: 'Jenny', num: '867-5309' }\n * // }\n *\n * const jennyEntry = entriesByName['Jenny']\n *\n * // { name: 'Jenny', num: '857-6309' }\n * ```\n */\nexport function keyMap(list, keyFn) {\n  const result = Object.create(null);\n\n  for (const item of list) {\n    result[keyFn(item)] = item;\n  }\n\n  return result;\n}\n","/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n * ```ts\n * const phoneBook = [\n *   { name: 'Jon', num: '555-1234' },\n *   { name: 'Jenny', num: '867-5309' }\n * ]\n *\n * // { Jon: '555-1234', Jenny: '867-5309' }\n * const phonesByName = keyValMap(\n *   phoneBook,\n *   entry => entry.name,\n *   entry => entry.num\n * )\n * ```\n */\nexport function keyValMap(list, keyFn, valFn) {\n  const result = Object.create(null);\n\n  for (const item of list) {\n    result[keyFn(item)] = valFn(item);\n  }\n\n  return result;\n}\n","/**\n * Creates an object map with the same keys as `map` and values generated by\n * running each value of `map` thru `fn`.\n */\nexport function mapValue(map, fn) {\n  const result = Object.create(null);\n\n  for (const key of Object.keys(map)) {\n    result[key] = fn(map[key], key);\n  }\n\n  return result;\n}\n","/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nexport function naturalCompare(aStr, bStr) {\n  let aIndex = 0;\n  let bIndex = 0;\n\n  while (aIndex < aStr.length && bIndex < bStr.length) {\n    let aChar = aStr.charCodeAt(aIndex);\n    let bChar = bStr.charCodeAt(bIndex);\n\n    if (isDigit(aChar) && isDigit(bChar)) {\n      let aNum = 0;\n\n      do {\n        ++aIndex;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIndex);\n      } while (isDigit(aChar) && aNum > 0);\n\n      let bNum = 0;\n\n      do {\n        ++bIndex;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIndex);\n      } while (isDigit(bChar) && bNum > 0);\n\n      if (aNum < bNum) {\n        return -1;\n      }\n\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n\n      if (aChar > bChar) {\n        return 1;\n      }\n\n      ++aIndex;\n      ++bIndex;\n    }\n  }\n\n  return aStr.length - bStr.length;\n}\nconst DIGIT_0 = 48;\nconst DIGIT_9 = 57;\n\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\n","/**\n * Build a string describing the path.\n */\nexport function printPathArray(path) {\n  return path\n    .map((key) =>\n      typeof key === 'number' ? '[' + key.toString() + ']' : '.' + key,\n    )\n    .join('');\n}\n","import { naturalCompare } from './naturalCompare.mjs';\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\n\nexport function suggestionList(input, options) {\n  const optionsByDistance = Object.create(null);\n  const lexicalDistance = new LexicalDistance(input);\n  const threshold = Math.floor(input.length * 0.4) + 1;\n\n  for (const option of options) {\n    const distance = lexicalDistance.measure(option, threshold);\n\n    if (distance !== undefined) {\n      optionsByDistance[option] = distance;\n    }\n  }\n\n  return Object.keys(optionsByDistance).sort((a, b) => {\n    const distanceDiff = optionsByDistance[a] - optionsByDistance[b];\n    return distanceDiff !== 0 ? distanceDiff : naturalCompare(a, b);\n  });\n}\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * Includes a custom alteration from Damerau-Levenshtein to treat case changes\n * as a single edit which helps identify mis-cased values with an edit distance\n * of 1.\n *\n * This distance can be useful for detecting typos in input or sorting\n */\n\nclass LexicalDistance {\n  constructor(input) {\n    this._input = input;\n    this._inputLowerCase = input.toLowerCase();\n    this._inputArray = stringToArray(this._inputLowerCase);\n    this._rows = [\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n      new Array(input.length + 1).fill(0),\n    ];\n  }\n\n  measure(option, threshold) {\n    if (this._input === option) {\n      return 0;\n    }\n\n    const optionLowerCase = option.toLowerCase(); // Any case change counts as a single edit\n\n    if (this._inputLowerCase === optionLowerCase) {\n      return 1;\n    }\n\n    let a = stringToArray(optionLowerCase);\n    let b = this._inputArray;\n\n    if (a.length < b.length) {\n      const tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    const aLength = a.length;\n    const bLength = b.length;\n\n    if (aLength - bLength > threshold) {\n      return undefined;\n    }\n\n    const rows = this._rows;\n\n    for (let j = 0; j <= bLength; j++) {\n      rows[0][j] = j;\n    }\n\n    for (let i = 1; i <= aLength; i++) {\n      const upRow = rows[(i - 1) % 3];\n      const currentRow = rows[i % 3];\n      let smallestCell = (currentRow[0] = i);\n\n      for (let j = 1; j <= bLength; j++) {\n        const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n        let currentCell = Math.min(\n          upRow[j] + 1, // delete\n          currentRow[j - 1] + 1, // insert\n          upRow[j - 1] + cost, // substitute\n        );\n\n        if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {\n          // transposition\n          const doubleDiagonalCell = rows[(i - 2) % 3][j - 2];\n          currentCell = Math.min(currentCell, doubleDiagonalCell + 1);\n        }\n\n        if (currentCell < smallestCell) {\n          smallestCell = currentCell;\n        }\n\n        currentRow[j] = currentCell;\n      } // Early exit, since distance can't go smaller than smallest element of the previous row.\n\n      if (smallestCell > threshold) {\n        return undefined;\n      }\n    }\n\n    const distance = rows[aLength % 3][bLength];\n    return distance <= threshold ? distance : undefined;\n  }\n}\n\nfunction stringToArray(str) {\n  const strLength = str.length;\n  const array = new Array(strLength);\n\n  for (let i = 0; i < strLength; ++i) {\n    array[i] = str.charCodeAt(i);\n  }\n\n  return array;\n}\n","export function toObjMap(obj) {\n  if (obj == null) {\n    return Object.create(null);\n  }\n\n  if (Object.getPrototypeOf(obj) === null) {\n    return obj;\n  }\n\n  const map = Object.create(null);\n\n  for (const [key, value] of Object.entries(obj)) {\n    map[key] = value;\n  }\n\n  return map;\n}\n","/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport class Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport class Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\n/**\n * @internal\n */\nexport const QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nexport let OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (OperationTypeNode = {}));\n","import { isWhiteSpace } from './characterClasses.mjs';\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\n\nexport function dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nexport function isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0))); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n","/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nexport function isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nexport function isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nexport function isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n","/**\n * The set of allowed directive location values.\n */\nexport let DirectiveLocation;\n/**\n * The enum type representing the directive location values.\n *\n * @deprecated Please use `DirectiveLocation`. Will be remove in v17.\n */\n\n(function (DirectiveLocation) {\n  DirectiveLocation['QUERY'] = 'QUERY';\n  DirectiveLocation['MUTATION'] = 'MUTATION';\n  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';\n  DirectiveLocation['FIELD'] = 'FIELD';\n  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';\n  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';\n  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';\n  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';\n  DirectiveLocation['SCHEMA'] = 'SCHEMA';\n  DirectiveLocation['SCALAR'] = 'SCALAR';\n  DirectiveLocation['OBJECT'] = 'OBJECT';\n  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';\n  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';\n  DirectiveLocation['INTERFACE'] = 'INTERFACE';\n  DirectiveLocation['UNION'] = 'UNION';\n  DirectiveLocation['ENUM'] = 'ENUM';\n  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';\n  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';\n})(DirectiveLocation || (DirectiveLocation = {}));\n","/**\n * The set of allowed kind values for AST nodes.\n */\nexport let Kind;\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Token } from './ast.mjs';\nimport { dedentBlockStringLines } from './blockString.mjs';\nimport { isDigit, isNameContinue, isNameStart } from './characterClasses.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport class Lexer {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  constructor(source) {\n    const startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Lexer';\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n  advance() {\n    this.lastToken = this.token;\n    const token = (this.token = this.lookahead());\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n\n  lookahead() {\n    let token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        if (token.next) {\n          token = token.next;\n        } else {\n          // Read the next token and form a link in the token linked-list.\n          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.\n\n          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.\n\n          nextToken.prev = token;\n          token = nextToken;\n        }\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  }\n}\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return (\n    kind === TokenKind.BANG ||\n    kind === TokenKind.DOLLAR ||\n    kind === TokenKind.AMP ||\n    kind === TokenKind.PAREN_L ||\n    kind === TokenKind.PAREN_R ||\n    kind === TokenKind.SPREAD ||\n    kind === TokenKind.COLON ||\n    kind === TokenKind.EQUALS ||\n    kind === TokenKind.AT ||\n    kind === TokenKind.BRACKET_L ||\n    kind === TokenKind.BRACKET_R ||\n    kind === TokenKind.BRACE_L ||\n    kind === TokenKind.PIPE ||\n    kind === TokenKind.BRACE_R\n  );\n}\n/**\n * A Unicode scalar value is any Unicode code point except surrogate code\n * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and\n * 0xE000 to 0x10FFFF.\n *\n * SourceCharacter ::\n *   - \"Any Unicode scalar value\"\n */\n\nfunction isUnicodeScalarValue(code) {\n  return (\n    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)\n  );\n}\n/**\n * The GraphQL specification defines source text as a sequence of unicode scalar\n * values (which Unicode defines to exclude surrogate code points). However\n * JavaScript defines strings as a sequence of UTF-16 code units which may\n * include surrogates. A surrogate pair is a valid source character as it\n * encodes a supplementary code point (above U+FFFF), but unpaired surrogate\n * code points are not valid source characters.\n */\n\nfunction isSupplementaryCodePoint(body, location) {\n  return (\n    isLeadingSurrogate(body.charCodeAt(location)) &&\n    isTrailingSurrogate(body.charCodeAt(location + 1))\n  );\n}\n\nfunction isLeadingSurrogate(code) {\n  return code >= 0xd800 && code <= 0xdbff;\n}\n\nfunction isTrailingSurrogate(code) {\n  return code >= 0xdc00 && code <= 0xdfff;\n}\n/**\n * Prints the code point (or end of file reference) at a given location in a\n * source for use in error messages.\n *\n * Printable ASCII is printed quoted, while other points are printed in Unicode\n * code point form (ie. U+1234).\n */\n\nfunction printCodePointAt(lexer, location) {\n  const code = lexer.source.body.codePointAt(location);\n\n  if (code === undefined) {\n    return TokenKind.EOF;\n  } else if (code >= 0x0020 && code <= 0x007e) {\n    // Printable ASCII\n    const char = String.fromCodePoint(code);\n    return char === '\"' ? \"'\\\"'\" : `\"${char}\"`;\n  } // Unicode code point\n\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');\n}\n/**\n * Create a token with line and column location information.\n */\n\nfunction createToken(lexer, kind, start, end, value) {\n  const line = lexer.line;\n  const col = 1 + start - lexer.lineStart;\n  return new Token(kind, start, end, line, col, value);\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\nfunction readNextToken(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // SourceCharacter\n\n    switch (code) {\n      // Ignored ::\n      //   - UnicodeBOM\n      //   - WhiteSpace\n      //   - LineTerminator\n      //   - Comment\n      //   - Comma\n      //\n      // UnicodeBOM :: \"Byte Order Mark (U+FEFF)\"\n      //\n      // WhiteSpace ::\n      //   - \"Horizontal Tab (U+0009)\"\n      //   - \"Space (U+0020)\"\n      //\n      // Comma :: ,\n      case 0xfeff: // <BOM>\n\n      case 0x0009: // \\t\n\n      case 0x0020: // <space>\n\n      case 0x002c:\n        // ,\n        ++position;\n        continue;\n      // LineTerminator ::\n      //   - \"New Line (U+000A)\"\n      //   - \"Carriage Return (U+000D)\" [lookahead != \"New Line (U+000A)\"]\n      //   - \"Carriage Return (U+000D)\" \"New Line (U+000A)\"\n\n      case 0x000a:\n        // \\n\n        ++position;\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n\n      case 0x000d:\n        // \\r\n        if (body.charCodeAt(position + 1) === 0x000a) {\n          position += 2;\n        } else {\n          ++position;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = position;\n        continue;\n      // Comment\n\n      case 0x0023:\n        // #\n        return readComment(lexer, position);\n      // Token ::\n      //   - Punctuator\n      //   - Name\n      //   - IntValue\n      //   - FloatValue\n      //   - StringValue\n      //\n      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }\n\n      case 0x0021:\n        // !\n        return createToken(lexer, TokenKind.BANG, position, position + 1);\n\n      case 0x0024:\n        // $\n        return createToken(lexer, TokenKind.DOLLAR, position, position + 1);\n\n      case 0x0026:\n        // &\n        return createToken(lexer, TokenKind.AMP, position, position + 1);\n\n      case 0x0028:\n        // (\n        return createToken(lexer, TokenKind.PAREN_L, position, position + 1);\n\n      case 0x0029:\n        // )\n        return createToken(lexer, TokenKind.PAREN_R, position, position + 1);\n\n      case 0x002e:\n        // .\n        if (\n          body.charCodeAt(position + 1) === 0x002e &&\n          body.charCodeAt(position + 2) === 0x002e\n        ) {\n          return createToken(lexer, TokenKind.SPREAD, position, position + 3);\n        }\n\n        break;\n\n      case 0x003a:\n        // :\n        return createToken(lexer, TokenKind.COLON, position, position + 1);\n\n      case 0x003d:\n        // =\n        return createToken(lexer, TokenKind.EQUALS, position, position + 1);\n\n      case 0x0040:\n        // @\n        return createToken(lexer, TokenKind.AT, position, position + 1);\n\n      case 0x005b:\n        // [\n        return createToken(lexer, TokenKind.BRACKET_L, position, position + 1);\n\n      case 0x005d:\n        // ]\n        return createToken(lexer, TokenKind.BRACKET_R, position, position + 1);\n\n      case 0x007b:\n        // {\n        return createToken(lexer, TokenKind.BRACE_L, position, position + 1);\n\n      case 0x007c:\n        // |\n        return createToken(lexer, TokenKind.PIPE, position, position + 1);\n\n      case 0x007d:\n        // }\n        return createToken(lexer, TokenKind.BRACE_R, position, position + 1);\n      // StringValue\n\n      case 0x0022:\n        // \"\n        if (\n          body.charCodeAt(position + 1) === 0x0022 &&\n          body.charCodeAt(position + 2) === 0x0022\n        ) {\n          return readBlockString(lexer, position);\n        }\n\n        return readString(lexer, position);\n    } // IntValue | FloatValue (Digit | -)\n\n    if (isDigit(code) || code === 0x002d) {\n      return readNumber(lexer, position, code);\n    } // Name\n\n    if (isNameStart(code)) {\n      return readName(lexer, position);\n    }\n\n    throw syntaxError(\n      lexer.source,\n      position,\n      code === 0x0027\n        ? 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?'\n        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)\n        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`\n        : `Invalid character: ${printCodePointAt(lexer, position)}.`,\n    );\n  }\n\n  return createToken(lexer, TokenKind.EOF, bodyLength, bodyLength);\n}\n/**\n * Reads a comment token from the source file.\n *\n * ```\n * Comment :: # CommentChar* [lookahead != CommentChar]\n *\n * CommentChar :: SourceCharacter but not LineTerminator\n * ```\n */\n\nfunction readComment(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.COMMENT,\n    start,\n    position,\n    body.slice(start + 1, position),\n  );\n}\n/**\n * Reads a number token from the source file, either a FloatValue or an IntValue\n * depending on whether a FractionalPart or ExponentPart is encountered.\n *\n * ```\n * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]\n *\n * IntegerPart ::\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit Digit*\n *\n * NegativeSign :: -\n *\n * NonZeroDigit :: Digit but not `0`\n *\n * FloatValue ::\n *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]\n *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]\n *\n * FractionalPart :: . Digit+\n *\n * ExponentPart :: ExponentIndicator Sign? Digit+\n *\n * ExponentIndicator :: one of `e` `E`\n *\n * Sign :: one of + -\n * ```\n */\n\nfunction readNumber(lexer, start, firstCode) {\n  const body = lexer.source.body;\n  let position = start;\n  let code = firstCode;\n  let isFloat = false; // NegativeSign (-)\n\n  if (code === 0x002d) {\n    code = body.charCodeAt(++position);\n  } // Zero (0)\n\n  if (code === 0x0030) {\n    code = body.charCodeAt(++position);\n\n    if (isDigit(code)) {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid number, unexpected digit after 0: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  } else {\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Full stop (.)\n\n  if (code === 0x002e) {\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // E e\n\n  if (code === 0x0045 || code === 0x0065) {\n    isFloat = true;\n    code = body.charCodeAt(++position); // + -\n\n    if (code === 0x002b || code === 0x002d) {\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(lexer, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n  if (code === 0x002e || isNameStart(code)) {\n    throw syntaxError(\n      lexer.source,\n      position,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        position,\n      )}.`,\n    );\n  }\n\n  return createToken(\n    lexer,\n    isFloat ? TokenKind.FLOAT : TokenKind.INT,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n/**\n * Returns the new position in the source after reading one or more digits.\n */\n\nfunction readDigits(lexer, start, firstCode) {\n  if (!isDigit(firstCode)) {\n    throw syntaxError(\n      lexer.source,\n      start,\n      `Invalid number, expected digit but got: ${printCodePointAt(\n        lexer,\n        start,\n      )}.`,\n    );\n  }\n\n  const body = lexer.source.body;\n  let position = start + 1; // +1 to skip first firstCode\n\n  while (isDigit(body.charCodeAt(position))) {\n    ++position;\n  }\n\n  return position;\n}\n/**\n * Reads a single-quote string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"` [lookahead != `\"`]\n *   - `\"` StringCharacter+ `\"`\n *\n * StringCharacter ::\n *   - SourceCharacter but not `\"` or `\\` or LineTerminator\n *   - `\\u` EscapedUnicode\n *   - `\\` EscapedCharacter\n *\n * EscapedUnicode ::\n *   - `{` HexDigit+ `}`\n *   - HexDigit HexDigit HexDigit HexDigit\n *\n * EscapedCharacter :: one of `\"` `\\` `/` `b` `f` `n` `r` `t`\n * ```\n */\n\nfunction readString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n  let chunkStart = position;\n  let value = '';\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Quote (\")\n\n    if (code === 0x0022) {\n      value += body.slice(chunkStart, position);\n      return createToken(lexer, TokenKind.STRING, start, position + 1, value);\n    } // Escape Sequence (\\)\n\n    if (code === 0x005c) {\n      value += body.slice(chunkStart, position);\n      const escape =\n        body.charCodeAt(position + 1) === 0x0075 // u\n          ? body.charCodeAt(position + 2) === 0x007b // {\n            ? readEscapedUnicodeVariableWidth(lexer, position)\n            : readEscapedUnicodeFixedWidth(lexer, position)\n          : readEscapedCharacter(lexer, position);\n      value += escape.value;\n      position += escape.size;\n      chunkStart = position;\n      continue;\n    } // LineTerminator (\\n | \\r)\n\n    if (code === 0x000a || code === 0x000d) {\n      break;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n} // The string value and lexed size of an escape sequence.\n\nfunction readEscapedUnicodeVariableWidth(lexer, position) {\n  const body = lexer.source.body;\n  let point = 0;\n  let size = 3; // Cannot be larger than 12 chars (\\u{00000000}).\n\n  while (size < 12) {\n    const code = body.charCodeAt(position + size++); // Closing Brace (})\n\n    if (code === 0x007d) {\n      // Must be at least 5 chars (\\u{0}) and encode a Unicode scalar value.\n      if (size < 5 || !isUnicodeScalarValue(point)) {\n        break;\n      }\n\n      return {\n        value: String.fromCodePoint(point),\n        size,\n      };\n    } // Append this hex digit to the code point.\n\n    point = (point << 4) | readHexDigit(code);\n\n    if (point < 0) {\n      break;\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(\n      position,\n      position + size,\n    )}\".`,\n  );\n}\n\nfunction readEscapedUnicodeFixedWidth(lexer, position) {\n  const body = lexer.source.body;\n  const code = read16BitHexCode(body, position + 2);\n\n  if (isUnicodeScalarValue(code)) {\n    return {\n      value: String.fromCodePoint(code),\n      size: 6,\n    };\n  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when\n  // a valid pair is formed.\n\n  if (isLeadingSurrogate(code)) {\n    // \\u\n    if (\n      body.charCodeAt(position + 6) === 0x005c &&\n      body.charCodeAt(position + 7) === 0x0075\n    ) {\n      const trailingCode = read16BitHexCode(body, position + 8);\n\n      if (isTrailingSurrogate(trailingCode)) {\n        // JavaScript defines strings as a sequence of UTF-16 code units and\n        // encodes Unicode code points above U+FFFF using a surrogate pair of\n        // code units. Since this is a surrogate pair escape sequence, just\n        // include both codes into the JavaScript string value. Had JavaScript\n        // not been internally based on UTF-16, then this surrogate pair would\n        // be decoded to retrieve the supplementary code point.\n        return {\n          value: String.fromCodePoint(code, trailingCode),\n          size: 12,\n        };\n      }\n    }\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid Unicode escape sequence: \"${body.slice(position, position + 6)}\".`,\n  );\n}\n/**\n * Reads four hexadecimal characters and returns the positive integer that 16bit\n * hexadecimal string represents. For example, \"000f\" will return 15, and \"dead\"\n * will return 57005.\n *\n * Returns a negative number if any char was not a valid hexadecimal digit.\n */\n\nfunction read16BitHexCode(body, position) {\n  // readHexDigit() returns -1 on error. ORing a negative value with any other\n  // value always produces a negative value.\n  return (\n    (readHexDigit(body.charCodeAt(position)) << 12) |\n    (readHexDigit(body.charCodeAt(position + 1)) << 8) |\n    (readHexDigit(body.charCodeAt(position + 2)) << 4) |\n    readHexDigit(body.charCodeAt(position + 3))\n  );\n}\n/**\n * Reads a hexadecimal character and returns its positive integer value (0-15).\n *\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 if the provided character code was not a valid hexadecimal digit.\n *\n * HexDigit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n *   - `A` `B` `C` `D` `E` `F`\n *   - `a` `b` `c` `d` `e` `f`\n */\n\nfunction readHexDigit(code) {\n  return code >= 0x0030 && code <= 0x0039 // 0-9\n    ? code - 0x0030\n    : code >= 0x0041 && code <= 0x0046 // A-F\n    ? code - 0x0037\n    : code >= 0x0061 && code <= 0x0066 // a-f\n    ? code - 0x0057\n    : -1;\n}\n/**\n * | Escaped Character | Code Point | Character Name               |\n * | ----------------- | ---------- | ---------------------------- |\n * | `\"`               | U+0022     | double quote                 |\n * | `\\`               | U+005C     | reverse solidus (back slash) |\n * | `/`               | U+002F     | solidus (forward slash)      |\n * | `b`               | U+0008     | backspace                    |\n * | `f`               | U+000C     | form feed                    |\n * | `n`               | U+000A     | line feed (new line)         |\n * | `r`               | U+000D     | carriage return              |\n * | `t`               | U+0009     | horizontal tab               |\n */\n\nfunction readEscapedCharacter(lexer, position) {\n  const body = lexer.source.body;\n  const code = body.charCodeAt(position + 1);\n\n  switch (code) {\n    case 0x0022:\n      // \"\n      return {\n        value: '\\u0022',\n        size: 2,\n      };\n\n    case 0x005c:\n      // \\\n      return {\n        value: '\\u005c',\n        size: 2,\n      };\n\n    case 0x002f:\n      // /\n      return {\n        value: '\\u002f',\n        size: 2,\n      };\n\n    case 0x0062:\n      // b\n      return {\n        value: '\\u0008',\n        size: 2,\n      };\n\n    case 0x0066:\n      // f\n      return {\n        value: '\\u000c',\n        size: 2,\n      };\n\n    case 0x006e:\n      // n\n      return {\n        value: '\\u000a',\n        size: 2,\n      };\n\n    case 0x0072:\n      // r\n      return {\n        value: '\\u000d',\n        size: 2,\n      };\n\n    case 0x0074:\n      // t\n      return {\n        value: '\\u0009',\n        size: 2,\n      };\n  }\n\n  throw syntaxError(\n    lexer.source,\n    position,\n    `Invalid character escape sequence: \"${body.slice(\n      position,\n      position + 2,\n    )}\".`,\n  );\n}\n/**\n * Reads a block string token from the source file.\n *\n * ```\n * StringValue ::\n *   - `\"\"\"` BlockStringCharacter* `\"\"\"`\n *\n * BlockStringCharacter ::\n *   - SourceCharacter but not `\"\"\"` or `\\\"\"\"`\n *   - `\\\"\"\"`\n * ```\n */\n\nfunction readBlockString(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let lineStart = lexer.lineStart;\n  let position = start + 3;\n  let chunkStart = position;\n  let currentLine = '';\n  const blockLines = [];\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position); // Closing Triple-Quote (\"\"\")\n\n    if (\n      code === 0x0022 &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n      const token = createToken(\n        lexer,\n        TokenKind.BLOCK_STRING,\n        start,\n        position + 3, // Return a string of the lines joined with U+000A.\n        dedentBlockStringLines(blockLines).join('\\n'),\n      );\n      lexer.line += blockLines.length - 1;\n      lexer.lineStart = lineStart;\n      return token;\n    } // Escaped Triple-Quote (\\\"\"\")\n\n    if (\n      code === 0x005c &&\n      body.charCodeAt(position + 1) === 0x0022 &&\n      body.charCodeAt(position + 2) === 0x0022 &&\n      body.charCodeAt(position + 3) === 0x0022\n    ) {\n      currentLine += body.slice(chunkStart, position);\n      chunkStart = position + 1; // skip only slash\n\n      position += 4;\n      continue;\n    } // LineTerminator\n\n    if (code === 0x000a || code === 0x000d) {\n      currentLine += body.slice(chunkStart, position);\n      blockLines.push(currentLine);\n\n      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      currentLine = '';\n      chunkStart = position;\n      lineStart = position;\n      continue;\n    } // SourceCharacter\n\n    if (isUnicodeScalarValue(code)) {\n      ++position;\n    } else if (isSupplementaryCodePoint(body, position)) {\n      position += 2;\n    } else {\n      throw syntaxError(\n        lexer.source,\n        position,\n        `Invalid character within String: ${printCodePointAt(\n          lexer,\n          position,\n        )}.`,\n      );\n    }\n  }\n\n  throw syntaxError(lexer.source, position, 'Unterminated string.');\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * ```\n * Name ::\n *   - NameStart NameContinue* [lookahead != NameContinue]\n * ```\n */\n\nfunction readName(lexer, start) {\n  const body = lexer.source.body;\n  const bodyLength = body.length;\n  let position = start + 1;\n\n  while (position < bodyLength) {\n    const code = body.charCodeAt(position);\n\n    if (isNameContinue(code)) {\n      ++position;\n    } else {\n      break;\n    }\n  }\n\n  return createToken(\n    lexer,\n    TokenKind.NAME,\n    start,\n    position,\n    body.slice(start, position),\n  );\n}\n","import { invariant } from '../jsutils/invariant.mjs';\nconst LineRegExp = /\\r\\n|[\\n\\r]/g;\n/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  let lastLineStart = 0;\n  let line = 1;\n\n  for (const match of source.body.matchAll(LineRegExp)) {\n    typeof match.index === 'number' || invariant(false);\n\n    if (match.index >= position) {\n      break;\n    }\n\n    lastLineStart = match.index + match[0].length;\n    line += 1;\n  }\n\n  return {\n    line,\n    column: position + 1 - lastLineStart,\n  };\n}\n","import { syntaxError } from '../error/syntaxError.mjs';\nimport { Location, OperationTypeNode } from './ast.mjs';\nimport { DirectiveLocation } from './directiveLocation.mjs';\nimport { Kind } from './kinds.mjs';\nimport { isPunctuatorTokenKind, Lexer } from './lexer.mjs';\nimport { isSource, Source } from './source.mjs';\nimport { TokenKind } from './tokenKind.mjs';\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  const parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Similar to parseValue(), but raises a parse error if it encounters a\n * variable. The return type will be a constant value.\n */\n\nexport function parseConstValue(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const value = parser.parseConstValueLiteral();\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  const parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  const type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport class Parser {\n  constructor(source, options) {\n    const sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n  parseName() {\n    const token = this.expectToken(TokenKind.NAME);\n    return this.node(token, {\n      kind: Kind.NAME,\n      value: token.value,\n    });\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n\n  parseDocument() {\n    return this.node(this._lexer.token, {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(\n        TokenKind.SOF,\n        this.parseDefinition,\n        TokenKind.EOF,\n      ),\n    });\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   *\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n\n  parseDefinition() {\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } // Many definitions begin with a description and require a lookahead.\n\n    const hasDescription = this.peekDescription();\n    const keywordToken = hasDescription\n      ? this._lexer.lookahead()\n      : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n\n      if (hasDescription) {\n        throw syntaxError(\n          this._lexer.source,\n          this._lexer.token.start,\n          'Unexpected description, descriptions are supported only on type definitions.',\n        );\n      }\n\n      switch (keywordToken.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n\n  parseOperationDefinition() {\n    const start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return this.node(start, {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: OperationTypeNode.QUERY,\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    const operation = this.parseOperationType();\n    let name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return this.node(start, {\n      kind: Kind.OPERATION_DEFINITION,\n      operation,\n      name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n\n  parseOperationType() {\n    const operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return OperationTypeNode.QUERY;\n\n      case 'mutation':\n        return OperationTypeNode.MUTATION;\n\n      case 'subscription':\n        return OperationTypeNode.SUBSCRIPTION;\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n\n  parseVariableDefinitions() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseVariableDefinition,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n\n  parseVariableDefinition() {\n    return this.node(this._lexer.token, {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS)\n        ? this.parseConstValueLiteral()\n        : undefined,\n      directives: this.parseConstDirectives(),\n    });\n  }\n  /**\n   * Variable : $ Name\n   */\n\n  parseVariable() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return this.node(start, {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n    });\n  }\n  /**\n   * ```\n   * SelectionSet : { Selection+ }\n   * ```\n   */\n\n  parseSelectionSet() {\n    return this.node(this._lexer.token, {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(\n        TokenKind.BRACE_L,\n        this.parseSelection,\n        TokenKind.BRACE_R,\n      ),\n    });\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n\n  parseSelection() {\n    return this.peek(TokenKind.SPREAD)\n      ? this.parseFragment()\n      : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n\n  parseField() {\n    const start = this._lexer.token;\n    const nameOrAlias = this.parseName();\n    let alias;\n    let name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return this.node(start, {\n      kind: Kind.FIELD,\n      alias,\n      name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L)\n        ? this.parseSelectionSet()\n        : undefined,\n    });\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n\n  parseArguments(isConst) {\n    const item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n\n  parseArgument(isConst = false) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.ARGUMENT,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  }\n\n  parseConstArgument() {\n    return this.parseArgument(true);\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n\n  parseFragment() {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    const hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n\n  parseFragmentDefinition() {\n    var _this$_options;\n\n    const start = this._lexer.token;\n    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (\n      ((_this$_options = this._options) === null || _this$_options === void 0\n        ? void 0\n        : _this$_options.allowLegacyFragmentVariables) === true\n    ) {\n      return this.node(start, {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n      });\n    }\n\n    return this.node(start, {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n    });\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n\n  parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseValueLiteral(isConst) {\n    const token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return this.node(token, {\n          kind: Kind.INT,\n          value: token.value,\n        });\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return this.node(token, {\n          kind: Kind.FLOAT,\n          value: token.value,\n        });\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: true,\n            });\n\n          case 'false':\n            return this.node(token, {\n              kind: Kind.BOOLEAN,\n              value: false,\n            });\n\n          case 'null':\n            return this.node(token, {\n              kind: Kind.NULL,\n            });\n\n          default:\n            return this.node(token, {\n              kind: Kind.ENUM,\n              value: token.value,\n            });\n        }\n\n      case TokenKind.DOLLAR:\n        if (isConst) {\n          this.expectToken(TokenKind.DOLLAR);\n\n          if (this._lexer.token.kind === TokenKind.NAME) {\n            const varName = this._lexer.token.value;\n            throw syntaxError(\n              this._lexer.source,\n              token.start,\n              `Unexpected variable \"$${varName}\" in constant value.`,\n            );\n          } else {\n            throw this.unexpected(token);\n          }\n        }\n\n        return this.parseVariable();\n\n      default:\n        throw this.unexpected();\n    }\n  }\n\n  parseConstValueLiteral() {\n    return this.parseValueLiteral(true);\n  }\n\n  parseStringLiteral() {\n    const token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return this.node(token, {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n    });\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n\n  parseList(isConst) {\n    const item = () => this.parseValueLiteral(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n    });\n  }\n  /**\n   * ```\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   * ```\n   */\n\n  parseObject(isConst) {\n    const item = () => this.parseObjectField(isConst);\n\n    return this.node(this._lexer.token, {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n    });\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n\n  parseObjectField(isConst) {\n    const start = this._lexer.token;\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return this.node(start, {\n      kind: Kind.OBJECT_FIELD,\n      name,\n      value: this.parseValueLiteral(isConst),\n    });\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n\n  parseDirectives(isConst) {\n    const directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n\n  parseConstDirectives() {\n    return this.parseDirectives(true);\n  }\n  /**\n   * ```\n   * Directive[Const] : @ Name Arguments[?Const]?\n   * ```\n   */\n\n  parseDirective(isConst) {\n    const start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return this.node(start, {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n    });\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n\n  parseTypeReference() {\n    const start = this._lexer.token;\n    let type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      const innerType = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = this.node(start, {\n        kind: Kind.LIST_TYPE,\n        type: innerType,\n      });\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return this.node(start, {\n        kind: Kind.NON_NULL_TYPE,\n        type,\n      });\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n\n  parseNamedType() {\n    return this.node(this._lexer.token, {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n    });\n  } // Implements the parsing rules in the Type Definition section.\n\n  peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n\n  parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * ```\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   * ```\n   */\n\n  parseSchemaDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.many(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n    return this.node(start, {\n      kind: Kind.SCHEMA_DEFINITION,\n      description,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n\n  parseOperationTypeDefinition() {\n    const start = this._lexer.token;\n    const operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseNamedType();\n    return this.node(start, {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation,\n      type,\n    });\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n\n  parseScalarTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n\n  parseObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n\n  parseImplementsInterfaces() {\n    return this.expectOptionalKeyword('implements')\n      ? this.delimitedMany(TokenKind.AMP, this.parseNamedType)\n      : [];\n  }\n  /**\n   * ```\n   * FieldsDefinition : { FieldDefinition+ }\n   * ```\n   */\n\n  parseFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseFieldDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n\n  parseFieldDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.FIELD_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      type,\n      directives,\n    });\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n\n  parseArgumentDefs() {\n    return this.optionalMany(\n      TokenKind.PAREN_L,\n      this.parseInputValueDef,\n      TokenKind.PAREN_R,\n    );\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n\n  parseInputValueDef() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    const type = this.parseTypeReference();\n    let defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseConstValueLiteral();\n    }\n\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description,\n      name,\n      type,\n      defaultValue,\n      directives,\n    });\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n\n  parseInterfaceTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n\n  parseUnionTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n\n  parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS)\n      ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType)\n      : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n\n  parseEnumTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * ```\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   * ```\n   */\n\n  parseEnumValuesDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseEnumValueDefinition,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   */\n\n  parseEnumValueDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    const name = this.parseEnumValueName();\n    const directives = this.parseConstDirectives();\n    return this.node(start, {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description,\n      name,\n      directives,\n    });\n  }\n  /**\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n\n  parseEnumValueName() {\n    if (\n      this._lexer.token.value === 'true' ||\n      this._lexer.token.value === 'false' ||\n      this._lexer.token.value === 'null'\n    ) {\n      throw syntaxError(\n        this._lexer.source,\n        this._lexer.token.start,\n        `${getTokenDesc(\n          this._lexer.token,\n        )} is reserved and cannot be used for an enum value.`,\n      );\n    }\n\n    return this.parseName();\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n\n  parseInputObjectTypeDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   * ```\n   */\n\n  parseInputFieldsDefinition() {\n    return this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseInputValueDef,\n      TokenKind.BRACE_R,\n    );\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n\n  parseTypeSystemExtension() {\n    const keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * ```\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   * ```\n   */\n\n  parseSchemaExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    const directives = this.parseConstDirectives();\n    const operationTypes = this.optionalMany(\n      TokenKind.BRACE_L,\n      this.parseOperationTypeDefinition,\n      TokenKind.BRACE_R,\n    );\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives,\n      operationTypes,\n    });\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n\n  parseScalarTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name,\n      directives,\n    });\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n\n  parseObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n\n  parseInterfaceTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    const name = this.parseName();\n    const interfaces = this.parseImplementsInterfaces();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseFieldsDefinition();\n\n    if (\n      interfaces.length === 0 &&\n      directives.length === 0 &&\n      fields.length === 0\n    ) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name,\n      interfaces,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n\n  parseUnionTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name,\n      directives,\n      types,\n    });\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n\n  parseEnumTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name,\n      directives,\n      values,\n    });\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n\n  parseInputObjectTypeExtension() {\n    const start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    const name = this.parseName();\n    const directives = this.parseConstDirectives();\n    const fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return this.node(start, {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name,\n      directives,\n      fields,\n    });\n  }\n  /**\n   * ```\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   * ```\n   */\n\n  parseDirectiveDefinition() {\n    const start = this._lexer.token;\n    const description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    const name = this.parseName();\n    const args = this.parseArgumentDefs();\n    const repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    const locations = this.parseDirectiveLocations();\n    return this.node(start, {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description,\n      name,\n      arguments: args,\n      repeatable,\n      locations,\n    });\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n\n  parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n\n  parseDirectiveLocation() {\n    const start = this._lexer.token;\n    const name = this.parseName();\n\n    if (Object.prototype.hasOwnProperty.call(DirectiveLocation, name.value)) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a node that, if configured to do so, sets a \"loc\" field as a\n   * location object, used to identify the place in the source that created a\n   * given parsed object.\n   */\n\n  node(startToken, node) {\n    var _this$_options2;\n\n    if (\n      ((_this$_options2 = this._options) === null || _this$_options2 === void 0\n        ? void 0\n        : _this$_options2.noLocation) !== true\n    ) {\n      node.loc = new Location(\n        startToken,\n        this._lexer.lastToken,\n        this._lexer.source,\n      );\n    }\n\n    return node;\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n\n  peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(\n      this._lexer.source,\n      token.start,\n      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * If the next token is of the given kind, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalToken(kind) {\n    const token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n\n  expectKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(\n        this._lexer.source,\n        token.start,\n        `Expected \"${value}\", found ${getTokenDesc(token)}.`,\n      );\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n\n  expectOptionalKeyword(value) {\n    const token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n\n  unexpected(atToken) {\n    const token =\n      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(\n      this._lexer.source,\n      token.start,\n      `Unexpected ${getTokenDesc(token)}.`,\n    );\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      const nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n\n  many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n\n  delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    const nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  }\n}\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  const value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? ` \"${value}\"` : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? `\"${kind}\"` : kind;\n}\n","import { Kind } from './kinds.mjs';\nexport function isDefinitionNode(node) {\n  return (\n    isExecutableDefinitionNode(node) ||\n    isTypeSystemDefinitionNode(node) ||\n    isTypeSystemExtensionNode(node)\n  );\n}\nexport function isExecutableDefinitionNode(node) {\n  return (\n    node.kind === Kind.OPERATION_DEFINITION ||\n    node.kind === Kind.FRAGMENT_DEFINITION\n  );\n}\nexport function isSelectionNode(node) {\n  return (\n    node.kind === Kind.FIELD ||\n    node.kind === Kind.FRAGMENT_SPREAD ||\n    node.kind === Kind.INLINE_FRAGMENT\n  );\n}\nexport function isValueNode(node) {\n  return (\n    node.kind === Kind.VARIABLE ||\n    node.kind === Kind.INT ||\n    node.kind === Kind.FLOAT ||\n    node.kind === Kind.STRING ||\n    node.kind === Kind.BOOLEAN ||\n    node.kind === Kind.NULL ||\n    node.kind === Kind.ENUM ||\n    node.kind === Kind.LIST ||\n    node.kind === Kind.OBJECT\n  );\n}\nexport function isConstValueNode(node) {\n  return (\n    isValueNode(node) &&\n    (node.kind === Kind.LIST\n      ? node.values.some(isConstValueNode)\n      : node.kind === Kind.OBJECT\n      ? node.fields.some((field) => isConstValueNode(field.value))\n      : node.kind !== Kind.VARIABLE)\n  );\n}\nexport function isTypeNode(node) {\n  return (\n    node.kind === Kind.NAMED_TYPE ||\n    node.kind === Kind.LIST_TYPE ||\n    node.kind === Kind.NON_NULL_TYPE\n  );\n}\nexport function isTypeSystemDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCHEMA_DEFINITION ||\n    isTypeDefinitionNode(node) ||\n    node.kind === Kind.DIRECTIVE_DEFINITION\n  );\n}\nexport function isTypeDefinitionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_DEFINITION ||\n    node.kind === Kind.OBJECT_TYPE_DEFINITION ||\n    node.kind === Kind.INTERFACE_TYPE_DEFINITION ||\n    node.kind === Kind.UNION_TYPE_DEFINITION ||\n    node.kind === Kind.ENUM_TYPE_DEFINITION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION\n  );\n}\nexport function isTypeSystemExtensionNode(node) {\n  return node.kind === Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node);\n}\nexport function isTypeExtensionNode(node) {\n  return (\n    node.kind === Kind.SCALAR_TYPE_EXTENSION ||\n    node.kind === Kind.OBJECT_TYPE_EXTENSION ||\n    node.kind === Kind.INTERFACE_TYPE_EXTENSION ||\n    node.kind === Kind.UNION_TYPE_EXTENSION ||\n    node.kind === Kind.ENUM_TYPE_EXTENSION ||\n    node.kind === Kind.INPUT_OBJECT_TYPE_EXTENSION\n  );\n}\n","import { getLocation } from './location.mjs';\n\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\nexport function printLocation(location) {\n  return printSourceLocation(\n    location.source,\n    getLocation(location.source, location.start),\n  );\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  const firstLineColumnOffset = source.locationOffset.column - 1;\n  const body = ''.padStart(firstLineColumnOffset) + source.body;\n  const lineIndex = sourceLocation.line - 1;\n  const lineOffset = source.locationOffset.line - 1;\n  const lineNum = sourceLocation.line + lineOffset;\n  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  const columnNum = sourceLocation.column + columnOffset;\n  const locationStr = `${source.name}:${lineNum}:${columnNum}\\n`;\n  const lines = body.split(/\\r\\n|[\\n\\r]/g);\n  const locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    const subLineIndex = Math.floor(columnNum / 80);\n    const subLineColumnNum = columnNum % 80;\n    const subLines = [];\n\n    for (let i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return (\n      locationStr +\n      printPrefixedLines([\n        [`${lineNum} |`, subLines[0]],\n        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),\n        ['|', '^'.padStart(subLineColumnNum)],\n        ['|', subLines[subLineIndex + 1]],\n      ])\n    );\n  }\n\n  return (\n    locationStr +\n    printPrefixedLines([\n      // Lines specified like this: [\"prefix\", \"string\"],\n      [`${lineNum - 1} |`, lines[lineIndex - 1]],\n      [`${lineNum} |`, locationLine],\n      ['|', '^'.padStart(columnNum)],\n      [`${lineNum + 1} |`, lines[lineIndex + 1]],\n    ])\n  );\n}\n\nfunction printPrefixedLines(lines) {\n  const existingLines = lines.filter(([_, line]) => line !== undefined);\n  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));\n  return existingLines\n    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))\n    .join('\\n');\n}\n","/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nexport function printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n","import { printBlockString } from './blockString.mjs';\nimport { printString } from './printString.mjs';\nimport { visit } from './visitor.mjs';\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, printDocASTReducer);\n}\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString ? printBlockString(value) : printString(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport class Source {\n  constructor(\n    body,\n    name = 'GraphQL request',\n    locationOffset = {\n      line: 1,\n      column: 1,\n    },\n  ) {\n    typeof body === 'string' ||\n      devAssert(false, `Body must be a string. Received: ${inspect(body)}.`);\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 ||\n      devAssert(\n        false,\n        'line in locationOffset is 1-indexed and must be positive.',\n      );\n    this.locationOffset.column > 0 ||\n      devAssert(\n        false,\n        'column in locationOffset is 1-indexed and must be positive.',\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Source';\n  }\n}\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport let TokenKind;\n/**\n * The enum type representing the token kinds values.\n *\n * @deprecated Please use `TokenKind`. Will be remove in v17.\n */\n\n(function (TokenKind) {\n  TokenKind['SOF'] = '<SOF>';\n  TokenKind['EOF'] = '<EOF>';\n  TokenKind['BANG'] = '!';\n  TokenKind['DOLLAR'] = '$';\n  TokenKind['AMP'] = '&';\n  TokenKind['PAREN_L'] = '(';\n  TokenKind['PAREN_R'] = ')';\n  TokenKind['SPREAD'] = '...';\n  TokenKind['COLON'] = ':';\n  TokenKind['EQUALS'] = '=';\n  TokenKind['AT'] = '@';\n  TokenKind['BRACKET_L'] = '[';\n  TokenKind['BRACKET_R'] = ']';\n  TokenKind['BRACE_L'] = '{';\n  TokenKind['PIPE'] = '|';\n  TokenKind['BRACE_R'] = '}';\n  TokenKind['NAME'] = 'Name';\n  TokenKind['INT'] = 'Int';\n  TokenKind['FLOAT'] = 'Float';\n  TokenKind['STRING'] = 'String';\n  TokenKind['BLOCK_STRING'] = 'BlockString';\n  TokenKind['COMMENT'] = 'Comment';\n})(TokenKind || (TokenKind = {}));\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isNode, QueryDocumentKeys } from './ast.mjs';\nimport { Kind } from './kinds.mjs';\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport const BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexport function visit(root, visitor, visitorKeys = QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if (isNode(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nexport function getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { isNameContinue, isNameStart } from '../language/characterClasses.mjs';\n/**\n * Upholds the spec rules about naming.\n */\n\nexport function assertName(name) {\n  name != null || devAssert(false, 'Must provide name.');\n  typeof name === 'string' || devAssert(false, 'Expected name to be a string.');\n\n  if (name.length === 0) {\n    throw new GraphQLError('Expected name to be a non-empty string.');\n  }\n\n  for (let i = 1; i < name.length; ++i) {\n    if (!isNameContinue(name.charCodeAt(i))) {\n      throw new GraphQLError(\n        `Names must only contain [_a-zA-Z0-9] but \"${name}\" does not.`,\n      );\n    }\n  }\n\n  if (!isNameStart(name.charCodeAt(0))) {\n    throw new GraphQLError(\n      `Names must start with [_a-zA-Z] but \"${name}\" does not.`,\n    );\n  }\n\n  return name;\n}\n/**\n * Upholds the spec rules about naming enum values.\n *\n * @internal\n */\n\nexport function assertEnumValueName(name) {\n  if (name === 'true' || name === 'false' || name === 'null') {\n    throw new GraphQLError(`Enum values cannot be named: ${name}`);\n  }\n\n  return assertName(name);\n}\n","/**\n * Returns the first argument it receives.\n */\nexport function identityFunc(x) {\n  return x;\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { didYouMean } from '../jsutils/didYouMean.mjs';\nimport { identityFunc } from '../jsutils/identityFunc.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { mapValue } from '../jsutils/mapValue.mjs';\nimport { suggestionList } from '../jsutils/suggestionList.mjs';\nimport { toObjMap } from '../jsutils/toObjMap.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport { valueFromASTUntyped } from '../utilities/valueFromASTUntyped.mjs';\nimport { assertEnumValueName, assertName } from './assertName.mjs';\nexport function isType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type) ||\n    isListType(type) ||\n    isNonNullType(type)\n  );\n}\nexport function assertType(type) {\n  if (!isType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL type.`);\n  }\n\n  return type;\n}\n/**\n * There are predicates for each kind of GraphQL type.\n */\n\nexport function isScalarType(type) {\n  return instanceOf(type, GraphQLScalarType);\n}\nexport function assertScalarType(type) {\n  if (!isScalarType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Scalar type.`);\n  }\n\n  return type;\n}\nexport function isObjectType(type) {\n  return instanceOf(type, GraphQLObjectType);\n}\nexport function assertObjectType(type) {\n  if (!isObjectType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Object type.`);\n  }\n\n  return type;\n}\nexport function isInterfaceType(type) {\n  return instanceOf(type, GraphQLInterfaceType);\n}\nexport function assertInterfaceType(type) {\n  if (!isInterfaceType(type)) {\n    throw new Error(\n      `Expected ${inspect(type)} to be a GraphQL Interface type.`,\n    );\n  }\n\n  return type;\n}\nexport function isUnionType(type) {\n  return instanceOf(type, GraphQLUnionType);\n}\nexport function assertUnionType(type) {\n  if (!isUnionType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Union type.`);\n  }\n\n  return type;\n}\nexport function isEnumType(type) {\n  return instanceOf(type, GraphQLEnumType);\n}\nexport function assertEnumType(type) {\n  if (!isEnumType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Enum type.`);\n  }\n\n  return type;\n}\nexport function isInputObjectType(type) {\n  return instanceOf(type, GraphQLInputObjectType);\n}\nexport function assertInputObjectType(type) {\n  if (!isInputObjectType(type)) {\n    throw new Error(\n      `Expected ${inspect(type)} to be a GraphQL Input Object type.`,\n    );\n  }\n\n  return type;\n}\nexport function isListType(type) {\n  return instanceOf(type, GraphQLList);\n}\nexport function assertListType(type) {\n  if (!isListType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL List type.`);\n  }\n\n  return type;\n}\nexport function isNonNullType(type) {\n  return instanceOf(type, GraphQLNonNull);\n}\nexport function assertNonNullType(type) {\n  if (!isNonNullType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL Non-Null type.`);\n  }\n\n  return type;\n}\n/**\n * These types may be used as input types for arguments and directives.\n */\n\nexport function isInputType(type) {\n  return (\n    isScalarType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type) ||\n    (isWrappingType(type) && isInputType(type.ofType))\n  );\n}\nexport function assertInputType(type) {\n  if (!isInputType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL input type.`);\n  }\n\n  return type;\n}\n/**\n * These types may be used as output types as the result of fields.\n */\n\nexport function isOutputType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    (isWrappingType(type) && isOutputType(type.ofType))\n  );\n}\nexport function assertOutputType(type) {\n  if (!isOutputType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL output type.`);\n  }\n\n  return type;\n}\n/**\n * These types may describe types which may be leaf values.\n */\n\nexport function isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\nexport function assertLeafType(type) {\n  if (!isLeafType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL leaf type.`);\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\nexport function assertCompositeType(type) {\n  if (!isCompositeType(type)) {\n    throw new Error(\n      `Expected ${inspect(type)} to be a GraphQL composite type.`,\n    );\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\nexport function assertAbstractType(type) {\n  if (!isAbstractType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL abstract type.`);\n  }\n\n  return type;\n}\n/**\n * List Type Wrapper\n *\n * A list is a wrapping type which points to another type.\n * Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     parents: { type: new GraphQLList(PersonType) },\n *     children: { type: new GraphQLList(PersonType) },\n *   })\n * })\n * ```\n */\n\nexport class GraphQLList {\n  constructor(ofType) {\n    isType(ofType) ||\n      devAssert(false, `Expected ${inspect(ofType)} to be a GraphQL type.`);\n    this.ofType = ofType;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLList';\n  }\n\n  toString() {\n    return '[' + String(this.ofType) + ']';\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * Non-Null Type Wrapper\n *\n * A non-null is a wrapping type which points to another type.\n * Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n * ```ts\n * const RowType = new GraphQLObjectType({\n *   name: 'Row',\n *   fields: () => ({\n *     id: { type: new GraphQLNonNull(GraphQLString) },\n *   })\n * })\n * ```\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n\nexport class GraphQLNonNull {\n  constructor(ofType) {\n    isNullableType(ofType) ||\n      devAssert(\n        false,\n        `Expected ${inspect(ofType)} to be a GraphQL nullable type.`,\n      );\n    this.ofType = ofType;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLNonNull';\n  }\n\n  toString() {\n    return String(this.ofType) + '!';\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n/**\n * These types wrap and modify other types\n */\n\nexport function isWrappingType(type) {\n  return isListType(type) || isNonNullType(type);\n}\nexport function assertWrappingType(type) {\n  if (!isWrappingType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL wrapping type.`);\n  }\n\n  return type;\n}\n/**\n * These types can all accept null as a value.\n */\n\nexport function isNullableType(type) {\n  return isType(type) && !isNonNullType(type);\n}\nexport function assertNullableType(type) {\n  if (!isNullableType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL nullable type.`);\n  }\n\n  return type;\n}\nexport function getNullableType(type) {\n  if (type) {\n    return isNonNullType(type) ? type.ofType : type;\n  }\n}\n/**\n * These named types do not include modifiers like List or NonNull.\n */\n\nexport function isNamedType(type) {\n  return (\n    isScalarType(type) ||\n    isObjectType(type) ||\n    isInterfaceType(type) ||\n    isUnionType(type) ||\n    isEnumType(type) ||\n    isInputObjectType(type)\n  );\n}\nexport function assertNamedType(type) {\n  if (!isNamedType(type)) {\n    throw new Error(`Expected ${inspect(type)} to be a GraphQL named type.`);\n  }\n\n  return type;\n}\nexport function getNamedType(type) {\n  if (type) {\n    let unwrappedType = type;\n\n    while (isWrappingType(unwrappedType)) {\n      unwrappedType = unwrappedType.ofType;\n    }\n\n    return unwrappedType;\n  }\n}\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\nexport function resolveReadonlyArrayThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\nexport function resolveObjMapThunk(thunk) {\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * If a type's serialize function returns `null` or does not return a value\n * (i.e. it returns `undefined`) then an error will be raised and a `null`\n * value will be returned in the response. It is always better to validate\n *\n * Example:\n *\n * ```ts\n * const OddType = new GraphQLScalarType({\n *   name: 'Odd',\n *   serialize(value) {\n *     if (!Number.isFinite(value)) {\n *       throw new Error(\n *         `Scalar \"Odd\" cannot represent \"${value}\" since it is not a finite number.`,\n *       );\n *     }\n *\n *     if (value % 2 === 0) {\n *       throw new Error(`Scalar \"Odd\" cannot represent \"${value}\" since it is even.`);\n *     }\n *     return value;\n *   }\n * });\n * ```\n */\nexport class GraphQLScalarType {\n  constructor(config) {\n    var _config$parseValue,\n      _config$serialize,\n      _config$parseLiteral,\n      _config$extensionASTN;\n\n    const parseValue =\n      (_config$parseValue = config.parseValue) !== null &&\n      _config$parseValue !== void 0\n        ? _config$parseValue\n        : identityFunc;\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.specifiedByURL = config.specifiedByURL;\n    this.serialize =\n      (_config$serialize = config.serialize) !== null &&\n      _config$serialize !== void 0\n        ? _config$serialize\n        : identityFunc;\n    this.parseValue = parseValue;\n    this.parseLiteral =\n      (_config$parseLiteral = config.parseLiteral) !== null &&\n      _config$parseLiteral !== void 0\n        ? _config$parseLiteral\n        : (node, variables) => parseValue(valueFromASTUntyped(node, variables));\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN = config.extensionASTNodes) !== null &&\n      _config$extensionASTN !== void 0\n        ? _config$extensionASTN\n        : [];\n    config.specifiedByURL == null ||\n      typeof config.specifiedByURL === 'string' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"specifiedByURL\" as a string, ` +\n          `but got: ${inspect(config.specifiedByURL)}.`,\n      );\n    config.serialize == null ||\n      typeof config.serialize === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"serialize\" function. If this custom Scalar is also used as an input type, ensure \"parseValue\" and \"parseLiteral\" functions are also provided.`,\n      );\n\n    if (config.parseLiteral) {\n      (typeof config.parseValue === 'function' &&\n        typeof config.parseLiteral === 'function') ||\n        devAssert(\n          false,\n          `${this.name} must provide both \"parseValue\" and \"parseLiteral\" functions.`,\n        );\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLScalarType';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      specifiedByURL: this.specifiedByURL,\n      serialize: this.serialize,\n      parseValue: this.parseValue,\n      parseLiteral: this.parseLiteral,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n * ```ts\n * const AddressType = new GraphQLObjectType({\n *   name: 'Address',\n *   fields: {\n *     street: { type: GraphQLString },\n *     number: { type: GraphQLInt },\n *     formatted: {\n *       type: GraphQLString,\n *       resolve(obj) {\n *         return obj.number + ' ' + obj.street\n *       }\n *     }\n *   }\n * });\n * ```\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n * ```ts\n * const PersonType = new GraphQLObjectType({\n *   name: 'Person',\n *   fields: () => ({\n *     name: { type: GraphQLString },\n *     bestFriend: { type: PersonType },\n *   })\n * });\n * ```\n */\nexport class GraphQLObjectType {\n  constructor(config) {\n    var _config$extensionASTN2;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.isTypeOf = config.isTypeOf;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN2 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN2 !== void 0\n        ? _config$extensionASTN2\n        : [];\n\n    this._fields = () => defineFieldMap(config);\n\n    this._interfaces = () => defineInterfaces(config);\n\n    config.isTypeOf == null ||\n      typeof config.isTypeOf === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"isTypeOf\" as a function, ` +\n          `but got: ${inspect(config.isTypeOf)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLObjectType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      isTypeOf: this.isTypeOf,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction defineInterfaces(config) {\n  var _config$interfaces;\n\n  const interfaces = resolveReadonlyArrayThunk(\n    (_config$interfaces = config.interfaces) !== null &&\n      _config$interfaces !== void 0\n      ? _config$interfaces\n      : [],\n  );\n  Array.isArray(interfaces) ||\n    devAssert(\n      false,\n      `${config.name} interfaces must be an Array or a function which returns an Array.`,\n    );\n  return interfaces;\n}\n\nfunction defineFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) ||\n    devAssert(\n      false,\n      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,\n    );\n  return mapValue(fieldMap, (fieldConfig, fieldName) => {\n    var _fieldConfig$args;\n\n    isPlainObj(fieldConfig) ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} field config must be an object.`,\n      );\n    fieldConfig.resolve == null ||\n      typeof fieldConfig.resolve === 'function' ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} field resolver must be a function if ` +\n          `provided, but got: ${inspect(fieldConfig.resolve)}.`,\n      );\n    const argsConfig =\n      (_fieldConfig$args = fieldConfig.args) !== null &&\n      _fieldConfig$args !== void 0\n        ? _fieldConfig$args\n        : {};\n    isPlainObj(argsConfig) ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} args must be an object with argument names as keys.`,\n      );\n    return {\n      name: assertName(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      args: defineArguments(argsConfig),\n      resolve: fieldConfig.resolve,\n      subscribe: fieldConfig.subscribe,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode,\n    };\n  });\n}\n\nexport function defineArguments(config) {\n  return Object.entries(config).map(([argName, argConfig]) => ({\n    name: assertName(argName),\n    description: argConfig.description,\n    type: argConfig.type,\n    defaultValue: argConfig.defaultValue,\n    deprecationReason: argConfig.deprecationReason,\n    extensions: toObjMap(argConfig.extensions),\n    astNode: argConfig.astNode,\n  }));\n}\n\nfunction isPlainObj(obj) {\n  return isObjectLike(obj) && !Array.isArray(obj);\n}\n\nfunction fieldsToFieldsConfig(fields) {\n  return mapValue(fields, (field) => ({\n    description: field.description,\n    type: field.type,\n    args: argsToArgsConfig(field.args),\n    resolve: field.resolve,\n    subscribe: field.subscribe,\n    deprecationReason: field.deprecationReason,\n    extensions: field.extensions,\n    astNode: field.astNode,\n  }));\n}\n/**\n * @internal\n */\n\nexport function argsToArgsConfig(args) {\n  return keyValMap(\n    args,\n    (arg) => arg.name,\n    (arg) => ({\n      description: arg.description,\n      type: arg.type,\n      defaultValue: arg.defaultValue,\n      deprecationReason: arg.deprecationReason,\n      extensions: arg.extensions,\n      astNode: arg.astNode,\n    }),\n  );\n}\nexport function isRequiredArgument(arg) {\n  return isNonNullType(arg.type) && arg.defaultValue === undefined;\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const EntityType = new GraphQLInterfaceType({\n *   name: 'Entity',\n *   fields: {\n *     name: { type: GraphQLString }\n *   }\n * });\n * ```\n */\nexport class GraphQLInterfaceType {\n  constructor(config) {\n    var _config$extensionASTN3;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN3 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN3 !== void 0\n        ? _config$extensionASTN3\n        : [];\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    config.resolveType == null ||\n      typeof config.resolveType === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"resolveType\" as a function, ` +\n          `but got: ${inspect(config.resolveType)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInterfaceType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n * ```ts\n * const PetType = new GraphQLUnionType({\n *   name: 'Pet',\n *   types: [ DogType, CatType ],\n *   resolveType(value) {\n *     if (value instanceof Dog) {\n *       return DogType;\n *     }\n *     if (value instanceof Cat) {\n *       return CatType;\n *     }\n *   }\n * });\n * ```\n */\nexport class GraphQLUnionType {\n  constructor(config) {\n    var _config$extensionASTN4;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN4 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN4 !== void 0\n        ? _config$extensionASTN4\n        : [];\n    this._types = defineTypes.bind(undefined, config);\n    config.resolveType == null ||\n      typeof config.resolveType === 'function' ||\n      devAssert(\n        false,\n        `${this.name} must provide \"resolveType\" as a function, ` +\n          `but got: ${inspect(config.resolveType)}.`,\n      );\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLUnionType';\n  }\n\n  getTypes() {\n    if (typeof this._types === 'function') {\n      this._types = this._types();\n    }\n\n    return this._types;\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      types: this.getTypes(),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction defineTypes(config) {\n  const types = resolveReadonlyArrayThunk(config.types);\n  Array.isArray(types) ||\n    devAssert(\n      false,\n      `Must provide Array of types or a function which returns such an array for Union ${config.name}.`,\n    );\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n * ```ts\n * const RGBType = new GraphQLEnumType({\n *   name: 'RGB',\n *   values: {\n *     RED: { value: 0 },\n *     GREEN: { value: 1 },\n *     BLUE: { value: 2 }\n *   }\n * });\n * ```\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nexport class GraphQLEnumType {\n  /* <T> */\n  constructor(config) {\n    var _config$extensionASTN5;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN5 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN5 !== void 0\n        ? _config$extensionASTN5\n        : [];\n    this._values = defineEnumValues(this.name, config.values);\n    this._valueLookup = new Map(\n      this._values.map((enumValue) => [enumValue.value, enumValue]),\n    );\n    this._nameLookup = keyMap(this._values, (value) => value.name);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLEnumType';\n  }\n\n  getValues() {\n    return this._values;\n  }\n\n  getValue(name) {\n    return this._nameLookup[name];\n  }\n\n  serialize(outputValue) {\n    const enumValue = this._valueLookup.get(outputValue);\n\n    if (enumValue === undefined) {\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent value: ${inspect(outputValue)}`,\n      );\n    }\n\n    return enumValue.name;\n  }\n\n  parseValue(inputValue) /* T */\n  {\n    if (typeof inputValue !== 'string') {\n      const valueStr = inspect(inputValue);\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-string value: ${valueStr}.` +\n          didYouMeanEnumValue(this, valueStr),\n      );\n    }\n\n    const enumValue = this.getValue(inputValue);\n\n    if (enumValue == null) {\n      throw new GraphQLError(\n        `Value \"${inputValue}\" does not exist in \"${this.name}\" enum.` +\n          didYouMeanEnumValue(this, inputValue),\n      );\n    }\n\n    return enumValue.value;\n  }\n\n  parseLiteral(valueNode, _variables) /* T */\n  {\n    // Note: variables will be resolved to a value before calling this function.\n    if (valueNode.kind !== Kind.ENUM) {\n      const valueStr = print(valueNode);\n      throw new GraphQLError(\n        `Enum \"${this.name}\" cannot represent non-enum value: ${valueStr}.` +\n          didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const enumValue = this.getValue(valueNode.value);\n\n    if (enumValue == null) {\n      const valueStr = print(valueNode);\n      throw new GraphQLError(\n        `Value \"${valueStr}\" does not exist in \"${this.name}\" enum.` +\n          didYouMeanEnumValue(this, valueStr),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return enumValue.value;\n  }\n\n  toConfig() {\n    const values = keyValMap(\n      this.getValues(),\n      (value) => value.name,\n      (value) => ({\n        description: value.description,\n        value: value.value,\n        deprecationReason: value.deprecationReason,\n        extensions: value.extensions,\n        astNode: value.astNode,\n      }),\n    );\n    return {\n      name: this.name,\n      description: this.description,\n      values,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction didYouMeanEnumValue(enumType, unknownValueStr) {\n  const allNames = enumType.getValues().map((value) => value.name);\n  const suggestedValues = suggestionList(unknownValueStr, allNames);\n  return didYouMean('the enum value', suggestedValues);\n}\n\nfunction defineEnumValues(typeName, valueMap) {\n  isPlainObj(valueMap) ||\n    devAssert(\n      false,\n      `${typeName} values must be an object with value names as keys.`,\n    );\n  return Object.entries(valueMap).map(([valueName, valueConfig]) => {\n    isPlainObj(valueConfig) ||\n      devAssert(\n        false,\n        `${typeName}.${valueName} must refer to an object with a \"value\" key ` +\n          `representing an internal value but got: ${inspect(valueConfig)}.`,\n      );\n    return {\n      name: assertEnumValueName(valueName),\n      description: valueConfig.description,\n      value: valueConfig.value !== undefined ? valueConfig.value : valueName,\n      deprecationReason: valueConfig.deprecationReason,\n      extensions: toObjMap(valueConfig.extensions),\n      astNode: valueConfig.astNode,\n    };\n  });\n}\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n * ```ts\n * const GeoPoint = new GraphQLInputObjectType({\n *   name: 'GeoPoint',\n *   fields: {\n *     lat: { type: new GraphQLNonNull(GraphQLFloat) },\n *     lon: { type: new GraphQLNonNull(GraphQLFloat) },\n *     alt: { type: GraphQLFloat, defaultValue: 0 },\n *   }\n * });\n * ```\n */\nexport class GraphQLInputObjectType {\n  constructor(config) {\n    var _config$extensionASTN6;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN6 = config.extensionASTNodes) !== null &&\n      _config$extensionASTN6 !== void 0\n        ? _config$extensionASTN6\n        : [];\n    this._fields = defineInputFieldMap.bind(undefined, config);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLInputObjectType';\n  }\n\n  getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  }\n\n  toConfig() {\n    const fields = mapValue(this.getFields(), (field) => ({\n      description: field.description,\n      type: field.type,\n      defaultValue: field.defaultValue,\n      deprecationReason: field.deprecationReason,\n      extensions: field.extensions,\n      astNode: field.astNode,\n    }));\n    return {\n      name: this.name,\n      description: this.description,\n      fields,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n    };\n  }\n\n  toString() {\n    return this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\nfunction defineInputFieldMap(config) {\n  const fieldMap = resolveObjMapThunk(config.fields);\n  isPlainObj(fieldMap) ||\n    devAssert(\n      false,\n      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,\n    );\n  return mapValue(fieldMap, (fieldConfig, fieldName) => {\n    !('resolve' in fieldConfig) ||\n      devAssert(\n        false,\n        `${config.name}.${fieldName} field has a resolve property, but Input Types cannot define resolvers.`,\n      );\n    return {\n      name: assertName(fieldName),\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      defaultValue: fieldConfig.defaultValue,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode,\n    };\n  });\n}\n\nexport function isRequiredInputField(field) {\n  return isNonNullType(field.type) && field.defaultValue === undefined;\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { toObjMap } from '../jsutils/toObjMap.mjs';\nimport { DirectiveLocation } from '../language/directiveLocation.mjs';\nimport { assertName } from './assertName.mjs';\nimport {\n  argsToArgsConfig,\n  defineArguments,\n  GraphQLNonNull,\n} from './definition.mjs';\nimport { GraphQLBoolean, GraphQLString } from './scalars.mjs';\n/**\n * Test if the given value is a GraphQL directive.\n */\n\nexport function isDirective(directive) {\n  return instanceOf(directive, GraphQLDirective);\n}\nexport function assertDirective(directive) {\n  if (!isDirective(directive)) {\n    throw new Error(\n      `Expected ${inspect(directive)} to be a GraphQL directive.`,\n    );\n  }\n\n  return directive;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Directives are used by the GraphQL runtime as a way of modifying execution\n * behavior. Type system creators will usually not create these directly.\n */\nexport class GraphQLDirective {\n  constructor(config) {\n    var _config$isRepeatable, _config$args;\n\n    this.name = assertName(config.name);\n    this.description = config.description;\n    this.locations = config.locations;\n    this.isRepeatable =\n      (_config$isRepeatable = config.isRepeatable) !== null &&\n      _config$isRepeatable !== void 0\n        ? _config$isRepeatable\n        : false;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    Array.isArray(config.locations) ||\n      devAssert(false, `@${config.name} locations must be an Array.`);\n    const args =\n      (_config$args = config.args) !== null && _config$args !== void 0\n        ? _config$args\n        : {};\n    (isObjectLike(args) && !Array.isArray(args)) ||\n      devAssert(\n        false,\n        `@${config.name} args must be an object with argument names as keys.`,\n      );\n    this.args = defineArguments(args);\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLDirective';\n  }\n\n  toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      locations: this.locations,\n      args: argsToArgsConfig(this.args),\n      isRepeatable: this.isRepeatable,\n      extensions: this.extensions,\n      astNode: this.astNode,\n    };\n  }\n\n  toString() {\n    return '@' + this.name;\n  }\n\n  toJSON() {\n    return this.toString();\n  }\n}\n\n/**\n * Used to conditionally include fields or fragments.\n */\nexport const GraphQLIncludeDirective = new GraphQLDirective({\n  name: 'include',\n  description:\n    'Directs the executor to include this field or fragment only when the `if` argument is true.',\n  locations: [\n    DirectiveLocation.FIELD,\n    DirectiveLocation.FRAGMENT_SPREAD,\n    DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: 'Included when true.',\n    },\n  },\n});\n/**\n * Used to conditionally skip (exclude) fields or fragments.\n */\n\nexport const GraphQLSkipDirective = new GraphQLDirective({\n  name: 'skip',\n  description:\n    'Directs the executor to skip this field or fragment when the `if` argument is true.',\n  locations: [\n    DirectiveLocation.FIELD,\n    DirectiveLocation.FRAGMENT_SPREAD,\n    DirectiveLocation.INLINE_FRAGMENT,\n  ],\n  args: {\n    if: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      description: 'Skipped when true.',\n    },\n  },\n});\n/**\n * Constant string used for default reason for a deprecation.\n */\n\nexport const DEFAULT_DEPRECATION_REASON = 'No longer supported';\n/**\n * Used to declare element of a GraphQL schema as deprecated.\n */\n\nexport const GraphQLDeprecatedDirective = new GraphQLDirective({\n  name: 'deprecated',\n  description: 'Marks an element of a GraphQL schema as no longer supported.',\n  locations: [\n    DirectiveLocation.FIELD_DEFINITION,\n    DirectiveLocation.ARGUMENT_DEFINITION,\n    DirectiveLocation.INPUT_FIELD_DEFINITION,\n    DirectiveLocation.ENUM_VALUE,\n  ],\n  args: {\n    reason: {\n      type: GraphQLString,\n      description:\n        'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).',\n      defaultValue: DEFAULT_DEPRECATION_REASON,\n    },\n  },\n});\n/**\n * Used to provide a URL for specifying the behavior of custom scalar definitions.\n */\n\nexport const GraphQLSpecifiedByDirective = new GraphQLDirective({\n  name: 'specifiedBy',\n  description: 'Exposes a URL that specifies the behavior of this scalar.',\n  locations: [DirectiveLocation.SCALAR],\n  args: {\n    url: {\n      type: new GraphQLNonNull(GraphQLString),\n      description: 'The URL that specifies the behavior of this scalar.',\n    },\n  },\n});\n/**\n * The full list of specified directives.\n */\n\nexport const specifiedDirectives = Object.freeze([\n  GraphQLIncludeDirective,\n  GraphQLSkipDirective,\n  GraphQLDeprecatedDirective,\n  GraphQLSpecifiedByDirective,\n]);\nexport function isSpecifiedDirective(directive) {\n  return specifiedDirectives.some(({ name }) => name === directive.name);\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { DirectiveLocation } from '../language/directiveLocation.mjs';\nimport { print } from '../language/printer.mjs';\nimport { astFromValue } from '../utilities/astFromValue.mjs';\nimport {\n  GraphQLEnumType,\n  GraphQLList,\n  GraphQLNonNull,\n  GraphQLObjectType,\n  isAbstractType,\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n  isScalarType,\n  isUnionType,\n} from './definition.mjs';\nimport { GraphQLBoolean, GraphQLString } from './scalars.mjs';\nexport const __Schema = new GraphQLObjectType({\n  name: '__Schema',\n  description:\n    'A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.',\n  fields: () => ({\n    description: {\n      type: GraphQLString,\n      resolve: (schema) => schema.description,\n    },\n    types: {\n      description: 'A list of all types supported by this server.',\n      type: new GraphQLNonNull(new GraphQLList(new GraphQLNonNull(__Type))),\n\n      resolve(schema) {\n        return Object.values(schema.getTypeMap());\n      },\n    },\n    queryType: {\n      description: 'The type that query operations will be rooted at.',\n      type: new GraphQLNonNull(__Type),\n      resolve: (schema) => schema.getQueryType(),\n    },\n    mutationType: {\n      description:\n        'If this server supports mutation, the type that mutation operations will be rooted at.',\n      type: __Type,\n      resolve: (schema) => schema.getMutationType(),\n    },\n    subscriptionType: {\n      description:\n        'If this server support subscription, the type that subscription operations will be rooted at.',\n      type: __Type,\n      resolve: (schema) => schema.getSubscriptionType(),\n    },\n    directives: {\n      description: 'A list of all directives supported by this server.',\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__Directive)),\n      ),\n      resolve: (schema) => schema.getDirectives(),\n    },\n  }),\n});\nexport const __Directive = new GraphQLObjectType({\n  name: '__Directive',\n  description:\n    \"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\\n\\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.\",\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (directive) => directive.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (directive) => directive.description,\n    },\n    isRepeatable: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (directive) => directive.isRepeatable,\n    },\n    locations: {\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__DirectiveLocation)),\n      ),\n      resolve: (directive) => directive.locations,\n    },\n    args: {\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__InputValue)),\n      ),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(field, { includeDeprecated }) {\n        return includeDeprecated\n          ? field.args\n          : field.args.filter((arg) => arg.deprecationReason == null);\n      },\n    },\n  }),\n});\nexport const __DirectiveLocation = new GraphQLEnumType({\n  name: '__DirectiveLocation',\n  description:\n    'A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.',\n  values: {\n    QUERY: {\n      value: DirectiveLocation.QUERY,\n      description: 'Location adjacent to a query operation.',\n    },\n    MUTATION: {\n      value: DirectiveLocation.MUTATION,\n      description: 'Location adjacent to a mutation operation.',\n    },\n    SUBSCRIPTION: {\n      value: DirectiveLocation.SUBSCRIPTION,\n      description: 'Location adjacent to a subscription operation.',\n    },\n    FIELD: {\n      value: DirectiveLocation.FIELD,\n      description: 'Location adjacent to a field.',\n    },\n    FRAGMENT_DEFINITION: {\n      value: DirectiveLocation.FRAGMENT_DEFINITION,\n      description: 'Location adjacent to a fragment definition.',\n    },\n    FRAGMENT_SPREAD: {\n      value: DirectiveLocation.FRAGMENT_SPREAD,\n      description: 'Location adjacent to a fragment spread.',\n    },\n    INLINE_FRAGMENT: {\n      value: DirectiveLocation.INLINE_FRAGMENT,\n      description: 'Location adjacent to an inline fragment.',\n    },\n    VARIABLE_DEFINITION: {\n      value: DirectiveLocation.VARIABLE_DEFINITION,\n      description: 'Location adjacent to a variable definition.',\n    },\n    SCHEMA: {\n      value: DirectiveLocation.SCHEMA,\n      description: 'Location adjacent to a schema definition.',\n    },\n    SCALAR: {\n      value: DirectiveLocation.SCALAR,\n      description: 'Location adjacent to a scalar definition.',\n    },\n    OBJECT: {\n      value: DirectiveLocation.OBJECT,\n      description: 'Location adjacent to an object type definition.',\n    },\n    FIELD_DEFINITION: {\n      value: DirectiveLocation.FIELD_DEFINITION,\n      description: 'Location adjacent to a field definition.',\n    },\n    ARGUMENT_DEFINITION: {\n      value: DirectiveLocation.ARGUMENT_DEFINITION,\n      description: 'Location adjacent to an argument definition.',\n    },\n    INTERFACE: {\n      value: DirectiveLocation.INTERFACE,\n      description: 'Location adjacent to an interface definition.',\n    },\n    UNION: {\n      value: DirectiveLocation.UNION,\n      description: 'Location adjacent to a union definition.',\n    },\n    ENUM: {\n      value: DirectiveLocation.ENUM,\n      description: 'Location adjacent to an enum definition.',\n    },\n    ENUM_VALUE: {\n      value: DirectiveLocation.ENUM_VALUE,\n      description: 'Location adjacent to an enum value definition.',\n    },\n    INPUT_OBJECT: {\n      value: DirectiveLocation.INPUT_OBJECT,\n      description: 'Location adjacent to an input object type definition.',\n    },\n    INPUT_FIELD_DEFINITION: {\n      value: DirectiveLocation.INPUT_FIELD_DEFINITION,\n      description: 'Location adjacent to an input object field definition.',\n    },\n  },\n});\nexport const __Type = new GraphQLObjectType({\n  name: '__Type',\n  description:\n    'The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\\n\\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.',\n  fields: () => ({\n    kind: {\n      type: new GraphQLNonNull(__TypeKind),\n\n      resolve(type) {\n        if (isScalarType(type)) {\n          return TypeKind.SCALAR;\n        }\n\n        if (isObjectType(type)) {\n          return TypeKind.OBJECT;\n        }\n\n        if (isInterfaceType(type)) {\n          return TypeKind.INTERFACE;\n        }\n\n        if (isUnionType(type)) {\n          return TypeKind.UNION;\n        }\n\n        if (isEnumType(type)) {\n          return TypeKind.ENUM;\n        }\n\n        if (isInputObjectType(type)) {\n          return TypeKind.INPUT_OBJECT;\n        }\n\n        if (isListType(type)) {\n          return TypeKind.LIST;\n        }\n\n        if (isNonNullType(type)) {\n          return TypeKind.NON_NULL;\n        }\n        /* c8 ignore next 3 */\n        // Not reachable, all possible types have been considered)\n\n        false || invariant(false, `Unexpected type: \"${inspect(type)}\".`);\n      },\n    },\n    name: {\n      type: GraphQLString,\n      resolve: (type) => ('name' in type ? type.name : undefined),\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (\n        type, // FIXME: add test case\n      ) =>\n        /* c8 ignore next */\n        'description' in type ? type.description : undefined,\n    },\n    specifiedByURL: {\n      type: GraphQLString,\n      resolve: (obj) =>\n        'specifiedByURL' in obj ? obj.specifiedByURL : undefined,\n    },\n    fields: {\n      type: new GraphQLList(new GraphQLNonNull(__Field)),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (isObjectType(type) || isInterfaceType(type)) {\n          const fields = Object.values(type.getFields());\n          return includeDeprecated\n            ? fields\n            : fields.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    interfaces: {\n      type: new GraphQLList(new GraphQLNonNull(__Type)),\n\n      resolve(type) {\n        if (isObjectType(type) || isInterfaceType(type)) {\n          return type.getInterfaces();\n        }\n      },\n    },\n    possibleTypes: {\n      type: new GraphQLList(new GraphQLNonNull(__Type)),\n\n      resolve(type, _args, _context, { schema }) {\n        if (isAbstractType(type)) {\n          return schema.getPossibleTypes(type);\n        }\n      },\n    },\n    enumValues: {\n      type: new GraphQLList(new GraphQLNonNull(__EnumValue)),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (isEnumType(type)) {\n          const values = type.getValues();\n          return includeDeprecated\n            ? values\n            : values.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    inputFields: {\n      type: new GraphQLList(new GraphQLNonNull(__InputValue)),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(type, { includeDeprecated }) {\n        if (isInputObjectType(type)) {\n          const values = Object.values(type.getFields());\n          return includeDeprecated\n            ? values\n            : values.filter((field) => field.deprecationReason == null);\n        }\n      },\n    },\n    ofType: {\n      type: __Type,\n      resolve: (type) => ('ofType' in type ? type.ofType : undefined),\n    },\n  }),\n});\nexport const __Field = new GraphQLObjectType({\n  name: '__Field',\n  description:\n    'Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.',\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (field) => field.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (field) => field.description,\n    },\n    args: {\n      type: new GraphQLNonNull(\n        new GraphQLList(new GraphQLNonNull(__InputValue)),\n      ),\n      args: {\n        includeDeprecated: {\n          type: GraphQLBoolean,\n          defaultValue: false,\n        },\n      },\n\n      resolve(field, { includeDeprecated }) {\n        return includeDeprecated\n          ? field.args\n          : field.args.filter((arg) => arg.deprecationReason == null);\n      },\n    },\n    type: {\n      type: new GraphQLNonNull(__Type),\n      resolve: (field) => field.type,\n    },\n    isDeprecated: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (field) => field.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: GraphQLString,\n      resolve: (field) => field.deprecationReason,\n    },\n  }),\n});\nexport const __InputValue = new GraphQLObjectType({\n  name: '__InputValue',\n  description:\n    'Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.',\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (inputValue) => inputValue.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (inputValue) => inputValue.description,\n    },\n    type: {\n      type: new GraphQLNonNull(__Type),\n      resolve: (inputValue) => inputValue.type,\n    },\n    defaultValue: {\n      type: GraphQLString,\n      description:\n        'A GraphQL-formatted string representing the default value for this input value.',\n\n      resolve(inputValue) {\n        const { type, defaultValue } = inputValue;\n        const valueAST = astFromValue(defaultValue, type);\n        return valueAST ? print(valueAST) : null;\n      },\n    },\n    isDeprecated: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (field) => field.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: GraphQLString,\n      resolve: (obj) => obj.deprecationReason,\n    },\n  }),\n});\nexport const __EnumValue = new GraphQLObjectType({\n  name: '__EnumValue',\n  description:\n    'One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.',\n  fields: () => ({\n    name: {\n      type: new GraphQLNonNull(GraphQLString),\n      resolve: (enumValue) => enumValue.name,\n    },\n    description: {\n      type: GraphQLString,\n      resolve: (enumValue) => enumValue.description,\n    },\n    isDeprecated: {\n      type: new GraphQLNonNull(GraphQLBoolean),\n      resolve: (enumValue) => enumValue.deprecationReason != null,\n    },\n    deprecationReason: {\n      type: GraphQLString,\n      resolve: (enumValue) => enumValue.deprecationReason,\n    },\n  }),\n});\nexport let TypeKind;\n\n(function (TypeKind) {\n  TypeKind['SCALAR'] = 'SCALAR';\n  TypeKind['OBJECT'] = 'OBJECT';\n  TypeKind['INTERFACE'] = 'INTERFACE';\n  TypeKind['UNION'] = 'UNION';\n  TypeKind['ENUM'] = 'ENUM';\n  TypeKind['INPUT_OBJECT'] = 'INPUT_OBJECT';\n  TypeKind['LIST'] = 'LIST';\n  TypeKind['NON_NULL'] = 'NON_NULL';\n})(TypeKind || (TypeKind = {}));\n\nexport const __TypeKind = new GraphQLEnumType({\n  name: '__TypeKind',\n  description: 'An enum describing what kind of type a given `__Type` is.',\n  values: {\n    SCALAR: {\n      value: TypeKind.SCALAR,\n      description: 'Indicates this type is a scalar.',\n    },\n    OBJECT: {\n      value: TypeKind.OBJECT,\n      description:\n        'Indicates this type is an object. `fields` and `interfaces` are valid fields.',\n    },\n    INTERFACE: {\n      value: TypeKind.INTERFACE,\n      description:\n        'Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.',\n    },\n    UNION: {\n      value: TypeKind.UNION,\n      description:\n        'Indicates this type is a union. `possibleTypes` is a valid field.',\n    },\n    ENUM: {\n      value: TypeKind.ENUM,\n      description:\n        'Indicates this type is an enum. `enumValues` is a valid field.',\n    },\n    INPUT_OBJECT: {\n      value: TypeKind.INPUT_OBJECT,\n      description:\n        'Indicates this type is an input object. `inputFields` is a valid field.',\n    },\n    LIST: {\n      value: TypeKind.LIST,\n      description: 'Indicates this type is a list. `ofType` is a valid field.',\n    },\n    NON_NULL: {\n      value: TypeKind.NON_NULL,\n      description:\n        'Indicates this type is a non-null. `ofType` is a valid field.',\n    },\n  },\n});\n/**\n * Note that these are GraphQLField and not GraphQLFieldConfig,\n * so the format for args is different.\n */\n\nexport const SchemaMetaFieldDef = {\n  name: '__schema',\n  type: new GraphQLNonNull(__Schema),\n  description: 'Access the current type schema of this server.',\n  args: [],\n  resolve: (_source, _args, _context, { schema }) => schema,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexport const TypeMetaFieldDef = {\n  name: '__type',\n  type: __Type,\n  description: 'Request the type information of a single type.',\n  args: [\n    {\n      name: 'name',\n      description: undefined,\n      type: new GraphQLNonNull(GraphQLString),\n      defaultValue: undefined,\n      deprecationReason: undefined,\n      extensions: Object.create(null),\n      astNode: undefined,\n    },\n  ],\n  resolve: (_source, { name }, _context, { schema }) => schema.getType(name),\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexport const TypeNameMetaFieldDef = {\n  name: '__typename',\n  type: new GraphQLNonNull(GraphQLString),\n  description: 'The name of the current Object type at runtime.',\n  args: [],\n  resolve: (_source, _args, _context, { parentType }) => parentType.name,\n  deprecationReason: undefined,\n  extensions: Object.create(null),\n  astNode: undefined,\n};\nexport const introspectionTypes = Object.freeze([\n  __Schema,\n  __Directive,\n  __DirectiveLocation,\n  __Type,\n  __Field,\n  __InputValue,\n  __EnumValue,\n  __TypeKind,\n]);\nexport function isIntrospectionType(type) {\n  return introspectionTypes.some(({ name }) => type.name === name);\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { print } from '../language/printer.mjs';\nimport { GraphQLScalarType } from './definition.mjs';\n/**\n * Maximum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe up-to 2^53 - 1\n * */\n\nexport const GRAPHQL_MAX_INT = 2147483647;\n/**\n * Minimum possible Int value as per GraphQL Spec (32-bit signed integer).\n * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe starting at -(2^53 - 1)\n * */\n\nexport const GRAPHQL_MIN_INT = -2147483648;\nexport const GraphQLInt = new GraphQLScalarType({\n  name: 'Int',\n  description:\n    'The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n\n    let num = coercedValue;\n\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n\n    if (typeof num !== 'number' || !Number.isInteger(num)) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${inspect(coercedValue)}`,\n      );\n    }\n\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        'Int cannot represent non 32-bit signed integer value: ' +\n          inspect(coercedValue),\n      );\n    }\n\n    return num;\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isInteger(inputValue)) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${inspect(inputValue)}`,\n      );\n    }\n\n    if (inputValue > GRAPHQL_MAX_INT || inputValue < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${inputValue}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        `Int cannot represent non-integer value: ${print(valueNode)}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    const num = parseInt(valueNode.value, 10);\n\n    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {\n      throw new GraphQLError(\n        `Int cannot represent non 32-bit signed integer value: ${valueNode.value}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return num;\n  },\n});\nexport const GraphQLFloat = new GraphQLScalarType({\n  name: 'Float',\n  description:\n    'The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 1 : 0;\n    }\n\n    let num = coercedValue;\n\n    if (typeof coercedValue === 'string' && coercedValue !== '') {\n      num = Number(coercedValue);\n    }\n\n    if (typeof num !== 'number' || !Number.isFinite(num)) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${inspect(coercedValue)}`,\n      );\n    }\n\n    return num;\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'number' || !Number.isFinite(inputValue)) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${inspect(inputValue)}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.FLOAT && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        `Float cannot represent non numeric value: ${print(valueNode)}`,\n        valueNode,\n      );\n    }\n\n    return parseFloat(valueNode.value);\n  },\n});\nexport const GraphQLString = new GraphQLScalarType({\n  name: 'String',\n  description:\n    'The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue); // Serialize string, boolean and number values to a string, but do not\n    // attempt to coerce object, function, symbol, or other types as strings.\n\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue ? 'true' : 'false';\n    }\n\n    if (typeof coercedValue === 'number' && Number.isFinite(coercedValue)) {\n      return coercedValue.toString();\n    }\n\n    throw new GraphQLError(\n      `String cannot represent value: ${inspect(outputValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'string') {\n      throw new GraphQLError(\n        `String cannot represent a non string value: ${inspect(inputValue)}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING) {\n      throw new GraphQLError(\n        `String cannot represent a non string value: ${print(valueNode)}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexport const GraphQLBoolean = new GraphQLScalarType({\n  name: 'Boolean',\n  description: 'The `Boolean` scalar type represents `true` or `false`.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'boolean') {\n      return coercedValue;\n    }\n\n    if (Number.isFinite(coercedValue)) {\n      return coercedValue !== 0;\n    }\n\n    throw new GraphQLError(\n      `Boolean cannot represent a non boolean value: ${inspect(coercedValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue !== 'boolean') {\n      throw new GraphQLError(\n        `Boolean cannot represent a non boolean value: ${inspect(inputValue)}`,\n      );\n    }\n\n    return inputValue;\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.BOOLEAN) {\n      throw new GraphQLError(\n        `Boolean cannot represent a non boolean value: ${print(valueNode)}`,\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexport const GraphQLID = new GraphQLScalarType({\n  name: 'ID',\n  description:\n    'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.',\n\n  serialize(outputValue) {\n    const coercedValue = serializeObject(outputValue);\n\n    if (typeof coercedValue === 'string') {\n      return coercedValue;\n    }\n\n    if (Number.isInteger(coercedValue)) {\n      return String(coercedValue);\n    }\n\n    throw new GraphQLError(\n      `ID cannot represent value: ${inspect(outputValue)}`,\n    );\n  },\n\n  parseValue(inputValue) {\n    if (typeof inputValue === 'string') {\n      return inputValue;\n    }\n\n    if (typeof inputValue === 'number' && Number.isInteger(inputValue)) {\n      return inputValue.toString();\n    }\n\n    throw new GraphQLError(`ID cannot represent value: ${inspect(inputValue)}`);\n  },\n\n  parseLiteral(valueNode) {\n    if (valueNode.kind !== Kind.STRING && valueNode.kind !== Kind.INT) {\n      throw new GraphQLError(\n        'ID cannot represent a non-string and non-integer value: ' +\n          print(valueNode),\n        {\n          nodes: valueNode,\n        },\n      );\n    }\n\n    return valueNode.value;\n  },\n});\nexport const specifiedScalarTypes = Object.freeze([\n  GraphQLString,\n  GraphQLInt,\n  GraphQLFloat,\n  GraphQLBoolean,\n  GraphQLID,\n]);\nexport function isSpecifiedScalarType(type) {\n  return specifiedScalarTypes.some(({ name }) => type.name === name);\n} // Support serializing objects with custom valueOf() or toJSON() functions -\n// a common way to represent a complex value which can be represented as\n// a string (ex: MongoDB id objects).\n\nfunction serializeObject(outputValue) {\n  if (isObjectLike(outputValue)) {\n    if (typeof outputValue.valueOf === 'function') {\n      const valueOfResult = outputValue.valueOf();\n\n      if (!isObjectLike(valueOfResult)) {\n        return valueOfResult;\n      }\n    }\n\n    if (typeof outputValue.toJSON === 'function') {\n      return outputValue.toJSON();\n    }\n  }\n\n  return outputValue;\n}\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { instanceOf } from '../jsutils/instanceOf.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { toObjMap } from '../jsutils/toObjMap.mjs';\nimport { OperationTypeNode } from '../language/ast.mjs';\nimport {\n  getNamedType,\n  isInputObjectType,\n  isInterfaceType,\n  isObjectType,\n  isUnionType,\n} from './definition.mjs';\nimport { isDirective, specifiedDirectives } from './directives.mjs';\nimport { __Schema } from './introspection.mjs';\n/**\n * Test if the given value is a GraphQL schema.\n */\n\nexport function isSchema(schema) {\n  return instanceOf(schema, GraphQLSchema);\n}\nexport function assertSchema(schema) {\n  if (!isSchema(schema)) {\n    throw new Error(`Expected ${inspect(schema)} to be a GraphQL schema.`);\n  }\n\n  return schema;\n}\n/**\n * Custom extensions\n *\n * @remarks\n * Use a unique identifier name for your extension, for example the name of\n * your library or project. Do not use a shortened identifier as this increases\n * the risk of conflicts. We recommend you add at most one extension field,\n * an object which can contain all the values you need.\n */\n\n/**\n * Schema Definition\n *\n * A Schema is created by supplying the root types of each type of operation,\n * query and mutation (optional). A schema definition is then supplied to the\n * validator and executor.\n *\n * Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   query: MyAppQueryRootType,\n *   mutation: MyAppMutationRootType,\n * })\n * ```\n *\n * Note: When the schema is constructed, by default only the types that are\n * reachable by traversing the root types are included, other types must be\n * explicitly referenced.\n *\n * Example:\n *\n * ```ts\n * const characterInterface = new GraphQLInterfaceType({\n *   name: 'Character',\n *   ...\n * });\n *\n * const humanType = new GraphQLObjectType({\n *   name: 'Human',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const droidType = new GraphQLObjectType({\n *   name: 'Droid',\n *   interfaces: [characterInterface],\n *   ...\n * });\n *\n * const schema = new GraphQLSchema({\n *   query: new GraphQLObjectType({\n *     name: 'Query',\n *     fields: {\n *       hero: { type: characterInterface, ... },\n *     }\n *   }),\n *   ...\n *   // Since this schema references only the `Character` interface it's\n *   // necessary to explicitly list the types that implement it if\n *   // you want them to be included in the final schema.\n *   types: [humanType, droidType],\n * })\n * ```\n *\n * Note: If an array of `directives` are provided to GraphQLSchema, that will be\n * the exact list of directives represented and allowed. If `directives` is not\n * provided then a default set of the specified directives (e.g. `@include` and\n * `@skip`) will be used. If you wish to provide *additional* directives to these\n * specified directives, you must explicitly declare them. Example:\n *\n * ```ts\n * const MyAppSchema = new GraphQLSchema({\n *   ...\n *   directives: specifiedDirectives.concat([ myCustomDirective ]),\n * })\n * ```\n */\nexport class GraphQLSchema {\n  // Used as a cache for validateSchema().\n  constructor(config) {\n    var _config$extensionASTN, _config$directives;\n\n    // If this schema was built from a source known to be valid, then it may be\n    // marked with assumeValid to avoid an additional type system validation.\n    this.__validationErrors = config.assumeValid === true ? [] : undefined; // Check for common mistakes during construction to produce early errors.\n\n    isObjectLike(config) ||\n      devAssert(false, 'Must provide configuration object.');\n    !config.types ||\n      Array.isArray(config.types) ||\n      devAssert(\n        false,\n        `\"types\" must be Array if provided but got: ${inspect(config.types)}.`,\n      );\n    !config.directives ||\n      Array.isArray(config.directives) ||\n      devAssert(\n        false,\n        '\"directives\" must be Array if provided but got: ' +\n          `${inspect(config.directives)}.`,\n      );\n    this.description = config.description;\n    this.extensions = toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes =\n      (_config$extensionASTN = config.extensionASTNodes) !== null &&\n      _config$extensionASTN !== void 0\n        ? _config$extensionASTN\n        : [];\n    this._queryType = config.query;\n    this._mutationType = config.mutation;\n    this._subscriptionType = config.subscription; // Provide specified directives (e.g. @include and @skip) by default.\n\n    this._directives =\n      (_config$directives = config.directives) !== null &&\n      _config$directives !== void 0\n        ? _config$directives\n        : specifiedDirectives; // To preserve order of user-provided types, we add first to add them to\n    // the set of \"collected\" types, so `collectReferencedTypes` ignore them.\n\n    const allReferencedTypes = new Set(config.types);\n\n    if (config.types != null) {\n      for (const type of config.types) {\n        // When we ready to process this type, we remove it from \"collected\" types\n        // and then add it together with all dependent types in the correct position.\n        allReferencedTypes.delete(type);\n        collectReferencedTypes(type, allReferencedTypes);\n      }\n    }\n\n    if (this._queryType != null) {\n      collectReferencedTypes(this._queryType, allReferencedTypes);\n    }\n\n    if (this._mutationType != null) {\n      collectReferencedTypes(this._mutationType, allReferencedTypes);\n    }\n\n    if (this._subscriptionType != null) {\n      collectReferencedTypes(this._subscriptionType, allReferencedTypes);\n    }\n\n    for (const directive of this._directives) {\n      // Directives are not validated until validateSchema() is called.\n      if (isDirective(directive)) {\n        for (const arg of directive.args) {\n          collectReferencedTypes(arg.type, allReferencedTypes);\n        }\n      }\n    }\n\n    collectReferencedTypes(__Schema, allReferencedTypes); // Storing the resulting map for reference by the schema.\n\n    this._typeMap = Object.create(null);\n    this._subTypeMap = Object.create(null); // Keep track of all implementations by interface name.\n\n    this._implementationsMap = Object.create(null);\n\n    for (const namedType of allReferencedTypes) {\n      if (namedType == null) {\n        continue;\n      }\n\n      const typeName = namedType.name;\n      typeName ||\n        devAssert(\n          false,\n          'One of the provided types for building the Schema is missing a name.',\n        );\n\n      if (this._typeMap[typeName] !== undefined) {\n        throw new Error(\n          `Schema must contain uniquely named types but contains multiple types named \"${typeName}\".`,\n        );\n      }\n\n      this._typeMap[typeName] = namedType;\n\n      if (isInterfaceType(namedType)) {\n        // Store implementations by interface.\n        for (const iface of namedType.getInterfaces()) {\n          if (isInterfaceType(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: [],\n              };\n            }\n\n            implementations.interfaces.push(namedType);\n          }\n        }\n      } else if (isObjectType(namedType)) {\n        // Store implementations by objects.\n        for (const iface of namedType.getInterfaces()) {\n          if (isInterfaceType(iface)) {\n            let implementations = this._implementationsMap[iface.name];\n\n            if (implementations === undefined) {\n              implementations = this._implementationsMap[iface.name] = {\n                objects: [],\n                interfaces: [],\n              };\n            }\n\n            implementations.objects.push(namedType);\n          }\n        }\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'GraphQLSchema';\n  }\n\n  getQueryType() {\n    return this._queryType;\n  }\n\n  getMutationType() {\n    return this._mutationType;\n  }\n\n  getSubscriptionType() {\n    return this._subscriptionType;\n  }\n\n  getRootType(operation) {\n    switch (operation) {\n      case OperationTypeNode.QUERY:\n        return this.getQueryType();\n\n      case OperationTypeNode.MUTATION:\n        return this.getMutationType();\n\n      case OperationTypeNode.SUBSCRIPTION:\n        return this.getSubscriptionType();\n    }\n  }\n\n  getTypeMap() {\n    return this._typeMap;\n  }\n\n  getType(name) {\n    return this.getTypeMap()[name];\n  }\n\n  getPossibleTypes(abstractType) {\n    return isUnionType(abstractType)\n      ? abstractType.getTypes()\n      : this.getImplementations(abstractType).objects;\n  }\n\n  getImplementations(interfaceType) {\n    const implementations = this._implementationsMap[interfaceType.name];\n    return implementations !== null && implementations !== void 0\n      ? implementations\n      : {\n          objects: [],\n          interfaces: [],\n        };\n  }\n\n  isSubType(abstractType, maybeSubType) {\n    let map = this._subTypeMap[abstractType.name];\n\n    if (map === undefined) {\n      map = Object.create(null);\n\n      if (isUnionType(abstractType)) {\n        for (const type of abstractType.getTypes()) {\n          map[type.name] = true;\n        }\n      } else {\n        const implementations = this.getImplementations(abstractType);\n\n        for (const type of implementations.objects) {\n          map[type.name] = true;\n        }\n\n        for (const type of implementations.interfaces) {\n          map[type.name] = true;\n        }\n      }\n\n      this._subTypeMap[abstractType.name] = map;\n    }\n\n    return map[maybeSubType.name] !== undefined;\n  }\n\n  getDirectives() {\n    return this._directives;\n  }\n\n  getDirective(name) {\n    return this.getDirectives().find((directive) => directive.name === name);\n  }\n\n  toConfig() {\n    return {\n      description: this.description,\n      query: this.getQueryType(),\n      mutation: this.getMutationType(),\n      subscription: this.getSubscriptionType(),\n      types: Object.values(this.getTypeMap()),\n      directives: this.getDirectives(),\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes,\n      assumeValid: this.__validationErrors !== undefined,\n    };\n  }\n}\n\nfunction collectReferencedTypes(type, typeSet) {\n  const namedType = getNamedType(type);\n\n  if (!typeSet.has(namedType)) {\n    typeSet.add(namedType);\n\n    if (isUnionType(namedType)) {\n      for (const memberType of namedType.getTypes()) {\n        collectReferencedTypes(memberType, typeSet);\n      }\n    } else if (isObjectType(namedType) || isInterfaceType(namedType)) {\n      for (const interfaceType of namedType.getInterfaces()) {\n        collectReferencedTypes(interfaceType, typeSet);\n      }\n\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n\n        for (const arg of field.args) {\n          collectReferencedTypes(arg.type, typeSet);\n        }\n      }\n    } else if (isInputObjectType(namedType)) {\n      for (const field of Object.values(namedType.getFields())) {\n        collectReferencedTypes(field.type, typeSet);\n      }\n    }\n  }\n\n  return typeSet;\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { OperationTypeNode } from '../language/ast.mjs';\nimport { isEqualType, isTypeSubTypeOf } from '../utilities/typeComparators.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isInputType,\n  isInterfaceType,\n  isNamedType,\n  isNonNullType,\n  isObjectType,\n  isOutputType,\n  isRequiredArgument,\n  isRequiredInputField,\n  isUnionType,\n} from './definition.mjs';\nimport { GraphQLDeprecatedDirective, isDirective } from './directives.mjs';\nimport { isIntrospectionType } from './introspection.mjs';\nimport { assertSchema } from './schema.mjs';\n/**\n * Implements the \"Type Validation\" sub-sections of the specification's\n * \"Type System\" section.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the Schema is valid.\n */\n\nexport function validateSchema(schema) {\n  // First check to ensure the provided value is in fact a GraphQLSchema.\n  assertSchema(schema); // If this Schema has already been validated, return the previous results.\n\n  if (schema.__validationErrors) {\n    return schema.__validationErrors;\n  } // Validate the schema, producing a list of errors.\n\n  const context = new SchemaValidationContext(schema);\n  validateRootTypes(context);\n  validateDirectives(context);\n  validateTypes(context); // Persist the results of validation before returning to ensure validation\n  // does not run multiple times for this schema.\n\n  const errors = context.getErrors();\n  schema.__validationErrors = errors;\n  return errors;\n}\n/**\n * Utility function which asserts a schema is valid by throwing an error if\n * it is invalid.\n */\n\nexport function assertValidSchema(schema) {\n  const errors = validateSchema(schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n\nclass SchemaValidationContext {\n  constructor(schema) {\n    this._errors = [];\n    this.schema = schema;\n  }\n\n  reportError(message, nodes) {\n    const _nodes = Array.isArray(nodes) ? nodes.filter(Boolean) : nodes;\n\n    this._errors.push(\n      new GraphQLError(message, {\n        nodes: _nodes,\n      }),\n    );\n  }\n\n  getErrors() {\n    return this._errors;\n  }\n}\n\nfunction validateRootTypes(context) {\n  const schema = context.schema;\n  const queryType = schema.getQueryType();\n\n  if (!queryType) {\n    context.reportError('Query root type must be provided.', schema.astNode);\n  } else if (!isObjectType(queryType)) {\n    var _getOperationTypeNode;\n\n    context.reportError(\n      `Query root type must be Object type, it cannot be ${inspect(\n        queryType,\n      )}.`,\n      (_getOperationTypeNode = getOperationTypeNode(\n        schema,\n        OperationTypeNode.QUERY,\n      )) !== null && _getOperationTypeNode !== void 0\n        ? _getOperationTypeNode\n        : queryType.astNode,\n    );\n  }\n\n  const mutationType = schema.getMutationType();\n\n  if (mutationType && !isObjectType(mutationType)) {\n    var _getOperationTypeNode2;\n\n    context.reportError(\n      'Mutation root type must be Object type if provided, it cannot be ' +\n        `${inspect(mutationType)}.`,\n      (_getOperationTypeNode2 = getOperationTypeNode(\n        schema,\n        OperationTypeNode.MUTATION,\n      )) !== null && _getOperationTypeNode2 !== void 0\n        ? _getOperationTypeNode2\n        : mutationType.astNode,\n    );\n  }\n\n  const subscriptionType = schema.getSubscriptionType();\n\n  if (subscriptionType && !isObjectType(subscriptionType)) {\n    var _getOperationTypeNode3;\n\n    context.reportError(\n      'Subscription root type must be Object type if provided, it cannot be ' +\n        `${inspect(subscriptionType)}.`,\n      (_getOperationTypeNode3 = getOperationTypeNode(\n        schema,\n        OperationTypeNode.SUBSCRIPTION,\n      )) !== null && _getOperationTypeNode3 !== void 0\n        ? _getOperationTypeNode3\n        : subscriptionType.astNode,\n    );\n  }\n}\n\nfunction getOperationTypeNode(schema, operation) {\n  var _flatMap$find;\n\n  return (_flatMap$find = [schema.astNode, ...schema.extensionASTNodes]\n    .flatMap(\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n      (schemaNode) => {\n        var _schemaNode$operation;\n\n        return (\n          /* c8 ignore next */\n          (_schemaNode$operation =\n            schemaNode === null || schemaNode === void 0\n              ? void 0\n              : schemaNode.operationTypes) !== null &&\n            _schemaNode$operation !== void 0\n            ? _schemaNode$operation\n            : []\n        );\n      },\n    )\n    .find((operationNode) => operationNode.operation === operation)) === null ||\n    _flatMap$find === void 0\n    ? void 0\n    : _flatMap$find.type;\n}\n\nfunction validateDirectives(context) {\n  for (const directive of context.schema.getDirectives()) {\n    // Ensure all directives are in fact GraphQL directives.\n    if (!isDirective(directive)) {\n      context.reportError(\n        `Expected directive but got: ${inspect(directive)}.`,\n        directive === null || directive === void 0 ? void 0 : directive.astNode,\n      );\n      continue;\n    } // Ensure they are named correctly.\n\n    validateName(context, directive); // TODO: Ensure proper locations.\n    // Ensure the arguments are valid.\n\n    for (const arg of directive.args) {\n      // Ensure they are named correctly.\n      validateName(context, arg); // Ensure the type is an input type.\n\n      if (!isInputType(arg.type)) {\n        context.reportError(\n          `The type of @${directive.name}(${arg.name}:) must be Input Type ` +\n            `but got: ${inspect(arg.type)}.`,\n          arg.astNode,\n        );\n      }\n\n      if (isRequiredArgument(arg) && arg.deprecationReason != null) {\n        var _arg$astNode;\n\n        context.reportError(\n          `Required argument @${directive.name}(${arg.name}:) cannot be deprecated.`,\n          [\n            getDeprecatedDirectiveNode(arg.astNode),\n            (_arg$astNode = arg.astNode) === null || _arg$astNode === void 0\n              ? void 0\n              : _arg$astNode.type,\n          ],\n        );\n      }\n    }\n  }\n}\n\nfunction validateName(context, node) {\n  // Ensure names are valid, however introspection types opt out.\n  if (node.name.startsWith('__')) {\n    context.reportError(\n      `Name \"${node.name}\" must not begin with \"__\", which is reserved by GraphQL introspection.`,\n      node.astNode,\n    );\n  }\n}\n\nfunction validateTypes(context) {\n  const validateInputObjectCircularRefs =\n    createInputObjectCircularRefsValidator(context);\n  const typeMap = context.schema.getTypeMap();\n\n  for (const type of Object.values(typeMap)) {\n    // Ensure all provided types are in fact GraphQL type.\n    if (!isNamedType(type)) {\n      context.reportError(\n        `Expected GraphQL named type but got: ${inspect(type)}.`,\n        type.astNode,\n      );\n      continue;\n    } // Ensure it is named correctly (excluding introspection types).\n\n    if (!isIntrospectionType(type)) {\n      validateName(context, type);\n    }\n\n    if (isObjectType(type)) {\n      // Ensure fields are valid\n      validateFields(context, type); // Ensure objects implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if (isInterfaceType(type)) {\n      // Ensure fields are valid.\n      validateFields(context, type); // Ensure interfaces implement the interfaces they claim to.\n\n      validateInterfaces(context, type);\n    } else if (isUnionType(type)) {\n      // Ensure Unions include valid member types.\n      validateUnionMembers(context, type);\n    } else if (isEnumType(type)) {\n      // Ensure Enums have valid values.\n      validateEnumValues(context, type);\n    } else if (isInputObjectType(type)) {\n      // Ensure Input Object fields are valid.\n      validateInputFields(context, type); // Ensure Input Objects do not contain non-nullable circular references\n\n      validateInputObjectCircularRefs(type);\n    }\n  }\n}\n\nfunction validateFields(context, type) {\n  const fields = Object.values(type.getFields()); // Objects and Interfaces both must define one or more fields.\n\n  if (fields.length === 0) {\n    context.reportError(`Type ${type.name} must define one or more fields.`, [\n      type.astNode,\n      ...type.extensionASTNodes,\n    ]);\n  }\n\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an output type\n\n    if (!isOutputType(field.type)) {\n      var _field$astNode;\n\n      context.reportError(\n        `The type of ${type.name}.${field.name} must be Output Type ` +\n          `but got: ${inspect(field.type)}.`,\n        (_field$astNode = field.astNode) === null || _field$astNode === void 0\n          ? void 0\n          : _field$astNode.type,\n      );\n    } // Ensure the arguments are valid\n\n    for (const arg of field.args) {\n      const argName = arg.name; // Ensure they are named correctly.\n\n      validateName(context, arg); // Ensure the type is an input type\n\n      if (!isInputType(arg.type)) {\n        var _arg$astNode2;\n\n        context.reportError(\n          `The type of ${type.name}.${field.name}(${argName}:) must be Input ` +\n            `Type but got: ${inspect(arg.type)}.`,\n          (_arg$astNode2 = arg.astNode) === null || _arg$astNode2 === void 0\n            ? void 0\n            : _arg$astNode2.type,\n        );\n      }\n\n      if (isRequiredArgument(arg) && arg.deprecationReason != null) {\n        var _arg$astNode3;\n\n        context.reportError(\n          `Required argument ${type.name}.${field.name}(${argName}:) cannot be deprecated.`,\n          [\n            getDeprecatedDirectiveNode(arg.astNode),\n            (_arg$astNode3 = arg.astNode) === null || _arg$astNode3 === void 0\n              ? void 0\n              : _arg$astNode3.type,\n          ],\n        );\n      }\n    }\n  }\n}\n\nfunction validateInterfaces(context, type) {\n  const ifaceTypeNames = Object.create(null);\n\n  for (const iface of type.getInterfaces()) {\n    if (!isInterfaceType(iface)) {\n      context.reportError(\n        `Type ${inspect(type)} must only implement Interface types, ` +\n          `it cannot implement ${inspect(iface)}.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    if (type === iface) {\n      context.reportError(\n        `Type ${type.name} cannot implement itself because it would create a circular reference.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    if (ifaceTypeNames[iface.name]) {\n      context.reportError(\n        `Type ${type.name} can only implement ${iface.name} once.`,\n        getAllImplementsInterfaceNodes(type, iface),\n      );\n      continue;\n    }\n\n    ifaceTypeNames[iface.name] = true;\n    validateTypeImplementsAncestors(context, type, iface);\n    validateTypeImplementsInterface(context, type, iface);\n  }\n}\n\nfunction validateTypeImplementsInterface(context, type, iface) {\n  const typeFieldMap = type.getFields(); // Assert each interface field is implemented.\n\n  for (const ifaceField of Object.values(iface.getFields())) {\n    const fieldName = ifaceField.name;\n    const typeField = typeFieldMap[fieldName]; // Assert interface field exists on type.\n\n    if (!typeField) {\n      context.reportError(\n        `Interface field ${iface.name}.${fieldName} expected but ${type.name} does not provide it.`,\n        [ifaceField.astNode, type.astNode, ...type.extensionASTNodes],\n      );\n      continue;\n    } // Assert interface field type is satisfied by type field type, by being\n    // a valid subtype. (covariant)\n\n    if (!isTypeSubTypeOf(context.schema, typeField.type, ifaceField.type)) {\n      var _ifaceField$astNode, _typeField$astNode;\n\n      context.reportError(\n        `Interface field ${iface.name}.${fieldName} expects type ` +\n          `${inspect(ifaceField.type)} but ${type.name}.${fieldName} ` +\n          `is type ${inspect(typeField.type)}.`,\n        [\n          (_ifaceField$astNode = ifaceField.astNode) === null ||\n          _ifaceField$astNode === void 0\n            ? void 0\n            : _ifaceField$astNode.type,\n          (_typeField$astNode = typeField.astNode) === null ||\n          _typeField$astNode === void 0\n            ? void 0\n            : _typeField$astNode.type,\n        ],\n      );\n    } // Assert each interface field arg is implemented.\n\n    for (const ifaceArg of ifaceField.args) {\n      const argName = ifaceArg.name;\n      const typeArg = typeField.args.find((arg) => arg.name === argName); // Assert interface field arg exists on object field.\n\n      if (!typeArg) {\n        context.reportError(\n          `Interface field argument ${iface.name}.${fieldName}(${argName}:) expected but ${type.name}.${fieldName} does not provide it.`,\n          [ifaceArg.astNode, typeField.astNode],\n        );\n        continue;\n      } // Assert interface field arg type matches object field arg type.\n      // (invariant)\n      // TODO: change to contravariant?\n\n      if (!isEqualType(ifaceArg.type, typeArg.type)) {\n        var _ifaceArg$astNode, _typeArg$astNode;\n\n        context.reportError(\n          `Interface field argument ${iface.name}.${fieldName}(${argName}:) ` +\n            `expects type ${inspect(ifaceArg.type)} but ` +\n            `${type.name}.${fieldName}(${argName}:) is type ` +\n            `${inspect(typeArg.type)}.`,\n          [\n            (_ifaceArg$astNode = ifaceArg.astNode) === null ||\n            _ifaceArg$astNode === void 0\n              ? void 0\n              : _ifaceArg$astNode.type,\n            (_typeArg$astNode = typeArg.astNode) === null ||\n            _typeArg$astNode === void 0\n              ? void 0\n              : _typeArg$astNode.type,\n          ],\n        );\n      } // TODO: validate default values?\n    } // Assert additional arguments must not be required.\n\n    for (const typeArg of typeField.args) {\n      const argName = typeArg.name;\n      const ifaceArg = ifaceField.args.find((arg) => arg.name === argName);\n\n      if (!ifaceArg && isRequiredArgument(typeArg)) {\n        context.reportError(\n          `Object field ${type.name}.${fieldName} includes required argument ${argName} that is missing from the Interface field ${iface.name}.${fieldName}.`,\n          [typeArg.astNode, ifaceField.astNode],\n        );\n      }\n    }\n  }\n}\n\nfunction validateTypeImplementsAncestors(context, type, iface) {\n  const ifaceInterfaces = type.getInterfaces();\n\n  for (const transitive of iface.getInterfaces()) {\n    if (!ifaceInterfaces.includes(transitive)) {\n      context.reportError(\n        transitive === type\n          ? `Type ${type.name} cannot implement ${iface.name} because it would create a circular reference.`\n          : `Type ${type.name} must implement ${transitive.name} because it is implemented by ${iface.name}.`,\n        [\n          ...getAllImplementsInterfaceNodes(iface, transitive),\n          ...getAllImplementsInterfaceNodes(type, iface),\n        ],\n      );\n    }\n  }\n}\n\nfunction validateUnionMembers(context, union) {\n  const memberTypes = union.getTypes();\n\n  if (memberTypes.length === 0) {\n    context.reportError(\n      `Union type ${union.name} must define one or more member types.`,\n      [union.astNode, ...union.extensionASTNodes],\n    );\n  }\n\n  const includedTypeNames = Object.create(null);\n\n  for (const memberType of memberTypes) {\n    if (includedTypeNames[memberType.name]) {\n      context.reportError(\n        `Union type ${union.name} can only include type ${memberType.name} once.`,\n        getUnionMemberTypeNodes(union, memberType.name),\n      );\n      continue;\n    }\n\n    includedTypeNames[memberType.name] = true;\n\n    if (!isObjectType(memberType)) {\n      context.reportError(\n        `Union type ${union.name} can only include Object types, ` +\n          `it cannot include ${inspect(memberType)}.`,\n        getUnionMemberTypeNodes(union, String(memberType)),\n      );\n    }\n  }\n}\n\nfunction validateEnumValues(context, enumType) {\n  const enumValues = enumType.getValues();\n\n  if (enumValues.length === 0) {\n    context.reportError(\n      `Enum type ${enumType.name} must define one or more values.`,\n      [enumType.astNode, ...enumType.extensionASTNodes],\n    );\n  }\n\n  for (const enumValue of enumValues) {\n    // Ensure valid name.\n    validateName(context, enumValue);\n  }\n}\n\nfunction validateInputFields(context, inputObj) {\n  const fields = Object.values(inputObj.getFields());\n\n  if (fields.length === 0) {\n    context.reportError(\n      `Input Object type ${inputObj.name} must define one or more fields.`,\n      [inputObj.astNode, ...inputObj.extensionASTNodes],\n    );\n  } // Ensure the arguments are valid\n\n  for (const field of fields) {\n    // Ensure they are named correctly.\n    validateName(context, field); // Ensure the type is an input type\n\n    if (!isInputType(field.type)) {\n      var _field$astNode2;\n\n      context.reportError(\n        `The type of ${inputObj.name}.${field.name} must be Input Type ` +\n          `but got: ${inspect(field.type)}.`,\n        (_field$astNode2 = field.astNode) === null || _field$astNode2 === void 0\n          ? void 0\n          : _field$astNode2.type,\n      );\n    }\n\n    if (isRequiredInputField(field) && field.deprecationReason != null) {\n      var _field$astNode3;\n\n      context.reportError(\n        `Required input field ${inputObj.name}.${field.name} cannot be deprecated.`,\n        [\n          getDeprecatedDirectiveNode(field.astNode),\n          (_field$astNode3 = field.astNode) === null ||\n          _field$astNode3 === void 0\n            ? void 0\n            : _field$astNode3.type,\n        ],\n      );\n    }\n  }\n}\n\nfunction createInputObjectCircularRefsValidator(context) {\n  // Modified copy of algorithm from 'src/validation/rules/NoFragmentCycles.js'.\n  // Tracks already visited types to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedTypes = Object.create(null); // Array of types nodes used to produce meaningful errors\n\n  const fieldPath = []; // Position in the type path\n\n  const fieldPathIndexByTypeName = Object.create(null);\n  return detectCycleRecursive; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(inputObj) {\n    if (visitedTypes[inputObj.name]) {\n      return;\n    }\n\n    visitedTypes[inputObj.name] = true;\n    fieldPathIndexByTypeName[inputObj.name] = fieldPath.length;\n    const fields = Object.values(inputObj.getFields());\n\n    for (const field of fields) {\n      if (isNonNullType(field.type) && isInputObjectType(field.type.ofType)) {\n        const fieldType = field.type.ofType;\n        const cycleIndex = fieldPathIndexByTypeName[fieldType.name];\n        fieldPath.push(field);\n\n        if (cycleIndex === undefined) {\n          detectCycleRecursive(fieldType);\n        } else {\n          const cyclePath = fieldPath.slice(cycleIndex);\n          const pathStr = cyclePath.map((fieldObj) => fieldObj.name).join('.');\n          context.reportError(\n            `Cannot reference Input Object \"${fieldType.name}\" within itself through a series of non-null fields: \"${pathStr}\".`,\n            cyclePath.map((fieldObj) => fieldObj.astNode),\n          );\n        }\n\n        fieldPath.pop();\n      }\n    }\n\n    fieldPathIndexByTypeName[inputObj.name] = undefined;\n  }\n}\n\nfunction getAllImplementsInterfaceNodes(type, iface) {\n  const { astNode, extensionASTNodes } = type;\n  const nodes =\n    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes\n    .flatMap((typeNode) => {\n      var _typeNode$interfaces;\n\n      return (\n        /* c8 ignore next */\n        (_typeNode$interfaces = typeNode.interfaces) !== null &&\n          _typeNode$interfaces !== void 0\n          ? _typeNode$interfaces\n          : []\n      );\n    })\n    .filter((ifaceNode) => ifaceNode.name.value === iface.name);\n}\n\nfunction getUnionMemberTypeNodes(union, typeName) {\n  const { astNode, extensionASTNodes } = union;\n  const nodes =\n    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  return nodes\n    .flatMap((unionNode) => {\n      var _unionNode$types;\n\n      return (\n        /* c8 ignore next */\n        (_unionNode$types = unionNode.types) !== null &&\n          _unionNode$types !== void 0\n          ? _unionNode$types\n          : []\n      );\n    })\n    .filter((typeNode) => typeNode.name.value === typeName);\n}\n\nfunction getDeprecatedDirectiveNode(definitionNode) {\n  var _definitionNode$direc;\n\n  return definitionNode === null || definitionNode === void 0\n    ? void 0\n    : (_definitionNode$direc = definitionNode.directives) === null ||\n      _definitionNode$direc === void 0\n    ? void 0\n    : _definitionNode$direc.find(\n        (node) => node.name.value === GraphQLDeprecatedDirective.name,\n      );\n}\n","import { isNode } from '../language/ast.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport { getEnterLeaveForKind } from '../language/visitor.mjs';\nimport {\n  getNamedType,\n  getNullableType,\n  isCompositeType,\n  isEnumType,\n  isInputObjectType,\n  isInputType,\n  isInterfaceType,\n  isListType,\n  isObjectType,\n  isOutputType,\n} from '../type/definition.mjs';\nimport {\n  SchemaMetaFieldDef,\n  TypeMetaFieldDef,\n  TypeNameMetaFieldDef,\n} from '../type/introspection.mjs';\nimport { typeFromAST } from './typeFromAST.mjs';\n/**\n * TypeInfo is a utility class which, given a GraphQL schema, can keep track\n * of the current field and type definitions at any point in a GraphQL document\n * AST during a recursive descent by calling `enter(node)` and `leave(node)`.\n */\n\nexport class TypeInfo {\n  constructor(\n    schema,\n    /**\n     * Initial type may be provided in rare cases to facilitate traversals\n     *  beginning somewhere other than documents.\n     */\n    initialType,\n    /** @deprecated will be removed in 17.0.0 */\n    getFieldDefFn,\n  ) {\n    this._schema = schema;\n    this._typeStack = [];\n    this._parentTypeStack = [];\n    this._inputTypeStack = [];\n    this._fieldDefStack = [];\n    this._defaultValueStack = [];\n    this._directive = null;\n    this._argument = null;\n    this._enumValue = null;\n    this._getFieldDef =\n      getFieldDefFn !== null && getFieldDefFn !== void 0\n        ? getFieldDefFn\n        : getFieldDef;\n\n    if (initialType) {\n      if (isInputType(initialType)) {\n        this._inputTypeStack.push(initialType);\n      }\n\n      if (isCompositeType(initialType)) {\n        this._parentTypeStack.push(initialType);\n      }\n\n      if (isOutputType(initialType)) {\n        this._typeStack.push(initialType);\n      }\n    }\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'TypeInfo';\n  }\n\n  getType() {\n    if (this._typeStack.length > 0) {\n      return this._typeStack[this._typeStack.length - 1];\n    }\n  }\n\n  getParentType() {\n    if (this._parentTypeStack.length > 0) {\n      return this._parentTypeStack[this._parentTypeStack.length - 1];\n    }\n  }\n\n  getInputType() {\n    if (this._inputTypeStack.length > 0) {\n      return this._inputTypeStack[this._inputTypeStack.length - 1];\n    }\n  }\n\n  getParentInputType() {\n    if (this._inputTypeStack.length > 1) {\n      return this._inputTypeStack[this._inputTypeStack.length - 2];\n    }\n  }\n\n  getFieldDef() {\n    if (this._fieldDefStack.length > 0) {\n      return this._fieldDefStack[this._fieldDefStack.length - 1];\n    }\n  }\n\n  getDefaultValue() {\n    if (this._defaultValueStack.length > 0) {\n      return this._defaultValueStack[this._defaultValueStack.length - 1];\n    }\n  }\n\n  getDirective() {\n    return this._directive;\n  }\n\n  getArgument() {\n    return this._argument;\n  }\n\n  getEnumValue() {\n    return this._enumValue;\n  }\n\n  enter(node) {\n    const schema = this._schema; // Note: many of the types below are explicitly typed as \"unknown\" to drop\n    // any assumptions of a valid schema to ensure runtime types are properly\n    // checked before continuing since TypeInfo is used as part of validation\n    // which occurs before guarantees of schema and document validity.\n\n    switch (node.kind) {\n      case Kind.SELECTION_SET: {\n        const namedType = getNamedType(this.getType());\n\n        this._parentTypeStack.push(\n          isCompositeType(namedType) ? namedType : undefined,\n        );\n\n        break;\n      }\n\n      case Kind.FIELD: {\n        const parentType = this.getParentType();\n        let fieldDef;\n        let fieldType;\n\n        if (parentType) {\n          fieldDef = this._getFieldDef(schema, parentType, node);\n\n          if (fieldDef) {\n            fieldType = fieldDef.type;\n          }\n        }\n\n        this._fieldDefStack.push(fieldDef);\n\n        this._typeStack.push(isOutputType(fieldType) ? fieldType : undefined);\n\n        break;\n      }\n\n      case Kind.DIRECTIVE:\n        this._directive = schema.getDirective(node.name.value);\n        break;\n\n      case Kind.OPERATION_DEFINITION: {\n        const rootType = schema.getRootType(node.operation);\n\n        this._typeStack.push(isObjectType(rootType) ? rootType : undefined);\n\n        break;\n      }\n\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION: {\n        const typeConditionAST = node.typeCondition;\n        const outputType = typeConditionAST\n          ? typeFromAST(schema, typeConditionAST)\n          : getNamedType(this.getType());\n\n        this._typeStack.push(isOutputType(outputType) ? outputType : undefined);\n\n        break;\n      }\n\n      case Kind.VARIABLE_DEFINITION: {\n        const inputType = typeFromAST(schema, node.type);\n\n        this._inputTypeStack.push(\n          isInputType(inputType) ? inputType : undefined,\n        );\n\n        break;\n      }\n\n      case Kind.ARGUMENT: {\n        var _this$getDirective;\n\n        let argDef;\n        let argType;\n        const fieldOrDirective =\n          (_this$getDirective = this.getDirective()) !== null &&\n          _this$getDirective !== void 0\n            ? _this$getDirective\n            : this.getFieldDef();\n\n        if (fieldOrDirective) {\n          argDef = fieldOrDirective.args.find(\n            (arg) => arg.name === node.name.value,\n          );\n\n          if (argDef) {\n            argType = argDef.type;\n          }\n        }\n\n        this._argument = argDef;\n\n        this._defaultValueStack.push(argDef ? argDef.defaultValue : undefined);\n\n        this._inputTypeStack.push(isInputType(argType) ? argType : undefined);\n\n        break;\n      }\n\n      case Kind.LIST: {\n        const listType = getNullableType(this.getInputType());\n        const itemType = isListType(listType) ? listType.ofType : listType; // List positions never have a default value.\n\n        this._defaultValueStack.push(undefined);\n\n        this._inputTypeStack.push(isInputType(itemType) ? itemType : undefined);\n\n        break;\n      }\n\n      case Kind.OBJECT_FIELD: {\n        const objectType = getNamedType(this.getInputType());\n        let inputFieldType;\n        let inputField;\n\n        if (isInputObjectType(objectType)) {\n          inputField = objectType.getFields()[node.name.value];\n\n          if (inputField) {\n            inputFieldType = inputField.type;\n          }\n        }\n\n        this._defaultValueStack.push(\n          inputField ? inputField.defaultValue : undefined,\n        );\n\n        this._inputTypeStack.push(\n          isInputType(inputFieldType) ? inputFieldType : undefined,\n        );\n\n        break;\n      }\n\n      case Kind.ENUM: {\n        const enumType = getNamedType(this.getInputType());\n        let enumValue;\n\n        if (isEnumType(enumType)) {\n          enumValue = enumType.getValue(node.value);\n        }\n\n        this._enumValue = enumValue;\n        break;\n      }\n\n      default: // Ignore other nodes\n    }\n  }\n\n  leave(node) {\n    switch (node.kind) {\n      case Kind.SELECTION_SET:\n        this._parentTypeStack.pop();\n\n        break;\n\n      case Kind.FIELD:\n        this._fieldDefStack.pop();\n\n        this._typeStack.pop();\n\n        break;\n\n      case Kind.DIRECTIVE:\n        this._directive = null;\n        break;\n\n      case Kind.OPERATION_DEFINITION:\n      case Kind.INLINE_FRAGMENT:\n      case Kind.FRAGMENT_DEFINITION:\n        this._typeStack.pop();\n\n        break;\n\n      case Kind.VARIABLE_DEFINITION:\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.ARGUMENT:\n        this._argument = null;\n\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.LIST:\n      case Kind.OBJECT_FIELD:\n        this._defaultValueStack.pop();\n\n        this._inputTypeStack.pop();\n\n        break;\n\n      case Kind.ENUM:\n        this._enumValue = null;\n        break;\n\n      default: // Ignore other nodes\n    }\n  }\n}\n\n/**\n * Not exactly the same as the executor's definition of getFieldDef, in this\n * statically evaluated environment we do not always have an Object type,\n * and need to handle Interface and Union types.\n */\nfunction getFieldDef(schema, parentType, fieldNode) {\n  const name = fieldNode.name.value;\n\n  if (\n    name === SchemaMetaFieldDef.name &&\n    schema.getQueryType() === parentType\n  ) {\n    return SchemaMetaFieldDef;\n  }\n\n  if (name === TypeMetaFieldDef.name && schema.getQueryType() === parentType) {\n    return TypeMetaFieldDef;\n  }\n\n  if (name === TypeNameMetaFieldDef.name && isCompositeType(parentType)) {\n    return TypeNameMetaFieldDef;\n  }\n\n  if (isObjectType(parentType) || isInterfaceType(parentType)) {\n    return parentType.getFields()[name];\n  }\n}\n/**\n * Creates a new visitor instance which maintains a provided TypeInfo instance\n * along with visiting visitor.\n */\n\nexport function visitWithTypeInfo(typeInfo, visitor) {\n  return {\n    enter(...args) {\n      const node = args[0];\n      typeInfo.enter(node);\n      const fn = getEnterLeaveForKind(visitor, node.kind).enter;\n\n      if (fn) {\n        const result = fn.apply(visitor, args);\n\n        if (result !== undefined) {\n          typeInfo.leave(node);\n\n          if (isNode(result)) {\n            typeInfo.enter(result);\n          }\n        }\n\n        return result;\n      }\n    },\n\n    leave(...args) {\n      const node = args[0];\n      const fn = getEnterLeaveForKind(visitor, node.kind).leave;\n      let result;\n\n      if (fn) {\n        result = fn.apply(visitor, args);\n      }\n\n      typeInfo.leave(node);\n      return result;\n    },\n  };\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { isIterableObject } from '../jsutils/isIterableObject.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n} from '../type/definition.mjs';\nimport { GraphQLID } from '../type/scalars.mjs';\n/**\n * Produces a GraphQL Value AST given a JavaScript object.\n * Function will match JavaScript/JSON values to GraphQL AST schema format\n * by using suggested GraphQLInputType. For example:\n *\n *     astFromValue(\"value\", GraphQLString)\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * JavaScript values.\n *\n * | JSON Value    | GraphQL Value        |\n * | ------------- | -------------------- |\n * | Object        | Input Object         |\n * | Array         | List                 |\n * | Boolean       | Boolean              |\n * | String        | String / Enum Value  |\n * | Number        | Int / Float          |\n * | Unknown       | Enum Value           |\n * | null          | NullValue            |\n *\n */\n\nexport function astFromValue(value, type) {\n  if (isNonNullType(type)) {\n    const astValue = astFromValue(value, type.ofType);\n\n    if (\n      (astValue === null || astValue === void 0 ? void 0 : astValue.kind) ===\n      Kind.NULL\n    ) {\n      return null;\n    }\n\n    return astValue;\n  } // only explicit null, not undefined, NaN\n\n  if (value === null) {\n    return {\n      kind: Kind.NULL,\n    };\n  } // undefined\n\n  if (value === undefined) {\n    return null;\n  } // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but\n  // the value is not an array, convert the value using the list's item type.\n\n  if (isListType(type)) {\n    const itemType = type.ofType;\n\n    if (isIterableObject(value)) {\n      const valuesNodes = [];\n\n      for (const item of value) {\n        const itemNode = astFromValue(item, itemType);\n\n        if (itemNode != null) {\n          valuesNodes.push(itemNode);\n        }\n      }\n\n      return {\n        kind: Kind.LIST,\n        values: valuesNodes,\n      };\n    }\n\n    return astFromValue(value, itemType);\n  } // Populate the fields of the input object by creating ASTs from each value\n  // in the JavaScript object according to the fields in the input type.\n\n  if (isInputObjectType(type)) {\n    if (!isObjectLike(value)) {\n      return null;\n    }\n\n    const fieldNodes = [];\n\n    for (const field of Object.values(type.getFields())) {\n      const fieldValue = astFromValue(value[field.name], field.type);\n\n      if (fieldValue) {\n        fieldNodes.push({\n          kind: Kind.OBJECT_FIELD,\n          name: {\n            kind: Kind.NAME,\n            value: field.name,\n          },\n          value: fieldValue,\n        });\n      }\n    }\n\n    return {\n      kind: Kind.OBJECT,\n      fields: fieldNodes,\n    };\n  }\n\n  if (isLeafType(type)) {\n    // Since value is an internally represented value, it must be serialized\n    // to an externally represented value before converting into an AST.\n    const serialized = type.serialize(value);\n\n    if (serialized == null) {\n      return null;\n    } // Others serialize based on their corresponding JavaScript scalar types.\n\n    if (typeof serialized === 'boolean') {\n      return {\n        kind: Kind.BOOLEAN,\n        value: serialized,\n      };\n    } // JavaScript numbers can be Int or Float values.\n\n    if (typeof serialized === 'number' && Number.isFinite(serialized)) {\n      const stringNum = String(serialized);\n      return integerStringRegExp.test(stringNum)\n        ? {\n            kind: Kind.INT,\n            value: stringNum,\n          }\n        : {\n            kind: Kind.FLOAT,\n            value: stringNum,\n          };\n    }\n\n    if (typeof serialized === 'string') {\n      // Enum types use Enum literals.\n      if (isEnumType(type)) {\n        return {\n          kind: Kind.ENUM,\n          value: serialized,\n        };\n      } // ID types can use Int literals.\n\n      if (type === GraphQLID && integerStringRegExp.test(serialized)) {\n        return {\n          kind: Kind.INT,\n          value: serialized,\n        };\n      }\n\n      return {\n        kind: Kind.STRING,\n        value: serialized,\n      };\n    }\n\n    throw new TypeError(`Cannot convert value to AST: ${inspect(serialized)}.`);\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false || invariant(false, 'Unexpected input type: ' + inspect(type));\n}\n/**\n * IntValue:\n *   - NegativeSign? 0\n *   - NegativeSign? NonZeroDigit ( Digit+ )?\n */\n\nconst integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;\n","import { didYouMean } from '../jsutils/didYouMean.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { isIterableObject } from '../jsutils/isIterableObject.mjs';\nimport { isObjectLike } from '../jsutils/isObjectLike.mjs';\nimport { addPath, pathToArray } from '../jsutils/Path.mjs';\nimport { printPathArray } from '../jsutils/printPathArray.mjs';\nimport { suggestionList } from '../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport {\n  isInputObjectType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n} from '../type/definition.mjs';\n\n/**\n * Coerces a JavaScript value given a GraphQL Input Type.\n */\nexport function coerceInputValue(inputValue, type, onError = defaultOnError) {\n  return coerceInputValueImpl(inputValue, type, onError, undefined);\n}\n\nfunction defaultOnError(path, invalidValue, error) {\n  let errorPrefix = 'Invalid value ' + inspect(invalidValue);\n\n  if (path.length > 0) {\n    errorPrefix += ` at \"value${printPathArray(path)}\"`;\n  }\n\n  error.message = errorPrefix + ': ' + error.message;\n  throw error;\n}\n\nfunction coerceInputValueImpl(inputValue, type, onError, path) {\n  if (isNonNullType(type)) {\n    if (inputValue != null) {\n      return coerceInputValueImpl(inputValue, type.ofType, onError, path);\n    }\n\n    onError(\n      pathToArray(path),\n      inputValue,\n      new GraphQLError(\n        `Expected non-nullable type \"${inspect(type)}\" not to be null.`,\n      ),\n    );\n    return;\n  }\n\n  if (inputValue == null) {\n    // Explicitly return the value null.\n    return null;\n  }\n\n  if (isListType(type)) {\n    const itemType = type.ofType;\n\n    if (isIterableObject(inputValue)) {\n      return Array.from(inputValue, (itemValue, index) => {\n        const itemPath = addPath(path, index, undefined);\n        return coerceInputValueImpl(itemValue, itemType, onError, itemPath);\n      });\n    } // Lists accept a non-list value as a list of one.\n\n    return [coerceInputValueImpl(inputValue, itemType, onError, path)];\n  }\n\n  if (isInputObjectType(type)) {\n    if (!isObjectLike(inputValue)) {\n      onError(\n        pathToArray(path),\n        inputValue,\n        new GraphQLError(`Expected type \"${type.name}\" to be an object.`),\n      );\n      return;\n    }\n\n    const coercedValue = {};\n    const fieldDefs = type.getFields();\n\n    for (const field of Object.values(fieldDefs)) {\n      const fieldValue = inputValue[field.name];\n\n      if (fieldValue === undefined) {\n        if (field.defaultValue !== undefined) {\n          coercedValue[field.name] = field.defaultValue;\n        } else if (isNonNullType(field.type)) {\n          const typeStr = inspect(field.type);\n          onError(\n            pathToArray(path),\n            inputValue,\n            new GraphQLError(\n              `Field \"${field.name}\" of required type \"${typeStr}\" was not provided.`,\n            ),\n          );\n        }\n\n        continue;\n      }\n\n      coercedValue[field.name] = coerceInputValueImpl(\n        fieldValue,\n        field.type,\n        onError,\n        addPath(path, field.name, type.name),\n      );\n    } // Ensure every provided field is defined.\n\n    for (const fieldName of Object.keys(inputValue)) {\n      if (!fieldDefs[fieldName]) {\n        const suggestions = suggestionList(\n          fieldName,\n          Object.keys(type.getFields()),\n        );\n        onError(\n          pathToArray(path),\n          inputValue,\n          new GraphQLError(\n            `Field \"${fieldName}\" is not defined by type \"${type.name}\".` +\n              didYouMean(suggestions),\n          ),\n        );\n      }\n    }\n\n    return coercedValue;\n  }\n\n  if (isLeafType(type)) {\n    let parseResult; // Scalars and Enums determine if a input value is valid via parseValue(),\n    // which can throw to indicate failure. If it throws, maintain a reference\n    // to the original error.\n\n    try {\n      parseResult = type.parseValue(inputValue);\n    } catch (error) {\n      if (error instanceof GraphQLError) {\n        onError(pathToArray(path), inputValue, error);\n      } else {\n        onError(\n          pathToArray(path),\n          inputValue,\n          new GraphQLError(`Expected type \"${type.name}\". ` + error.message, {\n            originalError: error,\n          }),\n        );\n      }\n\n      return;\n    }\n\n    if (parseResult === undefined) {\n      onError(\n        pathToArray(path),\n        inputValue,\n        new GraphQLError(`Expected type \"${type.name}\".`),\n      );\n    }\n\n    return parseResult;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible types have been considered.\n\n  false || invariant(false, 'Unexpected input type: ' + inspect(type));\n}\n","import { naturalCompare } from '../jsutils/naturalCompare.mjs';\nimport { Kind } from '../language/kinds.mjs';\n/**\n * Sort ValueNode.\n *\n * This function returns a sorted copy of the given ValueNode.\n *\n * @internal\n */\n\nexport function sortValueNode(valueNode) {\n  switch (valueNode.kind) {\n    case Kind.OBJECT:\n      return { ...valueNode, fields: sortFields(valueNode.fields) };\n\n    case Kind.LIST:\n      return { ...valueNode, values: valueNode.values.map(sortValueNode) };\n\n    case Kind.INT:\n    case Kind.FLOAT:\n    case Kind.STRING:\n    case Kind.BOOLEAN:\n    case Kind.NULL:\n    case Kind.ENUM:\n    case Kind.VARIABLE:\n      return valueNode;\n  }\n}\n\nfunction sortFields(fields) {\n  return fields\n    .map((fieldNode) => ({\n      ...fieldNode,\n      value: sortValueNode(fieldNode.value),\n    }))\n    .sort((fieldA, fieldB) =>\n      naturalCompare(fieldA.name.value, fieldB.name.value),\n    );\n}\n","import {\n  isAbstractType,\n  isInterfaceType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n} from '../type/definition.mjs';\n\n/**\n * Provided two types, return true if the types are equal (invariant).\n */\nexport function isEqualType(typeA, typeB) {\n  // Equivalent types are equal.\n  if (typeA === typeB) {\n    return true;\n  } // If either type is non-null, the other must also be non-null.\n\n  if (isNonNullType(typeA) && isNonNullType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // If either type is a list, the other must also be a list.\n\n  if (isListType(typeA) && isListType(typeB)) {\n    return isEqualType(typeA.ofType, typeB.ofType);\n  } // Otherwise the types are not equal.\n\n  return false;\n}\n/**\n * Provided a type and a super type, return true if the first type is either\n * equal or a subset of the second super type (covariant).\n */\n\nexport function isTypeSubTypeOf(schema, maybeSubType, superType) {\n  // Equivalent type is a valid subtype\n  if (maybeSubType === superType) {\n    return true;\n  } // If superType is non-null, maybeSubType must also be non-null.\n\n  if (isNonNullType(superType)) {\n    if (isNonNullType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if (isNonNullType(maybeSubType)) {\n    // If superType is nullable, maybeSubType may be non-null or nullable.\n    return isTypeSubTypeOf(schema, maybeSubType.ofType, superType);\n  } // If superType type is a list, maybeSubType type must also be a list.\n\n  if (isListType(superType)) {\n    if (isListType(maybeSubType)) {\n      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);\n    }\n\n    return false;\n  }\n\n  if (isListType(maybeSubType)) {\n    // If superType is not a list, maybeSubType must also be not a list.\n    return false;\n  } // If superType type is an abstract type, check if it is super type of maybeSubType.\n  // Otherwise, the child type is not a valid subtype of the parent type.\n\n  return (\n    isAbstractType(superType) &&\n    (isInterfaceType(maybeSubType) || isObjectType(maybeSubType)) &&\n    schema.isSubType(superType, maybeSubType)\n  );\n}\n/**\n * Provided two composite types, determine if they \"overlap\". Two composite\n * types overlap when the Sets of possible concrete types for each intersect.\n *\n * This is often used to determine if a fragment of a given type could possibly\n * be visited in a context of another type.\n *\n * This function is commutative.\n */\n\nexport function doTypesOverlap(schema, typeA, typeB) {\n  // Equivalent types overlap\n  if (typeA === typeB) {\n    return true;\n  }\n\n  if (isAbstractType(typeA)) {\n    if (isAbstractType(typeB)) {\n      // If both types are abstract, then determine if there is any intersection\n      // between possible concrete types of each.\n      return schema\n        .getPossibleTypes(typeA)\n        .some((type) => schema.isSubType(typeB, type));\n    } // Determine if the latter type is a possible concrete type of the former.\n\n    return schema.isSubType(typeA, typeB);\n  }\n\n  if (isAbstractType(typeB)) {\n    // Determine if the former type is a possible concrete type of the latter.\n    return schema.isSubType(typeB, typeA);\n  } // Otherwise the types do not overlap.\n\n  return false;\n}\n","import { Kind } from '../language/kinds.mjs';\nimport { GraphQLList, GraphQLNonNull } from '../type/definition.mjs';\nexport function typeFromAST(schema, typeNode) {\n  switch (typeNode.kind) {\n    case Kind.LIST_TYPE: {\n      const innerType = typeFromAST(schema, typeNode.type);\n      return innerType && new GraphQLList(innerType);\n    }\n\n    case Kind.NON_NULL_TYPE: {\n      const innerType = typeFromAST(schema, typeNode.type);\n      return innerType && new GraphQLNonNull(innerType);\n    }\n\n    case Kind.NAMED_TYPE:\n      return schema.getType(typeNode.name.value);\n  }\n}\n","import { inspect } from '../jsutils/inspect.mjs';\nimport { invariant } from '../jsutils/invariant.mjs';\nimport { keyMap } from '../jsutils/keyMap.mjs';\nimport { Kind } from '../language/kinds.mjs';\nimport {\n  isInputObjectType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n} from '../type/definition.mjs';\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * A GraphQL type must be provided, which will be used to interpret different\n * GraphQL Value literals.\n *\n * Returns `undefined` when the value could not be validly coerced according to\n * the provided type.\n *\n * | GraphQL Value        | JSON Value    |\n * | -------------------- | ------------- |\n * | Input Object         | Object        |\n * | List                 | Array         |\n * | Boolean              | Boolean       |\n * | String               | String        |\n * | Int / Float          | Number        |\n * | Enum Value           | Unknown       |\n * | NullValue            | null          |\n *\n */\n\nexport function valueFromAST(valueNode, type, variables) {\n  if (!valueNode) {\n    // When there is no node, then there is also no value.\n    // Importantly, this is different from returning the value null.\n    return;\n  }\n\n  if (valueNode.kind === Kind.VARIABLE) {\n    const variableName = valueNode.name.value;\n\n    if (variables == null || variables[variableName] === undefined) {\n      // No valid return value.\n      return;\n    }\n\n    const variableValue = variables[variableName];\n\n    if (variableValue === null && isNonNullType(type)) {\n      return; // Invalid: intentionally return no value.\n    } // Note: This does no further checking that this variable is correct.\n    // This assumes that this query has been validated and the variable\n    // usage here is of the correct type.\n\n    return variableValue;\n  }\n\n  if (isNonNullType(type)) {\n    if (valueNode.kind === Kind.NULL) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return valueFromAST(valueNode, type.ofType, variables);\n  }\n\n  if (valueNode.kind === Kind.NULL) {\n    // This is explicitly returning the value null.\n    return null;\n  }\n\n  if (isListType(type)) {\n    const itemType = type.ofType;\n\n    if (valueNode.kind === Kind.LIST) {\n      const coercedValues = [];\n\n      for (const itemNode of valueNode.values) {\n        if (isMissingVariable(itemNode, variables)) {\n          // If an array contains a missing variable, it is either coerced to\n          // null or if the item type is non-null, it considered invalid.\n          if (isNonNullType(itemType)) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(null);\n        } else {\n          const itemValue = valueFromAST(itemNode, itemType, variables);\n\n          if (itemValue === undefined) {\n            return; // Invalid: intentionally return no value.\n          }\n\n          coercedValues.push(itemValue);\n        }\n      }\n\n      return coercedValues;\n    }\n\n    const coercedValue = valueFromAST(valueNode, itemType, variables);\n\n    if (coercedValue === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return [coercedValue];\n  }\n\n  if (isInputObjectType(type)) {\n    if (valueNode.kind !== Kind.OBJECT) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    const coercedObj = Object.create(null);\n    const fieldNodes = keyMap(valueNode.fields, (field) => field.name.value);\n\n    for (const field of Object.values(type.getFields())) {\n      const fieldNode = fieldNodes[field.name];\n\n      if (!fieldNode || isMissingVariable(fieldNode.value, variables)) {\n        if (field.defaultValue !== undefined) {\n          coercedObj[field.name] = field.defaultValue;\n        } else if (isNonNullType(field.type)) {\n          return; // Invalid: intentionally return no value.\n        }\n\n        continue;\n      }\n\n      const fieldValue = valueFromAST(fieldNode.value, field.type, variables);\n\n      if (fieldValue === undefined) {\n        return; // Invalid: intentionally return no value.\n      }\n\n      coercedObj[field.name] = fieldValue;\n    }\n\n    return coercedObj;\n  }\n\n  if (isLeafType(type)) {\n    // Scalars and Enums fulfill parsing a literal value via parseLiteral().\n    // Invalid values represent a failure to parse correctly, in which case\n    // no value is returned.\n    let result;\n\n    try {\n      result = type.parseLiteral(valueNode, variables);\n    } catch (_error) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    if (result === undefined) {\n      return; // Invalid: intentionally return no value.\n    }\n\n    return result;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable, all possible input types have been considered.\n\n  false || invariant(false, 'Unexpected input type: ' + inspect(type));\n} // Returns true if the provided valueNode is a variable which is not defined\n// in the set of variables.\n\nfunction isMissingVariable(valueNode, variables) {\n  return (\n    valueNode.kind === Kind.VARIABLE &&\n    (variables == null || variables[valueNode.name.value] === undefined)\n  );\n}\n","import { keyValMap } from '../jsutils/keyValMap.mjs';\nimport { Kind } from '../language/kinds.mjs';\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\n\nexport function valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case Kind.NULL:\n      return null;\n\n    case Kind.INT:\n      return parseInt(valueNode.value, 10);\n\n    case Kind.FLOAT:\n      return parseFloat(valueNode.value);\n\n    case Kind.STRING:\n    case Kind.ENUM:\n    case Kind.BOOLEAN:\n      return valueNode.value;\n\n    case Kind.LIST:\n      return valueNode.values.map((node) =>\n        valueFromASTUntyped(node, variables),\n      );\n\n    case Kind.OBJECT:\n      return keyValMap(\n        valueNode.fields,\n        (field) => field.name.value,\n        (field) => valueFromASTUntyped(field.value, variables),\n      );\n\n    case Kind.VARIABLE:\n      return variables === null || variables === void 0\n        ? void 0\n        : variables[valueNode.name.value];\n  }\n}\n","import { Kind } from '../language/kinds.mjs';\nimport { visit } from '../language/visitor.mjs';\nimport { TypeInfo, visitWithTypeInfo } from '../utilities/TypeInfo.mjs';\n\n/**\n * An instance of this class is passed as the \"this\" context to all validators,\n * allowing access to commonly useful contextual information from within a\n * validation rule.\n */\nexport class ASTValidationContext {\n  constructor(ast, onError) {\n    this._ast = ast;\n    this._fragments = undefined;\n    this._fragmentSpreads = new Map();\n    this._recursivelyReferencedFragments = new Map();\n    this._onError = onError;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'ASTValidationContext';\n  }\n\n  reportError(error) {\n    this._onError(error);\n  }\n\n  getDocument() {\n    return this._ast;\n  }\n\n  getFragment(name) {\n    let fragments;\n\n    if (this._fragments) {\n      fragments = this._fragments;\n    } else {\n      fragments = Object.create(null);\n\n      for (const defNode of this.getDocument().definitions) {\n        if (defNode.kind === Kind.FRAGMENT_DEFINITION) {\n          fragments[defNode.name.value] = defNode;\n        }\n      }\n\n      this._fragments = fragments;\n    }\n\n    return fragments[name];\n  }\n\n  getFragmentSpreads(node) {\n    let spreads = this._fragmentSpreads.get(node);\n\n    if (!spreads) {\n      spreads = [];\n      const setsToVisit = [node];\n      let set;\n\n      while ((set = setsToVisit.pop())) {\n        for (const selection of set.selections) {\n          if (selection.kind === Kind.FRAGMENT_SPREAD) {\n            spreads.push(selection);\n          } else if (selection.selectionSet) {\n            setsToVisit.push(selection.selectionSet);\n          }\n        }\n      }\n\n      this._fragmentSpreads.set(node, spreads);\n    }\n\n    return spreads;\n  }\n\n  getRecursivelyReferencedFragments(operation) {\n    let fragments = this._recursivelyReferencedFragments.get(operation);\n\n    if (!fragments) {\n      fragments = [];\n      const collectedNames = Object.create(null);\n      const nodesToVisit = [operation.selectionSet];\n      let node;\n\n      while ((node = nodesToVisit.pop())) {\n        for (const spread of this.getFragmentSpreads(node)) {\n          const fragName = spread.name.value;\n\n          if (collectedNames[fragName] !== true) {\n            collectedNames[fragName] = true;\n            const fragment = this.getFragment(fragName);\n\n            if (fragment) {\n              fragments.push(fragment);\n              nodesToVisit.push(fragment.selectionSet);\n            }\n          }\n        }\n      }\n\n      this._recursivelyReferencedFragments.set(operation, fragments);\n    }\n\n    return fragments;\n  }\n}\nexport class SDLValidationContext extends ASTValidationContext {\n  constructor(ast, schema, onError) {\n    super(ast, onError);\n    this._schema = schema;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'SDLValidationContext';\n  }\n\n  getSchema() {\n    return this._schema;\n  }\n}\nexport class ValidationContext extends ASTValidationContext {\n  constructor(schema, ast, typeInfo, onError) {\n    super(ast, onError);\n    this._schema = schema;\n    this._typeInfo = typeInfo;\n    this._variableUsages = new Map();\n    this._recursiveVariableUsages = new Map();\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'ValidationContext';\n  }\n\n  getSchema() {\n    return this._schema;\n  }\n\n  getVariableUsages(node) {\n    let usages = this._variableUsages.get(node);\n\n    if (!usages) {\n      const newUsages = [];\n      const typeInfo = new TypeInfo(this._schema);\n      visit(\n        node,\n        visitWithTypeInfo(typeInfo, {\n          VariableDefinition: () => false,\n\n          Variable(variable) {\n            newUsages.push({\n              node: variable,\n              type: typeInfo.getInputType(),\n              defaultValue: typeInfo.getDefaultValue(),\n            });\n          },\n        }),\n      );\n      usages = newUsages;\n\n      this._variableUsages.set(node, usages);\n    }\n\n    return usages;\n  }\n\n  getRecursiveVariableUsages(operation) {\n    let usages = this._recursiveVariableUsages.get(operation);\n\n    if (!usages) {\n      usages = this.getVariableUsages(operation);\n\n      for (const frag of this.getRecursivelyReferencedFragments(operation)) {\n        usages = usages.concat(this.getVariableUsages(frag));\n      }\n\n      this._recursiveVariableUsages.set(operation, usages);\n    }\n\n    return usages;\n  }\n\n  getType() {\n    return this._typeInfo.getType();\n  }\n\n  getParentType() {\n    return this._typeInfo.getParentType();\n  }\n\n  getInputType() {\n    return this._typeInfo.getInputType();\n  }\n\n  getParentInputType() {\n    return this._typeInfo.getParentInputType();\n  }\n\n  getFieldDef() {\n    return this._typeInfo.getFieldDef();\n  }\n\n  getDirective() {\n    return this._typeInfo.getDirective();\n  }\n\n  getArgument() {\n    return this._typeInfo.getArgument();\n  }\n\n  getEnumValue() {\n    return this._typeInfo.getEnumValue();\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { isExecutableDefinitionNode } from '../../language/predicates.mjs';\n\n/**\n * Executable definitions\n *\n * A GraphQL document is only valid for execution if all definitions are either\n * operation or fragment definitions.\n *\n * See https://spec.graphql.org/draft/#sec-Executable-Definitions\n */\nexport function ExecutableDefinitionsRule(context) {\n  return {\n    Document(node) {\n      for (const definition of node.definitions) {\n        if (!isExecutableDefinitionNode(definition)) {\n          const defName =\n            definition.kind === Kind.SCHEMA_DEFINITION ||\n            definition.kind === Kind.SCHEMA_EXTENSION\n              ? 'schema'\n              : '\"' + definition.name.value + '\"';\n          context.reportError(\n            new GraphQLError(`The ${defName} definition is not executable.`, {\n              nodes: definition,\n            }),\n          );\n        }\n      }\n\n      return false;\n    },\n  };\n}\n","import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { naturalCompare } from '../../jsutils/naturalCompare.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport {\n  isAbstractType,\n  isInterfaceType,\n  isObjectType,\n} from '../../type/definition.mjs';\n\n/**\n * Fields on correct type\n *\n * A GraphQL document is only valid if all fields selected are defined by the\n * parent type, or are an allowed meta field such as __typename.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selections\n */\nexport function FieldsOnCorrectTypeRule(context) {\n  return {\n    Field(node) {\n      const type = context.getParentType();\n\n      if (type) {\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          // This field doesn't exist, lets look for suggestions.\n          const schema = context.getSchema();\n          const fieldName = node.name.value; // First determine if there are any suggested types to condition on.\n\n          let suggestion = didYouMean(\n            'to use an inline fragment on',\n            getSuggestedTypeNames(schema, type, fieldName),\n          ); // If there are no suggested types, then perhaps this was a typo?\n\n          if (suggestion === '') {\n            suggestion = didYouMean(getSuggestedFieldNames(type, fieldName));\n          } // Report an error, including helpful suggestions.\n\n          context.reportError(\n            new GraphQLError(\n              `Cannot query field \"${fieldName}\" on type \"${type.name}\".` +\n                suggestion,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n/**\n * Go through all of the implementations of type, as well as the interfaces that\n * they implement. If any of those types include the provided field, suggest them,\n * sorted by how often the type is referenced.\n */\n\nfunction getSuggestedTypeNames(schema, type, fieldName) {\n  if (!isAbstractType(type)) {\n    // Must be an Object type, which does not have possible fields.\n    return [];\n  }\n\n  const suggestedTypes = new Set();\n  const usageCount = Object.create(null);\n\n  for (const possibleType of schema.getPossibleTypes(type)) {\n    if (!possibleType.getFields()[fieldName]) {\n      continue;\n    } // This object type defines this field.\n\n    suggestedTypes.add(possibleType);\n    usageCount[possibleType.name] = 1;\n\n    for (const possibleInterface of possibleType.getInterfaces()) {\n      var _usageCount$possibleI;\n\n      if (!possibleInterface.getFields()[fieldName]) {\n        continue;\n      } // This interface type defines this field.\n\n      suggestedTypes.add(possibleInterface);\n      usageCount[possibleInterface.name] =\n        ((_usageCount$possibleI = usageCount[possibleInterface.name]) !==\n          null && _usageCount$possibleI !== void 0\n          ? _usageCount$possibleI\n          : 0) + 1;\n    }\n  }\n\n  return [...suggestedTypes]\n    .sort((typeA, typeB) => {\n      // Suggest both interface and object types based on how common they are.\n      const usageCountDiff = usageCount[typeB.name] - usageCount[typeA.name];\n\n      if (usageCountDiff !== 0) {\n        return usageCountDiff;\n      } // Suggest super types first followed by subtypes\n\n      if (isInterfaceType(typeA) && schema.isSubType(typeA, typeB)) {\n        return -1;\n      }\n\n      if (isInterfaceType(typeB) && schema.isSubType(typeB, typeA)) {\n        return 1;\n      }\n\n      return naturalCompare(typeA.name, typeB.name);\n    })\n    .map((x) => x.name);\n}\n/**\n * For the field name provided, determine if there are any similar field names\n * that may be the result of a typo.\n */\n\nfunction getSuggestedFieldNames(type, fieldName) {\n  if (isObjectType(type) || isInterfaceType(type)) {\n    const possibleFieldNames = Object.keys(type.getFields());\n    return suggestionList(fieldName, possibleFieldNames);\n  } // Otherwise, must be a Union type, which does not define fields.\n\n  return [];\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { print } from '../../language/printer.mjs';\nimport { isCompositeType } from '../../type/definition.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Fragments on composite type\n *\n * Fragments use a type condition to determine if they apply, since fragments\n * can only be spread into a composite type (object, interface, or union), the\n * type condition must also be a composite type.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-On-Composite-Types\n */\nexport function FragmentsOnCompositeTypesRule(context) {\n  return {\n    InlineFragment(node) {\n      const typeCondition = node.typeCondition;\n\n      if (typeCondition) {\n        const type = typeFromAST(context.getSchema(), typeCondition);\n\n        if (type && !isCompositeType(type)) {\n          const typeStr = print(typeCondition);\n          context.reportError(\n            new GraphQLError(\n              `Fragment cannot condition on non composite type \"${typeStr}\".`,\n              {\n                nodes: typeCondition,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    FragmentDefinition(node) {\n      const type = typeFromAST(context.getSchema(), node.typeCondition);\n\n      if (type && !isCompositeType(type)) {\n        const typeStr = print(node.typeCondition);\n        context.reportError(\n          new GraphQLError(\n            `Fragment \"${node.name.value}\" cannot condition on non composite type \"${typeStr}\".`,\n            {\n              nodes: node.typeCondition,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n","import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Known argument names\n *\n * A GraphQL field is only valid if all supplied arguments are defined by\n * that field.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n * See https://spec.graphql.org/draft/#sec-Directives-Are-In-Valid-Locations\n */\nexport function KnownArgumentNamesRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...KnownArgumentNamesOnDirectivesRule(context),\n\n    Argument(argNode) {\n      const argDef = context.getArgument();\n      const fieldDef = context.getFieldDef();\n      const parentType = context.getParentType();\n\n      if (!argDef && fieldDef && parentType) {\n        const argName = argNode.name.value;\n        const knownArgsNames = fieldDef.args.map((arg) => arg.name);\n        const suggestions = suggestionList(argName, knownArgsNames);\n        context.reportError(\n          new GraphQLError(\n            `Unknown argument \"${argName}\" on field \"${parentType.name}.${fieldDef.name}\".` +\n              didYouMean(suggestions),\n            {\n              nodes: argNode,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n/**\n * @internal\n */\n\nexport function KnownArgumentNamesOnDirectivesRule(context) {\n  const directiveArgs = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    directiveArgs[directive.name] = directive.args.map((arg) => arg.name);\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argsNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      directiveArgs[def.name.value] = argsNodes.map((arg) => arg.name.value);\n    }\n  }\n\n  return {\n    Directive(directiveNode) {\n      const directiveName = directiveNode.name.value;\n      const knownArgs = directiveArgs[directiveName];\n\n      if (directiveNode.arguments && knownArgs) {\n        for (const argNode of directiveNode.arguments) {\n          const argName = argNode.name.value;\n\n          if (!knownArgs.includes(argName)) {\n            const suggestions = suggestionList(argName, knownArgs);\n            context.reportError(\n              new GraphQLError(\n                `Unknown argument \"${argName}\" on directive \"@${directiveName}\".` +\n                  didYouMean(suggestions),\n                {\n                  nodes: argNode,\n                },\n              ),\n            );\n          }\n        }\n      }\n\n      return false;\n    },\n  };\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { invariant } from '../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { OperationTypeNode } from '../../language/ast.mjs';\nimport { DirectiveLocation } from '../../language/directiveLocation.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Known directives\n *\n * A GraphQL document is only valid if all `@directives` are known by the\n * schema and legally positioned.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Defined\n */\nexport function KnownDirectivesRule(context) {\n  const locationsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    locationsMap[directive.name] = directive.locations;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      locationsMap[def.name.value] = def.locations.map((name) => name.value);\n    }\n  }\n\n  return {\n    Directive(node, _key, _parent, _path, ancestors) {\n      const name = node.name.value;\n      const locations = locationsMap[name];\n\n      if (!locations) {\n        context.reportError(\n          new GraphQLError(`Unknown directive \"@${name}\".`, {\n            nodes: node,\n          }),\n        );\n        return;\n      }\n\n      const candidateLocation = getDirectiveLocationForASTPath(ancestors);\n\n      if (candidateLocation && !locations.includes(candidateLocation)) {\n        context.reportError(\n          new GraphQLError(\n            `Directive \"@${name}\" may not be used on ${candidateLocation}.`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nfunction getDirectiveLocationForASTPath(ancestors) {\n  const appliedTo = ancestors[ancestors.length - 1];\n  'kind' in appliedTo || invariant(false);\n\n  switch (appliedTo.kind) {\n    case Kind.OPERATION_DEFINITION:\n      return getDirectiveLocationForOperation(appliedTo.operation);\n\n    case Kind.FIELD:\n      return DirectiveLocation.FIELD;\n\n    case Kind.FRAGMENT_SPREAD:\n      return DirectiveLocation.FRAGMENT_SPREAD;\n\n    case Kind.INLINE_FRAGMENT:\n      return DirectiveLocation.INLINE_FRAGMENT;\n\n    case Kind.FRAGMENT_DEFINITION:\n      return DirectiveLocation.FRAGMENT_DEFINITION;\n\n    case Kind.VARIABLE_DEFINITION:\n      return DirectiveLocation.VARIABLE_DEFINITION;\n\n    case Kind.SCHEMA_DEFINITION:\n    case Kind.SCHEMA_EXTENSION:\n      return DirectiveLocation.SCHEMA;\n\n    case Kind.SCALAR_TYPE_DEFINITION:\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return DirectiveLocation.SCALAR;\n\n    case Kind.OBJECT_TYPE_DEFINITION:\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.OBJECT;\n\n    case Kind.FIELD_DEFINITION:\n      return DirectiveLocation.FIELD_DEFINITION;\n\n    case Kind.INTERFACE_TYPE_DEFINITION:\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return DirectiveLocation.INTERFACE;\n\n    case Kind.UNION_TYPE_DEFINITION:\n    case Kind.UNION_TYPE_EXTENSION:\n      return DirectiveLocation.UNION;\n\n    case Kind.ENUM_TYPE_DEFINITION:\n    case Kind.ENUM_TYPE_EXTENSION:\n      return DirectiveLocation.ENUM;\n\n    case Kind.ENUM_VALUE_DEFINITION:\n      return DirectiveLocation.ENUM_VALUE;\n\n    case Kind.INPUT_OBJECT_TYPE_DEFINITION:\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return DirectiveLocation.INPUT_OBJECT;\n\n    case Kind.INPUT_VALUE_DEFINITION: {\n      const parentNode = ancestors[ancestors.length - 3];\n      'kind' in parentNode || invariant(false);\n      return parentNode.kind === Kind.INPUT_OBJECT_TYPE_DEFINITION\n        ? DirectiveLocation.INPUT_FIELD_DEFINITION\n        : DirectiveLocation.ARGUMENT_DEFINITION;\n    }\n    // Not reachable, all possible types have been considered.\n\n    /* c8 ignore next */\n\n    default:\n      false || invariant(false, 'Unexpected kind: ' + inspect(appliedTo.kind));\n  }\n}\n\nfunction getDirectiveLocationForOperation(operation) {\n  switch (operation) {\n    case OperationTypeNode.QUERY:\n      return DirectiveLocation.QUERY;\n\n    case OperationTypeNode.MUTATION:\n      return DirectiveLocation.MUTATION;\n\n    case OperationTypeNode.SUBSCRIPTION:\n      return DirectiveLocation.SUBSCRIPTION;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spread-target-defined\n */\nexport function KnownFragmentNamesRule(context) {\n  return {\n    FragmentSpread(node) {\n      const fragmentName = node.name.value;\n      const fragment = context.getFragment(fragmentName);\n\n      if (!fragment) {\n        context.reportError(\n          new GraphQLError(`Unknown fragment \"${fragmentName}\".`, {\n            nodes: node.name,\n          }),\n        );\n      }\n    },\n  };\n}\n","import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport {\n  isTypeDefinitionNode,\n  isTypeSystemDefinitionNode,\n  isTypeSystemExtensionNode,\n} from '../../language/predicates.mjs';\nimport { introspectionTypes } from '../../type/introspection.mjs';\nimport { specifiedScalarTypes } from '../../type/scalars.mjs';\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Spread-Type-Existence\n */\nexport function KnownTypeNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypesMap = schema ? schema.getTypeMap() : Object.create(null);\n  const definedTypes = Object.create(null);\n\n  for (const def of context.getDocument().definitions) {\n    if (isTypeDefinitionNode(def)) {\n      definedTypes[def.name.value] = true;\n    }\n  }\n\n  const typeNames = [\n    ...Object.keys(existingTypesMap),\n    ...Object.keys(definedTypes),\n  ];\n  return {\n    NamedType(node, _1, parent, _2, ancestors) {\n      const typeName = node.name.value;\n\n      if (!existingTypesMap[typeName] && !definedTypes[typeName]) {\n        var _ancestors$;\n\n        const definitionNode =\n          (_ancestors$ = ancestors[2]) !== null && _ancestors$ !== void 0\n            ? _ancestors$\n            : parent;\n        const isSDL = definitionNode != null && isSDLNode(definitionNode);\n\n        if (isSDL && standardTypeNames.includes(typeName)) {\n          return;\n        }\n\n        const suggestedTypes = suggestionList(\n          typeName,\n          isSDL ? standardTypeNames.concat(typeNames) : typeNames,\n        );\n        context.reportError(\n          new GraphQLError(\n            `Unknown type \"${typeName}\".` + didYouMean(suggestedTypes),\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\nconst standardTypeNames = [...specifiedScalarTypes, ...introspectionTypes].map(\n  (type) => type.name,\n);\n\nfunction isSDLNode(value) {\n  return (\n    'kind' in value &&\n    (isTypeSystemDefinitionNode(value) || isTypeSystemExtensionNode(value))\n  );\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n *\n * See https://spec.graphql.org/draft/#sec-Lone-Anonymous-Operation\n */\nexport function LoneAnonymousOperationRule(context) {\n  let operationCount = 0;\n  return {\n    Document(node) {\n      operationCount = node.definitions.filter(\n        (definition) => definition.kind === Kind.OPERATION_DEFINITION,\n      ).length;\n    },\n\n    OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(\n          new GraphQLError(\n            'This anonymous operation must be the only defined operation.',\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Lone Schema definition\n *\n * A GraphQL document is only valid if it contains only one schema definition.\n */\nexport function LoneSchemaDefinitionRule(context) {\n  var _ref, _ref2, _oldSchema$astNode;\n\n  const oldSchema = context.getSchema();\n  const alreadyDefined =\n    (_ref =\n      (_ref2 =\n        (_oldSchema$astNode =\n          oldSchema === null || oldSchema === void 0\n            ? void 0\n            : oldSchema.astNode) !== null && _oldSchema$astNode !== void 0\n          ? _oldSchema$astNode\n          : oldSchema === null || oldSchema === void 0\n          ? void 0\n          : oldSchema.getQueryType()) !== null && _ref2 !== void 0\n        ? _ref2\n        : oldSchema === null || oldSchema === void 0\n        ? void 0\n        : oldSchema.getMutationType()) !== null && _ref !== void 0\n      ? _ref\n      : oldSchema === null || oldSchema === void 0\n      ? void 0\n      : oldSchema.getSubscriptionType();\n  let schemaDefinitionsCount = 0;\n  return {\n    SchemaDefinition(node) {\n      if (alreadyDefined) {\n        context.reportError(\n          new GraphQLError(\n            'Cannot define a new schema within a schema extension.',\n            {\n              nodes: node,\n            },\n          ),\n        );\n        return;\n      }\n\n      if (schemaDefinitionsCount > 0) {\n        context.reportError(\n          new GraphQLError('Must provide only one schema definition.', {\n            nodes: node,\n          }),\n        );\n      }\n\n      ++schemaDefinitionsCount;\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No fragment cycles\n *\n * The graph of fragment spreads must not form any cycles including spreading itself.\n * Otherwise an operation could infinitely spread or infinitely execute on cycles in the underlying data.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-spreads-must-not-form-cycles\n */\nexport function NoFragmentCyclesRule(context) {\n  // Tracks already visited fragments to maintain O(N) and to ensure that cycles\n  // are not redundantly reported.\n  const visitedFrags = Object.create(null); // Array of AST nodes used to produce meaningful errors\n\n  const spreadPath = []; // Position in the spread path\n\n  const spreadPathIndexByName = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      detectCycleRecursive(node);\n      return false;\n    },\n  }; // This does a straight-forward DFS to find cycles.\n  // It does not terminate when a cycle was found but continues to explore\n  // the graph to find all possible cycles.\n\n  function detectCycleRecursive(fragment) {\n    if (visitedFrags[fragment.name.value]) {\n      return;\n    }\n\n    const fragmentName = fragment.name.value;\n    visitedFrags[fragmentName] = true;\n    const spreadNodes = context.getFragmentSpreads(fragment.selectionSet);\n\n    if (spreadNodes.length === 0) {\n      return;\n    }\n\n    spreadPathIndexByName[fragmentName] = spreadPath.length;\n\n    for (const spreadNode of spreadNodes) {\n      const spreadName = spreadNode.name.value;\n      const cycleIndex = spreadPathIndexByName[spreadName];\n      spreadPath.push(spreadNode);\n\n      if (cycleIndex === undefined) {\n        const spreadFragment = context.getFragment(spreadName);\n\n        if (spreadFragment) {\n          detectCycleRecursive(spreadFragment);\n        }\n      } else {\n        const cyclePath = spreadPath.slice(cycleIndex);\n        const viaPath = cyclePath\n          .slice(0, -1)\n          .map((s) => '\"' + s.name.value + '\"')\n          .join(', ');\n        context.reportError(\n          new GraphQLError(\n            `Cannot spread fragment \"${spreadName}\" within itself` +\n              (viaPath !== '' ? ` via ${viaPath}.` : '.'),\n            {\n              nodes: cyclePath,\n            },\n          ),\n        );\n      }\n\n      spreadPath.pop();\n    }\n\n    spreadPathIndexByName[fragmentName] = undefined;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No undefined variables\n *\n * A GraphQL operation is only valid if all variables encountered, both directly\n * and via fragment spreads, are defined by that operation.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Uses-Defined\n */\nexport function NoUndefinedVariablesRule(context) {\n  let variableNameDefined = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        variableNameDefined = Object.create(null);\n      },\n\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node } of usages) {\n          const varName = node.name.value;\n\n          if (variableNameDefined[varName] !== true) {\n            context.reportError(\n              new GraphQLError(\n                operation.name\n                  ? `Variable \"$${varName}\" is not defined by operation \"${operation.name.value}\".`\n                  : `Variable \"$${varName}\" is not defined.`,\n                {\n                  nodes: [node, operation],\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n\n    VariableDefinition(node) {\n      variableNameDefined[node.variable.name.value] = true;\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No unused fragments\n *\n * A GraphQL document is only valid if all fragment definitions are spread\n * within operations, or spread within other fragments spread within operations.\n *\n * See https://spec.graphql.org/draft/#sec-Fragments-Must-Be-Used\n */\nexport function NoUnusedFragmentsRule(context) {\n  const operationDefs = [];\n  const fragmentDefs = [];\n  return {\n    OperationDefinition(node) {\n      operationDefs.push(node);\n      return false;\n    },\n\n    FragmentDefinition(node) {\n      fragmentDefs.push(node);\n      return false;\n    },\n\n    Document: {\n      leave() {\n        const fragmentNameUsed = Object.create(null);\n\n        for (const operation of operationDefs) {\n          for (const fragment of context.getRecursivelyReferencedFragments(\n            operation,\n          )) {\n            fragmentNameUsed[fragment.name.value] = true;\n          }\n        }\n\n        for (const fragmentDef of fragmentDefs) {\n          const fragName = fragmentDef.name.value;\n\n          if (fragmentNameUsed[fragName] !== true) {\n            context.reportError(\n              new GraphQLError(`Fragment \"${fragName}\" is never used.`, {\n                nodes: fragmentDef,\n              }),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * No unused variables\n *\n * A GraphQL operation is only valid if all variables defined by an operation\n * are used, either directly or within a spread fragment.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variables-Used\n */\nexport function NoUnusedVariablesRule(context) {\n  let variableDefs = [];\n  return {\n    OperationDefinition: {\n      enter() {\n        variableDefs = [];\n      },\n\n      leave(operation) {\n        const variableNameUsed = Object.create(null);\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node } of usages) {\n          variableNameUsed[node.name.value] = true;\n        }\n\n        for (const variableDef of variableDefs) {\n          const variableName = variableDef.variable.name.value;\n\n          if (variableNameUsed[variableName] !== true) {\n            context.reportError(\n              new GraphQLError(\n                operation.name\n                  ? `Variable \"$${variableName}\" is never used in operation \"${operation.name.value}\".`\n                  : `Variable \"$${variableName}\" is never used.`,\n                {\n                  nodes: variableDef,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n\n    VariableDefinition(def) {\n      variableDefs.push(def);\n    },\n  };\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { print } from '../../language/printer.mjs';\nimport {\n  getNamedType,\n  isInterfaceType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n  isObjectType,\n} from '../../type/definition.mjs';\nimport { sortValueNode } from '../../utilities/sortValueNode.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\nfunction reasonMessage(reason) {\n  if (Array.isArray(reason)) {\n    return reason\n      .map(\n        ([responseName, subReason]) =>\n          `subfields \"${responseName}\" conflict because ` +\n          reasonMessage(subReason),\n      )\n      .join(' and ');\n  }\n\n  return reason;\n}\n/**\n * Overlapping fields can be merged\n *\n * A selection set is only valid if all fields (including spreading any\n * fragments) either correspond to distinct response names or can be merged\n * without ambiguity.\n *\n * See https://spec.graphql.org/draft/#sec-Field-Selection-Merging\n */\n\nexport function OverlappingFieldsCanBeMergedRule(context) {\n  // A memoization for when two fragments are compared \"between\" each other for\n  // conflicts. Two fragments may be compared many times, so memoizing this can\n  // dramatically improve the performance of this validator.\n  const comparedFragmentPairs = new PairSet(); // A cache for the \"field map\" and list of fragment names found in any given\n  // selection set. Selection sets may be asked for this information multiple\n  // times, so this improves the performance of this validator.\n\n  const cachedFieldsAndFragmentNames = new Map();\n  return {\n    SelectionSet(selectionSet) {\n      const conflicts = findConflictsWithinSelectionSet(\n        context,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        context.getParentType(),\n        selectionSet,\n      );\n\n      for (const [[responseName, reason], fields1, fields2] of conflicts) {\n        const reasonMsg = reasonMessage(reason);\n        context.reportError(\n          new GraphQLError(\n            `Fields \"${responseName}\" conflict because ${reasonMsg}. Use different aliases on the fields to fetch both if this was intentional.`,\n            {\n              nodes: fields1.concat(fields2),\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\n/**\n * Algorithm:\n *\n * Conflicts occur when two fields exist in a query which will produce the same\n * response name, but represent differing values, thus creating a conflict.\n * The algorithm below finds all conflicts via making a series of comparisons\n * between fields. In order to compare as few fields as possible, this makes\n * a series of comparisons \"within\" sets of fields and \"between\" sets of fields.\n *\n * Given any selection set, a collection produces both a set of fields by\n * also including all inline fragments, as well as a list of fragments\n * referenced by fragment spreads.\n *\n * A) Each selection set represented in the document first compares \"within\" its\n * collected set of fields, finding any conflicts between every pair of\n * overlapping fields.\n * Note: This is the *only time* that a the fields \"within\" a set are compared\n * to each other. After this only fields \"between\" sets are compared.\n *\n * B) Also, if any fragment is referenced in a selection set, then a\n * comparison is made \"between\" the original set of fields and the\n * referenced fragment.\n *\n * C) Also, if multiple fragments are referenced, then comparisons\n * are made \"between\" each referenced fragment.\n *\n * D) When comparing \"between\" a set of fields and a referenced fragment, first\n * a comparison is made between each field in the original set of fields and\n * each field in the the referenced set of fields.\n *\n * E) Also, if any fragment is referenced in the referenced selection set,\n * then a comparison is made \"between\" the original set of fields and the\n * referenced fragment (recursively referring to step D).\n *\n * F) When comparing \"between\" two fragments, first a comparison is made between\n * each field in the first referenced set of fields and each field in the the\n * second referenced set of fields.\n *\n * G) Also, any fragments referenced by the first must be compared to the\n * second, and any fragments referenced by the second must be compared to the\n * first (recursively referring to step F).\n *\n * H) When comparing two fields, if both have selection sets, then a comparison\n * is made \"between\" both selection sets, first comparing the set of fields in\n * the first selection set with the set of fields in the second.\n *\n * I) Also, if any fragment is referenced in either selection set, then a\n * comparison is made \"between\" the other set of fields and the\n * referenced fragment.\n *\n * J) Also, if two fragments are referenced in both selection sets, then a\n * comparison is made \"between\" the two fragments.\n *\n */\n// Find all conflicts found \"within\" a selection set, including those found\n// via spreading in fragments. Called when visiting each SelectionSet in the\n// GraphQL Document.\nfunction findConflictsWithinSelectionSet(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentType,\n  selectionSet,\n) {\n  const conflicts = [];\n  const [fieldMap, fragmentNames] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType,\n    selectionSet,\n  ); // (A) Find find all conflicts \"within\" the fields of this selection set.\n  // Note: this is the *only place* `collectConflictsWithin` is called.\n\n  collectConflictsWithin(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    fieldMap,\n  );\n\n  if (fragmentNames.length !== 0) {\n    // (B) Then collect conflicts between these fields and those represented by\n    // each spread fragment name found.\n    for (let i = 0; i < fragmentNames.length; i++) {\n      collectConflictsBetweenFieldsAndFragment(\n        context,\n        conflicts,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        false,\n        fieldMap,\n        fragmentNames[i],\n      ); // (C) Then compare this fragment with all other fragments found in this\n      // selection set to collect conflicts between fragments spread together.\n      // This compares each item in the list of fragment names to every other\n      // item in that same list (except for itself).\n\n      for (let j = i + 1; j < fragmentNames.length; j++) {\n        collectConflictsBetweenFragments(\n          context,\n          conflicts,\n          cachedFieldsAndFragmentNames,\n          comparedFragmentPairs,\n          false,\n          fragmentNames[i],\n          fragmentNames[j],\n        );\n      }\n    }\n  }\n\n  return conflicts;\n} // Collect all conflicts found between a set of fields and a fragment reference\n// including via spreading in any nested fragments.\n\nfunction collectConflictsBetweenFieldsAndFragment(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  fieldMap,\n  fragmentName,\n) {\n  const fragment = context.getFragment(fragmentName);\n\n  if (!fragment) {\n    return;\n  }\n\n  const [fieldMap2, referencedFragmentNames] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment,\n    ); // Do not compare a fragment's fieldMap to itself.\n\n  if (fieldMap === fieldMap2) {\n    return;\n  } // (D) First collect any conflicts between the provided collection of fields\n  // and the collection of fields represented by the given fragment.\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap,\n    fieldMap2,\n  ); // (E) Then collect any conflicts between the provided collection of fields\n  // and any fragment names found in the given fragment.\n\n  for (const referencedFragmentName of referencedFragmentNames) {\n    // Memoize so two fragments are not compared for conflicts more than once.\n    if (\n      comparedFragmentPairs.has(\n        referencedFragmentName,\n        fragmentName,\n        areMutuallyExclusive,\n      )\n    ) {\n      continue;\n    }\n\n    comparedFragmentPairs.add(\n      referencedFragmentName,\n      fragmentName,\n      areMutuallyExclusive,\n    );\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap,\n      referencedFragmentName,\n    );\n  }\n} // Collect all conflicts found between two fragments, including via spreading in\n// any nested fragments.\n\nfunction collectConflictsBetweenFragments(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  fragmentName1,\n  fragmentName2,\n) {\n  // No need to compare a fragment to itself.\n  if (fragmentName1 === fragmentName2) {\n    return;\n  } // Memoize so two fragments are not compared for conflicts more than once.\n\n  if (\n    comparedFragmentPairs.has(\n      fragmentName1,\n      fragmentName2,\n      areMutuallyExclusive,\n    )\n  ) {\n    return;\n  }\n\n  comparedFragmentPairs.add(fragmentName1, fragmentName2, areMutuallyExclusive);\n  const fragment1 = context.getFragment(fragmentName1);\n  const fragment2 = context.getFragment(fragmentName2);\n\n  if (!fragment1 || !fragment2) {\n    return;\n  }\n\n  const [fieldMap1, referencedFragmentNames1] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment1,\n    );\n  const [fieldMap2, referencedFragmentNames2] =\n    getReferencedFieldsAndFragmentNames(\n      context,\n      cachedFieldsAndFragmentNames,\n      fragment2,\n    ); // (F) First, collect all conflicts between these two collections of fields\n  // (not including any nested fragments).\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap1,\n    fieldMap2,\n  ); // (G) Then collect conflicts between the first fragment and any nested\n  // fragments spread in the second fragment.\n\n  for (const referencedFragmentName2 of referencedFragmentNames2) {\n    collectConflictsBetweenFragments(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fragmentName1,\n      referencedFragmentName2,\n    );\n  } // (G) Then collect conflicts between the second fragment and any nested\n  // fragments spread in the first fragment.\n\n  for (const referencedFragmentName1 of referencedFragmentNames1) {\n    collectConflictsBetweenFragments(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      referencedFragmentName1,\n      fragmentName2,\n    );\n  }\n} // Find all conflicts found between two selection sets, including those found\n// via spreading in fragments. Called when determining if conflicts exist\n// between the sub-fields of two overlapping fields.\n\nfunction findConflictsBetweenSubSelectionSets(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  areMutuallyExclusive,\n  parentType1,\n  selectionSet1,\n  parentType2,\n  selectionSet2,\n) {\n  const conflicts = [];\n  const [fieldMap1, fragmentNames1] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType1,\n    selectionSet1,\n  );\n  const [fieldMap2, fragmentNames2] = getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    parentType2,\n    selectionSet2,\n  ); // (H) First, collect all conflicts between these two collections of field.\n\n  collectConflictsBetween(\n    context,\n    conflicts,\n    cachedFieldsAndFragmentNames,\n    comparedFragmentPairs,\n    areMutuallyExclusive,\n    fieldMap1,\n    fieldMap2,\n  ); // (I) Then collect conflicts between the first collection of fields and\n  // those referenced by each fragment name associated with the second.\n\n  for (const fragmentName2 of fragmentNames2) {\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap1,\n      fragmentName2,\n    );\n  } // (I) Then collect conflicts between the second collection of fields and\n  // those referenced by each fragment name associated with the first.\n\n  for (const fragmentName1 of fragmentNames1) {\n    collectConflictsBetweenFieldsAndFragment(\n      context,\n      conflicts,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      fieldMap2,\n      fragmentName1,\n    );\n  } // (J) Also collect conflicts between any fragment names by the first and\n  // fragment names by the second. This compares each item in the first set of\n  // names to each item in the second set of names.\n\n  for (const fragmentName1 of fragmentNames1) {\n    for (const fragmentName2 of fragmentNames2) {\n      collectConflictsBetweenFragments(\n        context,\n        conflicts,\n        cachedFieldsAndFragmentNames,\n        comparedFragmentPairs,\n        areMutuallyExclusive,\n        fragmentName1,\n        fragmentName2,\n      );\n    }\n  }\n\n  return conflicts;\n} // Collect all Conflicts \"within\" one collection of fields.\n\nfunction collectConflictsWithin(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  fieldMap,\n) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For every response name, if there are multiple fields, they\n  // must be compared to find a potential conflict.\n  for (const [responseName, fields] of Object.entries(fieldMap)) {\n    // This compares every field in the list to every other field in this list\n    // (except to itself). If the list only has one item, nothing needs to\n    // be compared.\n    if (fields.length > 1) {\n      for (let i = 0; i < fields.length; i++) {\n        for (let j = i + 1; j < fields.length; j++) {\n          const conflict = findConflict(\n            context,\n            cachedFieldsAndFragmentNames,\n            comparedFragmentPairs,\n            false, // within one collection is never mutually exclusive\n            responseName,\n            fields[i],\n            fields[j],\n          );\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Collect all Conflicts between two collections of fields. This is similar to,\n// but different from the `collectConflictsWithin` function above. This check\n// assumes that `collectConflictsWithin` has already been called on each\n// provided collection of fields. This is true because this validator traverses\n// each individual selection set.\n\nfunction collectConflictsBetween(\n  context,\n  conflicts,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentFieldsAreMutuallyExclusive,\n  fieldMap1,\n  fieldMap2,\n) {\n  // A field map is a keyed collection, where each key represents a response\n  // name and the value at that key is a list of all fields which provide that\n  // response name. For any response name which appears in both provided field\n  // maps, each field from the first field map must be compared to every field\n  // in the second field map to find potential conflicts.\n  for (const [responseName, fields1] of Object.entries(fieldMap1)) {\n    const fields2 = fieldMap2[responseName];\n\n    if (fields2) {\n      for (const field1 of fields1) {\n        for (const field2 of fields2) {\n          const conflict = findConflict(\n            context,\n            cachedFieldsAndFragmentNames,\n            comparedFragmentPairs,\n            parentFieldsAreMutuallyExclusive,\n            responseName,\n            field1,\n            field2,\n          );\n\n          if (conflict) {\n            conflicts.push(conflict);\n          }\n        }\n      }\n    }\n  }\n} // Determines if there is a conflict between two particular fields, including\n// comparing their sub-fields.\n\nfunction findConflict(\n  context,\n  cachedFieldsAndFragmentNames,\n  comparedFragmentPairs,\n  parentFieldsAreMutuallyExclusive,\n  responseName,\n  field1,\n  field2,\n) {\n  const [parentType1, node1, def1] = field1;\n  const [parentType2, node2, def2] = field2; // If it is known that two fields could not possibly apply at the same\n  // time, due to the parent types, then it is safe to permit them to diverge\n  // in aliased field or arguments used as they will not present any ambiguity\n  // by differing.\n  // It is known that two parent types could never overlap if they are\n  // different Object types. Interface or Union types might overlap - if not\n  // in the current state of the schema, then perhaps in some future version,\n  // thus may not safely diverge.\n\n  const areMutuallyExclusive =\n    parentFieldsAreMutuallyExclusive ||\n    (parentType1 !== parentType2 &&\n      isObjectType(parentType1) &&\n      isObjectType(parentType2));\n\n  if (!areMutuallyExclusive) {\n    // Two aliases must refer to the same field.\n    const name1 = node1.name.value;\n    const name2 = node2.name.value;\n\n    if (name1 !== name2) {\n      return [\n        [responseName, `\"${name1}\" and \"${name2}\" are different fields`],\n        [node1],\n        [node2],\n      ];\n    } // Two field calls must have the same arguments.\n\n    if (stringifyArguments(node1) !== stringifyArguments(node2)) {\n      return [\n        [responseName, 'they have differing arguments'],\n        [node1],\n        [node2],\n      ];\n    }\n  } // The return type for each field.\n\n  const type1 = def1 === null || def1 === void 0 ? void 0 : def1.type;\n  const type2 = def2 === null || def2 === void 0 ? void 0 : def2.type;\n\n  if (type1 && type2 && doTypesConflict(type1, type2)) {\n    return [\n      [\n        responseName,\n        `they return conflicting types \"${inspect(type1)}\" and \"${inspect(\n          type2,\n        )}\"`,\n      ],\n      [node1],\n      [node2],\n    ];\n  } // Collect and compare sub-fields. Use the same \"visited fragment names\" list\n  // for both collections so fields in a fragment reference are never\n  // compared to themselves.\n\n  const selectionSet1 = node1.selectionSet;\n  const selectionSet2 = node2.selectionSet;\n\n  if (selectionSet1 && selectionSet2) {\n    const conflicts = findConflictsBetweenSubSelectionSets(\n      context,\n      cachedFieldsAndFragmentNames,\n      comparedFragmentPairs,\n      areMutuallyExclusive,\n      getNamedType(type1),\n      selectionSet1,\n      getNamedType(type2),\n      selectionSet2,\n    );\n    return subfieldConflicts(conflicts, responseName, node1, node2);\n  }\n}\n\nfunction stringifyArguments(fieldNode) {\n  var _fieldNode$arguments;\n\n  // FIXME https://github.com/graphql/graphql-js/issues/2203\n  const args =\n    /* c8 ignore next */\n    (_fieldNode$arguments = fieldNode.arguments) !== null &&\n    _fieldNode$arguments !== void 0\n      ? _fieldNode$arguments\n      : [];\n  const inputObjectWithArgs = {\n    kind: Kind.OBJECT,\n    fields: args.map((argNode) => ({\n      kind: Kind.OBJECT_FIELD,\n      name: argNode.name,\n      value: argNode.value,\n    })),\n  };\n  return print(sortValueNode(inputObjectWithArgs));\n} // Two types conflict if both types could not apply to a value simultaneously.\n// Composite types are ignored as their individual field types will be compared\n// later recursively. However List and Non-Null types must match.\n\nfunction doTypesConflict(type1, type2) {\n  if (isListType(type1)) {\n    return isListType(type2)\n      ? doTypesConflict(type1.ofType, type2.ofType)\n      : true;\n  }\n\n  if (isListType(type2)) {\n    return true;\n  }\n\n  if (isNonNullType(type1)) {\n    return isNonNullType(type2)\n      ? doTypesConflict(type1.ofType, type2.ofType)\n      : true;\n  }\n\n  if (isNonNullType(type2)) {\n    return true;\n  }\n\n  if (isLeafType(type1) || isLeafType(type2)) {\n    return type1 !== type2;\n  }\n\n  return false;\n} // Given a selection set, return the collection of fields (a mapping of response\n// name to field nodes and definitions) as well as a list of fragment names\n// referenced via fragment spreads.\n\nfunction getFieldsAndFragmentNames(\n  context,\n  cachedFieldsAndFragmentNames,\n  parentType,\n  selectionSet,\n) {\n  const cached = cachedFieldsAndFragmentNames.get(selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  const nodeAndDefs = Object.create(null);\n  const fragmentNames = Object.create(null);\n\n  _collectFieldsAndFragmentNames(\n    context,\n    parentType,\n    selectionSet,\n    nodeAndDefs,\n    fragmentNames,\n  );\n\n  const result = [nodeAndDefs, Object.keys(fragmentNames)];\n  cachedFieldsAndFragmentNames.set(selectionSet, result);\n  return result;\n} // Given a reference to a fragment, return the represented collection of fields\n// as well as a list of nested fragment names referenced via fragment spreads.\n\nfunction getReferencedFieldsAndFragmentNames(\n  context,\n  cachedFieldsAndFragmentNames,\n  fragment,\n) {\n  // Short-circuit building a type from the node if possible.\n  const cached = cachedFieldsAndFragmentNames.get(fragment.selectionSet);\n\n  if (cached) {\n    return cached;\n  }\n\n  const fragmentType = typeFromAST(context.getSchema(), fragment.typeCondition);\n  return getFieldsAndFragmentNames(\n    context,\n    cachedFieldsAndFragmentNames,\n    fragmentType,\n    fragment.selectionSet,\n  );\n}\n\nfunction _collectFieldsAndFragmentNames(\n  context,\n  parentType,\n  selectionSet,\n  nodeAndDefs,\n  fragmentNames,\n) {\n  for (const selection of selectionSet.selections) {\n    switch (selection.kind) {\n      case Kind.FIELD: {\n        const fieldName = selection.name.value;\n        let fieldDef;\n\n        if (isObjectType(parentType) || isInterfaceType(parentType)) {\n          fieldDef = parentType.getFields()[fieldName];\n        }\n\n        const responseName = selection.alias\n          ? selection.alias.value\n          : fieldName;\n\n        if (!nodeAndDefs[responseName]) {\n          nodeAndDefs[responseName] = [];\n        }\n\n        nodeAndDefs[responseName].push([parentType, selection, fieldDef]);\n        break;\n      }\n\n      case Kind.FRAGMENT_SPREAD:\n        fragmentNames[selection.name.value] = true;\n        break;\n\n      case Kind.INLINE_FRAGMENT: {\n        const typeCondition = selection.typeCondition;\n        const inlineFragmentType = typeCondition\n          ? typeFromAST(context.getSchema(), typeCondition)\n          : parentType;\n\n        _collectFieldsAndFragmentNames(\n          context,\n          inlineFragmentType,\n          selection.selectionSet,\n          nodeAndDefs,\n          fragmentNames,\n        );\n\n        break;\n      }\n    }\n  }\n} // Given a series of Conflicts which occurred between two sub-fields, generate\n// a single Conflict.\n\nfunction subfieldConflicts(conflicts, responseName, node1, node2) {\n  if (conflicts.length > 0) {\n    return [\n      [responseName, conflicts.map(([reason]) => reason)],\n      [node1, ...conflicts.map(([, fields1]) => fields1).flat()],\n      [node2, ...conflicts.map(([, , fields2]) => fields2).flat()],\n    ];\n  }\n}\n/**\n * A way to keep track of pairs of things when the ordering of the pair does not matter.\n */\n\nclass PairSet {\n  constructor() {\n    this._data = new Map();\n  }\n\n  has(a, b, areMutuallyExclusive) {\n    var _this$_data$get;\n\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n    const result =\n      (_this$_data$get = this._data.get(key1)) === null ||\n      _this$_data$get === void 0\n        ? void 0\n        : _this$_data$get.get(key2);\n\n    if (result === undefined) {\n      return false;\n    } // areMutuallyExclusive being false is a superset of being true, hence if\n    // we want to know if this PairSet \"has\" these two with no exclusivity,\n    // we have to ensure it was added as such.\n\n    return areMutuallyExclusive ? true : areMutuallyExclusive === result;\n  }\n\n  add(a, b, areMutuallyExclusive) {\n    const [key1, key2] = a < b ? [a, b] : [b, a];\n\n    const map = this._data.get(key1);\n\n    if (map === undefined) {\n      this._data.set(key1, new Map([[key2, areMutuallyExclusive]]));\n    } else {\n      map.set(key2, areMutuallyExclusive);\n    }\n  }\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { isCompositeType } from '../../type/definition.mjs';\nimport { doTypesOverlap } from '../../utilities/typeComparators.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Possible fragment spread\n *\n * A fragment spread is only valid if the type condition could ever possibly\n * be true: if there is a non-empty intersection of the possible parent types,\n * and possible types which pass the type condition.\n */\nexport function PossibleFragmentSpreadsRule(context) {\n  return {\n    InlineFragment(node) {\n      const fragType = context.getType();\n      const parentType = context.getParentType();\n\n      if (\n        isCompositeType(fragType) &&\n        isCompositeType(parentType) &&\n        !doTypesOverlap(context.getSchema(), fragType, parentType)\n      ) {\n        const parentTypeStr = inspect(parentType);\n        const fragTypeStr = inspect(fragType);\n        context.reportError(\n          new GraphQLError(\n            `Fragment cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    FragmentSpread(node) {\n      const fragName = node.name.value;\n      const fragType = getFragmentType(context, fragName);\n      const parentType = context.getParentType();\n\n      if (\n        fragType &&\n        parentType &&\n        !doTypesOverlap(context.getSchema(), fragType, parentType)\n      ) {\n        const parentTypeStr = inspect(parentType);\n        const fragTypeStr = inspect(fragType);\n        context.reportError(\n          new GraphQLError(\n            `Fragment \"${fragName}\" cannot be spread here as objects of type \"${parentTypeStr}\" can never be of type \"${fragTypeStr}\".`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n\nfunction getFragmentType(context, name) {\n  const frag = context.getFragment(name);\n\n  if (frag) {\n    const type = typeFromAST(context.getSchema(), frag.typeCondition);\n\n    if (isCompositeType(type)) {\n      return type;\n    }\n  }\n}\n","import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { inspect } from '../../jsutils/inspect.mjs';\nimport { invariant } from '../../jsutils/invariant.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { isTypeDefinitionNode } from '../../language/predicates.mjs';\nimport {\n  isEnumType,\n  isInputObjectType,\n  isInterfaceType,\n  isObjectType,\n  isScalarType,\n  isUnionType,\n} from '../../type/definition.mjs';\n\n/**\n * Possible type extension\n *\n * A type extension is only valid if the type is defined and has the same kind.\n */\nexport function PossibleTypeExtensionsRule(context) {\n  const schema = context.getSchema();\n  const definedTypes = Object.create(null);\n\n  for (const def of context.getDocument().definitions) {\n    if (isTypeDefinitionNode(def)) {\n      definedTypes[def.name.value] = def;\n    }\n  }\n\n  return {\n    ScalarTypeExtension: checkExtension,\n    ObjectTypeExtension: checkExtension,\n    InterfaceTypeExtension: checkExtension,\n    UnionTypeExtension: checkExtension,\n    EnumTypeExtension: checkExtension,\n    InputObjectTypeExtension: checkExtension,\n  };\n\n  function checkExtension(node) {\n    const typeName = node.name.value;\n    const defNode = definedTypes[typeName];\n    const existingType =\n      schema === null || schema === void 0 ? void 0 : schema.getType(typeName);\n    let expectedKind;\n\n    if (defNode) {\n      expectedKind = defKindToExtKind[defNode.kind];\n    } else if (existingType) {\n      expectedKind = typeToExtKind(existingType);\n    }\n\n    if (expectedKind) {\n      if (expectedKind !== node.kind) {\n        const kindStr = extensionKindToTypeName(node.kind);\n        context.reportError(\n          new GraphQLError(`Cannot extend non-${kindStr} type \"${typeName}\".`, {\n            nodes: defNode ? [defNode, node] : node,\n          }),\n        );\n      }\n    } else {\n      const allTypeNames = Object.keys({\n        ...definedTypes,\n        ...(schema === null || schema === void 0\n          ? void 0\n          : schema.getTypeMap()),\n      });\n      const suggestedTypes = suggestionList(typeName, allTypeNames);\n      context.reportError(\n        new GraphQLError(\n          `Cannot extend type \"${typeName}\" because it is not defined.` +\n            didYouMean(suggestedTypes),\n          {\n            nodes: node.name,\n          },\n        ),\n      );\n    }\n  }\n}\nconst defKindToExtKind = {\n  [Kind.SCALAR_TYPE_DEFINITION]: Kind.SCALAR_TYPE_EXTENSION,\n  [Kind.OBJECT_TYPE_DEFINITION]: Kind.OBJECT_TYPE_EXTENSION,\n  [Kind.INTERFACE_TYPE_DEFINITION]: Kind.INTERFACE_TYPE_EXTENSION,\n  [Kind.UNION_TYPE_DEFINITION]: Kind.UNION_TYPE_EXTENSION,\n  [Kind.ENUM_TYPE_DEFINITION]: Kind.ENUM_TYPE_EXTENSION,\n  [Kind.INPUT_OBJECT_TYPE_DEFINITION]: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n};\n\nfunction typeToExtKind(type) {\n  if (isScalarType(type)) {\n    return Kind.SCALAR_TYPE_EXTENSION;\n  }\n\n  if (isObjectType(type)) {\n    return Kind.OBJECT_TYPE_EXTENSION;\n  }\n\n  if (isInterfaceType(type)) {\n    return Kind.INTERFACE_TYPE_EXTENSION;\n  }\n\n  if (isUnionType(type)) {\n    return Kind.UNION_TYPE_EXTENSION;\n  }\n\n  if (isEnumType(type)) {\n    return Kind.ENUM_TYPE_EXTENSION;\n  }\n\n  if (isInputObjectType(type)) {\n    return Kind.INPUT_OBJECT_TYPE_EXTENSION;\n  }\n  /* c8 ignore next 3 */\n  // Not reachable. All possible types have been considered\n\n  false || invariant(false, 'Unexpected type: ' + inspect(type));\n}\n\nfunction extensionKindToTypeName(kind) {\n  switch (kind) {\n    case Kind.SCALAR_TYPE_EXTENSION:\n      return 'scalar';\n\n    case Kind.OBJECT_TYPE_EXTENSION:\n      return 'object';\n\n    case Kind.INTERFACE_TYPE_EXTENSION:\n      return 'interface';\n\n    case Kind.UNION_TYPE_EXTENSION:\n      return 'union';\n\n    case Kind.ENUM_TYPE_EXTENSION:\n      return 'enum';\n\n    case Kind.INPUT_OBJECT_TYPE_EXTENSION:\n      return 'input object';\n    // Not reachable. All possible types have been considered\n\n    /* c8 ignore next */\n\n    default:\n      false || invariant(false, 'Unexpected kind: ' + inspect(kind));\n  }\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { keyMap } from '../../jsutils/keyMap.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { print } from '../../language/printer.mjs';\nimport { isRequiredArgument, isType } from '../../type/definition.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Provided required arguments\n *\n * A field or directive is only valid if all required (non-null without a\n * default value) field arguments have been provided.\n */\nexport function ProvidedRequiredArgumentsRule(context) {\n  return {\n    // eslint-disable-next-line new-cap\n    ...ProvidedRequiredArgumentsOnDirectivesRule(context),\n    Field: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(fieldNode) {\n        var _fieldNode$arguments;\n\n        const fieldDef = context.getFieldDef();\n\n        if (!fieldDef) {\n          return false;\n        }\n\n        const providedArgs = new Set( // FIXME: https://github.com/graphql/graphql-js/issues/2203\n          /* c8 ignore next */\n          (_fieldNode$arguments = fieldNode.arguments) === null ||\n          _fieldNode$arguments === void 0\n            ? void 0\n            : _fieldNode$arguments.map((arg) => arg.name.value),\n        );\n\n        for (const argDef of fieldDef.args) {\n          if (!providedArgs.has(argDef.name) && isRequiredArgument(argDef)) {\n            const argTypeStr = inspect(argDef.type);\n            context.reportError(\n              new GraphQLError(\n                `Field \"${fieldDef.name}\" argument \"${argDef.name}\" of type \"${argTypeStr}\" is required, but it was not provided.`,\n                {\n                  nodes: fieldNode,\n                },\n              ),\n            );\n          }\n        }\n      },\n    },\n  };\n}\n/**\n * @internal\n */\n\nexport function ProvidedRequiredArgumentsOnDirectivesRule(context) {\n  var _schema$getDirectives;\n\n  const requiredArgsMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives =\n    (_schema$getDirectives =\n      schema === null || schema === void 0\n        ? void 0\n        : schema.getDirectives()) !== null && _schema$getDirectives !== void 0\n      ? _schema$getDirectives\n      : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    requiredArgsMap[directive.name] = keyMap(\n      directive.args.filter(isRequiredArgument),\n      (arg) => arg.name,\n    );\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      var _def$arguments;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argNodes =\n        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0\n          ? _def$arguments\n          : [];\n      requiredArgsMap[def.name.value] = keyMap(\n        argNodes.filter(isRequiredArgumentNode),\n        (arg) => arg.name.value,\n      );\n    }\n  }\n\n  return {\n    Directive: {\n      // Validate on leave to allow for deeper errors to appear first.\n      leave(directiveNode) {\n        const directiveName = directiveNode.name.value;\n        const requiredArgs = requiredArgsMap[directiveName];\n\n        if (requiredArgs) {\n          var _directiveNode$argume;\n\n          // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n          /* c8 ignore next */\n          const argNodes =\n            (_directiveNode$argume = directiveNode.arguments) !== null &&\n            _directiveNode$argume !== void 0\n              ? _directiveNode$argume\n              : [];\n          const argNodeMap = new Set(argNodes.map((arg) => arg.name.value));\n\n          for (const [argName, argDef] of Object.entries(requiredArgs)) {\n            if (!argNodeMap.has(argName)) {\n              const argType = isType(argDef.type)\n                ? inspect(argDef.type)\n                : print(argDef.type);\n              context.reportError(\n                new GraphQLError(\n                  `Directive \"@${directiveName}\" argument \"${argName}\" of type \"${argType}\" is required, but it was not provided.`,\n                  {\n                    nodes: directiveNode,\n                  },\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n  };\n}\n\nfunction isRequiredArgumentNode(arg) {\n  return arg.type.kind === Kind.NON_NULL_TYPE && arg.defaultValue == null;\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { getNamedType, isLeafType } from '../../type/definition.mjs';\n\n/**\n * Scalar leafs\n *\n * A GraphQL document is valid only if all leaf fields (fields without\n * sub selections) are of scalar or enum types.\n */\nexport function ScalarLeafsRule(context) {\n  return {\n    Field(node) {\n      const type = context.getType();\n      const selectionSet = node.selectionSet;\n\n      if (type) {\n        if (isLeafType(getNamedType(type))) {\n          if (selectionSet) {\n            const fieldName = node.name.value;\n            const typeStr = inspect(type);\n            context.reportError(\n              new GraphQLError(\n                `Field \"${fieldName}\" must not have a selection since type \"${typeStr}\" has no subfields.`,\n                {\n                  nodes: selectionSet,\n                },\n              ),\n            );\n          }\n        } else if (!selectionSet) {\n          const fieldName = node.name.value;\n          const typeStr = inspect(type);\n          context.reportError(\n            new GraphQLError(\n              `Field \"${fieldName}\" of type \"${typeStr}\" must have a selection of subfields. Did you mean \"${fieldName} { ... }\"?`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { collectFields } from '../../execution/collectFields.mjs';\n\n/**\n * Subscriptions must only include a non-introspection field.\n *\n * A GraphQL subscription is valid only if it contains a single root field and\n * that root field is not an introspection field.\n *\n * See https://spec.graphql.org/draft/#sec-Single-root-field\n */\nexport function SingleFieldSubscriptionsRule(context) {\n  return {\n    OperationDefinition(node) {\n      if (node.operation === 'subscription') {\n        const schema = context.getSchema();\n        const subscriptionType = schema.getSubscriptionType();\n\n        if (subscriptionType) {\n          const operationName = node.name ? node.name.value : null;\n          const variableValues = Object.create(null);\n          const document = context.getDocument();\n          const fragments = Object.create(null);\n\n          for (const definition of document.definitions) {\n            if (definition.kind === Kind.FRAGMENT_DEFINITION) {\n              fragments[definition.name.value] = definition;\n            }\n          }\n\n          const fields = collectFields(\n            schema,\n            fragments,\n            variableValues,\n            subscriptionType,\n            node.selectionSet,\n          );\n\n          if (fields.size > 1) {\n            const fieldSelectionLists = [...fields.values()];\n            const extraFieldSelectionLists = fieldSelectionLists.slice(1);\n            const extraFieldSelections = extraFieldSelectionLists.flat();\n            context.reportError(\n              new GraphQLError(\n                operationName != null\n                  ? `Subscription \"${operationName}\" must select only one top level field.`\n                  : 'Anonymous Subscription must select only one top level field.',\n                {\n                  nodes: extraFieldSelections,\n                },\n              ),\n            );\n          }\n\n          for (const fieldNodes of fields.values()) {\n            const field = fieldNodes[0];\n            const fieldName = field.name.value;\n\n            if (fieldName.startsWith('__')) {\n              context.reportError(\n                new GraphQLError(\n                  operationName != null\n                    ? `Subscription \"${operationName}\" must not select an introspection top level field.`\n                    : 'Anonymous Subscription must not select an introspection top level field.',\n                  {\n                    nodes: fieldNodes,\n                  },\n                ),\n              );\n            }\n          }\n        }\n      }\n    },\n  };\n}\n","import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique argument definition names\n *\n * A GraphQL Object or Interface type is only valid if all its fields have uniquely named arguments.\n * A GraphQL Directive is only valid if all its arguments are uniquely named.\n */\nexport function UniqueArgumentDefinitionNamesRule(context) {\n  return {\n    DirectiveDefinition(directiveNode) {\n      var _directiveNode$argume;\n\n      // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const argumentNodes =\n        (_directiveNode$argume = directiveNode.arguments) !== null &&\n        _directiveNode$argume !== void 0\n          ? _directiveNode$argume\n          : [];\n      return checkArgUniqueness(`@${directiveNode.name.value}`, argumentNodes);\n    },\n\n    InterfaceTypeDefinition: checkArgUniquenessPerField,\n    InterfaceTypeExtension: checkArgUniquenessPerField,\n    ObjectTypeDefinition: checkArgUniquenessPerField,\n    ObjectTypeExtension: checkArgUniquenessPerField,\n  };\n\n  function checkArgUniquenessPerField(typeNode) {\n    var _typeNode$fields;\n\n    const typeName = typeNode.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const fieldNodes =\n      (_typeNode$fields = typeNode.fields) !== null &&\n      _typeNode$fields !== void 0\n        ? _typeNode$fields\n        : [];\n\n    for (const fieldDef of fieldNodes) {\n      var _fieldDef$arguments;\n\n      const fieldName = fieldDef.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n\n      const argumentNodes =\n        (_fieldDef$arguments = fieldDef.arguments) !== null &&\n        _fieldDef$arguments !== void 0\n          ? _fieldDef$arguments\n          : [];\n      checkArgUniqueness(`${typeName}.${fieldName}`, argumentNodes);\n    }\n\n    return false;\n  }\n\n  function checkArgUniqueness(parentName, argumentNodes) {\n    const seenArgs = groupBy(argumentNodes, (arg) => arg.name.value);\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(\n          new GraphQLError(\n            `Argument \"${parentName}(${argName}:)\" can only be defined once.`,\n            {\n              nodes: argNodes.map((node) => node.name),\n            },\n          ),\n        );\n      }\n    }\n\n    return false;\n  }\n}\n","import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique argument names\n *\n * A GraphQL field or directive is only valid if all supplied arguments are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Argument-Names\n */\nexport function UniqueArgumentNamesRule(context) {\n  return {\n    Field: checkArgUniqueness,\n    Directive: checkArgUniqueness,\n  };\n\n  function checkArgUniqueness(parentNode) {\n    var _parentNode$arguments;\n\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const argumentNodes =\n      (_parentNode$arguments = parentNode.arguments) !== null &&\n      _parentNode$arguments !== void 0\n        ? _parentNode$arguments\n        : [];\n    const seenArgs = groupBy(argumentNodes, (arg) => arg.name.value);\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one argument named \"${argName}\".`,\n            {\n              nodes: argNodes.map((node) => node.name),\n            },\n          ),\n        );\n      }\n    }\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique directive names\n *\n * A GraphQL document is only valid if all defined directives have unique names.\n */\nexport function UniqueDirectiveNamesRule(context) {\n  const knownDirectiveNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    DirectiveDefinition(node) {\n      const directiveName = node.name.value;\n\n      if (\n        schema !== null &&\n        schema !== void 0 &&\n        schema.getDirective(directiveName)\n      ) {\n        context.reportError(\n          new GraphQLError(\n            `Directive \"@${directiveName}\" already exists in the schema. It cannot be redefined.`,\n            {\n              nodes: node.name,\n            },\n          ),\n        );\n        return;\n      }\n\n      if (knownDirectiveNames[directiveName]) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one directive named \"@${directiveName}\".`,\n            {\n              nodes: [knownDirectiveNames[directiveName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownDirectiveNames[directiveName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport {\n  isTypeDefinitionNode,\n  isTypeExtensionNode,\n} from '../../language/predicates.mjs';\nimport { specifiedDirectives } from '../../type/directives.mjs';\n\n/**\n * Unique directive names per location\n *\n * A GraphQL document is only valid if all non-repeatable directives at\n * a given location are uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Directives-Are-Unique-Per-Location\n */\nexport function UniqueDirectivesPerLocationRule(context) {\n  const uniqueDirectiveMap = Object.create(null);\n  const schema = context.getSchema();\n  const definedDirectives = schema\n    ? schema.getDirectives()\n    : specifiedDirectives;\n\n  for (const directive of definedDirectives) {\n    uniqueDirectiveMap[directive.name] = !directive.isRepeatable;\n  }\n\n  const astDefinitions = context.getDocument().definitions;\n\n  for (const def of astDefinitions) {\n    if (def.kind === Kind.DIRECTIVE_DEFINITION) {\n      uniqueDirectiveMap[def.name.value] = !def.repeatable;\n    }\n  }\n\n  const schemaDirectives = Object.create(null);\n  const typeDirectivesMap = Object.create(null);\n  return {\n    // Many different AST nodes may contain directives. Rather than listing\n    // them all, just listen for entering any node, and check to see if it\n    // defines any directives.\n    enter(node) {\n      if (!('directives' in node) || !node.directives) {\n        return;\n      }\n\n      let seenDirectives;\n\n      if (\n        node.kind === Kind.SCHEMA_DEFINITION ||\n        node.kind === Kind.SCHEMA_EXTENSION\n      ) {\n        seenDirectives = schemaDirectives;\n      } else if (isTypeDefinitionNode(node) || isTypeExtensionNode(node)) {\n        const typeName = node.name.value;\n        seenDirectives = typeDirectivesMap[typeName];\n\n        if (seenDirectives === undefined) {\n          typeDirectivesMap[typeName] = seenDirectives = Object.create(null);\n        }\n      } else {\n        seenDirectives = Object.create(null);\n      }\n\n      for (const directive of node.directives) {\n        const directiveName = directive.name.value;\n\n        if (uniqueDirectiveMap[directiveName]) {\n          if (seenDirectives[directiveName]) {\n            context.reportError(\n              new GraphQLError(\n                `The directive \"@${directiveName}\" can only be used once at this location.`,\n                {\n                  nodes: [seenDirectives[directiveName], directive],\n                },\n              ),\n            );\n          } else {\n            seenDirectives[directiveName] = directive;\n          }\n        }\n      }\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { isEnumType } from '../../type/definition.mjs';\n\n/**\n * Unique enum value names\n *\n * A GraphQL enum type is only valid if all its values are uniquely named.\n */\nexport function UniqueEnumValueNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownValueNames = Object.create(null);\n  return {\n    EnumTypeDefinition: checkValueUniqueness,\n    EnumTypeExtension: checkValueUniqueness,\n  };\n\n  function checkValueUniqueness(node) {\n    var _node$values;\n\n    const typeName = node.name.value;\n\n    if (!knownValueNames[typeName]) {\n      knownValueNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const valueNodes =\n      (_node$values = node.values) !== null && _node$values !== void 0\n        ? _node$values\n        : [];\n    const valueNames = knownValueNames[typeName];\n\n    for (const valueDef of valueNodes) {\n      const valueName = valueDef.name.value;\n      const existingType = existingTypeMap[typeName];\n\n      if (isEnumType(existingType) && existingType.getValue(valueName)) {\n        context.reportError(\n          new GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" already exists in the schema. It cannot also be defined in this type extension.`,\n            {\n              nodes: valueDef.name,\n            },\n          ),\n        );\n      } else if (valueNames[valueName]) {\n        context.reportError(\n          new GraphQLError(\n            `Enum value \"${typeName}.${valueName}\" can only be defined once.`,\n            {\n              nodes: [valueNames[valueName], valueDef.name],\n            },\n          ),\n        );\n      } else {\n        valueNames[valueName] = valueDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport {\n  isInputObjectType,\n  isInterfaceType,\n  isObjectType,\n} from '../../type/definition.mjs';\n\n/**\n * Unique field definition names\n *\n * A GraphQL complex type is only valid if all its fields are uniquely named.\n */\nexport function UniqueFieldDefinitionNamesRule(context) {\n  const schema = context.getSchema();\n  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);\n  const knownFieldNames = Object.create(null);\n  return {\n    InputObjectTypeDefinition: checkFieldUniqueness,\n    InputObjectTypeExtension: checkFieldUniqueness,\n    InterfaceTypeDefinition: checkFieldUniqueness,\n    InterfaceTypeExtension: checkFieldUniqueness,\n    ObjectTypeDefinition: checkFieldUniqueness,\n    ObjectTypeExtension: checkFieldUniqueness,\n  };\n\n  function checkFieldUniqueness(node) {\n    var _node$fields;\n\n    const typeName = node.name.value;\n\n    if (!knownFieldNames[typeName]) {\n      knownFieldNames[typeName] = Object.create(null);\n    } // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n    const fieldNodes =\n      (_node$fields = node.fields) !== null && _node$fields !== void 0\n        ? _node$fields\n        : [];\n    const fieldNames = knownFieldNames[typeName];\n\n    for (const fieldDef of fieldNodes) {\n      const fieldName = fieldDef.name.value;\n\n      if (hasField(existingTypeMap[typeName], fieldName)) {\n        context.reportError(\n          new GraphQLError(\n            `Field \"${typeName}.${fieldName}\" already exists in the schema. It cannot also be defined in this type extension.`,\n            {\n              nodes: fieldDef.name,\n            },\n          ),\n        );\n      } else if (fieldNames[fieldName]) {\n        context.reportError(\n          new GraphQLError(\n            `Field \"${typeName}.${fieldName}\" can only be defined once.`,\n            {\n              nodes: [fieldNames[fieldName], fieldDef.name],\n            },\n          ),\n        );\n      } else {\n        fieldNames[fieldName] = fieldDef.name;\n      }\n    }\n\n    return false;\n  }\n}\n\nfunction hasField(type, fieldName) {\n  if (isObjectType(type) || isInterfaceType(type) || isInputObjectType(type)) {\n    return type.getFields()[fieldName] != null;\n  }\n\n  return false;\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique fragment names\n *\n * A GraphQL document is only valid if all defined fragments have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Fragment-Name-Uniqueness\n */\nexport function UniqueFragmentNamesRule(context) {\n  const knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      const fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one fragment named \"${fragmentName}\".`,\n            {\n              nodes: [knownFragmentNames[fragmentName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    },\n  };\n}\n","import { invariant } from '../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique input field names\n *\n * A GraphQL input object value is only valid if all supplied fields are\n * uniquely named.\n *\n * See https://spec.graphql.org/draft/#sec-Input-Object-Field-Uniqueness\n */\nexport function UniqueInputFieldNamesRule(context) {\n  const knownNameStack = [];\n  let knownNames = Object.create(null);\n  return {\n    ObjectValue: {\n      enter() {\n        knownNameStack.push(knownNames);\n        knownNames = Object.create(null);\n      },\n\n      leave() {\n        const prevKnownNames = knownNameStack.pop();\n        prevKnownNames || invariant(false);\n        knownNames = prevKnownNames;\n      },\n    },\n\n    ObjectField(node) {\n      const fieldName = node.name.value;\n\n      if (knownNames[fieldName]) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one input field named \"${fieldName}\".`,\n            {\n              nodes: [knownNames[fieldName], node.name],\n            },\n          ),\n        );\n      } else {\n        knownNames[fieldName] = node.name;\n      }\n    },\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique operation names\n *\n * A GraphQL document is only valid if all defined operations have unique names.\n *\n * See https://spec.graphql.org/draft/#sec-Operation-Name-Uniqueness\n */\nexport function UniqueOperationNamesRule(context) {\n  const knownOperationNames = Object.create(null);\n  return {\n    OperationDefinition(node) {\n      const operationName = node.name;\n\n      if (operationName) {\n        if (knownOperationNames[operationName.value]) {\n          context.reportError(\n            new GraphQLError(\n              `There can be only one operation named \"${operationName.value}\".`,\n              {\n                nodes: [\n                  knownOperationNames[operationName.value],\n                  operationName,\n                ],\n              },\n            ),\n          );\n        } else {\n          knownOperationNames[operationName.value] = operationName;\n        }\n      }\n\n      return false;\n    },\n\n    FragmentDefinition: () => false,\n  };\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique operation types\n *\n * A GraphQL document is only valid if it has only one type per operation.\n */\nexport function UniqueOperationTypesRule(context) {\n  const schema = context.getSchema();\n  const definedOperationTypes = Object.create(null);\n  const existingOperationTypes = schema\n    ? {\n        query: schema.getQueryType(),\n        mutation: schema.getMutationType(),\n        subscription: schema.getSubscriptionType(),\n      }\n    : {};\n  return {\n    SchemaDefinition: checkOperationTypes,\n    SchemaExtension: checkOperationTypes,\n  };\n\n  function checkOperationTypes(node) {\n    var _node$operationTypes;\n\n    // See: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n    const operationTypesNodes =\n      (_node$operationTypes = node.operationTypes) !== null &&\n      _node$operationTypes !== void 0\n        ? _node$operationTypes\n        : [];\n\n    for (const operationType of operationTypesNodes) {\n      const operation = operationType.operation;\n      const alreadyDefinedOperationType = definedOperationTypes[operation];\n\n      if (existingOperationTypes[operation]) {\n        context.reportError(\n          new GraphQLError(\n            `Type for ${operation} already defined in the schema. It cannot be redefined.`,\n            {\n              nodes: operationType,\n            },\n          ),\n        );\n      } else if (alreadyDefinedOperationType) {\n        context.reportError(\n          new GraphQLError(\n            `There can be only one ${operation} type in schema.`,\n            {\n              nodes: [alreadyDefinedOperationType, operationType],\n            },\n          ),\n        );\n      } else {\n        definedOperationTypes[operation] = operationType;\n      }\n    }\n\n    return false;\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique type names\n *\n * A GraphQL document is only valid if all defined types have unique names.\n */\nexport function UniqueTypeNamesRule(context) {\n  const knownTypeNames = Object.create(null);\n  const schema = context.getSchema();\n  return {\n    ScalarTypeDefinition: checkTypeName,\n    ObjectTypeDefinition: checkTypeName,\n    InterfaceTypeDefinition: checkTypeName,\n    UnionTypeDefinition: checkTypeName,\n    EnumTypeDefinition: checkTypeName,\n    InputObjectTypeDefinition: checkTypeName,\n  };\n\n  function checkTypeName(node) {\n    const typeName = node.name.value;\n\n    if (schema !== null && schema !== void 0 && schema.getType(typeName)) {\n      context.reportError(\n        new GraphQLError(\n          `Type \"${typeName}\" already exists in the schema. It cannot also be defined in this type definition.`,\n          {\n            nodes: node.name,\n          },\n        ),\n      );\n      return;\n    }\n\n    if (knownTypeNames[typeName]) {\n      context.reportError(\n        new GraphQLError(`There can be only one type named \"${typeName}\".`, {\n          nodes: [knownTypeNames[typeName], node.name],\n        }),\n      );\n    } else {\n      knownTypeNames[typeName] = node.name;\n    }\n\n    return false;\n  }\n}\n","import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n\n/**\n * Unique variable names\n *\n * A GraphQL operation is only valid if all its variables are uniquely named.\n */\nexport function UniqueVariableNamesRule(context) {\n  return {\n    OperationDefinition(operationNode) {\n      var _operationNode$variab;\n\n      // See: https://github.com/graphql/graphql-js/issues/2203\n\n      /* c8 ignore next */\n      const variableDefinitions =\n        (_operationNode$variab = operationNode.variableDefinitions) !== null &&\n        _operationNode$variab !== void 0\n          ? _operationNode$variab\n          : [];\n      const seenVariableDefinitions = groupBy(\n        variableDefinitions,\n        (node) => node.variable.name.value,\n      );\n\n      for (const [variableName, variableNodes] of seenVariableDefinitions) {\n        if (variableNodes.length > 1) {\n          context.reportError(\n            new GraphQLError(\n              `There can be only one variable named \"$${variableName}\".`,\n              {\n                nodes: variableNodes.map((node) => node.variable.name),\n              },\n            ),\n          );\n        }\n      }\n    },\n  };\n}\n","import { didYouMean } from '../../jsutils/didYouMean.mjs';\nimport { inspect } from '../../jsutils/inspect.mjs';\nimport { keyMap } from '../../jsutils/keyMap.mjs';\nimport { suggestionList } from '../../jsutils/suggestionList.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { print } from '../../language/printer.mjs';\nimport {\n  getNamedType,\n  getNullableType,\n  isInputObjectType,\n  isLeafType,\n  isListType,\n  isNonNullType,\n  isRequiredInputField,\n} from '../../type/definition.mjs';\n\n/**\n * Value literals of correct type\n *\n * A GraphQL document is only valid if all value literals are of the type\n * expected at their position.\n *\n * See https://spec.graphql.org/draft/#sec-Values-of-Correct-Type\n */\nexport function ValuesOfCorrectTypeRule(context) {\n  return {\n    ListValue(node) {\n      // Note: TypeInfo will traverse into a list's item type, so look to the\n      // parent input type to check if it is a list.\n      const type = getNullableType(context.getParentInputType());\n\n      if (!isListType(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      }\n    },\n\n    ObjectValue(node) {\n      const type = getNamedType(context.getInputType());\n\n      if (!isInputObjectType(type)) {\n        isValidValueNode(context, node);\n        return false; // Don't traverse further.\n      } // Ensure every required field exists.\n\n      const fieldNodeMap = keyMap(node.fields, (field) => field.name.value);\n\n      for (const fieldDef of Object.values(type.getFields())) {\n        const fieldNode = fieldNodeMap[fieldDef.name];\n\n        if (!fieldNode && isRequiredInputField(fieldDef)) {\n          const typeStr = inspect(fieldDef.type);\n          context.reportError(\n            new GraphQLError(\n              `Field \"${type.name}.${fieldDef.name}\" of required type \"${typeStr}\" was not provided.`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const parentType = getNamedType(context.getParentInputType());\n      const fieldType = context.getInputType();\n\n      if (!fieldType && isInputObjectType(parentType)) {\n        const suggestions = suggestionList(\n          node.name.value,\n          Object.keys(parentType.getFields()),\n        );\n        context.reportError(\n          new GraphQLError(\n            `Field \"${node.name.value}\" is not defined by type \"${parentType.name}\".` +\n              didYouMean(suggestions),\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    NullValue(node) {\n      const type = context.getInputType();\n\n      if (isNonNullType(type)) {\n        context.reportError(\n          new GraphQLError(\n            `Expected value of type \"${inspect(type)}\", found ${print(node)}.`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    EnumValue: (node) => isValidValueNode(context, node),\n    IntValue: (node) => isValidValueNode(context, node),\n    FloatValue: (node) => isValidValueNode(context, node),\n    StringValue: (node) => isValidValueNode(context, node),\n    BooleanValue: (node) => isValidValueNode(context, node),\n  };\n}\n/**\n * Any value literal may be a valid representation of a Scalar, depending on\n * that scalar type.\n */\n\nfunction isValidValueNode(context, node) {\n  // Report any error at the full type expected by the location.\n  const locationType = context.getInputType();\n\n  if (!locationType) {\n    return;\n  }\n\n  const type = getNamedType(locationType);\n\n  if (!isLeafType(type)) {\n    const typeStr = inspect(locationType);\n    context.reportError(\n      new GraphQLError(\n        `Expected value of type \"${typeStr}\", found ${print(node)}.`,\n        {\n          nodes: node,\n        },\n      ),\n    );\n    return;\n  } // Scalars and Enums determine if a literal value is valid via parseLiteral(),\n  // which may throw or return an invalid value to indicate failure.\n\n  try {\n    const parseResult = type.parseLiteral(\n      node,\n      undefined,\n      /* variables */\n    );\n\n    if (parseResult === undefined) {\n      const typeStr = inspect(locationType);\n      context.reportError(\n        new GraphQLError(\n          `Expected value of type \"${typeStr}\", found ${print(node)}.`,\n          {\n            nodes: node,\n          },\n        ),\n      );\n    }\n  } catch (error) {\n    const typeStr = inspect(locationType);\n\n    if (error instanceof GraphQLError) {\n      context.reportError(error);\n    } else {\n      context.reportError(\n        new GraphQLError(\n          `Expected value of type \"${typeStr}\", found ${print(node)}; ` +\n            error.message,\n          {\n            nodes: node,\n            originalError: error,\n          },\n        ),\n      );\n    }\n  }\n}\n","import { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { print } from '../../language/printer.mjs';\nimport { isInputType } from '../../type/definition.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n *\n * See https://spec.graphql.org/draft/#sec-Variables-Are-Input-Types\n */\nexport function VariablesAreInputTypesRule(context) {\n  return {\n    VariableDefinition(node) {\n      const type = typeFromAST(context.getSchema(), node.type);\n\n      if (type !== undefined && !isInputType(type)) {\n        const variableName = node.variable.name.value;\n        const typeName = print(node.type);\n        context.reportError(\n          new GraphQLError(\n            `Variable \"$${variableName}\" cannot be non-input type \"${typeName}\".`,\n            {\n              nodes: node.type,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n","import { inspect } from '../../jsutils/inspect.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\nimport { Kind } from '../../language/kinds.mjs';\nimport { isNonNullType } from '../../type/definition.mjs';\nimport { isTypeSubTypeOf } from '../../utilities/typeComparators.mjs';\nimport { typeFromAST } from '../../utilities/typeFromAST.mjs';\n\n/**\n * Variables in allowed position\n *\n * Variable usages must be compatible with the arguments they are passed to.\n *\n * See https://spec.graphql.org/draft/#sec-All-Variable-Usages-are-Allowed\n */\nexport function VariablesInAllowedPositionRule(context) {\n  let varDefMap = Object.create(null);\n  return {\n    OperationDefinition: {\n      enter() {\n        varDefMap = Object.create(null);\n      },\n\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        for (const { node, type, defaultValue } of usages) {\n          const varName = node.name.value;\n          const varDef = varDefMap[varName];\n\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            const schema = context.getSchema();\n            const varType = typeFromAST(schema, varDef.type);\n\n            if (\n              varType &&\n              !allowedVariableUsage(\n                schema,\n                varType,\n                varDef.defaultValue,\n                type,\n                defaultValue,\n              )\n            ) {\n              const varTypeStr = inspect(varType);\n              const typeStr = inspect(type);\n              context.reportError(\n                new GraphQLError(\n                  `Variable \"$${varName}\" of type \"${varTypeStr}\" used in position expecting type \"${typeStr}\".`,\n                  {\n                    nodes: [varDef, node],\n                  },\n                ),\n              );\n            }\n          }\n        }\n      },\n    },\n\n    VariableDefinition(node) {\n      varDefMap[node.variable.name.value] = node;\n    },\n  };\n}\n/**\n * Returns true if the variable is allowed in the location it was found,\n * which includes considering if default values exist for either the variable\n * or the location at which it is located.\n */\n\nfunction allowedVariableUsage(\n  schema,\n  varType,\n  varDefaultValue,\n  locationType,\n  locationDefaultValue,\n) {\n  if (isNonNullType(locationType) && !isNonNullType(varType)) {\n    const hasNonNullVariableDefaultValue =\n      varDefaultValue != null && varDefaultValue.kind !== Kind.NULL;\n    const hasLocationDefaultValue = locationDefaultValue !== undefined;\n\n    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {\n      return false;\n    }\n\n    const nullableLocationType = locationType.ofType;\n    return isTypeSubTypeOf(schema, varType, nullableLocationType);\n  }\n\n  return isTypeSubTypeOf(schema, varType, locationType);\n}\n","import { invariant } from '../../../jsutils/invariant.mjs';\nimport { GraphQLError } from '../../../error/GraphQLError.mjs';\nimport { getNamedType, isInputObjectType } from '../../../type/definition.mjs';\n\n/**\n * No deprecated\n *\n * A GraphQL document is only valid if all selected fields and all used enum values have not been\n * deprecated.\n *\n * Note: This rule is optional and is not part of the Validation section of the GraphQL\n * Specification. The main purpose of this rule is detection of deprecated usages and not\n * necessarily to forbid their use when querying a service.\n */\nexport function NoDeprecatedCustomRule(context) {\n  return {\n    Field(node) {\n      const fieldDef = context.getFieldDef();\n      const deprecationReason =\n        fieldDef === null || fieldDef === void 0\n          ? void 0\n          : fieldDef.deprecationReason;\n\n      if (fieldDef && deprecationReason != null) {\n        const parentType = context.getParentType();\n        parentType != null || invariant(false);\n        context.reportError(\n          new GraphQLError(\n            `The field ${parentType.name}.${fieldDef.name} is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n\n    Argument(node) {\n      const argDef = context.getArgument();\n      const deprecationReason =\n        argDef === null || argDef === void 0\n          ? void 0\n          : argDef.deprecationReason;\n\n      if (argDef && deprecationReason != null) {\n        const directiveDef = context.getDirective();\n\n        if (directiveDef != null) {\n          context.reportError(\n            new GraphQLError(\n              `Directive \"@${directiveDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        } else {\n          const parentType = context.getParentType();\n          const fieldDef = context.getFieldDef();\n          (parentType != null && fieldDef != null) || invariant(false);\n          context.reportError(\n            new GraphQLError(\n              `Field \"${parentType.name}.${fieldDef.name}\" argument \"${argDef.name}\" is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    ObjectField(node) {\n      const inputObjectDef = getNamedType(context.getParentInputType());\n\n      if (isInputObjectType(inputObjectDef)) {\n        const inputFieldDef = inputObjectDef.getFields()[node.name.value];\n        const deprecationReason =\n          inputFieldDef === null || inputFieldDef === void 0\n            ? void 0\n            : inputFieldDef.deprecationReason;\n\n        if (deprecationReason != null) {\n          context.reportError(\n            new GraphQLError(\n              `The input field ${inputObjectDef.name}.${inputFieldDef.name} is deprecated. ${deprecationReason}`,\n              {\n                nodes: node,\n              },\n            ),\n          );\n        }\n      }\n    },\n\n    EnumValue(node) {\n      const enumValueDef = context.getEnumValue();\n      const deprecationReason =\n        enumValueDef === null || enumValueDef === void 0\n          ? void 0\n          : enumValueDef.deprecationReason;\n\n      if (enumValueDef && deprecationReason != null) {\n        const enumTypeDef = getNamedType(context.getInputType());\n        enumTypeDef != null || invariant(false);\n        context.reportError(\n          new GraphQLError(\n            `The enum value \"${enumTypeDef.name}.${enumValueDef.name}\" is deprecated. ${deprecationReason}`,\n            {\n              nodes: node,\n            },\n          ),\n        );\n      }\n    },\n  };\n}\n","// Spec Section: \"Executable Definitions\"\nimport { ExecutableDefinitionsRule } from './rules/ExecutableDefinitionsRule.mjs'; // Spec Section: \"Field Selections on Objects, Interfaces, and Unions Types\"\n\nimport { FieldsOnCorrectTypeRule } from './rules/FieldsOnCorrectTypeRule.mjs'; // Spec Section: \"Fragments on Composite Types\"\n\nimport { FragmentsOnCompositeTypesRule } from './rules/FragmentsOnCompositeTypesRule.mjs'; // Spec Section: \"Argument Names\"\n\nimport {\n  KnownArgumentNamesOnDirectivesRule,\n  KnownArgumentNamesRule,\n} from './rules/KnownArgumentNamesRule.mjs'; // Spec Section: \"Directives Are Defined\"\n\nimport { KnownDirectivesRule } from './rules/KnownDirectivesRule.mjs'; // Spec Section: \"Fragment spread target defined\"\n\nimport { KnownFragmentNamesRule } from './rules/KnownFragmentNamesRule.mjs'; // Spec Section: \"Fragment Spread Type Existence\"\n\nimport { KnownTypeNamesRule } from './rules/KnownTypeNamesRule.mjs'; // Spec Section: \"Lone Anonymous Operation\"\n\nimport { LoneAnonymousOperationRule } from './rules/LoneAnonymousOperationRule.mjs'; // SDL-specific validation rules\n\nimport { LoneSchemaDefinitionRule } from './rules/LoneSchemaDefinitionRule.mjs'; // Spec Section: \"Fragments must not form cycles\"\n\nimport { NoFragmentCyclesRule } from './rules/NoFragmentCyclesRule.mjs'; // Spec Section: \"All Variable Used Defined\"\n\nimport { NoUndefinedVariablesRule } from './rules/NoUndefinedVariablesRule.mjs'; // Spec Section: \"Fragments must be used\"\n\nimport { NoUnusedFragmentsRule } from './rules/NoUnusedFragmentsRule.mjs'; // Spec Section: \"All Variables Used\"\n\nimport { NoUnusedVariablesRule } from './rules/NoUnusedVariablesRule.mjs'; // Spec Section: \"Field Selection Merging\"\n\nimport { OverlappingFieldsCanBeMergedRule } from './rules/OverlappingFieldsCanBeMergedRule.mjs'; // Spec Section: \"Fragment spread is possible\"\n\nimport { PossibleFragmentSpreadsRule } from './rules/PossibleFragmentSpreadsRule.mjs';\nimport { PossibleTypeExtensionsRule } from './rules/PossibleTypeExtensionsRule.mjs'; // Spec Section: \"Argument Optionality\"\n\nimport {\n  ProvidedRequiredArgumentsOnDirectivesRule,\n  ProvidedRequiredArgumentsRule,\n} from './rules/ProvidedRequiredArgumentsRule.mjs'; // Spec Section: \"Leaf Field Selections\"\n\nimport { ScalarLeafsRule } from './rules/ScalarLeafsRule.mjs'; // Spec Section: \"Subscriptions with Single Root Field\"\n\nimport { SingleFieldSubscriptionsRule } from './rules/SingleFieldSubscriptionsRule.mjs';\nimport { UniqueArgumentDefinitionNamesRule } from './rules/UniqueArgumentDefinitionNamesRule.mjs'; // Spec Section: \"Argument Uniqueness\"\n\nimport { UniqueArgumentNamesRule } from './rules/UniqueArgumentNamesRule.mjs';\nimport { UniqueDirectiveNamesRule } from './rules/UniqueDirectiveNamesRule.mjs'; // Spec Section: \"Directives Are Unique Per Location\"\n\nimport { UniqueDirectivesPerLocationRule } from './rules/UniqueDirectivesPerLocationRule.mjs';\nimport { UniqueEnumValueNamesRule } from './rules/UniqueEnumValueNamesRule.mjs';\nimport { UniqueFieldDefinitionNamesRule } from './rules/UniqueFieldDefinitionNamesRule.mjs'; // Spec Section: \"Fragment Name Uniqueness\"\n\nimport { UniqueFragmentNamesRule } from './rules/UniqueFragmentNamesRule.mjs'; // Spec Section: \"Input Object Field Uniqueness\"\n\nimport { UniqueInputFieldNamesRule } from './rules/UniqueInputFieldNamesRule.mjs'; // Spec Section: \"Operation Name Uniqueness\"\n\nimport { UniqueOperationNamesRule } from './rules/UniqueOperationNamesRule.mjs';\nimport { UniqueOperationTypesRule } from './rules/UniqueOperationTypesRule.mjs';\nimport { UniqueTypeNamesRule } from './rules/UniqueTypeNamesRule.mjs'; // Spec Section: \"Variable Uniqueness\"\n\nimport { UniqueVariableNamesRule } from './rules/UniqueVariableNamesRule.mjs'; // Spec Section: \"Value Type Correctness\"\n\nimport { ValuesOfCorrectTypeRule } from './rules/ValuesOfCorrectTypeRule.mjs'; // Spec Section: \"Variables are Input Types\"\n\nimport { VariablesAreInputTypesRule } from './rules/VariablesAreInputTypesRule.mjs'; // Spec Section: \"All Variable Usages Are Allowed\"\n\nimport { VariablesInAllowedPositionRule } from './rules/VariablesInAllowedPositionRule.mjs';\n\n/**\n * This set includes all validation rules defined by the GraphQL spec.\n *\n * The order of the rules in this list has been adjusted to lead to the\n * most clear output when encountering multiple validation errors.\n */\nexport const specifiedRules = Object.freeze([\n  ExecutableDefinitionsRule,\n  UniqueOperationNamesRule,\n  LoneAnonymousOperationRule,\n  SingleFieldSubscriptionsRule,\n  KnownTypeNamesRule,\n  FragmentsOnCompositeTypesRule,\n  VariablesAreInputTypesRule,\n  ScalarLeafsRule,\n  FieldsOnCorrectTypeRule,\n  UniqueFragmentNamesRule,\n  KnownFragmentNamesRule,\n  NoUnusedFragmentsRule,\n  PossibleFragmentSpreadsRule,\n  NoFragmentCyclesRule,\n  UniqueVariableNamesRule,\n  NoUndefinedVariablesRule,\n  NoUnusedVariablesRule,\n  KnownDirectivesRule,\n  UniqueDirectivesPerLocationRule,\n  KnownArgumentNamesRule,\n  UniqueArgumentNamesRule,\n  ValuesOfCorrectTypeRule,\n  ProvidedRequiredArgumentsRule,\n  VariablesInAllowedPositionRule,\n  OverlappingFieldsCanBeMergedRule,\n  UniqueInputFieldNamesRule,\n]);\n/**\n * @internal\n */\n\nexport const specifiedSDLRules = Object.freeze([\n  LoneSchemaDefinitionRule,\n  UniqueOperationTypesRule,\n  UniqueTypeNamesRule,\n  UniqueEnumValueNamesRule,\n  UniqueFieldDefinitionNamesRule,\n  UniqueArgumentDefinitionNamesRule,\n  UniqueDirectiveNamesRule,\n  KnownTypeNamesRule,\n  KnownDirectivesRule,\n  UniqueDirectivesPerLocationRule,\n  PossibleTypeExtensionsRule,\n  KnownArgumentNamesOnDirectivesRule,\n  UniqueArgumentNamesRule,\n  UniqueInputFieldNamesRule,\n  ProvidedRequiredArgumentsOnDirectivesRule,\n]);\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { GraphQLError } from '../error/GraphQLError.mjs';\nimport { visit, visitInParallel } from '../language/visitor.mjs';\nimport { assertValidSchema } from '../type/validate.mjs';\nimport { TypeInfo, visitWithTypeInfo } from '../utilities/TypeInfo.mjs';\nimport { specifiedRules, specifiedSDLRules } from './specifiedRules.mjs';\nimport {\n  SDLValidationContext,\n  ValidationContext,\n} from './ValidationContext.mjs';\n/**\n * Implements the \"Validation\" section of the spec.\n *\n * Validation runs synchronously, returning an array of encountered errors, or\n * an empty array if no errors were encountered and the document is valid.\n *\n * A list of specific validation rules may be provided. If not provided, the\n * default list of rules defined by the GraphQL specification will be used.\n *\n * Each validation rules is a function which returns a visitor\n * (see the language/visitor API). Visitor methods are expected to return\n * GraphQLErrors, or Arrays of GraphQLErrors when invalid.\n *\n * Validate will stop validation after a `maxErrors` limit has been reached.\n * Attackers can send pathologically invalid queries to induce a DoS attack,\n * so by default `maxErrors` set to 100 errors.\n *\n * Optionally a custom TypeInfo instance may be provided. If not provided, one\n * will be created from the provided schema.\n */\n\nexport function validate(\n  schema,\n  documentAST,\n  rules = specifiedRules,\n  options,\n  /** @deprecated will be removed in 17.0.0 */\n  typeInfo = new TypeInfo(schema),\n) {\n  var _options$maxErrors;\n\n  const maxErrors =\n    (_options$maxErrors =\n      options === null || options === void 0 ? void 0 : options.maxErrors) !==\n      null && _options$maxErrors !== void 0\n      ? _options$maxErrors\n      : 100;\n  documentAST || devAssert(false, 'Must provide document.'); // If the schema used for validation is invalid, throw an error.\n\n  assertValidSchema(schema);\n  const abortObj = Object.freeze({});\n  const errors = [];\n  const context = new ValidationContext(\n    schema,\n    documentAST,\n    typeInfo,\n    (error) => {\n      if (errors.length >= maxErrors) {\n        errors.push(\n          new GraphQLError(\n            'Too many validation errors, error limit reached. Validation aborted.',\n          ),\n        ); // eslint-disable-next-line @typescript-eslint/no-throw-literal\n\n        throw abortObj;\n      }\n\n      errors.push(error);\n    },\n  ); // This uses a specialized visitor which runs multiple visitors in parallel,\n  // while maintaining the visitor skip and break API.\n\n  const visitor = visitInParallel(rules.map((rule) => rule(context))); // Visit the whole document with each instance of all provided rules.\n\n  try {\n    visit(documentAST, visitWithTypeInfo(typeInfo, visitor));\n  } catch (e) {\n    if (e !== abortObj) {\n      throw e;\n    }\n  }\n\n  return errors;\n}\n/**\n * @internal\n */\n\nexport function validateSDL(\n  documentAST,\n  schemaToExtend,\n  rules = specifiedSDLRules,\n) {\n  const errors = [];\n  const context = new SDLValidationContext(\n    documentAST,\n    schemaToExtend,\n    (error) => {\n      errors.push(error);\n    },\n  );\n  const visitors = rules.map((rule) => rule(context));\n  visit(documentAST, visitInParallel(visitors));\n  return errors;\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nexport function assertValidSDL(documentAST) {\n  const errors = validateSDL(documentAST);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n/**\n * Utility function which asserts a SDL document is valid by throwing an error\n * if it is invalid.\n *\n * @internal\n */\n\nexport function assertValidSDLExtension(documentAST, schema) {\n  const errors = validateSDL(documentAST, schema);\n\n  if (errors.length !== 0) {\n    throw new Error(errors.map((error) => error.message).join('\\n\\n'));\n  }\n}\n","export var ListenerType;\n\n(function (ListenerType) {\n  ListenerType[\"mouse\"] = \"mouse\";\n  ListenerType[\"touch\"] = \"touch\";\n  ListenerType[\"keyboard\"] = \"keyboard\";\n})(ListenerType || (ListenerType = {}));","// Used for MouseEvent.buttons (note the s on the end).\nvar MouseButtons = {\n  Left: 1,\n  Right: 2,\n  Center: 4\n}; // Used for e.button (note the lack of an s on the end).\n\nvar MouseButton = {\n  Left: 0,\n  Center: 1,\n  Right: 2\n};\n/**\n * Only touch events and mouse events where the left button is pressed should initiate a drag.\n * @param {MouseEvent | TouchEvent} e The event\n */\n\nexport function eventShouldStartDrag(e) {\n  // For touch events, button will be undefined. If e.button is defined,\n  // then it should be MouseButton.Left.\n  return e.button === undefined || e.button === MouseButton.Left;\n}\n/**\n * Only touch events and mouse events where the left mouse button is no longer held should end a drag.\n * It's possible the user mouse downs with the left mouse button, then mouse down and ups with the right mouse button.\n * We don't want releasing the right mouse button to end the drag.\n * @param {MouseEvent | TouchEvent} e The event\n */\n\nexport function eventShouldEndDrag(e) {\n  // Touch events will have buttons be undefined, while mouse events will have e.buttons's left button\n  // bit field unset if the left mouse button has been released\n  return e.buttons === undefined || (e.buttons & MouseButtons.Left) === 0;\n}\nexport function isTouchEvent(e) {\n  return !!e.targetTouches;\n}","import { isTouchEvent } from './predicates';\nvar ELEMENT_NODE = 1;\nexport function getNodeClientOffset(node) {\n  var el = node.nodeType === ELEMENT_NODE ? node : node.parentElement;\n\n  if (!el) {\n    return undefined;\n  }\n\n  var _el$getBoundingClient = el.getBoundingClientRect(),\n      top = _el$getBoundingClient.top,\n      left = _el$getBoundingClient.left;\n\n  return {\n    x: left,\n    y: top\n  };\n}\nexport function getEventClientTouchOffset(e) {\n  if (e.targetTouches.length === 1) {\n    return getEventClientOffset(e.targetTouches[0]);\n  }\n}\nexport function getEventClientOffset(e) {\n  if (isTouchEvent(e)) {\n    return getEventClientTouchOffset(e);\n  } else {\n    return {\n      x: e.clientX,\n      y: e.clientY\n    };\n  }\n}","var supportsPassive = function () {\n  // simular to jQuery's test\n  var supported = false;\n\n  try {\n    addEventListener('test', function () {}, Object.defineProperty({}, 'passive', {\n      get: function get() {\n        supported = true;\n        return true;\n      }\n    }));\n  } catch (e) {// do nothing\n  }\n\n  return supported;\n}();\n\nexport default supportsPassive;","function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nexport var OptionsReader =\n/*#__PURE__*/\nfunction () {\n  function OptionsReader(incoming, context) {\n    var _this = this;\n\n    _classCallCheck(this, OptionsReader);\n\n    this.enableTouchEvents = true;\n    this.enableMouseEvents = false;\n    this.enableKeyboardEvents = false;\n    this.ignoreContextMenu = false;\n    this.enableHoverOutsideTarget = false;\n    this.touchSlop = 0;\n    this.scrollAngleRanges = undefined;\n    this.context = context;\n    this.delayTouchStart = incoming.delayTouchStart || incoming.delay || 0;\n    this.delayMouseStart = incoming.delayMouseStart || incoming.delay || 0;\n    Object.keys(incoming).forEach(function (key) {\n      if (incoming[key] != null) {\n        ;\n        _this[key] = incoming[key];\n      }\n    });\n  }\n\n  _createClass(OptionsReader, [{\n    key: \"window\",\n    get: function get() {\n      if (this.context && this.context.window) {\n        return this.context.window;\n      } else if (typeof window !== 'undefined') {\n        return window;\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"document\",\n    get: function get() {\n      if (this.window) {\n        return this.window.document;\n      }\n\n      return undefined;\n    }\n  }]);\n\n  return OptionsReader;\n}();","var _eventNames;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport invariant from 'invariant';\nimport { ListenerType } from './interfaces';\nimport { eventShouldStartDrag, eventShouldEndDrag } from './utils/predicates';\nimport { getEventClientOffset, getNodeClientOffset } from './utils/offsets';\nimport { distance, inAngleRanges } from './utils/math';\nimport supportsPassive from './utils/supportsPassive';\nimport { OptionsReader } from './OptionsReader';\nvar eventNames = (_eventNames = {}, _defineProperty(_eventNames, ListenerType.mouse, {\n  start: 'mousedown',\n  move: 'mousemove',\n  end: 'mouseup',\n  contextmenu: 'contextmenu'\n}), _defineProperty(_eventNames, ListenerType.touch, {\n  start: 'touchstart',\n  move: 'touchmove',\n  end: 'touchend'\n}), _defineProperty(_eventNames, ListenerType.keyboard, {\n  keydown: 'keydown'\n}), _eventNames);\n\nvar TouchBackend =\n/*#__PURE__*/\nfunction () {\n  function TouchBackend(manager, context, options) {\n    var _this = this;\n\n    _classCallCheck(this, TouchBackend);\n\n    this.getSourceClientOffset = function (sourceId) {\n      return getNodeClientOffset(_this.sourceNodes[sourceId]);\n    };\n\n    this.handleTopMoveStartCapture = function (e) {\n      if (!eventShouldStartDrag(e)) {\n        return;\n      }\n\n      _this.moveStartSourceIds = [];\n    };\n\n    this.handleMoveStart = function (sourceId) {\n      // Just because we received an event doesn't necessarily mean we need to collect drag sources.\n      // We only collect start collecting drag sources on touch and left mouse events.\n      if (Array.isArray(_this.moveStartSourceIds)) {\n        _this.moveStartSourceIds.unshift(sourceId);\n      }\n    };\n\n    this.handleTopMoveStart = function (e) {\n      if (!eventShouldStartDrag(e)) {\n        return;\n      } // Don't prematurely preventDefault() here since it might:\n      // 1. Mess up scrolling\n      // 2. Mess up long tap (which brings up context menu)\n      // 3. If there's an anchor link as a child, tap won't be triggered on link\n\n\n      var clientOffset = getEventClientOffset(e);\n\n      if (clientOffset) {\n        _this._mouseClientOffset = clientOffset;\n      }\n\n      _this.waitingForDelay = false;\n    };\n\n    this.handleTopMoveStartDelay = function (e) {\n      if (!eventShouldStartDrag(e)) {\n        return;\n      }\n\n      var delay = e.type === eventNames.touch.start ? _this.options.delayTouchStart : _this.options.delayMouseStart;\n      _this.timeout = setTimeout(_this.handleTopMoveStart.bind(_this, e), delay);\n      _this.waitingForDelay = true;\n    };\n\n    this.handleTopMoveCapture = function () {\n      _this.dragOverTargetIds = [];\n    };\n\n    this.handleMove = function (_, targetId) {\n      if (_this.dragOverTargetIds) {\n        _this.dragOverTargetIds.unshift(targetId);\n      }\n    };\n\n    this.handleTopMove = function (e) {\n      if (_this.timeout) {\n        clearTimeout(_this.timeout);\n      }\n\n      if (!_this.document || _this.waitingForDelay) {\n        return;\n      }\n\n      var moveStartSourceIds = _this.moveStartSourceIds,\n          dragOverTargetIds = _this.dragOverTargetIds;\n      var enableHoverOutsideTarget = _this.options.enableHoverOutsideTarget;\n      var clientOffset = getEventClientOffset(e);\n\n      if (!clientOffset) {\n        return;\n      } // If the touch move started as a scroll, or is is between the scroll angles\n\n\n      if (_this._isScrolling || !_this.monitor.isDragging() && inAngleRanges(_this._mouseClientOffset.x || 0, _this._mouseClientOffset.y || 0, clientOffset.x, clientOffset.y, _this.options.scrollAngleRanges)) {\n        _this._isScrolling = true;\n        return;\n      } // If we're not dragging and we've moved a little, that counts as a drag start\n\n\n      if (!_this.monitor.isDragging() && // eslint-disable-next-line no-prototype-builtins\n      _this._mouseClientOffset.hasOwnProperty('x') && moveStartSourceIds && distance(_this._mouseClientOffset.x || 0, _this._mouseClientOffset.y || 0, clientOffset.x, clientOffset.y) > (_this.options.touchSlop ? _this.options.touchSlop : 0)) {\n        _this.moveStartSourceIds = undefined;\n\n        _this.actions.beginDrag(moveStartSourceIds, {\n          clientOffset: _this._mouseClientOffset,\n          getSourceClientOffset: _this.getSourceClientOffset,\n          publishSource: false\n        });\n      }\n\n      if (!_this.monitor.isDragging()) {\n        return;\n      }\n\n      var sourceNode = _this.sourceNodes[_this.monitor.getSourceId()];\n\n      _this.installSourceNodeRemovalObserver(sourceNode);\n\n      _this.actions.publishDragSource();\n\n      e.preventDefault(); // Get the node elements of the hovered DropTargets\n\n      var dragOverTargetNodes = (dragOverTargetIds || []).map(function (key) {\n        return _this.targetNodes[key];\n      }); // Get the a ordered list of nodes that are touched by\n\n      var elementsAtPoint = _this.options.getDropTargetElementsAtPoint ? _this.options.getDropTargetElementsAtPoint(clientOffset.x, clientOffset.y, dragOverTargetNodes) : _this.document.elementsFromPoint(clientOffset.x, clientOffset.y); // Extend list with parents that are not receiving elementsFromPoint events (size 0 elements and svg groups)\n\n      var elementsAtPointExtended = [];\n\n      for (var nodeId in elementsAtPoint) {\n        // eslint-disable-next-line no-prototype-builtins\n        if (!elementsAtPoint.hasOwnProperty(nodeId)) {\n          continue;\n        }\n\n        var currentNode = elementsAtPoint[nodeId];\n        elementsAtPointExtended.push(currentNode);\n\n        while (currentNode) {\n          currentNode = currentNode.parentElement;\n\n          if (elementsAtPointExtended.indexOf(currentNode) === -1) {\n            elementsAtPointExtended.push(currentNode);\n          }\n        }\n      }\n\n      var orderedDragOverTargetIds = elementsAtPointExtended // Filter off nodes that arent a hovered DropTargets nodes\n      .filter(function (node) {\n        return dragOverTargetNodes.indexOf(node) > -1;\n      }) // Map back the nodes elements to targetIds\n      .map(function (node) {\n        for (var targetId in _this.targetNodes) {\n          if (node === _this.targetNodes[targetId]) {\n            return targetId;\n          }\n        }\n\n        return undefined;\n      }) // Filter off possible null rows\n      .filter(function (node) {\n        return !!node;\n      }).filter(function (id, index, ids) {\n        return ids.indexOf(id) === index;\n      }); // Invoke hover for drop targets when source node is still over and pointer is outside\n\n      if (enableHoverOutsideTarget) {\n        for (var targetId in _this.targetNodes) {\n          if (_this.targetNodes[targetId] && _this.targetNodes[targetId].contains(sourceNode) && orderedDragOverTargetIds.indexOf(targetId) === -1) {\n            orderedDragOverTargetIds.unshift(targetId);\n            break;\n          }\n        }\n      } // Reverse order because dnd-core reverse it before calling the DropTarget drop methods\n\n\n      orderedDragOverTargetIds.reverse();\n\n      _this.actions.hover(orderedDragOverTargetIds, {\n        clientOffset: clientOffset\n      });\n    };\n\n    this.handleTopMoveEndCapture = function (e) {\n      _this._isScrolling = false;\n\n      if (!eventShouldEndDrag(e)) {\n        return;\n      }\n\n      if (!_this.monitor.isDragging() || _this.monitor.didDrop()) {\n        _this.moveStartSourceIds = undefined;\n        return;\n      }\n\n      e.preventDefault();\n      _this._mouseClientOffset = {};\n\n      _this.uninstallSourceNodeRemovalObserver();\n\n      _this.actions.drop();\n\n      _this.actions.endDrag();\n    };\n\n    this.handleCancelOnEscape = function (e) {\n      if (e.key === 'Escape' && _this.monitor.isDragging()) {\n        _this._mouseClientOffset = {};\n\n        _this.uninstallSourceNodeRemovalObserver();\n\n        _this.actions.endDrag();\n      }\n    };\n\n    this.options = new OptionsReader(options, context);\n    this.actions = manager.getActions();\n    this.monitor = manager.getMonitor();\n    this.sourceNodes = {};\n    this.sourcePreviewNodes = {};\n    this.sourcePreviewNodeOptions = {};\n    this.targetNodes = {};\n    this.listenerTypes = [];\n    this._mouseClientOffset = {};\n    this._isScrolling = false;\n\n    if (this.options.enableMouseEvents) {\n      this.listenerTypes.push(ListenerType.mouse);\n    }\n\n    if (this.options.enableTouchEvents) {\n      this.listenerTypes.push(ListenerType.touch);\n    }\n\n    if (this.options.enableKeyboardEvents) {\n      this.listenerTypes.push(ListenerType.keyboard);\n    }\n  } // public for test\n\n\n  _createClass(TouchBackend, [{\n    key: \"setup\",\n    value: function setup() {\n      if (!this.window) {\n        return;\n      }\n\n      invariant(!TouchBackend.isSetUp, 'Cannot have two Touch backends at the same time.');\n      TouchBackend.isSetUp = true;\n      this.addEventListener(this.window, 'start', this.getTopMoveStartHandler());\n      this.addEventListener(this.window, 'start', this.handleTopMoveStartCapture, true);\n      this.addEventListener(this.window, 'move', this.handleTopMove);\n      this.addEventListener(this.window, 'move', this.handleTopMoveCapture, true);\n      this.addEventListener(this.window, 'end', this.handleTopMoveEndCapture, true);\n\n      if (this.options.enableMouseEvents && !this.options.ignoreContextMenu) {\n        this.addEventListener(this.window, 'contextmenu', this.handleTopMoveEndCapture);\n      }\n\n      if (this.options.enableKeyboardEvents) {\n        this.addEventListener(this.window, 'keydown', this.handleCancelOnEscape, true);\n      }\n    }\n  }, {\n    key: \"teardown\",\n    value: function teardown() {\n      if (!this.window) {\n        return;\n      }\n\n      TouchBackend.isSetUp = false;\n      this._mouseClientOffset = {};\n      this.removeEventListener(this.window, 'start', this.handleTopMoveStartCapture, true);\n      this.removeEventListener(this.window, 'start', this.handleTopMoveStart);\n      this.removeEventListener(this.window, 'move', this.handleTopMoveCapture, true);\n      this.removeEventListener(this.window, 'move', this.handleTopMove);\n      this.removeEventListener(this.window, 'end', this.handleTopMoveEndCapture, true);\n\n      if (this.options.enableMouseEvents && !this.options.ignoreContextMenu) {\n        this.removeEventListener(this.window, 'contextmenu', this.handleTopMoveEndCapture);\n      }\n\n      if (this.options.enableKeyboardEvents) {\n        this.removeEventListener(this.window, 'keydown', this.handleCancelOnEscape, true);\n      }\n\n      this.uninstallSourceNodeRemovalObserver();\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(subject, event, handler, capture) {\n      var options = supportsPassive ? {\n        capture: capture,\n        passive: false\n      } : capture;\n      this.listenerTypes.forEach(function (listenerType) {\n        var evt = eventNames[listenerType][event];\n\n        if (evt) {\n          subject.addEventListener(evt, handler, options);\n        }\n      });\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(subject, event, handler, capture) {\n      var options = supportsPassive ? {\n        capture: capture,\n        passive: false\n      } : capture;\n      this.listenerTypes.forEach(function (listenerType) {\n        var evt = eventNames[listenerType][event];\n\n        if (evt) {\n          subject.removeEventListener(evt, handler, options);\n        }\n      });\n    }\n  }, {\n    key: \"connectDragSource\",\n    value: function connectDragSource(sourceId, node) {\n      var _this2 = this;\n\n      var handleMoveStart = this.handleMoveStart.bind(this, sourceId);\n      this.sourceNodes[sourceId] = node;\n      this.addEventListener(node, 'start', handleMoveStart);\n      return function () {\n        delete _this2.sourceNodes[sourceId];\n\n        _this2.removeEventListener(node, 'start', handleMoveStart);\n      };\n    }\n  }, {\n    key: \"connectDragPreview\",\n    value: function connectDragPreview(sourceId, node, options) {\n      var _this3 = this;\n\n      this.sourcePreviewNodeOptions[sourceId] = options;\n      this.sourcePreviewNodes[sourceId] = node;\n      return function () {\n        delete _this3.sourcePreviewNodes[sourceId];\n        delete _this3.sourcePreviewNodeOptions[sourceId];\n      };\n    }\n  }, {\n    key: \"connectDropTarget\",\n    value: function connectDropTarget(targetId, node) {\n      var _this4 = this;\n\n      if (!this.document) {\n        return function () {\n          return null;\n        };\n      }\n\n      var handleMove = function handleMove(e) {\n        if (!_this4.document || !_this4.monitor.isDragging()) {\n          return;\n        }\n\n        var coords;\n        /**\n         * Grab the coordinates for the current mouse/touch position\n         */\n\n        switch (e.type) {\n          case eventNames.mouse.move:\n            coords = {\n              x: e.clientX,\n              y: e.clientY\n            };\n            break;\n\n          case eventNames.touch.move:\n            coords = {\n              x: e.touches[0].clientX,\n              y: e.touches[0].clientY\n            };\n            break;\n        }\n        /**\n         * Use the coordinates to grab the element the drag ended on.\n         * If the element is the same as the target node (or any of it's children) then we have hit a drop target and can handle the move.\n         */\n\n\n        var droppedOn = coords != null ? _this4.document.elementFromPoint(coords.x, coords.y) : undefined;\n        var childMatch = droppedOn && node.contains(droppedOn);\n\n        if (droppedOn === node || childMatch) {\n          return _this4.handleMove(e, targetId);\n        }\n      };\n      /**\n       * Attaching the event listener to the body so that touchmove will work while dragging over multiple target elements.\n       */\n\n\n      this.addEventListener(this.document.body, 'move', handleMove);\n      this.targetNodes[targetId] = node;\n      return function () {\n        if (_this4.document) {\n          delete _this4.targetNodes[targetId];\n\n          _this4.removeEventListener(_this4.document.body, 'move', handleMove);\n        }\n      };\n    }\n  }, {\n    key: \"getTopMoveStartHandler\",\n    value: function getTopMoveStartHandler() {\n      if (!this.options.delayTouchStart && !this.options.delayMouseStart) {\n        return this.handleTopMoveStart;\n      }\n\n      return this.handleTopMoveStartDelay;\n    }\n  }, {\n    key: \"installSourceNodeRemovalObserver\",\n    value: function installSourceNodeRemovalObserver(node) {\n      var _this5 = this;\n\n      this.uninstallSourceNodeRemovalObserver();\n      this.draggedSourceNode = node;\n      this.draggedSourceNodeRemovalObserver = new MutationObserver(function () {\n        if (node && !node.parentElement) {\n          _this5.resurrectSourceNode();\n\n          _this5.uninstallSourceNodeRemovalObserver();\n        }\n      });\n\n      if (!node || !node.parentElement) {\n        return;\n      }\n\n      this.draggedSourceNodeRemovalObserver.observe(node.parentElement, {\n        childList: true\n      });\n    }\n  }, {\n    key: \"resurrectSourceNode\",\n    value: function resurrectSourceNode() {\n      if (this.document && this.draggedSourceNode) {\n        this.draggedSourceNode.style.display = 'none';\n        this.draggedSourceNode.removeAttribute('data-reactid');\n        this.document.body.appendChild(this.draggedSourceNode);\n      }\n    }\n  }, {\n    key: \"uninstallSourceNodeRemovalObserver\",\n    value: function uninstallSourceNodeRemovalObserver() {\n      if (this.draggedSourceNodeRemovalObserver) {\n        this.draggedSourceNodeRemovalObserver.disconnect();\n      }\n\n      this.draggedSourceNodeRemovalObserver = undefined;\n      this.draggedSourceNode = undefined;\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      return this.options.window;\n    } // public for test\n\n  }, {\n    key: \"document\",\n    get: function get() {\n      if (this.window) {\n        return this.window.document;\n      }\n\n      return undefined;\n    }\n  }]);\n\n  return TouchBackend;\n}();\n\nexport { TouchBackend as default };","export function distance(x1, y1, x2, y2) {\n  return Math.sqrt(Math.pow(Math.abs(x2 - x1), 2) + Math.pow(Math.abs(y2 - y1), 2));\n}\nexport function inAngleRanges(x1, y1, x2, y2, angleRanges) {\n  if (!angleRanges) {\n    return false;\n  }\n\n  var angle = Math.atan2(y2 - y1, x2 - x1) * 180 / Math.PI + 180;\n\n  for (var i = 0; i < angleRanges.length; ++i) {\n    if ((angleRanges[i].start == null || angle >= angleRanges[i].start) && (angleRanges[i].end == null || angle <= angleRanges[i].end)) {\n      return true;\n    }\n  }\n\n  return false;\n}","import TouchBackend from './TouchBackend';\n\nvar createTouchBackendFactory = function createTouchBackendFactory(manager, context) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return new TouchBackend(manager, context, options);\n};\n\nexport default createTouchBackendFactory;"],"names":["StyleSheet","options","this","isSpeedy","undefined","speedy","tags","ctr","nonce","key","container","before","_proto","prototype","insert","rule","_tag","tag","document","createElement","setAttribute","appendChild","createTextNode","createStyleElement","length","nextSibling","insertBefore","push","sheet","i","styleSheets","ownerNode","sheetForTag","isImportRule","charCodeAt","insertRule","cssRules","e","process","flush","forEach","parentNode","removeChild","delimiter","toSheet","block","Sheet","current","ruleSheet","context","content","selectors","parents","line","column","ns","depth","at","split","stylisOptions","prefix","stylis","Stylis","inserted","head","_insert","nodes","querySelectorAll","Array","call","node","getAttribute","id","use","stylisPlugins","selector","serialized","shouldCache","name","styles","cache","registered","getRegisteredStyles","registeredStyles","classNames","rawClassName","className","insertStyles","isStringTag","next","EmotionCacheContext","createContext","HTMLElement","createCache","ThemeContext","withEmotionCache","Provider","func","forwardRef","props","ref","Consumer","typePropName","hasOwnProperty","Object","render","theme","cssProp","css","type","serializeStyles","newProps","Emotion","jsx","args","arguments","apply","argsLength","createElementArgArray","keyframes","insertable","anim","toString","classnames","len","cls","arg","toAdd","isArray","k","merge","ClassNames","_len","_key","cx","_len2","_key2","ele","children","str","h","hyphenateRegex","animationRegex","isCustomProperty","property","isProcessableValue","value","processStyleName","fn","memoize","styleName","replace","toLowerCase","processStyleValue","match","p1","p2","cursor","unitless","handleInterpolation","mergedProps","interpolation","couldBeSelectorInterpolation","__emotion_styles","obj","string","interpolated","_i","createStringFromObject","previousCursor","result","cached","labelPattern","stringMode","strings","raw","lastIndex","identifierName","exec","hashString","codemirror_1","__importDefault","require","graphql_language_service_1","default","registerHelper","editor","schema","cur","getCursor","token","getTokenAt","tokenStart","test","start","end","position","Position","results","list","getAutocompleteSuggestions","getValue","externalFragments","map","item","text","label","description","documentation","isDeprecated","deprecationReason","from","ch","to","Pos","signal","graphql_1","getTypeInfo_1","SchemaReference_1","renderQualifiedField","into","typeInfo","fieldName","_a","fieldDef","slice","renderType","parentType","getFieldReference","renderDirective","directiveDef","getDirectiveReference","renderTypeAnnotation","t","GraphQLNonNull","ofType","GraphQLList","getTypeReference","renderDescription","def","descriptionDiv","innerHTML","reason","deprecationDiv","firstChild","renderDeprecation","onClick","onClick_1","href","addEventListener","state","kind","step","renderField","argDef","getArgumentReference","inputType","renderArg","enumValue","getEnumValueReference","renderEnumValue","mode_factory_1","defineMode","isMetaField","exports","field","directive","argument","getNamedType","stack","reverseStateStack","prevState","introspection_1","forEachState_1","getFieldDef","SchemaMetaFieldDef","getQueryType","TypeMetaFieldDef","TypeNameMetaFieldDef","isCompositeType","getFields","tokenState","info","argDefs","objectFieldDefs","getMutationType","getSubscriptionType","getType","getDirective","parentDef","_b","enumType","GraphQLEnumType","array","predicate","find","getValues","val","nullableType","getNullableType","objectType","GraphQLInputObjectType","objectField","onMouseOver","cm","target","srcElement","nodeName","hoverTimeout","box","getBoundingClientRect","onMouseMove","clearTimeout","setTimeout","onHover","hoverTime","onMouseOut","off","getWrapperElement","pos","coordsChar","left","right","top","bottom","getHelper","popup","body","popupBox","popupStyle","window","getComputedStyle","popupWidth","parseFloat","marginLeft","marginRight","popupHeight","marginTop","marginBottom","topPos","innerHeight","popupTimeout","leftPos","Math","max","innerWidth","style","opacity","onMouseOverPopup","hidePopup","on","showPopup","onMouseHover","getHoverTime","defineOption","old","Init","oldOnMouseOver","Function","createState","bind","event","jump","isHoldingModifier","enableJumpMode","marker","disableJumpMode","onKeyDown","isMac","clickEvent","destination","onMouseDown","_","downEvent","codemirrorIgnore","onKeyUp","upEvent","code","oldOnMouseOut","navigator","appVersion","indexOf","getDestination","markText","clear","mode_indent_1","config","parser","onlineParser","eatWhitespace","stream","eatWhile","isIgnored","lexRules","LexRules","parseRules","ParseRules","editorConfig","tabSize","startState","indent","electricInput","fold","lineComment","closeBrackets","pairs","explode","textAfter","levels","indentLevel","indentUnit","getDefinitionState","definitionState","forEachState","objectValues","object","keys","values","hintList","filterNonEmpty","entry","proximity","getProximity","normalizeText","pair","sort","a","b","filterAndSortList","filtered","filter","suggestion","j","d","aLength","bLength","cost","min","lexicalDistance","integer","uinteger","Range","Location","LocationLink","Color","ColorInformation","ColorPresentation","FoldingRangeKind","FoldingRange","DiagnosticRelatedInformation","DiagnosticSeverity","DiagnosticTag","CodeDescription","Diagnostic","Command","TextEdit","ChangeAnnotation","ChangeAnnotationIdentifier","AnnotatedTextEdit","TextDocumentEdit","CreateFile","RenameFile","DeleteFile","WorkspaceEdit","MIN_VALUE","MAX_VALUE","create","character","Number","is","candidate","Is","objectLiteral","one","two","three","four","Error","uri","range","defined","targetUri","targetRange","targetSelectionRange","originSelectionRange","red","green","blue","alpha","numberRange","color","textEdit","additionalTextEdits","typedArray","startLine","endLine","startCharacter","endCharacter","location","message","Warning","Information","Hint","Unnecessary","Deprecated","severity","source","relatedInformation","number","codeDescription","title","command","newText","del","needsConfirmation","boolean","annotation","annotationId","textDocument","edits","OptionalVersionedTextDocumentIdentifier","overwrite","ignoreIfExists","oldUri","newUri","recursive","ignoreIfNotExists","changes","documentChanges","every","change","TextDocumentIdentifier","VersionedTextDocumentIdentifier","TextDocumentItem","MarkupKind","MarkupContent","CompletionItemKind","InsertTextFormat","CompletionItemTag","InsertReplaceEdit","InsertTextMode","CompletionItem","CompletionList","MarkedString","Hover","ParameterInformation","SignatureInformation","DocumentHighlightKind","DocumentHighlight","SymbolKind","SymbolTag","SymbolInformation","DocumentSymbol","CodeActionKind","CodeActionContext","CodeAction","CodeLens","FormattingOptions","DocumentLink","SelectionRange","TextEditChangeImpl","changeAnnotations","edit","assertChangeAnnotations","manage","delete","add","all","splice","ChangeAnnotations","annotations","_annotations","_counter","_size","defineProperty","get","enumerable","configurable","idOrAnnotation","nextId","WorkspaceChange","workspaceEdit","_this","_textEditChanges","_workspaceEdit","_changeAnnotations","textEditChange","initDocumentChanges","size","getTextEditChange","version","textDocumentEdit","initChanges","createFile","optionsOrAnnotation","operation","renameFile","deleteFile","languageId","PlainText","Markdown","Text","Method","Constructor","Field","Variable","Class","Interface","Module","Property","Unit","Value","Enum","Keyword","Snippet","File","Reference","Folder","EnumMember","Constant","Struct","Event","Operator","TypeParameter","asIs","adjustIndentation","items","isIncomplete","fromPlainText","plainText","language","contents","parameters","Read","Write","Namespace","Package","String","Boolean","Key","Null","containerName","detail","selectionRange","deprecated","Empty","QuickFix","Refactor","RefactorExtract","RefactorInline","RefactorRewrite","Source","SourceOrganizeImports","SourceFixAll","diagnostics","only","kindOrCommandOrEdit","checkKind","isPreferred","data","insertSpaces","parent","TextDocument","mergeSort","compare","p","leftIdx","rightIdx","ret","FullTextDocument","lineCount","getText","positionAt","offsetAt","applyEdits","sortedEdits","diff","lastModifiedOffset","startOffset","endOffset","substring","_uri","_languageId","_version","_content","_lineOffsets","update","getLineOffsets","lineOffsets","isLineStart","charAt","offset","low","high","mid","floor","lineOffset","nextLineOffset","check","CharacterStream","sourceText","_classCallCheck","getStartOfToken","_start","getCurrentPosition","_pos","eol","_sourceText","sol","peek","char","eat","pattern","_testNextCharacter","isMatched","didEat","eatSpace","skipToEnd","skipTo","consume","caseFold","regex","RegExp","substr","startsWith","backUp","num","indentation","whitespaces","_createClass","opt","ofRule","separator","isList","Name","Punctuation","Comment","Document","Definition","Kind","FRAGMENT_DEFINITION","ShortQuery","Query","word","Mutation","Subscription","VariableDefinitions","VariableDefinition","DefaultValue","SelectionSet","Selection","AliasedField","Arguments","Argument","FragmentSpread","InlineFragment","FragmentDefinition","exclusions","ruleMatch","exclusion","butNot","TypeCondition","NumberValue","StringValue","inBlockstring","endsWith","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Type","ListType","NonNullType","NamedType","Directive","DirectiveDef","InterfaceDef","Implements","DirectiveLocation","SchemaDef","OperationTypeDef","ScalarDef","ObjectTypeDef","FieldDef","ArgumentsDef","InputValueDef","UnionDef","UnionMember","EnumDef","EnumValueDef","InputDef","ExtendDef","initialState","level","needsSeperator","pushRule","DOCUMENT","getToken","popRule","needsAdvance","advanceRule","kinds","lex","SpecialParseRules","backupState","assign","concat","expected","unsuccessful","Invalid","rules","ruleKind","TypeError","successful","RuleKinds","ALIASED_FIELD","ARGUMENTS","SHORT_QUERY","QUERY","MUTATION","SUBSCRIPTION","TYPE_CONDITION","INVALID","COMMENT","SCHEMA_DEF","SCALAR_DEF","OBJECT_TYPE_DEF","OBJECT_VALUE","LIST_VALUE","INTERFACE_DEF","UNION_DEF","ENUM_DEF","ENUM_VALUE","FIELD_DEF","INPUT_DEF","INPUT_VALUE_DEF","ARGUMENTS_DEF","EXTEND_DEF","DIRECTIVE_DEF","IMPLEMENTS","VARIABLE_DEFINITIONS","TYPE","SuggestionCommand","queryText","contextToken","fragmentDefs","opts","getTokenAtPosition","getTypeInfo","NAMED_TYPE","documentText","schemaInterfaces","getTypeMap","isInterfaceType","schemaInterfaceNames","_ref","inlineInterfaces","Set","runOnlineParser","includes","interfaceDef","getInterfaces","_ref2","interfaceConfig","_c","toConfig","GraphQLInterfaceType","interfaces","_toConsumableArray","fields","objectTypeDef","_d","_ref3","objectTypeConfig","_e","GraphQLObjectType","currentTypeToExtend","siblingInterfaceNames","_ref4","possibleInterfaces","_ref5","getSuggestionsForImplements","SELECTION_SET","FIELD","index","sortText","insertText","insertSuffix","isListType","isNonNullType","getInsertText","insertTextFormat","getSuggestionsForFieldNames","ARGUMENT","OBJECT_FIELD","objectFields","completionKind","namedInputType","queryVariables","getVariableCompletions","v","GraphQLBoolean","getSuggestionsForInputValues","VARIABLE","_kind","possibleTypes","isAbstractType","abstractType","assertAbstractType","possibleObjTypes","getPossibleTypes","possibleIfaceMap","iface","namedType","getSuggestionsForFragmentTypeConditions","FRAGMENT_SPREAD","typeMap","defState","fragments","getFragmentDefinitions","relevantFrags","frag","typeCondition","doTypesOverlap","getSuggestionsForFragmentSpread","op","visit","parse","collectFragmentDefs","VARIABLE_DEFINITION","LIST_TYPE","NON_NULL_TYPE","inputTypes","isInputType","getSuggestionsForVariableDefinition","DIRECTIVE","getDirectives","canUseDirective","getSuggestionsForDirective","variableType","variableName","definitions","parentDefinition","_f","_k","_j","_h","_g","getParentDefinition","NAME","selectionSet","selections","styleAtCursor","stateAtCursor","stringAtCursor","callback","lines","locations","INLINE_FRAGMENT","SCHEMA","SCALAR","OBJECT","FIELD_DEFINITION","INTERFACE","UNION","ENUM","INPUT_OBJECT","ARGUMENT_DEFINITION","INPUT_FIELD_DEFINITION","getFragmentDependencies","operationString","fragmentDefinitions","parsedOperation","error","getFragmentDependenciesForAST","existingFrags","Map","referencedFragNames","set","has","asts","nullthrows","referencedFragments","ast","renderTypeToString","useMarkdown","join","scalarTypesMap","Int","Float","ID","DateTime","getJSONSchemaFromGraphQLType","required","definition","defaultValue","isEnumType","enum","isScalarType","_getJSONSchemaFromGra","defs","$ref","defName","_getJSONSchemaFromGra2","isInputObjectType","properties","useMarkdownDescription","markdownDescription","_getJSONSchemaFromGra3","fieldRequired","typeDefinition","typeDefinitions","fieldDefinition","renderedField","renderedFieldMarkdown","getVariablesJSONSchema","variableToType","jsonSchema","$schema","entries","_slicedToArray","_getJSONSchemaFromGra5","getASTNodeAtPosition","query","point","nodeContainingPosition","pointToOffset","enter","loc","leave","linesUntilPosition","reduce","containsPosition","_this2","lessThanOrEqualTo","offsetToPosition","buf","lastLineIndex","lastIndexOf","specifiedSDLRules","LoneSchemaDefinitionRule","UniqueOperationTypesRule","UniqueTypeNamesRule","UniqueEnumValueNamesRule","UniqueFieldDefinitionNamesRule","UniqueDirectiveNamesRule","KnownTypeNamesRule","KnownDirectivesRule","UniqueDirectivesPerLocationRule","PossibleTypeExtensionsRule","UniqueArgumentNamesRule","UniqueInputFieldNamesRule","validateWithCustomRules","customRules","isRelayCompatMode","isSchemaDocument","specifiedRules","NoUnusedFragmentsRule","ExecutableDefinitionsRule","KnownFragmentNamesRule","validate","collectVariables","documentAST","variableDefinitions","variable","typeFromAST","GraphQLFloat","getOperationASTFacts","operations","OperationDefinition","getOperationFacts","documentString","getQueryFacts","LANGUAGE","assert","getRange","locToRange","getPosition","getDefinitionQueryResultForNamedType","dependencies","defNodes","_context","getDefinitionForNodeDefinition","filePath","abrupt","queryRange","stop","_callee","getDefinitionQueryResultForField","typeName","_context2","getDefinitionForFieldDefinition","_callee2","getDefinitionQueryResultForFragmentSpread","fragment","_context3","_ref6","getDefinitionForFragmentDefinition","_callee3","getDefinitionQueryResultForDefinitionNode","path","projectRoot","SEVERITY","DIAGNOSTIC_SEVERITY","_DIAGNOSTIC_SEVERITY","_defineProperty","invariant","condition","getDiagnostics","agg","print","GraphQLError","validateQuery","validationErrorAnnotations","mapCat","deprecationWarningAnnotations","NoDeprecatedCustomRule","mapper","highlightedNodes","highlightNode","highlightLoc","getLocation","getOutline","visitorFns","docText","meta","representativeName","startPosition","endPosition","tokenizedText","alias","buildToken","arr","res","x","concatMap","child","InterfaceTypeDefinition","EnumTypeDefinition","EnumValueDefinition","ObjectTypeDefinition","InputObjectTypeDefinition","InputValueDefinition","FieldDefinition","outlineTreeConverter","outlineTrees","getHoverInformation","renderMdCodeStart","renderMdCodeEnd","trim","_options","FileChangeTypeKind","Created","Changed","Deleted","module","setter","iteratee","accumulator","baseEach","collection","arrayAggregator","baseAggregator","baseIteratee","initializer","baseAssignValue","keyBy","createAggregator","framesToPop","_extends","defineProperties","descriptor","writable","protoProps","staticProps","_react","_react2","_interopRequireDefault","_propTypes2","__esModule","sizerStyle","visibility","height","overflow","whiteSpace","INPUT_PROPS_BLACKLIST","copyStyles","fontSize","fontFamily","fontWeight","fontStyle","letterSpacing","textTransform","isIE","userAgent","generateId","random","AutosizeInput","_Component","instance","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","inputRef","el","input","placeHolderSizerRef","placeHolderSizer","sizerRef","sizer","inputWidth","minWidth","inputId","subClass","superClass","constructor","setPrototypeOf","_inherits","mounted","copyInputStyles","updateInputWidth","nextProps","setState","prevProps","onAutosize","inputStyles","scrollWidth","newInputWidth","placeholder","placeholderIsMinWidth","extraWidth","parseInt","focus","blur","select","injectStyles","dangerouslySetInnerHTML","__html","sizerValue","previousValue","currentValue","wrapperStyle","display","inputStyle","boxSizing","width","inputProps","_objectWithoutProperties","cleanInputProps","inputClassName","renderStyles","Component","propTypes","any","oneOfType","bool","onChange","defaultProps","createClassNames","DefaultHitComponent","React","borderBottom","paddingBottom","wordBreak","JSON","stringify","Hits","hits","_ref$className","_ref$hitComponent","hitComponent","HitComponent","hit","objectID","HitPropTypes","PropTypes","isRequired","connectHits","createConnector","displayName","getProvidedProps","hostname","url","AlgoliaLogo","xmlns","baseProfile","viewBox","x1","x2","y1","y2","gradientUnits","gradientTransform","stopColor","fill","PoweredBy","_getPrototypeOf","_this$props","translate","rel","connectPoweredBy","translatable","searchBy","connectSearchBox","SearchBox","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","ownKeys","enumerableOnly","symbols","sym","getOwnPropertyDescriptor","_objectSpread","getOwnPropertyDescriptors","breakpointCols","columnClassName","columnAttrs","Masonry","_React$Component","_super","_createSuper","columnCount","reCalculateColumnCount","_assertThisInitialized","reCalculateColumnCountDebounce","removeEventListener","requestAnimationFrame","cancelAnimationFrame","_lastRecalculateAnimationFrame","windowWidth","Infinity","breakpointColsObject","matchedBreakpoint","columns","breakpoint","optBreakpoint","currentColumnCount","itemsInColumns","toArray","columnIndex","_this$props2","_this$props2$columnAt","childrenInColumns","columnWidth","logDeprecated","columnAttributes","console","rest","classNameOutput","renderColumns","defaultInputValue","defaultMenuIsOpen","SelectComponent","_class","_temp","StateManager","inputValue","menuIsOpen","actionMeta","callProp","onInputChange","newValue","onMenuOpen","onMenuClose","getProp","manageState","Select","noop","applyPrefixToName","cleanValue","isDocumentElement","documentElement","getScrollTop","pageYOffset","scrollTop","scrollTo","getScrollParent","element","excludeStaticParent","overflowRx","docEl","parentElement","overflowY","overflowX","animatedScrollTo","duration","currentTime","animateScroll","scrollIntoView","menuEl","focusedEl","menuRect","focusedRect","overScroll","offsetHeight","offsetTop","clientHeight","scrollHeight","getBoundingClientObj","rect","isTouchCapable","createEvent","isMobileDevice","getIn","empty","form","getFormState","nonNullGetFormState","plain","_interopDefaultLegacy","React__default","ArrowGoBackFillIcon","_ref$color","_ref$size","objectWithoutProperties","ArrowGoBackFillIcon$1","memo","FileAddLineIcon","FileAddLineIcon$1","Layout2LineIcon","Layout2LineIcon$1","Save2LineIcon","Save2LineIcon$1","_objectDestructuringEmpty","ancestor","visitors","baseVisitor","override","ancestors","base","c","st","found","isNew","pop","skipThrough","ignore","_node","_st","Program","BlockStatement","StaticBlock","Statement","EmptyStatement","ExpressionStatement","ParenthesizedExpression","ChainExpression","expression","IfStatement","consequent","alternate","LabeledStatement","BreakStatement","ContinueStatement","WithStatement","SwitchStatement","discriminant","i$1","list$1","cases","cs","SwitchCase","ReturnStatement","YieldExpression","AwaitExpression","ThrowStatement","SpreadElement","TryStatement","handler","finalizer","CatchClause","param","WhileStatement","DoWhileStatement","ForStatement","init","ForInStatement","ForOfStatement","ForInit","DebuggerStatement","FunctionDeclaration","VariableDeclaration","declarations","VariableDeclarator","params","Pattern","VariablePattern","MemberPattern","RestElement","ArrayPattern","elements","elt","ObjectPattern","prop","computed","Expression","ThisExpression","Super","MetaProperty","ArrayExpression","ObjectExpression","FunctionExpression","ArrowFunctionExpression","SequenceExpression","expressions","TemplateLiteral","quasis","TemplateElement","UnaryExpression","UpdateExpression","BinaryExpression","LogicalExpression","AssignmentExpression","AssignmentPattern","ConditionalExpression","NewExpression","CallExpression","callee","MemberExpression","ExportNamedDeclaration","ExportDefaultDeclaration","declaration","ExportAllDeclaration","exported","ImportDeclaration","specifiers","ImportExpression","ImportSpecifier","ImportDefaultSpecifier","ImportNamespaceSpecifier","Identifier","PrivateIdentifier","Literal","TaggedTemplateExpression","quasi","ClassDeclaration","ClassExpression","ClassBody","MethodDefinition","PropertyDefinition","astralIdentifierCodes","astralIdentifierStartCodes","nonASCIIidentifierStartChars","reservedWords","strict","strictBind","ecma5AndLessKeywords","keywords$1","keywordRelationalOperator","nonASCIIidentifierStart","nonASCIIidentifier","isInAstralSet","isIdentifierStart","astral","fromCharCode","isIdentifierChar","TokenType","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","postfix","binop","updateContext","prec","keywords","kw","types$1","regexp","privateId","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","dot","question","questionDot","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","coalesce","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","isNewLine","nextLineBreak","nonASCIIwhitespace","skipWhiteSpace","hasOwn","propName","wordsRegexp","words","codePointToString","loneSurrogate","col","n","SourceLocation","sourceFile","getLineInfo","nextBreak","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowSuperOutsideMethod","allowHashBang","onToken","onComment","ranges","program","directSourceFile","preserveParens","warnedAboutEcmaVersion","getOptions","warn","tokens","startLoc","endLoc","comment","pushComment","SCOPE_CLASS_STATIC_BLOCK","functionFlags","async","generator","Parser","startPos","reserved","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","lineStart","curLine","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","potentialArrowInForAwait","yieldPos","awaitPos","awaitIdentPos","labels","undefinedExports","skipLineComment","scopeStack","enterScope","regexpState","privateNameStack","prototypeAccessors","inFunction","inGenerator","inAsync","canAwait","allowSuper","allowDirectSuper","treatFunctionsAsVar","allowNewDotTarget","inClassStaticBlock","startNode","nextToken","parseTopLevel","currentVarScope","flags","inClassFieldInit","scope","currentThisScope","treatFunctionsAsVarInScope","currentScope","extend","plugins","parseExpressionAt","parseExpression","tokenizer","pp$9","literal","spaceAfter","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","pp$8","stmt","parseStatement","adaptDirectivePrologue","finishNode","loopLabel","switchLabel","isLet","skip","nextCh","ident","isAsyncFunction","after","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseExpressionStatement","parseImport","parseExport","maybeName","parseLabeledStatement","isBreak","parseIdent","lab","parseParenExpression","awaitAt","parseFor","init$1","parseVar","await","parseForIn","startsWithLet","isForOf","toAssignable","checkLValPattern","isAsync","declarationPosition","parseFunction","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","sawDefault","isCase","exitScope","empty$1","clause","parseBindingAtom","simple","label$1","statementStart","createNewLexicalScope","exitStrict","isForIn","parseMaybeAssign","isFor","decl","parseVarId","isPrivateNameConflicted","privateNameMap","curr","static","checkKeyName","statement","allowExpressionBody","forInit","initFunction","checkLValSimple","oldYieldPos","oldAwaitPos","oldAwaitIdentPos","parseFunctionParams","parseFunctionBody","parseBindingList","isStatement","oldStrict","parseClassId","parseClassSuper","enterClassBody","classBody","hadConstructor","parseClassElement","exitClassBody","constructorAllowsSuper","keyName","isGenerator","isStatic","parseClassStaticBlock","isClassElementNameStart","lastValue","startNodeAt","parseClassElementName","isConstructor","allowsDirectSuper","parseClassMethod","parseClassField","parsePrivateIdent","parsePropertyName","method","parseMethod","oldLabels","parseExprSubscripts","declared","used","parseModuleExportName","checkExport","parseExprAtom","fNode","cNode","shouldParseExportStatement","checkVariableExport","parseExportSpecifiers","spec","checkUnreserved","local","checkLocalExport","checkPatternExport","pat","decls","first","parseImportSpecifiers","node$1","node$2","imported","stringLiteral","parseLiteral","statements","isDirectiveCandidate","pp$7","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","isBind","declareName","checkLValInnerPattern","TokContext","isExpr","preserveSpace","types","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$6","curContext","braceIsBlock","prevType","inGeneratorContext","overrideContext","tokenCtx","out","statementParens","allowed","pp$5","isPrivateFieldAccess","checkPropClash","propHash","shorthand","proto","other","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","oldDoubleProto","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","buildBinary","sawUnary","parseAwait","parseSubscripts","noCalls","maybeAsyncArrow","optionalChained","parseSubscript","optional","chainNode","optionalSupported","parseExprList","parseArrowExpression","parseTemplate","isTagged","readRegexp","canBeArrow","parseParenAndDistinguishExpression","parseNew","parseExprImport","parseDynamicImport","parseImportMeta","errorPos","bigint","spreadStart","innerStartPos","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","isImport","parseTemplateElement","cooked","tail","curElt","isAsyncProp","isPattern","parseProperty","parsePropertyValue","copyNode","paramCount","isArrowFunction","isMethod","isExpression","useStrict","checkParams","nonSimple","isSimpleParamList","allowDuplicates","nameHash","liberal","delegate","pp$4","err","SyntaxError","raisedAt","pp$3","Scope","var","lexical","functions","redeclared","scope$2","scope$3","SCOPE_TOP","Node","pp$2","newNode","ecma9BinaryProperties","ecma10BinaryProperties","ecma12BinaryProperties","unicodeBinaryProperties","unicodeGeneralCategoryValues","ecma9ScriptValues","ecma10ScriptValues","ecma11ScriptValues","ecma12ScriptValues","unicodeScriptValues","buildUnicodeData","binary","nonBinary","General_Category","Script","Script_Extensions","gc","sc","scx","pp$1","RegExpValidationState","validFlags","unicodeProperties","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","isSyntaxCharacter","isControlLetter","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","forceU","s","l","nextIndex","lookahead","advance","validateRegExpFlags","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","isRegExpIdentifierStart","isRegExpIdentifierPart","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","isCharacterClassEscape","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","Token","pp","stringToBigInt","BigInt","ignoreEscapeSequenceInKeyword","Symbol","iterator","this$1$1","done","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","finishOp","readToken_mult_modulo_exp","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readToken_question","readToken_numberSign","readWord1","readRadixNumber","readString","escaped","inClass","flagsStart","readInt","radix","maybeLegacyOctalNumericLiteral","allowSeparators","isLegacyOctalNumericLiteral","total","lastCode","startsWithDot","octal","val$1","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","inTemplate","octalStr","escStart","esc","acorn","tokTypes","keywordTypes","tokContexts","toNormalizedOptions","firstArg","positions","originalError","extensions","_Error","_Symbol$toStringTag","_this$nodes","_nodeLocations$","rawArgs","_toNormalizedOptions","undefinedIfEmpty","nodeLocations","originalExtensions","isObjectLike","captureStackTrace","output","_step","_iterator","_createForOfIteratorHelper","printLocation","f","_step2","_iterator2","printSourceLocation","formattedError","_wrapNativeSuper","toStringTag","printError","formatError","toJSON","syntaxError","collectFields","variableValues","runtimeType","collectFieldsImpl","collectSubfields","returnType","fieldNodes","subFieldNodes","visitedFragmentNames","selection","shouldIncludeNode","fieldList","doesFragmentConditionMatch","fragName","getDirectiveValues","GraphQLSkipDirective","if","include","GraphQLIncludeDirective","typeConditionNode","conditionalType","isSubType","getVariableValues","varDefNodes","inputs","errors","maxErrors","coerced","onError","coercedValues","_loop","varDefNode","varName","varType","varTypeStr","valueFromAST","inspect","coerceInputValue","invalidValue","printPathArray","coerceVariableValues","getArgumentValues","_node$arguments","argumentNodes","argNodeMap","keyMap","argType","argumentNode","valueNode","isNull","NULL","coercedValue","_node$directives","directiveNode","directives","versionInfo","freeze","major","minor","patch","preReleaseTag","isPromise","then","NonErrorThrown","thrownValue","locatedError","rawOriginalError","_nodes","cache0","a1","a2","a3","WeakMap","cache1","cache2","fnResult","memoize3","exeContext","_collectSubfields","execute","devAssert","rootValue","assertValidExecutionArguments","buildExecutionContext","executeOperation","buildResponse","executeSync","rawVariableValues","assertValidSchema","_definition$name","_operation$variableDe","contextValue","operationName","fieldResolver","typeResolver","subscribeFieldResolver","OPERATION_DEFINITION","coercedVariableValues","defaultFieldResolver","defaultTypeResolver","rootType","getRootType","rootFields","OperationTypeNode","executeFields","sourceValue","callbackFn","initialValue","resolved","promiseReduce","responseName","fieldPath","addPath","executeField","resolvedResult","executeFieldsSerially","containsPromise","_step2$value","Promise","resolvedValues","resolvedObject","_step$value","_fieldDef$resolve","resolveFn","resolve","buildResolveInfo","completed","completeValue","rawError","handleFieldError","pathToArray","isIterableObject","itemType","completedResults","itemPath","completedItem","completeListValue","isLeafType","serializedResult","serialize","completeLeafValue","_returnType$resolveTy","resolveTypeFn","resolveType","resolvedRuntimeType","completeObjectValue","ensureValidRuntimeType","completeAbstractValue","isObjectType","runtimeTypeName","isTypeOf","resolvedIsTypeOf","invalidReturnTypeError","__typename","promisedIsTypeOfResults","isTypeOfResult","isTypeOfResults","fieldNode","graphql","graphqlImpl","graphqlSync","schemaValidationErrors","validateSchema","validationErrors","isAsyncIterable","maybeAsyncIterable","asyncIterator","mapAsyncIterator","iterable","mapResult","_x","_mapResult","_asyncToGenerator","_regeneratorRuntime","mark","_callee4","wrap","_context4","prev","t0","sent","t1","return","t2","throw","subscribe","_subscribe","resultOrStream","mapSourceToResponse","_args","createSourceEventStream","payload","_x2","_x3","_x4","_x5","_x6","_x7","_x8","_createSourceEventStream","eventStream","executeSubscription","_x9","_executeSubscription","_fieldDef$subscribe","_contextValue","NoSchemaIntrospectionCustomRule","isIntrospectionType","reportError","getIntrospectionQuery","optionsWithDefault","descriptions","specifiedByUrl","directiveIsRepeatable","schemaDescription","inputValueDeprecation","inputDeprecation","getOperationAST","getOperationRootType","queryType","mutationType","subscriptionType","introspectionFromSchema","optionsWithDefaults","buildClientSchema","introspection","__schema","schemaIntrospection","keyValMap","typeIntrospection","TypeKind","scalarIntrospection","GraphQLScalarType","specifiedByURL","objectIntrospection","buildImplementationsList","buildFieldDefMap","interfaceIntrospection","unionIntrospection","unionIntrospectionStr","GraphQLUnionType","getObjectType","buildUnionDef","enumIntrospection","enumValues","enumIntrospectionStr","valueIntrospection","buildEnumDef","inputObjectIntrospection","inputFields","inputObjectIntrospectionStr","buildInputValueDefMap","buildInputObjectDef","typeStr","buildType","_arr","specifiedScalarTypes","introspectionTypes","stdType","directiveIntrospection","directiveIntrospectionStr","GraphQLDirective","isRepeatable","GraphQLSchema","mutation","subscription","assumeValid","typeRef","LIST","itemRef","NON_NULL","nullableRef","assertNullableType","assertObjectType","getInterfaceType","assertInterfaceType","implementingIntrospection","implementingIntrospectionStr","fieldIntrospection","buildField","isOutputType","fieldIntrospectionStr","inputValueIntrospections","buildInputValue","inputValueIntrospection","parseValue","extendSchema","assertSchema","assumeValidSDL","assertValidSDLExtension","schemaConfig","extendedConfig","extendSchemaImpl","_schemaDef","_schemaDef$descriptio","_schemaDef2","_options$assumeValid","schemaDef","typeDefs","typeExtensionsMap","directiveDefs","schemaExtensions","SCHEMA_DEFINITION","SCHEMA_EXTENSION","isTypeDefinitionNode","isTypeExtensionNode","extendedTypeName","existingTypeExtensions","DIRECTIVE_DEFINITION","existingType","extendNamedType","_typeDefs","_stdTypeMap$name","typeNode","stdTypeMap","operationTypes","replaceNamedType","getOperationTypes","mapValue","extendArg","_node$description","repeatable","buildArgumentMap","astNode","extensionASTNodes","replaceType","isSpecifiedScalarType","_typeExtensionsMap$co2","_step3","_iterator3","_getSpecifiedByURL","getSpecifiedByURL","extendScalarType","_typeExtensionsMap$co3","buildInterfaces","extendField","buildFieldMap","extendObjectType","_typeExtensionsMap$co4","extendInterfaceType","isUnionType","_typeExtensionsMap$co5","getTypes","buildUnionTypes","extendUnionType","_typeExtensionsMap$ty","buildEnumValueMap","extendEnumType","_typeExtensionsMap$co","buildInputFieldMap","extendInputObjectType","_step4","opTypes","_iterator4","_node$operationTypes","_step5","operationTypesNodes","_iterator5","operationType","_stdTypeMap$name2","getWrappedType","_step6","fieldConfigMap","_iterator6","_node$fields","_step7","nodeFields","_iterator7","_field$description","getDeprecationReason","_step8","argsNodes","argConfigMap","_iterator8","_arg$description","_step9","inputFieldMap","_iterator9","_node$fields2","_step10","fieldsNodes","_iterator10","_field$description2","_step11","enumValueMap","_iterator11","_node$values","_step12","valuesNodes","_iterator12","_value$description","flatMap","_node$interfaces$map","_node$interfaces","_node$types$map","_node$types","_typeExtensionsMap$na","OBJECT_TYPE_DEFINITION","_astNode$description","allNodes","INTERFACE_TYPE_DEFINITION","_astNode$description2","ENUM_TYPE_DEFINITION","_astNode$description3","UNION_TYPE_DEFINITION","_astNode$description4","SCALAR_TYPE_DEFINITION","_astNode$description5","INPUT_OBJECT_TYPE_DEFINITION","_astNode$description6","GraphQLDeprecatedDirective","specifiedBy","GraphQLSpecifiedByDirective","buildASTSchema","assertValidSDL","specifiedDirectives","stdDirective","buildSchema","noLocation","allowLegacyFragmentVariables","lexicographicSortSchema","sortByName","sortTypes","sortFields","sortObjMap","sortBy","sortArgs","replaceMaybeType","maybeType","fieldsMap","sortValueFn","sortedMap","naturalCompare","mapToKey","obj1","obj2","key1","key2","printSchema","printFilteredSchema","isSpecifiedDirective","isDefinedType","printIntrospectionSchema","directiveFilter","typeFilter","printSchemaDefinition","printDescription","printArgs","printDirective","printType","isSchemaOfCommonNames","scalar","astValue","STRING","printSpecifiedByURL","printScalar","printImplementedInterfaces","printFields","printObject","printInterface","printUnion","printDeprecated","printBlock","printEnum","printInputValue","printInputObject","defaultAST","astFromValue","argDecl","DEFAULT_DEPRECATION_REASON","firstInBlock","blockString","isPrintableAsBlockString","concatAST","documents","doc","separateOperations","depGraph","definitionNode","collectDependencies","separatedDocumentASTs","_operations","fragmentName","collectTransitiveDependencies","collected","fromName","immediateDeps","stripIgnoredCharacters","sourceObj","isSource","lexer","Lexer","strippedBody","wasLastAddedTokenNonPunctuator","TokenKind","EOF","currentToken","tokenKind","isNonPunctuator","isPunctuatorTokenKind","SPREAD","tokenBody","BLOCK_STRING","printBlockString","minimize","assertValidName","isValidNameError","assertName","BreakingChangeType","DangerousChangeType","findBreakingChanges","oldSchema","newSchema","findSchemaChanges","findDangerousChanges","schemaChanges","typesDiff","removed","oldType","TYPE_REMOVED","persisted","_step7$value","newType","findEnumTypeChanges","findUnionTypeChanges","findInputObjectTypeChanges","findFieldChanges","findImplementedInterfacesChanges","TYPE_CHANGED_KIND","typeKindName","findTypeChanges","directivesDiff","oldDirective","DIRECTIVE_REMOVED","newDirective","argsDiff","added","newArg","isRequiredArgument","REQUIRED_DIRECTIVE_ARG_ADDED","oldArg","DIRECTIVE_ARG_REMOVED","DIRECTIVE_REPEATABLE_REMOVED","DIRECTIVE_LOCATION_REMOVED","findDirectiveChanges","fieldsDiff","newField","isRequiredInputField","REQUIRED_INPUT_FIELD_ADDED","OPTIONAL_INPUT_FIELD_ADDED","oldField","FIELD_REMOVED","_step10$value","isChangeSafeForInputObjectFieldOrFieldArg","FIELD_CHANGED_KIND","possibleTypesDiff","newPossibleType","TYPE_ADDED_TO_UNION","oldPossibleType","TYPE_REMOVED_FROM_UNION","_step13","valuesDiff","_iterator13","VALUE_ADDED_TO_ENUM","_step14","_iterator14","oldValue","VALUE_REMOVED_FROM_ENUM","_step15","interfacesDiff","_iterator15","newInterface","IMPLEMENTED_INTERFACE_ADDED","_step16","_iterator16","oldInterface","IMPLEMENTED_INTERFACE_REMOVED","_step17","_iterator17","_step18","_iterator18","_step18$value","findArgChanges","isChangeSafeForObjectOrInterfaceField","_step19","_iterator19","ARG_REMOVED","_step20","_iterator20","_step20$value","ARG_DEFAULT_VALUE_CHANGE","oldValueStr","stringifyValue","newValueStr","ARG_CHANGED_KIND","_step21","_iterator21","REQUIRED_ARG_ADDED","OPTIONAL_ARG_ADDED","isNamedType","sortValueNode","oldArray","newArray","_step22","oldMap","newMap","_iterator22","oldItem","newItem","_step23","_iterator23","typename","flattened","reverse","didYouMean","secondArg","subMessage","suggestions","selected","lastItem","groupBy","keyFn","group","formatValue","seenValues","previouslySeenValues","isJSONable","jsonValue","remaining","formatArray","getObjectTag","formatObject","formatObjectValue","instanceOf","maybeIterable","valFn","_Object$keys","aStr","bStr","aIndex","bIndex","aChar","bChar","isDigit","aNum","DIGIT_0","bNum","isNaN","suggestionList","optionsByDistance","LexicalDistance","threshold","option","distance","measure","distanceDiff","_input","_inputLowerCase","_inputArray","stringToArray","_rows","optionLowerCase","tmp","rows","upRow","currentRow","smallestCell","currentCell","doubleDiagonalCell","strLength","toObjMap","_Object$entries","_Object$entries$_i","startToken","endToken","_Symbol$toStringTag2","QueryDocumentKeys","IntValue","FloatValue","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","UnionTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","kindValues","isNode","maybeNode","maybeKind","dedentBlockStringLines","_firstNonEmptyLine2","commonIndent","MAX_SAFE_INTEGER","firstNonEmptyLine","lastNonEmptyLine","_firstNonEmptyLine","leadingWhitespace","isWhiteSpace","isEmptyLine","hasIndent","hasCommonIndent","seenNonEmptyLine","codePointAt","escapedValue","isSingleLine","forceLeadingNewLine","hasTrailingTripleQuotes","hasTrailingQuote","hasTrailingSlash","forceTrailingNewline","printAsMultipleLines","skipLeadingNewLine","isLetter","isNameStart","isNameContinue","startOfFileToken","SOF","lastToken","readNextToken","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","isUnicodeScalarValue","isSupplementaryCodePoint","isLeadingSurrogate","isTrailingSurrogate","printCodePointAt","fromCodePoint","toUpperCase","padStart","createToken","bodyLength","readComment","readBlockString","readName","firstCode","isFloat","readDigits","FLOAT","INT","escape","readEscapedUnicodeVariableWidth","readEscapedUnicodeFixedWidth","readEscapedCharacter","readHexDigit","read16BitHexCode","trailingCode","currentLine","blockLines","LineRegExp","lastLineStart","matchAll","parseDocument","expectToken","parseValueLiteral","parseConstValue","parseConstValueLiteral","parseType","parseTypeReference","_lexer","many","parseDefinition","parseOperationDefinition","hasDescription","peekDescription","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseFragmentDefinition","parseTypeSystemExtension","parseSelectionSet","parseOperationType","parseName","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","parseVariable","expectOptionalToken","parseConstDirectives","parseSelection","parseFragment","parseField","nameOrAlias","parseArguments","isConst","parseConstArgument","parseArgument","hasTypeCondition","expectOptionalKeyword","parseFragmentName","parseNamedType","_this$_options","expectKeyword","parseList","parseObject","parseStringLiteral","BOOLEAN","parseObjectField","parseDirective","innerType","parseDescription","parseOperationTypeDefinition","OPERATION_TYPE_DEFINITION","parseImplementsInterfaces","parseFieldsDefinition","delimitedMany","parseFieldDefinition","parseArgumentDefs","parseInputValueDef","INPUT_VALUE_DEFINITION","parseUnionMemberTypes","parseEnumValuesDefinition","parseEnumValueDefinition","parseEnumValueName","ENUM_VALUE_DEFINITION","getTokenDesc","parseInputFieldsDefinition","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","parseDirectiveLocations","parseDirectiveLocation","_this$_options2","getTokenKindDesc","atToken","openKind","parseFn","closeKind","delimiterKind","isDefinitionNode","isExecutableDefinitionNode","isTypeSystemDefinitionNode","isTypeSystemExtensionNode","isSelectionNode","isValueNode","isConstValueNode","some","isTypeNode","sourceLocation","firstLineColumnOffset","locationOffset","lineIndex","lineNum","columnOffset","columnNum","locationStr","locationLine","subLineIndex","subLineColumnNum","subLines","printPrefixedLines","subLine","existingLines","padLen","escapedRegExp","escapedReplacer","escapeSequences","printDocASTReducer","varDefs","argsLine","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","hasMultilineItems","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","_ref32","_ref33","_ref34","_ref35","_ref36","_ref37","_ref38","maybeArray","_maybeArray$filter$jo","maybeString","_maybeArray$some","BREAK","root","visitor","visitorKeys","enterLeaveMap","_Object$values","getEnterLeaveForKind","inArray","isLeaving","isEdited","editOffset","editKey","editValue","arrayKey","_node$kind","_enterLeaveMap$get","_enterLeaveMap$get2","visitFn","visitInParallel","skipping","mergedVisitor","_Object$values2","_i2","hasVisitor","enterList","leaveList","_getEnterLeaveForKind","mergedEnterLeave","_enterList$i","_leaveList$i","kindVisitor","getVisitFn","_getEnterLeaveForKind2","assertEnumValueName","identityFunc","isType","assertType","assertScalarType","assertUnionType","assertEnumType","assertInputObjectType","assertListType","assertNonNullType","isWrappingType","assertInputType","assertOutputType","assertLeafType","assertCompositeType","isNullableType","assertWrappingType","assertNamedType","unwrappedType","resolveReadonlyArrayThunk","thunk","resolveObjMapThunk","_Symbol$toStringTag3","_config$parseValue","_config$serialize","_config$parseLiteral","_config$extensionASTN","variables","valueFromASTUntyped","_Symbol$toStringTag4","_config$extensionASTN2","_fields","defineFieldMap","_interfaces","defineInterfaces","fieldsToFieldsConfig","_config$interfaces","fieldMap","isPlainObj","fieldConfig","_fieldConfig$args","argsConfig","defineArguments","argName","argConfig","argsToArgsConfig","_Symbol$toStringTag5","_config$extensionASTN3","_Symbol$toStringTag6","_config$extensionASTN4","_types","defineTypes","_Symbol$toStringTag7","_config$extensionASTN5","valueMap","_values","valueName","valueConfig","_valueLookup","_nameLookup","outputValue","valueStr","didYouMeanEnumValue","_variables","unknownValueStr","allNames","suggestedValues","_Symbol$toStringTag8","_config$extensionASTN6","defineInputFieldMap","isDirective","assertDirective","_config$isRepeatable","_config$args","GraphQLString","__Schema","__Type","__Directive","__DirectiveLocation","__InputValue","includeDeprecated","__TypeKind","__Field","__EnumValue","valueAST","_source","GRAPHQL_MAX_INT","GRAPHQL_MIN_INT","GraphQLInt","serializeObject","isInteger","isFinite","GraphQLID","valueOf","valueOfResult","isSchema","_config$directives","__validationErrors","_queryType","_mutationType","_subscriptionType","_directives","allReferencedTypes","collectReferencedTypes","_typeMap","_subTypeMap","_implementationsMap","implementations","objects","getImplementations","interfaceType","maybeSubType","typeSet","SchemaValidationContext","_getOperationTypeNode","getOperationTypeNode","_getOperationTypeNode2","_getOperationTypeNode3","validateRootTypes","validateName","_arg$astNode","getDeprecatedDirectiveNode","validateDirectives","validateInputObjectCircularRefs","visitedTypes","fieldPathIndexByTypeName","detectCycleRecursive","inputObj","_i5","_fields3","fieldType","cycleIndex","cyclePath","pathStr","fieldObj","createInputObjectCircularRefsValidator","validateFields","validateInterfaces","validateUnionMembers","validateEnumValues","validateInputFields","validateTypes","getErrors","_errors","_flatMap$find","schemaNode","_schemaNode$operation","operationNode","_field$astNode","_arg$astNode2","_arg$astNode3","ifaceTypeNames","getAllImplementsInterfaceNodes","validateTypeImplementsAncestors","validateTypeImplementsInterface","typeFieldMap","_i3","ifaceField","typeField","_ifaceField$astNode","_typeField$astNode","isTypeSubTypeOf","ifaceArg","typeArg","isEqualType","_ifaceArg$astNode","_typeArg$astNode","_loop2","ifaceInterfaces","transitive","union","memberTypes","includedTypeNames","memberType","getUnionMemberTypeNodes","_i4","_fields2","_field$astNode2","_field$astNode3","_typeNode$interfaces","ifaceNode","unionNode","_unionNode$types","_definitionNode$direc","TypeInfo","initialType","getFieldDefFn","_schema","_typeStack","_parentTypeStack","_inputTypeStack","_fieldDefStack","_defaultValueStack","_directive","_argument","_enumValue","_getFieldDef","getParentType","typeConditionAST","outputType","_this$getDirective","fieldOrDirective","listType","getInputType","inputFieldType","inputField","visitWithTypeInfo","itemNode","fieldValue","stringNum","integerStringRegExp","defaultOnError","coerceInputValueImpl","errorPrefix","itemValue","fieldDefs","parseResult","fieldA","fieldB","typeA","typeB","superType","variableValue","isMissingVariable","coercedObj","_error","ASTValidationContext","_ast","_fragments","_fragmentSpreads","_recursivelyReferencedFragments","_onError","getDocument","defNode","spreads","setsToVisit","collectedNames","nodesToVisit","getFragmentSpreads","getFragment","SDLValidationContext","_ASTValidationContext","ValidationContext","_ASTValidationContext2","_super2","_typeInfo","_variableUsages","_recursiveVariableUsages","usages","newUsages","getDefaultValue","getVariableUsages","getRecursivelyReferencedFragments","getParentInputType","getArgument","getEnumValue","FieldsOnCorrectTypeRule","getSchema","suggestedTypes","usageCount","possibleType","_usageCount$possibleI","possibleInterface","usageCountDiff","getSuggestedTypeNames","possibleFieldNames","getSuggestedFieldNames","FragmentsOnCompositeTypesRule","KnownArgumentNamesRule","KnownArgumentNamesOnDirectivesRule","argNode","knownArgsNames","directiveArgs","definedDirectives","astDefinitions","_def$arguments","directiveName","knownArgs","locationsMap","_parent","_path","candidateLocation","appliedTo","getDirectiveLocationForOperation","getDirectiveLocationForASTPath","existingTypesMap","definedTypes","typeNames","_1","_2","_ancestors$","isSDL","standardTypeNames","LoneAnonymousOperationRule","operationCount","_oldSchema$astNode","alreadyDefined","schemaDefinitionsCount","NoFragmentCyclesRule","visitedFrags","spreadPath","spreadPathIndexByName","spreadNodes","spreadNode","spreadName","spreadFragment","viaPath","NoUndefinedVariablesRule","variableNameDefined","getRecursiveVariableUsages","operationDefs","fragmentNameUsed","_operationDefs","_fragmentDefs","fragmentDef","NoUnusedVariablesRule","variableDefs","variableNameUsed","_variableDefs","variableDef","reasonMessage","subReason","OverlappingFieldsCanBeMergedRule","comparedFragmentPairs","PairSet","cachedFieldsAndFragmentNames","conflicts","_getFieldsAndFragment","getFieldsAndFragmentNames","_getFieldsAndFragment2","fragmentNames","conflict","findConflict","collectConflictsWithin","collectConflictsBetweenFieldsAndFragment","collectConflictsBetweenFragments","findConflictsWithinSelectionSet","_step$value$","fields1","fields2","reasonMsg","areMutuallyExclusive","_getReferencedFieldsA","getReferencedFieldsAndFragmentNames","_getReferencedFieldsA2","fieldMap2","referencedFragmentNames","collectConflictsBetween","referencedFragmentName","fragmentName1","fragmentName2","fragment1","fragment2","_getReferencedFieldsA3","_getReferencedFieldsA4","fieldMap1","referencedFragmentNames1","_getReferencedFieldsA5","_getReferencedFieldsA6","referencedFragmentNames2","parentFieldsAreMutuallyExclusive","_Object$entries2","_Object$entries2$_i","field1","field2","_field","parentType1","node1","def1","_field2","parentType2","node2","def2","name1","name2","stringifyArguments","type1","type2","doTypesConflict","selectionSet1","selectionSet2","_getFieldsAndFragment3","_getFieldsAndFragment4","fragmentNames1","_getFieldsAndFragment5","_getFieldsAndFragment6","fragmentNames2","findConflictsBetweenSubSelectionSets","flat","subfieldConflicts","_fieldNode$arguments","inputObjectWithArgs","nodeAndDefs","_collectFieldsAndFragmentNames","fragmentType","inlineFragmentType","_data","_this$_data$get","PossibleFragmentSpreadsRule","fragType","parentTypeStr","fragTypeStr","getFragmentType","checkExtension","expectedKind","defKindToExtKind","typeToExtKind","kindStr","extensionKindToTypeName","allTypeNames","_defKindToExtKind","ProvidedRequiredArgumentsRule","ProvidedRequiredArgumentsOnDirectivesRule","providedArgs","argTypeStr","_schema$getDirectives","requiredArgsMap","argNodes","isRequiredArgumentNode","requiredArgs","_directiveNode$argume","ScalarLeafsRule","SingleFieldSubscriptionsRule","extraFieldSelections","UniqueArgumentDefinitionNamesRule","checkArgUniqueness","checkArgUniquenessPerField","_typeNode$fields","_fieldDef$arguments","parentName","seenArgs","_parentNode$arguments","knownDirectiveNames","uniqueDirectiveMap","schemaDirectives","typeDirectivesMap","seenDirectives","existingTypeMap","knownValueNames","checkValueUniqueness","valueNodes","valueNames","valueDef","knownFieldNames","checkFieldUniqueness","fieldNames","hasField","UniqueFragmentNamesRule","knownFragmentNames","knownNameStack","knownNames","prevKnownNames","UniqueOperationNamesRule","knownOperationNames","definedOperationTypes","existingOperationTypes","checkOperationTypes","alreadyDefinedOperationType","knownTypeNames","checkTypeName","UniqueVariableNamesRule","_operationNode$variab","seenVariableDefinitions","variableNodes","ValuesOfCorrectTypeRule","isValidValueNode","fieldNodeMap","locationType","VariablesAreInputTypesRule","VariablesInAllowedPositionRule","varDefMap","varDef","allowedVariableUsage","varDefaultValue","locationDefaultValue","nullableLocationType","inputObjectDef","inputFieldDef","enumValueDef","enumTypeDef","_options$maxErrors","abortObj","validateSDL","schemaToExtend","ListenerType","MouseButtons","MouseButton","eventShouldStartDrag","button","getEventClientOffset","targetTouches","isTouchEvent","getEventClientTouchOffset","clientX","y","clientY","supported","_defineProperties","_eventNames","OptionsReader","incoming","enableTouchEvents","enableMouseEvents","enableKeyboardEvents","ignoreContextMenu","enableHoverOutsideTarget","touchSlop","scrollAngleRanges","delayTouchStart","delay","delayMouseStart","eventNames","mouse","move","contextmenu","touch","keyboard","keydown","TouchBackend","manager","getSourceClientOffset","sourceId","nodeType","_el$getBoundingClient","getNodeClientOffset","sourceNodes","handleTopMoveStartCapture","moveStartSourceIds","handleMoveStart","unshift","handleTopMoveStart","clientOffset","_mouseClientOffset","waitingForDelay","handleTopMoveStartDelay","timeout","handleTopMoveCapture","dragOverTargetIds","handleMove","targetId","handleTopMove","_isScrolling","monitor","isDragging","angleRanges","angle","atan2","PI","inAngleRanges","sqrt","pow","abs","actions","beginDrag","publishSource","sourceNode","getSourceId","installSourceNodeRemovalObserver","publishDragSource","preventDefault","dragOverTargetNodes","targetNodes","elementsAtPoint","getDropTargetElementsAtPoint","elementsFromPoint","elementsAtPointExtended","nodeId","currentNode","orderedDragOverTargetIds","ids","contains","hover","handleTopMoveEndCapture","buttons","eventShouldEndDrag","didDrop","uninstallSourceNodeRemovalObserver","drop","endDrag","handleCancelOnEscape","getActions","getMonitor","sourcePreviewNodes","sourcePreviewNodeOptions","listenerTypes","isSetUp","getTopMoveStartHandler","subject","capture","supportsPassive","passive","listenerType","evt","_this3","_this4","coords","touches","droppedOn","elementFromPoint","childMatch","_this5","draggedSourceNode","draggedSourceNodeRemovalObserver","MutationObserver","resurrectSourceNode","observe","childList","removeAttribute","disconnect"],"sourceRoot":""}