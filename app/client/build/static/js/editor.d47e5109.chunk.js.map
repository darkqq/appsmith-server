{"version":3,"file":"static/js/editor.d47e5109.chunk.js","mappings":"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","sources":["pages/Editor/WidgetCard.tsx","pages/Editor/Explorer/ExplorerSearch.tsx","pages/Editor/WidgetSidebar.tsx","components/editorComponents/Divider.tsx","utils/hooks/useClipboard.tsx","pages/Editor/Explorer/Libraries/index.tsx","assets/svg/no_entities_found.svg","pages/Editor/Explorer/ContextMenuTrigger.tsx","pages/Editor/Explorer/Datasources/DataSourceContextMenu.tsx","pages/Editor/Explorer/Entity/Placeholder.tsx","assets/icons/control/lightning.svg","pages/Editor/Explorer/Datasources/QueryTemplates.tsx","pages/Editor/Explorer/Datasources/DatasourceField.tsx","pages/Editor/Explorer/Datasources/DatasourceStructure.tsx","pages/Editor/Explorer/Datasources/DatasourceStructureContainer.tsx","pages/Editor/Explorer/Datasources/DatasourceEntity.tsx","pages/Editor/Explorer/common.tsx","pages/Editor/Explorer/Datasources.tsx","pages/Editor/Explorer/Actions/ActionEntityContextMenu.tsx","pages/Editor/Explorer/Actions/ActionEntity.tsx","pages/Editor/Explorer/JSActions/helpers.tsx","pages/Editor/Explorer/JSActions/JSActionContextMenu.tsx","pages/Editor/Explorer/JSActions/JSActionEntity.tsx","pages/Editor/Explorer/Files/SubmenuHotkeys.tsx","pages/Editor/Explorer/Files/Submenu.tsx","pages/Editor/Explorer/Files/index.tsx","pages/Editor/Explorer/Widgets/WidgetContextMenu.tsx","pages/Editor/Explorer/Widgets/WidgetEntity.tsx","pages/Editor/Explorer/Widgets/WidgetGroup.tsx","pages/Editor/Explorer/EntityExplorer.tsx","pages/Editor/Explorer/index.tsx","utils/hooks/useHorizontalResize.tsx","pages/Editor/FirstTimeUserOnboarding/Statusbar.tsx","pages/Editor/ThemePropertyPane/DeleteThemeModal.tsx","pages/Editor/ThemePropertyPane/ThemeCard.tsx","pages/Editor/ThemePropertyPane/SettingSection.tsx","pages/Editor/ThemePropertyPane/SaveThemeModal.tsx","pages/Editor/ThemePropertyPane/controls/ThemeFontControl.tsx","pages/Editor/ThemePropertyPane/controls/ThemeColorControl.tsx","pages/Editor/ThemePropertyPane/controls/ThemeShadowControl.tsx","pages/Editor/ThemePropertyPane/controls/ThemeBorderRadiusControl.tsx","components/editorComponents/BetaCard.tsx","pages/Editor/ThemePropertyPane/ThemeEditor.tsx","pages/Editor/ThemePropertyPane/ThemeSelector.tsx","pages/Editor/ThemePropertyPane/index.tsx","pages/Editor/AppSettingsPane/Components/TextLoaderIcon.tsx","pages/Editor/AppSettingsPane/AppSettings/GeneralSettings.tsx","pages/Editor/AppSettingsPane/AppSettings/SectionHeader.tsx","pages/Editor/AppSettingsPane/AppSettings/DraggablePageList.tsx","pages/Editor/BottomBar/styles.ts","pages/Editor/BottomBar/ManualUpgrades.tsx","pages/Editor/PropertyPane/PropertyHelpLabel.tsx","selectors/pageListSelectors.tsx","pages/Editor/AppSettingsPane/Utils.ts","pages/Editor/AppSettingsPane/AppSettings/PageSettings.tsx","pages/Editor/AppSettingsPane/AppSettings/EmbedSettings.tsx","pages/Editor/AppSettingsPane/AppSettings/index.tsx","pages/Editor/Explorer/Pages/PageContextMenu.tsx","utils/hooks/useResize.tsx","pages/Editor/Explorer/Pages/AddPageContextMenu.tsx","pages/Editor/Explorer/Pages/index.tsx","pages/Editor/Explorer/Entity/EntityProperty.tsx","pages/Editor/Explorer/Entity/EntityProperties.tsx","components/editorComponents/Sidebar.tsx","pages/Editor/Explorer/Libraries/Installer.tsx","pages/Editor/gitSync/components/BranchListHotkeys.tsx","pages/Editor/gitSync/components/BranchListItemContainer.tsx","pages/Editor/gitSync/components/RemoteBranchListItem.tsx","pages/Editor/gitSync/components/DefaultTag.tsx","pages/Editor/gitSync/components/DangerMenuItem.tsx","pages/Editor/gitSync/components/BranchMoreMenu.tsx","pages/Editor/gitSync/components/BranchListItem.tsx","pages/Editor/gitSync/components/BranchList.tsx","pages/Editor/gitSync/components/RemoteBranchList.tsx","pages/Editor/gitSync/components/LocalBranchList.tsx","pages/Editor/gitSync/QuickGitActions/BranchButton.tsx","assets/icons/ads/git-commit-line.svg","pages/Editor/gitSync/QuickGitActions/index.tsx","components/editorComponents/Debugger/DebuggerTabs.tsx","components/editorComponents/Debugger/index.tsx","selectors/helpSelectors.tsx","components/designSystems/appsmith/help/DocumentationSearch.tsx","actions/helpActions.ts","pages/Editor/HelpButton.tsx","assets/icons/header/multi-pane-switch-2.svg","assets/icons/header/multi-pane-switch-3.svg","pages/common/PaneCountSwitcher.tsx","actions/multiPaneActions.ts","pages/Editor/BottomBar/index.tsx","pages/Editor/FirstTimeUserOnboarding/Utils.ts","pages/Editor/FirstTimeUserOnboarding/IntroductionModal.tsx","pages/Editor/FirstTimeUserOnboarding/Tasks.tsx","selectors/crudInfoModalSelectors.ts","pages/Editor/GeneratePage/components/CrudInfoModal.tsx","constants/ImagesURL.ts","pages/Editor/GuidedTour/useComputeCurrentStep.ts","pages/Editor/GuidedTour/Guide.tsx","utils/hooks/useWidgetFocus/index.tsx","pages/Editor/Canvas.tsx","pages/Editor/WidgetsEditor/CanvasContainer.tsx","assets/images/layout.svg","assets/images/database.svg","pages/Editor/WidgetsEditor/EmptyCanvasSection.tsx","pages/Editor/WidgetsEditor/PageTabs.tsx","pages/Editor/PropertyPane/PropertyPaneTitle.tsx","pages/Editor/PropertyPane/PropertyPaneTab.tsx","pages/Editor/PropertyPane/helpers.ts","pages/Editor/PropertyPane/PropertyPaneSearchInput.tsx","pages/Editor/PropertyPane/propertyPaneSearch.ts","pages/Editor/PropertyPane/PanelPropertiesEditor.tsx","assets/icons/control/undo_2.svg","pages/Editor/PropertyPane/PropertyPaneHelperText.tsx","pages/Editor/PropertyPane/PropertyControl.tsx","pages/Editor/PropertyPane/EmptySearchResult.tsx","selectors/widgetEnhancementSelectors.ts","pages/Editor/PropertyPane/PropertyControlsGenerator.tsx","pages/Editor/PropertyPane/ConnectDataCTA.tsx","pages/Editor/PropertyPane/PropertyPaneConnections.tsx","pages/Editor/PropertyPane/PropertyPaneView.tsx","pages/Editor/PropertyPane/index.tsx","pages/Editor/MainContainerLayoutControl.tsx","pages/Editor/AppPositionTypeControl.tsx","pages/Editor/CanvasPropertyPane/index.tsx","pages/Editor/MultiSelectPropertyPane/index.tsx","pages/Editor/AppSettingsPane/PaneHeader.tsx","pages/Editor/AppSettingsPane/index.tsx","components/editorComponents/PropertyPaneSidebar.tsx","pages/Editor/WidgetsEditor/PropertyPaneContainer.tsx","pages/Editor/WidgetsEditor/index.tsx","utils/hooks/useAllowEditorDragToSelect.ts","pages/Editor/APIEditor/PostBodyData.tsx","components/editorComponents/form/fields/RadioGroupWrapper.tsx","components/editorComponents/form/fields/RadioGroupField.tsx","pages/Editor/APIEditor/Pagination.tsx","pages/Editor/APIEditor/RestAPIForm.tsx","components/editorComponents/form/CredentialsTooltip.tsx","components/designSystems/appsmith/TabbedView.tsx","pages/Editor/APIEditor/RapidApiEditorForm.tsx","pages/Editor/APIEditor/GraphQL/QueryWrapperWithCSS.tsx","pages/Editor/APIEditor/GraphQL/QueryEditor.tsx","pages/Editor/APIEditor/GraphQL/VariableEditor.tsx","pages/Editor/APIEditor/GraphQL/Pagination.tsx","pages/Editor/APIEditor/GraphQL/GraphQLEditorForm.tsx","pages/Editor/APIEditor/index.tsx","assets/images/Plus-logo.svg","pages/Editor/IntegrationEditor/NewApi.tsx","pages/Editor/IntegrationEditor/DatasourceHome.tsx","pages/Editor/IntegrationEditor/NewQuery.tsx","components/utils/CollapseComponent.tsx","pages/Editor/IntegrationEditor/DatasourceCard.tsx","pages/Editor/IntegrationEditor/ActiveDataSources.tsx","pages/Editor/IntegrationEditor/MockDataSources.tsx","assets/images/secure.svg","pages/Editor/IntegrationEditor/AddDatasourceSecurely.tsx","pages/Editor/DataSourceEditor/BackButton.tsx","pages/Editor/IntegrationEditor/UnsupportedPluginDialog.tsx","pages/Editor/IntegrationEditor/IntegrationsHomeScreen.tsx","pages/Editor/IntegrationEditor/index.tsx","components/designSystems/appsmith/Dropdown.tsx","components/editorComponents/form/fields/DropdownField.tsx","components/editorComponents/Debugger/DebuggerMessage.tsx","pages/Editor/QueryEditor/EditorJSONtoForm.tsx","pages/Editor/QueryEditor/Form.tsx","pages/Editor/QueryEditor/index.tsx","utils/getPathAndValueFromActionDiffObject.ts","pages/Editor/Explorer/JSActions/MoreJSActionsMenu.tsx","pages/Editor/JSEditor/JSObjectNameEditor.tsx","components/utils/FlagBadge.tsx","pages/Editor/JSEditor/JSFunctionRun.tsx","pages/Editor/JSEditor/utils.ts","pages/Editor/JSEditor/JSFunctionSettings.tsx","pages/Editor/JSEditor/JSObjectHotKeys.tsx","pages/Editor/JSEditor/styledComponents.ts","pages/Editor/JSEditor/Form.tsx","pages/Editor/JSEditor/index.tsx","pages/Editor/GeneratePage/components/DataSourceOption.tsx","pages/Editor/GeneratePage/components/constants.ts","pages/Editor/GeneratePage/components/GeneratePageForm/styles.ts","pages/Editor/GeneratePage/components/GeneratePageForm/GoogleSheetForm.tsx","pages/Editor/GeneratePage/components/GeneratePageForm/hooks.ts","pages/Editor/GeneratePage/components/GeneratePageForm/GeneratePageForm.tsx","pages/Editor/GeneratePage/components/PageContent.tsx","pages/Editor/GeneratePage/index.tsx","pages/Editor/APIEditor/CurlImportForm.tsx","constants/providerConstants.ts","pages/Editor/APIEditor/ProviderTemplates.tsx","actions/providerActions.ts","pages/common/NotFound.tsx","pages/Editor/SaaSEditor/DatasourceCard.tsx","pages/Editor/SaaSEditor/ListView.tsx","pages/Editor/SaaSEditor/routes.ts","pages/Editor/FirstTimeUserOnboarding/Checklist.tsx","ce/pages/routes.tsx","pages/Editor/routes.tsx","pages/Editor/MainContainer.tsx","pages/Editor/GlobalHotKeys/GlobalHotKeys.tsx","pages/Editor/GlobalHotKeys/index.tsx","pages/Editor/GlobalHotKeys/useMouseLocation.tsx","pages/Editor/GuidedTour/DeviationModal.tsx","sagas/WebsocketSagas/utils.ts","pages/Editor/gitSync/ImportedAppSuccessModal.tsx","pages/Templates/TemplatesModal/Header.tsx","pages/Templates/TemplatesModal/TemplateList.tsx","pages/Templates/TemplatesModal/PageSelection.tsx","pages/Templates/TemplatesModal/TemplateDetailedView.tsx","pages/Templates/TemplatesModal/index.tsx","utils/hooks/useWindowDimensions.tsx","pages/Editor/TabsPane.tsx","pages/Editor/CanvasPane.tsx","pages/Editor/MultiPaneContainer.tsx","pages/Editor/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { WidgetCardProps } from \"widgets/BaseWidget\";\nimport styled from \"styled-components\";\nimport { useWidgetDragResize } from \"utils/hooks/dragResizeHooks\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { generateReactKey } from \"utils/generators\";\nimport { Colors } from \"constants/Colors\";\nimport { useWidgetSelection } from \"utils/hooks/useWidgetSelection\";\nimport { IconWrapper } from \"constants/IconConstants\";\n\ntype CardProps = {\n  details: WidgetCardProps;\n};\n\nexport const Wrapper = styled.div`\n  padding: 10px 5px 10px 5px;\n  border-radius: 0px;\n  border: none;\n  position: relative;\n  color: ${Colors.CHARCOAL};\n  height: 72px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n\n  &:hover {\n    background: ${Colors.Gallery};\n    cursor: grab;\n  }\n\n  & i {\n    font-family: ${(props) => props.theme.fonts.text};\n    font-size: ${(props) => props.theme.fontSizes[7]}px;\n  }\n`;\n\nexport const BetaLabel = styled.div`\n  font-size: 10px;\n  background: ${Colors.TUNDORA};\n  margin-top: 3px;\n  padding: 2px 4px;\n  border-radius: 3px;\n  position: absolute;\n  top: 0;\n  right: -2%;\n`;\n\nexport const IconLabel = styled.h5`\n  min-height: 32px;\n  text-align: center;\n  margin: 0;\n  text-transform: uppercase;\n  font-weight: ${(props) => props.theme.fontWeights[1]};\n  flex-shrink: 1;\n  font-size: ${(props) => props.theme.fontSizes[1]}px;\n  line-height: ${(props) => props.theme.lineHeights[2]}px;\n\n  &::selection {\n    background: none;\n  }\n`;\n\nfunction WidgetCard(props: CardProps) {\n  const { setDraggingNewWidget } = useWidgetDragResize();\n  const { deselectAll } = useWidgetSelection();\n\n  const onDragStart = (e: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n    AnalyticsUtil.logEvent(\"WIDGET_CARD_DRAG\", {\n      widgetType: props.details.type,\n      widgetName: props.details.displayName,\n    });\n    setDraggingNewWidget &&\n      setDraggingNewWidget(true, {\n        ...props.details,\n        widgetId: generateReactKey(),\n      });\n    deselectAll();\n  };\n\n  const type = `${props.details.type\n    .split(\"_\")\n    .join(\"\")\n    .toLowerCase()}`;\n  const className = `t--widget-card-draggable-${type}`;\n  return (\n    <Wrapper\n      className={className}\n      data-guided-tour-id={`widget-card-${type}`}\n      draggable\n      onDragStart={onDragStart}\n    >\n      <div>\n        <IconWrapper>\n          <img className=\"w-6 h-6\" src={props.details.icon} />\n        </IconWrapper>\n        <IconLabel>{props.details.displayName}</IconLabel>\n        {props.details.isBeta && <BetaLabel>Beta</BetaLabel>}\n      </div>\n    </Wrapper>\n  );\n}\n\nexport default WidgetCard;\n","import classNames from \"classnames\";\nimport { isFunction } from \"lodash\";\nimport React, { forwardRef, Ref, useState, useCallback } from \"react\";\n\nimport { ENTITY_EXPLORER_SEARCH_ID } from \"constants/Explorer\";\nimport { ReactComponent as CrossIcon } from \"assets/icons/ads/cross.svg\";\nimport { ReactComponent as SearchIcon } from \"assets/icons/ads/search.svg\";\n\n/*eslint-disable react/display-name */\nexport const ExplorerSearch = forwardRef(\n  (\n    props: {\n      clear: () => void;\n      placeholder?: string;\n      autoFocus?: boolean;\n      isHidden?: boolean;\n      onChange?: (e: any) => void;\n      id?: string;\n    },\n    ref: Ref<HTMLInputElement>,\n  ) => {\n    const [value, setValue] = useState(\"\");\n    const [focussed, setFocussed] = useState(false);\n\n    /**\n     * on change of input\n     */\n    const onChange = useCallback((e: React.FormEvent<HTMLInputElement>) => {\n      e.persist();\n\n      setValue(e.currentTarget.value);\n\n      if (isFunction(props.onChange)) {\n        props.onChange(e);\n      }\n    }, []);\n\n    /**\n     * on click of cross button\n     */\n    const onClear = useCallback(() => {\n      setValue(\"\");\n\n      if (isFunction(props.onChange)) {\n        props.clear();\n      }\n    }, []);\n\n    return (\n      <div\n        className={classNames({\n          \"sticky top-0 bg-gray-50\": true,\n          hidden: props.isHidden,\n        })}\n      >\n        <div\n          className={classNames({\n            \"flex px-3 items-center\": true,\n          })}\n        >\n          <SearchIcon className=\"box-content w-3 h-3 mr-3\" />\n          <input\n            autoComplete=\"off\"\n            autoFocus\n            className=\"flex-grow py-2 text-gray-800 bg-transparent placeholder-trueGray-500\"\n            id={props.id || ENTITY_EXPLORER_SEARCH_ID}\n            onBlur={() => setFocussed(false)}\n            onChange={onChange}\n            onFocus={() => setFocussed(true)}\n            placeholder=\"Search Widgets\"\n            ref={ref}\n            type=\"text\"\n          />\n          {value && (\n            <button className=\"mr-1  hover:bg-trueGray-200\" onClick={onClear}>\n              <CrossIcon className=\"w-3 h-3 text-trueGray-100\" />\n            </button>\n          )}\n        </div>\n        <div\n          className={classNames({\n            \"border-b border-primary-500 absolute bottom-0\": true,\n            \"w-full\": focussed,\n          })}\n        />\n      </div>\n    );\n  },\n);\n\nexport default ExplorerSearch;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport WidgetCard from \"./WidgetCard\";\nimport { getWidgetCards } from \"selectors/editorSelectors\";\nimport ExplorerSearch from \"./Explorer/ExplorerSearch\";\nimport { debounce } from \"lodash\";\nimport {\n  createMessage,\n  WIDGET_SIDEBAR_CAPTION,\n} from \"@appsmith/constants/messages\";\nimport Fuse from \"fuse.js\";\nimport { WidgetCardProps } from \"widgets/BaseWidget\";\n\nfunction WidgetSidebar({ isActive }: { isActive: boolean }) {\n  const cards = useSelector(getWidgetCards);\n  const [filteredCards, setFilteredCards] = useState(cards);\n  const searchInputRef = useRef<HTMLInputElement | null>(null);\n\n  let fuse: Fuse<WidgetCardProps, Fuse.FuseOptions<WidgetCardProps>>;\n\n  useEffect(() => {\n    fuse = new Fuse(cards, {\n      keys: [\n        {\n          name: \"displayName\",\n          weight: 0.9,\n        },\n        {\n          name: \"searchTags\",\n          weight: 0.1,\n        },\n      ],\n      threshold: 0.2,\n      distance: 100,\n    });\n  }, [cards]);\n\n  const filterCards = (keyword: string) => {\n    if (keyword.trim().length > 0) {\n      const searchResult = fuse.search(keyword);\n      setFilteredCards(searchResult as WidgetCardProps[]);\n    } else {\n      setFilteredCards(cards);\n    }\n  };\n\n  useEffect(() => {\n    if (isActive) searchInputRef.current?.focus();\n  }, [isActive]);\n\n  /**\n   * filter widgets\n   */\n  const search = debounce((e: any) => {\n    filterCards(e.target.value.toLowerCase());\n  }, 300);\n\n  /**\n   * clear the search input\n   */\n  const clearSearchInput = () => {\n    if (searchInputRef.current) {\n      searchInputRef.current.value = \"\";\n    }\n    filterCards(\"\");\n    searchInputRef.current?.focus();\n  };\n\n  return (\n    <div\n      className={`flex flex-col overflow-hidden ${isActive ? \"\" : \"hidden\"}`}\n    >\n      <ExplorerSearch\n        autoFocus\n        clear={clearSearchInput}\n        onChange={search}\n        placeholder=\"Search widgets...\"\n        ref={searchInputRef}\n      />\n      <div\n        className=\"flex-grow px-3 overflow-y-scroll\"\n        data-cy=\"widget-sidebar-scrollable-wrapper\"\n      >\n        <p className=\"px-3 py-3 text-sm leading-relaxed text-trueGray-400 t--widget-sidebar\">\n          {createMessage(WIDGET_SIDEBAR_CAPTION)}\n        </p>\n        <div className=\"grid items-stretch grid-cols-3 gap-3 justify-items-stretch\">\n          {filteredCards.map((card) => (\n            <WidgetCard details={card} key={card.key} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nWidgetSidebar.displayName = \"WidgetSidebar\";\n\nexport default WidgetSidebar;\n","import { Divider } from \"@blueprintjs/core\";\nimport styled from \"styled-components\";\n\nexport const StyledDivider = styled(Divider)<{ color?: string }>`\n  && {\n    margin: 5px 0 0;\n  }\n`;\n\nexport default StyledDivider;\n","import { MutableRefObject } from \"react\";\n\nconst writeToClipboard = async (\n  text: string,\n  el: HTMLElement,\n  ref: MutableRefObject<HTMLElement | null>,\n) => {\n  if (\"clipboard\" in navigator) {\n    try {\n      await navigator.clipboard.writeText(text);\n      el.childNodes[0].textContent = \"Copied to clipboard!\";\n      el.classList.add(\"success\");\n      ref.current && ref.current.append(el);\n    } catch (e) {\n      el.childNodes[0].textContent = \"Failed!\";\n      el.classList.add(\"error\");\n      ref.current && ref.current.append(el);\n    }\n    setTimeout(() => {\n      ref.current?.removeChild(el);\n    }, 1000);\n  }\n};\n\n/* How it works:\n    This hook takes a ref object as a paramter.\n    \n    Success in copying:\n    It appends a div with the class .clipboard-message.success with text \"Binding Copied!\"\n    to the element which the passed ref refers\n\n    Error in copying:\n    It appends a div with the class .clipboard-message.error with text \"Failed!\"\n    to the element which the passed ref refers\n\n    The component which implements the hook needs to add the appropriate styles\n    to the clipboard success and error message div\n\n    Messages get removed in 2 seconds. Not customizable at the moment.\n\n    TODO(abhinav): Enhance this hook to make it more customizable.\n*/\nconst useClipboard = (ref: MutableRefObject<HTMLElement | null>) => {\n  const write = (text: string) => {\n    const el = document.createElement(\"div\");\n    const content = document.createTextNode(\"\");\n    el.classList.add(\"clipboard-message\");\n    el.appendChild(content);\n    writeToClipboard(text, el, ref);\n  };\n  return write;\n};\n\nexport default useClipboard;\n","import React, { MutableRefObject, useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Icon,\n  IconSize,\n  Spinner,\n  Toaster,\n  TooltipComponent,\n  Variant,\n} from \"design-system-old\";\nimport { Colors } from \"constants/Colors\";\nimport Entity, { EntityClassNames } from \"../Entity\";\nimport {\n  createMessage,\n  customJSLibraryMessages,\n} from \"@appsmith/constants/messages\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectInstallationStatus,\n  selectIsInstallerOpen,\n  selectLibrariesForExplorer,\n} from \"selectors/entitiesSelector\";\nimport { InstallState } from \"reducers/uiReducers/libraryReducer\";\nimport { Collapse } from \"@blueprintjs/core\";\nimport { ReactComponent as CopyIcon } from \"assets/icons/menu/copy-snippet.svg\";\nimport useClipboard from \"utils/hooks/useClipboard\";\nimport {\n  toggleInstaller,\n  uninstallLibraryInit,\n} from \"actions/JSLibraryActions\";\nimport EntityAddButton from \"../Entity/AddButton\";\nimport { TOOLTIP_HOVER_ON_DELAY } from \"constants/AppConstants\";\nimport { TJSLibrary } from \"workers/common/JSLibrary\";\nimport { getPagePermissions } from \"selectors/editorSelectors\";\nimport { hasCreateActionPermission } from \"@appsmith/utils/permissionHelpers\";\nimport recommendedLibraries from \"./recommendedLibraries\";\nimport { useTransition, animated } from \"react-spring\";\n\nconst docsURLMap = recommendedLibraries.reduce((acc, lib) => {\n  acc[lib.url] = lib.docsURL;\n  return acc;\n}, {} as Record<string, string>);\n\nconst Library = styled.li`\n  list-style: none;\n  flex-direction: column;\n  color: ${Colors.GRAY_700};\n  font-weight: 400;\n  display: flex;\n  justify-content: space-between;\n  cursor: pointer;\n  position: relative;\n  line-height: 17px;\n  padding-left: 8px;\n\n  > div:first-child {\n    height: 36px;\n  }\n\n  .share {\n    display: none;\n    width: 30px;\n    height: 36px;\n    background: transparent;\n    margin-left: 8px;\n    flex-shrink: 0;\n  }\n\n  &:hover {\n    background: ${Colors.SEA_SHELL};\n\n    & .t--open-new-tab {\n      display: block;\n    }\n\n    & .delete,\n    .share {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background: transparent;\n      &:hover {\n        background: black;\n        .uninstall-library,\n        .open-link {\n          color: white;\n          svg > path {\n            fill: white;\n          }\n        }\n      }\n    }\n  }\n\n  .loading {\n    display: none;\n    width: 30px;\n    height: 36px;\n    background: transparent;\n    flex-shrink: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n\n  & .t--open-new-tab {\n    position: absolute;\n    right: 8px;\n    display: none;\n  }\n\n  .delete {\n    display: none;\n    width: 30px;\n    height: 36px;\n    background: transparent;\n    flex-shrink: 0;\n  }\n\n  & .t--package-version {\n    display: block;\n    font-size: 12px;\n    height: 16px;\n  }\n  .open-collapse {\n    transform: rotate(90deg);\n  }\n\n  .content {\n    font-size: 12px;\n    font-weight: 400;\n    padding: 4px 8px;\n    color: ${Colors.GRAY_700};\n    display: flex;\n    align-items: center;\n    gap: 4px;\n    width: 100%;\n    overflow: hidden;\n    .accessor {\n      padding-left: 8px;\n      flex-grow: 1;\n      outline: 1px solid #b3b3b3 !important;\n      font-size: 12px;\n      font-family: monospace;\n      background: white;\n      display: flex;\n      height: 25px;\n      width: calc(100% - 80px);\n      justify-content: space-between;\n      align-items: center;\n      color: ${Colors.ENTERPRISE_DARK};\n      > div {\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background: transparent;\n        width: 25px;\n        &: hover {\n          background: ${Colors.SHARK2};\n          > svg > path {\n            fill: ${Colors.WHITE};\n          }\n        }\n      }\n    }\n  }\n`;\nconst Name = styled.div`\n  display: flex;\n  align-items: center;\n  line-height: 17px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-break: break-all;\n`;\nconst Version = styled.div<{ version?: string }>`\n  flex-shrink: 0;\n  display: ${(props) => (props.version ? \"block\" : \"none\")};\n  margin: ${(props) => (props.version ? \"0 8px\" : \"0\")};\n`;\n\nconst PrimaryCTA = function({ lib }: { lib: TJSLibrary }) {\n  const installationStatus = useSelector(selectInstallationStatus);\n  const dispatch = useDispatch();\n\n  const url = lib.url as string;\n\n  const uninstallLibrary = useCallback(\n    (e) => {\n      e.stopPropagation();\n      dispatch(uninstallLibraryInit(lib));\n    },\n    [lib],\n  );\n\n  if (installationStatus[url] === InstallState.Queued)\n    return (\n      <div className=\"loading\">\n        <Spinner size={IconSize.MEDIUM} />\n      </div>\n    );\n\n  if (url) {\n    //Default libraries will not have url\n    return (\n      <div className=\"delete\" onClick={uninstallLibrary}>\n        <Icon\n          className=\"uninstall-library t--uninstall-library\"\n          name=\"trash-outline\"\n          size={IconSize.MEDIUM}\n        />\n      </div>\n    );\n  }\n\n  return null;\n};\n\nfunction LibraryEntity({ lib }: { lib: TJSLibrary }) {\n  const openDocs = useCallback(\n    (url?: string) => (e: React.MouseEvent) => {\n      e?.stopPropagation();\n      url && window.open(url, \"_blank\");\n    },\n    [],\n  );\n  const propertyRef: MutableRefObject<HTMLDivElement | null> = useRef(null);\n  const write = useClipboard(propertyRef);\n\n  const copyToClipboard = useCallback(() => {\n    write(lib.accessor[lib.accessor.length - 1]);\n    Toaster.show({\n      text: \"Copied to clipboard\",\n      variant: Variant.success,\n    });\n  }, [lib.accessor]);\n\n  const [isOpen, open] = React.useState(false);\n  const docsURL = docsURLMap[lib.url || \"\"] || lib.docsURL;\n  return (\n    <Library className={`t--installed-library-${lib.name}`}>\n      <div\n        className=\"flex flex-row items-center h-full\"\n        onClick={() => open(!isOpen)}\n      >\n        <Icon\n          className={isOpen ? \"open-collapse\" : \"\"}\n          fillColor={Colors.GREY_7}\n          name=\"right-arrow-2\"\n          size={IconSize.XXXL}\n        />\n        <div className=\"flex items-center flex-start flex-1 overflow-hidden\">\n          <Name>{lib.name}</Name>\n          {docsURL && (\n            <div className=\"share\" onClick={openDocs(docsURL)}>\n              <Icon\n                className=\"open-link\"\n                fillColor={Colors.GRAY_700}\n                name=\"share-2\"\n                size={IconSize.SMALL}\n              />\n            </div>\n          )}\n        </div>\n        <Version className=\"t--package-version\" version={lib.version}>\n          {lib.version}\n        </Version>\n        <PrimaryCTA lib={lib} />\n      </div>\n      <Collapse className=\"text-xs\" isOpen={isOpen}>\n        <div className=\"content pr-2\">\n          Available as{\" \"}\n          <div className=\"accessor\">\n            {lib.accessor[lib.accessor.length - 1]}{\" \"}\n            <div>\n              <CopyIcon onClick={copyToClipboard} />\n            </div>\n          </div>\n        </div>\n      </Collapse>\n    </Library>\n  );\n}\n\nfunction JSDependencies() {\n  const libraries = useSelector(selectLibrariesForExplorer);\n  const transitions = useTransition(libraries, {\n    keys: (lib) => lib.name,\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n    leave: { opacity: 1 },\n  });\n  const dependencyList = transitions((style, lib) => (\n    <animated.div style={style}>\n      <LibraryEntity lib={lib} />\n    </animated.div>\n  ));\n  const isOpen = useSelector(selectIsInstallerOpen);\n  const dispatch = useDispatch();\n\n  const pagePermissions = useSelector(getPagePermissions);\n\n  const canCreateActions = hasCreateActionPermission(pagePermissions);\n\n  const openInstaller = useCallback(() => {\n    dispatch(toggleInstaller(true));\n  }, []);\n\n  return (\n    <Entity\n      className={\"libraries\"}\n      customAddButton={\n        <TooltipComponent\n          boundary=\"viewport\"\n          className={EntityClassNames.TOOLTIP}\n          content={createMessage(customJSLibraryMessages.ADD_JS_LIBRARY)}\n          disabled={isOpen}\n          hoverOpenDelay={TOOLTIP_HOVER_ON_DELAY}\n          position=\"right\"\n        >\n          <EntityAddButton\n            className={`${EntityClassNames.ADD_BUTTON} group libraries h-100 ${\n              isOpen ? \"selected\" : \"\"\n            }`}\n            onClick={openInstaller}\n          />\n        </TooltipComponent>\n      }\n      entityId=\"library_section\"\n      icon={null}\n      isDefaultExpanded={isOpen}\n      isSticky\n      name=\"Libraries\"\n      showAddButton={canCreateActions}\n      step={0}\n    >\n      {dependencyList}\n    </Entity>\n  );\n}\n\nexport default React.memo(JSDependencies);\n","var _filter, _g, _rect, _rect2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgNoEntitiesFound(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    width: 175,\n    height: 66,\n    fill: \"none\",\n    viewBox: \"0 0 175 66\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _filter || (_filter = /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"a\",\n    width: 174,\n    height: 66,\n    x: 0.5,\n    y: 0,\n    colorInterpolationFilters: \"sRGB\",\n    filterUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"feFlood\", {\n    floodOpacity: 0,\n    result: \"BackgroundImageFix\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"SourceAlpha\",\n    result: \"hardAlpha\",\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dy: 4\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    stdDeviation: 7.5\n  }), /*#__PURE__*/React.createElement(\"feComposite\", {\n    in2: \"hardAlpha\",\n    operator: \"out\"\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    type: \"matrix\",\n    values: \"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    in2: \"BackgroundImageFix\",\n    mode: \"normal\",\n    result: \"effect1_dropShadow\"\n  }), /*#__PURE__*/React.createElement(\"feBlend\", {\n    in: \"SourceGraphic\",\n    in2: \"effect1_dropShadow\",\n    mode: \"normal\",\n    result: \"shape\"\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    filter: \"url(#a)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"m15.5 11h144v36h-144z\"\n  }))), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 36,\n    height: 4,\n    x: 24.5,\n    y: 21,\n    fill: \"#bbb\",\n    rx: 2\n  })), _rect2 || (_rect2 = /*#__PURE__*/React.createElement(\"rect\", {\n    width: 87.604,\n    height: 4.563,\n    x: 24.563,\n    y: 32.376,\n    fill: \"#eee\",\n    rx: 2.281\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgNoEntitiesFound);\nexport default __webpack_public_path__ + \"static/media/no_entities_found.76d6411ba50850b1ce891853c3252adc.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { ControlIcons } from \"icons/ControlIcons\";\nimport { EntityTogglesWrapper } from \"./ExplorerStyledComponents\";\nimport styled, { useTheme } from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\nimport { TooltipComponent } from \"design-system-old\";\nimport {\n  createMessage,\n  ENTITY_MORE_ACTIONS_TOOLTIP,\n} from \"@appsmith/constants/messages\";\nimport { TOOLTIP_HOVER_ON_DELAY } from \"constants/AppConstants\";\nimport { Theme } from \"constants/DefaultTheme\";\n\nconst ToggleIcon = styled(ControlIcons.MORE_VERTICAL_CONTROL)`\n  &&& {\n    flex-grow: 0;\n    g {\n      path {\n        fill: ${Colors.GRAY};\n      }\n    }\n  }\n`;\nexport function ContextMenuTrigger(props: { className?: string }) {\n  const theme = useTheme() as Theme;\n\n  return (\n    <EntityTogglesWrapper\n      className={props.className + \" entity-context-menu-icon\"}\n    >\n      <TooltipComponent\n        boundary=\"viewport\"\n        content={createMessage(ENTITY_MORE_ACTIONS_TOOLTIP)}\n        hoverOpenDelay={TOOLTIP_HOVER_ON_DELAY}\n        position=\"right\"\n      >\n        <ToggleIcon height={theme.fontSizes[3]} width={theme.fontSizes[3]} />\n      </TooltipComponent>\n    </EntityTogglesWrapper>\n  );\n}\n\nexport default ContextMenuTrigger;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  deleteDatasource,\n  refreshDatasourceStructure,\n} from \"actions/datasourceActions\";\nimport TreeDropdown from \"pages/Editor/Explorer/TreeDropdown\";\nimport ContextMenuTrigger from \"../ContextMenuTrigger\";\nimport { noop } from \"lodash\";\nimport { ContextMenuPopoverModifiers } from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport { initExplorerEntityNameEdit } from \"actions/explorerActions\";\nimport {\n  CONTEXT_EDIT_NAME,\n  CONTEXT_REFRESH,\n  CONTEXT_DELETE,\n  CONFIRM_CONTEXT_DELETE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { AppState } from \"@appsmith/reducers\";\nimport {\n  hasDeleteDatasourcePermission,\n  hasManageDatasourcePermission,\n} from \"@appsmith/utils/permissionHelpers\";\nimport { TreeDropdownOption } from \"design-system-old\";\nimport { getDatasource } from \"selectors/entitiesSelector\";\n\nexport function DataSourceContextMenu(props: {\n  datasourceId: string;\n  entityId: string;\n  className?: string;\n}) {\n  const dispatch = useDispatch();\n  const dispatchDelete = useCallback(() => {\n    dispatch(deleteDatasource({ id: props.datasourceId }));\n  }, [dispatch, props.datasourceId]);\n  const editDatasourceName = useCallback(\n    () => dispatch(initExplorerEntityNameEdit(props.entityId)),\n    [dispatch, props.entityId],\n  );\n  const dispatchRefresh = useCallback(() => {\n    dispatch(refreshDatasourceStructure(props.datasourceId));\n  }, [dispatch, props.datasourceId]);\n\n  const [confirmDelete, setConfirmDelete] = useState(false);\n\n  const datasource = useSelector((state: AppState) =>\n    getDatasource(state, props.datasourceId),\n  );\n\n  const datasourcePermissions = datasource?.userPermissions || [];\n\n  const canDeleteDatasource = hasDeleteDatasourcePermission(\n    datasourcePermissions,\n  );\n\n  const canManageDatasource = hasManageDatasourcePermission(\n    datasourcePermissions,\n  );\n\n  const treeOptions = [\n    canManageDatasource && {\n      value: \"rename\",\n      className: \"single-select t--datasource-rename\",\n      onSelect: editDatasourceName,\n      label: createMessage(CONTEXT_EDIT_NAME),\n    },\n    {\n      value: \"refresh\",\n      className: \"single-select t--datasource-refresh\",\n      onSelect: dispatchRefresh,\n      label: createMessage(CONTEXT_REFRESH),\n    },\n    canDeleteDatasource && {\n      confirmDelete: confirmDelete,\n      className: \"t--apiFormDeleteBtn single-select t--datasource-delete\",\n      value: \"delete\",\n      onSelect: () => {\n        confirmDelete ? dispatchDelete() : setConfirmDelete(true);\n      },\n      label: confirmDelete\n        ? createMessage(CONFIRM_CONTEXT_DELETE)\n        : createMessage(CONTEXT_DELETE),\n      intent: \"danger\",\n    },\n  ].filter(Boolean);\n\n  return treeOptions.length > 0 ? (\n    <TreeDropdown\n      className={props.className}\n      defaultText=\"\"\n      modifiers={ContextMenuPopoverModifiers}\n      onSelect={noop}\n      optionTree={treeOptions && (treeOptions as TreeDropdownOption[])}\n      selectedValue=\"\"\n      setConfirmDelete={setConfirmDelete}\n      toggle={<ContextMenuTrigger className=\"t--context-menu\" />}\n    />\n  ) : null;\n}\n\nexport default DataSourceContextMenu;\n","import React, { ReactNode } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\nconst Wrapper = styled.div<{ step: number }>`\n  margin-left: ${(props) => props.step * props.theme.spaces[2]}px;\n  width: calc(100% - ${(props) => props.step * props.theme.spaces[2]}px);\n  font-size: ${(props) => props.theme.fontSizes[2]}px;\n  color: ${Colors.DOVE_GRAY2};\n  padding: 5px 20px;\n  text-align: left;\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nexport function EntityPlaceholder(props: {\n  step: number;\n  children: ReactNode;\n}) {\n  return (\n    <Wrapper step={props.step}>\n      <p>{props.children}</p>\n    </Wrapper>\n  );\n}\n\nexport default EntityPlaceholder;\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLightning(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 8,\n    height: 14,\n    fill: \"none\",\n    viewBox: \"0 0 8 14\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    fillOpacity: 0.87,\n    d: \"M0.666504 0.333313V7.66665H2.6665V13.6666L7.33317 5.66665H4.6665L7.33317 0.333313H0.666504Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLightning);\nexport default __webpack_public_path__ + \"static/media/lightning.99d3f199fdfaa2a98a998df6669a65e3.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createActionRequest } from \"actions/pluginActionActions\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { createNewQueryName } from \"utils/AppsmithUtils\";\nimport {\n  getCurrentApplicationId,\n  getCurrentPageId,\n} from \"selectors/editorSelectors\";\nimport { QueryAction } from \"entities/Action\";\nimport { Classes } from \"@blueprintjs/core\";\nimport history from \"utils/history\";\nimport { Datasource, QueryTemplate } from \"entities/Datasource\";\nimport { INTEGRATION_TABS } from \"constants/routes\";\nimport { getDatasource } from \"selectors/entitiesSelector\";\nimport { integrationEditorURL } from \"RouteBuilder\";\n\nconst Container = styled.div`\n  background-color: ${(props) => props.theme.colors.queryTemplate.bg};\n  color: ${(props) => props.theme.colors.textOnDarkBG};\n  min-width: 160px;\n  padding: 5px;\n`;\n\nconst TemplateType = styled.div`\n  color: ${(props) => props.theme.colors.queryTemplate.color};\n  padding: 8px;\n  &:hover {\n    cursor: pointer;\n    background: ${Colors.Gallery};\n  }\n`;\n\ntype QueryTemplatesProps = {\n  templates: QueryTemplate[];\n  datasourceId: string;\n};\n\nexport function QueryTemplates(props: QueryTemplatesProps) {\n  const dispatch = useDispatch();\n  const applicationId = useSelector(getCurrentApplicationId);\n  const actions = useSelector((state: AppState) => state.entities.actions);\n  const currentPageId = useSelector(getCurrentPageId);\n  const dataSource: Datasource | undefined = useSelector((state: AppState) =>\n    getDatasource(state, props.datasourceId),\n  );\n  const createQueryAction = useCallback(\n    (template: QueryTemplate) => {\n      const newQueryName = createNewQueryName(actions, currentPageId || \"\");\n      const queryactionConfiguration: Partial<QueryAction> = {\n        actionConfiguration: {\n          body: template.body,\n          pluginSpecifiedTemplates: template.pluginSpecifiedTemplates,\n          formData: template.configuration,\n          ...template.actionConfiguration,\n        },\n      };\n\n      dispatch(\n        createActionRequest({\n          name: newQueryName,\n          pageId: currentPageId,\n          pluginId: dataSource?.pluginId,\n          datasource: {\n            id: props.datasourceId,\n          },\n          eventData: {\n            actionType: \"Query\",\n            from: \"explorer-template\",\n            dataSource: dataSource?.name,\n          },\n          ...queryactionConfiguration,\n        }),\n      );\n      history.push(\n        integrationEditorURL({\n          pageId: currentPageId,\n          selectedTab: INTEGRATION_TABS.ACTIVE,\n        }),\n      );\n    },\n    [\n      dispatch,\n      actions,\n      currentPageId,\n      applicationId,\n      props.datasourceId,\n      dataSource,\n    ],\n  );\n\n  return (\n    <Container>\n      {props.templates.map((template) => {\n        return (\n          <TemplateType\n            className={Classes.POPOVER_DISMISS}\n            key={template.title}\n            onClick={() => createQueryAction(template)}\n          >\n            {template.title}\n          </TemplateType>\n        );\n      })}\n    </Container>\n  );\n}\n\nexport default QueryTemplates;\n","import React from \"react\";\nimport { Popover, Position, PopoverInteractionKind } from \"@blueprintjs/core\";\nimport {\n  DATASOURCE_FIELD_ICONS_MAP,\n  datasourceColumnIcon,\n} from \"../ExplorerIcons\";\nimport styled from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\nimport { DatasourceColumns, DatasourceKeys } from \"entities/Datasource\";\n\nconst Wrapper = styled.div<{ step: number }>`\n  padding-left: ${(props) =>\n    props.step * props.theme.spaces[2] + props.theme.spaces[6]}px;\n  flex-direction: row;\n  display: flex;\n  height: 30px;\n  width: 100%;\n  &:hover {\n    background: ${Colors.Gallery};\n  }\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst FieldName = styled.div`\n  color: ${Colors.GREY_9};\n  flex: 1;\n  font-size: 12px;\n  white-space: nowrap;\n  overflow: hidden;\n  line-height: 13px;\n  text-overflow: ellipsis;\n  padding-right: 30px;\n`;\n\nconst FieldValue = styled.div`\n  text-align: right;\n  font-size: 10px;\n  line-height: 12px;\n  color: #777777;\n  font-weight: 300;\n`;\n\nconst Content = styled.div`\n  margin: 0px 4px;\n  flex: 1;\n  flex-direction: row;\n  min-width: 0;\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst PopoverContent = styled.div`\n  flex-direction: row;\n  display: flex;\n  flex: 1;\n  gap: 30px;\n  margin-left: 4px;\n  align-items: flex-end;\n  justify-content: space-between;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  background-color: ${Colors.WHITE};\n  padding: 11px;\n`;\n\nconst PopupValue = styled.div`\n  color: ${Colors.GREY_9};\n  font-size: 12px;\n  :nth-child(2) {\n    text-align: right;\n    font-size: 10px;\n    color: #777777;\n    padding-top: 3px;\n    font-weight: 300;\n  }\n`;\n\ntype DatabaseFieldProps = {\n  field: DatasourceColumns | DatasourceKeys;\n  step: number;\n};\n\nexport function DatabaseColumns(props: DatabaseFieldProps) {\n  const field = props.field;\n  const fieldName = field.name;\n  const fieldType = field.type;\n  const icon = DATASOURCE_FIELD_ICONS_MAP[fieldType] || datasourceColumnIcon;\n\n  const content = (\n    <Wrapper className=\"t--datasource-column\" step={props.step}>\n      {icon}\n      <Content>\n        <FieldName>{fieldName}</FieldName>\n        <FieldValue>{fieldType}</FieldValue>\n      </Content>\n    </Wrapper>\n  );\n\n  return (\n    <Popover\n      boundary={\"viewport\"}\n      hoverCloseDelay={0}\n      interactionKind={PopoverInteractionKind.HOVER}\n      minimal\n      position={Position.RIGHT_TOP}\n    >\n      {content}\n      <Container>\n        {icon}\n        <PopoverContent>\n          <PopupValue>{fieldName}</PopupValue>\n          <PopupValue>{fieldType}</PopupValue>\n        </PopoverContent>\n      </Container>\n    </Popover>\n  );\n}\n\nexport default DatabaseColumns;\n","import React, { useState } from \"react\";\nimport { IconProps, IconWrapper } from \"constants/IconConstants\";\nimport { ReactComponent as LightningIcon } from \"assets/icons/control/lightning.svg\";\nimport { Popover, Position } from \"@blueprintjs/core\";\nimport Entity, { EntityClassNames } from \"../Entity\";\nimport { datasourceTableIcon } from \"../ExplorerIcons\";\nimport { EntityTogglesWrapper } from \"../ExplorerStyledComponents\";\nimport styled from \"styled-components\";\nimport QueryTemplates from \"./QueryTemplates\";\nimport DatasourceField from \"./DatasourceField\";\nimport { DatasourceTable } from \"entities/Datasource\";\nimport { Colors } from \"constants/Colors\";\nimport { useCloseMenuOnScroll } from \"../hooks\";\nimport { SIDEBAR_ID } from \"constants/Explorer\";\nimport { hasCreateDatasourceActionPermission } from \"@appsmith/utils/permissionHelpers\";\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { getDatasource } from \"selectors/entitiesSelector\";\nimport { getPagePermissions } from \"selectors/editorSelectors\";\n\nconst Wrapper = styled(EntityTogglesWrapper)`\n  &&&& {\n    svg,\n    svg path {\n      fill: #ff7235;\n    }\n  }\n  span {\n    font-size: ${(props) => props.theme.fontSizes[2]}px;\n    margin-left: 5px;\n  }\n  padding: 0 5px;\n  color: ${Colors.GRAY2};\n`;\n\nconst StyledEntity = styled(Entity)`\n  & > div {\n    grid-template-columns: 20px auto 1fr auto auto;\n  }\n`;\n\ntype DatasourceStructureProps = {\n  dbStructure: DatasourceTable;\n  step: number;\n  datasourceId: string;\n};\n\nexport function DatasourceStructure(props: DatasourceStructureProps) {\n  const dbStructure = props.dbStructure;\n  const iconProps: IconProps = {\n    width: 12,\n    height: 12,\n    color: \"#FF7235\",\n  };\n  let templateMenu = null;\n  const [active, setActive] = useState(false);\n  useCloseMenuOnScroll(SIDEBAR_ID, active, () => setActive(false));\n\n  const datasource = useSelector((state: AppState) =>\n    getDatasource(state, props.datasourceId),\n  );\n\n  const datasourcePermissions = datasource?.userPermissions || [];\n  const pagePermissions = useSelector(getPagePermissions);\n\n  const canCreateDatasourceActions = hasCreateDatasourceActionPermission([\n    ...datasourcePermissions,\n    ...pagePermissions,\n  ]);\n\n  const lightningMenu = canCreateDatasourceActions ? (\n    <Wrapper\n      className={`t--template-menu-trigger ${EntityClassNames.CONTEXT_MENU}`}\n      onClick={() => setActive(!active)}\n    >\n      <IconWrapper {...iconProps}>\n        <LightningIcon />\n      </IconWrapper>\n      <span>Add</span>\n    </Wrapper>\n  ) : null;\n\n  if (dbStructure.templates) templateMenu = lightningMenu;\n  const columnsAndKeys = dbStructure.columns.concat(dbStructure.keys);\n\n  return (\n    <Popover\n      boundary={\"viewport\"}\n      canEscapeKeyClose\n      className={`t--structure-template-menu`}\n      isOpen={active}\n      minimal\n      onInteraction={(nextOpenState: boolean) => {\n        if (!nextOpenState) {\n          setActive(false);\n        }\n      }}\n      popoverClassName=\"t--structure-template-menu-popover\"\n      position={Position.RIGHT_TOP}\n    >\n      <StyledEntity\n        action={() => canCreateDatasourceActions && setActive(!active)}\n        active={active}\n        className={`datasourceStructure`}\n        contextMenu={templateMenu}\n        entityId={\"DatasourceStructure\"}\n        icon={datasourceTableIcon}\n        name={dbStructure.name}\n        step={props.step}\n      >\n        {columnsAndKeys.map((field, index) => {\n          return (\n            <DatasourceField\n              field={field}\n              key={`${field.name}${index}`}\n              step={props.step + 1}\n            />\n          );\n        })}\n      </StyledEntity>\n      <QueryTemplates\n        datasourceId={props.datasourceId}\n        templates={dbStructure.templates}\n      />\n    </Popover>\n  );\n}\n\nexport default DatasourceStructure;\n","import {\n  createMessage,\n  SCHEMA_NOT_AVAILABLE,\n} from \"@appsmith/constants/messages\";\nimport {\n  DatasourceStructure as DatasourceStructureType,\n  DatasourceTable,\n} from \"entities/Datasource\";\nimport React, { memo, ReactElement } from \"react\";\nimport EntityPlaceholder from \"../Entity/Placeholder\";\nimport { useEntityUpdateState } from \"../hooks\";\nimport DatasourceStructure from \"./DatasourceStructure\";\n\ntype Props = {\n  datasourceId: string;\n  datasourceStructure?: DatasourceStructureType;\n  step: number;\n};\n\nconst Container = (props: Props) => {\n  const isLoading = useEntityUpdateState(props.datasourceId);\n  let view: ReactElement<Props> = <div />;\n\n  if (!isLoading) {\n    if (props.datasourceStructure?.tables?.length) {\n      view = (\n        <>\n          {props.datasourceStructure.tables.map(\n            (structure: DatasourceTable) => {\n              return (\n                <DatasourceStructure\n                  datasourceId={props.datasourceId}\n                  dbStructure={structure}\n                  key={`${props.datasourceId}${structure.name}`}\n                  step={props.step + 1}\n                />\n              );\n            },\n          )}\n        </>\n      );\n    } else {\n      view = (\n        <EntityPlaceholder step={props.step + 1}>\n          {props.datasourceStructure &&\n          props.datasourceStructure.error &&\n          props.datasourceStructure.error.message &&\n          props.datasourceStructure.error.message !== \"null\"\n            ? props.datasourceStructure.error.message\n            : createMessage(SCHEMA_NOT_AVAILABLE)}\n        </EntityPlaceholder>\n      );\n    }\n  }\n\n  return view;\n};\n\nexport const DatasourceStructureContainer = memo(Container);\n\nDatasourceStructureContainer.displayName = \"DatasourceStructureContainer\";\n","import React, { useCallback } from \"react\";\nimport { Datasource } from \"entities/Datasource\";\nimport { Plugin } from \"api/PluginApi\";\nimport DataSourceContextMenu from \"./DataSourceContextMenu\";\nimport { getPluginIcon } from \"../ExplorerIcons\";\nimport { getQueryIdFromURL } from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport Entity, { EntityClassNames } from \"../Entity\";\nimport history, { NavigationMethod } from \"utils/history\";\nimport {\n  expandDatasourceEntity,\n  fetchDatasourceStructure,\n  updateDatasourceName,\n} from \"actions/datasourceActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { DatasourceStructureContainer } from \"./DatasourceStructureContainer\";\nimport { isStoredDatasource, PluginType } from \"entities/Action\";\nimport { getAction } from \"selectors/entitiesSelector\";\nimport {\n  datasourcesEditorIdURL,\n  saasEditorDatasourceIdURL,\n} from \"RouteBuilder\";\nimport { inGuidedTour } from \"selectors/onboardingSelectors\";\nimport { getCurrentPageId } from \"selectors/editorSelectors\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { useLocation } from \"react-router\";\nimport omit from \"lodash/omit\";\nimport { getQueryParams } from \"utils/URLUtils\";\nimport { debounce } from \"lodash\";\n\ntype ExplorerDatasourceEntityProps = {\n  plugin: Plugin;\n  datasource: Datasource;\n  step: number;\n  searchKeyword?: string;\n  pageId: string;\n  isActive: boolean;\n  canManageDatasource?: boolean;\n};\n\nconst ExplorerDatasourceEntity = React.memo(\n  (props: ExplorerDatasourceEntityProps) => {\n    const guidedTourEnabled = useSelector(inGuidedTour);\n    const dispatch = useDispatch();\n    const pageId = useSelector(getCurrentPageId);\n    const icon = getPluginIcon(props.plugin);\n    const location = useLocation();\n    const switchDatasource = useCallback(() => {\n      let url;\n      if (props.plugin && props.plugin.type === PluginType.SAAS) {\n        url = saasEditorDatasourceIdURL({\n          pageId,\n          pluginPackageName: props.plugin.packageName,\n          datasourceId: props.datasource.id,\n        });\n      } else {\n        url = datasourcesEditorIdURL({\n          pageId,\n          datasourceId: props.datasource.id,\n          params: omit(getQueryParams(), \"viewMode\"),\n        });\n      }\n\n      AnalyticsUtil.logEvent(\"ENTITY_EXPLORER_CLICK\", {\n        type: \"DATASOURCES\",\n        fromUrl: location.pathname,\n        toUrl: url,\n        name: props.datasource.name,\n      });\n      history.push(url, { invokedBy: NavigationMethod.EntityExplorer });\n    }, [props.datasource.id, props.datasource.name, location.pathname]);\n\n    const queryId = getQueryIdFromURL();\n    const queryAction = useSelector((state: AppState) =>\n      getAction(state, queryId || \"\"),\n    );\n\n    const updateDatasourceNameCall = (id: string, name: string) =>\n      updateDatasourceName({ id: props.datasource.id, name });\n\n    const datasourceStructure = useSelector((state: AppState) => {\n      return state.entities.datasources.structure[props.datasource.id];\n    });\n\n    const expandDatasourceId = useSelector((state: AppState) => {\n      return state.ui.datasourcePane.expandDatasourceId;\n    });\n\n    //Debounce fetchDatasourceStructure request.\n    const debounceFetchDatasourceRequest = debounce(async () => {\n      dispatch(fetchDatasourceStructure(props.datasource.id, true));\n    }, 300);\n\n    const getDatasourceStructure = useCallback(\n      (isOpen: boolean) => {\n        if (!datasourceStructure && isOpen) {\n          debounceFetchDatasourceRequest();\n        }\n\n        dispatch(expandDatasourceEntity(isOpen ? props.datasource.id : \"\"));\n      },\n      [datasourceStructure, props.datasource.id, dispatch],\n    );\n\n    const nameTransformFn = useCallback(\n      (input: string) => input.slice(0, 30),\n      [],\n    );\n\n    let isDefaultExpanded = false;\n    if (expandDatasourceId === props.datasource.id) {\n      isDefaultExpanded = true;\n    } else if (queryAction && isStoredDatasource(queryAction.datasource)) {\n      isDefaultExpanded = queryAction.datasource.id === props.datasource.id;\n    }\n    // In guided tour we want the datasource structure to be shown only when expanded\n    if (guidedTourEnabled) {\n      isDefaultExpanded = false;\n    }\n\n    return (\n      <Entity\n        action={switchDatasource}\n        active={props.isActive}\n        canEditEntityName={props.canManageDatasource}\n        className=\"datasource\"\n        contextMenu={\n          <DataSourceContextMenu\n            className={EntityClassNames.CONTEXT_MENU}\n            datasourceId={props.datasource.id}\n            entityId={`${props.datasource.id}`}\n          />\n        }\n        entityId={`${props.datasource.id}`}\n        icon={icon}\n        isDefaultExpanded={isDefaultExpanded}\n        key={props.datasource.id}\n        name={props.datasource.name}\n        onNameEdit={nameTransformFn}\n        onToggle={getDatasourceStructure}\n        searchKeyword={props.searchKeyword}\n        step={props.step}\n        updateEntityName={updateDatasourceNameCall}\n      >\n        <DatasourceStructureContainer\n          datasourceId={props.datasource.id}\n          datasourceStructure={datasourceStructure}\n          step={props.step}\n        />\n      </Entity>\n    );\n  },\n);\n\nExplorerDatasourceEntity.displayName = \"ExplorerDatasourceEntity\";\nexport default ExplorerDatasourceEntity;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\nimport { Icon } from \"design-system-old\";\nimport Entity from \"./Entity\";\n\nconst ECContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 120px;\n`;\n\nconst ECMainText = styled.span`\n  display: block;\n  margin-bottom: 12px;\n  font-size: 10px;\n  color: ${Colors.DOVE_GRAY2};\n`;\n\nconst ECAddButton = styled.div`\n  display: flex;\n  font-size: 11px;\n  color: ${Colors.CHARCOAL};\n  font-weight: 600;\n  padding: 4px;\n  margin-left: -4px;\n  cursor: pointer;\n\n  svg {\n    margin-right: 4px;\n  }\n\n  &:hover {\n    background-color: ${Colors.GEYSER_LIGHT};\n  }\n`;\n\nexport function EmptyComponent(props: {\n  mainText: string;\n  addBtnText?: string;\n  addFunction?: () => void;\n}) {\n  const showAddCta = props.addFunction && props.addBtnText;\n  return (\n    <ECContainer>\n      <ECMainText>{props.mainText}</ECMainText>\n      {showAddCta && (\n        <ECAddButton onClick={props.addFunction}>\n          <Icon fillColor={Colors.CHARCOAL} name=\"plus\" />\n          {props.addBtnText && props.addBtnText}\n        </ECAddButton>\n      )}\n    </ECContainer>\n  );\n}\n\nexport const AddEntity = styled(Entity)`\n  color: ${Colors.CHARCOAL};\n\n  .t--entity-name {\n    color: ${Colors.CHARCOAL};\n  }\n`;\n","import React, { useCallback } from \"react\";\nimport {\n  useAppWideAndOtherDatasource,\n  useDatasourceSuggestions,\n} from \"./hooks\";\nimport { Datasource } from \"entities/Datasource\";\nimport ExplorerDatasourceEntity from \"./Datasources/DatasourceEntity\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getCurrentApplicationId,\n  getCurrentPageId,\n} from \"selectors/editorSelectors\";\nimport { getPlugins } from \"selectors/entitiesSelector\";\nimport { keyBy, noop } from \"lodash\";\nimport Entity from \"./Entity\";\nimport history from \"utils/history\";\nimport { INTEGRATION_TABS } from \"constants/routes\";\nimport {\n  ADD_DATASOURCE_BUTTON,\n  createMessage,\n  CREATE_DATASOURCE_TOOLTIP,\n  EMPTY_DATASOURCE_BUTTON_TEXT,\n  EMPTY_DATASOURCE_MAIN_TEXT,\n} from \"@appsmith/constants/messages\";\nimport styled from \"styled-components\";\nimport ArrowRightLineIcon from \"remixicon-react/ArrowRightLineIcon\";\nimport { Colors } from \"constants/Colors\";\nimport {\n  useDatasourceIdFromURL,\n  getExplorerStatus,\n  saveExplorerStatus,\n} from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport { Icon } from \"design-system-old\";\nimport { AddEntity, EmptyComponent } from \"./common\";\nimport { integrationEditorURL } from \"RouteBuilder\";\nimport { getCurrentAppWorkspace } from \"@appsmith/selectors/workspaceSelectors\";\n\nimport { AppState } from \"@appsmith/reducers\";\nimport {\n  hasCreateDatasourcePermission,\n  hasManageDatasourcePermission,\n} from \"@appsmith/utils/permissionHelpers\";\n\nconst ShowAll = styled.div`\n  padding: 0.25rem 1.5rem;\n  font-weight: 500;\n  font-size: 12px;\n  color: ${Colors.DOVE_GRAY2};\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  cursor: pointer;\n  &:hover {\n    transform: scale(1.01);\n  }\n`;\n\nconst Datasources = React.memo(() => {\n  const { appWideDS, otherDS } = useAppWideAndOtherDatasource();\n  const pageId = useSelector(getCurrentPageId) || \"\";\n  const plugins = useSelector(getPlugins);\n  const applicationId = useSelector(getCurrentApplicationId);\n  const isDatasourcesOpen = getExplorerStatus(applicationId, \"datasource\");\n  const pluginGroups = React.useMemo(() => keyBy(plugins, \"id\"), [plugins]);\n\n  const userWorkspacePermissions = useSelector(\n    (state: AppState) => getCurrentAppWorkspace(state).userPermissions ?? [],\n  );\n\n  const canCreateDatasource = hasCreateDatasourcePermission(\n    userWorkspacePermissions,\n  );\n\n  const addDatasource = useCallback(() => {\n    history.push(\n      integrationEditorURL({\n        pageId,\n        selectedTab: INTEGRATION_TABS.NEW,\n      }),\n    );\n  }, [pageId]);\n  const activeDatasourceId = useDatasourceIdFromURL();\n  const datasourceSuggestions = useDatasourceSuggestions();\n\n  const listDatasource = useCallback(() => {\n    history.push(\n      integrationEditorURL({\n        pageId,\n        selectedTab: INTEGRATION_TABS.ACTIVE,\n      }),\n    );\n  }, [pageId]);\n\n  const datasourceElements = React.useMemo(\n    () =>\n      appWideDS.concat(datasourceSuggestions).map((datasource: Datasource) => {\n        const datasourcePermissions = datasource.userPermissions || [];\n\n        const canManageDatasource = hasManageDatasourcePermission(\n          datasourcePermissions,\n        );\n        return (\n          <ExplorerDatasourceEntity\n            canManageDatasource={canManageDatasource}\n            datasource={datasource}\n            isActive={datasource.id === activeDatasourceId}\n            key={datasource.id}\n            pageId={pageId}\n            plugin={pluginGroups[datasource.pluginId]}\n            searchKeyword={\"\"}\n            step={1}\n          />\n        );\n      }),\n    [appWideDS, pageId],\n  );\n\n  const onDatasourcesToggle = useCallback(\n    (isOpen: boolean) => {\n      saveExplorerStatus(applicationId, \"datasource\", isOpen);\n    },\n    [applicationId],\n  );\n\n  return (\n    <Entity\n      addButtonHelptext={createMessage(CREATE_DATASOURCE_TOOLTIP)}\n      className={\"datasources\"}\n      entityId=\"datasources_section\"\n      icon={null}\n      isDefaultExpanded={\n        isDatasourcesOpen === null || isDatasourcesOpen === undefined\n          ? false\n          : isDatasourcesOpen\n      }\n      isSticky\n      name=\"Datasources\"\n      onCreate={addDatasource}\n      onToggle={onDatasourcesToggle}\n      searchKeyword={\"\"}\n      showAddButton={canCreateDatasource}\n      step={0}\n    >\n      {datasourceElements.length ? (\n        datasourceElements\n      ) : (\n        <EmptyComponent\n          mainText={createMessage(EMPTY_DATASOURCE_MAIN_TEXT)}\n          {...(canCreateDatasource && {\n            addBtnText: createMessage(EMPTY_DATASOURCE_BUTTON_TEXT),\n            addFunction: addDatasource || noop,\n          })}\n        />\n      )}\n      {datasourceElements.length > 0 && canCreateDatasource && (\n        <AddEntity\n          action={addDatasource}\n          entityId=\"add_new_datasource\"\n          icon={<Icon name=\"plus\" />}\n          name={createMessage(ADD_DATASOURCE_BUTTON)}\n          step={1}\n        />\n      )}\n      {otherDS.length ? (\n        <ShowAll onClick={listDatasource}>\n          Show all datasources\n          <ArrowRightLineIcon color={Colors.DOVE_GRAY2} size={\"14px\"} />\n        </ShowAll>\n      ) : null}\n    </Entity>\n  );\n});\n\nDatasources.displayName = \"Datasources\";\n\nexport default Datasources;\n","import {\n  copyActionRequest,\n  deleteAction,\n  moveActionRequest,\n} from \"actions/pluginActionActions\";\nimport { initExplorerEntityNameEdit } from \"actions/explorerActions\";\nimport { noop } from \"lodash\";\nimport TreeDropdown from \"pages/Editor/Explorer/TreeDropdown\";\nimport React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPageListAsOptions } from \"selectors/entitiesSelector\";\nimport history from \"utils/history\";\nimport ContextMenuTrigger from \"../ContextMenuTrigger\";\nimport { ContextMenuPopoverModifiers } from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport { useNewActionName } from \"./helpers\";\nimport { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport { ENTITY_TYPE } from \"entities/DataTree/dataTreeFactory\";\nimport { inGuidedTour } from \"selectors/onboardingSelectors\";\nimport { toggleShowDeviationDialog } from \"actions/onboardingActions\";\nimport {\n  CONTEXT_COPY,\n  CONTEXT_DELETE,\n  CONFIRM_CONTEXT_DELETE,\n  CONTEXT_EDIT_NAME,\n  CONTEXT_MOVE,\n  CONTEXT_NO_PAGE,\n  CONTEXT_SHOW_BINDING,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { builderURL } from \"RouteBuilder\";\nimport { getCurrentPageId } from \"selectors/editorSelectors\";\nimport { TreeDropdownOption } from \"design-system-old\";\n\ntype EntityContextMenuProps = {\n  id: string;\n  name: string;\n  className?: string;\n  pageId: string;\n  canManageAction?: boolean;\n  canDeleteAction?: boolean;\n};\nexport function ActionEntityContextMenu(props: EntityContextMenuProps) {\n  const { canDeleteAction = false, canManageAction = false } = props;\n  const nextEntityName = useNewActionName();\n  const guidedTourEnabled = useSelector(inGuidedTour);\n  const dispatch = useDispatch();\n  const [confirmDelete, setConfirmDelete] = useState(false);\n  const pageId = useSelector(getCurrentPageId);\n  const copyActionToPage = useCallback(\n    (actionId: string, actionName: string, pageId: string) =>\n      dispatch(\n        copyActionRequest({\n          id: actionId,\n          destinationPageId: pageId,\n          name: nextEntityName(actionName, pageId, true),\n        }),\n      ),\n    [dispatch, nextEntityName],\n  );\n  const moveActionToPage = useCallback(\n    (actionId: string, actionName: string, destinationPageId: string) =>\n      dispatch(\n        moveActionRequest({\n          id: actionId,\n          destinationPageId,\n          originalPageId: props.pageId,\n          name: nextEntityName(actionName, destinationPageId),\n        }),\n      ),\n    [dispatch, nextEntityName, props.pageId],\n  );\n  const deleteActionFromPage = useCallback(\n    (actionId: string, actionName: string, onSuccess?: () => void) => {\n      if (guidedTourEnabled) {\n        dispatch(toggleShowDeviationDialog(true));\n        return;\n      }\n\n      dispatch(deleteAction({ id: actionId, name: actionName, onSuccess }));\n    },\n    [dispatch, guidedTourEnabled],\n  );\n\n  const menuPages = useSelector(getPageListAsOptions);\n\n  const editActionName = useCallback(() => {\n    if (guidedTourEnabled) {\n      dispatch(toggleShowDeviationDialog(true));\n      return;\n    }\n    dispatch(initExplorerEntityNameEdit(props.id));\n  }, [dispatch, props.id, guidedTourEnabled]);\n\n  const showBinding = useCallback(\n    (actionId, actionName) =>\n      dispatch({\n        type: ReduxActionTypes.SET_ENTITY_INFO,\n        payload: {\n          entityId: actionId,\n          entityName: actionName,\n          entityType: ENTITY_TYPE.ACTION,\n          show: true,\n        },\n      }),\n    [],\n  );\n\n  const optionsTree = [\n    canManageAction && {\n      value: \"rename\",\n      onSelect: editActionName,\n      label: createMessage(CONTEXT_EDIT_NAME),\n    },\n    {\n      value: \"showBinding\",\n      onSelect: () => showBinding(props.id, props.name),\n      label: createMessage(CONTEXT_SHOW_BINDING),\n    },\n    canManageAction && {\n      value: \"copy\",\n      onSelect: noop,\n      label: createMessage(CONTEXT_COPY),\n      children: menuPages.map((page) => {\n        return {\n          ...page,\n          onSelect: () => copyActionToPage(props.id, props.name, page.id),\n        };\n      }),\n    },\n    canManageAction && {\n      value: \"move\",\n      onSelect: noop,\n      label: createMessage(CONTEXT_MOVE),\n      children:\n        menuPages.length > 1\n          ? menuPages\n              .filter((page) => page.id !== props.pageId) // Remove current page from the list\n              .map((page) => {\n                return {\n                  ...page,\n                  onSelect: () =>\n                    moveActionToPage(props.id, props.name, page.id),\n                };\n              })\n          : [\n              {\n                value: \"No Pages\",\n                onSelect: noop,\n                label: createMessage(CONTEXT_NO_PAGE),\n              },\n            ],\n    },\n    canDeleteAction && {\n      confirmDelete: confirmDelete,\n      className: \"t--apiFormDeleteBtn single-select\",\n      value: \"delete\",\n      label: confirmDelete\n        ? createMessage(CONFIRM_CONTEXT_DELETE)\n        : createMessage(CONTEXT_DELETE),\n      intent: \"danger\",\n      onSelect: () => {\n        confirmDelete\n          ? deleteActionFromPage(props.id, props.name, () => {\n              history.push(builderURL({ pageId }));\n              setConfirmDelete(false);\n            })\n          : setConfirmDelete(true);\n      },\n    },\n  ].filter(Boolean);\n\n  return optionsTree.length > 0 ? (\n    <TreeDropdown\n      className={props.className}\n      defaultText=\"\"\n      modifiers={ContextMenuPopoverModifiers}\n      onSelect={noop}\n      optionTree={optionsTree as TreeDropdownOption[]}\n      selectedValue=\"\"\n      setConfirmDelete={setConfirmDelete}\n      toggle={<ContextMenuTrigger className=\"t--context-menu\" />}\n    />\n  ) : null;\n}\n\nexport default ActionEntityContextMenu;\n","import React, { memo, useCallback, useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Entity, { EntityClassNames } from \"../Entity\";\nimport ActionEntityContextMenu from \"./ActionEntityContextMenu\";\nimport history, { NavigationMethod } from \"utils/history\";\nimport { saveActionName } from \"actions/pluginActionActions\";\nimport PerformanceTracker, {\n  PerformanceTransactionName,\n} from \"utils/PerformanceTracker\";\nimport { getCurrentPageId } from \"selectors/editorSelectors\";\nimport { getAction, getPlugins } from \"selectors/entitiesSelector\";\nimport { Action, PluginType } from \"entities/Action\";\nimport { keyBy } from \"lodash\";\nimport { getActionConfig } from \"./helpers\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { useLocation } from \"react-router\";\nimport {\n  hasDeleteActionPermission,\n  hasManageActionPermission,\n} from \"@appsmith/utils/permissionHelpers\";\n\nconst getUpdateActionNameReduxAction = (id: string, name: string) => {\n  return saveActionName({ id, name });\n};\n\ntype ExplorerActionEntityProps = {\n  step: number;\n  searchKeyword?: string;\n  id: string;\n  type: PluginType;\n  isActive: boolean;\n};\n\nexport const ExplorerActionEntity = memo((props: ExplorerActionEntityProps) => {\n  const pageId = useSelector(getCurrentPageId);\n  const action = useSelector((state) => getAction(state, props.id)) as Action;\n  const plugins = useSelector(getPlugins);\n  const pluginGroups = useMemo(() => keyBy(plugins, \"id\"), [plugins]);\n  const location = useLocation();\n\n  const config = getActionConfig(props.type);\n  const url = config?.getURL(\n    pageId,\n    action.id,\n    action.pluginType,\n    pluginGroups[action.pluginId],\n  );\n  const icon = config?.getIcon(action, pluginGroups[action.pluginId]);\n\n  const switchToAction = useCallback(() => {\n    PerformanceTracker.startTracking(PerformanceTransactionName.OPEN_ACTION, {\n      url,\n    });\n    url && history.push(url, { invokedBy: NavigationMethod.EntityExplorer });\n    AnalyticsUtil.logEvent(\"ENTITY_EXPLORER_CLICK\", {\n      type: \"QUERIES/APIs\",\n      fromUrl: location.pathname,\n      toUrl: url,\n      name: action.name,\n    });\n  }, [url, location.pathname, action.name]);\n\n  const actionPermissions = action.userPermissions || [];\n\n  const canDeleteAction = hasDeleteActionPermission(actionPermissions);\n\n  const canManageAction = hasManageActionPermission(actionPermissions);\n\n  const contextMenu = (\n    <ActionEntityContextMenu\n      canDeleteAction={canDeleteAction}\n      canManageAction={canManageAction}\n      className={EntityClassNames.CONTEXT_MENU}\n      id={action.id}\n      name={action.name}\n      pageId={pageId}\n    />\n  );\n  return (\n    <Entity\n      action={switchToAction}\n      active={props.isActive}\n      canEditEntityName={canManageAction}\n      className=\"action\"\n      contextMenu={contextMenu}\n      entityId={action.id}\n      icon={icon}\n      key={action.id}\n      name={action.name}\n      searchKeyword={props.searchKeyword}\n      step={props.step}\n      updateEntityName={getUpdateActionNameReduxAction}\n    />\n  );\n});\n\nExplorerActionEntity.displayName = \"ExplorerActionEntity\";\n\nexport default ExplorerActionEntity;\n","import { getNextEntityName } from \"utils/AppsmithUtils\";\nimport { groupBy } from \"lodash\";\nimport { JSCollectionData } from \"reducers/entityReducers/jsActionsReducer\";\nimport { selectJSCollections } from \"selectors/editorSelectors\";\nimport store from \"store\";\n\nexport const getJSEntityName = () => {\n  const state = store.getState();\n  const jsCollections = selectJSCollections(state);\n  return (\n    name: string,\n    destinationPageId: string,\n    isCopyOperation?: boolean,\n  ) => {\n    const groupedActions = groupBy(jsCollections, \"config.pageId\");\n    const pageActions = groupedActions[destinationPageId] || [];\n    const actionNames = pageActions.map(\n      (action: JSCollectionData) => action.config.name,\n    );\n    return actionNames.indexOf(name) > -1\n      ? getNextEntityName(\n          isCopyOperation ? `${name}Copy` : name,\n          actionNames,\n          true,\n        )\n      : name;\n  };\n};\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TreeDropdown from \"pages/Editor/Explorer/TreeDropdown\";\nimport ContextMenuTrigger from \"../ContextMenuTrigger\";\nimport {\n  moveJSCollectionRequest,\n  copyJSCollectionRequest,\n  deleteJSCollection,\n} from \"actions/jsActionActions\";\nimport { ContextMenuPopoverModifiers } from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport noop from \"lodash/noop\";\nimport { getJSEntityName } from \"./helpers\";\nimport { initExplorerEntityNameEdit } from \"actions/explorerActions\";\nimport { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport { ENTITY_TYPE } from \"entities/DataTree/dataTreeFactory\";\nimport {\n  CONTEXT_COPY,\n  CONTEXT_DELETE,\n  CONFIRM_CONTEXT_DELETE,\n  CONTEXT_EDIT_NAME,\n  CONTEXT_MOVE,\n  CONTEXT_NO_PAGE,\n  CONTEXT_SHOW_BINDING,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { getPageListAsOptions } from \"selectors/entitiesSelector\";\nimport { TreeDropdownOption } from \"design-system-old\";\n\ntype EntityContextMenuProps = {\n  id: string;\n  name: string;\n  className?: string;\n  pageId: string;\n  canManage?: boolean;\n  canDelete?: boolean;\n};\nexport function JSCollectionEntityContextMenu(props: EntityContextMenuProps) {\n  const { canDelete = false, canManage = false } = props;\n  const [confirmDelete, setConfirmDelete] = useState(false);\n  const dispatch = useDispatch();\n\n  const showBinding = useCallback(\n    (actionId, actionName) =>\n      dispatch({\n        type: ReduxActionTypes.SET_ENTITY_INFO,\n        payload: {\n          entityId: actionId,\n          entityName: actionName,\n          entityType: ENTITY_TYPE.JSACTION,\n          show: true,\n        },\n      }),\n    [],\n  );\n\n  const copyJSCollectionToPage = useCallback(\n    (actionId: string, actionName: string, pageId: string) => {\n      const nextEntityName = getJSEntityName();\n      dispatch(\n        copyJSCollectionRequest({\n          id: actionId,\n          destinationPageId: pageId,\n          name: nextEntityName(actionName, pageId, true),\n        }),\n      );\n    },\n    [dispatch],\n  );\n  const moveJSCollectionToPage = useCallback(\n    (actionId: string, actionName: string, destinationPageId: string) => {\n      const nextEntityName = getJSEntityName();\n      dispatch(\n        moveJSCollectionRequest({\n          id: actionId,\n          destinationPageId,\n          name: nextEntityName(actionName, destinationPageId, false),\n        }),\n      );\n    },\n    [dispatch, props.pageId],\n  );\n  const deleteJSCollectionFromPage = useCallback(\n    (actionId: string, actionName: string) =>\n      dispatch(deleteJSCollection({ id: actionId, name: actionName })),\n    [dispatch],\n  );\n\n  const menuPages = useSelector(getPageListAsOptions);\n  const editJSCollectionName = useCallback(\n    () => dispatch(initExplorerEntityNameEdit(props.id)),\n    [dispatch, props.id],\n  );\n\n  const optionsTree = [\n    canManage && {\n      value: \"rename\",\n      onSelect: editJSCollectionName,\n      label: createMessage(CONTEXT_EDIT_NAME),\n    },\n    {\n      value: \"showBinding\",\n      onSelect: () => showBinding(props.id, props.name),\n      label: createMessage(CONTEXT_SHOW_BINDING),\n    },\n    canManage && {\n      value: \"copy\",\n      onSelect: noop,\n      label: createMessage(CONTEXT_COPY),\n      children: menuPages.map((page) => {\n        return {\n          ...page,\n          onSelect: () => copyJSCollectionToPage(props.id, props.name, page.id),\n        };\n      }),\n    },\n    canManage && {\n      value: \"move\",\n      onSelect: noop,\n      label: createMessage(CONTEXT_MOVE),\n      children:\n        menuPages.length > 1\n          ? menuPages\n              .filter((page) => page.id !== props.pageId) // Remove current page from the list\n              .map((page) => {\n                return {\n                  ...page,\n                  onSelect: () =>\n                    moveJSCollectionToPage(props.id, props.name, page.id),\n                };\n              })\n          : [\n              {\n                value: \"No Pages\",\n                onSelect: noop,\n                label: createMessage(CONTEXT_NO_PAGE),\n              },\n            ],\n    },\n    canDelete && {\n      confirmDelete: confirmDelete,\n      className: \"t--apiFormDeleteBtn single-select\",\n      value: \"delete\",\n      onSelect: () => {\n        confirmDelete\n          ? deleteJSCollectionFromPage(props.id, props.name)\n          : setConfirmDelete(true);\n      },\n      label: confirmDelete\n        ? createMessage(CONFIRM_CONTEXT_DELETE)\n        : createMessage(CONTEXT_DELETE),\n      intent: \"danger\",\n    },\n  ].filter(Boolean);\n\n  return optionsTree.length > 0 ? (\n    <TreeDropdown\n      className={props.className}\n      defaultText=\"\"\n      modifiers={ContextMenuPopoverModifiers}\n      onSelect={noop}\n      optionTree={optionsTree as TreeDropdownOption[]}\n      selectedValue=\"\"\n      setConfirmDelete={setConfirmDelete}\n      toggle={<ContextMenuTrigger className=\"t--context-menu\" />}\n    />\n  ) : null;\n}\n\nexport default JSCollectionEntityContextMenu;\n","import React, { memo, useCallback } from \"react\";\nimport Entity, { EntityClassNames } from \"../Entity\";\nimport history, { NavigationMethod } from \"utils/history\";\nimport JSCollectionEntityContextMenu from \"./JSActionContextMenu\";\nimport { saveJSObjectName } from \"actions/jsActionActions\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentPageId } from \"selectors/editorSelectors\";\nimport { getJSCollection } from \"selectors/entitiesSelector\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { JSCollection } from \"entities/JSCollection\";\nimport { JsFileIconV2 } from \"../ExplorerIcons\";\nimport { PluginType } from \"entities/Action\";\nimport { jsCollectionIdURL } from \"RouteBuilder\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { useLocation } from \"react-router\";\nimport {\n  hasDeleteActionPermission,\n  hasManageActionPermission,\n} from \"@appsmith/utils/permissionHelpers\";\n\ntype ExplorerJSCollectionEntityProps = {\n  step: number;\n  searchKeyword?: string;\n  id: string;\n  isActive: boolean;\n  type: PluginType;\n};\n\nconst getUpdateJSObjectName = (id: string, name: string) => {\n  return saveJSObjectName({ id, name });\n};\n\nexport const ExplorerJSCollectionEntity = memo(\n  (props: ExplorerJSCollectionEntityProps) => {\n    const pageId = useSelector(getCurrentPageId) as string;\n    const jsAction = useSelector((state: AppState) =>\n      getJSCollection(state, props.id),\n    ) as JSCollection;\n    const location = useLocation();\n    const navigateToUrl = jsCollectionIdURL({\n      pageId,\n      collectionId: jsAction.id,\n      params: {},\n    });\n    const navigateToJSCollection = useCallback(() => {\n      if (jsAction.id) {\n        AnalyticsUtil.logEvent(\"ENTITY_EXPLORER_CLICK\", {\n          type: \"JSOBJECT\",\n          fromUrl: location.pathname,\n          toUrl: navigateToUrl,\n          name: jsAction.name,\n        });\n        history.push(navigateToUrl, {\n          invokedBy: NavigationMethod.EntityExplorer,\n        });\n      }\n    }, [pageId, jsAction.id, jsAction.name, location.pathname]);\n\n    const jsActionPermissions = jsAction.userPermissions || [];\n\n    const canDeleteJSAction = hasDeleteActionPermission(jsActionPermissions);\n\n    const canManageJSAction = hasManageActionPermission(jsActionPermissions);\n\n    const contextMenu = (\n      <JSCollectionEntityContextMenu\n        canDelete={canDeleteJSAction}\n        canManage={canManageJSAction}\n        className={EntityClassNames.CONTEXT_MENU}\n        id={jsAction.id}\n        name={jsAction.name}\n        pageId={pageId}\n      />\n    );\n    return (\n      <Entity\n        action={navigateToJSCollection}\n        active={props.isActive}\n        canEditEntityName={canManageJSAction}\n        className=\"t--jsaction\"\n        contextMenu={contextMenu}\n        entityId={jsAction.id}\n        icon={JsFileIconV2()}\n        key={jsAction.id}\n        name={jsAction.name}\n        searchKeyword={props.searchKeyword}\n        step={props.step}\n        updateEntityName={getUpdateJSObjectName}\n      />\n    );\n  },\n);\n\nExplorerJSCollectionEntity.displayName = \"ExplorerJSCollectionEntity\";\n\nexport default ExplorerJSCollectionEntity;\n","import React from \"react\";\nimport { HotkeysTarget } from \"@blueprintjs/core/lib/esnext/components/hotkeys/hotkeysTarget.js\";\nimport { Hotkey, Hotkeys } from \"@blueprintjs/core\";\nimport { SelectEvent } from \"components/editorComponents/GlobalSearch/utils\";\n\ntype Props = {\n  handleUpKey: () => void;\n  handleDownKey: () => void;\n  handleSubmitKey: (e: SelectEvent) => void;\n  children: React.ReactNode;\n};\n\n@HotkeysTarget\nclass SubmenuHotKeys extends React.Component<Props> {\n  get hotKeysConfig() {\n    return [\n      {\n        combo: \"up\",\n        onKeyDown: () => {\n          this.props.handleUpKey();\n        },\n        allowInInput: true,\n        label: \"Move up the list\",\n      },\n      {\n        combo: \"down\",\n        onKeyDown: this.props.handleDownKey,\n        allowInInput: true,\n        label: \"Move down the list\",\n      },\n      {\n        combo: \"return\",\n        onKeyDown: this.props.handleSubmitKey,\n        allowInInput: true,\n        label: \"Submit\",\n      },\n    ];\n  }\n\n  renderHotkeys() {\n    return (\n      <Hotkeys>\n        {this.hotKeysConfig.map(\n          ({ allowInInput, combo, label, onKeyDown }, index) => (\n            <Hotkey\n              allowInInput={allowInInput}\n              combo={combo}\n              global={false}\n              key={index}\n              label={label}\n              onKeyDown={onKeyDown}\n            />\n          ),\n        )}\n      </Hotkeys>\n    );\n  }\n\n  render() {\n    return <div>{this.props.children}</div>;\n  }\n}\n\nexport default SubmenuHotKeys;\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Popover2 } from \"@blueprintjs/popover2\";\nimport { useFilteredFileOperations } from \"components/editorComponents/GlobalSearch/GlobalSearchHooks\";\nimport {\n  comboHelpText,\n  SEARCH_CATEGORY_ID,\n  SEARCH_ITEM_TYPES,\n} from \"components/editorComponents/GlobalSearch/utils\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCurrentPageId,\n  getPagePermissions,\n} from \"selectors/editorSelectors\";\nimport EntityAddButton from \"../Entity/AddButton\";\nimport { ReactComponent as SearchIcon } from \"assets/icons/ads/search.svg\";\nimport { ReactComponent as CrossIcon } from \"assets/icons/ads/cross.svg\";\nimport classNames from \"classnames\";\nimport keyBy from \"lodash/keyBy\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { EntityIcon, getPluginIcon } from \"../ExplorerIcons\";\nimport SubmenuHotKeys from \"./SubmenuHotkeys\";\nimport scrollIntoView from \"scroll-into-view-if-needed\";\nimport { Colors } from \"constants/Colors\";\nimport { TOOLTIP_HOVER_ON_DELAY } from \"constants/AppConstants\";\nimport { EntityClassNames } from \"../Entity\";\nimport { TooltipComponent } from \"design-system-old\";\nimport {\n  ADD_QUERY_JS_TOOLTIP,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { useCloseMenuOnScroll } from \"../hooks\";\nimport { SIDEBAR_ID } from \"constants/Explorer\";\nimport { hasCreateActionPermission } from \"@appsmith/utils/permissionHelpers\";\n\nconst SubMenuContainer = styled.div`\n  width: 250px;\n  .ops-container {\n    scrollbar-width: none;\n    -ms-overflow-style: none;\n    &::-webkit-scrollbar {\n      display: none;\n      -webkit-appearance: none;\n    }\n    max-height: 220px;\n    overflow: hidden;\n    overflow-y: auto;\n    div.active {\n      background: ${Colors.GREY_2};\n    }\n    > div:not(.section-title) {\n      &: hover {\n        background: ${Colors.GREY_2};\n      }\n    }\n  }\n`;\n\ntype SubMenuProps = {\n  className: string;\n  openMenu: boolean;\n  onMenuClose: () => void;\n};\n\nexport default function ExplorerSubMenu({\n  className,\n  onMenuClose,\n  openMenu,\n}: SubMenuProps) {\n  const [query, setQuery] = useState(\"\");\n  const [show, setShow] = useState(openMenu);\n  const fileOperations = useFilteredFileOperations(query);\n  const filteredFileOperations = fileOperations.filter(\n    (item: any) => item.kind !== SEARCH_ITEM_TYPES.sectionTitle,\n  );\n  const pageId = useSelector(getCurrentPageId);\n  const dispatch = useDispatch();\n  const plugins = useSelector((state: AppState) => {\n    return state.entities.plugins.list;\n  });\n  const pluginGroups = useMemo(() => keyBy(plugins, \"id\"), [plugins]);\n  const [activeItemIdx, setActiveItemIdx] = useState(0);\n  useEffect(() => setShow(openMenu), [openMenu]);\n  useCloseMenuOnScroll(SIDEBAR_ID, show, () => setShow(false));\n\n  const pagePermissions = useSelector(getPagePermissions);\n\n  const canCreateActions = hasCreateActionPermission(pagePermissions);\n\n  useEffect(() => {\n    setQuery(\"\");\n  }, [show]);\n\n  useEffect(() => {\n    const element = document.getElementById(`file-op-${activeItemIdx}`);\n    if (element)\n      scrollIntoView(element, {\n        scrollMode: \"if-needed\",\n      });\n  }, [activeItemIdx]);\n\n  const handleUpKey = useCallback(() => {\n    setActiveItemIdx((currentActiveIndex) => {\n      if (currentActiveIndex <= 0) return filteredFileOperations.length - 1;\n      return Math.max(currentActiveIndex - 1, 0);\n    });\n  }, [filteredFileOperations]);\n\n  const handleDownKey = useCallback(() => {\n    setActiveItemIdx((currentActiveIndex) => {\n      if (currentActiveIndex >= filteredFileOperations.length - 1) return 0;\n      return Math.min(\n        currentActiveIndex + 1,\n        filteredFileOperations.length - 1,\n      );\n    });\n  }, [filteredFileOperations]);\n\n  const onChange = useCallback((e) => {\n    setQuery(e.target.value);\n  }, []);\n\n  const handleSelect = () => {\n    const item = filteredFileOperations[activeItemIdx];\n    handleClick(item);\n  };\n\n  const handleClick = useCallback(\n    (item: any) => {\n      if (item.kind === SEARCH_ITEM_TYPES.sectionTitle) return;\n      if (item.action) {\n        dispatch(item.action(pageId, \"SUBMENU\"));\n      } else if (item.redirect) {\n        item.redirect(pageId, \"SUBMENU\");\n      }\n      setShow(false);\n    },\n    [pageId, dispatch, setShow],\n  );\n\n  return (\n    <Popover2\n      canEscapeKeyClose\n      className=\"file-ops\"\n      content={\n        <SubmenuHotKeys\n          handleDownKey={handleDownKey}\n          handleSubmitKey={handleSelect}\n          handleUpKey={handleUpKey}\n        >\n          <SubMenuContainer className=\"bg-white overflow-y-auto overflow-x-hidden flex flex-col justify-start z-10 delay-150 transition-all\">\n            <div className=\"px-4 py-2 text-sm font-medium text-gray\">\n              Create New\n            </div>\n            <div className=\"flex items-center space-x-2 px-4\">\n              <SearchIcon className=\"box-content w-4 h-4\" />\n              <input\n                autoComplete=\"off\"\n                autoFocus\n                className=\"flex-grow text-sm py-2 text-gray-800 bg-transparent placeholder-trueGray-500\"\n                onChange={onChange}\n                placeholder=\"Search datasources\"\n                type=\"text\"\n                value={query}\n              />\n              {query && (\n                <button\n                  className=\"p-1 hover:bg-trueGray-200\"\n                  onClick={() => setQuery(\"\")}\n                >\n                  <CrossIcon className=\"w-3 h-3 text-trueGray-100\" />\n                </button>\n              )}\n            </div>\n            <div className=\"ops-container\">\n              {filteredFileOperations.map((item: any, idx: number) => {\n                const icon =\n                  item.icon ||\n                  (item.pluginId && (\n                    <EntityIcon>\n                      {getPluginIcon(pluginGroups[item.pluginId])}\n                    </EntityIcon>\n                  ));\n                return (\n                  <div\n                    className={classNames({\n                      \"px-4 py-2 text-sm flex items-center gap-2 t--file-operation\": true,\n                      \"cursor-pointer\":\n                        item.kind !== SEARCH_ITEM_TYPES.sectionTitle,\n                      active:\n                        activeItemIdx === idx &&\n                        item.kind !== SEARCH_ITEM_TYPES.sectionTitle,\n                      \"font-medium text-gray section-title\":\n                        item.kind === SEARCH_ITEM_TYPES.sectionTitle,\n                    })}\n                    id={`file-op-${idx}`}\n                    key={`file-op-${idx}`}\n                    onClick={() => handleClick(item)}\n                  >\n                    {icon && <span className=\"flex-shrink-0\">{icon}</span>}\n                    <span className=\"overflow-hidden whitespace-nowrap overflow-ellipsis\">\n                      {item.shortTitle || item.title}\n                    </span>\n                  </div>\n                );\n              })}\n            </div>\n          </SubMenuContainer>\n        </SubmenuHotKeys>\n      }\n      isOpen={show}\n      minimal\n      onClose={() => {\n        setShow(false);\n        onMenuClose();\n      }}\n      placement=\"right-start\"\n      transitionDuration={0}\n    >\n      {canCreateActions && (\n        <TooltipComponent\n          boundary=\"viewport\"\n          className={EntityClassNames.TOOLTIP}\n          content={\n            <>\n              {createMessage(ADD_QUERY_JS_TOOLTIP)} (\n              {comboHelpText[SEARCH_CATEGORY_ID.ACTION_OPERATION]})\n            </>\n          }\n          disabled={show}\n          hoverOpenDelay={TOOLTIP_HOVER_ON_DELAY}\n          position=\"right\"\n        >\n          <EntityAddButton\n            className={`${className} ${show ? \"selected\" : \"\"}`}\n            onClick={() => setShow(true)}\n          />\n        </TooltipComponent>\n      )}\n    </Popover2>\n  );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useActiveAction } from \"../hooks\";\nimport { Entity, EntityClassNames } from \"../Entity/index\";\nimport {\n  createMessage,\n  ADD_QUERY_JS_BUTTON,\n  EMPTY_QUERY_JS_BUTTON_TEXT,\n  EMPTY_QUERY_JS_MAIN_TEXT,\n} from \"@appsmith/constants/messages\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCurrentApplicationId,\n  getCurrentPageId,\n  getPagePermissions,\n} from \"selectors/editorSelectors\";\nimport { ExplorerActionEntity } from \"../Actions/ActionEntity\";\nimport ExplorerJSCollectionEntity from \"../JSActions/JSActionEntity\";\nimport { Colors } from \"constants/Colors\";\nimport { selectFilesForExplorer } from \"selectors/entitiesSelector\";\nimport {\n  getExplorerStatus,\n  saveExplorerStatus,\n} from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport { Icon } from \"design-system-old\";\nimport { AddEntity, EmptyComponent } from \"../common\";\nimport ExplorerSubMenu from \"./Submenu\";\nimport { hasCreateActionPermission } from \"@appsmith/utils/permissionHelpers\";\n\nfunction Files() {\n  const applicationId = useSelector(getCurrentApplicationId);\n  const pageId = useSelector(getCurrentPageId) as string;\n  const files = useSelector(selectFilesForExplorer);\n  const dispatch = useDispatch();\n  const isFilesOpen = getExplorerStatus(applicationId, \"queriesAndJs\");\n  const [isMenuOpen, openMenu] = useState(false);\n\n  const onCreate = useCallback(() => {\n    openMenu(true);\n  }, [dispatch, openMenu]);\n\n  const activeActionId = useActiveAction();\n\n  useEffect(() => {\n    if (!activeActionId) return;\n    document.getElementById(`entity-${activeActionId}`)?.scrollIntoView({\n      block: \"nearest\",\n      inline: \"nearest\",\n    });\n  }, [activeActionId]);\n\n  const onFilesToggle = useCallback(\n    (isOpen: boolean) => {\n      saveExplorerStatus(applicationId, \"queriesAndJs\", isOpen);\n    },\n    [applicationId],\n  );\n\n  const pagePermissions = useSelector(getPagePermissions);\n\n  const canCreateActions = hasCreateActionPermission(pagePermissions);\n\n  const onMenuClose = useCallback(() => openMenu(false), [openMenu]);\n\n  const fileEntities = useMemo(\n    () =>\n      files.map(({ entity, type }: any) => {\n        if (type === \"group\") {\n          return (\n            <div\n              className={`text-sm text-[${Colors.CODE_GRAY}] pl-8 bg-trueGray-50 overflow-hidden overflow-ellipsis whitespace-nowrap`}\n              key={entity.name || \"Queries\"}\n            >\n              {entity.name}\n            </div>\n          );\n        } else if (type === \"JS\") {\n          return (\n            <ExplorerJSCollectionEntity\n              id={entity.id}\n              isActive={entity.id === activeActionId}\n              key={entity.id}\n              searchKeyword={\"\"}\n              step={2}\n              type={type}\n            />\n          );\n        } else {\n          return (\n            <ExplorerActionEntity\n              id={entity.id}\n              isActive={entity.id === activeActionId}\n              key={entity.id}\n              searchKeyword={\"\"}\n              step={2}\n              type={type}\n            />\n          );\n        }\n      }),\n    [files, activeActionId],\n  );\n\n  return (\n    <Entity\n      alwaysShowRightIcon\n      className={`group files`}\n      customAddButton={\n        <ExplorerSubMenu\n          className={`${EntityClassNames.ADD_BUTTON} group files`}\n          onMenuClose={onMenuClose}\n          openMenu={isMenuOpen}\n        />\n      }\n      disabled={false}\n      entityId={pageId + \"_widgets\"}\n      icon={null}\n      isDefaultExpanded={\n        isFilesOpen === null || isFilesOpen === undefined ? false : isFilesOpen\n      }\n      isSticky\n      key={pageId + \"_widgets\"}\n      name=\"Queries/JS\"\n      onCreate={onCreate}\n      onToggle={onFilesToggle}\n      searchKeyword={\"\"}\n      showAddButton={canCreateActions}\n      step={0}\n    >\n      {fileEntities.length ? (\n        fileEntities\n      ) : (\n        <EmptyComponent\n          mainText={createMessage(EMPTY_QUERY_JS_MAIN_TEXT)}\n          {...(canCreateActions && {\n            addBtnText: createMessage(EMPTY_QUERY_JS_BUTTON_TEXT),\n            addFunction: onCreate,\n          })}\n        />\n      )}\n      {fileEntities.length > 0 && canCreateActions && (\n        <AddEntity\n          action={onCreate}\n          entityId={pageId + \"_queries_js_add_new_datasource\"}\n          icon={<Icon name=\"plus\" />}\n          name={createMessage(ADD_QUERY_JS_BUTTON)}\n          step={1}\n        />\n      )}\n    </Entity>\n  );\n}\n\nFiles.displayName = \"Files\";\n\nexport default React.memo(Files);\n","import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TreeDropdown, {\n  TreeDropdownOption,\n} from \"pages/Editor/Explorer/TreeDropdown\";\nimport ContextMenuTrigger from \"../ContextMenuTrigger\";\nimport { ContextMenuPopoverModifiers } from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport { noop } from \"lodash\";\nimport { initExplorerEntityNameEdit } from \"actions/explorerActions\";\nimport { AppState } from \"@appsmith/reducers\";\nimport {\n  ReduxActionTypes,\n  WidgetReduxActionTypes,\n} from \"@appsmith/constants/ReduxActionConstants\";\nimport WidgetFactory from \"utils/WidgetFactory\";\nimport { ENTITY_TYPE } from \"entities/DataTree/dataTreeFactory\";\nimport { toggleShowDeviationDialog } from \"actions/onboardingActions\";\nimport { inGuidedTour } from \"selectors/onboardingSelectors\";\nconst WidgetTypes = WidgetFactory.widgetTypes;\n\nexport function WidgetContextMenu(props: {\n  widgetId: string;\n  pageId: string;\n  className?: string;\n  canManagePages?: boolean;\n}) {\n  const { widgetId } = props;\n  const parentId = useSelector((state: AppState) => {\n    return state.ui.pageWidgets[props.pageId][props.widgetId].parentId;\n  });\n  const widget = useSelector((state: AppState) => {\n    return state.ui.pageWidgets[props.pageId][props.widgetId];\n  });\n\n  const parentWidget: any = useSelector((state: AppState) => {\n    if (parentId) return state.ui.pageWidgets[props.pageId][parentId];\n    return {};\n  });\n  const guidedTourEnabled = useSelector(inGuidedTour);\n  const dispatch = useDispatch();\n  const dispatchDelete = useCallback(() => {\n    // If the widget is a tab we are updating the `tabs` of the property of the widget\n    // This is similar to deleting a tab from the property pane\n    if (widget.tabName && parentWidget.type === WidgetTypes.TABS_WIDGET) {\n      const tabsObj = { ...parentWidget.tabsObj };\n      const filteredTabs = Object.values(tabsObj);\n      if (widget.parentId && !!filteredTabs.length) {\n        dispatch({\n          type: ReduxActionTypes.WIDGET_DELETE_TAB_CHILD,\n          payload: { ...tabsObj[widget.tabId] },\n        });\n      }\n      return;\n    }\n\n    dispatch({\n      type: WidgetReduxActionTypes.WIDGET_DELETE,\n      payload: {\n        widgetId,\n        parentId,\n      },\n    });\n  }, [dispatch, widgetId, parentId, widget, parentWidget]);\n\n  const showBinding = useCallback(\n    (widgetId, widgetName) =>\n      dispatch({\n        type: ReduxActionTypes.SET_ENTITY_INFO,\n        payload: {\n          entityId: widgetId,\n          entityName: widgetName,\n          entityType: ENTITY_TYPE.WIDGET,\n          show: true,\n        },\n      }),\n    [],\n  );\n\n  const editWidgetName = useCallback(() => {\n    if (guidedTourEnabled) {\n      dispatch(toggleShowDeviationDialog(true));\n      return;\n    }\n    dispatch(initExplorerEntityNameEdit(widgetId));\n  }, [dispatch, widgetId, guidedTourEnabled]);\n\n  const optionTree: TreeDropdownOption[] = [\n    {\n      value: \"showBinding\",\n      onSelect: () => showBinding(props.widgetId, widget.widgetName),\n      label: \"Show Bindings\",\n    },\n  ];\n\n  if (props.canManagePages) {\n    const option: TreeDropdownOption = {\n      value: \"rename\",\n      onSelect: editWidgetName,\n      label: \"Edit Name\",\n    };\n    optionTree.push(option);\n  }\n\n  if (widget.isDeletable !== false && props.canManagePages) {\n    const option: TreeDropdownOption = {\n      value: \"delete\",\n      onSelect: dispatchDelete,\n      label: \"Delete\",\n      intent: \"danger\",\n    };\n\n    optionTree.push(option);\n  }\n  return optionTree.length > 0 ? (\n    <TreeDropdown\n      className={props.className}\n      defaultText=\"\"\n      modifiers={ContextMenuPopoverModifiers}\n      onSelect={noop}\n      optionTree={optionTree as TreeDropdownOption[]}\n      selectedValue=\"\"\n      toggle={<ContextMenuTrigger className=\"t--context-menu\" />}\n    />\n  ) : null;\n}\n\nWidgetContextMenu.displayName = \"WidgetContextMenu\";\n\nexport default WidgetContextMenu;\n","import React, { memo, useCallback, useMemo } from \"react\";\nimport Entity, { EntityClassNames } from \"../Entity\";\nimport { WidgetProps } from \"widgets/BaseWidget\";\nimport { WidgetType } from \"constants/WidgetConstants\";\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"@appsmith/reducers\";\nimport WidgetContextMenu from \"./WidgetContextMenu\";\nimport { updateWidgetName } from \"actions/propertyPaneActions\";\nimport { CanvasStructure } from \"reducers/uiReducers/pageCanvasStructureReducer\";\nimport { getLastSelectedWidget, getSelectedWidgets } from \"selectors/ui\";\nimport { useNavigateToWidget } from \"./useNavigateToWidget\";\nimport WidgetIcon from \"./WidgetIcon\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { builderURL } from \"RouteBuilder\";\nimport { useLocation } from \"react-router\";\nimport { hasManagePagePermission } from \"@appsmith/utils/permissionHelpers\";\nimport { getPagePermissions } from \"selectors/editorSelectors\";\nimport { NavigationMethod } from \"utils/history\";\n\nexport type WidgetTree = WidgetProps & { children?: WidgetTree[] };\n\nconst UNREGISTERED_WIDGETS: WidgetType[] = [\"ICON_WIDGET\"];\n\nconst useWidget = (\n  widgetId: string,\n  widgetType: WidgetType,\n  pageId: string,\n) => {\n  const selectedWidgets = useSelector(getSelectedWidgets);\n  const lastSelectedWidget = useSelector(getLastSelectedWidget);\n  const isWidgetSelected = selectedWidgets.includes(widgetId);\n  const multipleWidgetsSelected = selectedWidgets.length > 1;\n\n  const { navigateToWidget } = useNavigateToWidget();\n\n  const boundNavigateToWidget = useCallback(\n    (e: any) => {\n      const isMultiSelect = e.metaKey || e.ctrlKey;\n      const isShiftSelect = e.shiftKey;\n      navigateToWidget(\n        widgetId,\n        widgetType,\n        pageId,\n        NavigationMethod.EntityExplorer,\n        isWidgetSelected,\n        isMultiSelect,\n        isShiftSelect,\n      );\n    },\n    [widgetId, widgetType, pageId, isWidgetSelected, navigateToWidget],\n  );\n\n  return {\n    navigateToWidget: boundNavigateToWidget,\n    isWidgetSelected,\n    multipleWidgetsSelected,\n    lastSelectedWidget,\n  };\n};\n\nexport type WidgetEntityProps = {\n  widgetId: string;\n  widgetName: string;\n  widgetType: WidgetType;\n  step: number;\n  pageId: string;\n  childWidgets?: CanvasStructure[];\n  parentModalId?: string;\n  searchKeyword?: string;\n  isDefaultExpanded?: boolean;\n  widgetsInStep: string[];\n};\n\nexport const WidgetEntity = memo((props: WidgetEntityProps) => {\n  const widgetsToExpand = useSelector(\n    (state: AppState) => state.ui.widgetDragResize.selectedWidgetAncestry,\n  );\n  const icon = <WidgetIcon type={props.widgetType} />;\n  const location = useLocation();\n\n  const forceExpand = widgetsToExpand.includes(props.widgetId);\n\n  const pagePermissions = useSelector(getPagePermissions);\n\n  const canManagePages = hasManagePagePermission(pagePermissions);\n\n  const {\n    isWidgetSelected,\n    lastSelectedWidget,\n    multipleWidgetsSelected,\n    navigateToWidget,\n  } = useWidget(props.widgetId, props.widgetType, props.pageId);\n\n  const { parentModalId, widgetId, widgetType } = props;\n  /**\n   * While navigating to a widget we need to show a modal if the widget is nested within it\n   * Since the immediate parent for the widget would be a canvas instead of the modal,\n   * so we track the immediate modal parent for the widget\n   */\n  const parentModalIdForChildren = useMemo(() => {\n    return widgetType === \"MODAL_WIDGET\" ? widgetId : parentModalId;\n  }, [widgetType, widgetId, parentModalId]);\n\n  const switchWidget = useCallback(\n    (e) => {\n      AnalyticsUtil.logEvent(\"ENTITY_EXPLORER_CLICK\", {\n        type: \"WIDGETS\",\n        fromUrl: location.pathname,\n        toUrl: `${builderURL({\n          pageId: props.pageId,\n          hash: widgetId,\n        })}`,\n        name: props.widgetName,\n      });\n      navigateToWidget(e);\n    },\n    [location.pathname, props.pageId, widgetId, props.widgetName],\n  );\n\n  if (UNREGISTERED_WIDGETS.indexOf(props.widgetType) > -1) return null;\n\n  const contextMenu = (\n    <WidgetContextMenu\n      canManagePages={canManagePages}\n      className={EntityClassNames.CONTEXT_MENU}\n      pageId={props.pageId}\n      widgetId={props.widgetId}\n    />\n  );\n\n  const showContextMenu = !multipleWidgetsSelected;\n  const widgetsInStep = props?.childWidgets\n    ? props?.childWidgets?.map((child) => child.widgetId)\n    : [];\n\n  return (\n    <Entity\n      action={switchWidget}\n      active={isWidgetSelected}\n      canEditEntityName={canManagePages}\n      className=\"widget\"\n      contextMenu={showContextMenu && contextMenu}\n      entityId={props.widgetId}\n      forceExpand={forceExpand}\n      highlight={lastSelectedWidget === props.widgetId}\n      icon={icon}\n      isDefaultExpanded={\n        (!!props.searchKeyword && !!props.childWidgets) ||\n        !!props.isDefaultExpanded\n      }\n      name={props.widgetName}\n      searchKeyword={props.searchKeyword}\n      showAddButton={canManagePages}\n      step={props.step}\n      updateEntityName={updateWidgetName}\n    >\n      {props.childWidgets &&\n        props.childWidgets.length > 0 &&\n        props.childWidgets.map((child) => (\n          <WidgetEntity\n            childWidgets={child.children}\n            key={child.widgetId}\n            pageId={props.pageId}\n            parentModalId={parentModalIdForChildren}\n            searchKeyword={props.searchKeyword}\n            step={props.step + 1}\n            widgetId={child.widgetId}\n            widgetName={child.widgetName}\n            widgetType={child.type}\n            widgetsInStep={widgetsInStep}\n          />\n        ))}\n    </Entity>\n  );\n});\n\nWidgetEntity.displayName = \"WidgetEntity\";\n\nexport default WidgetEntity;\n","import React, { memo, useCallback, useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Entity from \"../Entity\";\nimport WidgetEntity from \"./WidgetEntity\";\nimport {\n  getCurrentApplicationId,\n  getCurrentPageId,\n  getPagePermissions,\n} from \"selectors/editorSelectors\";\nimport {\n  ADD_WIDGET_BUTTON,\n  ADD_WIDGET_TOOLTIP,\n  createMessage,\n  EMPTY_WIDGET_BUTTON_TEXT,\n  EMPTY_WIDGET_MAIN_TEXT,\n} from \"@appsmith/constants/messages\";\nimport { selectWidgetsForCurrentPage } from \"selectors/entitiesSelector\";\nimport { inGuidedTour } from \"selectors/onboardingSelectors\";\nimport {\n  getExplorerStatus,\n  saveExplorerStatus,\n} from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport { Icon } from \"design-system-old\";\nimport { AddEntity, EmptyComponent } from \"../common\";\nimport { noop } from \"lodash\";\nimport { hasManagePagePermission } from \"@appsmith/utils/permissionHelpers\";\n\ntype ExplorerWidgetGroupProps = {\n  step: number;\n  searchKeyword?: string;\n  addWidgetsFn?: () => void;\n};\n\nexport const ExplorerWidgetGroup = memo((props: ExplorerWidgetGroupProps) => {\n  const applicationId = useSelector(getCurrentApplicationId);\n  const pageId = useSelector(getCurrentPageId) || \"\";\n  const widgets = useSelector(selectWidgetsForCurrentPage);\n  const guidedTour = useSelector(inGuidedTour);\n  let isWidgetsOpen = getExplorerStatus(applicationId, \"widgets\");\n  if (isWidgetsOpen === null || isWidgetsOpen === undefined) {\n    isWidgetsOpen = widgets?.children?.length === 0 || guidedTour;\n    saveExplorerStatus(applicationId, \"widgets\", isWidgetsOpen);\n  } else if (guidedTour) {\n    isWidgetsOpen = guidedTour;\n    saveExplorerStatus(applicationId, \"widgets\", isWidgetsOpen);\n  }\n\n  const widgetsInStep = useMemo(() => {\n    return widgets?.children?.map((child) => child.widgetId) || [];\n  }, [widgets?.children]);\n\n  const onWidgetToggle = useCallback(\n    (isOpen: boolean) => {\n      saveExplorerStatus(applicationId, \"widgets\", isOpen);\n    },\n    [applicationId],\n  );\n\n  const pagePermissions = useSelector(getPagePermissions);\n\n  const canManagePages = hasManagePagePermission(pagePermissions);\n\n  return (\n    <Entity\n      addButtonHelptext={createMessage(ADD_WIDGET_TOOLTIP)}\n      canEditEntityName={canManagePages}\n      className={`group widgets ${props.addWidgetsFn ? \"current\" : \"\"}`}\n      disabled={!widgets && !!props.searchKeyword}\n      entityId={pageId + \"_widgets\"}\n      icon={\"\"}\n      isDefaultExpanded={isWidgetsOpen}\n      isSticky\n      key={pageId + \"_widgets\"}\n      name=\"Widgets\"\n      onCreate={props.addWidgetsFn}\n      onToggle={onWidgetToggle}\n      searchKeyword={props.searchKeyword}\n      showAddButton={canManagePages}\n      step={props.step}\n    >\n      {widgets?.children?.map((child) => (\n        <WidgetEntity\n          childWidgets={child.children}\n          key={child.widgetId}\n          pageId={pageId}\n          searchKeyword={props.searchKeyword}\n          step={props.step + 1}\n          widgetId={child.widgetId}\n          widgetName={child.widgetName}\n          widgetType={child.type}\n          widgetsInStep={widgetsInStep}\n        />\n      ))}\n      {(!widgets?.children || widgets?.children.length === 0) &&\n        !props.searchKeyword && (\n          <EmptyComponent\n            addBtnText={createMessage(EMPTY_WIDGET_BUTTON_TEXT)}\n            addFunction={props.addWidgetsFn || noop}\n            mainText={createMessage(EMPTY_WIDGET_MAIN_TEXT)}\n          />\n        )}\n      {widgets?.children && widgets?.children?.length > 0 && canManagePages && (\n        <AddEntity\n          action={props.addWidgetsFn}\n          entityId={pageId + \"_widgets_add_new_datasource\"}\n          icon={<Icon name=\"plus\" />}\n          name={createMessage(ADD_WIDGET_BUTTON)}\n          step={props.step + 1}\n        />\n      )}\n    </Entity>\n  );\n});\n\nExplorerWidgetGroup.displayName = \"ExplorerWidgetGroup\";\n(ExplorerWidgetGroup as any).whyDidYouRender = {\n  logOnDifferentValues: false,\n};\n\nexport default ExplorerWidgetGroup;\n","import React, {\n  useRef,\n  MutableRefObject,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport styled from \"styled-components\";\nimport Divider from \"components/editorComponents/Divider\";\nimport Search from \"./ExplorerSearch\";\nimport { NonIdealState, Classes } from \"@blueprintjs/core\";\nimport JSDependencies from \"./Libraries\";\nimport PerformanceTracker, {\n  PerformanceTransactionName,\n} from \"utils/PerformanceTracker\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ScrollIndicator } from \"design-system-old\";\n\nimport { ReactComponent as NoEntityFoundSvg } from \"assets/svg/no_entities_found.svg\";\nimport { Colors } from \"constants/Colors\";\n\nimport { getIsFirstTimeUserOnboardingEnabled } from \"selectors/onboardingSelectors\";\nimport { toggleInOnboardingWidgetSelection } from \"actions/onboardingActions\";\n\nimport { forceOpenWidgetPanel } from \"actions/widgetSidebarActions\";\nimport Datasources from \"./Datasources\";\nimport Files from \"./Files\";\nimport ExplorerWidgetGroup from \"./Widgets/WidgetGroup\";\nimport { builderURL } from \"RouteBuilder\";\nimport history from \"utils/history\";\nimport { SEARCH_ENTITY } from \"constants/Explorer\";\nimport { getCurrentPageId } from \"selectors/editorSelectors\";\nimport { fetchWorkspace } from \"@appsmith/actions/workspaceActions\";\nimport { getCurrentWorkspaceId } from \"@appsmith/selectors/workspaceSelectors\";\n\nconst Wrapper = styled.div`\n  height: 100%;\n  overflow-y: auto;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n  &::-webkit-scrollbar {\n    width: 0px;\n    -webkit-appearance: none;\n  }\n`;\n\nconst NoResult = styled(NonIdealState)`\n  &.${Classes.NON_IDEAL_STATE} {\n    height: auto;\n    margin: 20px 0;\n\n    .${Classes.NON_IDEAL_STATE_VISUAL} {\n      margin-bottom: 16px;\n      height: 52px;\n\n      svg {\n        height: 52px;\n        width: 144px;\n      }\n    }\n\n    div {\n      color: ${Colors.DOVE_GRAY2};\n    }\n\n    .${Classes.HEADING} {\n      margin-bottom: 4px;\n      color: ${(props) => props.theme.colors.textOnWhiteBG};\n    }\n  }\n`;\n\nconst StyledDivider = styled(Divider)`\n  border-bottom-color: #f0f0f0;\n`;\n\nfunction EntityExplorer({ isActive }: { isActive: boolean }) {\n  const dispatch = useDispatch();\n  const [searchKeyword, setSearchKeyword] = useState(\"\");\n  const searchInputRef: MutableRefObject<HTMLInputElement | null> = useRef(\n    null,\n  );\n  PerformanceTracker.startTracking(PerformanceTransactionName.ENTITY_EXPLORER);\n  useEffect(() => {\n    PerformanceTracker.stopTracking();\n  });\n  const explorerRef = useRef<HTMLDivElement | null>(null);\n  const isFirstTimeUserOnboardingEnabled = useSelector(\n    getIsFirstTimeUserOnboardingEnabled,\n  );\n  const noResults = false;\n  const pageId = useSelector(getCurrentPageId);\n  const showWidgetsSidebar = useCallback(() => {\n    history.push(builderURL({ pageId }));\n    dispatch(forceOpenWidgetPanel(true));\n    if (isFirstTimeUserOnboardingEnabled) {\n      dispatch(toggleInOnboardingWidgetSelection(true));\n    }\n  }, [isFirstTimeUserOnboardingEnabled, pageId]);\n\n  const currentWorkspaceId = useSelector(getCurrentWorkspaceId);\n\n  useEffect(() => {\n    dispatch(fetchWorkspace(currentWorkspaceId));\n  }, [currentWorkspaceId]);\n\n  /**\n   * filter entitites\n   */\n  const search = (e: any) => {\n    setSearchKeyword(e.target.value);\n  };\n\n  const clearSearchInput = () => {\n    if (searchInputRef.current) {\n      searchInputRef.current.value = \"\";\n    }\n\n    setSearchKeyword(\"\");\n  };\n\n  return (\n    <Wrapper\n      className={`t--entity-explorer-wrapper relative overflow-y-auto ${\n        isActive ? \"\" : \"hidden\"\n      }`}\n      ref={explorerRef}\n    >\n      {/* SEARCH */}\n      <Search\n        clear={clearSearchInput}\n        id={SEARCH_ENTITY}\n        isHidden\n        onChange={search}\n        ref={searchInputRef}\n      />\n      <ExplorerWidgetGroup\n        addWidgetsFn={showWidgetsSidebar}\n        searchKeyword={searchKeyword}\n        step={0}\n      />\n      <Files />\n      {noResults && (\n        <NoResult\n          className={Classes.DARK}\n          description=\"Try modifying the search keyword.\"\n          icon={<NoEntityFoundSvg />}\n          title=\"No entities found\"\n        />\n      )}\n      <StyledDivider />\n      <Datasources />\n      <JSDependencies />\n      <ScrollIndicator containerRef={explorerRef} />\n    </Wrapper>\n  );\n}\n\nEntityExplorer.displayName = \"EntityExplorer\";\n\nexport default EntityExplorer;\n","import { toggleInOnboardingWidgetSelection } from \"actions/onboardingActions\";\nimport { forceOpenWidgetPanel } from \"actions/widgetSidebarActions\";\nimport { Switcher } from \"design-system-old\";\nimport { Colors } from \"constants/Colors\";\nimport { tailwindLayers } from \"constants/Layers\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { builderURL } from \"RouteBuilder\";\nimport { getCurrentPageId } from \"selectors/editorSelectors\";\nimport { getIsFirstTimeUserOnboardingEnabled } from \"selectors/onboardingSelectors\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { trimQueryString } from \"utils/helpers\";\nimport history from \"utils/history\";\nimport WidgetSidebar from \"../WidgetSidebar\";\nimport EntityExplorer from \"./EntityExplorer\";\nimport { getExplorerSwitchIndex } from \"selectors/editorContextSelectors\";\nimport { setExplorerSwitchIndex } from \"actions/editorContextActions\";\n\nconst selectForceOpenWidgetPanel = (state: AppState) =>\n  state.ui.onBoarding.forceOpenWidgetPanel;\n\nfunction ExplorerContent() {\n  const dispatch = useDispatch();\n  const isFirstTimeUserOnboardingEnabled = useSelector(\n    getIsFirstTimeUserOnboardingEnabled,\n  );\n  const pageId = useSelector(getCurrentPageId);\n  const location = useLocation();\n  const switches = useMemo(\n    () => [\n      {\n        id: \"explorer\",\n        text: \"Explorer\",\n        action: () => dispatch(forceOpenWidgetPanel(false)),\n      },\n      {\n        id: \"widgets\",\n        text: \"Widgets\",\n        action: () => {\n          if (\n            !(trimQueryString(builderURL({ pageId })) === location.pathname)\n          ) {\n            history.push(builderURL({ pageId }));\n            AnalyticsUtil.logEvent(\"WIDGET_TAB_CLICK\", {\n              type: \"WIDGET_TAB\",\n              fromUrl: location.pathname,\n              toUrl: builderURL({ pageId }),\n            });\n          }\n          dispatch(forceOpenWidgetPanel(true));\n          dispatch(setExplorerSwitchIndex(1));\n          if (isFirstTimeUserOnboardingEnabled) {\n            dispatch(toggleInOnboardingWidgetSelection(true));\n          }\n        },\n      },\n    ],\n    [\n      dispatch,\n      forceOpenWidgetPanel,\n      isFirstTimeUserOnboardingEnabled,\n      toggleInOnboardingWidgetSelection,\n      location.pathname,\n      pageId,\n    ],\n  );\n  const activeSwitchIndex = useSelector(getExplorerSwitchIndex);\n\n  const setActiveSwitchIndex = (index: number) => {\n    dispatch(setExplorerSwitchIndex(index));\n  };\n  const openWidgetPanel = useSelector(selectForceOpenWidgetPanel);\n\n  useEffect(() => {\n    const currentIndex = openWidgetPanel ? 1 : 0;\n    if (currentIndex !== activeSwitchIndex) {\n      setActiveSwitchIndex(currentIndex);\n    }\n  }, [openWidgetPanel]);\n\n  return (\n    <div\n      className={`flex-1 flex flex-col overflow-hidden ${tailwindLayers.entityExplorer}`}\n    >\n      <div\n        className={`flex-shrink-0 px-3 mt-1 py-2 border-t border-b border-[${Colors.Gallery}]`}\n      >\n        <Switcher activeObj={switches[activeSwitchIndex]} switches={switches} />\n      </div>\n      <WidgetSidebar isActive={switches[activeSwitchIndex].id === \"widgets\"} />\n      <EntityExplorer\n        isActive={switches[activeSwitchIndex].id === \"explorer\"}\n      />\n    </div>\n  );\n}\n\nexport default ExplorerContent;\n","import React, { useState, useEffect, MutableRefObject } from \"react\";\n\nimport { unFocus } from \"utils/helpers\";\n\n/**\n * use horizontal resize\n *\n * @param ref\n * @param onWidthChange\n */\nconst useHorizontalResize = (\n  ref: MutableRefObject<HTMLElement | null>,\n  onWidthChange?: (newWidth: number) => void,\n  onDragEnd?: () => void,\n  inverse = false,\n) => {\n  let MIN_WIDTH = 0;\n  let MAX_WIDTH = 0;\n  const [resizing, setResizing] = useState(false);\n  const [position, setPosition] = useState(0);\n\n  // saving min width and max width\n  useEffect(() => {\n    if (ref.current) {\n      MIN_WIDTH = parseInt(\n        window.getComputedStyle(ref.current).minWidth.replace(\"px\", \"\"),\n      );\n      MAX_WIDTH = parseInt(\n        window.getComputedStyle(ref.current).maxWidth.replace(\"px\", \"\"),\n      );\n    }\n  });\n\n  // registering event listeners\n  useEffect(() => {\n    document.addEventListener(\"mouseup\", onMouseUp);\n    document.addEventListener(\"mousemove\", onMouseMove);\n    document.addEventListener(\"touchmove\", onTouchMove);\n\n    return () => {\n      document.removeEventListener(\"mouseup\", onMouseUp);\n      document.removeEventListener(\"mousemove\", onMouseMove);\n      document.removeEventListener(\"touchmove\", onTouchMove);\n    };\n  }, [resizing, position]);\n\n  /**\n   * passing the event to touch start on mouse down\n   *\n   * @param event\n   */\n  const onMouseDown = (event: React.MouseEvent) => {\n    const eventWithTouches = Object.assign({}, event, {\n      touches: [{ clientX: event.clientX, clientY: event.clientY }],\n    });\n\n    onTouchStart(eventWithTouches);\n  };\n\n  /**\n   * sets resizing and position on touch start\n   */\n  const onTouchStart = (\n    event:\n      | React.TouchEvent\n      | (React.MouseEvent<Element, MouseEvent> & {\n          touches: { clientX: number; clientY: number }[];\n        }),\n  ) => {\n    unFocus(document, window);\n    setPosition(event.touches[0].clientX);\n    setResizing(true);\n    document.body.classList.add(\"cursor-ew-resize\");\n  };\n\n  /**\n   * sets resizing false on mouse up\n   * also calls onDragFinished if any\n   */\n  const onMouseUp = () => {\n    if (resizing) {\n      if (typeof onDragEnd === \"function\") {\n        onDragEnd();\n      }\n\n      setResizing(false);\n      document.body.classList.remove(\"cursor-ew-resize\");\n    }\n  };\n\n  /**\n   * passing the event to touch move on mouse move\n   */\n  const onMouseMove = (event: MouseEvent) => {\n    const eventWithTouches = Object.assign({}, event, {\n      touches: [{ clientX: event.clientX, clientY: event.clientY }],\n    });\n    onTouchMove(eventWithTouches);\n  };\n\n  /**\n   * calculate the new width based on the pixel moved\n   *\n   * @param event\n   */\n  const onTouchMove = (\n    event:\n      | TouchEvent\n      | (MouseEvent & { touches: { clientX: number; clientY: number }[] }),\n  ) => {\n    if (resizing) {\n      unFocus(document, window);\n\n      if (ref.current) {\n        const width = ref.current.clientWidth;\n        const current = event.touches[0].clientX;\n        const positionDelta = position - current;\n        const widthDelta = inverse ? -positionDelta : positionDelta;\n        let newWidth = width - widthDelta;\n        const newPosition = position - positionDelta;\n\n        if (newWidth < MIN_WIDTH) {\n          newWidth = MIN_WIDTH;\n        } else if (newWidth > MAX_WIDTH) {\n          newWidth = MAX_WIDTH;\n        } else {\n          setPosition(newPosition);\n        }\n\n        if (typeof onWidthChange === \"function\") {\n          onWidthChange(newWidth);\n        }\n      }\n    }\n  };\n\n  return { onTouchStart, onMouseDown, onMouseUp, resizing };\n};\n\nexport default useHorizontalResize;\n","import { Icon } from \"@blueprintjs/core\";\nimport { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport { useIsWidgetActionConnectionPresent } from \"pages/Editor/utils\";\nimport React, { SyntheticEvent } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { getEvaluationInverseDependencyMap } from \"selectors/dataTreeSelectors\";\nimport {\n  getApplicationLastDeployedAt,\n  getCurrentPageId,\n} from \"selectors/editorSelectors\";\nimport {\n  getCanvasWidgets,\n  getDatasources,\n  getPageActions,\n} from \"selectors/entitiesSelector\";\nimport {\n  getFirstTimeUserOnboardingComplete,\n  getInOnboardingWidgetSelection,\n} from \"selectors/onboardingSelectors\";\nimport styled from \"styled-components\";\nimport history from \"utils/history\";\nimport {\n  ONBOARDING_STATUS_STEPS_FIRST,\n  ONBOARDING_STATUS_STEPS_FIRST_ALT,\n  ONBOARDING_STATUS_STEPS_SECOND,\n  ONBOARDING_STATUS_STEPS_THIRD,\n  ONBOARDING_STATUS_STEPS_FOURTH,\n  ONBOARDING_STATUS_STEPS_FIVETH,\n  ONBOARDING_STATUS_STEPS_SIXTH,\n  ONBOARDING_STATUS_GET_STARTED,\n  createMessage,\n  ONBOARDING_STATUS_STEPS_THIRD_ALT,\n} from \"@appsmith/constants/messages\";\nimport { getTypographyByKey } from \"design-system-old\";\nimport { Colors } from \"constants/Colors\";\nimport { onboardingCheckListUrl } from \"RouteBuilder\";\n\nconst Wrapper = styled.div<{ active: boolean }>`\n  width: 100%;\n  background-color: ${(props) =>\n    props.active ? props.theme.colors.welcomeTourStickySidebarBackground : \"\"};\n  cursor: ${(props) => (props.active ? \"default\" : \"pointer\")};\n  height: ${(props) => props.theme.onboarding.statusBarHeight}px;\n  padding: 12px 16px;\n  transition: background-color 0.3s ease;\n  border: 1px solid ${Colors.Gallery};\n\n  ${(props) =>\n    props.active &&\n    `\n      p {\n        color: ${Colors.WHITE};\n      }\n      svg {\n        fill: ${Colors.WHITE};\n      }\n  `}\n\n  &:hover .hover-icons {\n    opacity: 1;\n  }\n`;\n\nconst TitleWrapper = styled.p`\n  color: ${Colors.GREY_10};\n  ${getTypographyByKey(\"p4\")}\n`;\n\nconst StatusText = styled.p`\n  color: ${Colors.GREY_10};\n  font-size: 13px;\n  & .hover-icons {\n    transform: translate(3px, 0px);\n    opacity: 0;\n  }\n`;\n\nconst ProgressContainer = styled.div`\n  background-color: rgb(0, 0, 0, 0.2);\n  border-radius: ${(props) => props.theme.radii[3]}px;\n  overflow: hidden;\n  margin-top: 12px;\n`;\n\nconst Progressbar = styled.div<StatusProgressbarType>`\n  width: ${(props) => props.percentage}%;\n  height: 6px;\n  background: ${(props) =>\n    props.active\n      ? Colors.WHITE\n      : props.theme.colors.welcomeTourStickySidebarBackground};\n  transition: width 0.3s ease, background 0.3s ease;\n  border-radius: ${(props) => props.theme.radii[3]}px;\n`;\n\nconst StyledClose = styled(Icon)`\n  position: absolute;\n  top: 15px;\n  right: 13px;\n  opacity: 0;\n  cursor: pointer;\n`;\n\ntype StatusProgressbarType = {\n  percentage: number;\n  active: boolean;\n};\n\nexport function StatusProgressbar(props: StatusProgressbarType) {\n  return (\n    <ProgressContainer>\n      <Progressbar {...props} />\n    </ProgressContainer>\n  );\n}\n\nconst useStatus = (): { percentage: number; content: string } => {\n  const datasources = useSelector(getDatasources);\n  const pageId = useSelector(getCurrentPageId);\n  const actions = useSelector(getPageActions(pageId));\n  const widgets = useSelector(getCanvasWidgets);\n  const deps = useSelector(getEvaluationInverseDependencyMap);\n  const isConnectionPresent = useIsWidgetActionConnectionPresent(\n    widgets,\n    actions,\n    deps,\n  );\n  const isDeployed = !!useSelector(getApplicationLastDeployedAt);\n  const isFirstTimeUserOnboardingComplete = useSelector(\n    getFirstTimeUserOnboardingComplete,\n  );\n  const inOnboardingWidgetSelection =\n    useSelector(getInOnboardingWidgetSelection) &&\n    Object.keys(widgets).length === 1;\n\n  if (isFirstTimeUserOnboardingComplete) {\n    return {\n      percentage: 100,\n      content: createMessage(ONBOARDING_STATUS_STEPS_SIXTH),\n    };\n  }\n\n  let content = \"\";\n  let percentage = 0;\n  if (!datasources.length && !actions.length && !inOnboardingWidgetSelection) {\n    content =\n      Object.keys(widgets).length === 1\n        ? createMessage(ONBOARDING_STATUS_STEPS_FIRST)\n        : createMessage(ONBOARDING_STATUS_STEPS_FIRST_ALT);\n  } else if (!actions.length && !inOnboardingWidgetSelection) {\n    content = createMessage(ONBOARDING_STATUS_STEPS_SECOND);\n  } else if (Object.keys(widgets).length === 1) {\n    content =\n      !datasources.length && !actions.length\n        ? createMessage(ONBOARDING_STATUS_STEPS_THIRD_ALT)\n        : createMessage(ONBOARDING_STATUS_STEPS_THIRD);\n  } else if (!isConnectionPresent) {\n    content = createMessage(ONBOARDING_STATUS_STEPS_FOURTH);\n  } else if (!isDeployed) {\n    content = createMessage(ONBOARDING_STATUS_STEPS_FIVETH);\n  } else {\n    content = createMessage(ONBOARDING_STATUS_STEPS_SIXTH);\n  }\n\n  if (datasources.length || actions.length) {\n    percentage += 20;\n  }\n\n  if (actions.length) {\n    percentage += 20;\n  }\n\n  if (Object.keys(widgets).length > 1) {\n    percentage += 20;\n  }\n\n  if (isConnectionPresent) {\n    percentage += 20;\n  }\n\n  if (isDeployed) {\n    percentage += 20;\n  }\n\n  return {\n    percentage,\n    content,\n  };\n};\n\nexport function OnboardingStatusbar(props: RouteComponentProps) {\n  const dispatch = useDispatch();\n  const pageId = useSelector(getCurrentPageId);\n  const { content, percentage } = useStatus();\n  const isChecklistPage = props.location.pathname.indexOf(\"/checklist\") > -1;\n  const isGenerateAppPage =\n    props.location.pathname.indexOf(\"/generate-page/form\") > -1;\n  const isFirstTimeUserOnboardingComplete = useSelector(\n    getFirstTimeUserOnboardingComplete,\n  );\n  if (isGenerateAppPage) {\n    return null;\n  }\n  const endFirstTimeUserOnboarding = (event?: SyntheticEvent) => {\n    event?.stopPropagation();\n    dispatch({\n      type: ReduxActionTypes.END_FIRST_TIME_USER_ONBOARDING,\n    });\n  };\n  if (percentage === 100 && !isFirstTimeUserOnboardingComplete) {\n    dispatch({\n      type: ReduxActionTypes.SET_ENABLE_FIRST_TIME_USER_ONBOARDING,\n      payload: false,\n    });\n    dispatch({\n      type: ReduxActionTypes.SET_FIRST_TIME_USER_ONBOARDING_APPLICATION_ID,\n      payload: \"\",\n    });\n    dispatch({\n      type: ReduxActionTypes.SET_FIRST_TIME_USER_ONBOARDING_COMPLETE,\n      payload: true,\n    });\n  }\n\n  return (\n    <Wrapper\n      active={isChecklistPage}\n      className=\"sticky top-0 t--onboarding-statusbar\"\n      data-testid=\"statusbar-container\"\n      onClick={() => {\n        history.push(onboardingCheckListUrl({ pageId }));\n      }}\n    >\n      {!isFirstTimeUserOnboardingComplete && (\n        <StyledClose\n          className=\"hover-icons\"\n          color={Colors.GREY_10}\n          data-cy=\"statusbar-skip\"\n          icon=\"cross\"\n          iconSize={14}\n          onClick={endFirstTimeUserOnboarding}\n        />\n      )}\n      <TitleWrapper>\n        {createMessage(ONBOARDING_STATUS_GET_STARTED)}\n      </TitleWrapper>\n      <StatusText className=\"mt-2\">\n        <span data-testid=\"statusbar-text\">{content}</span>&nbsp;&nbsp;\n        {!isChecklistPage && (\n          <Icon\n            className=\"hover-icons\"\n            color={Colors.GREY_10}\n            icon=\"chevron-right\"\n            iconSize={14}\n          />\n        )}\n      </StatusText>\n      <StatusProgressbar\n        active={isChecklistPage}\n        data-testid=\"statusbar-text\"\n        percentage={percentage}\n      />\n    </Wrapper>\n  );\n}\n\nexport default withRouter(OnboardingStatusbar);\n","import React from \"react\";\n\nimport {\n  createMessage,\n  DELETE_APP_THEME_WARNING,\n  DELETE_CONFIRMATION_MODAL_TITLE,\n} from \"@appsmith/constants/messages\";\nimport { Colors } from \"constants/Colors\";\nimport {\n  Button,\n  Category,\n  DialogComponent as Dialog,\n  Size,\n  Variant,\n} from \"design-system-old\";\n\ninterface DeleteThemeModalProps {\n  isOpen: boolean;\n  onClose(): void;\n  onDelete(): void;\n}\n\nconst deleteIconConfig = {\n  name: \"delete\",\n  fillColor: Colors.DANGER_SOLID,\n  hoverColor: Colors.DANGER_SOLID_HOVER,\n};\n\nfunction DeleteThemeModal(props: DeleteThemeModalProps) {\n  const { isOpen, onClose, onDelete } = props;\n\n  return (\n    <Dialog\n      canOutsideClickClose\n      headerIcon={deleteIconConfig}\n      isOpen={isOpen}\n      onClose={onClose}\n      title={createMessage(DELETE_CONFIRMATION_MODAL_TITLE)}\n    >\n      <div id=\"delete-theme-modal\">\n        <div className=\"pb-8 space-y-3 \">\n          <p>{createMessage(DELETE_APP_THEME_WARNING)}</p>\n        </div>\n        <div className=\"\">\n          <div className=\"flex items-center justify-end space-x-3\">\n            <Button\n              category={Category.secondary}\n              onClick={onClose}\n              size={Size.medium}\n              text=\"Cancel\"\n            />\n            <Button\n              category={Category.primary}\n              onClick={onDelete}\n              size={Size.medium}\n              text=\"Delete\"\n              variant={Variant.danger}\n            />\n          </div>\n        </div>\n      </div>\n    </Dialog>\n  );\n}\n\nexport default DeleteThemeModal;\n","import { last } from \"lodash\";\nimport classNames from \"classnames\";\nimport styled from \"styled-components\";\nimport * as Sentry from \"@sentry/react\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DeleteIcon from \"remixicon-react/DeleteBinLineIcon\";\n\nimport {\n  changeSelectedAppThemeAction,\n  deleteAppThemeAction,\n} from \"actions/appThemingActions\";\nimport {\n  AppThemingMode,\n  getAppThemingStack,\n} from \"selectors/appThemingSelectors\";\nimport { AppTheme } from \"entities/AppTheming\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport DeleteThemeModal from \"./DeleteThemeModal\";\nimport { getComplementaryGrayscaleColor } from \"widgets/WidgetUtils\";\nimport { getCurrentApplicationId } from \"selectors/editorSelectors\";\nimport { Colors } from \"constants/Colors\";\n\n/**\n * ----------------------------------------------------------------------------\n * TYPES\n *-----------------------------------------------------------------------------\n */\ntype ThemeCard = React.PropsWithChildren<{\n  theme: AppTheme;\n  isSelected?: boolean;\n  className?: string;\n  selectable?: boolean;\n  deletable?: boolean;\n}>;\n\nconst MainContainer = styled.main<{ backgroundColor: string }>`\n  background-color: ${({ backgroundColor }) => backgroundColor};\n`;\n\nconst HeaderContainer = styled.main<{ primaryColor: string }>`\n  background-color: ${({ primaryColor }) => primaryColor};\n  color: ${({ primaryColor }) => getComplementaryGrayscaleColor(primaryColor)};\n`;\n\nconst MainText = styled.main<{ backgroundColor: string }>`\n  color: ${({ backgroundColor }) =>\n    getComplementaryGrayscaleColor(backgroundColor)};\n`;\n\nconst ThemeColorCircle = styled.main<{ backgroundColor: string }>`\n  background-color: ${({ backgroundColor }) => backgroundColor};\n`;\n\nconst ThemeName = styled.h3`\n  color: ${Colors.GRAY_700};\n`;\n\nconst ThemeColorButton = styled.main<{\n  backgroundColor: string;\n  borderRadius: string;\n  boxShadow: string;\n  secondary?: boolean;\n  borderColor: string;\n}>`\n  background-color: ${({ backgroundColor }) => backgroundColor};\n  box-shadow: ${({ boxShadow }) => boxShadow};\n  border: ${({ borderColor }) => `1px solid ${borderColor}`};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  color: ${({ backgroundColor }) =>\n    getComplementaryGrayscaleColor(backgroundColor)};\n`;\n\n/**\n * ----------------------------------------------------------------------------\n * COMPONENT\n *-----------------------------------------------------------------------------\n */\nexport function ThemeCard(props: ThemeCard) {\n  const { deletable, selectable, theme } = props;\n  const dispatch = useDispatch();\n  const themingStack = useSelector(getAppThemingStack);\n  const themingMode = last(themingStack);\n  const applicationId = useSelector(getCurrentApplicationId);\n  const isThemeSelectionMode =\n    themingMode === AppThemingMode.APP_THEME_SELECTION;\n  const [isDeleteModalOpen, toggleDeleteModal] = useState(false);\n\n  // colors\n  const userDefinedColors = theme.properties.colors;\n  const primaryColor = userDefinedColors.primaryColor;\n  const backgroundColor = userDefinedColors.backgroundColor;\n\n  // border radius\n  const borderRadius = theme.properties.borderRadius;\n  const primaryBorderRadius = borderRadius[Object.keys(borderRadius)[0]];\n\n  // box shadow\n  const boxShadow = theme.properties.boxShadow;\n  const primaryBoxShadow = boxShadow[Object.keys(boxShadow)[0]];\n\n  /**\n   * fires action for changing theme\n   *\n   * NOTE: since we are same card in theme edit and theme selection,\n   * we don't need to fire the action in theme edit mode on click on the card\n   */\n  const changeSelectedTheme = () => {\n    AnalyticsUtil.logEvent(\"APP_THEMING_APPLY_THEME\", {\n      themeId: theme.id,\n      themeName: theme.name,\n    });\n\n    if (isThemeSelectionMode && selectable) {\n      dispatch(\n        changeSelectedAppThemeAction({\n          applicationId,\n          theme,\n        }),\n      );\n    }\n  };\n\n  const openDeleteModalFn = () => toggleDeleteModal(true);\n  const closeDeleteModalFn = () => toggleDeleteModal(false);\n\n  /**\n   * dispatch delete app theme action\n   */\n  const onDeleteTheme = () => {\n    AnalyticsUtil.logEvent(\"APP_THEMING_DELETE_THEME\", {\n      themeId: theme.id,\n      themeName: theme.name,\n    });\n\n    dispatch(deleteAppThemeAction({ themeId: theme.id, name: theme.name }));\n\n    closeDeleteModalFn();\n  };\n\n  return (\n    <>\n      <div className=\"space-y-1 group\">\n        {selectable && (\n          <div className=\"flex items-center justify-between\">\n            <ThemeName className=\"text-sm break-all\">\n              {props.theme.displayName}\n            </ThemeName>\n            {deletable && (\n              <button\n                className=\"p-1 opacity-0 group-hover:block hover:bg-gray-100 group-hover:opacity-100\"\n                onClick={openDeleteModalFn}\n              >\n                <DeleteIcon className=\"w-4 h-4 text-gray-600\" />\n              </button>\n            )}\n          </div>\n        )}\n        <div\n          className={classNames({\n            \"border relative group transition-all t--theme-card\": true,\n            \"overflow-hidden\": !selectable,\n            \"hover:shadow-xl cursor-pointer\": selectable,\n          })}\n          onClick={changeSelectedTheme}\n        >\n          <MainContainer backgroundColor={backgroundColor}>\n            <HeaderContainer\n              className=\"flex h-3 text-white\"\n              primaryColor={primaryColor}\n            />\n            <section className=\"flex justify-between px-3 pt-3\">\n              <MainText backgroundColor={backgroundColor} className=\"text-base\">\n                AaBbCc\n              </MainText>\n              <div className=\"flex items-center space-x-2\">\n                {Object.keys(userDefinedColors).map((colorKey, index) => (\n                  <ThemeColorCircle\n                    backgroundColor={\n                      userDefinedColors[colorKey] || userDefinedColors[colorKey]\n                    }\n                    className=\"w-6 h-6 border rounded-full\"\n                    key={index}\n                  />\n                ))}\n              </div>\n            </section>\n            <section className=\"p-3\">\n              <div className=\"flex space-x-2\">\n                <ThemeColorButton\n                  backgroundColor={primaryColor}\n                  borderColor=\"transparent\"\n                  borderRadius={primaryBorderRadius}\n                  boxShadow={primaryBoxShadow}\n                  className=\"px-3 py-0.5 text-sm\"\n                >\n                  Button\n                </ThemeColorButton>\n                <ThemeColorButton\n                  backgroundColor=\"white\"\n                  borderColor={primaryColor}\n                  borderRadius={primaryBorderRadius}\n                  boxShadow={primaryBoxShadow}\n                  className=\"px-3 py-0.5 border text-sm\"\n                >\n                  Button\n                </ThemeColorButton>\n              </div>\n            </section>\n          </MainContainer>\n          <aside\n            className={`absolute bottom-0 left-0 right-0 items-center justify-center hidden  bg-gray-900/80 ${\n              selectable ? \"group-hover:flex\" : \"\"\n            }`}\n          >\n            <div className=\"py-1 text-xs tracking-wide text-white uppercase\">\n              Apply Theme\n            </div>\n          </aside>\n          {props.children}\n        </div>\n      </div>\n      <DeleteThemeModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModalFn}\n        onDelete={onDeleteTheme}\n      />\n    </>\n  );\n}\n\nThemeCard.displayName = \"ThemeCard\";\n\nexport default Sentry.withProfiler(ThemeCard);\n","import * as Sentry from \"@sentry/react\";\nimport React, { useState } from \"react\";\nimport { Collapse } from \"@blueprintjs/core\";\nimport styled from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\nimport { AppIcon as Icon, Size } from \"design-system-old\";\n\nconst SettingsWrapper = styled.div`\n  color: ${Colors.GRAY_700};\n\n  .bp3-collapse,\n  .bp3-collapse-body {\n    transition: none;\n  }\n`;\n\nconst StyledIcon = styled(Icon)`\n  svg path {\n    fill: ${Colors.GRAY_700};\n  }\n`;\n\nconst Title = styled.div`\n  color: ${Colors.GRAY_800};\n`;\n\ninterface SettingSectionProps {\n  isDefaultOpen?: boolean;\n  className?: string;\n  title: string;\n  children?: React.ReactNode;\n  collapsible?: boolean;\n}\n\nexport function SettingSection(props: SettingSectionProps) {\n  const { className = \"\", collapsible = true } = props;\n  const [isOpen, setOpen] = useState(props.isDefaultOpen);\n\n  return (\n    <SettingsWrapper className={className}>\n      <div\n        className={` cursor-pointer flex items-center justify-between capitalize text-sm`}\n        onClick={() => setOpen((isOpen) => !isOpen)}\n      >\n        <Title className=\"font-medium\">{props.title}</Title>\n        {collapsible && (\n          <StyledIcon\n            name={isOpen ? \"arrow-down\" : \"arrow-right\"}\n            size={Size.small}\n          />\n        )}\n      </div>\n      <Collapse isOpen={isOpen} transitionDuration={0}>\n        <div className=\"pt-2 pb-1 space-y-3\">{props.children}</div>\n      </Collapse>\n    </SettingsWrapper>\n  );\n}\n\nSettingSection.displayName = \"SettingSection\";\n\nexport default Sentry.withProfiler(SettingSection);\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport {\n  Button,\n  Category,\n  DialogComponent as Dialog,\n  Size,\n  TextInput,\n} from \"design-system-old\";\nimport { saveSelectedThemeAction } from \"actions/appThemingActions\";\nimport { getCurrentApplicationId } from \"selectors/editorSelectors\";\nimport { getAppThemes } from \"selectors/appThemingSelectors\";\nimport {\n  createMessage,\n  ERROR_MESSAGE_NAME_EMPTY,\n  APLHANUMERIC_HYPHEN_SLASH_SPACE_ERROR,\n  UNIQUE_NAME_ERROR,\n} from \"@appsmith/constants/messages\";\n\ninterface SaveThemeModalProps {\n  isOpen: boolean;\n  onClose(): void;\n}\n\nfunction SaveThemeModal(props: SaveThemeModalProps) {\n  const { isOpen } = props;\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [inputValidator, setInputValidator] = useState({\n    isValid: false,\n    message: \"\",\n    isDirty: false,\n  });\n  const applicationId = useSelector(getCurrentApplicationId);\n  const themes = useSelector(getAppThemes);\n\n  /**\n   * dispatches action to save selected theme\n   *\n   */\n  const onSubmit = (event: any) => {\n    event.preventDefault();\n\n    // if input validations fails, don't do anything\n    if (!inputValidator.isValid || inputValidator.isDirty === false) return;\n\n    AnalyticsUtil.logEvent(\"APP_THEMING_SAVE_THEME_SUCCESS\", {\n      themeName: name,\n    });\n\n    dispatch(saveSelectedThemeAction({ applicationId, name }));\n\n    // close the modal after submit\n    onClose();\n  };\n\n  /**\n   * theme creation validator\n   *\n   * @param value\n   * @returns\n   */\n  const createThemeValidator = (value: string) => {\n    let isValid = !!value;\n\n    let errorMessage = !isValid ? createMessage(ERROR_MESSAGE_NAME_EMPTY) : \"\";\n\n    if (\n      isValid &&\n      themes.find((theme) => value.toLowerCase() === theme.name.toLowerCase())\n    ) {\n      isValid = false;\n      errorMessage = createMessage(UNIQUE_NAME_ERROR);\n    }\n\n    if (/[^a-zA-Z0-9\\-\\/\\ ]/.test(value)) {\n      isValid = false;\n      errorMessage = createMessage(APLHANUMERIC_HYPHEN_SLASH_SPACE_ERROR);\n    }\n\n    return {\n      isValid: isValid,\n      message: errorMessage,\n      isDirty: true,\n    };\n  };\n\n  /**\n   * on input change\n   *\n   * @param value\n   */\n  const onChangeName = (value: string) => {\n    const validator = createThemeValidator(value);\n\n    setInputValidator(validator);\n    setName(value);\n  };\n\n  /**\n   * on close modal\n   */\n  const onClose = () => {\n    // reset validations\n    setInputValidator({\n      isValid: false,\n      message: \"\",\n      isDirty: false,\n    });\n\n    props.onClose();\n  };\n\n  return (\n    <Dialog\n      canOutsideClickClose\n      isOpen={isOpen}\n      onClose={onClose}\n      title=\"Save Theme\"\n    >\n      <div id=\"save-theme-modal\">\n        <form data-cy=\"save-theme-form\" noValidate onSubmit={onSubmit}>\n          <div className=\"pb-6 space-y-3\">\n            <p>\n              You can save your custom themes to use across applications and use\n              them when you need.\n            </p>\n            <div className=\"mt-6 space-y-2\">\n              <h3 className=\"text-gray-700\">Your theme name</h3>\n              <TextInput\n                autoFocus\n                errorMsg={!inputValidator.isValid ? inputValidator.message : \"\"}\n                fill\n                name=\"name\"\n                onChange={onChangeName}\n                placeholder=\"My theme\"\n              />\n            </div>\n          </div>\n          <div className=\"\">\n            <div className=\"flex items-center space-x-3\">\n              <Button\n                category={Category.secondary}\n                onClick={onClose}\n                size={Size.medium}\n                text=\"Cancel\"\n              />\n              <Button\n                category={Category.primary}\n                disabled={!name}\n                onClick={onSubmit}\n                size={Size.medium}\n                text=\"Save theme\"\n                type=\"submit\"\n              />\n            </div>\n          </div>\n        </form>\n      </div>\n    </Dialog>\n  );\n}\n\nexport default SaveThemeModal;\n","import React from \"react\";\n\nimport { Dropdown, DropdownOption, RenderOption } from \"design-system-old\";\nimport { AppTheme } from \"entities/AppTheming\";\n\ninterface ThemeFontControlProps {\n  theme: AppTheme;\n  sectionName: string;\n  options: string[];\n  selectedOption: string;\n  updateTheme: (theme: AppTheme) => void;\n}\n\nfunction ThemeFontControl(props: ThemeFontControlProps) {\n  const { options, sectionName, selectedOption, theme, updateTheme } = props;\n\n  /**\n   * renders dropdown option\n   *\n   * @param param0\n   * @returns\n   */\n  const renderOption: RenderOption = ({\n    isHighlighted,\n    isSelectedNode,\n    option,\n  }) => (\n    <div\n      className={`flex space-x-2  w-full cursor-pointer ${\n        isSelectedNode ? \"px-2 py-2\" : \"px-2 py-2 hover:bg-gray-200\"\n      } ${isHighlighted ? \"bg-gray-200\" : \"\"}`}\n      onClick={() => {\n        if (!isSelectedNode) {\n          updateTheme({\n            ...theme,\n            properties: {\n              ...theme.properties,\n              fontFamily: {\n                ...theme.properties.fontFamily,\n                [sectionName]:\n                  (option as DropdownOption).value || selectedOption,\n              },\n            },\n          });\n        }\n      }}\n    >\n      <div className=\"flex items-center justify-center w-6 h-6 bg-white border\">\n        Aa\n      </div>\n      <div className=\"leading-normal\">{(option as DropdownOption).label}</div>\n    </div>\n  );\n\n  return (\n    <section className=\"space-y-2\">\n      <Dropdown\n        options={options.map((option) => ({\n          value: option,\n          label: option,\n        }))}\n        portalContainer={\n          document.getElementById(\"app-settings-portal\") || undefined\n        }\n        renderOption={renderOption}\n        selected={{\n          label: selectedOption,\n          value: selectedOption,\n        }}\n        showLabelOnly\n        width=\"100%\"\n      />\n    </section>\n  );\n}\n\nexport default ThemeFontControl;\n","import { startCase } from \"lodash\";\nimport classNames from \"classnames\";\nimport React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { AppTheme } from \"entities/AppTheming\";\nimport { TooltipComponent } from \"design-system-old\";\nimport ColorPickerComponent from \"components/propertyControls/ColorPickerComponentV2\";\n\ninterface ThemeColorControlProps {\n  theme: AppTheme;\n  updateTheme: (theme: AppTheme) => void;\n}\n\nconst ColorBox = styled.div<{\n  background: string;\n}>`\n  background: ${({ background }) => background};\n`;\n\nfunction ThemeColorControl(props: ThemeColorControlProps) {\n  const { theme, updateTheme } = props;\n  const [autoFocus, setAutoFocus] = useState(false);\n  const userDefinedColors = theme.properties.colors;\n  const [selectedColor, setSelectedColor] = useState<string>(\"primaryColor\");\n\n  return (\n    <div className=\"space-y-2\">\n      <div className=\"flex space-x-2\">\n        {Object.keys(theme.properties.colors).map(\n          (colorName: string, index: number) => {\n            return (\n              <TooltipComponent content={startCase(colorName)} key={index}>\n                <ColorBox\n                  background={userDefinedColors[colorName]}\n                  className={classNames({\n                    \"w-6 h-6 rounded-full border-2 cursor-pointer ring-gray-700\": true,\n                    \"ring-1\": selectedColor === colorName,\n                  })}\n                  onClick={() => {\n                    setAutoFocus(\n                      selectedColor === colorName ? !autoFocus : true,\n                    );\n                    setSelectedColor(colorName);\n                  }}\n                />\n              </TooltipComponent>\n            );\n          },\n        )}\n      </div>\n      {selectedColor && (\n        <div className=\"pt-1 space-y-1\">\n          <h3>{startCase(selectedColor)}</h3>\n          <ColorPickerComponent\n            autoFocus={autoFocus}\n            changeColor={(color: string) => {\n              updateTheme({\n                ...theme,\n                properties: {\n                  ...theme.properties,\n                  colors: {\n                    ...theme.properties.colors,\n                    [selectedColor]: color,\n                  },\n                },\n              });\n            }}\n            color={userDefinedColors[selectedColor]}\n            isOpen={autoFocus}\n            key={selectedColor}\n            portalContainer={\n              document.getElementById(\"app-settings-portal\") || undefined\n            }\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ThemeColorControl;\n","import React, { useCallback } from \"react\";\nimport { AppTheme } from \"entities/AppTheming\";\nimport { ButtonGroup, TooltipComponent } from \"design-system-old\";\nimport CloseLineIcon from \"remixicon-react/CloseLineIcon\";\nimport { invertedBoxShadowOptions } from \"constants/ThemeConstants\";\n\ninterface ThemeBoxShadowControlProps {\n  options: {\n    [key: string]: string;\n  };\n  selectedOption?: string;\n  theme: AppTheme;\n  sectionName: string;\n  updateTheme: (theme: AppTheme) => void;\n}\n\nfunction ThemeBoxShadowControl(props: ThemeBoxShadowControlProps) {\n  const { options, sectionName, selectedOption, theme, updateTheme } = props;\n\n  /**\n   * changes the shadow in the theme\n   */\n  const onChangeShadow = useCallback(\n    (optionKey: string) => {\n      updateTheme({\n        ...theme,\n        properties: {\n          ...theme.properties,\n          boxShadow: {\n            ...theme.properties.boxShadow,\n            [sectionName]: options[optionKey],\n          },\n        },\n      });\n    },\n    [updateTheme, theme],\n  );\n\n  const selectedOptionKey = selectedOption\n    ? [invertedBoxShadowOptions[selectedOption]]\n    : [];\n\n  const buttonGroupOptions = Object.keys(options).map((optionKey) => ({\n    icon: (\n      <TooltipComponent\n        content={optionKey}\n        key={optionKey}\n        openOnTargetFocus={false}\n      >\n        <div\n          className=\"flex items-center justify-center w-5 h-5 bg-white  t--theme-appBoxShadow\"\n          style={{ boxShadow: options[optionKey] }}\n        >\n          {options[optionKey] === \"none\" && (\n            <CloseLineIcon className=\"text-gray-700\" />\n          )}\n        </div>\n      </TooltipComponent>\n    ),\n    value: optionKey,\n  }));\n\n  return (\n    <ButtonGroup\n      options={buttonGroupOptions}\n      selectButton={onChangeShadow}\n      values={selectedOptionKey}\n    />\n  );\n}\n\nexport default ThemeBoxShadowControl;\n","import React, { useCallback } from \"react\";\n\nimport { AppTheme } from \"entities/AppTheming\";\nimport { ButtonGroup, TooltipComponent } from \"design-system-old\";\nimport { invertedBorderRadiusOptions } from \"constants/ThemeConstants\";\n\ninterface ThemeBorderRadiusControlProps {\n  options: {\n    [key: string]: string;\n  };\n  selectedOption?: string;\n  theme: AppTheme;\n  sectionName: string;\n  updateTheme: (theme: AppTheme) => void;\n}\n\nfunction ThemeBorderRadiusControl(props: ThemeBorderRadiusControlProps) {\n  const { options, sectionName, selectedOption, theme, updateTheme } = props;\n\n  /**\n   * changes the border in theme\n   */\n  const onChangeBorder = useCallback(\n    (optionKey: string) => {\n      updateTheme({\n        ...theme,\n        properties: {\n          ...theme.properties,\n          borderRadius: {\n            [sectionName]: options[optionKey],\n          },\n        },\n      });\n    },\n    [updateTheme, theme],\n  );\n\n  const selectedOptionKey = selectedOption\n    ? [invertedBorderRadiusOptions[selectedOption]]\n    : [];\n\n  const buttonGroupOptions = Object.keys(options).map((optionKey) => ({\n    icon: (\n      <TooltipComponent\n        content={optionKey}\n        key={optionKey}\n        openOnTargetFocus={false}\n      >\n        <div\n          className=\"w-5 h-5 border-t-2 border-l-2 border-gray-500 t--theme-appBorderRadius\"\n          style={{ borderTopLeftRadius: options[optionKey] }}\n        />\n      </TooltipComponent>\n    ),\n    value: optionKey,\n  }));\n\n  return (\n    <ButtonGroup\n      options={buttonGroupOptions}\n      selectButton={onChangeBorder}\n      values={selectedOptionKey}\n    />\n  );\n}\n\nexport default ThemeBorderRadiusControl;\n","import React from \"react\";\n\nfunction BetaCard() {\n  return (\n    <div className=\"py-0.5 px-1 text-xs font-semibold text-gray-700 uppercase border border-gray-700\">\n      beta\n    </div>\n  );\n}\n\nexport default BetaCard;\n","import styled, { createGlobalStyle } from \"styled-components\";\nimport { get, startCase } from \"lodash\";\nimport MoreIcon from \"remixicon-react/MoreFillIcon\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React, { useCallback, useState } from \"react\";\nimport Save2LineIcon from \"remixicon-react/Save2LineIcon\";\nimport ArrowGoBackIcon from \"remixicon-react/ArrowGoBackFillIcon\";\n\nimport ThemeCard from \"./ThemeCard\";\nimport {\n  DropdownV2,\n  DropdownList,\n  DropdownItem,\n  DropdownTrigger,\n} from \"design-system-old\";\nimport {\n  AppThemingMode,\n  getAppThemingStack,\n  getSelectedAppTheme,\n} from \"selectors/appThemingSelectors\";\nimport {\n  resetThemeAction,\n  setAppThemingModeStackAction,\n  updateSelectedAppThemeAction,\n} from \"actions/appThemingActions\";\nimport SettingSection from \"./SettingSection\";\nimport SaveThemeModal from \"./SaveThemeModal\";\nimport { AppTheme } from \"entities/AppTheming\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport ThemeFontControl from \"./controls/ThemeFontControl\";\nimport ThemeColorControl from \"./controls/ThemeColorControl\";\nimport {\n  Button,\n  Category,\n  Classes as CsClasses,\n  Size,\n} from \"design-system-old\";\nimport ThemeBoxShadowControl from \"./controls/ThemeShadowControl\";\nimport { getCurrentApplicationId } from \"selectors/editorSelectors\";\nimport ThemeBorderRadiusControl from \"./controls/ThemeBorderRadiusControl\";\nimport BetaCard from \"components/editorComponents/BetaCard\";\nimport { Colors } from \"constants/Colors\";\n\nconst THEMING_BETA_CARD_POPOVER_CLASSNAME = `theming-beta-card-popover`;\n\nconst Title = styled.h3`\n  color: ${Colors.GRAY_800};\n`;\n\nconst PopoverStyles = createGlobalStyle`\n.${THEMING_BETA_CARD_POPOVER_CLASSNAME} .bp3-popover-content {\n  padding: 10px 12px;\n  border-radius: 0px;\n  background-color: #FFF !important;\n  color:   #090707 !important;\n  box-shadow: none !important;\n}\n\n.${THEMING_BETA_CARD_POPOVER_CLASSNAME} .${CsClasses.BP3_POPOVER_ARROW_BORDER},\n.${THEMING_BETA_CARD_POPOVER_CLASSNAME} .${CsClasses.BP3_POPOVER_ARROW_FILL} {\n  fill: #FFF !important;\n  stroke: #FFF !important;\n  box-shadow: 0px 0px 2px rgb(0 0 0 / 20%), 0px 2px 10px rgb(0 0 0 / 10%);\n}\n`;\n\nfunction ThemeEditor() {\n  const dispatch = useDispatch();\n  const applicationId = useSelector(getCurrentApplicationId);\n  const selectedTheme = useSelector(getSelectedAppTheme);\n  const themingStack = useSelector(getAppThemingStack);\n  const [isSaveModalOpen, setSaveModalOpen] = useState(false);\n\n  /**\n   * customizes the current theme\n   */\n  const updateSelectedTheme = useCallback(\n    (theme: AppTheme) => {\n      AnalyticsUtil.logEvent(\"APP_THEMING_CUSTOMIZE_THEME\", {\n        themeId: theme.id,\n        themeName: theme.name,\n      });\n\n      dispatch(updateSelectedAppThemeAction({ applicationId, theme }));\n    },\n    [updateSelectedAppThemeAction],\n  );\n\n  /**\n   * sets the mode to THEME_EDIT\n   */\n  const onClickChangeThemeButton = useCallback(() => {\n    AnalyticsUtil.logEvent(\"APP_THEMING_CHOOSE_THEME\");\n\n    dispatch(\n      setAppThemingModeStackAction([\n        ...themingStack,\n        AppThemingMode.APP_THEME_SELECTION,\n      ]),\n    );\n  }, [setAppThemingModeStackAction]);\n\n  /**\n   * open the save modal\n   */\n  const onOpenSaveModal = useCallback(() => {\n    AnalyticsUtil.logEvent(\"APP_THEMING_SAVE_THEME_START\");\n\n    setSaveModalOpen(true);\n  }, [setSaveModalOpen]);\n\n  /**\n   * on close save modal\n   */\n  const onCloseSaveModal = useCallback(() => {\n    setSaveModalOpen(false);\n  }, [setSaveModalOpen]);\n\n  /**\n   * resets theme\n   */\n  const onResetTheme = useCallback(() => {\n    dispatch(resetThemeAction());\n  }, [dispatch, resetThemeAction]);\n\n  return (\n    <>\n      <header className=\"px-4 space-y-2\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <Title className=\"text-sm font-normal capitalize\">\n              Theme Properties\n            </Title>\n            <BetaCard />\n          </div>\n          <div>\n            <DropdownV2\n              portalContainer={\n                document.getElementById(\"app-settings-portal\") || undefined\n              }\n              position=\"bottom-right\"\n            >\n              <DropdownTrigger>\n                <button className=\"p-1 hover:bg-gray-100 active:bg-gray-100\">\n                  <MoreIcon className=\"w-5 h-5\" />\n                </button>\n              </DropdownTrigger>\n              <DropdownList>\n                <DropdownItem\n                  className=\"flex items-center\"\n                  icon={<Save2LineIcon className=\"w-4 h-4\" />}\n                  onClick={onOpenSaveModal}\n                  text=\"Save theme\"\n                />\n                <DropdownItem\n                  className=\"flex items-center\"\n                  icon={<ArrowGoBackIcon className=\"w-4 h-4\" />}\n                  onClick={onResetTheme}\n                  text=\"Reset widget styles\"\n                />\n              </DropdownList>\n            </DropdownV2>\n          </div>\n        </div>\n\n        <ThemeCard theme={selectedTheme}>\n          <aside\n            className={`absolute left-0 top-0 bottom-0 right-0 items-center justify-center hidden group-hover:flex  backdrop-filter bg-gray-900 bg-opacity-50 backdrop-blur-sm `}\n          >\n            <Button\n              category={Category.primary}\n              className=\"t--change-theme-btn\"\n              onClick={onClickChangeThemeButton}\n              size={Size.medium}\n              text=\"Change Theme\"\n            />\n          </aside>\n        </ThemeCard>\n      </header>\n      <main className=\"mt-1\">\n        {/* FONT  */}\n        <SettingSection className=\"px-4 py-3\" isDefaultOpen title=\"Font\">\n          {Object.keys(selectedTheme.config.fontFamily).map(\n            (fontFamilySectionName: string, index: number) => {\n              return (\n                <section className=\"space-y-2\" key={index}>\n                  <h3>{startCase(fontFamilySectionName)}</h3>\n                  <ThemeFontControl\n                    options={get(\n                      selectedTheme,\n                      `config.fontFamily.${fontFamilySectionName}`,\n                      {},\n                    )}\n                    sectionName={fontFamilySectionName}\n                    selectedOption={get(\n                      selectedTheme,\n                      `properties.fontFamily.${fontFamilySectionName}`,\n                    )}\n                    theme={selectedTheme}\n                    updateTheme={updateSelectedTheme}\n                  />\n                </section>\n              );\n            },\n          )}\n        </SettingSection>\n        {/* COLORS */}\n        <SettingSection\n          className=\"px-4 py-3 border-t\"\n          isDefaultOpen\n          title=\"Color\"\n        >\n          <section className=\"space-y-2\">\n            <ThemeColorControl\n              theme={selectedTheme}\n              updateTheme={updateSelectedTheme}\n            />\n          </section>\n        </SettingSection>\n\n        {/* BORDER RADIUS */}\n        <SettingSection\n          className=\"px-4 py-3 border-t \"\n          isDefaultOpen\n          title=\"Border\"\n        >\n          {Object.keys(selectedTheme.config.borderRadius).map(\n            (borderRadiusSectionName: string, index: number) => {\n              return (\n                <section className=\"space-y-2\" key={index}>\n                  <h3>{startCase(borderRadiusSectionName)}</h3>\n                  <ThemeBorderRadiusControl\n                    options={get(\n                      selectedTheme,\n                      `config.borderRadius.${borderRadiusSectionName}`,\n                      {},\n                    )}\n                    sectionName={borderRadiusSectionName}\n                    selectedOption={get(\n                      selectedTheme,\n                      `properties.borderRadius.${borderRadiusSectionName}`,\n                    )}\n                    theme={selectedTheme}\n                    updateTheme={updateSelectedTheme}\n                  />\n                </section>\n              );\n            },\n          )}\n        </SettingSection>\n\n        {/* BOX SHADOW */}\n        <SettingSection\n          className=\"px-4 py-3 border-t \"\n          isDefaultOpen\n          title=\"Shadow\"\n        >\n          {Object.keys(selectedTheme.config.boxShadow).map(\n            (boxShadowSectionName: string, index: number) => {\n              return (\n                <section className=\"space-y-2\" key={index}>\n                  <h3>{startCase(boxShadowSectionName)}</h3>\n                  <ThemeBoxShadowControl\n                    options={get(\n                      selectedTheme,\n                      `config.boxShadow.${boxShadowSectionName}`,\n                      {},\n                    )}\n                    sectionName={boxShadowSectionName}\n                    selectedOption={get(\n                      selectedTheme,\n                      `properties.boxShadow.${boxShadowSectionName}`,\n                    )}\n                    theme={selectedTheme}\n                    updateTheme={updateSelectedTheme}\n                  />\n                </section>\n              );\n            },\n          )}\n        </SettingSection>\n      </main>\n      <SaveThemeModal isOpen={isSaveModalOpen} onClose={onCloseSaveModal} />\n      <PopoverStyles />\n    </>\n  );\n}\n\nexport default ThemeEditor;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  getAppThemes,\n  getAppThemingStack,\n  getSelectedAppTheme,\n} from \"selectors/appThemingSelectors\";\nimport { ThemeCard } from \"./ThemeCard\";\nimport { SettingSection } from \"./SettingSection\";\nimport ArrowLeft from \"remixicon-react/ArrowLeftSLineIcon\";\nimport { setAppThemingModeStackAction } from \"actions/appThemingActions\";\nimport styled from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\n\nconst Title = styled.h3`\n  color: ${Colors.GRAY_800};\n`;\n\nfunction ThemeSelector() {\n  const dispatch = useDispatch();\n  const themes = useSelector(getAppThemes);\n  const themingStack = useSelector(getAppThemingStack);\n  const selectedTheme = useSelector(getSelectedAppTheme);\n\n  /**\n   * goes to previous screen in the pane\n   */\n  const onClickBack = () => {\n    dispatch(setAppThemingModeStackAction(themingStack.slice(0, -1)));\n  };\n\n  /**\n   * stores user saved themes\n   */\n  const userSavedThemes = themes.filter(\n    (theme) => theme.isSystemTheme === false,\n  );\n\n  /**\n   * stores default system themes\n   */\n  const systemThemes = themes.filter((theme) => theme.isSystemTheme === true);\n\n  return (\n    <div className=\"relative\">\n      <section className=\"sticky top-0 items-center justify-between bg-white z-1 \">\n        <button\n          className=\"inline-flex items-center px-3 py-2 space-x-1 text-gray-500 cursor-pointer t--theme-select-back-btn\"\n          onClick={onClickBack}\n          type=\"button\"\n        >\n          <ArrowLeft className=\"w-4 h-4 transition-all transform\" />\n          <h3 className=\"text-xs font-medium uppercase\">Back</h3>\n        </button>\n        <SettingSection\n          className=\"px-4 py-3 border-t border-b\"\n          isDefaultOpen={false}\n          title=\"Applied Theme\"\n        >\n          <ThemeCard theme={selectedTheme} />\n        </SettingSection>\n      </section>\n      {userSavedThemes.length > 0 && (\n        <section className=\"relative p-4 space-y-3\">\n          <Title className=\"text-sm font-medium capitalize\">Your Themes</Title>\n          {userSavedThemes.map((theme) => (\n            <ThemeCard\n              deletable={!theme.isSystemTheme}\n              key={theme.id}\n              selectable\n              theme={theme}\n            />\n          ))}\n        </section>\n      )}\n      <section className=\"relative p-4 space-y-3\">\n        <Title className=\"text-sm font-medium capitalize\">\n          Featured Themes\n        </Title>\n        {systemThemes.map((theme) => (\n          <ThemeCard\n            deletable={!theme.isSystemTheme}\n            key={theme.id}\n            selectable\n            theme={theme}\n          />\n        ))}\n      </section>\n    </div>\n  );\n}\n\nexport default ThemeSelector;\n","import React, { useMemo } from \"react\";\nimport * as Sentry from \"@sentry/react\";\nimport { last } from \"lodash\";\n\nimport ThemeEditor from \"./ThemeEditor\";\nimport ThemeSelector from \"./ThemeSelector\";\nimport {\n  AppThemingMode,\n  getAppThemingStack,\n} from \"selectors/appThemingSelectors\";\nimport { useSelector } from \"react-redux\";\n\nexport function ThemePropertyPane() {\n  const themingStack = useSelector(getAppThemingStack);\n  const themingMode = last(themingStack);\n\n  /**\n   * renders the theming property pane:\n   *\n   * 1. if THEME_EDIT -> ThemeEditor\n   * 2. if THEME_SELECTION -> ThemeSelector\n   */\n  const propertyPane = useMemo(() => {\n    switch (true) {\n      case themingMode === AppThemingMode.APP_THEME_EDIT:\n        return <ThemeEditor />;\n      case themingMode === AppThemingMode.APP_THEME_SELECTION:\n        return <ThemeSelector />;\n      default:\n        return <ThemeEditor />;\n    }\n  }, [themingMode]);\n\n  return <div className=\"relative\">{propertyPane}</div>;\n}\n\nThemePropertyPane.displayName = \"ThemePropertyPane\";\n\nexport default Sentry.withProfiler(ThemePropertyPane);\n","import styled from \"styled-components\";\nimport React from \"react\";\nimport { Icon, IconSize } from \"design-system-old\";\n\nconst Wrapper = styled.div`\n  position: absolute;\n  right: 17px;\n  top: 11px;\n  z-index: 1;\n\n  .rotate {\n    animation: rotation 8s infinite linear;\n  }\n\n  @keyframes rotation {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nfunction TextLoaderIcon() {\n  return (\n    <Wrapper>\n      <Icon className=\"rotate\" name=\"loader\" size={IconSize.XL} />\n    </Wrapper>\n  );\n}\n\nexport default TextLoaderIcon;\n","import { updateApplication } from \"actions/applicationActions\";\nimport { UpdateApplicationPayload } from \"api/ApplicationApi\";\nimport {\n  GENERAL_SETTINGS_APP_ICON_LABEL,\n  GENERAL_SETTINGS_APP_NAME_LABEL,\n  GENERAL_SETTINGS_NAME_EMPTY_MESSAGE,\n} from \"@appsmith/constants/messages\";\nimport classNames from \"classnames\";\nimport {\n  AppIconName,\n  TextInput,\n  IconSelector,\n  Text,\n  TextType,\n} from \"design-system-old\";\nimport { debounce } from \"lodash\";\nimport React, { useCallback, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCurrentApplication,\n  getIsSavingAppName,\n} from \"selectors/applicationSelectors\";\nimport { getCurrentApplicationId } from \"selectors/editorSelectors\";\nimport styled from \"styled-components\";\nimport TextLoaderIcon from \"../Components/TextLoaderIcon\";\n\nconst IconSelectorWrapper = styled.div`\n  position: relative;\n  .icon-selector {\n    max-height: 100px;\n    padding: 0;\n    .t--icon-selected,\n    .t--icon-not-selected {\n      margin: 0;\n    }\n    gap: 3px;\n  }\n  .icon-selector::-webkit-scrollbar-thumb {\n    background-color: transparent;\n  }\n  .icon-selector::-webkit-scrollbar {\n    width: 0px;\n  }\n`;\n\nfunction GeneralSettings() {\n  const dispatch = useDispatch();\n  const applicationId = useSelector(getCurrentApplicationId);\n  const application = useSelector(getCurrentApplication);\n  const isSavingAppName = useSelector(getIsSavingAppName);\n\n  const [applicationName, setApplicationName] = useState(application?.name);\n  const [isAppNameValid, setIsAppNameValid] = useState(true);\n  const [applicationIcon, setApplicationIcon] = useState(\n    application?.icon as AppIconName,\n  );\n\n  useEffect(() => {\n    !isSavingAppName && setApplicationName(application?.name);\n  }, [application, application?.name, isSavingAppName]);\n\n  const updateAppSettings = useCallback(\n    debounce((icon?: AppIconName) => {\n      const isAppNameUpdated = applicationName !== application?.name;\n\n      const payload: UpdateApplicationPayload = { currentApp: true };\n      if (isAppNameUpdated && isAppNameValid) {\n        payload.name = applicationName;\n      }\n      icon ? (payload.icon = icon) : null;\n\n      (isAppNameUpdated || icon) &&\n        dispatch(updateApplication(applicationId, payload));\n    }, 50),\n    [applicationName, application, applicationId],\n  );\n\n  return (\n    <>\n      <Text type={TextType.P1}>{GENERAL_SETTINGS_APP_NAME_LABEL()}</Text>\n      <div\n        className={classNames({\n          \"pt-1 pb-2 relative\": true,\n          \"pb-4\": !isAppNameValid,\n        })}\n      >\n        {isSavingAppName && <TextLoaderIcon />}\n        <TextInput\n          defaultValue={applicationName}\n          fill\n          id=\"t--general-settings-app-name\"\n          // undefined sent implicitly - parameter \"icon\"\n          onBlur={() => updateAppSettings()}\n          onChange={(value: string) =>\n            !isSavingAppName && setApplicationName(value)\n          }\n          onKeyPress={(ev: React.KeyboardEvent) => {\n            if (ev.key === \"Enter\") {\n              // undefined sent implicitly - parameter \"icon\"\n              updateAppSettings();\n            }\n          }}\n          placeholder=\"App name\"\n          type=\"input\"\n          validator={(value: string) => {\n            let result: { isValid: boolean; message?: string } = {\n              isValid: true,\n            };\n            if (!value || value.trim().length === 0) {\n              setIsAppNameValid(false);\n              result = {\n                isValid: false,\n                message: GENERAL_SETTINGS_NAME_EMPTY_MESSAGE(),\n              };\n            }\n            setIsAppNameValid(result.isValid);\n            return result;\n          }}\n          value={applicationName}\n        />\n      </div>\n\n      <Text type={TextType.P1}>{GENERAL_SETTINGS_APP_ICON_LABEL()}</Text>\n      <IconSelectorWrapper className=\"pt-1\" id=\"t--general-settings-app-icon\">\n        <IconSelector\n          className=\"icon-selector\"\n          fill\n          onSelect={(icon: AppIconName) => {\n            setApplicationIcon(icon);\n            // updateAppSettings - passing `icon` because `applicationIcon`\n            // will be not updated untill the component is re-rendered\n            updateAppSettings(icon);\n          }}\n          selectedColor=\"black\"\n          selectedIcon={applicationIcon}\n        />\n      </IconSelectorWrapper>\n    </>\n  );\n}\n\nexport default GeneralSettings;\n","import classNames from \"classnames\";\nimport { Icon, IconName, IconSize } from \"design-system-old\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nexport interface SectionHeaderProps {\n  id: string;\n  name: string;\n  icon: IconName;\n  subText: string;\n  isSelected: boolean;\n  onClick: () => void;\n}\n\nconst StyledWrapper = styled.div`\n  height: 50px;\n`;\n\nclass SectionHeader extends React.Component<SectionHeaderProps> {\n  render(): React.ReactNode {\n    const hoverBgColor = `hover:bg-[color:var(--appsmith-color-black-200)]`;\n    const bgColor = `bg-[color:var(--appsmith-color-black-200)]`;\n    return (\n      <StyledWrapper\n        className={classNames({\n          \"flex flex-row items-center cursor-pointer\": true,\n          [hoverBgColor]: true,\n          [bgColor]: this.props.isSelected,\n        })}\n        id={this.props.id}\n        onClick={this.props.onClick}\n      >\n        <div className=\"basis-[7.5%]\" />\n        <Icon name={this.props.icon} size={IconSize.XL} />\n        <div className=\"basis-[4.5%]\" />\n        <div className=\"flex flex-col\">\n          <div className=\"text-[14px] font-medium leading-[1.2rem]\">\n            {this.props.name}\n          </div>\n          <div className=\"text-[12px] leading-[1rem]\">{this.props.subText}</div>\n        </div>\n      </StyledWrapper>\n    );\n  }\n}\n\nexport default SectionHeader;\n","import { setPageOrder } from \"actions/pageActions\";\nimport { Page } from \"@appsmith/constants/ReduxActionConstants\";\nimport classNames from \"classnames\";\nimport { Colors } from \"constants/Colors\";\nimport { ControlIcons, DraggableList } from \"design-system-old\";\nimport { MenuIcons } from \"icons/MenuIcons\";\nimport React, { useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCurrentApplicationId } from \"selectors/editorSelectors\";\n\nconst DefaultPageIcon = MenuIcons.DEFAULT_HOMEPAGE_ICON;\nconst PageIcon = MenuIcons.PAGE_ICON;\n\nfunction PageListHeader(props: {\n  page: Page;\n  selectedPage?: string;\n  onPageSelect: (pageId: string) => void;\n}) {\n  const DragIcon = ControlIcons.DRAG_CONTROL;\n  const dragContainerRef = useRef(null);\n\n  return (\n    <div\n      className={classNames({\n        \"flex items-center cursor-pointer hover:bg-[color:var(--appsmith-color-black-200)]\": true,\n        \"bg-[color:var(--appsmith-color-black-200)]\":\n          props.selectedPage === props.page.pageId,\n      })}\n      id={`t--page-settings-${props.page.pageName}`}\n      onClick={() => {\n        props.onPageSelect(props.page.pageId);\n      }}\n      style={{ height: \"37px\" }}\n    >\n      <div\n        className=\"h-5 pr-1\"\n        onClick={(e) => e.stopPropagation()}\n        ref={dragContainerRef}\n      >\n        <DragIcon\n          color={Colors.GRAY_400}\n          cursor=\"move\"\n          height={20}\n          width={20}\n        />\n      </div>\n      {props.page.isDefault ? (\n        <DefaultPageIcon color={Colors.GRAY_800} height={17} width={18} />\n      ) : (\n        <PageIcon color={Colors.GRAY_800} height={17} width={18} />\n      )}\n      <div\n        className=\"font-medium pl-1 text-ellipsis whitespace-nowrap overflow-hidden\"\n        id={\n          props.page.isDefault\n            ? \"t--page-settings-default-page\"\n            : \"t--page-settings-non-default-page\"\n        }\n      >\n        {props.page.pageName}\n      </div>\n    </div>\n  );\n}\n\nfunction DraggablePageList(props: {\n  pages: Page[];\n  selectedPage?: string;\n  onPageSelect: (pageId: string) => void;\n}) {\n  const dispatch = useDispatch();\n  const applicationId = useSelector(getCurrentApplicationId);\n\n  const onListOrderUpdate = (\n    newOrder: any,\n    originalIndex: number,\n    newIndex: number,\n  ) => {\n    dispatch(\n      setPageOrder(applicationId, props.pages[originalIndex].pageId, newIndex),\n    );\n  };\n\n  return (\n    <DraggableList\n      ItemRenderer={({ item }: { item: Page }) => (\n        <PageListHeader\n          onPageSelect={props.onPageSelect}\n          page={item}\n          selectedPage={props.selectedPage}\n        />\n      )}\n      itemHeight={37}\n      items={props.pages}\n      keyAccessor={\"pageId\"}\n      onUpdate={onListOrderUpdate}\n      shouldReRender={false}\n    />\n  );\n}\n\nexport default DraggablePageList;\n","import { Colors } from \"constants/Colors\";\nimport { css } from \"styled-components\";\n\nexport const BottomBarCTAStyles = css`\n  height: ${(props) => props.theme.bottomBarHeight};\n  width: 32px;\n  :hover {\n    background-color: ${Colors.GRAY_100};\n  }\n`;\n","import {\n  ApplicationVersion,\n  updateApplication,\n} from \"actions/applicationActions\";\nimport {\n  Button,\n  Category,\n  Icon,\n  IconSize,\n  IconWrapper,\n  Size,\n} from \"design-system-old\";\nimport { TooltipComponent, Text, TextType } from \"design-system-old\";\nimport ModalComponent from \"components/designSystems/appsmith/ModalComponent\";\nimport { Colors } from \"constants/Colors\";\nimport React, { ReactNode, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCurrentApplicationId,\n  getCurrentPageId,\n  selectApplicationVersion,\n  selectURLSlugs,\n} from \"selectors/editorSelectors\";\nimport styled from \"styled-components\";\nimport { createMessage, CLEAN_URL_UPDATE } from \"@appsmith/constants/messages\";\nimport { useLocation } from \"react-router\";\nimport DisclaimerIcon from \"remixicon-react/ErrorWarningLineIcon\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport classNames from \"classnames\";\nimport { BottomBarCTAStyles } from \"./styles\";\n\nconst StyledList = styled.ul`\n  list-style: disc;\n  margin-left: 16px;\n  li {\n    font-size: 14px;\n    font-weight: 400;\n    line-height: 19px;\n    letter-spacing: -0.24px;\n    margin: 4px 0;\n    a {\n      color: rgb(248, 106, 43);\n    }\n    code {\n      font-weight: 500;\n      background: #ebebeb;\n      padding: 0 5px;\n      border-radius: 5px;\n    }\n  }\n`;\n\nconst StyledIconContainer = styled.div`\n  background: rgb(231, 231, 231);\n  padding: 0.25rem;\n  margin-right: 0.5rem;\n  border-radius: 50%;\n`;\n\nconst DisclaimerContainer = styled.div`\n  padding: 8px 16px;\n  display: flex;\n  justify-content: space-between;\n  gap: 1rem;\n  align-items: center;\n  background: ${Colors.WARNING_ORANGE};\n  color: ${Colors.BROWN};\n  margin: 24px 0 0;\n`;\n\nconst BodyContainer = styled.div`\n  .close-modal > svg {\n    height: 28px;\n    width: 28px;\n  }\n`;\n\nconst StyledTrigger = styled.div`\n  ${BottomBarCTAStyles}\n  display: flex;\n  justify-content: center;\n`;\n\nfunction UpdatesModal({\n  applicationVersion,\n  closeModal,\n  latestVersion,\n  showModal,\n  updates,\n}: {\n  showModal: boolean;\n  closeModal: () => void;\n  latestVersion: ApplicationVersion;\n  applicationVersion: ApplicationVersion;\n  updates: {\n    name: string;\n    shortDesc: string;\n    description: string[];\n    version: ApplicationVersion;\n    disclaimer: {\n      desc: string;\n    };\n  }[];\n}) {\n  const dispatch = useDispatch();\n  const applicationId = useSelector(getCurrentApplicationId);\n  const [isLoading, setIsLoading] = useState(false);\n\n  return (\n    <ModalComponent\n      canEscapeKeyClose\n      canOutsideClickClose={false}\n      hasBackDrop\n      isOpen={showModal}\n      onClose={closeModal}\n      overlayClassName=\"manual-upgrades-overlay\"\n      portalClassName=\"manual-upgrades\"\n      scrollContents\n      width={600}\n    >\n      <BodyContainer className=\"p-6\" id=\"manual-upgrades-modal\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex items-center justify-start\">\n            <StyledIconContainer>\n              <Icon\n                fillColor={Colors.SCORPION}\n                name=\"upgrade\"\n                size={IconSize.XXXL}\n              />\n            </StyledIconContainer>\n            <Text type={TextType.H1}>Product Updates</Text>\n          </div>\n          <Icon\n            className=\"close-modal\"\n            fillColor={Colors.SCORPION}\n            name=\"close-modal\"\n            onClick={closeModal}\n            size={IconSize.XXXL}\n          />\n        </div>\n        {updates.slice(applicationVersion - 1).map((update) => (\n          <div className=\"mt-4 mb-6\" key={update.name}>\n            <div className=\"mb-4\">\n              <Text type={TextType.H3}>{update.name}</Text>\n            </div>\n            <StyledList>\n              {update.description.map((desc, idx) => (\n                <li dangerouslySetInnerHTML={{ __html: desc }} key={idx} />\n              ))}\n            </StyledList>\n            <DisclaimerContainer>\n              <IconWrapper size={IconSize.XXXL}>\n                <DisclaimerIcon color={Colors.WARNING_SOLID} />\n              </IconWrapper>\n              <span\n                dangerouslySetInnerHTML={{ __html: update.disclaimer.desc }}\n              />\n            </DisclaimerContainer>\n          </div>\n        ))}\n        <div className=\"flex justify-end gap-2 items-center\">\n          <Button\n            category={Category.secondary}\n            onClick={closeModal}\n            size={Size.large}\n            tag=\"button\"\n            text=\"Dismiss\"\n          />\n          <Button\n            category={Category.primary}\n            className=\"t--upgrade-confirm\"\n            isLoading={isLoading}\n            onClick={() => {\n              setIsLoading(true);\n              AnalyticsUtil.logEvent(\"MANUAL_UPGRADE_CLICK\");\n              dispatch(\n                updateApplication(\n                  applicationId as string,\n                  {\n                    applicationVersion: latestVersion,\n                  },\n                  window.location.reload.bind(window.location),\n                ),\n              );\n            }}\n            size={Size.large}\n            tag=\"button\"\n            text=\"Update\"\n          />\n        </div>\n      </BodyContainer>\n    </ModalComponent>\n  );\n}\n\nfunction ManualUpgrades(props: {\n  children: ReactNode;\n  inline?: boolean;\n  showTooltip?: boolean;\n}) {\n  const applicationVersion = useSelector(selectApplicationVersion);\n  const applicationId = useSelector(getCurrentApplicationId);\n  const pageId = useSelector(getCurrentPageId);\n  const { applicationSlug, pageSlug } = useSelector(selectURLSlugs);\n  const location = useLocation();\n\n  const updates = React.useMemo(\n    () => [\n      {\n        name: createMessage(CLEAN_URL_UPDATE.name),\n        shortDesc: createMessage(CLEAN_URL_UPDATE.shortDesc),\n        description: CLEAN_URL_UPDATE.description.map((formatter) =>\n          createMessage(\n            formatter.bind(\n              null,\n              window.location.href.replace(\n                `/applications/${applicationId}/pages/${pageId}`,\n                `/app/${applicationSlug}/${pageSlug}-${pageId}`,\n              ),\n            ),\n          ),\n        ),\n        disclaimer: {\n          severity: \"MODERATE\",\n          desc: createMessage(CLEAN_URL_UPDATE.disclaimer),\n        },\n        version: ApplicationVersion.SLUG_URL,\n      },\n    ],\n    [location, applicationSlug, pageSlug, pageId, applicationId],\n  );\n  const latestVersion = React.useMemo(\n    () => updates.reduce((max, u) => (max > u.version ? max : u.version), 0),\n    [],\n  );\n  const [showModal, setShowModal] = React.useState(false);\n\n  const tooltipContent = (\n    <div className=\"text-sm\">\n      {`${latestVersion - applicationVersion} pending update(s)`}\n      <ul className=\"mt-1\">\n        {updates.slice(applicationVersion - 1).map((u) => (\n          <li key={u.name}>{u.shortDesc}</li>\n        ))}\n      </ul>\n    </div>\n  );\n\n  if (applicationVersion === latestVersion) return null;\n\n  return (\n    <div\n      className={classNames({\n        relative: true,\n        \"inline-block\": props.inline,\n      })}\n      data-testid=\"update-indicator\"\n    >\n      <TooltipComponent\n        content={tooltipContent}\n        disabled={!props.showTooltip}\n        modifiers={{\n          preventOverflow: { enabled: true },\n        }}\n      >\n        <StyledTrigger\n          onClick={() => {\n            setShowModal(applicationVersion < latestVersion);\n          }}\n        >\n          {props.children}\n        </StyledTrigger>\n      </TooltipComponent>\n      <UpdatesModal\n        applicationVersion={applicationVersion}\n        closeModal={() => {\n          setShowModal(false);\n        }}\n        latestVersion={latestVersion}\n        showModal={showModal}\n        updates={updates}\n      />\n    </div>\n  );\n}\n\nexport default ManualUpgrades;\n","import { TooltipComponent as Tooltip } from \"design-system-old\";\nimport { EditorTheme } from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport React from \"react\";\n\ntype Props = {\n  className?: string;\n  tooltip?: string;\n  label: string;\n  theme?: EditorTheme;\n  maxWidth?: string;\n  lineHeight?: string;\n};\n\nfunction PropertyHelpLabel(props: Props) {\n  const toolTipDefined = props.tooltip !== undefined;\n  if (!props.label) {\n    return null;\n  }\n  return (\n    <Tooltip\n      content={\n        <div\n          style={{\n            color: \"#FAFAFA\",\n            maxWidth: props.maxWidth ? props.maxWidth : \"320px\",\n            lineHeight: props.lineHeight,\n          }}\n        >\n          {props.tooltip || \"\"}\n        </div>\n      }\n      disabled={!toolTipDefined}\n      hoverOpenDelay={200}\n      openOnTargetFocus={false}\n      popoverClassName={props.className}\n      position=\"top\"\n    >\n      <div\n        style={{\n          height: \"22px\",\n        }}\n      >\n        <label\n          className={`t--property-control-label`}\n          style={\n            toolTipDefined\n              ? {\n                  cursor: \"help\",\n                }\n              : {}\n          }\n        >\n          {props.label}\n        </label>\n        <span\n          className={\"underline\"}\n          style={\n            toolTipDefined\n              ? {\n                  borderBottom: \"1px dashed\",\n                  width: \"100%\",\n                  display: \"flex\",\n                  position: \"relative\",\n                  top: \"-3px\",\n                }\n              : {}\n          }\n        />\n      </div>\n    </Tooltip>\n  );\n}\n\nexport default PropertyHelpLabel;\n","import { AppState } from \"@appsmith/reducers\";\nimport { createSelector } from \"reselect\";\n\nimport { PageListReduxState } from \"reducers/entityReducers/pageListReducer\";\n\nconst getPageListState = (state: AppState) => state.entities.pageList;\n\nexport const getPageLoadingState = (pageId: string) =>\n  createSelector(\n    getPageListState,\n    (pageList: PageListReduxState) => pageList.loading[pageId],\n  );\n\nexport const getIsGeneratingTemplatePage = createSelector(\n  getPageListState,\n  (pageList: PageListReduxState) => pageList.isGeneratingTemplatePage,\n);\n","import { APP_MODE } from \"entities/App\";\nimport urlBuilder from \"entities/URLRedirect/URLAssembly\";\nimport { splitPathPreview } from \"utils/helpers\";\n\nexport const getUrlPreview = (\n  pageId: string,\n  newPageName: string,\n  currentPageName: string,\n  newCustomSlug?: string,\n  currentCustomSlug?: string,\n) => {\n  let relativePath: string;\n\n  newPageName = filterAccentedAndSpecialCharacters(newPageName);\n  currentPageName = filterAccentedAndSpecialCharacters(currentPageName);\n  newCustomSlug &&\n    (newCustomSlug = filterAccentedAndSpecialCharacters(newCustomSlug));\n  currentCustomSlug &&\n    (currentCustomSlug = filterAccentedAndSpecialCharacters(currentCustomSlug));\n\n  // when page name is changed\n  // and when custom slug doesn't exist\n  if (!newCustomSlug && newPageName !== currentPageName) {\n    // show path based on page name\n    relativePath = urlBuilder.getPagePathPreview(pageId, newPageName);\n  }\n  // when custom slug is changed\n  else if (newCustomSlug !== currentCustomSlug) {\n    if (newCustomSlug) {\n      // show custom slug preview\n      relativePath = urlBuilder.getCustomSlugPathPreview(pageId, newCustomSlug);\n    } else {\n      // when custom slug is removed\n      // show path based on page name\n      relativePath = urlBuilder.getPagePathPreview(pageId, newPageName);\n    }\n  }\n  // when nothing has changed\n  else {\n    relativePath = urlBuilder.generateBasePath(pageId, APP_MODE.PUBLISHED);\n  }\n\n  return {\n    relativePath,\n    splitRelativePath: splitPathPreview(relativePath, newCustomSlug),\n  };\n};\n\nconst filterAccentedAndSpecialCharacters = (value: string) => {\n  return decodeURI(value)\n    .replaceAll(\" \", \"-\")\n    .replaceAll(/[^A-Za-z0-9-]/g, \"\");\n};\n","import { ApplicationVersion } from \"actions/applicationActions\";\nimport { setPageAsDefault, updatePage } from \"actions/pageActions\";\nimport { UpdatePageRequest } from \"api/PageApi\";\nimport {\n  PAGE_SETTINGS_SHOW_PAGE_NAV,\n  PAGE_SETTINGS_PAGE_NAME_LABEL,\n  PAGE_SETTINGS_PAGE_URL_LABEL,\n  PAGE_SETTINGS_PAGE_URL_VERSION_UPDATE_1,\n  PAGE_SETTINGS_PAGE_URL_VERSION_UPDATE_2,\n  PAGE_SETTINGS_PAGE_URL_VERSION_UPDATE_3,\n  PAGE_SETTINGS_SET_AS_HOMEPAGE,\n  PAGE_SETTINGS_SET_AS_HOMEPAGE_TOOLTIP,\n  PAGE_SETTINGS_NAME_EMPTY_MESSAGE,\n  PAGE_SETTINGS_SHOW_PAGE_NAV_TOOLTIP,\n  PAGE_SETTINGS_SET_AS_HOMEPAGE_TOOLTIP_NON_HOME_PAGE,\n  PAGE_SETTINGS_ACTION_NAME_CONFLICT_ERROR,\n} from \"@appsmith/constants/messages\";\nimport { Page } from \"@appsmith/constants/ReduxActionConstants\";\nimport { hasManagePagePermission } from \"@appsmith/utils/permissionHelpers\";\nimport classNames from \"classnames\";\nimport { Text, TextInput, TextType } from \"design-system-old\";\nimport AdsSwitch from \"design-system-old/build/Switch\";\nimport ManualUpgrades from \"pages/Editor/BottomBar/ManualUpgrades\";\nimport PropertyHelpLabel from \"pages/Editor/PropertyPane/PropertyHelpLabel\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCurrentApplicationId,\n  selectApplicationVersion,\n} from \"selectors/editorSelectors\";\nimport { getUpdatingEntity } from \"selectors/explorerSelector\";\nimport { getPageLoadingState } from \"selectors/pageListSelectors\";\nimport styled from \"styled-components\";\nimport TextLoaderIcon from \"../Components/TextLoaderIcon\";\nimport { getUrlPreview } from \"../Utils\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { getUsedActionNames } from \"selectors/actionSelectors\";\nimport { isNameValid, resolveAsSpaceChar } from \"utils/helpers\";\nimport SwitchWrapper from \"../Components/SwitchWrapper\";\n\nconst UrlPreviewWrapper = styled.div`\n  height: 54px;\n`;\n\nconst UrlPreviewScroll = styled.div`\n  height: 48px;\n  overflow-y: auto;\n\n  /* width */\n  ::-webkit-scrollbar {\n    width: 3px;\n  }\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: #bec4c4;\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nconst specialCharacterCheckRegex = /^[A-Za-z0-9\\s\\-]+$/g;\n\nfunction PageSettings(props: { page: Page }) {\n  const dispatch = useDispatch();\n  const page = props.page;\n  const applicationId = useSelector(getCurrentApplicationId);\n  const applicationVersion = useSelector(selectApplicationVersion);\n  const isPageLoading = useSelector(getPageLoadingState(page.pageId));\n\n  const updatingEntity = useSelector(getUpdatingEntity);\n  const isUpdatingEntity = updatingEntity === page.pageId;\n\n  const appNeedsUpdate = applicationVersion < ApplicationVersion.SLUG_URL;\n\n  const [canManagePages, setCanManagePages] = useState(\n    hasManagePagePermission(page?.userPermissions || []),\n  );\n\n  const [pageName, setPageName] = useState(page.pageName);\n  const [isPageNameSaving, setIsPageNameSaving] = useState(false);\n  const [isPageNameValid, setIsPageNameValid] = useState(true);\n\n  const [customSlug, setCustomSlug] = useState(page.customSlug);\n  const [isCustomSlugSaving, setIsCustomSlugSaving] = useState(false);\n\n  const [isShown, setIsShown] = useState(!!!page.isHidden);\n  const [isShownSaving, setIsShownSaving] = useState(false);\n\n  const [isDefault, setIsDefault] = useState(page.isDefault);\n  const [isDefaultSaving, setIsDefaultSaving] = useState(false);\n\n  const pathPreview = useCallback(getUrlPreview, [\n    page.pageId,\n    pageName,\n    page.pageName,\n    customSlug,\n    page.customSlug,\n  ])(page.pageId, pageName, page.pageName, customSlug, page.customSlug);\n\n  const conflictingNames = useSelector(\n    (state: AppState) => getUsedActionNames(state, \"\"),\n    shallowEqual,\n  );\n\n  const hasActionNameConflict = useCallback(\n    (name: string) => !isNameValid(name, conflictingNames),\n    [conflictingNames],\n  );\n\n  useEffect(() => {\n    setPageName(page.pageName);\n    setCustomSlug(page.customSlug || \"\");\n    setIsShown(!!!page.isHidden);\n    setIsDefault(!!page.isDefault);\n    setCanManagePages(hasManagePagePermission(page?.userPermissions || []));\n  }, [page, page.pageName, page.customSlug, page.isHidden, page.isDefault]);\n\n  useEffect(() => {\n    if (!isPageLoading) {\n      isPageNameSaving && setIsPageNameSaving(false);\n      isCustomSlugSaving && setIsCustomSlugSaving(false);\n      isShownSaving && setIsShownSaving(false);\n    }\n  }, [isPageLoading]);\n\n  useEffect(() => {\n    if (!isUpdatingEntity) {\n      isDefaultSaving && setIsDefaultSaving(false);\n    }\n  }, [isUpdatingEntity]);\n\n  const savePageName = useCallback(() => {\n    if (!canManagePages || !isPageNameValid || page.pageName === pageName)\n      return;\n    const payload: UpdatePageRequest = {\n      id: page.pageId,\n      name: pageName,\n    };\n    setIsPageNameSaving(true);\n    dispatch(updatePage(payload));\n  }, [page.pageId, page.pageName, pageName, isPageNameValid]);\n\n  const saveCustomSlug = useCallback(() => {\n    if (!canManagePages || page.customSlug === customSlug) return;\n    const payload: UpdatePageRequest = {\n      id: page.pageId,\n      customSlug: customSlug || \"\",\n    };\n    setIsCustomSlugSaving(true);\n    dispatch(updatePage(payload));\n  }, [page.pageId, page.customSlug, customSlug]);\n\n  const saveIsShown = useCallback(\n    (isShown: boolean) => {\n      if (!canManagePages) return;\n      const payload: UpdatePageRequest = {\n        id: page.pageId,\n        isHidden: !isShown,\n      };\n      setIsShownSaving(true);\n      dispatch(updatePage(payload));\n    },\n    [page.pageId, isShown],\n  );\n\n  return (\n    <>\n      <Text type={TextType.P1}>{PAGE_SETTINGS_PAGE_NAME_LABEL()}</Text>\n      <div\n        className={classNames({\n          \"pt-1 pb-2 relative\": true,\n          \"pb-4\": !isPageNameValid,\n        })}\n      >\n        {isPageNameSaving && <TextLoaderIcon />}\n        <TextInput\n          defaultValue={pageName}\n          disabled={!canManagePages}\n          fill\n          id=\"t--page-settings-name\"\n          onBlur={savePageName}\n          onChange={(value: string) =>\n            setPageName(resolveAsSpaceChar(value, 30))\n          }\n          onKeyPress={(ev: React.KeyboardEvent) => {\n            if (ev.key === \"Enter\") {\n              savePageName();\n            }\n          }}\n          placeholder=\"Page name\"\n          type=\"input\"\n          validator={(value: string) => {\n            let result: { isValid: boolean; message?: string } = {\n              isValid: true,\n            };\n            if (!value || value.trim().length === 0) {\n              result = {\n                isValid: false,\n                message: PAGE_SETTINGS_NAME_EMPTY_MESSAGE(),\n              };\n            } else if (\n              value !== page.pageName &&\n              hasActionNameConflict(value)\n            ) {\n              result = {\n                isValid: false,\n                message: PAGE_SETTINGS_ACTION_NAME_CONFLICT_ERROR(value),\n              };\n            }\n            setIsPageNameValid(result.isValid);\n            return result;\n          }}\n          value={pageName}\n        />\n      </div>\n\n      <Text type={TextType.P1}>{PAGE_SETTINGS_PAGE_URL_LABEL()}</Text>\n      {appNeedsUpdate && (\n        <div\n          className={`pt-1 text-[color:var(--appsmith-color-black-700)] text-[13px]`}\n          style={{ lineHeight: \"1.31\" }}\n        >\n          {PAGE_SETTINGS_PAGE_URL_VERSION_UPDATE_1()}{\" \"}\n          <ManualUpgrades inline>\n            <a>\n              <u className=\"text-[color:var(--appsmith-color-black-900)]\">\n                {PAGE_SETTINGS_PAGE_URL_VERSION_UPDATE_2()}\n              </u>\n            </a>\n          </ManualUpgrades>{\" \"}\n          {PAGE_SETTINGS_PAGE_URL_VERSION_UPDATE_3()}\n        </div>\n      )}\n      <div\n        className={classNames({\n          \"py-1 relative\": true,\n          \"pb-2\": appNeedsUpdate,\n        })}\n      >\n        {isCustomSlugSaving && <TextLoaderIcon />}\n        <TextInput\n          defaultValue={customSlug}\n          disabled={!canManagePages}\n          fill\n          id=\"t--page-settings-custom-slug\"\n          onBlur={saveCustomSlug}\n          onChange={(value: string) =>\n            value.length > 0\n              ? specialCharacterCheckRegex.test(value) && setCustomSlug(value)\n              : setCustomSlug(value)\n          }\n          onKeyPress={(ev: React.KeyboardEvent) => {\n            if (ev.key === \"Enter\") {\n              saveCustomSlug();\n            }\n          }}\n          placeholder=\"Page URL\"\n          readOnly={appNeedsUpdate}\n          type=\"input\"\n          value={customSlug}\n        />\n      </div>\n\n      {!appNeedsUpdate && (\n        <UrlPreviewWrapper\n          className={`mb-2 bg-[color:var(--appsmith-color-black-100)]`}\n        >\n          <UrlPreviewScroll\n            className={`py-1 pl-2 mr-0.5 text-[color:var(--appsmith-color-black-700)] text-xs break-all`}\n            onCopy={() => {\n              navigator.clipboard.writeText(\n                location.protocol +\n                  \"//\" +\n                  window.location.hostname +\n                  pathPreview.relativePath,\n              );\n            }}\n            style={{ lineHeight: \"1.17\" }}\n          >\n            {location.protocol}\n            {\"//\"}\n            {window.location.hostname}\n            {Array.isArray(pathPreview.splitRelativePath) && (\n              <>\n                {pathPreview.splitRelativePath[0]}\n                <strong\n                  className={`text-[color:var(--appsmith-color-black-800))]`}\n                >\n                  {pathPreview.splitRelativePath[1]}\n                </strong>\n                {pathPreview.splitRelativePath[2]}\n                {pathPreview.splitRelativePath[3]}\n              </>\n            )}\n            {!Array.isArray(pathPreview.splitRelativePath) &&\n              pathPreview.splitRelativePath}\n          </UrlPreviewScroll>\n        </UrlPreviewWrapper>\n      )}\n\n      <div className=\"flex justify-between content-center pb-2\">\n        <div className=\"pt-0.5 text-[color:var(--appsmith-color-black-700)]\">\n          <PropertyHelpLabel\n            label={PAGE_SETTINGS_SHOW_PAGE_NAV()}\n            lineHeight=\"1.17\"\n            maxWidth=\"217px\"\n            tooltip={PAGE_SETTINGS_SHOW_PAGE_NAV_TOOLTIP()}\n          />\n        </div>\n        <SwitchWrapper>\n          <AdsSwitch\n            checked={isShown}\n            className=\"mb-0\"\n            disabled={isShownSaving || !canManagePages}\n            id=\"t--page-settings-show-nav-control\"\n            large\n            onChange={() => {\n              setIsShown(!isShown);\n              saveIsShown(!isShown);\n            }}\n          />\n        </SwitchWrapper>\n      </div>\n\n      <div className=\"flex justify-between content-center\">\n        <div className=\"pt-0.5 text-[color:var(--appsmith-color-black-700)]\">\n          <PropertyHelpLabel\n            label={PAGE_SETTINGS_SET_AS_HOMEPAGE()}\n            lineHeight=\"1.17\"\n            maxWidth=\"217px\"\n            tooltip={\n              !!isDefault\n                ? PAGE_SETTINGS_SET_AS_HOMEPAGE_TOOLTIP()\n                : PAGE_SETTINGS_SET_AS_HOMEPAGE_TOOLTIP_NON_HOME_PAGE()\n            }\n          />\n        </div>\n        <SwitchWrapper>\n          <AdsSwitch\n            checked={isDefault}\n            className=\"mb-0\"\n            disabled={isDefaultSaving || page.isDefault || !canManagePages}\n            id=\"t--page-settings-home-page-control\"\n            large\n            onChange={() => {\n              if (!canManagePages) return;\n              setIsDefault(!isDefault);\n              setIsDefaultSaving(true);\n              dispatch(setPageAsDefault(page.pageId, applicationId));\n            }}\n          />\n        </SwitchWrapper>\n      </div>\n    </>\n  );\n}\n\nexport default PageSettings;\n","import { changeAppViewAccessInit } from \"actions/applicationActions\";\nimport {\n  IconSize,\n  TextType,\n  Text,\n  Switch,\n  Case,\n  Classes,\n  Icon,\n} from \"design-system-old\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCurrentApplication,\n  getIsChangingViewAccess,\n  getIsFetchingApplications,\n} from \"selectors/applicationSelectors\";\nimport PropertyHelpLabel from \"pages/Editor/PropertyPane/PropertyHelpLabel\";\nimport SwitchWrapper from \"../Components/SwitchWrapper\";\nimport styled from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\nimport useUpdateEmbedSnippet from \"pages/Applications/EmbedSnippet/useUpdateEmbedSnippet\";\nimport DimensionsInput from \"pages/Applications/EmbedSnippet/DimensionsInput\";\nimport EmbedCodeSnippet from \"pages/Applications/EmbedSnippet/Snippet\";\nimport {\n  createMessage,\n  IN_APP_EMBED_SETTING,\n  MAKE_APPLICATION_PUBLIC_TOOLTIP,\n  MAKE_APPLICATION_PUBLIC,\n} from \"@appsmith/constants/messages\";\nimport {\n  isPermitted,\n  PERMISSION_TYPE,\n} from \"@appsmith/utils/permissionHelpers\";\n\nconst StyledLink = styled.a`\n  position: relative;\n  top: 1px;\n  :hover {\n    text-decoration: none;\n  }\n\n  .${Classes.TEXT} {\n    border-bottom: 1px solid ${Colors.GRAY_700};\n  }\n`;\n\nconst StyledPropertyHelpLabel = styled(PropertyHelpLabel)`\n  .bp3-popover-content > div {\n    text-align: center;\n    max-height: 44px;\n    display: flex;\n    align-items: center;\n  }\n`;\n\nfunction EmbedSettings() {\n  const application = useSelector(getCurrentApplication);\n  const dispatch = useDispatch();\n  const isChangingViewAccess = useSelector(getIsChangingViewAccess);\n  const isFetchingApplication = useSelector(getIsFetchingApplications);\n  const embedSnippet = useUpdateEmbedSnippet();\n  const userAppPermissions = application?.userPermissions ?? [];\n  const canShareWithPublic = isPermitted(\n    userAppPermissions,\n    PERMISSION_TYPE.MAKE_PUBLIC_APPLICATION,\n  );\n\n  return (\n    <div>\n      {canShareWithPublic && (\n        <>\n          <div className=\"px-4\">\n            <div className=\"pt-3 pb-2 font-medium text-[color:var(--appsmith-color-black-800)]\">\n              {createMessage(IN_APP_EMBED_SETTING.sectionContentHeader)}\n            </div>\n          </div>\n          <div className=\"px-4\">\n            <div className=\"flex justify-between content-center pb-4\">\n              <StyledPropertyHelpLabel\n                label={createMessage(MAKE_APPLICATION_PUBLIC)}\n                lineHeight=\"1.17\"\n                maxWidth=\"270px\"\n                tooltip={createMessage(MAKE_APPLICATION_PUBLIC_TOOLTIP)}\n              />\n              <SwitchWrapper>\n                <Switch\n                  checked={application?.isPublic}\n                  className=\"mb-0\"\n                  disabled={isFetchingApplication || isChangingViewAccess}\n                  id=\"t--embed-settings-application-public\"\n                  large\n                  onChange={() =>\n                    application &&\n                    dispatch(\n                      changeAppViewAccessInit(\n                        application?.id,\n                        !application?.isPublic,\n                      ),\n                    )\n                  }\n                />\n              </SwitchWrapper>\n            </div>\n          </div>\n          <div\n            className={`border-t-[1px] border-[color:var(--appsmith-color-black-300)]`}\n          />\n        </>\n      )}\n\n      <div className=\"px-4\">\n        <div className=\"pt-3 pb-2 font-medium text-[color:var(--appsmith-color-black-800)]\">\n          {createMessage(IN_APP_EMBED_SETTING.embed)}\n        </div>\n      </div>\n\n      {embedSnippet.isSuperUser && (\n        <div className=\"px-4\">\n          <div className=\"flex justify-between content-center pb-3\">\n            <div\n              className=\"flex gap-1 pt-0.5 text-[color:var(--appsmith-color-black-700)]\"\n              data-cy={\"frame-ancestors-setting\"}\n            >\n              <Icon\n                name={embedSnippet.embedSettingContent.icon}\n                size={IconSize.XXL}\n              />\n              <StyledPropertyHelpLabel\n                label={embedSnippet.embedSettingContent.label}\n                lineHeight=\"1.17\"\n                maxWidth=\"217px\"\n                tooltip={embedSnippet.embedSettingContent.tooltip}\n              />\n            </div>\n            <StyledLink\n              href=\"https://docs.appsmith.com/getting-started/setup/instance-configuration/frame-ancestors#why-should-i-control-this\"\n              target=\"_blank\"\n            >\n              <Text\n                case={Case.UPPERCASE}\n                color={Colors.GRAY_700}\n                type={TextType.BUTTON_SMALL}\n              >\n                {createMessage(IN_APP_EMBED_SETTING.change)}\n              </Text>\n            </StyledLink>\n          </div>\n        </div>\n      )}\n\n      <div className=\"px-4 flex justify-between items-center pb-2\">\n        <Text type={TextType.P1}>\n          {createMessage(IN_APP_EMBED_SETTING.showNavigationBar)}\n        </Text>\n        <SwitchWrapper>\n          <Switch\n            className=\"mb-0\"\n            data-cy=\"show-navigation-bar-toggle\"\n            defaultChecked={embedSnippet.currentEmbedSetting?.showNavigationBar}\n            large\n            onChange={() =>\n              embedSnippet.onChange({\n                showNavigationBar: !embedSnippet.currentEmbedSetting\n                  ?.showNavigationBar,\n              })\n            }\n          />\n        </SwitchWrapper>\n      </div>\n\n      <div className=\"px-4\">\n        <Text type={TextType.P1}>\n          {createMessage(IN_APP_EMBED_SETTING.embedSize)}\n        </Text>\n        <div className=\"flex gap-2 pt-1 pb-4\">\n          <DimensionsInput\n            onChange={(width: string) => embedSnippet.onChange({ width })}\n            prefix=\"W\"\n            value={embedSnippet.currentEmbedSetting?.width}\n          />\n          <DimensionsInput\n            onChange={(height: string) => embedSnippet.onChange({ height })}\n            prefix=\"H\"\n            value={embedSnippet.currentEmbedSetting.height}\n          />\n        </div>\n      </div>\n\n      <div className=\"px-4\">\n        <Text type={TextType.P1}>\n          {createMessage(IN_APP_EMBED_SETTING.embedSnippetTitle)}\n        </Text>\n        <EmbedCodeSnippet snippet={embedSnippet.snippet} />\n      </div>\n    </div>\n  );\n}\n\nexport default EmbedSettings;\n","import { Page } from \"@appsmith/constants/ReduxActionConstants\";\nimport { ThemePropertyPane } from \"pages/Editor/ThemePropertyPane\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectAllPages } from \"selectors/entitiesSelector\";\nimport styled from \"styled-components\";\nimport GeneralSettings from \"./GeneralSettings\";\nimport SectionHeader, { SectionHeaderProps } from \"./SectionHeader\";\nimport DraggablePageList from \"./DraggablePageList\";\nimport PageSettings from \"./PageSettings\";\nimport { getAppSettingsPane } from \"selectors/appSettingsPaneSelectors\";\nimport {\n  createMessage,\n  GENERAL_SETTINGS_SECTION_CONTENT_HEADER,\n  GENERAL_SETTINGS_SECTION_HEADER,\n  GENERAL_SETTINGS_SECTION_HEADER_DESC,\n  IN_APP_EMBED_SETTING,\n  PAGE_SETTINGS_SECTION_CONTENT_HEADER,\n  PAGE_SETTINGS_SECTION_HEADER,\n  THEME_SETTINGS_SECTION_CONTENT_HEADER,\n  THEME_SETTINGS_SECTION_HEADER,\n  THEME_SETTINGS_SECTION_HEADER_DESC,\n} from \"@appsmith/constants/messages\";\nimport { Colors } from \"constants/Colors\";\nimport EmbedSettings from \"./EmbedSettings\";\n\nexport enum AppSettingsTabs {\n  General,\n  Embed,\n  Theme,\n  Page,\n}\n\nexport interface SelectedTab {\n  type: AppSettingsTabs;\n  page?: Page;\n}\n\nconst Wrapper = styled.div`\n  height: calc(100% - 48px);\n`;\n\nconst SectionContent = styled.div`\n  box-shadow: -1px 0 0 0 ${Colors.GRAY_300};\n  // property help label underline\n  .underline {\n    color: ${(props) => props.theme.colors.paneTextUnderline};\n  }\n`;\n\nconst ThemeContentWrapper = styled.div`\n  height: calc(100% - 48px);\n  overflow-y: overlay;\n`;\n\nfunction AppSettings() {\n  const { context } = useSelector(getAppSettingsPane);\n  const pages: Page[] = useSelector(selectAllPages);\n\n  const [selectedTab, setSelectedTab] = useState<SelectedTab>({\n    type: context?.type || AppSettingsTabs.General,\n    page:\n      context?.pageId && pages.length > 0\n        ? pages.find((page) => page.pageId === context.pageId) || pages[0]\n        : undefined,\n  });\n\n  useEffect(() => {\n    if (selectedTab.page?.pageId && pages.length > 0) {\n      setSelectedTab({\n        ...selectedTab,\n        page:\n          pages.find((page) => page.pageId === selectedTab.page?.pageId) ||\n          pages[0],\n      });\n    }\n  }, [selectedTab.page?.pageId, pages]);\n\n  const SectionHeadersConfig: SectionHeaderProps[] = [\n    {\n      id: \"t--general-settings-header\",\n      icon: \"settings-2-line\",\n      isSelected: selectedTab.type === AppSettingsTabs.General,\n      name: createMessage(GENERAL_SETTINGS_SECTION_HEADER),\n      onClick: () => {\n        setSelectedTab({ type: AppSettingsTabs.General });\n      },\n      subText: createMessage(GENERAL_SETTINGS_SECTION_HEADER_DESC),\n    },\n    {\n      id: \"t--share-embed-settings\",\n      icon: \"share-line\",\n      isSelected: selectedTab.type === AppSettingsTabs.Embed,\n      name: createMessage(IN_APP_EMBED_SETTING.sectionHeader),\n      onClick: () => {\n        setSelectedTab({ type: AppSettingsTabs.Embed });\n      },\n      subText: createMessage(IN_APP_EMBED_SETTING.sectionHeaderDesc),\n    },\n    {\n      id: \"t--theme-settings-header\",\n      icon: \"edit-line\",\n      isSelected: selectedTab.type === AppSettingsTabs.Theme,\n      name: createMessage(THEME_SETTINGS_SECTION_HEADER),\n      onClick: () => {\n        setSelectedTab({ type: AppSettingsTabs.Theme });\n      },\n      subText: createMessage(THEME_SETTINGS_SECTION_HEADER_DESC),\n    },\n  ];\n\n  return (\n    <Wrapper className=\"flex flex-row\">\n      <div className=\"w-1/2\">\n        {SectionHeadersConfig.map((config) => (\n          <SectionHeader key={config.name} {...config} />\n        ))}\n        <div\n          className={`border-t-[1px] border-[color:var(--appsmith-color-black-300)]`}\n        />\n        <div className=\"font-medium px-4 py-[10px]\">\n          {PAGE_SETTINGS_SECTION_HEADER()}\n        </div>\n        <DraggablePageList\n          onPageSelect={(pageId: string) =>\n            setSelectedTab({\n              type: AppSettingsTabs.Page,\n              page: pages.find((page) => page.pageId === pageId),\n            })\n          }\n          pages={pages}\n          selectedPage={selectedTab.page?.pageId}\n        />\n      </div>\n      <SectionContent className=\"w-1/2\">\n        {(() => {\n          switch (selectedTab.type) {\n            case AppSettingsTabs.General:\n              return (\n                <div className=\"px-4\">\n                  <div className=\"pt-3 pb-2 font-medium text-[color:var(--appsmith-color-black-800)]\">\n                    {GENERAL_SETTINGS_SECTION_CONTENT_HEADER()}\n                  </div>\n                  <GeneralSettings />\n                </div>\n              );\n            case AppSettingsTabs.Theme:\n              return (\n                <>\n                  <div className=\"px-4\">\n                    <div className=\"pt-3 pb-2 font-medium text-[color:var(--appsmith-color-black-800)]\">\n                      {THEME_SETTINGS_SECTION_CONTENT_HEADER()}\n                    </div>\n                  </div>\n                  <ThemeContentWrapper>\n                    <ThemePropertyPane />\n                  </ThemeContentWrapper>\n                </>\n              );\n            case AppSettingsTabs.Page:\n              return (\n                selectedTab.page && (\n                  <div className=\"px-4\">\n                    <div className=\"pt-3 pb-2 font-medium text-[color:var(--appsmith-color-black-800)] text-ellipsis whitespace-nowrap overflow-hidden\">\n                      {selectedTab.page.pageName +\n                        \" \" +\n                        PAGE_SETTINGS_SECTION_CONTENT_HEADER()}\n                    </div>\n                    <PageSettings page={selectedTab.page} />\n                  </div>\n                )\n              );\n            case AppSettingsTabs.Embed:\n              return <EmbedSettings />;\n          }\n        })()}\n      </SectionContent>\n    </Wrapper>\n  );\n}\n\nexport default AppSettings;\n","import React, { ReactNode, useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport TreeDropdown, {\n  TreeDropdownOption,\n} from \"pages/Editor/Explorer/TreeDropdown\";\nimport { noop } from \"lodash\";\nimport ContextMenuTrigger from \"../ContextMenuTrigger\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { ContextMenuPopoverModifiers } from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport { initExplorerEntityNameEdit } from \"actions/explorerActions\";\nimport {\n  clonePageInit,\n  deletePage,\n  setPageAsDefault,\n  updatePage,\n} from \"actions/pageActions\";\nimport styled from \"styled-components\";\nimport { Icon } from \"@blueprintjs/core\";\nimport {\n  CONTEXT_EDIT_NAME,\n  CONTEXT_CLONE,\n  CONTEXT_SET_AS_HOME_PAGE,\n  CONTEXT_DELETE,\n  CONFIRM_CONTEXT_DELETE,\n  createMessage,\n  CONTEXT_SETTINGS,\n} from \"@appsmith/constants/messages\";\nimport { openAppSettingsPaneAction } from \"actions/appSettingsPaneActions\";\nimport { AppSettingsTabs } from \"pages/Editor/AppSettingsPane/AppSettings\";\nimport {\n  hasCreatePagePermission,\n  hasDeletePagePermission,\n  hasManagePagePermission,\n} from \"@appsmith/utils/permissionHelpers\";\nimport { getPageById } from \"selectors/editorSelectors\";\nimport { getCurrentApplication } from \"selectors/applicationSelectors\";\nimport { AppState } from \"@appsmith/reducers\";\n\nconst CustomLabel = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport function PageContextMenu(props: {\n  pageId: string;\n  name: string;\n  applicationId: string;\n  className?: string;\n  isDefaultPage: boolean;\n  isHidden: boolean;\n}) {\n  const dispatch = useDispatch();\n  const [confirmDelete, setConfirmDelete] = useState(false);\n\n  /**\n   * delete the page\n   *\n   * @return void\n   */\n  const deletePageCallback = useCallback((): void => {\n    dispatch(deletePage(props.pageId));\n    AnalyticsUtil.logEvent(\"DELETE_PAGE\", {\n      pageName: props.name,\n    });\n  }, [dispatch]);\n\n  /**\n   * sets the page as default\n   *\n   * @return void\n   */\n  const setPageAsDefaultCallback = useCallback((): void => {\n    dispatch(setPageAsDefault(props.pageId, props.applicationId));\n  }, [dispatch]);\n\n  /**\n   * edit the page name\n   *\n   * @return void\n   */\n  const editPageName = useCallback(\n    () => dispatch(initExplorerEntityNameEdit(props.pageId)),\n    [dispatch, props.pageId],\n  );\n\n  /**\n   * clone the page\n   *\n   * @return void\n   */\n  const clonePage = useCallback(() => dispatch(clonePageInit(props.pageId)), [\n    dispatch,\n    props.pageId,\n  ]);\n\n  /**\n   * sets the page hidden\n   *\n   * @return void\n   */\n  const setHiddenField = useCallback(\n    () =>\n      dispatch(\n        updatePage({\n          id: props.pageId,\n          name: props.name,\n          isHidden: !props.isHidden,\n        }),\n      ),\n    [dispatch, props.pageId, props.name, props.isHidden],\n  );\n\n  const openAppSettingsPane = () =>\n    dispatch(\n      openAppSettingsPaneAction({\n        type: AppSettingsTabs.Page,\n        pageId: props.pageId,\n      }),\n    );\n\n  const pagePermissions =\n    useSelector(getPageById(props.pageId))?.userPermissions || [];\n\n  const userAppPermissions = useSelector(\n    (state: AppState) => getCurrentApplication(state)?.userPermissions ?? [],\n  );\n\n  const canCreatePages = hasCreatePagePermission(userAppPermissions);\n\n  const canManagePages = hasManagePagePermission(pagePermissions);\n\n  const canDeletePages = hasDeletePagePermission(pagePermissions);\n\n  const optionsTree = [\n    canManagePages && {\n      value: \"rename\",\n      onSelect: editPageName,\n      label: createMessage(CONTEXT_EDIT_NAME),\n    },\n    canCreatePages &&\n      canManagePages && {\n        value: \"clone\",\n        onSelect: clonePage,\n        label: createMessage(CONTEXT_CLONE),\n      },\n    canManagePages && {\n      value: \"visibility\",\n      onSelect: setHiddenField,\n      // Possibly support ReactNode in TreeOption\n      label: ((\n        <CustomLabel>\n          {props.isHidden ? \"Show\" : \"Hide\"}\n          <Icon icon={props.isHidden ? \"eye-open\" : \"eye-off\"} iconSize={14} />\n        </CustomLabel>\n      ) as ReactNode) as string,\n    },\n    !props.isDefaultPage &&\n      canManagePages && {\n        value: \"setdefault\",\n        onSelect: setPageAsDefaultCallback,\n        label: createMessage(CONTEXT_SET_AS_HOME_PAGE),\n      },\n    props.isDefaultPage &&\n      canManagePages && {\n        className: \"!text-[color:var(--appsmith-color-black-500)]\",\n        disabled: true,\n        value: \"setdefault\",\n        label: createMessage(CONTEXT_SET_AS_HOME_PAGE),\n      },\n    {\n      value: \"settings\",\n      onSelect: openAppSettingsPane,\n      label: createMessage(CONTEXT_SETTINGS),\n    },\n    !props.isDefaultPage &&\n      canDeletePages && {\n        className: \"t--apiFormDeleteBtn single-select\",\n        confirmDelete: confirmDelete,\n        value: \"delete\",\n        onSelect: () => {\n          confirmDelete ? deletePageCallback() : setConfirmDelete(true);\n        },\n        label: confirmDelete\n          ? createMessage(CONFIRM_CONTEXT_DELETE)\n          : createMessage(CONTEXT_DELETE),\n        intent: \"danger\",\n      },\n  ].filter(Boolean);\n\n  return optionsTree?.length > 0 ? (\n    <TreeDropdown\n      className={props.className}\n      defaultText=\"\"\n      modifiers={ContextMenuPopoverModifiers}\n      onSelect={noop}\n      optionTree={optionsTree as TreeDropdownOption[]}\n      selectedValue=\"\"\n      setConfirmDelete={setConfirmDelete}\n      toggle={<ContextMenuTrigger className=\"t--context-menu\" />}\n    />\n  ) : null;\n}\n\nexport default PageContextMenu;\n","import React, { MutableRefObject } from \"react\";\n\nexport enum DIRECTION {\n  vertical,\n  horizontal,\n}\n\nexport interface CallbackResponseType {\n  height: number;\n  width: number;\n}\n\nfunction useResize(\n  ref: MutableRefObject<HTMLElement | null>,\n  direction: DIRECTION,\n  afterResizeCallback?: (data: CallbackResponseType) => void,\n) {\n  const [mouseDown, setMouseDown] = React.useState(false);\n\n  const pointer =\n    direction === DIRECTION.vertical ? \"cursor-ns-resize\" : \"cursor-ew-resize\";\n\n  const onMouseMove = (e: MouseEvent) => {\n    document.body.classList.add(pointer);\n    if (ref.current) {\n      // below lines stop selection of texts\n      if (e.stopPropagation) e.stopPropagation();\n      if (e.preventDefault) e.preventDefault();\n\n      const { bottom, left, right, top } = ref.current.getBoundingClientRect();\n\n      const currentMouseYPosition = e.clientY;\n      const currentMouseXPosition = e.clientX;\n\n      const distanceYDragged = currentMouseYPosition - bottom;\n      const distanceXDragged = currentMouseXPosition - right;\n\n      const currentHeight = bottom - top;\n      const currentWidth = right - left;\n\n      const newHeight = currentHeight + distanceYDragged;\n      const newWidth = currentWidth + distanceXDragged;\n\n      if (direction === DIRECTION.vertical) {\n        ref.current.style.height = newHeight + \"px\";\n      } else {\n        ref.current.style.width = newWidth + \"px\";\n      }\n\n      if (afterResizeCallback) {\n        afterResizeCallback({ height: newHeight, width: newWidth });\n      }\n    }\n  };\n\n  const onMouseUp = () => {\n    setMouseDown(false);\n    document.body.classList.remove(pointer);\n  };\n\n  React.useEffect(() => {\n    if (mouseDown) {\n      document.addEventListener(\"mousemove\", onMouseMove);\n      document.addEventListener(\"mouseup\", onMouseUp);\n    }\n\n    return () => {\n      document.removeEventListener(\"mousemove\", onMouseMove);\n      document.removeEventListener(\"mouseup\", onMouseUp);\n    };\n  }, [mouseDown]);\n\n  return { mouseDown, setMouseDown };\n}\n\nexport default useResize;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport FileAddIcon from \"remixicon-react/FileAddLineIcon\";\nimport Database2LineIcon from \"remixicon-react/Database2LineIcon\";\nimport Layout2LineIcon from \"remixicon-react/Layout2LineIcon\";\nimport { Popover2 } from \"@blueprintjs/popover2\";\nimport {\n  TooltipComponent as Tooltip,\n  Text,\n  TextType,\n  IconWrapper,\n  IconSize,\n} from \"design-system-old\";\nimport { EntityClassNames } from \"../Entity\";\nimport { TOOLTIP_HOVER_ON_DELAY } from \"constants/AppConstants\";\nimport { Position } from \"@blueprintjs/core\";\nimport EntityAddButton from \"../Entity/AddButton\";\nimport styled from \"styled-components\";\nimport history from \"utils/history\";\nimport { generateTemplateFormURL } from \"RouteBuilder\";\nimport { useParams } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ExplorerURLParams } from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport { showTemplatesModal } from \"actions/templateActions\";\nimport { Colors } from \"constants/Colors\";\nimport {\n  ADD_PAGE_FROM_TEMPLATE,\n  ADD_PAGE_TOOLTIP,\n  CANVAS_NEW_PAGE_CARD,\n  createMessage,\n  CREATE_PAGE,\n  GENERATE_PAGE_ACTION_TITLE,\n} from \"@appsmith/constants/messages\";\nimport HotKeys from \"../Files/SubmenuHotkeys\";\nimport { selectFeatureFlags } from \"selectors/usersSelectors\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\n\nconst MenuItem = styled.div<{ active: boolean }>`\n  display: flex;\n  gap: ${(props) => props.theme.spaces[3]}px;\n  height: 36px;\n  width: 250px;\n  align-items: center;\n  padding-left: ${(props) => props.theme.spaces[7]}px;\n  cursor: pointer;\n  ${(props) => props.active && `background-color: ${Colors.GREY_2};`}\n\n  &:hover {\n    background-color: ${Colors.GREY_2};\n  }\n`;\n\nconst Wrapper = styled.div`\n  .title {\n    display: flex;\n    padding: ${(props) =>\n      `${props.theme.spaces[4]}px ${props.theme.spaces[7]}px`};\n  }\n`;\n\ntype SubMenuProps = {\n  className: string;\n  openMenu: boolean;\n  onMenuClose: () => void;\n  createPageCallback: () => void;\n};\n\nfunction AddPageContextMenu({\n  className,\n  createPageCallback,\n  onMenuClose,\n  openMenu,\n}: SubMenuProps) {\n  const [show, setShow] = useState(openMenu);\n  const dispatch = useDispatch();\n  const { pageId } = useParams<ExplorerURLParams>();\n  const [activeItemIdx, setActiveItemIdx] = useState(0);\n  const featureFlags = useSelector(selectFeatureFlags);\n\n  const menuRef = useCallback(\n    (node) => {\n      if (node && show) {\n        node.focus();\n      }\n    },\n    [show],\n  );\n\n  const ContextMenuItems = useMemo(() => {\n    const items = [\n      {\n        title: createMessage(CREATE_PAGE),\n        icon: FileAddIcon,\n        onClick: createPageCallback,\n        \"data-cy\": \"add-page\",\n        key: \"CREATE_PAGE\",\n      },\n      {\n        title: createMessage(GENERATE_PAGE_ACTION_TITLE),\n        icon: Database2LineIcon,\n        onClick: () => history.push(generateTemplateFormURL({ pageId })),\n        \"data-cy\": \"generate-page\",\n        key: \"GENERATE_PAGE\",\n      },\n    ];\n\n    if (featureFlags.TEMPLATES_PHASE_2) {\n      items.push({\n        title: createMessage(ADD_PAGE_FROM_TEMPLATE),\n        icon: Layout2LineIcon,\n        onClick: () => dispatch(showTemplatesModal(true)),\n        \"data-cy\": \"add-page-from-template\",\n        key: \"ADD_PAGE_FROM_TEMPLATE\",\n      });\n    }\n\n    return items;\n  }, [featureFlags, pageId]);\n\n  const handleUpKey = useCallback(() => {\n    setActiveItemIdx((currentActiveIndex) => {\n      if (currentActiveIndex <= 0) return ContextMenuItems.length - 1;\n      return Math.max(currentActiveIndex - 1, 0);\n    });\n  }, []);\n\n  const handleDownKey = useCallback(() => {\n    setActiveItemIdx((currentActiveIndex) => {\n      if (currentActiveIndex >= ContextMenuItems.length - 1) return 0;\n      return Math.min(currentActiveIndex + 1, ContextMenuItems.length - 1);\n    });\n  }, []);\n\n  const handleSelect = () => {\n    const item = ContextMenuItems[activeItemIdx];\n    onMenuItemClick(item);\n  };\n\n  const onMenuItemClick = (item: typeof ContextMenuItems[number]) => {\n    setShow(false);\n    item.onClick();\n    AnalyticsUtil.logEvent(\"ENTITY_EXPLORER_ADD_PAGE_CLICK\", {\n      item: item.key,\n    });\n  };\n\n  return (\n    <Popover2\n      className=\"file-ops\"\n      content={\n        <HotKeys\n          handleDownKey={handleDownKey}\n          handleSubmitKey={handleSelect}\n          handleUpKey={handleUpKey}\n        >\n          <Wrapper ref={menuRef} tabIndex={0}>\n            <Text autofocus className=\"title\" type={TextType.H5}>\n              {createMessage(CANVAS_NEW_PAGE_CARD)}\n            </Text>\n            {ContextMenuItems.map((item, idx) => {\n              const MenuIcon = item.icon;\n\n              return (\n                <MenuItem\n                  active={idx === activeItemIdx}\n                  data-cy={item[\"data-cy\"]}\n                  key={item.title}\n                  onClick={() => onMenuItemClick(item)}\n                >\n                  <IconWrapper color={Colors.GRAY_700} size={IconSize.XXL}>\n                    <MenuIcon />\n                  </IconWrapper>\n                  <Text color={Colors.MIRAGE} type={TextType.P1}>\n                    {item.title}\n                  </Text>\n                </MenuItem>\n              );\n            })}\n          </Wrapper>\n        </HotKeys>\n      }\n      isOpen={show}\n      minimal\n      onClose={() => {\n        setShow(false);\n        onMenuClose();\n      }}\n      placement=\"right-start\"\n    >\n      <Tooltip\n        boundary=\"viewport\"\n        className={EntityClassNames.TOOLTIP}\n        content={createMessage(ADD_PAGE_TOOLTIP)}\n        disabled={show}\n        hoverOpenDelay={TOOLTIP_HOVER_ON_DELAY}\n        position={Position.RIGHT}\n      >\n        <EntityAddButton\n          className={`${className} ${show ? \"selected\" : \"\"}`}\n          onClick={() => setShow(true)}\n        />\n      </Tooltip>\n    </Popover2>\n  );\n}\n\nexport default AddPageContextMenu;\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCurrentApplication,\n  getCurrentApplicationId,\n  getCurrentPageId,\n} from \"selectors/editorSelectors\";\nimport Entity, { EntityClassNames } from \"../Entity\";\nimport history, { NavigationMethod } from \"utils/history\";\nimport { createPage, updatePage } from \"actions/pageActions\";\nimport {\n  currentPageIcon,\n  defaultPageIcon,\n  hiddenPageIcon,\n  pageIcon,\n} from \"../ExplorerIcons\";\nimport { ADD_PAGE_TOOLTIP, createMessage } from \"@appsmith/constants/messages\";\nimport { Page } from \"@appsmith/constants/ReduxActionConstants\";\nimport { getNextEntityName } from \"utils/AppsmithUtils\";\nimport { extractCurrentDSL } from \"utils/WidgetPropsUtils\";\nimport styled from \"styled-components\";\nimport PageContextMenu from \"./PageContextMenu\";\nimport { resolveAsSpaceChar } from \"utils/helpers\";\nimport { getExplorerPinned } from \"selectors/explorerSelector\";\nimport { setExplorerPinnedAction } from \"actions/explorerActions\";\nimport { selectAllPages } from \"selectors/entitiesSelector\";\nimport { builderURL } from \"RouteBuilder\";\nimport {\n  getExplorerStatus,\n  saveExplorerStatus,\n} from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport { tailwindLayers } from \"constants/Layers\";\nimport useResize, {\n  CallbackResponseType,\n  DIRECTION,\n} from \"utils/hooks/useResize\";\nimport AddPageContextMenu from \"./AddPageContextMenu\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { useLocation } from \"react-router\";\nimport { toggleInOnboardingWidgetSelection } from \"actions/onboardingActions\";\nimport {\n  hasCreatePagePermission,\n  hasManagePagePermission,\n} from \"@appsmith/utils/permissionHelpers\";\nimport { AppState } from \"@appsmith/reducers\";\n\nconst ENTITY_HEIGHT = 36;\nconst MIN_PAGES_HEIGHT = 60;\n\nconst StyledEntity = styled(Entity)<{ pagesSize?: number }>`\n  &.pages {\n    & > div:not(.t--entity-item) > div > div {\n      max-height: 40vh;\n      min-height: ${(props) =>\n        props.pagesSize && props.pagesSize > MIN_PAGES_HEIGHT\n          ? MIN_PAGES_HEIGHT\n          : props.pagesSize}px;\n      height: ${(props) =>\n        props.pagesSize && props.pagesSize > 128 ? 128 : props.pagesSize}px;\n      overflow-y: auto;\n    }\n  }\n\n  &.page .${EntityClassNames.PRE_RIGHT_ICON} {\n    width: 20px;\n    right: 0;\n  }\n\n  &.page:hover {\n    & .${EntityClassNames.PRE_RIGHT_ICON} {\n      display: none;\n    }\n  }\n`;\n\nconst RelativeContainer = styled.div`\n  position: relative;\n`;\n\nfunction Pages() {\n  const applicationId = useSelector(getCurrentApplicationId);\n  const pages: Page[] = useSelector(selectAllPages);\n  const currentPageId = useSelector(getCurrentPageId);\n  const pinned = useSelector(getExplorerPinned);\n  const dispatch = useDispatch();\n  const isPagesOpen = getExplorerStatus(applicationId, \"pages\");\n  const pageResizeRef = useRef<HTMLDivElement>(null);\n  const storedHeightKey = \"pagesContainerHeight_\" + applicationId;\n  const storedHeight = localStorage.getItem(storedHeightKey);\n  const location = useLocation();\n\n  const resizeAfterCallback = (data: CallbackResponseType) => {\n    localStorage.setItem(storedHeightKey, data.height.toString());\n  };\n\n  const { mouseDown, setMouseDown } = useResize(\n    pageResizeRef,\n    DIRECTION.vertical,\n    resizeAfterCallback,\n  );\n\n  useEffect(() => {\n    document.getElementsByClassName(\"activePage\")[0]?.scrollIntoView();\n  }, [currentPageId]);\n\n  useEffect(() => {\n    if ((isPagesOpen === null ? true : isPagesOpen) && pageResizeRef.current) {\n      pageResizeRef.current.style.height = storedHeight + \"px\";\n    }\n  }, [pageResizeRef]);\n\n  const switchPage = useCallback(\n    (page: Page) => {\n      const navigateToUrl = builderURL({\n        pageId: page.pageId,\n      });\n      AnalyticsUtil.logEvent(\"PAGE_NAME_CLICK\", {\n        name: page.pageName,\n        fromUrl: location.pathname,\n        type: \"PAGES\",\n        toUrl: navigateToUrl,\n      });\n      dispatch(toggleInOnboardingWidgetSelection(true));\n      history.push(navigateToUrl, {\n        invokedBy: NavigationMethod.EntityExplorer,\n      });\n    },\n    [location.pathname],\n  );\n\n  const [isMenuOpen, openMenu] = useState(false);\n\n  const createPageCallback = useCallback(() => {\n    const name = getNextEntityName(\n      \"Page\",\n      pages.map((page: Page) => page.pageName),\n    );\n    // Default layout is extracted by adding dynamically computed properties like min-height.\n    const defaultPageLayouts = [\n      { dsl: extractCurrentDSL(), layoutOnLoadActions: [] },\n    ];\n    dispatch(createPage(applicationId, name, defaultPageLayouts));\n  }, [dispatch, pages, applicationId]);\n\n  const onMenuClose = useCallback(() => openMenu(false), [openMenu]);\n\n  /**\n   * toggles the pinned state of sidebar\n   */\n  const onPin = useCallback(() => {\n    dispatch(setExplorerPinnedAction(!pinned));\n  }, [pinned, dispatch, setExplorerPinnedAction]);\n\n  const onPageToggle = useCallback(\n    (isOpen: boolean) => {\n      saveExplorerStatus(applicationId, \"pages\", isOpen);\n    },\n    [applicationId],\n  );\n\n  const userAppPermissions = useSelector(\n    (state: AppState) => getCurrentApplication(state)?.userPermissions ?? [],\n  );\n\n  const canCreatePages = hasCreatePagePermission(userAppPermissions);\n\n  const pageElements = useMemo(\n    () =>\n      pages.map((page) => {\n        const icon = page.isDefault ? defaultPageIcon : pageIcon;\n        const rightIcon = !!page.isHidden ? hiddenPageIcon : null;\n        const isCurrentPage = currentPageId === page.pageId;\n        const pagePermissions = page.userPermissions;\n        const canManagePages = hasManagePagePermission(pagePermissions);\n        const contextMenu = (\n          <PageContextMenu\n            applicationId={applicationId as string}\n            className={EntityClassNames.CONTEXT_MENU}\n            isDefaultPage={page.isDefault}\n            isHidden={!!page.isHidden}\n            key={page.pageId + \"_context-menu\"}\n            name={page.pageName}\n            pageId={page.pageId}\n          />\n        );\n\n        return (\n          <StyledEntity\n            action={() => switchPage(page)}\n            canEditEntityName={canManagePages}\n            className={`page ${isCurrentPage && \"activePage\"}`}\n            contextMenu={contextMenu}\n            entityId={page.pageId}\n            icon={icon}\n            isDefaultExpanded={isCurrentPage}\n            key={page.pageId}\n            name={page.pageName}\n            onNameEdit={resolveAsSpaceChar}\n            preRightIcon={isCurrentPage ? currentPageIcon : \"\"}\n            rightIcon={rightIcon}\n            searchKeyword={\"\"}\n            step={1}\n            updateEntityName={(id, name) =>\n              updatePage({ id, name, isHidden: !!page.isHidden })\n            }\n          />\n        );\n      }),\n    [pages, currentPageId, applicationId, location.pathname],\n  );\n\n  return (\n    <RelativeContainer>\n      <StyledEntity\n        addButtonHelptext={createMessage(ADD_PAGE_TOOLTIP)}\n        alwaysShowRightIcon\n        className=\"group pages\"\n        collapseRef={pageResizeRef}\n        customAddButton={\n          <AddPageContextMenu\n            className={`${EntityClassNames.ADD_BUTTON} group pages`}\n            createPageCallback={createPageCallback}\n            onMenuClose={onMenuClose}\n            openMenu={isMenuOpen}\n          />\n        }\n        entityId=\"Pages\"\n        icon={\"\"}\n        isDefaultExpanded={\n          isPagesOpen === null || isPagesOpen === undefined ? true : isPagesOpen\n        }\n        name=\"Pages\"\n        onClickPreRightIcon={onPin}\n        onToggle={onPageToggle}\n        pagesSize={ENTITY_HEIGHT * pages.length}\n        searchKeyword={\"\"}\n        showAddButton={canCreatePages}\n        step={0}\n      >\n        {pageElements}\n      </StyledEntity>\n      <div\n        className={`absolute -bottom-2 left-0 w-full h-2 group cursor-ns-resize ${tailwindLayers.resizer}`}\n        onMouseDown={() => setMouseDown(true)}\n      >\n        <div\n          className={`w-full h-1 bg-transparent hover:bg-gray-300 transform transition\n          ${mouseDown ? \"hover:bg-blue-500\" : \"\"}\n          `}\n        />\n      </div>\n    </RelativeContainer>\n  );\n}\n\nPages.displayName = \"Pages\";\n\nexport default React.memo(Pages);\n","import React, { memo, MutableRefObject, useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport HighlightedCode, {\n  SYNTAX_HIGHLIGHTING_SUPPORTED_LANGUAGES,\n} from \"components/editorComponents/HighlightedCode\";\nimport { Classes, Collapse } from \"@blueprintjs/core\";\nimport { CurrentValueViewer } from \"components/editorComponents/CodeEditor/EvaluatedValuePopup\";\nimport { EditorTheme } from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport useClipboard from \"utils/hooks/useClipboard\";\nimport { Colors } from \"constants/Colors\";\nimport { Skin } from \"constants/DefaultTheme\";\nimport { EntityClassNames } from \".\";\nimport { TooltipComponent } from \"design-system-old\";\nimport { COPY_ELEMENT, createMessage } from \"@appsmith/constants/messages\";\nimport { TOOLTIP_HOVER_ON_DELAY } from \"constants/AppConstants\";\nimport CollapseToggle from \"./CollapseToggle\";\nimport { ReactComponent as CopyIcon } from \"assets/icons/menu/copy-snippet.svg\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\n\nconst Wrapper = styled.div<{ step: number }>`\n  &&&& {\n    padding: ${(props) => props.theme.spaces[0]}px;\n\n    position: relative;\n    code {\n      border: none;\n      box-shadow: none;\n      padding: 5px 0em;\n      background: none;\n    }\n    & div.clipboard-message {\n      position: absolute;\n      left: 0;\n      height: 100%;\n      top: 0;\n      width: 100%;\n      font-size: 12px;\n      color: white;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      text-align: center;\n      z-index: 2;\n      &.success {\n        background: ${Colors.TUNDORA};\n      }\n      &.error {\n        background: ${Colors.RED};\n      }\n    }\n\n    & {\n      code.${SYNTAX_HIGHLIGHTING_SUPPORTED_LANGUAGES.APPSMITH} {\n        display: flex;\n        white-space: nowrap;\n        background: transparent;\n        font-size: 11px;\n        overflow-wrap: break-word;\n        text-shadow: none;\n        padding-left: ${(props) =>\n          props.step * props.theme.spaces[2] + props.theme.spaces[3]}px;\n        padding-right: 20px;\n        & span.token.property {\n          overflow: hidden;\n          white-space: nowrap;\n          text-overflow: ellipsis;\n          color: rgb(221, 74, 104) !important;\n        }\n      }\n    }\n\n    & .${Classes.POPOVER_WRAPPER} {\n      display: inline;\n      vertical-align: middle;\n      margin-left: 4px;\n      cursor: pointer;\n    }\n    & .${Classes.POPOVER_TARGET} {\n      display: inline;\n    }\n    .type-text {\n      font-size: 12px;\n      color: #716e6e;\n    }\n  }\n`;\n\nconst CopyBox = styled.div`\n  cursor: pointer;\n  position: relative;\n  padding: 0 8px;\n  .${Classes.POPOVER_WRAPPER} {\n    position: absolute;\n    opacity: 0;\n    z-index: 2;\n    right: 12px;\n    fill: ${Colors.TUNDORA};\n    &:hover {\n      opacity: 1;\n    }\n  }\n  &:hover {\n    &:before {\n      content: \"\";\n      background: ${Colors.Gallery};\n      opacity: 1;\n      position: absolute;\n      left: 0;\n      height: 100%;\n      top: 0;\n      width: 100%;\n      z-index: -1;\n    }\n    .${Classes.POPOVER_WRAPPER} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst StyledHighlightedCode = styled(HighlightedCode)`\n  padding-top: 4px;\n  padding-bottom: 4px;\n`;\n\nexport type EntityPropertyProps = {\n  propertyName: string;\n  entityName: string;\n  value: string;\n  step?: number;\n};\n\n/* eslint-disable react/display-name */\nexport const EntityProperty = memo((props: any) => {\n  const propertyRef: MutableRefObject<HTMLDivElement | null> = useRef(null);\n  const write = useClipboard(propertyRef);\n  // const popoverContentRef = React.createRef<HTMLDivElement>();\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const codeText = `{{${props.entityName}.${props.propertyName}}}`;\n\n  const isString = typeof props.value === \"string\";\n\n  const copyBindingToClipboard = () => {\n    AnalyticsUtil.logEvent(\"BINDING_COPIED\", {\n      entityType: props.entityType,\n      codeText,\n    });\n    write(codeText);\n  };\n\n  const toggleChildren = useCallback(\n    (e) => {\n      e.stopPropagation();\n      setIsOpen(!isOpen);\n    },\n    [isOpen],\n  );\n\n  return (\n    <Wrapper className={`${EntityClassNames.PROPERTY}`} step={props.step}>\n      <CopyBox>\n        <div className=\"flex flex-grow items-center\">\n          <CollapseToggle\n            className={`${EntityClassNames.COLLAPSE_TOGGLE}`}\n            disabled={false}\n            isOpen={isOpen}\n            isVisible\n            onClick={toggleChildren}\n          />\n          <StyledHighlightedCode\n            className=\"binding flex-1\"\n            codeText={codeText}\n            language={SYNTAX_HIGHLIGHTING_SUPPORTED_LANGUAGES.APPSMITH}\n            onClick={copyBindingToClipboard}\n            ref={propertyRef}\n            skin={Skin.LIGHT}\n          />\n          <TooltipComponent\n            boundary=\"viewport\"\n            content={createMessage(COPY_ELEMENT)}\n            hoverOpenDelay={TOOLTIP_HOVER_ON_DELAY}\n            position=\"right\"\n          >\n            <CopyIcon onClick={copyBindingToClipboard} />\n          </TooltipComponent>\n        </div>\n      </CopyBox>\n      <Collapse className=\"px-4\" isOpen={isOpen}>\n        {isString ? (\n          <span className=\"type-text\">{props.value}</span>\n        ) : (\n          <CurrentValueViewer\n            evaluatedValue={props.value}\n            hideLabel\n            theme={EditorTheme.LIGHT}\n          />\n        )}\n      </Collapse>\n    </Wrapper>\n  );\n});\n\nexport default EntityProperty;\n","import React, { useCallback, useEffect } from \"react\";\nimport EntityProperty from \"./EntityProperty\";\nimport { isFunction } from \"lodash\";\nimport {\n  entityDefinitions,\n  EntityDefinitionsOptions,\n  getPropsForJSActionEntity,\n} from \"@appsmith/utils/autocomplete/EntityDefinitions\";\nimport { ENTITY_TYPE } from \"entities/DataTree/dataTreeFactory\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PerformanceTracker, {\n  PerformanceTransactionName,\n} from \"utils/PerformanceTracker\";\nimport * as Sentry from \"@sentry/react\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { isEmpty } from \"lodash\";\nimport { getCurrentPageId } from \"selectors/editorSelectors\";\nimport classNames from \"classnames\";\nimport styled from \"styled-components\";\nimport { ControlIcons } from \"icons/ControlIcons\";\nimport { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport { JSCollectionData } from \"reducers/entityReducers/jsActionsReducer\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\n\nconst CloseIcon = ControlIcons.CLOSE_CONTROL;\n\nconst BindingContainerMaxHeight = 300;\nconst EntityHeight = 36;\nconst BottomBarHeight = 34;\n\nconst EntityInfoContainer = styled.div`\n  min-width: 220px;\n  max-width: 400px;\n  max-height: ${BindingContainerMaxHeight}px;\n  overflow-y: hidden;\n`;\n\nconst selectEntityInfo = (state: AppState) => state.ui.explorer.entityInfo;\n\nexport function EntityProperties() {\n  const ref = React.createRef<HTMLDivElement>();\n  const dispatch = useDispatch();\n  const { entityId, entityName, entityType, show } = useSelector(\n    selectEntityInfo,\n  );\n  const pageId = useSelector(getCurrentPageId) || \"\";\n  PerformanceTracker.startTracking(\n    PerformanceTransactionName.ENTITY_EXPLORER_ENTITY,\n  );\n  useEffect(() => {\n    PerformanceTracker.stopTracking(\n      PerformanceTransactionName.ENTITY_EXPLORER_ENTITY,\n    );\n  });\n  const widgetEntity = useSelector((state: AppState) => {\n    const pageWidgets = state.ui.pageWidgets[pageId];\n    if (pageWidgets) {\n      return pageWidgets[entityId];\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleOutsideClick);\n\n    return () => document.removeEventListener(\"click\", handleOutsideClick);\n  }, [show]);\n\n  useEffect(() => {\n    if (entityId) {\n      AnalyticsUtil.logEvent(\"SHOW_BINDINGS_TRIGGERED\", {\n        entityName,\n        entityType,\n      });\n    }\n  }, [entityId]);\n\n  const actionEntity = useSelector((state: AppState) =>\n    state.entities.actions.find((action) => action.config.id === entityId),\n  );\n\n  const jsActionEntity = useSelector((state: AppState) =>\n    state.entities.jsActions.find((js) => js.config.id === entityId),\n  );\n\n  const closeContainer = useCallback((e) => {\n    e.stopPropagation();\n    dispatch({\n      type: ReduxActionTypes.SET_ENTITY_INFO,\n      payload: { show: false },\n    });\n  }, []);\n\n  const handleOutsideClick = (e: MouseEvent) => {\n    const appBody = document.getElementById(\"app-body\") as HTMLElement;\n    const paths = e.composedPath();\n    if (\n      ref &&\n      ref.current &&\n      !paths?.includes(appBody) &&\n      !paths?.includes(ref.current)\n    )\n      closeContainer(e);\n  };\n\n  useEffect(() => {\n    const element = document.getElementById(`entity-${entityId}`);\n    const rect = element?.getBoundingClientRect();\n    if (ref.current && rect) {\n      const top = rect?.top;\n      let bottom;\n      if (\n        top + BindingContainerMaxHeight >\n        window.innerHeight - BottomBarHeight\n      ) {\n        bottom = window.innerHeight - rect?.bottom - EntityHeight;\n      }\n      if (bottom) {\n        ref.current.style.bottom = bottom + \"px\";\n        ref.current.style.top = \"unset\";\n      } else {\n        ref.current.style.top = top - EntityHeight + \"px\";\n        ref.current.style.bottom = \"unset\";\n      }\n      ref.current.style.left = (rect ? rect?.width ?? 0 : 0) + \"px\";\n    }\n  }, [entityId]);\n\n  const entity: any = widgetEntity || actionEntity || jsActionEntity;\n  let config: any;\n  let entityProperties: any = [];\n\n  if (!entity) return null;\n  switch (entityType) {\n    case ENTITY_TYPE.JSACTION:\n      const jsCollection = entity as JSCollectionData;\n      const properties = getPropsForJSActionEntity(jsCollection);\n      if (properties) {\n        entityProperties = Object.keys(properties).map(\n          (actionProperty: string) => {\n            const value = properties[actionProperty];\n            return {\n              propertyName: actionProperty,\n              entityName: jsCollection.config.name,\n              value: value,\n              entityType,\n            };\n          },\n        );\n      }\n      break;\n    case ENTITY_TYPE.ACTION:\n      config = (entityDefinitions.ACTION as any)(entity as any);\n      if (config) {\n        entityProperties = Object.keys(config)\n          .filter((k) => k.indexOf(\"!\") === -1)\n          .map((actionProperty: string) => {\n            let value = entity[actionProperty];\n            if (actionProperty === \"isLoading\") {\n              value = entity.isLoading;\n            }\n            if (actionProperty === \"run\") {\n              value = \"Function\";\n              actionProperty = actionProperty + \"()\";\n            }\n            if (actionProperty === \"clear\") {\n              value = \"Function\";\n              actionProperty = actionProperty + \"()\";\n            }\n            if (actionProperty === \"data\") {\n              if (isEmpty(entity.data) || !entity.data.hasOwnProperty(\"body\")) {\n                value = {};\n              } else {\n                value = entity.data.body;\n              }\n            }\n            return {\n              propertyName: actionProperty,\n              entityName: entityName,\n              value,\n              entityType,\n            };\n          });\n      }\n      break;\n    case ENTITY_TYPE.WIDGET:\n      const type: Exclude<\n        EntityDefinitionsOptions,\n        | \"CANVAS_WIDGET\"\n        | \"ICON_WIDGET\"\n        | \"SKELETON_WIDGET\"\n        | \"TABS_MIGRATOR_WIDGET\"\n      > = entity.type;\n      config = entityDefinitions[type];\n      if (!config) {\n        return null;\n      }\n\n      if (isFunction(config)) config = config(entity);\n\n      entityProperties = Object.keys(config)\n        .filter((k) => k.indexOf(\"!\") === -1)\n        .map((widgetProperty) => {\n          return {\n            propertyName: widgetProperty,\n            entityName: entity.widgetName,\n            value: entity[widgetProperty],\n            entityType,\n          };\n        });\n      break;\n  }\n  return (\n    <EntityInfoContainer\n      className={classNames({\n        \"absolute bp3-popover overflow-y-auto overflow-x-hidden bg-white pb-4 flex flex-col justify-center z-10 delay-150 transition-all\": true,\n        \"-left-100\": !show,\n      })}\n      ref={ref}\n    >\n      <div className=\"h-auto overflow-y-auto overflow-x-hidden relative\">\n        <div className=\"sticky top-0 text-sm px-3 bg-white z-5 pt-4 pb-1 font-medium flex flex-row items-center justify-between w-[100%]\">\n          BINDINGS\n          <CloseIcon\n            className=\"t--entity-property-close\"\n            color=\"black\"\n            height={18}\n            onClick={closeContainer}\n            width={18}\n          />\n        </div>\n        {entityProperties.map((entityProperty: any) => (\n          <EntityProperty\n            key={entityProperty.propertyName}\n            {...entityProperty}\n          />\n        ))}\n      </div>\n    </EntityInfoContainer>\n  );\n}\n\nexport default Sentry.withProfiler(EntityProperties);\n","import React, {\n  memo,\n  useEffect,\n  useRef,\n  useCallback,\n  useState,\n  useMemo,\n} from \"react\";\nimport classNames from \"classnames\";\nimport * as Sentry from \"@sentry/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport PerformanceTracker, {\n  PerformanceTransactionName,\n} from \"utils/PerformanceTracker\";\nimport {\n  getFirstTimeUserOnboardingComplete,\n  getIsFirstTimeUserOnboardingEnabled,\n} from \"selectors/onboardingSelectors\";\nimport Explorer from \"pages/Editor/Explorer\";\nimport { setExplorerActiveAction } from \"actions/explorerActions\";\nimport {\n  getExplorerActive,\n  getExplorerPinned,\n} from \"selectors/explorerSelector\";\nimport { tailwindLayers } from \"constants/Layers\";\nimport { TooltipComponent } from \"design-system-old\";\nimport { previewModeSelector } from \"selectors/editorSelectors\";\nimport useHorizontalResize from \"utils/hooks/useHorizontalResize\";\nimport OnboardingStatusbar from \"pages/Editor/FirstTimeUserOnboarding/Statusbar\";\nimport Pages from \"pages/Editor/Explorer/Pages\";\nimport { EntityProperties } from \"pages/Editor/Explorer/Entity/EntityProperties\";\nimport { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport { SIDEBAR_ID } from \"constants/Explorer\";\nimport { isMultiPaneActive } from \"selectors/multiPaneSelectors\";\n\ntype Props = {\n  width: number;\n  onWidthChange?: (width: number) => void;\n  onDragEnd?: () => void;\n};\n\nexport const EntityExplorerSidebar = memo((props: Props) => {\n  let tooltipTimeout: ReturnType<typeof setTimeout>;\n  const dispatch = useDispatch();\n  const active = useSelector(getExplorerActive);\n  const sidebarRef = useRef<HTMLDivElement>(null);\n  let pinned = useSelector(getExplorerPinned);\n  const isMultiPane = useSelector(isMultiPaneActive);\n  if (isMultiPane) pinned = false;\n  const isPreviewMode = useSelector(previewModeSelector);\n  const enableFirstTimeUserOnboarding = useSelector(\n    getIsFirstTimeUserOnboardingEnabled,\n  );\n  const resizer = useHorizontalResize(\n    sidebarRef,\n    props.onWidthChange,\n    props.onDragEnd,\n  );\n  const [tooltipIsOpen, setTooltipIsOpen] = useState(false);\n  const isFirstTimeUserOnboardingComplete = useSelector(\n    getFirstTimeUserOnboardingComplete,\n  );\n  PerformanceTracker.startTracking(PerformanceTransactionName.SIDE_BAR_MOUNT);\n  useEffect(() => {\n    PerformanceTracker.stopTracking();\n  });\n\n  // registering event listeners\n  useEffect(() => {\n    document.addEventListener(\"mousemove\", onMouseMove);\n\n    return () => {\n      document.removeEventListener(\"mousemove\", onMouseMove);\n    };\n  }, [active, pinned, resizer.resizing]);\n\n  /**\n   * passing the event to touch move on mouse move\n   *\n   * @param event\n   */\n  const onMouseMove = (event: MouseEvent) => {\n    const eventWithTouches = Object.assign({}, event, {\n      touches: [{ clientX: event.clientX, clientY: event.clientY }],\n    });\n    onTouchMove(eventWithTouches);\n  };\n\n  /**\n   * calculate the new width based on the pixel moved\n   *\n   * @param event\n   */\n  const onTouchMove = (\n    event:\n      | TouchEvent\n      | (MouseEvent & { touches: { clientX: number; clientY: number }[] }),\n  ) => {\n    const currentX = event.touches[0].clientX;\n\n    // only calculate the following in unpin mode\n    if (!pinned) {\n      if (active) {\n        // if user cursor is out of the entity explorer width ( with some extra window = 20px ), make the\n        // entity explorer inactive. Also, 20px here is to increase the window in which a user can drag the resizer\n        if (currentX >= props.width + 20 && !resizer.resizing) {\n          dispatch(setExplorerActiveAction(false));\n        }\n      } else {\n        // check if user cursor is at extreme left when the explorer is inactive, if yes, make the explorer active\n        if (currentX <= 20) {\n          dispatch(setExplorerActiveAction(true));\n        }\n      }\n    }\n  };\n\n  /**\n   * on hover of resizer, show tooltip\n   */\n  const onHoverResizer = useCallback(() => {\n    tooltipTimeout = setTimeout(() => {\n      setTooltipIsOpen(true);\n    }, 250);\n  }, [setTooltipIsOpen]);\n\n  /**\n   * on hover end of resizer, hide tooltip\n   */\n  const onHoverEndResizer = useCallback(() => {\n    clearTimeout(tooltipTimeout);\n    setTooltipIsOpen(false);\n  }, [setTooltipIsOpen]);\n\n  /**\n   * resizer left position\n   */\n  const resizerLeft = useMemo(() => {\n    return !pinned && !active ? 0 : props.width;\n  }, [pinned, active, props.width]);\n\n  useEffect(() => {\n    dispatch({\n      type: ReduxActionTypes.SET_ENTITY_INFO,\n      payload: { show: false },\n    });\n  }, [resizerLeft, pinned, isPreviewMode]);\n\n  return (\n    <div\n      className={classNames({\n        [`js-entity-explorer t--entity-explorer transform transition-all flex h-[inherit] duration-400 border-r border-gray-200 ${tailwindLayers.entityExplorer}`]: true,\n        relative: pinned && !isPreviewMode,\n        \"-translate-x-full\": (!pinned && !active) || isPreviewMode,\n        \"shadow-xl\": !pinned,\n        fixed: !pinned || isPreviewMode,\n      })}\n      id={SIDEBAR_ID}\n    >\n      {/* SIDEBAR */}\n      <div\n        className=\"flex flex-col p-0 bg-white t--sidebar min-w-52 max-w-96 group\"\n        ref={sidebarRef}\n        style={{ width: props.width }}\n      >\n        {(enableFirstTimeUserOnboarding ||\n          isFirstTimeUserOnboardingComplete) && <OnboardingStatusbar />}\n        {/* PagesContainer */}\n        <Pages />\n        {/* Popover that contains the bindings info */}\n        <EntityProperties />\n        {/* Contains entity explorer & widgets library along with a switcher*/}\n        <Explorer />\n      </div>\n      {/* RESIZER */}\n      <div\n        className={`absolute w-2 h-full -mr-1 ${tailwindLayers.resizer} group cursor-ew-resize`}\n        onMouseDown={resizer.onMouseDown}\n        onMouseEnter={onHoverResizer}\n        onMouseLeave={onHoverEndResizer}\n        onTouchEnd={resizer.onMouseUp}\n        onTouchStart={resizer.onTouchStart}\n        style={{\n          left: resizerLeft,\n          display: isPreviewMode ? \"none\" : \"initial\",\n        }}\n      >\n        <div\n          className={classNames({\n            \"w-1 h-full bg-transparent group-hover:bg-gray-300 transform transition flex items-center\": true,\n            \"bg-blue-500\": resizer.resizing,\n          })}\n        >\n          <TooltipComponent\n            content={\n              <div className=\"flex items-center justify-between\">\n                <span>Drag to resize</span>\n              </div>\n            }\n            hoverOpenDelay={200}\n            isOpen={tooltipIsOpen && !resizer.resizing}\n            position=\"right\"\n          >\n            <div />\n          </TooltipComponent>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nEntityExplorerSidebar.displayName = \"EntityExplorerSidebar\";\n\nexport default Sentry.withProfiler(EntityExplorerSidebar);\n","import React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Button,\n  Category,\n  FormGroup,\n  Icon,\n  IconSize,\n  MenuDivider,\n  Size,\n  Spinner,\n  Text,\n  TextInput,\n  TextType,\n  Toaster,\n  Variant,\n} from \"design-system-old\";\nimport {\n  createMessage,\n  customJSLibraryMessages,\n} from \"@appsmith/constants/messages\";\nimport ProfileImage from \"pages/common/ProfileImage\";\nimport { Colors } from \"constants/Colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  selectInstallationStatus,\n  selectInstalledLibraries,\n  selectIsInstallerOpen,\n  selectIsLibraryInstalled,\n  selectQueuedLibraries,\n  selectStatusForURL,\n} from \"selectors/entitiesSelector\";\nimport SaveSuccessIcon from \"remixicon-react/CheckboxCircleFillIcon\";\nimport { InstallState } from \"reducers/uiReducers/libraryReducer\";\nimport recommendedLibraries from \"pages/Editor/Explorer/Libraries/recommendedLibraries\";\nimport { AppState } from \"@appsmith/reducers\";\nimport {\n  clearInstalls,\n  installLibraryInit,\n  toggleInstaller,\n} from \"actions/JSLibraryActions\";\nimport classNames from \"classnames\";\nimport { TJSLibrary } from \"workers/common/JSLibrary\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\n\nconst openDoc = (e: React.MouseEvent, url: string) => {\n  e.preventDefault();\n  e.stopPropagation();\n  window.open(url, \"_blank\");\n};\n\nconst Wrapper = styled.div<{ left: number }>`\n  display: flex;\n  height: auto;\n  width: 400px;\n  max-height: 80vh;\n  flex-direction: column;\n  padding: 0 20px 4px 24px;\n  position: absolute;\n  background: white;\n  z-index: 25;\n  left: ${(props) => props.left}px;\n  bottom: 15px;\n  .installation-header {\n    padding: 20px 0 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    margin-bottom: 12px;\n  }\n  .search-body {\n    display: flex;\n    padding-right: 4px;\n    flex-direction: column;\n    .search-area {\n      margin-bottom: 16px;\n      .left-icon {\n        margin-left: 14px;\n        .cs-icon {\n          margin-right: 0;\n        }\n      }\n      .bp3-form-group {\n        margin: 0;\n        .remixicon-icon {\n          cursor: initial;\n        }\n      }\n      .bp3-label {\n        font-size: 12px;\n      }\n      display: flex;\n      flex-direction: column;\n      .search-bar {\n        margin-bottom: 8px;\n      }\n    }\n    .search-CTA {\n      margin-bottom: 16px;\n      display: flex;\n      flex-direction: column;\n    }\n    .search-results {\n      .library-card {\n        gap: 8px;\n        padding: 8px 0;\n        display: flex;\n        flex-direction: column;\n        gap: 0.5rem;\n        border-bottom: 1px solid var(--appsmith-color-black-100);\n        .description {\n          overflow: hidden;\n          text-overflow: ellipsis;\n          display: -webkit-box;\n          -webkit-line-clamp: 2;\n          font-size: 12px;\n          line-clamp: 2;\n          font-weight: 400;\n          -webkit-box-orient: vertical;\n        }\n        img {\n          cursor: initial;\n        }\n      }\n      .library-card.no-border {\n        border-bottom: none;\n      }\n    }\n  }\n`;\n\nconst InstallationProgressWrapper = styled.div<{ addBorder: boolean }>`\n  border-top: ${(props) =>\n    props.addBorder ? `1px solid var(--appsmith-color-black-300)` : \"none\"};\n  display: flex;\n  flex-direction: column;\n  background: var(--appsmith-color-black-50);\n  text-overflow: ellipsis;\n  padding: 8px 8px 12px;\n  .install-url {\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    line-clamp: 2;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    word-break: break-all;\n  }\n  .error-card.show {\n    display: flex;\n  }\n  .error-card {\n    display: none;\n    padding: 10px;\n    flex-direction: row;\n    background: #ffe9e9;\n    .unsupported {\n      line-height: 17px;\n      .header {\n        font-size: 13px;\n        font-weight: 600;\n        color: #393939;\n      }\n      .body {\n        font-size: 12px;\n        font-weight: 400;\n      }\n    }\n  }\n`;\n\nconst StatusIconWrapper = styled.div<{\n  addHoverState: boolean;\n}>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: initial;\n  .failed {\n    svg {\n      cursor: initial;\n    }\n  }}\n  ${(props) =>\n    props.addHoverState\n      ? `\n    &:hover {\n      cursor: pointer;\n      background: ${Colors.SHARK2} !important;\n      svg {\n        path {\n          fill: ${Colors.WHITE} !important;\n        }\n      }\n    }\n  `\n      : \"svg { cursor: initial }\"}\n`;\n\nfunction isValidJSFileURL(url: string) {\n  const JS_FILE_REGEX = /(?:https?):\\/\\/(\\w+:?\\w*)?(\\S+)(:\\d+)?(\\/|\\/([\\w#!:.?+=&%!\\-\\/]))?/;\n  return JS_FILE_REGEX.test(url);\n}\n\nfunction StatusIcon(props: {\n  status: InstallState;\n  isInstalled?: boolean;\n  action?: any;\n}) {\n  const { action, isInstalled = false, status } = props;\n  const actionProps = useMemo(() => (action ? { onClick: action } : {}), [\n    action,\n  ]);\n  if (status === InstallState.Success || isInstalled)\n    return (\n      <StatusIconWrapper addHoverState={false} className=\"installed\">\n        <SaveSuccessIcon color={Colors.GREEN} size={18} />\n      </StatusIconWrapper>\n    );\n  if (status === InstallState.Failed)\n    return (\n      <StatusIconWrapper addHoverState={false} className=\"failed\">\n        <Icon fillColor={Colors.GRAY} name=\"warning-line\" size={IconSize.XL} />\n      </StatusIconWrapper>\n    );\n  if (status === InstallState.Queued)\n    return (\n      <StatusIconWrapper addHoverState={false} className=\"queued\">\n        <Spinner />\n      </StatusIconWrapper>\n    );\n  return (\n    <StatusIconWrapper addHoverState className=\"t--download\" {...actionProps}>\n      <Icon fillColor={Colors.GRAY} name=\"download\" size={IconSize.XL} />\n    </StatusIconWrapper>\n  );\n}\n\nfunction ProgressTracker({\n  isFirst,\n  isLast,\n  status,\n  url,\n}: {\n  isFirst: boolean;\n  isLast: boolean;\n  status: InstallState;\n  url: string;\n}) {\n  return (\n    <InstallationProgressWrapper\n      addBorder={!isFirst}\n      className={classNames({\n        \"mb-2\": isLast,\n        hidden: status !== InstallState.Failed,\n      })}\n    >\n      <div className=\"flex flex-col gap-3\">\n        <div className=\"flex justify-between items-center gap-2 fw-500 text-sm\">\n          <div className=\"install-url text-sm font-medium\">{url}</div>\n          <div className=\"shrink-0\">\n            <StatusIcon status={status} />\n          </div>\n        </div>\n        <div\n          className={classNames({\n            \"gap-2 error-card items-start \": true,\n            show: status === InstallState.Failed,\n          })}\n        >\n          <Icon name=\"danger\" size={IconSize.XL} />\n          <div className=\"flex flex-col unsupported gap-1\">\n            <div className=\"header\">\n              {createMessage(customJSLibraryMessages.UNSUPPORTED_LIB)}\n            </div>\n            <div className=\"body\">\n              {createMessage(customJSLibraryMessages.UNSUPPORTED_LIB_DESC)}\n            </div>\n            <div className=\"footer text-xs font-medium gap-2 flex flex-row\">\n              <a onClick={(e) => openDoc(e, EXT_LINK.reportIssue)}>\n                {createMessage(customJSLibraryMessages.REPORT_ISSUE)}\n              </a>\n              <a onClick={(e) => openDoc(e, EXT_LINK.learnMore)}>\n                {createMessage(customJSLibraryMessages.LEARN_MORE)}\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </InstallationProgressWrapper>\n  );\n}\n\nfunction InstallationProgress() {\n  const installStatusMap = useSelector(selectInstallationStatus);\n  const urls = Object.keys(installStatusMap).filter(\n    (url) => !recommendedLibraries.find((lib) => lib.url === url),\n  );\n  if (urls.length === 0) return null;\n  return (\n    <div>\n      {urls.reverse().map((url, idx) => (\n        <ProgressTracker\n          isFirst={idx === 0}\n          isLast={idx === urls.length - 1}\n          key={`${url}_${idx}`}\n          status={installStatusMap[url]}\n          url={url}\n        />\n      ))}\n    </div>\n  );\n}\n\nconst SectionDivider = styled(MenuDivider)`\n  margin: 0 0 16px 0;\n`;\n\nconst EXT_LINK = {\n  learnMore:\n    \"https://docs.appsmith.com/core-concepts/writing-code/ext-libraries\",\n  reportIssue: \"https://github.com/appsmithorg/appsmith/issues/19037\",\n  jsDelivr: \"https://www.jsdelivr.com/\",\n};\n\nexport function Installer(props: { left: number }) {\n  const { left } = props;\n  const [URL, setURL] = useState(\"\");\n  const [isValid, setIsValid] = useState(true);\n  const dispatch = useDispatch();\n  const installedLibraries = useSelector(selectInstalledLibraries);\n  const queuedLibraries = useSelector(selectQueuedLibraries);\n  const isOpen = useSelector(selectIsInstallerOpen);\n  const installerRef = useRef<HTMLDivElement>(null);\n\n  const closeInstaller = useCallback(() => {\n    setURL(\"\");\n    dispatch(clearInstalls());\n    dispatch(toggleInstaller(false));\n  }, []);\n\n  const handleOutsideClick = useCallback((e: MouseEvent) => {\n    const paths = e.composedPath();\n    if (\n      installerRef &&\n      installerRef.current &&\n      !paths?.includes(installerRef.current)\n    )\n      closeInstaller();\n  }, []);\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, [isOpen]);\n\n  const updateURL = useCallback((value: string) => {\n    setURL(value);\n  }, []);\n\n  const validate = useCallback((text) => {\n    const isValid = !text || isValidJSFileURL(text);\n    setIsValid(isValid);\n    return {\n      isValid,\n      message: isValid ? \"\" : \"Please enter a valid URL\",\n    };\n  }, []);\n\n  useEffect(() => {\n    URL &&\n      AnalyticsUtil.logEvent(\"EDIT_LIBRARY_URL\", { url: URL, valid: isValid });\n  }, [URL, isValid]);\n\n  const installLibrary = useCallback(\n    (lib?: Partial<TJSLibrary>) => {\n      const url = lib?.url || URL;\n      const isQueued = queuedLibraries.find((libURL) => libURL === url);\n      if (isQueued) return;\n\n      const libInstalled = installedLibraries.find((lib) => lib.url === url);\n      if (libInstalled) {\n        Toaster.show({\n          text: createMessage(\n            customJSLibraryMessages.INSTALLED_ALREADY,\n            libInstalled.accessor[0] || \"\",\n          ),\n          variant: Variant.info,\n        });\n        return;\n      }\n      dispatch(\n        installLibraryInit({\n          url,\n          name: lib?.name,\n          version: lib?.version,\n        }),\n      );\n    },\n    [URL, installedLibraries, queuedLibraries],\n  );\n\n  return !isOpen ? null : (\n    <Wrapper className=\"bp3-popover\" left={left} ref={installerRef}>\n      <div className=\"installation-header\">\n        <Text type={TextType.H1} weight={\"bold\"}>\n          {createMessage(customJSLibraryMessages.ADD_JS_LIBRARY)}\n        </Text>\n        <Icon\n          className=\"t--close-installer\"\n          fillColor={Colors.GRAY}\n          name=\"close-modal\"\n          onClick={closeInstaller}\n          size={IconSize.XXL}\n        />\n      </div>\n      <div className=\"search-body overflow-auto\">\n        <div className=\"search-area t--library-container\">\n          <div className=\"flex flex-row gap-2 justify-between items-end\">\n            <FormGroup className=\"flex-1\" label={\"Library URL\"}>\n              <TextInput\n                $padding=\"12px\"\n                data-testid=\"library-url\"\n                height=\"30px\"\n                label={\"Library URL\"}\n                leftIcon=\"link-2\"\n                onChange={updateURL}\n                padding=\"12px\"\n                placeholder=\"https://cdn.jsdelivr.net/npm/example@1.1.1/example.min.js\"\n                validator={validate}\n                width=\"100%\"\n              />\n            </FormGroup>\n            <Button\n              category={Category.primary}\n              data-testid=\"install-library-btn\"\n              disabled={!(URL && isValid)}\n              icon=\"download\"\n              isLoading={queuedLibraries.length > 0}\n              onClick={() => installLibrary()}\n              size={Size.medium}\n              tag=\"button\"\n              text=\"INSTALL\"\n              type=\"button\"\n            />\n          </div>\n        </div>\n        <div className=\"search-CTA mb-3 text-xs\">\n          <span>\n            Explore libraries on{\" \"}\n            <a\n              className=\"text-primary-500\"\n              onClick={(e) => openDoc(e, EXT_LINK.jsDelivr)}\n            >\n              jsDelivr\n            </a>\n            {\". \"}\n            {createMessage(customJSLibraryMessages.LEARN_MORE_DESC)}{\" \"}\n            <a\n              className=\"text-primary-500\"\n              onClick={(e) => openDoc(e, EXT_LINK.learnMore)}\n            >\n              here\n            </a>\n            {\".\"}\n          </span>\n        </div>\n        <SectionDivider color=\"red\" />\n        <InstallationProgress />\n        <div className=\"pb-2 sticky top-0 z-2 bg-white\">\n          <Text type={TextType.P1} weight={\"600\"}>\n            {createMessage(customJSLibraryMessages.REC_LIBRARY)}\n          </Text>\n        </div>\n        <div className=\"search-results\">\n          {recommendedLibraries.map((lib, idx) => (\n            <LibraryCard\n              isLastCard={idx === recommendedLibraries.length - 1}\n              key={`${idx}_${lib.name}`}\n              lib={lib}\n              onClick={() => installLibrary(lib)}\n            />\n          ))}\n        </div>\n      </div>\n    </Wrapper>\n  );\n}\n\nfunction LibraryCard({\n  isLastCard,\n  lib,\n  onClick,\n}: {\n  lib: typeof recommendedLibraries[0];\n  onClick: (url: string) => void;\n  isLastCard: boolean;\n}) {\n  const status = useSelector(selectStatusForURL(lib.url));\n  const isInstalled = useSelector((state: AppState) =>\n    selectIsLibraryInstalled(state, lib.url),\n  );\n  return (\n    <div\n      className={classNames({\n        [`library-card t--${lib.name}`]: true,\n        \"no-border\": isLastCard,\n      })}\n    >\n      <div className=\"flex flex-row justify-between items-center\">\n        <div className=\"flex flex-row gap-2 items-center\">\n          <Text type={TextType.P0} weight=\"500\">\n            {lib.name}\n          </Text>\n          <StatusIconWrapper\n            addHoverState\n            onClick={(e) => openDoc(e, lib.docsURL)}\n          >\n            <Icon\n              fillColor={Colors.GRAY}\n              name=\"share-2\"\n              size={IconSize.SMALL}\n            />\n          </StatusIconWrapper>\n        </div>\n        <div className=\"mr-2\">\n          <StatusIcon\n            action={onClick}\n            isInstalled={isInstalled}\n            status={status}\n          />\n        </div>\n      </div>\n      <div className=\"flex flex-row description\">{lib.description}</div>\n      <div className=\"flex flex-row items-center gap-1\">\n        <ProfileImage size={20} source={lib.icon} />\n        <Text type={TextType.P3}>{lib.author}</Text>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { HotkeysTarget } from \"@blueprintjs/core/lib/esnext/components/hotkeys/hotkeysTarget.js\";\nimport { Hotkey, Hotkeys } from \"@blueprintjs/core\";\n\ntype Props = {\n  handleUpKey: () => void;\n  handleDownKey: () => void;\n  handleSubmitKey: () => void;\n  handleEscKey: () => void;\n  children: React.ReactNode;\n};\n@HotkeysTarget\nclass GlobalSearchHotKeys extends React.Component<Props> {\n  get hotKeysConfig() {\n    return [\n      {\n        combo: \"up\",\n        onKeyDown: () => {\n          this.props.handleUpKey();\n        },\n        allowInInput: true,\n        group: \"Branches\",\n        label: \"Move up the list\",\n      },\n      {\n        combo: \"down\",\n        onKeyDown: this.props.handleDownKey,\n        allowInInput: true,\n        group: \"Branches\",\n        label: \"Move down the list\",\n      },\n      {\n        combo: \"return\",\n        onKeyDown: this.props.handleSubmitKey,\n        allowInInput: true,\n        group: \"Branches\",\n        label: \"Submit\",\n      },\n      {\n        combo: \"ESC\",\n        onKeyDown: this.props.handleEscKey,\n        allowInInput: true,\n        group: \"Branches\",\n        label: \"ESC\",\n      },\n    ];\n  }\n\n  renderHotkeys() {\n    return (\n      <Hotkeys>\n        {this.hotKeysConfig.map(\n          ({ allowInInput, combo, group, label, onKeyDown }, index) => (\n            <Hotkey\n              allowInInput={allowInInput}\n              combo={combo}\n              global={false}\n              group={group}\n              key={index}\n              label={label}\n              onKeyDown={onKeyDown}\n            />\n          ),\n        )}\n      </Hotkeys>\n    );\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flex: 1,\n          flexDirection: \"column\",\n          minHeight: 0,\n          overflow: \"auto\",\n        }}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default GlobalSearchHotKeys;\n","import styled from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\nimport { Classes, getTypographyByKey } from \"design-system-old\";\n\nexport const BranchListItemContainer = styled.div<{\n  selected?: boolean;\n  active?: boolean;\n  isDefault?: boolean;\n}>`\n  padding: ${(props) =>\n    `${props.theme.spaces[5]}px ${props.theme.spaces[5]}px`};\n  margin: ${(props) => `${props.theme.spaces[1]} 0`};\n  ${getTypographyByKey(\"p1\")};\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${Colors.Gallery};\n  }\n\n  width: 100%;\n\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  background-color: ${(props) =>\n    props.selected || props.active ? Colors.GREY_3 : \"\"};\n\n  display: grid;\n  grid-gap: 16px;\n  grid-template-columns: 9fr 1fr;\n\n  & .bp3-popover-wrapper {\n    height: 22px;\n  }\n\n  .${Classes.TEXT} {\n    width: 0;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: block;\n  }\n\n  & .bp3-overlay .bp3-popover.bp3-minimal .cs-text {\n    width: fit-content;\n  }\n`;\n","import React from \"react\";\nimport { TooltipComponent as Tooltip } from \"design-system-old\";\nimport { isEllipsisActive } from \"utils/helpers\";\nimport { Text, TextType } from \"design-system-old\";\nimport { BranchListItemContainer } from \"./BranchListItemContainer\";\n\nexport function RemoteBranchListItem({ branch, className, onClick }: any) {\n  const textRef = React.useRef<HTMLSpanElement>(null);\n  return (\n    <BranchListItemContainer\n      active={false}\n      className={className}\n      data-testid=\"t--branch-list-item\"\n      isDefault={false}\n      onClick={onClick}\n      ref={null}\n      selected={false}\n    >\n      <Tooltip\n        boundary=\"window\"\n        content={branch}\n        disabled={!isEllipsisActive(textRef.current)}\n        position=\"top\"\n      >\n        <Text ref={textRef} type={TextType.P1}>\n          {branch}\n        </Text>\n      </Tooltip>\n    </BranchListItemContainer>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Category, Size } from \"design-system-old\";\n\nconst StyledButton = styled(Button)`\n  display: inline-block;\n  padding: 3px 7px;\n  position: absolute;\n  right: 16%;\n`;\n\nexport default function DefaultTag() {\n  return (\n    <StyledButton\n      category={Category.secondary}\n      data-testid=\"t--default-tag\"\n      disabled\n      size={Size.xxs}\n      text={\"DEFAULT\"}\n    />\n  );\n}\n","import styled from \"styled-components\";\nimport { MenuItem } from \"design-system-old\";\nimport { Colors } from \"constants/Colors\";\n\nconst DangerMenuItem = styled(MenuItem)`\n  &&,\n  && .cs-text {\n    color: ${Colors.DANGER_SOLID};\n  }\n\n  &&,\n  &&:hover {\n    svg,\n    svg path {\n      fill: ${Colors.DANGER_SOLID};\n    }\n  }\n`;\n\nexport default DangerMenuItem;\n","import React, { useState } from \"react\";\nimport { Colors } from \"constants/Colors\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { Icon, IconSize, Menu, Toaster, Variant } from \"design-system-old\";\nimport { deleteBranchInit } from \"actions/gitSyncActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  createMessage,\n  DELETE,\n  DELETE_BRANCH_WARNING_CHECKED_OUT,\n  DELETE_BRANCH_WARNING_DEFAULT,\n} from \"@appsmith/constants/messages\";\nimport DangerMenuItem from \"./DangerMenuItem\";\nimport { Dispatch } from \"redux\";\nimport { GitApplicationMetadata } from \"api/ApplicationApi\";\nimport { getCurrentAppGitMetaData } from \"selectors/applicationSelectors\";\n\ninterface Props {\n  branchName: string;\n}\n\nfunction DeleteButton(\n  branchToDelete: string,\n  gitMetaData: GitApplicationMetadata,\n  dispatch: Dispatch<any>,\n) {\n  const currentBranch = gitMetaData?.branchName || \"\";\n  const defaultBranchName = gitMetaData?.defaultBranchName || \"master\";\n\n  function saneDelete() {\n    if (defaultBranchName === branchToDelete) {\n      Toaster.show({\n        text: createMessage(DELETE_BRANCH_WARNING_DEFAULT, branchToDelete),\n        variant: Variant.danger,\n      });\n    } else if (currentBranch === branchToDelete) {\n      Toaster.show({\n        text: createMessage(DELETE_BRANCH_WARNING_CHECKED_OUT, branchToDelete),\n        variant: Variant.danger,\n      });\n    } else {\n      dispatch(deleteBranchInit({ branchToDelete: branchToDelete }));\n    }\n  }\n\n  return (\n    <DangerMenuItem\n      className=\"git-branch-more-menu-item danger t--branch-more-menu-delete\"\n      data-cy=\"t--branch-more-menu-delete\"\n      data-testid=\"t--branch-more-menu-delete\"\n      icon=\"delete\"\n      key={\"delete-branch-button\"}\n      onSelect={() => saneDelete()}\n      selected\n      text={createMessage(DELETE)}\n    />\n  );\n}\n\nfunction MenuButton(\n  setOpen: (value: ((prevState: boolean) => boolean) | boolean) => void,\n  open: boolean,\n) {\n  return (\n    <Icon\n      fillColor={Colors.DARK_GRAY}\n      hoverFillColor={Colors.GRAY_900}\n      name=\"more-2-fill\"\n      onClick={() => {\n        AnalyticsUtil.logEvent(\"GS_BRANCH_MORE_MENU_OPEN\", {\n          source: \"GS_OPEN_BRANCH_LIST_POPUP\",\n        });\n        setOpen(!open);\n      }}\n      size={IconSize.XXXXL}\n    />\n  );\n}\n\nexport default function BranchMoreMenu({ branchName }: Props) {\n  const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const buttons = [\n    DeleteButton(branchName, useSelector(getCurrentAppGitMetaData), dispatch),\n  ];\n  const menuButton = MenuButton(setOpen, open);\n\n  return (\n    <Menu\n      className=\"git-branch-more-menu\"\n      data-testid=\"t--git-branch-more-menu\"\n      dontUsePortal\n      isOpen={open}\n      menuItemWrapperWidth={\"fit-content\"}\n      position=\"bottom\"\n      target={menuButton}\n    >\n      {buttons}\n    </Menu>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport scrollIntoView from \"scroll-into-view-if-needed\";\nimport { BranchListItemContainer } from \"./BranchListItemContainer\";\nimport { TooltipComponent as Tooltip } from \"design-system-old\";\nimport { isEllipsisActive } from \"utils/helpers\";\nimport { Text, TextType } from \"design-system-old\";\nimport DefaultTag from \"./DefaultTag\";\nimport { useHover } from \"../hooks\";\nimport BranchMoreMenu from \"./BranchMoreMenu\";\n\nexport function BranchListItem({\n  active,\n  branch,\n  className,\n  isDefault,\n  onClick,\n  selected,\n  shouldScrollIntoView,\n}: any) {\n  const itemRef = React.useRef<HTMLDivElement>(null);\n  const textRef = React.useRef<HTMLSpanElement>(null);\n  const [hover] = useHover(itemRef);\n\n  useEffect(() => {\n    if (itemRef.current && shouldScrollIntoView) {\n      scrollIntoView(itemRef.current, {\n        scrollMode: \"if-needed\",\n        block: \"nearest\",\n        inline: \"nearest\",\n      });\n    }\n  }, [shouldScrollIntoView]);\n\n  return (\n    <BranchListItemContainer\n      active={active}\n      className={className}\n      data-testid=\"t--branch-list-item\"\n      isDefault={isDefault}\n      ref={itemRef}\n      selected={selected}\n    >\n      <Tooltip\n        boundary=\"window\"\n        content={branch}\n        disabled={!isEllipsisActive(textRef.current)}\n        position=\"top\"\n      >\n        <Text onClick={onClick} ref={textRef} type={TextType.P1}>\n          {branch}\n          {isDefault && <DefaultTag />}\n        </Text>\n      </Tooltip>\n      {hover && <BranchMoreMenu branchName={branch} />}\n    </BranchListItemContainer>\n  );\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { getTypographyByKey, TextInput } from \"design-system-old\";\nimport styled, { useTheme } from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  createNewBranchInit,\n  fetchBranchesInit,\n  switchGitBranchInit,\n} from \"actions/gitSyncActions\";\nimport {\n  getCurrentGitBranch,\n  getDefaultGitBranchName,\n  getFetchingBranches,\n  getGitBranches,\n  getGitBranchNames,\n} from \"selectors/gitSyncSelectors\";\n\nimport Skeleton from \"components/utils/Skeleton\";\n\nimport scrollIntoView from \"scroll-into-view-if-needed\";\n\nimport BranchListHotkeys from \"./BranchListHotkeys\";\nimport {\n  createMessage,\n  FIND_OR_CREATE_A_BRANCH,\n  SWITCH_BRANCHES,\n  SYNC_BRANCHES,\n} from \"@appsmith/constants/messages\";\nimport { Space } from \"./StyledComponents\";\nimport { Icon, IconSize, IconWrapper } from \"design-system-old\";\nimport { get } from \"lodash\";\nimport { Spinner, TooltipComponent as Tooltip } from \"design-system-old\";\nimport {\n  isLocalBranch,\n  isRemoteBranch,\n  removeSpecialChars,\n} from \"pages/Editor/gitSync/utils\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { useActiveHoverIndex, useFilteredBranches } from \"../hooks\";\nimport { BranchListItemContainer } from \"./BranchListItemContainer\";\nimport { RemoteBranchList } from \"./RemoteBranchList\";\nimport { LocalBranchList } from \"./LocalBranchList\";\nimport { Theme } from \"constants/DefaultTheme\";\n\nconst ListContainer = styled.div`\n  flex: 1;\n  overflow: auto;\n  width: 300px;\n  position: relative;\n`;\n\nconst BranchDropdownContainer = styled.div`\n  height: 40vh;\n  display: flex;\n  flex-direction: column;\n\n  & .title {\n    ${getTypographyByKey(\"p1\")};\n  }\n\n  padding: ${(props) => props.theme.spaces[5]}px;\n  min-height: 0;\n`;\n\n// used for skeletons\nconst textInputHeight = 38;\nconst textHeight = 18;\n\nconst CreateNewBranchContainer = styled.div`\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n\n  & ${IconWrapper} {\n    display: inline;\n  }\n\n  & div {\n    margin-left: ${(props) => props.theme.spaces[4]}px;\n    display: block;\n    word-break: break-all;\n  }\n\n  & .large-text {\n    ${getTypographyByKey(\"p1\")};\n    color: ${Colors.BLACK};\n  }\n\n  & .small-text {\n    ${getTypographyByKey(\"p3\")};\n    color: ${Colors.GREY_7};\n  }\n`;\n\nconst SpinnerContainer = styled.div`\n  align-self: center;\n  width: 12px;\n  position: absolute;\n  right: 16px;\n`;\n\nfunction CreateNewBranch({\n  branch,\n  className,\n  currentBranch,\n  hovered,\n  isCreatingNewBranch,\n  onClick,\n  shouldScrollIntoView,\n}: any) {\n  useEffect(() => {\n    if (itemRef.current && shouldScrollIntoView)\n      scrollIntoView(itemRef.current, {\n        scrollMode: \"if-needed\",\n        block: \"nearest\",\n        inline: \"nearest\",\n      });\n  }, [shouldScrollIntoView]);\n  const itemRef = React.useRef<HTMLDivElement>(null);\n  const theme = useTheme() as Theme;\n\n  return (\n    <div\n      onClick={onClick}\n      style={{\n        alignItems: \"flex-start\",\n        cursor: isCreatingNewBranch ? \"not-allowed\" : \"pointer\",\n        display: \"flex\",\n        background: hovered ? Colors.GREY_3 : \"unset\",\n        padding: get(theme, \"spaces[5]\"),\n      }}\n    >\n      <Icon\n        fillColor={get(theme, \"colors.gitSyncModal.closeIcon\")}\n        name=\"git-branch\"\n        size={IconSize.XXXL}\n      />\n      <CreateNewBranchContainer className={className} ref={itemRef}>\n        <div className=\"large-text\">{`Create branch: ${branch} `}</div>\n        <div className=\"small-text\">{`from '${currentBranch}'`}</div>\n      </CreateNewBranchContainer>\n      <SpinnerContainer>{isCreatingNewBranch && <Spinner />}</SpinnerContainer>\n    </div>\n  );\n}\n\nexport function LoadingRow() {\n  return (\n    <BranchListItemContainer>\n      <div style={{ height: textHeight, width: \"100%\" }}>\n        <Skeleton />\n      </div>\n    </BranchListItemContainer>\n  );\n}\n\nexport function BranchesLoading() {\n  return (\n    <>\n      <LoadingRow />\n      <LoadingRow />\n      <LoadingRow />\n    </>\n  );\n}\n\nexport function Header({\n  closePopup,\n  fetchBranches,\n}: {\n  closePopup: () => void;\n  fetchBranches: () => void;\n}) {\n  const title = createMessage(SWITCH_BRANCHES);\n  const theme = useTheme() as Theme;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-between\",\n      }}\n    >\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <span className=\"title\">{title}</span>\n        <span\n          style={{\n            display: \"inline-block\",\n            marginLeft: get(theme, \"spaces[1]\"),\n          }}\n        >\n          <Tooltip\n            content={createMessage(SYNC_BRANCHES)}\n            hoverOpenDelay={10}\n            modifiers={{\n              flip: { enabled: false },\n            }}\n            position=\"top\"\n          >\n            <Icon\n              className=\"t--sync-branches\"\n              fillColor={get(theme, \"colors.gitSyncModal.closeIcon\")}\n              hoverFillColor={Colors.BLACK}\n              name=\"refresh\"\n              onClick={fetchBranches}\n              size={IconSize.XXXL}\n            />\n          </Tooltip>\n        </span>\n      </div>\n      <Icon\n        className=\"t--close-branch-list\"\n        fillColor={get(theme, \"colors.gitSyncModal.closeIcon\")}\n        hoverFillColor={Colors.BLACK}\n        name=\"close-modal\"\n        onClick={closePopup}\n        size={IconSize.XXXXL}\n      />\n    </div>\n  );\n}\n\nexport default function BranchList(props: {\n  setIsPopupOpen?: (flag: boolean) => void;\n}) {\n  const dispatch = useDispatch();\n  const pruneAndFetchBranches = () => {\n    AnalyticsUtil.logEvent(\"GS_SYNC_BRANCHES\", {\n      source: \"BRANCH_LIST_POPUP_FROM_BOTTOM_BAR\",\n    });\n    dispatch(fetchBranchesInit({ pruneBranches: true }));\n  };\n\n  const branches = useSelector(getGitBranches);\n  const branchNames = useSelector(getGitBranchNames);\n  const currentBranch = useSelector(getCurrentGitBranch);\n  const fetchingBranches = useSelector(getFetchingBranches);\n  const defaultBranch = useSelector(getDefaultGitBranchName);\n\n  const [searchText, changeSearchTextInState] = useState(\"\");\n  const changeSearchText = (text: string) => {\n    changeSearchTextInState(removeSpecialChars(text));\n  };\n\n  const isCreateNewBranchInputValid = useMemo(\n    () =>\n      !!(\n        searchText &&\n        branchNames &&\n        !branchNames.find((branch: string) => branch === searchText)\n      ),\n    [searchText, branchNames],\n  );\n\n  const filteredBranches = useFilteredBranches(branches, searchText);\n\n  const localBranches = filteredBranches.filter((b: string) =>\n    isLocalBranch(b),\n  );\n  const remoteBranches = filteredBranches.filter((b: string) =>\n    isRemoteBranch(b),\n  );\n  const { activeHoverIndex, setActiveHoverIndex } = useActiveHoverIndex(\n    currentBranch,\n    filteredBranches,\n    isCreateNewBranchInputValid,\n  );\n\n  const [isCreatingNewBranch, setIsCreatingNewBranch] = useState(false);\n\n  const handleCreateNewBranch = () => {\n    if (isCreatingNewBranch) return;\n    AnalyticsUtil.logEvent(\"GS_CREATE_NEW_BRANCH\", {\n      source: \"BRANCH_LIST_POPUP_FROM_BOTTOM_BAR\",\n    });\n    const branch = searchText;\n    setIsCreatingNewBranch(true);\n    dispatch(\n      createNewBranchInit({\n        branch,\n        onErrorCallback: () => {\n          setIsCreatingNewBranch(false);\n        },\n        onSuccessCallback: () => {\n          setIsCreatingNewBranch(false);\n          if (typeof props.setIsPopupOpen === \"function\")\n            props.setIsPopupOpen(false);\n        },\n      }),\n    );\n  };\n\n  const switchBranch = (branch: string): void => {\n    AnalyticsUtil.logEvent(\"GS_SWITCH_BRANCH\", {\n      source: \"BRANCH_LIST_POPUP_FROM_BOTTOM_BAR\",\n    });\n    dispatch(switchGitBranchInit(branch));\n  };\n\n  const handleUpKey = () => setActiveHoverIndex(activeHoverIndex - 1);\n\n  const handleDownKey = () => setActiveHoverIndex(activeHoverIndex + 1);\n\n  const handleSubmitKey = () => {\n    if (isCreateNewBranchInputValid) {\n      handleCreateNewBranch();\n    } else {\n      switchBranch(filteredBranches[activeHoverIndex]);\n    }\n  };\n\n  const handleEscKey = () => {\n    if (typeof props.setIsPopupOpen === \"function\") props.setIsPopupOpen(false);\n  };\n\n  const remoteBranchList = RemoteBranchList(remoteBranches, switchBranch);\n  const localBranchList = LocalBranchList(\n    localBranches,\n    currentBranch,\n    isCreateNewBranchInputValid,\n    activeHoverIndex,\n    defaultBranch,\n    switchBranch,\n  );\n  return (\n    <BranchListHotkeys\n      handleDownKey={handleDownKey}\n      handleEscKey={handleEscKey}\n      handleSubmitKey={handleSubmitKey}\n      handleUpKey={handleUpKey}\n    >\n      <BranchDropdownContainer>\n        <Header\n          closePopup={() => {\n            if (typeof props.setIsPopupOpen === \"function\") {\n              props.setIsPopupOpen(false);\n            }\n          }}\n          fetchBranches={pruneAndFetchBranches}\n        />\n        <Space size={4} />\n        <div style={{ width: 300 }}>\n          {fetchingBranches && (\n            <div style={{ width: \"100%\", height: textInputHeight }}>\n              <Skeleton />\n            </div>\n          )}\n          {!fetchingBranches && (\n            <TextInput\n              autoFocus\n              className=\"branch-search t--branch-search-input\"\n              fill\n              onChange={changeSearchText}\n              placeholder={createMessage(FIND_OR_CREATE_A_BRANCH)}\n              value={searchText}\n            />\n          )}\n        </div>\n        {fetchingBranches && <BranchesLoading />}\n        {!fetchingBranches && (\n          <ListContainer>\n            {isCreateNewBranchInputValid && (\n              <CreateNewBranch\n                branch={searchText}\n                className=\"t--create-new-branch-button\"\n                currentBranch={currentBranch}\n                hovered={activeHoverIndex === 0}\n                isCreatingNewBranch={isCreatingNewBranch}\n                onClick={handleCreateNewBranch}\n                shouldScrollIntoView={activeHoverIndex === 0}\n              />\n            )}\n            {localBranchList}\n            {remoteBranchList}\n          </ListContainer>\n        )}\n      </BranchDropdownContainer>\n    </BranchListHotkeys>\n  );\n}\n","import { SegmentHeader } from \"design-system-old\";\nimport { RemoteBranchListItem } from \"./RemoteBranchListItem\";\nimport React from \"react\";\nimport { createMessage, REMOTE_BRANCHES } from \"@appsmith/constants/messages\";\n\n/**\n * RemoteBranchList: returns a list of remote branches\n * @param remoteBranches {string[]} array of remote branch names\n * @param switchBranch {(branch: string) => void} dispatches ReduxActionTypes.SWITCH_GIT_BRANCH_INIT\n */\nexport function RemoteBranchList(\n  remoteBranches: string[],\n  switchBranch: (branch: string) => void,\n) {\n  return (\n    <div data-testid=\"t--git-remote-branch-list-container\">\n      {remoteBranches?.length > 0 && (\n        <SegmentHeader\n          data-testid=\"t--branch-list-header-remote\"\n          title={createMessage(REMOTE_BRANCHES)}\n        />\n      )}\n      {remoteBranches.map((branch: string) => (\n        <RemoteBranchListItem\n          branch={branch}\n          key={branch}\n          onClick={() => switchBranch(branch)}\n        />\n      ))}\n    </div>\n  );\n}\n","import { SegmentHeader } from \"design-system-old\";\nimport { BranchListItem } from \"./BranchListItem\";\nimport { getIsActiveItem } from \"../utils\";\nimport React from \"react\";\nimport { createMessage, LOCAL_BRANCHES } from \"@appsmith/constants/messages\";\n\n/**\n * LocalBranchList: returns a list of local branches\n * @param localBranches {string[]} branches that don't start with origin/\n * @param currentBranch {string | undefined} current checked out branch in backend\n * @param isCreateNewBranchInputValid {boolean}\n * @param activeHoverIndex {number} used to figure out which list item is being selected\n * @param defaultBranch {string | undefined} this is used to put DEFAULT tag on \"master\" branch, which is the default branch name in the backend\n * @param switchBranch {(branch: string) => never} dispatches ReduxActionTypes.SWITCH_GIT_BRANCH_INIT\n */\nexport function LocalBranchList(\n  localBranches: string[],\n  currentBranch: string | undefined,\n  isCreateNewBranchInputValid: boolean,\n  activeHoverIndex: number,\n  defaultBranch: string | undefined,\n  switchBranch: (branch: string) => void,\n) {\n  return (\n    <div data-testid=\"t--git-local-branch-list-container\">\n      {localBranches?.length > 0 && (\n        <SegmentHeader\n          data-testid=\"t--branch-list-header-local\"\n          title={createMessage(LOCAL_BRANCHES)}\n        />\n      )}\n      {localBranches\n        .map((branch: string, index: number) => ({\n          branch,\n          isActive: getIsActiveItem(\n            isCreateNewBranchInputValid,\n            activeHoverIndex,\n            index,\n          ),\n        }))\n        .map(({ branch, isActive }) => (\n          <BranchListItem\n            active={currentBranch === branch}\n            branch={branch}\n            isDefault={branch === defaultBranch}\n            key={branch}\n            onClick={() => switchBranch(branch)}\n            selected={isActive}\n            shouldScrollIntoView={isActive}\n          />\n        ))}\n    </div>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { Popover2 } from \"@blueprintjs/popover2\";\nimport \"@blueprintjs/popover2/lib/css/blueprint-popover2.css\";\n\nimport { Colors } from \"constants/Colors\";\nimport { getCurrentAppGitMetaData } from \"selectors/applicationSelectors\";\nimport BranchList from \"../components/BranchList\";\nimport { fetchBranchesInit } from \"actions/gitSyncActions\";\nimport {\n  getTypographyByKey,\n  Icon,\n  IconSize,\n  TooltipComponent as Tooltip,\n} from \"design-system-old\";\nimport { isEllipsisActive } from \"utils/helpers\";\nimport { getGitStatus } from \"selectors/gitSyncSelectors\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n\n  & .label {\n    color: ${(props) => props.theme.colors.editorBottomBar.branchBtnText};\n    ${getTypographyByKey(\"p1\")};\n    line-height: 18px;\n  }\n\n  & .icon {\n    height: 24px;\n  }\n\n  margin: 0 ${(props) => props.theme.spaces[4]}px;\n  cursor: pointer;\n\n  &:hover svg path {\n    fill: ${Colors.CHARCOAL};\n  }\n\n  & .label {\n    width: 100px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n`;\n\nfunction BranchButton() {\n  const gitMetaData = useSelector(getCurrentAppGitMetaData);\n  const currentBranch = gitMetaData?.branchName;\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const fetchBranches = () => dispatch(fetchBranchesInit());\n  const labelTarget = useRef<HTMLDivElement>(null);\n  const status = useSelector(getGitStatus);\n\n  useEffect(() => {\n    fetchBranches();\n  }, []);\n\n  return (\n    <Popover2\n      content={<BranchList setIsPopupOpen={setIsOpen} />}\n      data-testid={\"t--git-branch-button-popover\"}\n      hasBackdrop\n      isOpen={isOpen}\n      minimal\n      modifiers={{ offset: { enabled: true, options: { offset: [7, 10] } } }}\n      onInteraction={(nextState: boolean) => {\n        setIsOpen(nextState);\n        if (nextState) {\n          AnalyticsUtil.logEvent(\"GS_OPEN_BRANCH_LIST_POPUP\", {\n            source: \"BOTTOM_BAR_ACTIVE_BRANCH_NAME\",\n          });\n        }\n      }}\n      placement=\"top-start\"\n    >\n      <Tooltip\n        boundary=\"window\"\n        content={currentBranch || \"\"}\n        disabled={!isEllipsisActive(labelTarget.current)}\n        hoverOpenDelay={1}\n        position=\"top-left\"\n      >\n        <ButtonContainer\n          className=\"t--branch-button\"\n          data-testid={\"t--branch-button-container\"}\n        >\n          <div className=\"icon\">\n            <Icon name=\"git-branch\" size={IconSize.XXXXL} />\n          </div>\n          <div\n            className=\"label\"\n            data-testid={\"t--branch-button-currentBranch\"}\n            ref={labelTarget}\n          >\n            {currentBranch}\n            {!status?.isClean && \"*\"}\n          </div>\n        </ButtonContainer>\n      </Tooltip>\n    </Popover2>\n  );\n}\n\nexport default BranchButton;\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgGitCommitLine(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#A9A7A7\",\n    d: \"M15.874 13.0019C15.6516 13.8601 15.1504 14.6202 14.4493 15.1628C13.7481 15.7054 12.8866 15.9998 12 15.9998C11.1134 15.9998 10.2519 15.7054 9.55074 15.1628C8.84957 14.6202 8.34844 13.8601 8.126 13.0019H3V11.0019H8.126C8.34844 10.1436 8.84957 9.38353 9.55074 8.84092C10.2519 8.29832 11.1134 8.00391 12 8.00391C12.8866 8.00391 13.7481 8.29832 14.4493 8.84092C15.1504 9.38353 15.6516 10.1436 15.874 11.0019H21V13.0019H15.874ZM12 14.0019C12.5304 14.0019 13.0391 13.7911 13.4142 13.4161C13.7893 13.041 14 12.5323 14 12.0019C14 11.4714 13.7893 10.9627 13.4142 10.5876C13.0391 10.2126 12.5304 10.0019 12 10.0019C11.4696 10.0019 10.9609 10.2126 10.5858 10.5876C10.2107 10.9627 10 11.4714 10 12.0019C10 12.5323 10.2107 13.041 10.5858 13.4161C10.9609 13.7911 11.4696 14.0019 12 14.0019Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGitCommitLine);\nexport default __webpack_public_path__ + \"static/media/git-commit-line.2118a25f1ecbf354f226565e52b50a45.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport BranchButton from \"./BranchButton\";\n\nimport {\n  CANNOT_PULL_WITH_LOCAL_UNCOMMITTED_CHANGES,\n  COMING_SOON,\n  COMMIT_CHANGES,\n  CONFLICTS_FOUND,\n  CONNECT_GIT,\n  CONNECT_GIT_BETA,\n  CONNECTING_TO_REPO_DISABLED,\n  createMessage,\n  DURING_ONBOARDING_TOUR,\n  GIT_SETTINGS,\n  MERGE,\n  NO_COMMITS_TO_PULL,\n  NOT_LIVE_FOR_YOU_YET,\n  PULL_CHANGES,\n} from \"@appsmith/constants/messages\";\n\nimport { Colors } from \"constants/Colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ReactComponent as GitCommitLine } from \"assets/icons/ads/git-commit-line.svg\";\nimport {\n  gitPullInit,\n  setIsGitSyncModalOpen,\n  showConnectGitModal,\n} from \"actions/gitSyncActions\";\nimport { GitSyncModalTab } from \"entities/GitSync\";\nimport {\n  getCountOfChangesToCommit,\n  getGitStatus,\n  getIsFetchingGitStatus,\n  getIsGitConnected,\n  getPullFailed,\n  getPullInProgress,\n} from \"selectors/gitSyncSelectors\";\nimport SpinnerLoader from \"pages/common/SpinnerLoader\";\nimport { inGuidedTour } from \"selectors/onboardingSelectors\";\nimport {\n  Button,\n  Category,\n  getTypographyByKey,\n  Icon,\n  IconName,\n  IconSize,\n  Size,\n  TooltipComponent as Tooltip,\n} from \"design-system-old\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\n\ntype QuickActionButtonProps = {\n  className?: string;\n  count?: number;\n  disabled?: boolean;\n  icon: IconName;\n  loading?: boolean;\n  onClick: () => void;\n  tooltipText: string;\n};\n\nconst QuickActionButtonContainer = styled.div<{ disabled?: boolean }>`\n  padding: ${(props) => props.theme.spaces[1]}px\n    ${(props) => props.theme.spaces[2]}px;\n  margin: 0 ${(props) => props.theme.spaces[2]}px;\n  cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n\n  &:hover {\n    background-color: ${(props) =>\n      props.theme.colors.editorBottomBar.buttonBackgroundHover};\n  }\n\n  position: relative;\n  overflow: visible;\n\n  .count {\n    position: absolute;\n    height: ${(props) => props.theme.spaces[7]}px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: ${Colors.WHITE};\n    background-color: ${Colors.BLACK};\n    top: ${(props) => -1 * props.theme.spaces[3]}px;\n    left: ${(props) => props.theme.spaces[8]}px;\n    border-radius: ${(props) => props.theme.spaces[3]}px;\n    ${getTypographyByKey(\"p3\")};\n    z-index: 1;\n    padding: ${(props) => props.theme.spaces[1]}px\n      ${(props) => props.theme.spaces[2]}px;\n  }\n`;\n\nconst capitalizeFirstLetter = (string = \" \") => {\n  return string.charAt(0).toUpperCase() + string.toLowerCase().slice(1);\n};\n\nfunction QuickActionButton({\n  className = \"\",\n  count = 0,\n  disabled = false,\n  icon,\n  loading,\n  onClick,\n  tooltipText,\n}: QuickActionButtonProps) {\n  const content = capitalizeFirstLetter(tooltipText);\n\n  return (\n    <Tooltip content={content} hoverOpenDelay={10}>\n      <QuickActionButtonContainer\n        className={className}\n        disabled={disabled}\n        onClick={onClick}\n      >\n        {loading ? (\n          <div className=\"t--loader-quick-git-action\">\n            <SpinnerLoader height=\"16px\" width=\"16px\" />\n          </div>\n        ) : (\n          <div>\n            <Icon name={icon} size={IconSize.XL} />\n            {count > 0 && <span className=\"count\">{count}</span>}\n          </div>\n        )}\n      </QuickActionButtonContainer>\n    </Tooltip>\n  );\n}\n\nconst getPullBtnStatus = (gitStatus: any, pullFailed: boolean) => {\n  const { behindCount, isClean } = gitStatus || {};\n  let message = createMessage(NO_COMMITS_TO_PULL);\n  let disabled = behindCount === 0;\n  if (!isClean) {\n    disabled = true;\n    message = createMessage(CANNOT_PULL_WITH_LOCAL_UNCOMMITTED_CHANGES);\n  } else if (pullFailed) {\n    message = createMessage(CONFLICTS_FOUND);\n  } else if (behindCount > 0) {\n    message = createMessage(PULL_CHANGES);\n  }\n\n  return {\n    disabled,\n    message,\n  };\n};\n\nconst getQuickActionButtons = ({\n  changesToCommit,\n  commit,\n  connect,\n  gitStatus,\n  isFetchingGitStatus,\n  merge,\n  pull,\n  pullDisabled,\n  pullTooltipMessage,\n  showPullLoadingState,\n}: {\n  changesToCommit: number;\n  commit: () => void;\n  connect: () => void;\n  pull: () => void;\n  merge: () => void;\n  gitStatus: any;\n  isFetchingGitStatus: boolean;\n  pullDisabled: boolean;\n  pullTooltipMessage: string;\n  showPullLoadingState: boolean;\n}) => {\n  return [\n    {\n      className: \"t--bottom-bar-commit\",\n      count: changesToCommit,\n      icon: \"plus\" as IconName,\n      loading: isFetchingGitStatus,\n      onClick: commit,\n      tooltipText: createMessage(COMMIT_CHANGES),\n    },\n    {\n      className: \"t--bottom-bar-pull\",\n      count: gitStatus?.behindCount,\n      icon: \"down-arrow-2\" as IconName,\n      onClick: () => !pullDisabled && pull(),\n      tooltipText: pullTooltipMessage,\n      disabled: pullDisabled,\n      loading: showPullLoadingState,\n    },\n    {\n      className: \"t--bottom-bar-merge\",\n      icon: \"fork\" as IconName,\n      onClick: merge,\n      tooltipText: createMessage(MERGE),\n    },\n    {\n      icon: \"settings-2-line\" as IconName,\n      onClick: connect,\n      tooltipText: createMessage(GIT_SETTINGS),\n    },\n  ];\n};\n\nconst Container = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledIcon = styled(GitCommitLine)`\n  cursor: default;\n\n  & path {\n    fill: ${Colors.DARK_GRAY};\n  }\n\n  margin-right: ${(props) => props.theme.spaces[3]}px;\n`;\n\nconst PlaceholderButton = styled.div`\n  padding: ${(props) =>\n    `${props.theme.spaces[1]}px ${props.theme.spaces[3]}px`};\n  border: solid 1px ${Colors.MERCURY};\n  ${getTypographyByKey(\"btnSmall\")};\n  text-transform: uppercase;\n  background-color: ${Colors.ALABASTER_ALT};\n  color: ${Colors.GRAY};\n`;\n\nfunction ConnectGitPlaceholder() {\n  const dispatch = useDispatch();\n  const isInGuidedTour = useSelector(inGuidedTour);\n\n  const isTooltipEnabled = isInGuidedTour;\n  const tooltipContent = !isInGuidedTour ? (\n    <>\n      <div>{createMessage(NOT_LIVE_FOR_YOU_YET)}</div>\n      <div>{createMessage(COMING_SOON)}</div>\n    </>\n  ) : (\n    <>\n      <div>{createMessage(CONNECTING_TO_REPO_DISABLED)}</div>\n      <div>{createMessage(DURING_ONBOARDING_TOUR)}</div>\n    </>\n  );\n  const isGitConnectionEnabled = !isInGuidedTour;\n\n  return (\n    <Container>\n      <Tooltip\n        autoFocus={false}\n        content={tooltipContent}\n        disabled={!isTooltipEnabled}\n        modifiers={{\n          preventOverflow: { enabled: true },\n        }}\n        openOnTargetFocus={false}\n      >\n        <Container style={{ marginLeft: 0, cursor: \"pointer\" }}>\n          <StyledIcon />\n          {isGitConnectionEnabled ? (\n            <Button\n              category={Category.secondary}\n              className=\"t--connect-git-bottom-bar\"\n              onClick={() => {\n                AnalyticsUtil.logEvent(\"GS_CONNECT_GIT_CLICK\", {\n                  source: \"BOTTOM_BAR_GIT_CONNECT_BUTTON\",\n                });\n\n                dispatch(showConnectGitModal());\n              }}\n              size={Size.small}\n              text={createMessage(CONNECT_GIT_BETA)}\n            />\n          ) : (\n            <PlaceholderButton className=\"t--disabled-connect-git-bottom-bar\">\n              {createMessage(CONNECT_GIT)}\n            </PlaceholderButton>\n          )}\n        </Container>\n      </Tooltip>\n    </Container>\n  );\n}\n\nexport default function QuickGitActions() {\n  const isGitConnected = useSelector(getIsGitConnected);\n  const dispatch = useDispatch();\n  const gitStatus = useSelector(getGitStatus);\n  const pullFailed = useSelector(getPullFailed);\n\n  const {\n    disabled: pullDisabled,\n    message: pullTooltipMessage,\n  } = getPullBtnStatus(gitStatus, !!pullFailed);\n\n  const isPullInProgress = useSelector(getPullInProgress);\n  const isFetchingGitStatus = useSelector(getIsFetchingGitStatus);\n  const showPullLoadingState = isPullInProgress || isFetchingGitStatus;\n  const changesToCommit = useSelector(getCountOfChangesToCommit);\n\n  const quickActionButtons = getQuickActionButtons({\n    commit: () => {\n      dispatch(\n        setIsGitSyncModalOpen({\n          isOpen: true,\n          tab: GitSyncModalTab.DEPLOY,\n        }),\n      );\n      AnalyticsUtil.logEvent(\"GS_DEPLOY_GIT_MODAL_TRIGGERED\", {\n        source: \"BOTTOM_BAR_GIT_COMMIT_BUTTON\",\n      });\n    },\n    connect: () => {\n      dispatch(\n        setIsGitSyncModalOpen({\n          isOpen: true,\n          tab: GitSyncModalTab.GIT_CONNECTION,\n        }),\n      );\n      AnalyticsUtil.logEvent(\"GS_SETTING_CLICK\", {\n        source: \"BOTTOM_BAR_GIT_SETTING_BUTTON\",\n      });\n    },\n    pull: () => {\n      AnalyticsUtil.logEvent(\"GS_PULL_GIT_CLICK\", {\n        source: \"BOTTOM_BAR_GIT_PULL_BUTTON\",\n      });\n      dispatch(gitPullInit({ triggeredFromBottomBar: true }));\n    },\n    merge: () => {\n      AnalyticsUtil.logEvent(\"GS_MERGE_GIT_MODAL_TRIGGERED\", {\n        source: \"BOTTOM_BAR_GIT_MERGE_BUTTON\",\n      });\n      dispatch(\n        setIsGitSyncModalOpen({\n          isOpen: true,\n          tab: GitSyncModalTab.MERGE,\n        }),\n      );\n    },\n    gitStatus,\n    isFetchingGitStatus,\n    pullDisabled,\n    pullTooltipMessage,\n    showPullLoadingState,\n    changesToCommit,\n  });\n  return isGitConnected ? (\n    <Container>\n      <BranchButton />\n      {quickActionButtons.map((button) => (\n        <QuickActionButton key={button.tooltipText} {...button} />\n      ))}\n    </Container>\n  ) : (\n    <ConnectGitPlaceholder />\n  );\n}\n","import React, { RefObject, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Icon, IconSize } from \"design-system-old\";\nimport DebuggerLogs from \"./DebuggerLogs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  setCanvasDebuggerSelectedTab,\n  showDebugger,\n} from \"actions/debuggerActions\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport Errors from \"./Errors\";\nimport Resizer, { ResizerCSS } from \"./Resizer\";\nimport EntityDeps from \"./EntityDependecies\";\nimport {\n  createMessage,\n  DEBUGGER_ERRORS,\n  DEBUGGER_LOGS,\n  INSPECT_ENTITY,\n} from \"@appsmith/constants/messages\";\nimport { stopEventPropagation } from \"utils/AppsmithUtils\";\nimport { DEBUGGER_TAB_KEYS } from \"./helpers\";\nimport { Colors } from \"constants/Colors\";\nimport EntityBottomTabs from \"../EntityBottomTabs\";\nimport { getSelectedCanvasDebuggerTab } from \"selectors/editorContextSelectors\";\nimport { ActionExecutionResizerHeight } from \"pages/Editor/APIEditor/constants\";\n\nconst TABS_HEADER_HEIGHT = 36;\n\nconst Container = styled.div`\n  ${ResizerCSS}\n  position: absolute;\n  bottom: 0;\n  height: ${ActionExecutionResizerHeight}px;\n  min-height: ${TABS_HEADER_HEIGHT}px;\n  background-color: ${(props) => props.theme.colors.debugger.background};\n  border-top: 1px solid ${Colors.ALTO};\n\n  ul.react-tabs__tab-list {\n    padding: 0px ${(props) => props.theme.spaces[12]}px;\n  }\n  .react-tabs__tab-panel {\n    height: calc(100% - ${TABS_HEADER_HEIGHT}px);\n  }\n\n  .close-debugger {\n    position: absolute;\n    top: 0px;\n    right: 0px;\n    padding: 9px 11px;\n  }\n`;\n\nconst DEBUGGER_TABS = [\n  {\n    key: DEBUGGER_TAB_KEYS.ERROR_TAB,\n    title: createMessage(DEBUGGER_ERRORS),\n    panelComponent: <Errors hasShortCut />,\n  },\n  {\n    key: DEBUGGER_TAB_KEYS.LOGS_TAB,\n    title: createMessage(DEBUGGER_LOGS),\n    panelComponent: <DebuggerLogs hasShortCut />,\n  },\n  {\n    key: DEBUGGER_TAB_KEYS.INSPECT_TAB,\n    title: createMessage(INSPECT_ENTITY),\n    panelComponent: <EntityDeps />,\n  },\n];\n\nfunction DebuggerTabs() {\n  const dispatch = useDispatch();\n  const panelRef: RefObject<HTMLDivElement> = useRef(null);\n  const selectedTab = useSelector(getSelectedCanvasDebuggerTab);\n  const setSelectedTab = (tabKey: string) => {\n    if (tabKey === DEBUGGER_TAB_KEYS.ERROR_TAB) {\n      AnalyticsUtil.logEvent(\"OPEN_DEBUGGER\", {\n        source: \"WIDGET_EDITOR\",\n      });\n    }\n    dispatch(setCanvasDebuggerSelectedTab(tabKey));\n  };\n  const onClose = () => dispatch(showDebugger(false));\n\n  return (\n    <Container\n      className=\"t--debugger-tabs-container\"\n      onClick={stopEventPropagation}\n      ref={panelRef}\n    >\n      <Resizer panelRef={panelRef} />\n      <EntityBottomTabs\n        expandedHeight={`${ActionExecutionResizerHeight}px`}\n        onSelect={setSelectedTab}\n        selectedTabKey={selectedTab}\n        tabs={DEBUGGER_TABS}\n      />\n      <Icon\n        className=\"close-debugger t--close-debugger\"\n        name=\"expand-more\"\n        onClick={onClose}\n        size={IconSize.MEDIUM}\n      />\n    </Container>\n  );\n}\n\nexport default DebuggerTabs;\n","import { Icon, IconSize } from \"design-system-old\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport DebuggerTabs from \"./DebuggerTabs\";\nimport { AppState } from \"@appsmith/reducers\";\nimport {\n  setCanvasDebuggerSelectedTab,\n  showDebugger as showDebuggerAction,\n} from \"actions/debuggerActions\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { Colors } from \"constants/Colors\";\nimport { stopEventPropagation } from \"utils/AppsmithUtils\";\nimport {\n  getMessageCount,\n  hideDebuggerIconSelector,\n} from \"selectors/debuggerSelectors\";\nimport { matchBuilderPath } from \"constants/routes\";\nimport { getTypographyByKey, TooltipComponent } from \"design-system-old\";\nimport { DEBUGGER_TAB_KEYS } from \"./helpers\";\nimport { BottomBarCTAStyles } from \"pages/Editor/BottomBar/styles\";\n\nfunction Debugger() {\n  const showDebugger = useSelector(\n    (state: AppState) => state.ui.debugger.isOpen,\n  );\n\n  return showDebugger ? <DebuggerTabs /> : null;\n}\n\nconst TriggerContainer = styled.div<{\n  errorCount: number;\n  warningCount: number;\n}>`\n  position: relative;\n  overflow: visible;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  ${BottomBarCTAStyles}\n\n  .debugger-count {\n    color: ${Colors.WHITE};\n    ${getTypographyByKey(\"btnSmall\")}\n    height: 16px;\n    width: 16px;\n    background-color: ${(props) =>\n      props.errorCount + props.warningCount > 0\n        ? props.errorCount === 0\n          ? props.theme.colors.debugger.floatingButton.warningCount\n          : props.theme.colors.debugger.floatingButton.errorCount\n        : props.theme.colors.debugger.floatingButton.noErrorCount};\n    position: absolute;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    top: 0px;\n    left: 80%;\n    font-size: 10px;\n    border-radius: 50%;\n  }\n`;\n\nexport function DebuggerTrigger() {\n  const dispatch = useDispatch();\n  const showDebugger = useSelector(\n    (state: AppState) => state.ui.debugger.isOpen,\n  );\n  const messageCounters = useSelector(getMessageCount);\n  const totalMessageCount = messageCounters.errors + messageCounters.warnings;\n  const hideDebuggerIcon = useSelector(hideDebuggerIconSelector);\n\n  const onClick = (e: any) => {\n    const isOnCanvas = matchBuilderPath(window.location.pathname);\n    if (isOnCanvas) {\n      dispatch(showDebuggerAction(!showDebugger));\n      if (!showDebugger)\n        AnalyticsUtil.logEvent(\"OPEN_DEBUGGER\", {\n          source: \"CANVAS\",\n        });\n\n      return;\n    } else {\n      if (totalMessageCount > 0) {\n        dispatch(setCanvasDebuggerSelectedTab(DEBUGGER_TAB_KEYS.ERROR_TAB));\n      } else {\n        dispatch(setCanvasDebuggerSelectedTab(DEBUGGER_TAB_KEYS.LOGS_TAB));\n      }\n    }\n    stopEventPropagation(e);\n  };\n\n  const tooltipContent =\n    totalMessageCount > 0\n      ? `View details for ${totalMessageCount} ${\n          totalMessageCount > 1 ? \"errors\" : \"error\"\n        }`\n      : \"View logs\";\n\n  if (hideDebuggerIcon) return null;\n\n  return (\n    <TriggerContainer\n      className=\"t--debugger\"\n      errorCount={messageCounters.errors}\n      warningCount={messageCounters.warnings}\n    >\n      <TooltipComponent\n        content={tooltipContent}\n        modifiers={{\n          preventOverflow: { enabled: true },\n        }}\n      >\n        <Icon\n          fillColor={Colors.GRAY_700}\n          name=\"bug-line\"\n          onClick={onClick}\n          size={IconSize.XXXL}\n        />\n      </TooltipComponent>\n      {!!messageCounters.errors && (\n        <div className=\"debugger-count t--debugger-count\">\n          {totalMessageCount > 9 ? \"9+\" : totalMessageCount}\n        </div>\n      )}\n    </TriggerContainer>\n  );\n}\n\nexport default Debugger;\n","import { AppState } from \"@appsmith/reducers\";\n\nexport const getHelpModalOpen = (state: AppState): boolean =>\n  state.ui.help.modalOpen;\n\nexport const getDefaultRefinement = (state: AppState): string => {\n  return state.ui.help.defaultRefinement || \"\";\n};\n","import React, { SyntheticEvent } from \"react\";\nimport algoliasearch from \"algoliasearch/lite\";\nimport {\n  InstantSearch,\n  Hits,\n  SearchBox,\n  Highlight,\n  Configure,\n  PoweredBy,\n} from \"react-instantsearch-dom\";\nimport \"instantsearch.css/themes/algolia.css\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { HelpIcons } from \"icons/HelpIcons\";\nimport { HelpBaseURL } from \"constants/HelpConstants\";\nimport { getDefaultRefinement } from \"selectors/helpSelectors\";\nimport { getAppsmithConfigs } from \"@appsmith/configs\";\nimport { AppState } from \"@appsmith/reducers\";\nimport {\n  setHelpDefaultRefinement,\n  setHelpModalVisibility,\n} from \"actions/helpActions\";\nimport { Icon } from \"@blueprintjs/core\";\nimport moment from \"moment\";\nimport { getCurrentUser } from \"selectors/usersSelectors\";\nimport { User } from \"constants/userConstants\";\nimport { Colors } from \"constants/Colors\";\nimport {\n  createMessage,\n  APPSMITH_DISPLAY_VERSION,\n} from \"@appsmith/constants/messages\";\n\nconst {\n  algolia,\n  appVersion,\n  cloudHosting,\n  intercomAppID,\n} = getAppsmithConfigs();\nconst searchClient = algoliasearch(algolia.apiId, algolia.apiKey);\n\nconst OenLinkIcon = HelpIcons.OPEN_LINK;\nconst DocumentIcon = HelpIcons.DOCUMENT;\nconst GithubIcon = HelpIcons.GITHUB;\nconst ChatIcon = HelpIcons.CHAT;\nconst DiscordIcon = HelpIcons.DISCORD;\n\nconst StyledOpenLinkIcon = styled(OenLinkIcon)<{ color?: string }>`\n  position: absolute;\n  right: 14px;\n  top: 1px;\n  width: 12px;\n  height: 12px;\n  display: none;\n`;\n\nconst StyledDocumentIcon = styled(DocumentIcon)`\n  margin-left: 14px;\n  margin-right: 10.8px;\n  margin-top: 1px;\n  position: absolute;\n`;\n\nconst StyledGithubIcon = styled(GithubIcon)`\n  margin-left: 14px;\n  margin-right: 10.8px;\n  margin-top: 1px;\n  position: absolute;\n`;\n\nconst StyledChatIcon = styled(ChatIcon)`\n  &&& {\n    margin-left: 14px;\n    margin-right: 10.8px;\n    margin-top: 1px;\n    position: absolute;\n  }\n`;\n\nconst StyledDiscordIcon = styled(DiscordIcon)`\n  &&& {\n    margin-left: 12px;\n    margin-right: 10.8px;\n    margin-top: 1px;\n    position: absolute;\n  }\n`;\n\nfunction Hit(props: { hit: { path: string } }) {\n  return (\n    <div\n      className=\"t--docHit\"\n      onClick={() => {\n        window.open(props.hit.path.replace(\"master\", HelpBaseURL), \"_blank\");\n      }}\n    >\n      <div className=\"hit-name t--docHitTitle\">\n        <StyledDocumentIcon color=\"#4b4848\" height={14} width={11.2} />\n        <Highlight attribute=\"title\" hit={props.hit} />\n        <StyledOpenLinkIcon\n          className=\"t--docOpenLink open-link\"\n          color={\"#4b4848\"}\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction DefaultHelpMenuItem(props: {\n  item: { label: string; link?: string; id?: string; icon: React.ReactNode };\n  onSelect: () => void;\n}) {\n  return (\n    <li className=\"ais-Hits-item\">\n      <div\n        className=\"t--docHit\"\n        id={props.item.id}\n        onClick={() => {\n          if (props.item.link) window.open(props.item.link, \"_blank\");\n          if (props.item.id === \"intercom-trigger\") {\n            if (intercomAppID && window.Intercom) {\n              window.Intercom(\"show\");\n            }\n          }\n          props.onSelect();\n        }}\n      >\n        <div className=\"hit-name t--docHitTitle\">\n          {props.item.icon}\n          <span className=\"ais-Highlight\">{props.item.label}</span>\n          <StyledOpenLinkIcon\n            className=\"t--docOpenLink open-link\"\n            color={\"#4b4848\"}\n            height={12}\n            width={12}\n          />\n        </div>\n      </div>\n    </li>\n  );\n}\n\nconst SearchContainer = styled.div`\n  height: 100%;\n  background: ${(props) => props.theme.colors.helpModal.background};\n  .ais-SearchBox {\n    position: relative;\n    height: 30px;\n    margin: 14px;\n    margin-top: 10px;\n  }\n\n  .ais-SearchBox-form {\n    height: 100%;\n    background-color: #fff;\n    border-radius: 2px;\n  }\n\n  [class^=\"ais-\"] {\n    font-size: inherit;\n  }\n\n  .ais-Hits {\n    overflow: auto;\n    border-bottom-left-radius: 3px;\n    border-bottom-right-radius: 3px;\n  }\n  .ais-SearchBox-input {\n    height: 100%;\n    width: 188px;\n    padding: 4px 27px;\n    padding-right: 14px;\n    border-radius: 2px;\n    border: 0;\n    font-size: 14px;\n  }\n\n  .ais-SearchBox-submitIcon {\n    width: 10.5px;\n    height: 10.5px;\n  }\n\n  .ais-Pagination {\n    margin-top: 1em;\n  }\n\n  .ais-Hits-list {\n    margin: 0;\n  }\n  .ais-Hits-item {\n    margin-bottom: 1em;\n    width: 100%;\n    margin: 0;\n    padding: 5px;\n    border: 0;\n    cursor: pointer;\n    box-shadow: none;\n  }\n\n  .ais-Hits-item:hover {\n    background-color: ${(props) => props.theme.colors.helpModal.itemHighlight};\n  }\n  .ais-Hits-item:hover .open-link {\n    display: block;\n  }\n\n  .hit-name {\n    font-size: 14px;\n    line-height: 16px;\n    color: #4b4848;\n    position: relative;\n  }\n\n  .ais-SearchBox-reset {\n    right: 51px;\n  }\n  .ais-SearchBox-resetIcon {\n    width: 10px;\n    height: 10px;\n  }\n\n  .hit-description {\n    color: #888;\n    font-size: 14px;\n    margin-bottom: 0.5em;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 12px;\n    line-height: 20px;\n    /*Making description two lines*/\n    height: 42px;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2; /* number of lines to show */\n    -webkit-box-orient: vertical;\n    /*Making description two lines*/\n    /* or 167% */\n\n    letter-spacing: 0.2px;\n  }\n\n  .ais-Highlight {\n    margin-left: 36px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    width: calc(100% - 36px);\n    display: inline-block;\n  }\n\n  .ais-Highlight-highlighted {\n    background-color: #238770;\n  }\n  .ais-SearchBox-submit {\n    left: 4px;\n  }\n`;\n\nconst Header = styled.div`\n  padding: 10px 0;\n  position: absolute;\n  width: 100%;\n  border-top-right-radius: 3px;\n  border-top-left-radius: 3px;\n  height: 50px;\n`;\n\nconst StyledPoweredBy = styled(PoweredBy)`\n  position: absolute;\n  right: 21px;\n  top: 30px;\n  z-index: 1;\n\n  .ais-PoweredBy-text {\n    display: none;\n  }\n`;\n\nconst HelpContainer = styled.div`\n  height: 100%;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst HelpFooter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-top: 1px solid ${Colors.ALTO};\n  padding: 5px 10px;\n  height: 30px;\n  color: ${Colors.DOVE_GRAY2};\n  font-size: 6pt;\n`;\n\nconst HelpBody = styled.div<{ hideSearch?: boolean }>`\n  ${(props) =>\n    props.hideSearch\n      ? `\n    padding: ${props.theme.spaces[2]}px;\n  `\n      : `\n    padding-top: 68px;\n  `}\n  flex: 5;\n`;\n\ntype Props = {\n  hitsPerPage: number;\n  defaultRefinement: string;\n  dispatch: any;\n  hideSearch?: boolean;\n  hideMinimizeBtn?: boolean;\n  user?: User;\n};\ntype State = { showResults: boolean };\n\ntype HelpItem = {\n  label: string;\n  link?: string;\n  id?: string;\n  icon: React.ReactNode;\n};\n\nconst HELP_MENU_ITEMS: HelpItem[] = [\n  {\n    icon: <StyledDocumentIcon color=\"#4b4848\" height={14} width={14} />,\n    label: \"Documentation\",\n    link: \"https://docs.appsmith.com/\",\n  },\n  {\n    icon: <StyledGithubIcon color=\"#4b4848\" height={14} width={14} />,\n    label: \"Report a bug\",\n    link: \"https://github.com/appsmithorg/appsmith/issues/new/choose\",\n  },\n  {\n    icon: <StyledDiscordIcon color=\"#4b4848\" height={14} width={14} />,\n    label: \"Join our Discord\",\n    link: \"https://discord.gg/rBTTVJp\",\n  },\n];\n\nif (intercomAppID && window.Intercom) {\n  HELP_MENU_ITEMS.push({\n    icon: <StyledChatIcon color=\"#4b4848\" height={14} width={14} />,\n    label: \"Chat with us\",\n    id: \"intercom-trigger\",\n  });\n}\n\nclass DocumentationSearch extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      showResults: props.defaultRefinement.length > 0,\n    };\n  }\n\n  onSearchValueChange = (event: SyntheticEvent<HTMLInputElement, Event>) => {\n    // @ts-expect-error: value is missing\n    const value = event.target.value;\n    if (value === \"\" && this.state.showResults) {\n      this.setState({\n        showResults: false,\n      });\n    } else if (value !== \"\" && !this.state.showResults) {\n      this.setState({\n        showResults: true,\n      });\n    }\n  };\n  handleClose = () => {\n    this.props.dispatch(setHelpModalVisibility(false));\n    this.props.dispatch(setHelpDefaultRefinement(\"\"));\n  };\n  render() {\n    if (!algolia.enabled) return null;\n    return (\n      <SearchContainer className=\"ais-InstantSearch t--docSearchModal\">\n        {!this.props.hideMinimizeBtn && (\n          <Icon\n            className=\"t--docsMinimize\"\n            color=\"white\"\n            icon=\"minus\"\n            iconSize={14}\n            onClick={this.handleClose}\n            style={{\n              position: \"absolute\",\n              top: 6,\n              right: 10,\n              cursor: \"pointer\",\n              zIndex: 1,\n            }}\n          />\n        )}\n        <InstantSearch\n          indexName={algolia.indexName}\n          searchClient={searchClient}\n        >\n          <Configure hitsPerPage={this.props.hitsPerPage} />\n          <HelpContainer>\n            {!this.props.hideSearch && (\n              <Header>\n                <StyledPoweredBy />\n                <SearchBox\n                  defaultRefinement={this.props.defaultRefinement}\n                  onChange={this.onSearchValueChange}\n                />\n              </Header>\n            )}\n            <HelpBody hideSearch={this.props.hideSearch}>\n              {this.state.showResults ? (\n                <Hits hitComponent={Hit as any} />\n              ) : (\n                <ul className=\"ais-Hits-list\">\n                  {HELP_MENU_ITEMS.map((item) => (\n                    <DefaultHelpMenuItem\n                      item={item}\n                      key={item.label}\n                      onSelect={this.handleClose}\n                    />\n                  ))}\n                </ul>\n              )}\n            </HelpBody>\n            {appVersion.id && (\n              <HelpFooter>\n                <span>\n                  {createMessage(\n                    APPSMITH_DISPLAY_VERSION,\n                    appVersion.edition,\n                    appVersion.id,\n                    cloudHosting,\n                  )}\n                </span>\n                <span>Released {moment(appVersion.releaseDate).fromNow()}</span>\n              </HelpFooter>\n            )}\n          </HelpContainer>\n        </InstantSearch>\n      </SearchContainer>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  defaultRefinement: getDefaultRefinement(state),\n  user: getCurrentUser(state),\n});\n\nexport default connect(mapStateToProps)(DocumentationSearch);\n","import { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\n\nexport const setHelpDefaultRefinement = (payload: string) => {\n  return {\n    type: ReduxActionTypes.SET_DEFAULT_REFINEMENT,\n    payload,\n  };\n};\nexport const setHelpModalVisibility = (payload: boolean) => {\n  return {\n    type: ReduxActionTypes.SET_HELP_MODAL_OPEN,\n    payload,\n  };\n};\n","import React, { useEffect } from \"react\";\nimport styled, { createGlobalStyle, useTheme } from \"styled-components\";\nimport { Popover, Position } from \"@blueprintjs/core\";\n\nimport DocumentationSearch from \"components/designSystems/appsmith/help/DocumentationSearch\";\nimport { Icon, IconSize, TooltipComponent } from \"design-system-old\";\n\nimport { HELP_MODAL_WIDTH } from \"constants/HelpConstants\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { getCurrentUser } from \"selectors/usersSelectors\";\nimport { useSelector } from \"react-redux\";\nimport bootIntercom from \"utils/bootIntercom\";\nimport {\n  createMessage,\n  HELP_RESOURCE_TOOLTIP,\n} from \"@appsmith/constants/messages\";\nimport { TOOLTIP_HOVER_ON_DELAY } from \"constants/AppConstants\";\nimport { useCallback } from \"react\";\nimport { useState } from \"react\";\nimport { BottomBarCTAStyles } from \"./BottomBar/styles\";\nimport { Theme } from \"constants/DefaultTheme\";\n\nconst HelpPopoverStyle = createGlobalStyle`\n  .bp3-popover.bp3-minimal.navbar-help-popover {\n    margin-top: 0 !important;\n  }\n`;\n\nconst StyledTrigger = styled.div`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  ${BottomBarCTAStyles}\n`;\n\ntype TriggerProps = {\n  tooltipsDisabled: boolean;\n};\n\nconst Trigger = ({ tooltipsDisabled }: TriggerProps) => {\n  const theme = useTheme() as Theme;\n\n  return (\n    <TooltipComponent\n      content={createMessage(HELP_RESOURCE_TOOLTIP)}\n      disabled={tooltipsDisabled}\n      hoverOpenDelay={TOOLTIP_HOVER_ON_DELAY}\n      modifiers={{\n        preventOverflow: { enabled: true },\n      }}\n      position={\"bottom\"}\n    >\n      <StyledTrigger>\n        <Icon\n          fillColor={theme.colors.globalSearch.helpIcon}\n          name=\"question-line\"\n          size={IconSize.XXXL}\n        />\n      </StyledTrigger>\n    </TooltipComponent>\n  );\n};\n\nfunction HelpButton() {\n  const user = useSelector(getCurrentUser);\n  const [isHelpOpen, setIsHelpOpen] = useState(false);\n\n  useEffect(() => {\n    bootIntercom(user);\n  }, [user?.email]);\n\n  const onOpened = useCallback(() => {\n    AnalyticsUtil.logEvent(\"OPEN_HELP\", { page: \"Editor\" });\n    setIsHelpOpen(true);\n  }, []);\n\n  const onClose = useCallback(() => {\n    setIsHelpOpen(false);\n  }, []);\n\n  return (\n    <Popover\n      minimal\n      modifiers={{\n        offset: {\n          enabled: true,\n          offset: \"0, 6\",\n        },\n      }}\n      onClosed={onClose}\n      onOpened={onOpened}\n      popoverClassName=\"navbar-help-popover\"\n      position={Position.BOTTOM_RIGHT}\n    >\n      <>\n        <HelpPopoverStyle />\n        <Trigger tooltipsDisabled={isHelpOpen} />\n      </>\n      <div style={{ width: HELP_MODAL_WIDTH }}>\n        <DocumentationSearch hideMinimizeBtn hideSearch hitsPerPage={4} />\n      </div>\n    </Popover>\n  );\n}\n\nexport default HelpButton;\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgMultiPaneSwitch2(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.0002 2C14.177 2 14.3465 2.07024 14.4716 2.19526C14.5966 2.32029 14.6668 2.48986 14.6668 2.66667V13.3333C14.6668 13.5101 14.5966 13.6797 14.4716 13.8047C14.3465 13.9298 14.177 14 14.0002 14H2.00016C1.82335 14 1.65378 13.9298 1.52876 13.8047C1.40373 13.6797 1.3335 13.5101 1.3335 13.3333V2.66667C1.3335 2.48986 1.40373 2.32029 1.52876 2.19526C1.65378 2.07024 1.82335 2 2.00016 2H14.0002ZM5.00016 3.33333H2.66683V12.6667H5.00016V3.33333ZM13.3335 3.33333H6.00016V12.6667H13.3335V3.33333Z\",\n    fill: \"#A6A6A6\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMultiPaneSwitch2);\nexport default __webpack_public_path__ + \"static/media/multi-pane-switch-2.9a98385a65cef1d6d00158d8603c1073.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgMultiPaneSwitch3(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M14.4713 2.19526C14.3463 2.07024 14.1767 2 13.9999 2H1.99992C1.82311 2 1.65354 2.07024 1.52851 2.19526C1.40349 2.32029 1.33325 2.48986 1.33325 2.66667V13.3333C1.33325 13.5101 1.40349 13.6797 1.52851 13.8047C1.65354 13.9298 1.82311 14 1.99992 14H13.9999C14.1767 14 14.3463 13.9298 14.4713 13.8047C14.5963 13.6797 14.6666 13.5101 14.6666 13.3333V2.66667C14.6666 2.48986 14.5963 2.32029 14.4713 2.19526ZM2.66659 3.33333H4.99988L4.99988 12.6667H2.66659V3.33333ZM10.9999 3.33333H13.3333V12.6667H10.9999L10.9999 3.33333ZM5.99992 3.33333H9.99992V12.6667H5.99992V3.33333Z\",\n    fill: \"#A6A6A6\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMultiPaneSwitch3);\nexport default __webpack_public_path__ + \"static/media/multi-pane-switch-3.3790c78882e3fb29889c25362cf0ba52.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPaneCount } from \"selectors/multiPaneSelectors\";\nimport { setPaneCount } from \"actions/multiPaneActions\";\nimport MultiPaneSwitch2 from \"assets/icons/header/multi-pane-switch-2.svg\";\nimport MultiPaneSwitch3 from \"assets/icons/header/multi-pane-switch-3.svg\";\nimport { PaneLayoutOptions } from \"reducers/uiReducers/multiPaneReducer\";\n\nconst PaneCountSwitcher = () => {\n  const dispatch = useDispatch();\n  const paneCount = useSelector(getPaneCount);\n\n  const updateCount = useCallback((count: PaneLayoutOptions) => {\n    dispatch(setPaneCount(count));\n  }, []);\n\n  return (\n    <div\n      className=\"px-2 cursor-pointer\"\n      onClick={() =>\n        updateCount(\n          paneCount === PaneLayoutOptions.TWO_PANE\n            ? PaneLayoutOptions.THREE_PANE\n            : PaneLayoutOptions.TWO_PANE,\n        )\n      }\n    >\n      {paneCount === PaneLayoutOptions.TWO_PANE ? (\n        <img alt={\"Show 2 panes\"} src={MultiPaneSwitch2} />\n      ) : (\n        <img alt={\"Show 3 panes\"} src={MultiPaneSwitch3} />\n      )}\n    </div>\n  );\n};\n\nexport default PaneCountSwitcher;\n","import { ReduxActionTypes } from \"ce/constants/ReduxActionConstants\";\nimport { PaneLayoutOptions } from \"reducers/uiReducers/multiPaneReducer\";\n\nexport const setTabsPaneWidth = (width: number) => {\n  return {\n    type: ReduxActionTypes.SET_TABS_PANE_WIDTH,\n    payload: {\n      width,\n    },\n  };\n};\n\nexport const setPaneCount = (count: PaneLayoutOptions) => {\n  return {\n    type: ReduxActionTypes.SET_PANE_COUNT,\n    payload: {\n      count,\n    },\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport QuickGitActions from \"pages/Editor/gitSync/QuickGitActions\";\nimport { Layers } from \"constants/Layers\";\nimport { DebuggerTrigger } from \"components/editorComponents/Debugger\";\nimport { Colors } from \"constants/Colors\";\nimport HelpButton from \"pages/Editor/HelpButton\";\nimport ManualUpgrades from \"./ManualUpgrades\";\nimport { Icon, IconSize } from \"design-system-old\";\nimport PaneCountSwitcher from \"pages/common/PaneCountSwitcher\";\nimport { useSelector } from \"react-redux\";\nimport { isMultiPaneActive } from \"selectors/multiPaneSelectors\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: ${(props) => props.theme.bottomBarHeight};\n  display: flex;\n  position: fixed;\n  justify-content: space-between;\n  background-color: ${(props) => props.theme.colors.editorBottomBar.background};\n  z-index: ${Layers.bottomBar};\n  border-top: solid 1px ${Colors.MERCURY};\n  padding: 0 ${(props) => props.theme.spaces[11]}px;\n`;\n\nexport default function BottomBar(props: { className?: string }) {\n  const isMultiPane = useSelector(isMultiPaneActive);\n  return (\n    <Container className={props.className ?? \"\"}>\n      <QuickGitActions />\n      <div className=\"flex justify-between items-center gap-1\">\n        <ManualUpgrades showTooltip>\n          <Icon\n            className=\"t--upgrade\"\n            fillColor={Colors.SCORPION}\n            name=\"upgrade\"\n            size={IconSize.XXXL}\n          />\n        </ManualUpgrades>\n        <HelpButton />\n        <DebuggerTrigger />\n        {isMultiPane && <PaneCountSwitcher />}\n      </div>\n    </Container>\n  );\n}\n","import { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport { APPLICATIONS_URL } from \"constants/routes\";\nimport { Dispatch } from \"react\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport history from \"utils/history\";\nexport const triggerWelcomeTour = (dispatch: Dispatch<any>) => {\n  AnalyticsUtil.logEvent(\"SIGNPOSTING_WELCOME_TOUR_CLICK\");\n  history.push(APPLICATIONS_URL);\n  dispatch({\n    type: ReduxActionTypes.SET_ENABLE_FIRST_TIME_USER_ONBOARDING,\n    payload: false,\n  });\n  dispatch({\n    type: ReduxActionTypes.SET_FIRST_TIME_USER_ONBOARDING_APPLICATION_ID,\n    payload: \"\",\n  });\n  dispatch({\n    type: ReduxActionTypes.ONBOARDING_CREATE_APPLICATION,\n  });\n};\n","import { Icon, Overlay } from \"@blueprintjs/core\";\nimport { Button, Category, Size } from \"design-system-old\";\nimport {\n  HOW_APPSMITH_WORKS,\n  BUILD_MY_FIRST_APP,\n  createMessage,\n  WELCOME_TO_APPSMITH,\n  ONBOARDING_INTRO_CONNECT_YOUR_DATABASE,\n  QUERY_YOUR_DATABASE,\n  DRAG_AND_DROP,\n  CUSTOMIZE_WIDGET_STYLING,\n  ONBOARDING_INTRO_PUBLISH,\n  CHOOSE_ACCESS_CONTROL_ROLES,\n  ONBOARDING_INTRO_FOOTER,\n  START_TUTORIAL,\n} from \"@appsmith/constants/messages\";\nimport { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { triggerWelcomeTour } from \"./Utils\";\nimport { ASSETS_CDN_URL } from \"constants/ThirdPartyConstants\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\nconst CenteredContainer = styled.div`\n  width: 926px;\n  background: #fff;\n  position: relative;\n`;\n\nconst ModalHeaderWrapper = styled.div`\n  margin: 40px 52px 0px;\n`;\nconst ModalHeader = styled.h5`\n  font-size: 28px;\n  font-weight: 600;\n`;\n\nconst ModalSubHeader = styled.h5`\n  font-size: 20px;\n  margin-top: 20px;\n`;\n\nconst ModalBody = styled.div`\n  margin: 20px 52px 16px;\n`;\n\nconst ModalContentWrapper = styled.div``;\nconst ModalContentRow = styled.div<{ border?: boolean }>`\n  flex-direction: row;\n  display: flex;\n  justify-content: space-between;\n  height: 113px;\n  padding: 20px 0px;\n  ${(props) => (props.border ? \"border-bottom: 1px solid #E8E8E8;\" : \"\")}\n`;\nconst ModalContentTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 3;\n`;\n\nconst StyledImgWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: center;\n`;\n\nconst StyledImg = styled.img`\n  vertical-align: middle;\n`;\n\nconst StyledCount = styled.h5`\n  font-size: 36px;\n  font-weight: 600;\n  color: #716e6e;\n`;\n\nconst ModalContent = styled.div`\n  margin-left: 36px;\n`;\nconst ModalContentHeader = styled.h5`\n  font-size: 18px;\n  font-weight: 500;\n`;\nconst ModalContentDescription = styled.h5`\n  font-size: 16px;\n`;\n\nconst ModalFooter = styled.div`\n  border-top: 1px solid #e8e8e8;\n  padding: 0px 56px;\n  flex-direction: row;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst ModalFooterText = styled.span`\n  font-size: 20px;\n  letter-spacing: -0.24px;\n`;\n\nconst StyledButton = styled(Button)`\n  display: inline-block;\n`;\n\nconst StyledClose = styled(Icon)`\n  position: absolute;\n  top: 20px;\n  right: 20px;\n  cursor: pointer;\n`;\n\ntype IntroductionModalProps = {\n  close: () => void;\n};\n\nconst getConnectDataImg = () => `${ASSETS_CDN_URL}/ConnectData-v2.svg`;\nconst getDragAndDropImg = () => `${ASSETS_CDN_URL}/DragAndDrop.svg`;\nconst getPublishAppsImg = () => `${ASSETS_CDN_URL}/PublishApps-v2.svg`;\n\nexport default function IntroductionModal({ close }: IntroductionModalProps) {\n  const dispatch = useDispatch();\n  const onBuildApp = () => {\n    AnalyticsUtil.logEvent(\"SIGNPOSTING_BUILD_APP_CLICK\");\n    close();\n  };\n  useEffect(() => {\n    dispatch({\n      type: ReduxActionTypes.GET_ALL_APPLICATION_INIT,\n    });\n  }, []);\n  return (\n    <Overlay hasBackdrop isOpen transitionDuration={25} usePortal>\n      <Wrapper className=\"t--onboarding-introduction-modal\">\n        <CenteredContainer>\n          <StyledClose\n            className=\"t--how-appsmith-works-modal-close\"\n            color=\"#919397\"\n            icon=\"cross\"\n            iconSize={16}\n            onClick={onBuildApp}\n          />\n          <ModalHeaderWrapper className=\"t--how-appsmith-works-modal-header\">\n            <ModalHeader>{createMessage(WELCOME_TO_APPSMITH)}</ModalHeader>\n            <ModalSubHeader>{createMessage(HOW_APPSMITH_WORKS)}</ModalSubHeader>\n          </ModalHeaderWrapper>\n\n          <ModalBody>\n            <ModalContentWrapper>\n              <ModalContentRow border>\n                <ModalContentTextWrapper>\n                  <StyledCount>1</StyledCount>\n                  <ModalContent>\n                    <ModalContentHeader>\n                      {createMessage(ONBOARDING_INTRO_CONNECT_YOUR_DATABASE)}\n                    </ModalContentHeader>\n                    <ModalContentDescription>\n                      {createMessage(QUERY_YOUR_DATABASE)}\n                    </ModalContentDescription>\n                  </ModalContent>\n                </ModalContentTextWrapper>\n                <StyledImgWrapper>\n                  <StyledImg src={getConnectDataImg()} />\n                </StyledImgWrapper>\n              </ModalContentRow>\n              <ModalContentRow border>\n                <ModalContentTextWrapper>\n                  <StyledCount>2</StyledCount>\n                  <ModalContent>\n                    <ModalContentHeader>\n                      {createMessage(DRAG_AND_DROP)}\n                    </ModalContentHeader>\n                    <ModalContentDescription>\n                      {createMessage(CUSTOMIZE_WIDGET_STYLING)}\n                    </ModalContentDescription>\n                  </ModalContent>\n                </ModalContentTextWrapper>\n                <StyledImgWrapper>\n                  <StyledImg src={getDragAndDropImg()} />\n                </StyledImgWrapper>\n              </ModalContentRow>\n              <ModalContentRow className=\"border-b-0\">\n                <ModalContentTextWrapper>\n                  <StyledCount>3</StyledCount>\n                  <ModalContent>\n                    <ModalContentHeader>\n                      {createMessage(ONBOARDING_INTRO_PUBLISH)}\n                    </ModalContentHeader>\n                    <ModalContentDescription>\n                      {createMessage(CHOOSE_ACCESS_CONTROL_ROLES)}\n                    </ModalContentDescription>\n                  </ModalContent>\n                </ModalContentTextWrapper>\n                <StyledImgWrapper>\n                  <StyledImg src={getPublishAppsImg()} />\n                </StyledImgWrapper>\n              </ModalContentRow>\n            </ModalContentWrapper>\n          </ModalBody>\n          <ModalFooter>\n            <ModalFooterText>\n              {createMessage(ONBOARDING_INTRO_FOOTER)}\n            </ModalFooterText>\n            <div>\n              <StyledButton\n                category={Category.secondary}\n                className=\"t--introduction-modal-welcome-tour-button my-6\"\n                onClick={() => triggerWelcomeTour(dispatch)}\n                size={Size.large}\n                tag=\"button\"\n                text={createMessage(START_TUTORIAL)}\n              />\n              <StyledButton\n                category={Category.primary}\n                className=\"t--introduction-modal-build-button my-6 ml-5\"\n                onClick={onBuildApp}\n                size={Size.large}\n                tag=\"button\"\n                text={createMessage(BUILD_MY_FIRST_APP)}\n              />\n            </div>\n          </ModalFooter>\n        </CenteredContainer>\n      </Wrapper>\n    </Overlay>\n  );\n}\n","import { toggleInOnboardingWidgetSelection } from \"actions/onboardingActions\";\nimport { forceOpenWidgetPanel } from \"actions/widgetSidebarActions\";\nimport { Button } from \"design-system-old\";\nimport {\n  ONBOARDING_TASK_DATASOURCE_BODY,\n  ONBOARDING_TASK_DATASOURCE_HEADER,\n  ONBOARDING_TASK_DATASOURCE_BUTTON,\n  ONBOARDING_TASK_DATASOURCE_FOOTER_ACTION,\n  ONBOARDING_TASK_DATASOURCE_FOOTER,\n  ONBOARDING_TASK_QUERY_HEADER,\n  ONBOARDING_TASK_QUERY_BODY,\n  ONBOARDING_TASK_QUERY_BUTTON,\n  ONBOARDING_TASK_QUERY_FOOTER_ACTION,\n  ONBOARDING_TASK_WIDGET_HEADER,\n  ONBOARDING_TASK_WIDGET_BODY,\n  ONBOARDING_TASK_WIDGET_BUTTON,\n  ONBOARDING_TASK_WIDGET_FOOTER_ACTION,\n  ONBOARDING_TASK_FOOTER,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport { INTEGRATION_TABS } from \"constants/routes\";\nimport { ASSETS_CDN_URL } from \"constants/ThirdPartyConstants\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport {\n  getCurrentApplicationId,\n  getCurrentPageId,\n} from \"selectors/editorSelectors\";\nimport {\n  getCanvasWidgets,\n  getDatasources,\n  getPageActions,\n} from \"selectors/entitiesSelector\";\nimport { getFirstTimeUserOnboardingModal } from \"selectors/onboardingSelectors\";\nimport styled from \"styled-components\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport history from \"utils/history\";\nimport IntroductionModal from \"./IntroductionModal\";\nimport { integrationEditorURL } from \"RouteBuilder\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: calc(100vh - 36px);\n  margin: 0 auto;\n  background-color: #fff;\n`;\n\nconst CenteredContainer = styled.div`\n  text-align: center;\n  width: 529px;\n`;\n\nconst TaskImageContainer = styled.div`\n  width: 220px;\n  margin: 0 auto;\n`;\n\nconst TaskImage = styled.img`\n  width: 100%;\n`;\n\nconst TaskHeader = styled.h5`\n  font-size: 24px;\n  margin-bottom: 16px;\n`;\n\nconst TaskSubText = styled.p`\n  width: 100%;\n`;\n\nconst TaskButtonWrapper = styled.div`\n  margin-top: 30px;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 208px;\n  margin: 0 auto;\n  height: 38px;\n`;\n\nconst Taskfootnote = styled.p`\n  margin-top: 30px;\n  & span {\n    color: ${(props) => props.theme.colors.welcomeTourStickySidebarBackground};\n    font-weight: 600;\n    cursor: pointer;\n  }\n`;\n\nconst getOnboardingDatasourceImg = () =>\n  `${ASSETS_CDN_URL}/onboarding-datasource.svg`;\nconst getOnboardingQueryImg = () => `${ASSETS_CDN_URL}/onboarding-query.svg`;\nconst getOnboardingWidgetImg = () => `${ASSETS_CDN_URL}/onboarding-widget.svg`;\n\nexport default function OnboardingTasks() {\n  const applicationId = useSelector(getCurrentApplicationId);\n  const pageId = useSelector(getCurrentPageId);\n  let content;\n  const datasources = useSelector(getDatasources);\n  const actions = useSelector(getPageActions(pageId));\n  const widgets = useSelector(getCanvasWidgets);\n  const dispatch = useDispatch();\n  const showModal = useSelector(getFirstTimeUserOnboardingModal);\n  if (!datasources.length && !actions.length) {\n    content = (\n      <CenteredContainer>\n        <TaskImageContainer>\n          <TaskImage src={getOnboardingDatasourceImg()} />\n        </TaskImageContainer>\n        <TaskHeader\n          className=\"t--tasks-datasource-header\"\n          data-testid=\"onboarding-tasks-datasource-text\"\n        >\n          {createMessage(ONBOARDING_TASK_DATASOURCE_HEADER)}\n        </TaskHeader>\n        <TaskSubText>\n          {createMessage(ONBOARDING_TASK_DATASOURCE_BODY)}\n        </TaskSubText>\n        <TaskButtonWrapper>\n          <StyledButton\n            className=\"t--tasks-datasource-button\"\n            data-testid=\"onboarding-tasks-datasource-button\"\n            onClick={() => {\n              AnalyticsUtil.logEvent(\"SIGNPOSTING_CREATE_DATASOURCE_CLICK\", {\n                from: \"CANVAS\",\n              });\n              history.push(\n                integrationEditorURL({\n                  pageId,\n                  selectedTab: INTEGRATION_TABS.NEW,\n                }),\n              );\n            }}\n            tag=\"button\"\n            text={createMessage(ONBOARDING_TASK_DATASOURCE_BUTTON)}\n            type=\"button\"\n          />\n        </TaskButtonWrapper>\n        <Taskfootnote>\n          {createMessage(ONBOARDING_TASK_FOOTER)}&nbsp;\n          <span\n            className=\"t--tasks-datasource-alternate-button\"\n            data-testid=\"onboarding-tasks-datasource-alt\"\n            onClick={() => {\n              AnalyticsUtil.logEvent(\"SIGNPOSTING_ADD_WIDGET_CLICK\", {\n                from: \"CANVAS\",\n              });\n              dispatch(toggleInOnboardingWidgetSelection(true));\n              dispatch(forceOpenWidgetPanel(true));\n            }}\n          >\n            {createMessage(ONBOARDING_TASK_DATASOURCE_FOOTER_ACTION)}\n          </span>\n          &nbsp;{createMessage(ONBOARDING_TASK_DATASOURCE_FOOTER)}\n        </Taskfootnote>\n      </CenteredContainer>\n    );\n  } else if (!actions.length) {\n    content = (\n      <CenteredContainer>\n        <TaskImageContainer>\n          <TaskImage src={getOnboardingQueryImg()} />\n        </TaskImageContainer>\n        <TaskHeader\n          className=\"t--tasks-datasource-header\"\n          data-testid=\"onboarding-tasks-action-text\"\n        >\n          {createMessage(ONBOARDING_TASK_QUERY_HEADER)}\n        </TaskHeader>\n        <TaskSubText>{createMessage(ONBOARDING_TASK_QUERY_BODY)}</TaskSubText>\n        <TaskButtonWrapper>\n          <StyledButton\n            className=\"t--tasks-action-button\"\n            data-testid=\"onboarding-tasks-action-button\"\n            onClick={() => {\n              AnalyticsUtil.logEvent(\"SIGNPOSTING_CREATE_QUERY_CLICK\", {\n                from: \"CANVAS\",\n              });\n              history.push(\n                integrationEditorURL({\n                  pageId,\n                  selectedTab: INTEGRATION_TABS.ACTIVE,\n                }),\n              );\n            }}\n            tag=\"button\"\n            text={createMessage(ONBOARDING_TASK_QUERY_BUTTON)}\n            type=\"button\"\n          />\n        </TaskButtonWrapper>\n        <Taskfootnote>\n          {createMessage(ONBOARDING_TASK_FOOTER)}&nbsp;\n          <span\n            className=\"t--tasks-action-alternate-button\"\n            data-testid=\"onboarding-tasks-action-alt\"\n            onClick={() => {\n              AnalyticsUtil.logEvent(\"SIGNPOSTING_ADD_WIDGET_CLICK\", {\n                from: \"CANVAS\",\n              });\n              dispatch(toggleInOnboardingWidgetSelection(true));\n              dispatch(forceOpenWidgetPanel(true));\n            }}\n          >\n            {createMessage(ONBOARDING_TASK_QUERY_FOOTER_ACTION)}\n          </span>\n        </Taskfootnote>\n      </CenteredContainer>\n    );\n  } else if (Object.keys(widgets).length === 1) {\n    content = (\n      <CenteredContainer>\n        <TaskImageContainer>\n          <TaskImage src={getOnboardingWidgetImg()} />\n        </TaskImageContainer>\n        <TaskHeader\n          className=\"t--tasks-datasource-header\"\n          data-testid=\"onboarding-tasks-widget-text\"\n        >\n          {createMessage(ONBOARDING_TASK_WIDGET_HEADER)}\n        </TaskHeader>\n        <TaskSubText>{createMessage(ONBOARDING_TASK_WIDGET_BODY)}</TaskSubText>\n        <TaskButtonWrapper>\n          <StyledButton\n            className=\"t--tasks-widget-button\"\n            data-testid=\"onboarding-tasks-widget-button\"\n            onClick={() => {\n              AnalyticsUtil.logEvent(\"SIGNPOSTING_ADD_WIDGET_CLICK\", {\n                from: \"CANVAS\",\n              });\n              dispatch(toggleInOnboardingWidgetSelection(true));\n              dispatch(forceOpenWidgetPanel(true));\n            }}\n            tag=\"button\"\n            text={createMessage(ONBOARDING_TASK_WIDGET_BUTTON)}\n            type=\"button\"\n          />\n        </TaskButtonWrapper>\n        <Taskfootnote>\n          {createMessage(ONBOARDING_TASK_FOOTER)}&nbsp;\n          <span\n            className=\"t--tasks-widget-alternate-button\"\n            data-testid=\"onboarding-tasks-widget-alt\"\n            onClick={() => {\n              AnalyticsUtil.logEvent(\"SIGNPOSTING_PUBLISH_CLICK\", {\n                from: \"CANVAS\",\n              });\n              dispatch({\n                type: ReduxActionTypes.PUBLISH_APPLICATION_INIT,\n                payload: {\n                  applicationId,\n                },\n              });\n            }}\n          >\n            {createMessage(ONBOARDING_TASK_WIDGET_FOOTER_ACTION)}\n          </span>\n          .\n        </Taskfootnote>\n      </CenteredContainer>\n    );\n  }\n  return (\n    <Wrapper data-testid=\"onboarding-tasks-wrapper\">\n      {content}\n      {showModal && (\n        <IntroductionModal\n          close={() => {\n            dispatch({\n              type: ReduxActionTypes.SET_SHOW_FIRST_TIME_USER_ONBOARDING_MODAL,\n              payload: false,\n            });\n          }}\n        />\n      )}\n    </Wrapper>\n  );\n}\n","import { AppState } from \"@appsmith/reducers\";\nimport { createSelector } from \"reselect\";\nimport {\n  CrudInfoModalReduxState,\n  GenerateCRUDSuccessInfoData,\n} from \"reducers/uiReducers/crudInfoModalReducer\";\n\nexport type CrudInfoModalData = {\n  crudInfoModalOpen: boolean;\n  generateCRUDSuccessInfo: GenerateCRUDSuccessInfoData | null;\n};\n\nconst getCrudInfoModalState = (state: AppState): CrudInfoModalReduxState =>\n  state.ui.crudInfoModal;\n\nexport const getCrudInfoModalData = createSelector(\n  getCrudInfoModalState,\n  (crudInfoModal) => {\n    return {\n      crudInfoModalOpen: crudInfoModal.crudInfoModalOpen,\n      generateCRUDSuccessInfo: crudInfoModal.generateCRUDSuccessInfo,\n    };\n  },\n);\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { connect, useDispatch } from \"react-redux\";\nimport { AppState } from \"@appsmith/reducers\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport {\n  Button,\n  Category,\n  DialogComponent as Dialog,\n  getTypographyByKey,\n  Size,\n  Text,\n  TextType,\n} from \"design-system-old\";\nimport { getCrudInfoModalData } from \"selectors/crudInfoModalSelectors\";\nimport { setCrudInfoModalData } from \"actions/crudInfoModalActions\";\nimport { Colors } from \"constants/Colors\";\n\nimport { GenerateCRUDSuccessInfoData } from \"reducers/uiReducers/crudInfoModalReducer\";\nimport {\n  GEN_CRUD_INFO_DIALOG_SUBTITLE,\n  GEN_CRUD_SUCCESS_MESSAGE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { getInfoImage, getInfoThumbnail } from \"constants/ImagesURL\";\nimport {\n  ProgressiveImage,\n  Container as ProgressiveImageContainer,\n} from \"design-system-old\";\nimport SuccessTick from \"pages/common/SuccessTick\";\n\ntype Props = {\n  crudInfoModalOpen: boolean;\n  generateCRUDSuccessInfo: GenerateCRUDSuccessInfoData | null;\n};\n\nconst Heading = styled.div`\n  color: ${Colors.CODE_GRAY};\n  display: flex;\n  justify-content: center;\n  ${getTypographyByKey(\"h1\")}\n`;\n\nconst ActionButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 30px 0px 0px;\n`;\n\nexport const StyledSeparator = styled.div`\n  width: 100%;\n  background-color: ${(props) => props.theme.colors.modal.separator};\n  opacity: 0.6;\n  height: 1px;\n`;\n\nconst ActionButton = styled(Button)`\n  margin-right: 16px;\n`;\n\nconst Content = styled.div`\n  padding: 16px;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  max-height: 700px;\n  min-height: 500px;\n\n  .info-subtitle {\n    padding-top: 5px;\n    text-align: center;\n  }\n`;\n\nconst ImageWrapper = styled.div`\n  padding: 50px 10px 10px;\n  display: flex;\n  flex: 1;\n  justify-content: center;\n  & ${ProgressiveImageContainer} {\n    width: 100%;\n    height: 284px;\n  }\n  .progressive-image--thumb,\n  progressive-image--full {\n    object-fit: contain;\n  }\n\n  .progressive-image--thumb {\n    filter: blur(20px);\n    opacity: 0.3;\n    transition: visibility 0ms ease 100ms;\n  }\n`;\n\nconst SuccessContentWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n\nconst STEP = {\n  SHOW_SUCCESS_GIF: \"show_success_gif\",\n  SHOW_INFO: \"show_info\",\n};\n\nconst DELAY_TIME = 3000;\n\nfunction InfoContent({\n  onClose,\n  successImageUrl,\n  successMessage,\n}: {\n  onClose: () => void;\n  successMessage: string;\n  successImageUrl: string;\n}) {\n  return (\n    <>\n      <Content>\n        <Text\n          className=\"info-subtitle\"\n          dangerouslySetInnerHTML={{\n            __html: successMessage,\n          }}\n          type={TextType.P1}\n        />\n        <ImageWrapper>\n          <ProgressiveImage\n            alt=\"template information\"\n            imageSource={successImageUrl}\n            thumbnailSource={getInfoThumbnail()}\n          />\n        </ImageWrapper>\n      </Content>\n\n      <ActionButtonWrapper>\n        <ActionButton\n          category={Category.primary}\n          onClick={() => {\n            onClose();\n          }}\n          size={Size.medium}\n          text=\"GOT IT\"\n        />\n      </ActionButtonWrapper>\n    </>\n  );\n}\n\nfunction GenCRUDSuccessModal(props: Props) {\n  const { crudInfoModalOpen, generateCRUDSuccessInfo } = props;\n\n  const dispatch = useDispatch();\n  const [step, setStep] = useState(STEP.SHOW_SUCCESS_GIF);\n\n  const onClose = () => {\n    AnalyticsUtil.logEvent(\"CLOSE_GEN_PAGE_INFO_MODAL\");\n    dispatch(setCrudInfoModalData({ open: false }));\n  };\n\n  const successMessage =\n    (generateCRUDSuccessInfo && generateCRUDSuccessInfo.successMessage) ||\n    createMessage(GEN_CRUD_INFO_DIALOG_SUBTITLE);\n\n  const successImageUrl =\n    (generateCRUDSuccessInfo && generateCRUDSuccessInfo.successImageUrl) ||\n    getInfoImage();\n\n  useEffect(() => {\n    const timerId = setTimeout(() => {\n      setStep(STEP.SHOW_INFO);\n    }, DELAY_TIME);\n    return () => {\n      if (timerId) clearTimeout(timerId);\n    };\n  }, [setStep]);\n\n  return (\n    <Dialog\n      canEscapeKeyClose\n      canOutsideClickClose\n      isOpen={crudInfoModalOpen}\n      setModalClose={onClose}\n    >\n      <Wrapper>\n        {step === STEP.SHOW_SUCCESS_GIF ? (\n          <SuccessContentWrapper>\n            <SuccessTick height=\"80px\" width=\"80px\" />\n            <Heading> {createMessage(GEN_CRUD_SUCCESS_MESSAGE)}</Heading>\n          </SuccessContentWrapper>\n        ) : null}\n        {step === STEP.SHOW_INFO ? (\n          <InfoContent\n            onClose={onClose}\n            successImageUrl={successImageUrl}\n            successMessage={successMessage}\n          />\n        ) : null}\n      </Wrapper>\n    </Dialog>\n  );\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  crudInfoModalOpen: getCrudInfoModalData(state).crudInfoModalOpen,\n  generateCRUDSuccessInfo: getCrudInfoModalData(state).generateCRUDSuccessInfo,\n});\n\nexport default connect(mapStateToProps)(GenCRUDSuccessModal);\n","import { ASSETS_CDN_URL } from \"./ThirdPartyConstants\";\nexport const getInfoThumbnail = () =>\n  `${ASSETS_CDN_URL}/crud/crud_info_thumbnail.png`;\nexport const getInfoImage = (): string =>\n  `${ASSETS_CDN_URL}/crud/working-flow-chart.png`;\n","import {\n  markStepComplete,\n  tableWidgetWasSelected,\n  enableGuidedTour,\n  updateButtonWidgetText,\n  forceShowContent,\n  focusWidgetProperty,\n  setCurrentStepInit,\n} from \"actions/onboardingActions\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getApplicationLastDeployedAt } from \"selectors/editorSelectors\";\nimport {\n  getHadReachedStep,\n  isQueryExecutionSuccessful,\n  isTableWidgetSelected,\n  tableWidgetHasBinding,\n  containerWidgetAdded,\n  nameInputSelector,\n  isNameInputBoundSelector,\n  isCountryInputBound,\n  isEmailInputBound,\n  isButtonWidgetPresent,\n  buttonWidgetHasOnClickBinding,\n  buttonWidgetHasOnSuccessBinding,\n  countryInputSelector,\n} from \"selectors/onboardingSelectors\";\nimport { getBaseWidgetClassName } from \"constants/componentClassNameConstants\";\nimport { GUIDED_TOUR_STEPS, Steps } from \"./constants\";\nimport {\n  closeSidebar,\n  hideIndicator,\n  highlightSection,\n  showIndicator,\n} from \"./utils\";\n\nfunction useComputeCurrentStep(showInfoMessage: boolean) {\n  let step = 1;\n  const meta: {\n    completedSubSteps: number[];\n    hintCount: number;\n  } = {\n    completedSubSteps: [],\n    hintCount: 0,\n  };\n  const dispatch = useDispatch();\n  const hadReachedStep = useSelector(getHadReachedStep);\n  // Step 1(Run the query) selectors\n  const queryExecutedSuccessfully = useSelector(isQueryExecutionSuccessful);\n  // 2 selectors\n  const tableWidgetSelected = useSelector(isTableWidgetSelected);\n  // 3\n  const isTableWidgetBound = useSelector(tableWidgetHasBinding);\n  // 4\n  const isContainerWidgetPreset = useSelector(containerWidgetAdded);\n  const nameInputWidgetId = useSelector(nameInputSelector);\n  const isNameInputBound = useSelector(isNameInputBoundSelector);\n  // 5\n  const countryInputBound = useSelector(isCountryInputBound);\n  const isCountryInputSelected = useSelector(countryInputSelector);\n  const emailInputBound = useSelector(isEmailInputBound);\n  // 6\n  const buttonWidgetPresent = useSelector(isButtonWidgetPresent);\n  // 7\n  const buttonWidgetonClickBinding = useSelector(buttonWidgetHasOnClickBinding);\n  // 8\n  const buttonWidgetSuccessBinding = useSelector(\n    buttonWidgetHasOnSuccessBinding,\n  );\n  // 9\n  const isDeployed = useSelector(getApplicationLastDeployedAt);\n\n  // If we are on the first step\n  if (step === GUIDED_TOUR_STEPS.RUN_QUERY) {\n    // If the query is executed successfully and if the user had gone to further steps before\n    // i.e probably the user is here after finishing step 5. This can happen if the query is updated\n    // to something unexpected.\n    // So we have `hadReachedStep` to keep track of the furthest the user had reached.\n    // Initially we don't automatically go to the next step, instead the user clicks on a button in the guide\n    // shown on top of the screen for the user clicking on which we update the current step\n    if (queryExecutedSuccessfully && hadReachedStep > 1) {\n      step = GUIDED_TOUR_STEPS.SELECT_TABLE_WIDGET;\n    }\n  }\n\n  // On the second step\n  if (step === GUIDED_TOUR_STEPS.SELECT_TABLE_WIDGET) {\n    if (tableWidgetSelected) {\n      step = GUIDED_TOUR_STEPS.TABLE_WIDGET_BINDING;\n      // Reset back the hintcount set in previous step\n      meta.hintCount = 0;\n    }\n  }\n\n  if (step === GUIDED_TOUR_STEPS.TABLE_WIDGET_BINDING) {\n    if (\n      !!isTableWidgetBound &&\n      isContainerWidgetPreset &&\n      hadReachedStep > GUIDED_TOUR_STEPS.TABLE_WIDGET_BINDING\n    ) {\n      step = GUIDED_TOUR_STEPS.NAME_INPUT_BINDING;\n    }\n  }\n\n  if (step === GUIDED_TOUR_STEPS.NAME_INPUT_BINDING) {\n    if (!!isNameInputBound && hadReachedStep > 4) {\n      step = GUIDED_TOUR_STEPS.BIND_OTHER_FORM_WIDGETS;\n    }\n  }\n\n  if (step === GUIDED_TOUR_STEPS.BIND_OTHER_FORM_WIDGETS) {\n    if (emailInputBound) {\n      // We tick off widgets in the UI which are bound to the selected row.\n      // This is to keep track of which ones are bound\n      meta.completedSubSteps.push(0);\n    }\n    if (countryInputBound) {\n      meta.completedSubSteps.push(1);\n    }\n    // Once all three widgets are bound this step is complete\n    if (\n      meta.completedSubSteps.length === 2 &&\n      hadReachedStep > GUIDED_TOUR_STEPS.BIND_OTHER_FORM_WIDGETS\n    ) {\n      step = GUIDED_TOUR_STEPS.ADD_BUTTON_WIDGET;\n    }\n  }\n\n  if (step === GUIDED_TOUR_STEPS.ADD_BUTTON_WIDGET) {\n    if (buttonWidgetPresent && hadReachedStep > 6) {\n      step = GUIDED_TOUR_STEPS.BUTTON_ONCLICK_BINDING;\n    }\n  }\n\n  if (step === GUIDED_TOUR_STEPS.BUTTON_ONCLICK_BINDING) {\n    if (buttonWidgetonClickBinding) {\n      step = GUIDED_TOUR_STEPS.BUTTON_ONSUCCESS_BINDING;\n    }\n  }\n\n  if (step === GUIDED_TOUR_STEPS.BUTTON_ONSUCCESS_BINDING) {\n    if (\n      buttonWidgetSuccessBinding &&\n      hadReachedStep > GUIDED_TOUR_STEPS.BUTTON_ONSUCCESS_BINDING\n    ) {\n      step = GUIDED_TOUR_STEPS.DEPLOY;\n    }\n  }\n\n  // Update the step in the store\n  useEffect(() => {\n    dispatch(setCurrentStepInit(step));\n  }, [step]);\n\n  // Step 1 side effects\n  useEffect(() => {\n    // Success messages, indicators and highlighted sections are shown initially\n    // These are not shown again i.e if the user finishes step 5 and does some changes\n    // which bring the step back to 1, we don't do the following changes after completing step 1\n    // again.\n    if (\n      step === GUIDED_TOUR_STEPS.RUN_QUERY &&\n      hadReachedStep <= GUIDED_TOUR_STEPS.RUN_QUERY\n    ) {\n      if (queryExecutedSuccessfully) {\n        dispatch(forceShowContent(GUIDED_TOUR_STEPS.RUN_QUERY));\n        // Hide the indicator after the user has successfully run the query\n        hideIndicator();\n        // This show the success message\n        dispatch(markStepComplete());\n\n        setTimeout(() => {\n          if (Steps[GUIDED_TOUR_STEPS.RUN_QUERY].elementSelector) {\n            // Highlight section which shows a temporary border around the target\n            highlightSection(\n              Steps[GUIDED_TOUR_STEPS.RUN_QUERY].elementSelector,\n            );\n          }\n          // Adding a slight delay to wait for the table to be visible\n        }, 1000);\n      } else {\n        dispatch(closeSidebar());\n        showIndicator(`[data-guided-tour-iid='run-query']`, \"top\");\n      }\n    }\n  }, [queryExecutedSuccessfully, step, hadReachedStep]);\n\n  // Step 3(table widget binding) side effects\n  // Focus the tableData input in the property pane\n  useEffect(() => {\n    if (\n      tableWidgetSelected &&\n      step === GUIDED_TOUR_STEPS.TABLE_WIDGET_BINDING &&\n      hadReachedStep <= GUIDED_TOUR_STEPS.TABLE_WIDGET_BINDING\n    ) {\n      dispatch(tableWidgetWasSelected(true));\n      showIndicator(`[data-guided-tour-iid='tableData']`, \"top\", {\n        top: 20,\n        left: 0,\n      });\n      // Focus the tableData input field\n      dispatch(focusWidgetProperty(\"tableData\"));\n    }\n  }, [step, tableWidgetSelected]);\n  // Show success message\n  useEffect(() => {\n    if (\n      !!isTableWidgetBound &&\n      step === GUIDED_TOUR_STEPS.TABLE_WIDGET_BINDING &&\n      hadReachedStep <= GUIDED_TOUR_STEPS.TABLE_WIDGET_BINDING\n    ) {\n      dispatch(closeSidebar());\n      hideIndicator();\n      dispatch(markStepComplete());\n    }\n  }, [isTableWidgetBound, step, hadReachedStep]);\n\n  // Step 4(Add binding to the NameInput widget) side effects\n  // Highlight table widget's selected row\n  useEffect(() => {\n    if (\n      !!isTableWidgetBound &&\n      step === GUIDED_TOUR_STEPS.NAME_INPUT_BINDING &&\n      hadReachedStep <= GUIDED_TOUR_STEPS.NAME_INPUT_BINDING\n    ) {\n      if (!!nameInputWidgetId) {\n        // Minor timeout to wait for the elements to exist\n        dispatch(closeSidebar());\n        setTimeout(() => {\n          // Highlight the selected row and the NameInput widget\n          highlightSection(\n            \"selected-row\",\n            getBaseWidgetClassName(isTableWidgetBound),\n            \"class\",\n          );\n          highlightSection(\n            getBaseWidgetClassName(nameInputWidgetId),\n            undefined,\n            \"class\",\n          );\n        }, 500);\n      }\n    }\n  }, [isTableWidgetBound, step, hadReachedStep, nameInputWidgetId]);\n  // Show success message\n  useEffect(() => {\n    if (\n      step === GUIDED_TOUR_STEPS.NAME_INPUT_BINDING &&\n      hadReachedStep <= GUIDED_TOUR_STEPS.NAME_INPUT_BINDING\n    ) {\n      if (!!isNameInputBound) {\n        hideIndicator();\n        dispatch(markStepComplete());\n      }\n    }\n  }, [isNameInputBound, step, hadReachedStep]);\n\n  // Step 5\n  useEffect(() => {\n    if (\n      step === GUIDED_TOUR_STEPS.BIND_OTHER_FORM_WIDGETS &&\n      hadReachedStep <= GUIDED_TOUR_STEPS.BIND_OTHER_FORM_WIDGETS\n    ) {\n      if (isCountryInputSelected) {\n        if (!countryInputBound) {\n          showIndicator(`[data-guided-tour-iid='defaultText']`, \"top\", {\n            top: 20,\n            left: 0,\n          });\n        } else {\n          hideIndicator();\n        }\n      }\n    }\n  }, [step, hadReachedStep, countryInputBound, isCountryInputSelected]);\n\n  // Show success message\n  useEffect(() => {\n    if (\n      step === GUIDED_TOUR_STEPS.BIND_OTHER_FORM_WIDGETS &&\n      hadReachedStep <= GUIDED_TOUR_STEPS.BIND_OTHER_FORM_WIDGETS\n    ) {\n      if (meta.completedSubSteps.length === 1) {\n        hideIndicator();\n      }\n      if (meta.completedSubSteps.length === 2) {\n        dispatch(markStepComplete());\n      }\n    }\n  }, [step, meta.completedSubSteps.length, hadReachedStep]);\n\n  // 6\n  useEffect(() => {\n    if (\n      step === GUIDED_TOUR_STEPS.ADD_BUTTON_WIDGET &&\n      hadReachedStep <= GUIDED_TOUR_STEPS.ADD_BUTTON_WIDGET &&\n      !showInfoMessage\n    ) {\n      if (buttonWidgetPresent) {\n        dispatch(updateButtonWidgetText());\n        dispatch(markStepComplete());\n      }\n    }\n  }, [step, buttonWidgetPresent, showInfoMessage]);\n\n  // 8\n  useEffect(() => {\n    if (\n      step === GUIDED_TOUR_STEPS.BUTTON_ONSUCCESS_BINDING &&\n      hadReachedStep <= GUIDED_TOUR_STEPS.BUTTON_ONSUCCESS_BINDING\n    ) {\n      if (buttonWidgetSuccessBinding) {\n        dispatch(markStepComplete());\n        hideIndicator();\n      } else {\n        showIndicator(`[data-guided-tour-iid='onSuccess']`, \"top\", {\n          top: 20,\n          left: 0,\n        });\n      }\n    }\n  }, [step, hadReachedStep, buttonWidgetSuccessBinding]);\n\n  useEffect(() => {\n    if (step === GUIDED_TOUR_STEPS.DEPLOY) {\n      if (isDeployed) {\n        hideIndicator();\n        dispatch(enableGuidedTour(false));\n      }\n    }\n  }, [step, isDeployed]);\n\n  return meta;\n}\n\nexport default useComputeCurrentStep;\n","import {\n  setUpTourApp,\n  showInfoMessage,\n  toggleLoader,\n} from \"actions/onboardingActions\";\nimport { Button, getTypographyByKey, Icon, IconSize } from \"design-system-old\";\nimport { isArray } from \"lodash\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport lottie, { AnimationItem } from \"lottie-web\";\nimport indicator from \"assets/lottie/guided-tour-tick-mark.json\";\nimport {\n  getCurrentStep,\n  getQueryAction,\n  isExploringSelector,\n  loading,\n  showInfoMessageSelector,\n  showSuccessMessage,\n} from \"selectors/onboardingSelectors\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { GUIDED_TOUR_STEPS, Steps } from \"./constants\";\nimport useComputeCurrentStep from \"./useComputeCurrentStep\";\nimport {\n  BUTTON_TEXT,\n  COMPLETE,\n  CONTINUE,\n  createMessage,\n  DESCRIPTION,\n  PROCEED,\n  PROCEED_TO_NEXT_STEP,\n  TITLE,\n} from \"@appsmith/constants/messages\";\n\nconst GuideWrapper = styled.div`\n  margin-bottom: ${(props) => props.theme.spaces[4]}px;\n  user-select: text;\n\n  code {\n    font-size: 16px;\n  }\n`;\n\nconst CardWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  border-bottom: 1px solid\n    ${(props) => props.theme.colors.guidedTour.card.borderBottom};\n  flex-direction: column;\n  background: ${(props) => props.theme.colors.guidedTour.card.background};\n`;\n\nconst TitleWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`;\n\nconst Title = styled.span`\n  ${getTypographyByKey(\"h2\")}\n  font-weight: 600;\n  color: #000000;\n  display: flex;\n  flex: 1;\n\n  &.success-message {\n    margin-right: ${(props) => props.theme.spaces[4]}px;\n  }\n`;\n\nconst StepCount = styled.div`\n  background: ${(props) => props.theme.colors.guidedTour.stepCountBackground};\n  color: white;\n  ${getTypographyByKey(\"h5\")};\n  height: 24px;\n  width: 24px;\n  border-radius: 12px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: ${(props) => props.theme.spaces[3]}px;\n`;\n\nconst Description = styled.span<{ addLeftSpacing?: boolean }>`\n  font-size: 16px;\n  line-height: 19px;\n\n  letter-spacing: -0.24px;\n  padding-left: ${(props) => (props.addLeftSpacing ? `20px` : \"0px\")};\n  margin-top: ${(props) => props.theme.spaces[3]}px;\n  flex: 1;\n  display: flex;\n`;\n\nconst UpperContent = styled.div`\n  padding: ${(props) => props.theme.spaces[9]}px\n    ${(props) => props.theme.spaces[7]}px;\n  flex-direction: column;\n  display: flex;\n`;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  gap: 50px;\n  align-items: center;\n`;\n\nconst GuideButton = styled(Button)<{ isVisible?: boolean }>`\n  padding: ${(props) => props.theme.spaces[0]}px\n    ${(props) => props.theme.spaces[6]}px;\n  height: 38px;\n  ${getTypographyByKey(\"btnMedium\")};\n  visibility: ${({ isVisible = true }) => (isVisible ? \"visible\" : \"hidden\")};\n`;\n\nconst SubContentWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: row;\n  }\n  .count {\n    font-size: 14px;\n    font-weight: 600;\n    text-align: center;\n\n    .complete {\n      font-weight: 400;\n      letter-spacing: 0.8px;\n    }\n  }\n`;\n\nconst Hint = styled.div`\n  background: #ffffff;\n  color: #090707;\n  padding: ${(props) => props.theme.spaces[8] + 1}px\n    ${(props) => props.theme.spaces[11]}px;\n  margin-top: ${(props) => props.theme.spaces[9]}px;\n  display: flex;\n  align-items: center;\n  border: 1px solid\n    ${(props) => props.theme.colors.guidedTour.cancelButton.color};\n  box-shadow: 0px 0px 24px -4px rgba(16, 24, 40, 0.1),\n    0px 8px 8px -4px rgba(16, 24, 40, 0.04);\n\n  .align-vertical {\n    flex-direction: column;\n  }\n\n  .inner-wrapper {\n    flex: 1;\n  }\n\n  .hint-text {\n    font-size: 16px;\n  }\n\n  .hint-button {\n    margin-top: ${(props) => props.theme.spaces[6]}px;\n  }\n\n  .hint-steps {\n    display: flex;\n    margin-top: ${(props) => props.theme.spaces[5]}px;\n  }\n\n  .strike {\n    text-decoration: line-through;\n    opacity: 0.5;\n  }\n\n  .hint-steps-text {\n    margin-left: ${(props) => props.theme.spaces[4]}px;\n  }\n`;\n\nconst HintTextWrapper = styled.div`\n  flex-direction: row;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  img {\n    height: 85px;\n    width: 186px;\n    box-shadow: 0px 4px 8px -2px rgba(16, 24, 40, 0.1),\n      0px 2px 4px -2px rgba(16, 24, 40, 0.06);\n  }\n`;\n\nconst SuccessMessageWrapper = styled.div`\n  display: flex;\n  background: white;\n  flex-direction: column;\n  border: 1px solid\n    ${(props) => props.theme.colors.guidedTour.cancelButton.color};\n  box-shadow: 0px 0px 24px -4px rgba(16, 24, 40, 0.1),\n    0px 8px 8px -4px rgba(16, 24, 40, 0.04);\n\n  .wrapper {\n    padding: ${(props) => props.theme.spaces[2]}px\n      ${(props) => props.theme.spaces[11]}px;\n    display: flex;\n  }\n  .info-wrapper {\n    padding: 16px 24px;\n    align-items: center;\n\n    svg {\n      height: 40px;\n      width: 40px;\n    }\n  }\n\n  .lottie-wrapper {\n    height: 59px;\n    weight: 59px;\n  }\n  .title-wrapper {\n    display: flex;\n    flex: 1;\n    align-items: center;\n    justify-content: space-between;\n  }\n  .info {\n    padding-left: ${(props) => props.theme.spaces[7]}px;\n    display: block;\n    padding-right: 64px;\n    margin-top: 0px;\n    line-height: 24px;\n    font-size: 18px;\n  }\n`;\n\nfunction InitialContent() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(loading);\n  const queryAction = useSelector(getQueryAction);\n\n  const setupFirstStep = () => {\n    dispatch(toggleLoader(true));\n    dispatch(setUpTourApp());\n  };\n\n  return (\n    <div>\n      <ContentWrapper>\n        <SubContentWrapper>\n          <Title>{createMessage(TITLE)}</Title>\n          <Description>{createMessage(DESCRIPTION)}</Description>\n        </SubContentWrapper>\n        <GuideButton\n          className=\"t--start-building\"\n          isLoading={isLoading}\n          isVisible={!queryAction?.isLoading && !!queryAction?.data}\n          onClick={setupFirstStep}\n          tag=\"button\"\n          text={createMessage(BUTTON_TEXT)}\n        />\n      </ContentWrapper>\n      <Hint>\n        <span className=\"hint-text\">\n          The app is connected to a Postgres database with customers data called{\" \"}\n          <b>Customers DB</b>.\n        </span>\n      </Hint>\n    </div>\n  );\n}\n\nfunction GuideStepsContent(props: {\n  currentStep: number;\n  showInfoMessage: boolean;\n}) {\n  const meta = useComputeCurrentStep(props.showInfoMessage);\n  const content = Steps[props.currentStep];\n  const [hintCount, setHintCount] = useState(0);\n  const currentHint = content.hints[hintCount]\n    ? content.hints[hintCount]\n    : content.hints[0];\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setHintCount(0);\n  }, [props.currentStep]);\n\n  useEffect(() => {\n    setHintCount(meta.hintCount);\n  }, [meta.hintCount]);\n\n  const hintSteps = currentHint.steps;\n\n  const hintButtonOnClick = () => {\n    if (currentHint.button && currentHint.button.onClick) {\n      currentHint.button.onClick(dispatch);\n    }\n    setHintCount((count) => count + 1);\n  };\n\n  return (\n    <div data-cy={\"guided-tour-banner\"}>\n      <ContentWrapper>\n        <SubContentWrapper>\n          <div className=\"header\">\n            <TitleWrapper>\n              <StepCount>{props.currentStep}</StepCount>\n              <Title>{content.title}</Title>\n            </TitleWrapper>\n            <div className=\"count\">\n              {props.currentStep - 1}/{GUIDED_TOUR_STEPS.DEPLOY}\n              {\"  \"}\n              <span className=\"complete\">{createMessage(COMPLETE)}</span>\n            </div>\n          </div>\n          {content.description && (\n            <Description>{content.description}</Description>\n          )}\n        </SubContentWrapper>\n      </ContentWrapper>\n      <Hint>\n        <div className=\"inner-wrapper hint-text\">\n          <HintTextWrapper>\n            <div>{currentHint.text}</div>\n            {currentHint.image && <img src={currentHint.image} />}\n            {currentHint.button && (\n              <GuideButton\n                className=\"t--hint-button\"\n                onClick={hintButtonOnClick}\n                tag=\"button\"\n                text={createMessage(PROCEED)}\n              />\n            )}\n          </HintTextWrapper>\n          {isArray(hintSteps) &&\n            hintSteps.length &&\n            hintSteps.map((step, index) => {\n              const completed = meta.completedSubSteps.includes(index);\n              const className = \"hint-steps\" + (completed ? \" strike\" : \"\");\n\n              return (\n                <div className={className} key={step?.toString()}>\n                  <Icon\n                    fillColor={completed ? \"#03B365\" : \"#716E6E\"}\n                    name={completed ? \"oval-check-fill\" : \"oval-check\"}\n                    size={IconSize.XXL}\n                  />\n                  <span className=\"hint-steps-text\">{hintSteps[index]}</span>\n                </div>\n              );\n            })}\n        </div>\n      </Hint>\n    </div>\n  );\n}\n\ntype CompletionContentProps = {\n  step: number;\n  showInfoMessage: boolean;\n};\n\nfunction CompletionContent(props: CompletionContentProps) {\n  const [showSuccess, setShowSuccess] = useState(!props.showInfoMessage);\n  const [showSuccessButton, setShowSuccessButton] = useState(false);\n  const info = Steps[props.step].info;\n  const success = Steps[props.step].success;\n  const dispatch = useDispatch();\n\n  const tickMarkRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    let anim: AnimationItem;\n    if (showSuccess) {\n      anim = lottie.loadAnimation({\n        animationData: indicator,\n        autoplay: true,\n        container: tickMarkRef?.current as HTMLDivElement,\n        renderer: \"svg\",\n        loop: false,\n      });\n    }\n\n    return () => {\n      anim?.destroy();\n    };\n  }, [tickMarkRef?.current, showSuccess]);\n\n  const onSuccessButtonClick = () => {\n    setShowSuccess(false);\n    success?.onClick && success?.onClick(dispatch);\n\n    if (info) {\n      // We skip showing success message again\n      dispatch(showInfoMessage());\n    }\n  };\n\n  useEffect(() => {\n    if (success?.timed && showSuccess) {\n      setTimeout(() => {\n        setShowSuccessButton(true);\n      }, 2000);\n    }\n  }, [success?.timed, showSuccess]);\n\n  const onInfoButtonClick = () => {\n    info?.onClick(dispatch);\n  };\n\n  if (showSuccess) {\n    return (\n      <SuccessMessageWrapper>\n        <div className=\"wrapper\">\n          <div className=\"lottie-wrapper\" ref={tickMarkRef} />\n          <div className=\"title-wrapper\">\n            <Title className=\"success-message\">\n              {Steps[props.step].success?.text}\n            </Title>\n            {/* Show the button after a delay */}\n            <GuideButton\n              className=\"t--success-button\"\n              isVisible={showSuccessButton}\n              onClick={onSuccessButtonClick}\n              tag=\"button\"\n              text={success?.buttonText ?? createMessage(CONTINUE)}\n            />\n          </div>\n        </div>\n      </SuccessMessageWrapper>\n    );\n  } else {\n    return (\n      <SuccessMessageWrapper>\n        <div className=\"wrapper info-wrapper\">\n          <Icon fillColor=\"#F86A2B\" name={info?.icon} size={IconSize.XXXXL} />\n\n          <Description className=\"info\">{info?.text}</Description>\n          <GuideButton\n            className=\"t--info-button\"\n            onClick={onInfoButtonClick}\n            tag=\"button\"\n            text={info?.buttonText ?? createMessage(PROCEED_TO_NEXT_STEP)}\n          />\n        </div>\n      </SuccessMessageWrapper>\n    );\n  }\n}\n\nexport type GuideBody = {\n  exploring: boolean;\n  step: number;\n  showInfoMessage: boolean;\n};\n\nfunction GuideBody(props: GuideBody) {\n  const successMessage = useSelector(showSuccessMessage);\n\n  if (props.exploring) {\n    return <InitialContent />;\n  } else if (successMessage || props.showInfoMessage) {\n    return (\n      <CompletionContent\n        showInfoMessage={props.showInfoMessage}\n        step={props.step}\n      />\n    );\n  } else {\n    return (\n      <GuideStepsContent\n        currentStep={props.step}\n        showInfoMessage={props.showInfoMessage}\n      />\n    );\n  }\n}\n\ntype GuideProps = {\n  className?: string;\n};\n// Guided tour steps\nfunction Guide(props: GuideProps) {\n  const exploring = useSelector(isExploringSelector);\n  const step = useSelector(getCurrentStep);\n  const showInfoMessage = useSelector(showInfoMessageSelector);\n\n  return (\n    <GuideWrapper className={props.className}>\n      <CardWrapper>\n        <UpperContent>\n          <GuideBody\n            exploring={exploring}\n            showInfoMessage={showInfoMessage}\n            step={step}\n          />\n        </UpperContent>\n      </CardWrapper>\n    </GuideWrapper>\n  );\n}\n\nexport default Guide;\n","import useWidgetFocus from \"./useWidgetFocus\";\n\nexport default useWidgetFocus;\n","import * as Sentry from \"@sentry/react\";\nimport log from \"loglevel\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport WidgetFactory from \"utils/WidgetFactory\";\nimport { CanvasWidgetStructure } from \"widgets/constants\";\n\nimport { RenderModes } from \"constants/WidgetConstants\";\nimport { useSelector } from \"react-redux\";\nimport { getSelectedAppTheme } from \"selectors/appThemingSelectors\";\nimport { previewModeSelector } from \"selectors/editorSelectors\";\nimport useWidgetFocus from \"utils/hooks/useWidgetFocus\";\n\ninterface CanvasProps {\n  widgetsStructure: CanvasWidgetStructure;\n  pageId: string;\n  canvasWidth: number;\n}\n\nconst Container = styled.section<{\n  background: string;\n  width: number;\n}>`\n  background: ${({ background }) => background};\n  width: ${(props) => props.width}px;\n`;\n\nconst Canvas = (props: CanvasProps) => {\n  const { canvasWidth } = props;\n  const isPreviewMode = useSelector(previewModeSelector);\n  const selectedTheme = useSelector(getSelectedAppTheme);\n\n  /**\n   * background for canvas\n   */\n  let backgroundForCanvas;\n\n  if (isPreviewMode) {\n    backgroundForCanvas = \"initial\";\n  } else {\n    backgroundForCanvas = selectedTheme.properties.colors.backgroundColor;\n  }\n\n  const focusRef = useWidgetFocus();\n\n  try {\n    return (\n      <Container\n        background={backgroundForCanvas}\n        className=\"relative mx-auto t--canvas-artboard pb-52\"\n        data-testid=\"t--canvas-artboard\"\n        id=\"art-board\"\n        ref={focusRef}\n        width={canvasWidth}\n      >\n        {props.widgetsStructure.widgetId &&\n          WidgetFactory.createWidget(\n            props.widgetsStructure,\n            RenderModes.CANVAS,\n          )}\n      </Container>\n    );\n  } catch (error) {\n    log.error(\"Error rendering DSL\", error);\n    Sentry.captureException(error);\n    return null;\n  }\n};\n\nexport default Canvas;\n","// import { ReactComponent as CanvasResizer } from \"assets/icons/ads/app-icons/canvas-resizer.svg\";\nimport React, { ReactNode, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport {\n  getCanvasWidth,\n  // getCurrentApplicationLayout,\n  // getCurrentAppPositioningType,\n  getCurrentPageId,\n  getIsFetchingPage,\n  getViewModePageList,\n  previewModeSelector,\n  showCanvasTopSectionSelector,\n} from \"selectors/editorSelectors\";\nimport styled from \"styled-components\";\nimport { getCanvasClassName } from \"utils/generators\";\n\nimport { forceOpenWidgetPanel } from \"actions/widgetSidebarActions\";\nimport classNames from \"classnames\";\nimport Centered from \"components/designSystems/appsmith/CenteredWrapper\";\nimport { IconSize, Spinner } from \"design-system-old\";\nimport equal from \"fast-deep-equal/es6\";\nimport { WidgetGlobaStyles } from \"globalStyles/WidgetGlobalStyles\";\nimport { useDispatch } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport {\n  getAppThemeIsChanging,\n  getSelectedAppTheme,\n} from \"selectors/appThemingSelectors\";\nimport { getCanvasWidgetsStructure } from \"selectors/entitiesSelector\";\nimport { getCurrentThemeDetails } from \"selectors/themeSelectors\";\nimport {\n  // AUTOLAYOUT_RESIZER_WIDTH_BUFFER,\n  useDynamicAppLayout,\n} from \"utils/hooks/useDynamicAppLayout\";\nimport useGoogleFont from \"utils/hooks/useGoogleFont\";\n// import { layoutConfigurations } from \"constants/WidgetConstants\";\n// import { AppPositioningTypes } from \"reducers/entityReducers/pageListReducer\";\nimport Canvas from \"../Canvas\";\n\n// const AutoLayoutCanvasResizer = styled.div`\n//   position: sticky;\n//   cursor: col-resize;\n//   width: 2px;\n//   height: 100%;\n//   display: flex;\n//   background: #d9d9d9;\n//   align-items: center;\n//   justify-content: flex-start;\n//   z-index: 2;\n//   transition: width 300ms ease;\n//   transition: background 300ms ease;\n//   .canvas-resizer-icon {\n//     border-left: 2px solid;\n//     border-color: #d7d7d7;\n//     transition: border 300ms ease;\n//     margin-left: 2px;\n//     & > svg {\n//       fill: #d7d7d7;\n//       transition: fill 300ms ease;\n//     }\n//   }\n//   &:hover,\n//   &:active {\n//     width: 3px;\n//     transition: width 300ms ease;\n//     background: #ff9b4e;\n//     transition: background 300ms ease;\n//     .canvas-resizer-icon {\n//       border-color: #ff9b4e;\n//       transition: border 300ms ease;\n//       & > svg {\n//         fill: #ff9b4e;\n//         transition: fill 300ms ease;\n//       }\n//     }\n//   }\n// `;\nconst Container = styled.section<{\n  background: string;\n}>`\n  width: 100%;\n  position: relative;\n  overflow-x: auto;\n  overflow-y: auto;\n  background: ${({ background }) => background};\n\n  &:before {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    pointer-events: none;\n  }\n`;\n\nfunction CanvasContainer() {\n  const dispatch = useDispatch();\n  const currentPageId = useSelector(getCurrentPageId);\n  const isFetchingPage = useSelector(getIsFetchingPage);\n  const canvasWidth = useSelector(getCanvasWidth);\n  const widgetsStructure = useSelector(getCanvasWidgetsStructure, equal);\n  const pages = useSelector(getViewModePageList);\n  const theme = useSelector(getCurrentThemeDetails);\n  const isPreviewMode = useSelector(previewModeSelector);\n  const selectedTheme = useSelector(getSelectedAppTheme);\n  const params = useParams<{ applicationId: string; pageId: string }>();\n  const shouldHaveTopMargin = !isPreviewMode || pages.length > 1;\n  const isAppThemeChanging = useSelector(getAppThemeIsChanging);\n  const showCanvasTopSection = useSelector(showCanvasTopSectionSelector);\n\n  const isLayoutingInitialized = useDynamicAppLayout();\n  const isPageInitializing = isFetchingPage || !isLayoutingInitialized;\n  useEffect(() => {\n    return () => {\n      dispatch(forceOpenWidgetPanel(false));\n    };\n  }, []);\n\n  const fontFamily = useGoogleFont(selectedTheme.properties.fontFamily.appFont);\n\n  let node: ReactNode;\n  const pageLoading = (\n    <Centered>\n      <Spinner />\n    </Centered>\n  );\n\n  if (isPageInitializing) {\n    node = pageLoading;\n  }\n\n  if (!isPageInitializing && widgetsStructure) {\n    node = (\n      <Canvas\n        canvasWidth={canvasWidth}\n        pageId={params.pageId}\n        widgetsStructure={widgetsStructure}\n      />\n    );\n  }\n  // const appPositioningType = useSelector(getCurrentAppPositioningType);\n  // const appLayout = useSelector(getCurrentApplicationLayout);\n  // useEffect(() => {\n  //   if (appPositioningType === AppPositioningTypes.AUTO) {\n  //     let buffer = 0;\n  //     const ele: any = document.getElementById(\"canvas-viewport\");\n  //     if (isPreviewMode) {\n  //       ele.style.width = \"inherit\";\n  //       buffer = AUTOLAYOUT_RESIZER_WIDTH_BUFFER;\n  //     } else {\n  //       ele.style.width = \"100%\";\n  //     }\n  //     if (appLayout?.type === \"FLUID\") {\n  //       const smallestWidth = layoutConfigurations.MOBILE.minWidth;\n  //       // Query the element\n  //       const ele: any = document.getElementById(\"canvas-viewport\");\n  //       let needsInitiation = true;\n  //       let initialWidth = ele.offsetWidth;\n  //       // The current position of mouse\n  //       let x = 0;\n  //       // let y = 0;\n\n  //       // The dimension of the element\n  //       let w = 0;\n  //       // let h = 0;\n  //       let events: any = [];\n\n  //       // Handle the mousedown event\n  //       // that's triggered when user drags the resizer\n  //       const mouseDownHandler = function(e: any) {\n  //         if (needsInitiation) {\n  //           initialWidth = ele.offsetWidth;\n  //           needsInitiation = false;\n  //         }\n  //         // Get the current mouse position\n  //         x = e.clientX;\n  //         // y = e.clientY;\n\n  //         // Calculate the dimension of element\n  //         const styles = window.getComputedStyle(ele);\n  //         w = parseInt(styles.width, 10) + buffer;\n  //         // h = parseInt(styles.height, 10);\n  //         const mouseMove = (e: any) => mouseMoveHandler(e);\n  //         events.push(mouseMove);\n  //         // Attach the listeners to `document`\n  //         document.addEventListener(\"mousemove\", mouseMove);\n  //         document.addEventListener(\"mouseup\", mouseUpHandler);\n  //         // e.stopPropagation();\n  //       };\n\n  //       const mouseMoveHandler = function(e: any) {\n  //         // How far the mouse has been moved\n  //         // const multiplier = rightHandle ? 2 : -2;\n  //         const multiplier = 2;\n  //         const dx = (e.clientX - x) * multiplier;\n  //         if (initialWidth >= w + dx && smallestWidth <= w + dx) {\n  //           // Adjust the dimension of element\n  //           ele.style.width = `${w + dx}px`;\n  //         }\n  //         if (initialWidth < w + dx) {\n  //           ele.style.width = `${initialWidth}px`;\n  //         }\n  //         if (smallestWidth > w + dx) {\n  //           ele.style.width = `${smallestWidth}px`;\n  //         }\n  //         // e.stopPropagation();\n  //       };\n\n  //       const mouseUpHandler = function(e: any) {\n  //         // Remove the handlers of `mousemove` and `mouseup`\n  //         mouseMoveHandler(e);\n  //         document.removeEventListener(\"mousemove\", events[0] as any);\n  //         document.removeEventListener(\"mouseup\", mouseUpHandler);\n  //         events = [];\n  //       };\n  //       const rightResizer: any = ele.querySelectorAll(\".resizer-right\")[0];\n  //       const rightMove = (e: any) => mouseDownHandler(e);\n  //       rightResizer.addEventListener(\"mousedown\", rightMove);\n\n  //       return () => {\n  //         rightResizer.removeEventListener(\"mousedown\", rightMove);\n  //       };\n  //     }\n  //   }\n  // }, [appLayout, isPreviewMode, currentPageId, appPositioningType]);\n\n  // calculating exact height to not allow scroll at this component,\n  // calculating total height minus margin on top, top bar and bottom bar\n  const heightWithTopMargin = `calc(100vh - 2.25rem - ${theme.smallHeaderHeight} - ${theme.bottomBarHeight})`;\n  return (\n    <Container\n      background={\n        isPreviewMode\n          ? selectedTheme.properties.colors.backgroundColor\n          : \"initial\"\n      }\n      className={classNames({\n        [`${getCanvasClassName()} scrollbar-thin`]: true,\n        \"mt-0\": !shouldHaveTopMargin,\n        \"mt-4\": showCanvasTopSection,\n        \"mt-8\": shouldHaveTopMargin && !showCanvasTopSection,\n      })}\n      id={\"canvas-viewport\"}\n      key={currentPageId}\n      style={{\n        height: shouldHaveTopMargin ? heightWithTopMargin : \"100vh\",\n        fontFamily: fontFamily,\n      }}\n    >\n      <WidgetGlobaStyles\n        fontFamily={selectedTheme.properties.fontFamily.appFont}\n        primaryColor={selectedTheme.properties.colors.primaryColor}\n      />\n      {isAppThemeChanging && (\n        <div className=\"fixed top-0 bottom-0 left-0 right-0 flex items-center justify-center bg-white/70 z-[2]\">\n          <Spinner size={IconSize.XXL} />\n        </div>\n      )}\n      {node}\n      {/* {appPositioningType === AppPositioningTypes.AUTO && (\n        <AutoLayoutCanvasResizer\n          className=\"resizer-right\"\n          draggable\n          onDragStart={(e) => {\n            e.preventDefault();\n            e.stopPropagation();\n          }}\n          style={{\n            left: isPreviewMode\n              ? `calc(100% - ${20}px)`\n              : `calc(100% - ${37}px)`,\n            bottom: isPreviewMode ? \"-3px\" : \"0%\",\n          }}\n        >\n          <div className=\"canvas-resizer-icon\">\n            <CanvasResizer />\n          </div>\n        </AutoLayoutCanvasResizer>\n      )} */}\n    </Container>\n  );\n}\n\nexport default CanvasContainer;\n","var _path, _path2, _path3, _path4, _path5;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgLayout(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#575757\",\n    d: \"M1.71426 6.10352e-05H22.2854C23.2321 6.10352e-05 23.9997 0.946727 23.9997 1.71433V7.71425C23.9997 8.66092 23.2321 9.42851 22.2854 9.42851H1.71426C0.767599 9.42851 0 8.48185 0 7.71425V1.71433C0 0.76766 0.767599 6.10352e-05 1.71426 6.10352e-05Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#575757\",\n    d: \"M1.71426 12.0001H10.2856C11.2323 12.0001 11.9999 12.9468 11.9999 13.7144V22.2857C11.9999 23.2324 11.2323 24 10.2856 24H1.71426C0.767599 24 0 23.0533 0 22.2857V13.7144C0 12.7677 0.767599 12.0001 1.71426 12.0001Z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#575757\",\n    d: \"M23.1428 12.8571H15.4287C15.1223 12.8571 14.8394 13.0205 14.6863 13.2856C14.5333 13.5508 14.5333 13.8776 14.6863 14.1428C14.8394 14.4079 15.1224 14.5713 15.4287 14.5713H23.1428C23.4492 14.5713 23.7321 14.4079 23.8852 14.1428C24.0382 13.8776 24.0382 13.5508 23.8852 13.2856C23.7321 13.0205 23.4491 12.8571 23.1428 12.8571Z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#575757\",\n    d: \"M23.1431 17.1421H15.4289C15.1226 17.1421 14.8396 17.3055 14.6866 17.5707C14.5335 17.8358 14.5335 18.1626 14.6866 18.4278C14.8396 18.693 15.1226 18.8564 15.4289 18.8564H23.1431C23.4494 18.8564 23.7324 18.693 23.8854 18.4278C24.0385 18.1626 24.0385 17.8358 23.8854 17.5707C23.7324 17.3055 23.4494 17.1421 23.1431 17.1421Z\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#575757\",\n    d: \"M23.1431 21.4298H15.4289C15.1226 21.4298 14.8396 21.5932 14.6866 21.8584C14.5335 22.1236 14.5335 22.4504 14.6866 22.7155C14.8396 22.9807 15.1226 23.1441 15.4289 23.1441H23.1431C23.4494 23.1441 23.7324 22.9807 23.8854 22.7155C24.0385 22.4504 24.0385 22.1236 23.8854 21.8584C23.7324 21.5932 23.4494 21.4298 23.1431 21.4298Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgLayout);\nexport default __webpack_public_path__ + \"static/media/layout.57490d20688758662b8d844bb1ac5471.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDatabase(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#575757\",\n    d: \"M1.60061 1.7004C0.525619 2.22465 0.000514106 2.7997 0.000514106 3.4246V5.14995C0.000514106 5.77485 0.525619 6.34985 1.60061 6.87461C2.67559 7.39972 4.12518 7.82469 5.97548 8.12475C7.82539 8.42482 9.82521 8.57485 12.0003 8.57485C14.1753 8.57485 16.1752 8.42482 18.025 8.12475C19.8753 7.82469 21.325 7.39972 22.3999 6.87461C23.4749 6.34951 24 5.77485 24 5.14961V3.42494C24 2.80004 23.4749 2.2247 22.3999 1.69993C21.3249 1.17482 19.8753 0.749852 18.025 0.450134C16.1751 0.15024 14.1756 0.000213623 12.0003 0.000213623C9.82517 0.000213623 7.82535 0.150244 5.97548 0.450305C4.15034 0.775147 2.67551 1.175 1.60061 1.7001V1.7004ZM0.000514106 13.2503V15.4251C0.000514106 16.0503 0.525619 16.6253 1.60061 17.1504C2.67559 17.6755 4.12518 18.1002 5.97548 18.4002C7.82539 18.7003 9.82521 18.8503 12.0003 18.8503C14.1753 18.8503 16.1752 18.7003 18.025 18.4002C19.8753 18.1002 21.325 17.6752 22.3999 17.1501C23.4749 16.625 24 16.0503 24 15.4251V13.1502C22.7502 13.9003 21.0751 14.4753 18.9251 14.8501C16.7748 15.2503 14.4752 15.4249 12.0002 15.4249C9.5251 15.4249 7.22536 15.2501 5.07521 14.8499C2.92524 14.4748 1.25014 13.9002 0.000342737 13.15L0.000514106 13.2503ZM0.000342737 18.2498V20.5749C0.000342737 21.1998 0.525448 21.7751 1.60043 22.2999C2.67542 22.825 4.12501 23.25 5.97531 23.5497C7.82522 23.8498 9.82504 23.9998 12.0001 23.9998C14.1751 23.9998 16.175 23.8498 18.0249 23.5497C19.8751 23.2496 21.3248 22.825 22.3997 22.2999C23.4747 21.7748 23.9998 21.1998 23.9998 20.5745V18.2997C22.75 19.0498 21.0749 19.6248 18.925 19.9999C16.775 20.375 14.4751 20.5749 12 20.5749C9.52493 20.5749 7.22519 20.375 5.07504 19.9999C2.92507 19.6248 1.24996 19.0498 0.000171369 18.2997L0.000342737 18.2498ZM0.000171369 8.00027V10.2748C0.000171369 10.8997 0.525277 11.4751 1.60026 11.9998C2.67525 12.5249 4.12484 12.9499 5.97514 13.25C7.82505 13.55 9.82487 13.7001 11.9999 13.7001C14.175 13.7001 16.1748 13.55 18.0247 13.25C19.8749 12.9499 21.3247 12.5249 22.3996 11.9998C23.4746 11.4747 23.9997 10.8997 23.9997 10.2748V7.99993C22.7499 8.75008 21.0748 9.32474 18.9248 9.69982C16.7748 10.0749 14.4749 10.2748 11.9998 10.2748C9.52476 10.2748 7.22502 10.0749 5.07487 9.69982C2.9249 9.32474 1.24979 8.74974 0 7.99993\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDatabase);\nexport default __webpack_public_path__ + \"static/media/database.b8be8434381a6e6cdded26c3af73d67e.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ReactComponent as Layout } from \"assets/images/layout.svg\";\nimport { ReactComponent as Database } from \"assets/images/database.svg\";\nimport { Text, TextType } from \"design-system-old\";\nimport { Colors } from \"constants/Colors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  previewModeSelector,\n  selectURLSlugs,\n  showCanvasTopSectionSelector,\n} from \"selectors/editorSelectors\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport history from \"utils/history\";\nimport { generateTemplateFormURL } from \"RouteBuilder\";\nimport { useParams } from \"react-router\";\nimport { ExplorerURLParams } from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport { showTemplatesModal as showTemplatesModalAction } from \"actions/templateActions\";\nimport {\n  createMessage,\n  GENERATE_PAGE,\n  GENERATE_PAGE_DESCRIPTION,\n  TEMPLATE_CARD_DESCRIPTION,\n  TEMPLATE_CARD_TITLE,\n} from \"@appsmith/constants/messages\";\nimport { selectFeatureFlags } from \"selectors/usersSelectors\";\nimport FeatureFlags from \"entities/FeatureFlags\";\nimport { deleteCanvasCardsState } from \"actions/editorActions\";\n\nconst Wrapper = styled.div`\n  margin: ${(props) =>\n    `${props.theme.spaces[7]}px ${props.theme.spaces[16]}px 0px ${props.theme.spaces[13]}px`};\n  display: flex;\n  flex-direction: row;\n  gap: ${(props) => props.theme.spaces[7]}px;\n`;\n\nconst Card = styled.div<{ centerAlign?: boolean }>`\n  padding: ${(props) =>\n    `${props.theme.spaces[5]}px ${props.theme.spaces[9]}px`};\n  border: solid 1px ${Colors.GREY_4};\n  background-color: ${Colors.WHITE};\n  flex: 1;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  ${(props) =>\n    props.centerAlign &&\n    `\n    justify-content: center;\n  `}\n  cursor: pointer;\n\n  svg {\n    height: 24px;\n    width: 24px;\n  }\n\n  &:hover svg path {\n    fill: var(--appsmith-color-orange-500);\n  }\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-left: ${(props) => props.theme.spaces[7]}px;\n`;\n\ntype routeId = {\n  applicationSlug: string;\n  pageId: string;\n  pageSlug: string;\n};\n\nconst goToGenPageForm = ({ pageId }: routeId): void => {\n  AnalyticsUtil.logEvent(\"GEN_CRUD_PAGE_ACTION_CARD_CLICK\");\n  history.push(generateTemplateFormURL({ pageId }));\n};\n\nfunction CanvasTopSection() {\n  const dispatch = useDispatch();\n  const showCanvasTopSection = useSelector(showCanvasTopSectionSelector);\n  const inPreviewMode = useSelector(previewModeSelector);\n  const { pageId } = useParams<ExplorerURLParams>();\n  const { applicationSlug, pageSlug } = useSelector(selectURLSlugs);\n  const featureFlags: FeatureFlags = useSelector(selectFeatureFlags);\n\n  useEffect(() => {\n    if (!showCanvasTopSection && !inPreviewMode) {\n      dispatch(deleteCanvasCardsState());\n    }\n  }, [showCanvasTopSection, inPreviewMode]);\n\n  if (!showCanvasTopSection) return null;\n\n  const showTemplatesModal = () => {\n    dispatch(showTemplatesModalAction(true));\n    AnalyticsUtil.logEvent(\"CANVAS_BLANK_PAGE_CTA_CLICK\", {\n      item: \"ADD_PAGE_FROM_TEMPLATE\",\n    });\n  };\n\n  const onGeneratePageClick = () => {\n    goToGenPageForm({ applicationSlug, pageSlug, pageId });\n    AnalyticsUtil.logEvent(\"CANVAS_BLANK_PAGE_CTA_CLICK\", {\n      item: \"GENERATE_PAGE\",\n    });\n  };\n\n  return (\n    <Wrapper data-cy=\"canvas-ctas\">\n      {!!featureFlags.TEMPLATES_PHASE_2 && (\n        <Card data-cy=\"start-from-template\" onClick={showTemplatesModal}>\n          <Layout />\n          <Content>\n            <Text color={Colors.COD_GRAY} type={TextType.P1}>\n              {createMessage(TEMPLATE_CARD_TITLE)}\n            </Text>\n            <Text type={TextType.P3}>\n              {createMessage(TEMPLATE_CARD_DESCRIPTION)}\n            </Text>\n          </Content>\n        </Card>\n      )}\n      <Card\n        centerAlign={!featureFlags.TEMPLATES_PHASE_2}\n        data-cy=\"generate-app\"\n        onClick={onGeneratePageClick}\n      >\n        <Database />\n        <Content>\n          <Text color={Colors.COD_GRAY} type={TextType.P1}>\n            {createMessage(GENERATE_PAGE)}\n          </Text>\n          <Text type={TextType.P3}>\n            {createMessage(GENERATE_PAGE_DESCRIPTION)}\n          </Text>\n        </Content>\n      </Card>\n    </Wrapper>\n  );\n}\n\nexport default CanvasTopSection;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { useSelector } from \"react-redux\";\n\nimport { getCurrentApplication } from \"selectors/applicationSelectors\";\nimport PageTabsContainer from \"pages/AppViewer/PageTabsContainer\";\nimport {\n  getViewModePageList,\n  previewModeSelector,\n} from \"selectors/editorSelectors\";\n\nfunction PageTabs() {\n  const pages = useSelector(getViewModePageList);\n  const isPreviewMode = useSelector(previewModeSelector);\n  const currentApplicationDetails = useSelector(getCurrentApplication);\n\n  return (\n    <div\n      className={classNames({\n        \"absolute top-0 z-1 w-full transform bg-gray-50 ease-in\": true,\n        \"translate-y-0 ease-in transition duration-300\": isPreviewMode,\n        \"-translate-y-full duration-0\": !isPreviewMode,\n      })}\n    >\n      <PageTabsContainer\n        currentApplicationDetails={currentApplicationDetails}\n        pages={pages}\n      />\n    </div>\n  );\n}\n\nexport default PageTabs;\n","import React, {\n  memo,\n  ReactElement,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport equal from \"fast-deep-equal/es6\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  EditableText,\n  EditInteractionKind,\n  SavingState,\n  TooltipComponent,\n} from \"design-system-old\";\nimport { updateWidgetName } from \"actions/propertyPaneActions\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { getExistingWidgetNames } from \"sagas/selectors\";\nimport { removeSpecialChars } from \"utils/helpers\";\nimport { useToggleEditWidgetName } from \"utils/hooks/dragResizeHooks\";\nimport useInteractionAnalyticsEvent from \"utils/hooks/useInteractionAnalyticsEvent\";\n\nimport { WidgetType } from \"constants/WidgetConstants\";\n\nimport { ReactComponent as BackIcon } from \"assets/icons/control/back.svg\";\nimport { inGuidedTour } from \"selectors/onboardingSelectors\";\nimport { toggleShowDeviationDialog } from \"actions/onboardingActions\";\nimport { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport { PopoverPosition } from \"@blueprintjs/core/lib/esnext/components/popover/popoverSharedProps\";\nimport { getIsCurrentWidgetRecentlyAdded } from \"selectors/propertyPaneSelectors\";\n\ntype PropertyPaneTitleProps = {\n  title: string;\n  widgetId?: string;\n  widgetType?: WidgetType;\n  updatePropertyTitle?: (title: string) => void;\n  onBackClick?: () => void;\n  isPanelTitle?: boolean;\n  actions: Array<{\n    tooltipContent: any;\n    icon: ReactElement;\n    tooltipPosition?: PopoverPosition;\n  }>;\n};\n\n/* eslint-disable react/display-name */\nconst PropertyPaneTitle = memo(function PropertyPaneTitle(\n  props: PropertyPaneTitleProps,\n) {\n  const dispatch = useDispatch();\n  const containerRef = useRef<HTMLDivElement>(null);\n  const updating = useSelector(\n    (state: AppState) => state.ui.editor.loadingStates.updatingWidgetName,\n  );\n  const isCurrentWidgetRecentlyAdded = useSelector(\n    getIsCurrentWidgetRecentlyAdded,\n  );\n  const guidedTourEnabled = useSelector(inGuidedTour);\n\n  const {\n    dispatchInteractionAnalyticsEvent,\n    eventEmitterRef,\n  } = useInteractionAnalyticsEvent<HTMLDivElement>();\n\n  // Pass custom equality check function. Shouldn't be expensive than the render\n  // as it is just a small array #perf\n  const widgets = useSelector(getExistingWidgetNames, equal);\n  const toggleEditWidgetName = useToggleEditWidgetName();\n  const [name, setName] = useState(props.title);\n  const valueRef = useRef(\"\");\n\n  // Update Property Title State\n  const { title, updatePropertyTitle } = props;\n  const updateNewTitle = useCallback(\n    (value: string) => {\n      if (guidedTourEnabled) {\n        dispatch(toggleShowDeviationDialog(true));\n        return;\n      }\n\n      if (\n        value &&\n        value.trim().length > 0 &&\n        value.trim() !== (title && title.trim())\n      ) {\n        updatePropertyTitle && updatePropertyTitle(value.trim());\n      }\n    },\n    [updatePropertyTitle, title, guidedTourEnabled],\n  );\n  // End\n\n  const updateTitle = useCallback(\n    (value?: string) => {\n      if (guidedTourEnabled) {\n        dispatch(toggleShowDeviationDialog(true));\n        return;\n      }\n      if (\n        value &&\n        value.trim().length > 0 &&\n        value.trim() !== props.title.trim() &&\n        valueRef.current !== value.trim() &&\n        props.widgetId\n      ) {\n        valueRef.current = value.trim();\n        if (widgets.indexOf(value.trim()) > -1) {\n          setName(props.title);\n        }\n        dispatch(updateWidgetName(props.widgetId, value.trim()));\n        toggleEditWidgetName(props.widgetId, false);\n      }\n    },\n    [\n      dispatch,\n      widgets,\n      setName,\n      props.widgetId,\n      props.title,\n      guidedTourEnabled,\n    ],\n  );\n\n  useEffect(() => {\n    if (props.isPanelTitle) return;\n    if (isCurrentWidgetRecentlyAdded) {\n      containerRef.current?.focus();\n    }\n\n    return () => {\n      dispatch({\n        type: ReduxActionTypes.REMOVE_FROM_RECENTLY_ADDED_WIDGET,\n        payload: props.widgetId,\n      });\n    };\n  }, []);\n\n  useEffect(() => {\n    setName(props.title);\n  }, [props.title]);\n\n  // Focus title on F2\n  const [isEditingDefault, setIsEditingDefault] = useState(\n    !props.isPanelTitle ? isCurrentWidgetRecentlyAdded : undefined,\n  );\n\n  function handleKeyDown(e: KeyboardEvent) {\n    if (e.key === \"F2\") {\n      setIsEditingDefault(true);\n    }\n  }\n\n  function handleOnBlurEverytime() {\n    setIsEditingDefault(false);\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => document.removeEventListener(\"keydown\", handleKeyDown);\n  }, []);\n\n  function handleTabKeyDown(e: React.KeyboardEvent) {\n    if (e.key === \"Tab\")\n      dispatchInteractionAnalyticsEvent({\n        key: e.key,\n        propertyType: \"LABEL\",\n        propertyName: \"widgetName\",\n        widgetType: props.widgetType,\n      });\n  }\n\n  return props.widgetId || props.isPanelTitle ? (\n    <div\n      className=\"flex items-center w-full px-4 py-3 space-x-1 fixed bg-white z-3\"\n      ref={eventEmitterRef}\n    >\n      {/* BACK BUTTON */}\n      {props.isPanelTitle && (\n        <button\n          className=\"p-1 hover:bg-warmGray-100 group t--property-pane-back-btn\"\n          onClick={props.onBackClick}\n        >\n          <BackIcon className=\"w-4 h-4 text-gray-500\" />\n        </button>\n      )}\n      {/* EDITABLE TEXT */}\n      <div\n        className=\"flex-grow\"\n        onKeyDown={handleTabKeyDown}\n        style={{ maxWidth: `calc(100% - 52px)` }}\n      >\n        <EditableText\n          className=\"flex-grow text-lg font-semibold t--property-pane-title\"\n          defaultValue={name}\n          editInteractionKind={EditInteractionKind.SINGLE}\n          fill\n          hideEditIcon\n          isEditingDefault={isEditingDefault}\n          onBlur={!props.isPanelTitle ? updateTitle : undefined}\n          onBlurEverytime={handleOnBlurEverytime}\n          onTextChanged={!props.isPanelTitle ? undefined : updateNewTitle}\n          placeholder={props.title}\n          savingState={updating ? SavingState.STARTED : SavingState.NOT_STARTED}\n          underline\n          valueTransform={!props.isPanelTitle ? removeSpecialChars : undefined}\n          wrapperRef={containerRef}\n        />\n      </div>\n\n      {/* ACTIONS */}\n      <div className=\"flex items-center space-x-1\">\n        {props.actions.map((value, index) => (\n          <TooltipComponent\n            content={value.tooltipContent}\n            hoverOpenDelay={200}\n            key={index}\n            position={value.tooltipPosition}\n          >\n            {value.icon}\n          </TooltipComponent>\n        ))}\n      </div>\n    </div>\n  ) : null;\n});\nexport default PropertyPaneTitle;\n","import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Colors } from \"constants/Colors\";\nimport { TabComponent, TabProp, TabTitle } from \"design-system-old\";\nimport { Tab, TabList, TabPanel, Tabs } from \"react-tabs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSelectedPropertyTabIndex } from \"selectors/editorContextSelectors\";\nimport { setSelectedPropertyTabIndex } from \"actions/editorContextActions\";\nimport { AppState } from \"@appsmith/reducers\";\n\nconst StyledTabComponent = styled(TabComponent)`\n  height: auto;\n\n  .react-tabs__tab-list {\n    display: none;\n  }\n\n  .react-tabs__tab-panel {\n    overflow: initial;\n    padding-bottom: 18px; // space for the BindingPrompt in case it shows at the last property\n  }\n`;\n\nconst StyledTabs = styled(Tabs)`\n  position: sticky;\n  top: 78px;\n  z-index: 3;\n  background: ${Colors.WHITE};\n  padding: 0px 12px;\n  border-bottom: 1px solid ${Colors.GREY_4};\n  padding-bottom: 1px;\n\n  .react-tabs__tab-list {\n    border: 0;\n    margin: 0;\n  }\n\n  .react-tabs__tab .tab-title {\n    font-weight: 500;\n    color: ${Colors.GRAY_700};\n  }\n\n  .react-tabs__tab {\n    border: 2px solid transparent;\n    bottom: -2px;\n  }\n\n  .react-tabs__tab--selected .tab-title {\n    color: ${Colors.GREY_900};\n  }\n\n  .react-tabs__tab:focus {\n    box-shadow: none;\n    &:after {\n      content: none;\n    }\n  }\n\n  .react-tabs__tab--selected {\n    border-width: 2px;\n    border-radius: 0;\n    border-color: transparent;\n    border-bottom: 2px solid var(--ads-color-brand);\n  }\n\n  .tab-title {\n    font-size: 12px;\n  }\n`;\n\ntype PropertyPaneTabProps = {\n  styleComponent: JSX.Element | null;\n  contentComponent: JSX.Element | null;\n  isPanelProperty?: boolean;\n  panelPropertyPath?: string;\n};\n\nexport function PropertyPaneTab(props: PropertyPaneTabProps) {\n  const dispatch = useDispatch();\n  const selectedIndex = useSelector((state: AppState) =>\n    getSelectedPropertyTabIndex(state, props.panelPropertyPath),\n  );\n\n  const setSelectedIndex = (index: number) => {\n    dispatch(setSelectedPropertyTabIndex(index, props.panelPropertyPath));\n  };\n\n  const tabs = useMemo(() => {\n    const arr: TabProp[] = [];\n    if (props.contentComponent) {\n      arr.push({\n        key: \"content\",\n        title: \"CONTENT\",\n        panelComponent: props.contentComponent,\n      });\n    }\n    if (props.styleComponent) {\n      arr.push({\n        key: \"style\",\n        title: \"STYLE\",\n        panelComponent: props.styleComponent,\n      });\n    }\n    return arr;\n  }, [props.styleComponent, props.contentComponent]);\n\n  return (\n    <>\n      <StyledTabs onSelect={setSelectedIndex} selectedIndex={selectedIndex}>\n        <TabList>\n          {props.contentComponent && (\n            <Tab>\n              <TabTitle className=\"tab-title\">CONTENT</TabTitle>\n            </Tab>\n          )}\n          {props.styleComponent && (\n            <Tab>\n              <TabTitle className=\"tab-title\">STYLE</TabTitle>\n            </Tab>\n          )}\n        </TabList>\n        {props.contentComponent && <TabPanel />}\n        {props.styleComponent && <TabPanel />}\n      </StyledTabs>\n      <StyledTabComponent selectedIndex={selectedIndex} tabs={tabs} />\n    </>\n  );\n}\n","import {\n  PropertyPaneConfig,\n  PropertyPaneControlConfig,\n  PropertyPaneSectionConfig,\n} from \"constants/PropertyControlConstants\";\nimport { debounce } from \"lodash\";\nimport { useCallback, useState } from \"react\";\nimport { appPositioningBasedPropertyFilter } from \"sagas/WidgetEnhancementHelpers\";\n\nexport function useSearchText(initialVal: string) {\n  const [searchText, setSearchText] = useState(initialVal);\n\n  const debouncedSetSearchText = useCallback(\n    debounce(\n      (text) => {\n        setSearchText(text.trim());\n      },\n      250,\n      {\n        maxWait: 1000,\n      },\n    ),\n    [setSearchText],\n  );\n\n  return { searchText, setSearchText: debouncedSetSearchText };\n}\n\nexport function evaluateHiddenProperty(\n  config: readonly PropertyPaneConfig[],\n  widgetProps: any,\n  shouldHidePropertyFn?: (propertyName: string) => boolean | undefined,\n) {\n  const finalConfig: PropertyPaneConfig[] = [];\n  for (const conf of config) {\n    const sectionConfig = conf as PropertyPaneSectionConfig;\n    const controlConfig = conf as PropertyPaneControlConfig;\n    if (sectionConfig.sectionName) {\n      const isSectionHidden =\n        sectionConfig.hidden &&\n        sectionConfig.hidden(\n          widgetProps,\n          sectionConfig.propertySectionPath || \"\",\n        );\n      if (!isSectionHidden) {\n        const children = evaluateHiddenProperty(\n          sectionConfig.children,\n          widgetProps,\n          shouldHidePropertyFn,\n        );\n        if (children.length > 0) {\n          finalConfig.push({\n            ...sectionConfig,\n            childrenId: children.map((configItem) => configItem.id).join(\"\"),\n            children,\n          });\n        }\n      }\n    } else if (controlConfig.controlType) {\n      const isControlHidden =\n        appPositioningBasedPropertyFilter(\n          widgetProps,\n          controlConfig.propertyName,\n        ) ||\n        (controlConfig.hidden &&\n          controlConfig.hidden(widgetProps, controlConfig.propertyName)) ||\n        (shouldHidePropertyFn &&\n          shouldHidePropertyFn(controlConfig.propertyName));\n      if (!isControlHidden) {\n        finalConfig.push(conf);\n      }\n    }\n  }\n  return finalConfig;\n}\n\nexport function updateConfigPaths(\n  config: PropertyPaneConfig[],\n  basePath: string,\n) {\n  return config.map((_childConfig) => {\n    const childConfig = Object.assign({}, _childConfig);\n    // TODO(abhinav): Figure out a better way to differentiate between section and control\n    if (\n      (childConfig as PropertyPaneSectionConfig).sectionName &&\n      childConfig.children\n    ) {\n      (childConfig as PropertyPaneSectionConfig).propertySectionPath = basePath;\n      childConfig.children = updateConfigPaths(childConfig.children, basePath);\n    } else {\n      (childConfig as PropertyPaneControlConfig).propertyName = `${basePath}.${\n        (childConfig as PropertyPaneControlConfig).propertyName\n      }`;\n    }\n    return childConfig;\n  });\n}\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { SearchVariant } from \"design-system-old\";\nimport { InputWrapper, SearchInput } from \"design-system-old\";\nimport { Colors } from \"constants/Colors\";\nimport { useSelector } from \"react-redux\";\nimport {\n  getShouldFocusPanelPropertySearch,\n  getShouldFocusPropertySearch,\n} from \"selectors/propertyPaneSelectors\";\nimport { isCurrentFocusOnInput } from \"utils/editorContextUtils\";\nimport { PROPERTY_SEARCH_INPUT_PLACEHOLDER } from \"@appsmith/constants/messages\";\n\nconst SearchInputWrapper = styled.div`\n  position: sticky;\n  top: 42px;\n  z-index: 3;\n  border: 1px solid ${Colors.GRAY_50};\n  :focus-within {\n    border-color: var(--appsmith-input-focus-border-color);\n  }\n`;\n\nconst StyledSearchInput = React.memo(styled(SearchInput)`\n  ${InputWrapper} {\n    background: ${Colors.GRAY_50};\n    padding: 0 8px;\n    height: 34px;\n  }\n`);\n\ntype PropertyPaneSearchInputProps = {\n  onTextChange: (text: string) => void;\n  isPanel?: boolean;\n};\n\nexport function PropertyPaneSearchInput(props: PropertyPaneSearchInputProps) {\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLDivElement>(null);\n  const shouldFocusSearch = useSelector(getShouldFocusPropertySearch);\n  const shouldFocusPanelSearch = useSelector(getShouldFocusPanelPropertySearch);\n  const isPanel = !!props.isPanel;\n\n  useEffect(() => {\n    // Checks if the property pane opened not because of focusing an input inside a widget\n    if (\n      shouldFocusSearch &&\n      // while the panel transition happens, focus will be happening twice. Once on the main pane and then on the panel\n      // The following check will make sure that the focus is only done once and prevents the UI jittering\n      isPanel === shouldFocusPanelSearch\n    ) {\n      setTimeout(\n        () => {\n          //checking for active element\n          //inside timeout to have updated active element\n          if (!isCurrentFocusOnInput()) {\n            wrapperRef.current?.focus();\n          }\n        },\n        // Layered panels like Column Panel's transition takes 300ms.\n        // To avoid UI jittering, we are delaying the focus by 300ms.\n        isPanel ? 300 : 0,\n      );\n    }\n  }, [shouldFocusSearch, shouldFocusPanelSearch, isPanel]);\n\n  const handleInputKeydown = useCallback((e: KeyboardEvent) => {\n    switch (e.key) {\n      case \"Escape\":\n        wrapperRef.current?.focus();\n        break;\n    }\n  }, []);\n\n  const handleWrapperKeydown = useCallback((e: React.KeyboardEvent) => {\n    switch (e.key) {\n      case \"Enter\":\n        inputRef.current?.focus();\n        break;\n    }\n  }, []);\n\n  useEffect(() => {\n    inputRef.current?.addEventListener(\"keydown\", handleInputKeydown);\n\n    return () => {\n      inputRef.current?.removeEventListener(\"keydown\", handleInputKeydown);\n    };\n  }, []);\n\n  return (\n    <SearchInputWrapper\n      className=\"t--property-pane-search-input-wrapper\"\n      onKeyDown={handleWrapperKeydown}\n      ref={wrapperRef}\n      tabIndex={0}\n    >\n      <StyledSearchInput\n        className=\"propertyPaneSearch\"\n        fill\n        onChange={props.onTextChange}\n        placeholder={PROPERTY_SEARCH_INPUT_PLACEHOLDER}\n        ref={inputRef}\n        tabIndex={-1}\n        variant={SearchVariant.BACKGROUND}\n      />\n    </SearchInputWrapper>\n  );\n}\n","import {\n  PropertyPaneConfig,\n  PropertyPaneControlConfig,\n  PropertyPaneSectionConfig,\n} from \"constants/PropertyControlConstants\";\nimport { debounce } from \"lodash\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\n\ninterface SearchResultType {\n  section: {\n    startsWith: PropertyPaneConfig[];\n    contains: PropertyPaneConfig[];\n  };\n  property: {\n    startsWith: PropertyPaneConfig[];\n    contains: PropertyPaneConfig[];\n  };\n}\n\ninterface PropertyPaneSearchAnalytics {\n  widgetType: string;\n  searchText: string;\n  widgetName: string;\n  searchPath: string;\n}\n\nexport const sendPropertyPaneSearchAnalytics = debounce(\n  (param: PropertyPaneSearchAnalytics) => {\n    if (param.searchText !== \"\")\n      AnalyticsUtil.logEvent(\"WIDGET_PROPERTY_SEARCH\", param);\n  },\n  1000,\n);\n\nfunction tokenSearch(text: string, searchQuery: string) {\n  const noMatch = {\n    startsWith: false,\n    contains: false,\n  };\n  if (!text) return noMatch;\n  // RegEx escaping taken from: https://github.com/tc39/proposal-regex-escaping/blob/main/polyfill.js\n  const escapedSearchQuery = searchQuery.replace(/[\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n  const regEx = new RegExp(`\\\\b${escapedSearchQuery}.*\\\\b`, \"i\");\n  let matchPosition = text.search(regEx);\n  if (matchPosition < 0) {\n    // if no match found, see if it matches by splitting the camel case properties such as 'onClick'\n    const caseBreakdown = text.replace(/([a-z0-9])([A-Z])/g, \"$1 $2\");\n    matchPosition = caseBreakdown.search(regEx);\n  }\n  if (matchPosition === 0) {\n    return {\n      startsWith: true,\n      contains: false,\n    };\n  } else if (matchPosition > 0) {\n    return {\n      startsWith: false,\n      contains: true,\n    };\n  }\n  return noMatch;\n}\n\nfunction computeChildrenIdAndInsertSection(\n  configArray: PropertyPaneConfig[],\n  ...sectionConfig: PropertyPaneSectionConfig[]\n) {\n  configArray.push(\n    ...sectionConfig.map((section) => {\n      if (section.childrenId)\n        return {\n          ...section,\n          childrenId: section.children.map((child) => child.id).join(\"\"),\n        };\n      return section;\n    }),\n  );\n}\n\nfunction search(\n  sectionConfigs: PropertyPaneSectionConfig[],\n  searchQuery: string,\n) {\n  const query = searchQuery.toLowerCase();\n  const searchResult: SearchResultType = {\n    section: {\n      startsWith: [],\n      contains: [],\n    },\n    property: {\n      startsWith: [],\n      contains: [],\n    },\n  };\n  for (const sectionConfig of sectionConfigs) {\n    const sectionConfigCopy: PropertyPaneSectionConfig = {\n      ...sectionConfig,\n      children: [],\n    };\n    const sectionName = sectionConfig.sectionName;\n    let isPropertyStartsWith = false;\n    const sectionNameMatch = tokenSearch(sectionName, query);\n    if (sectionNameMatch.startsWith) {\n      computeChildrenIdAndInsertSection(\n        searchResult.section.startsWith,\n        sectionConfig,\n      );\n    } else if (sectionNameMatch.contains) {\n      computeChildrenIdAndInsertSection(\n        searchResult.section.contains,\n        sectionConfig,\n      );\n    } else if (sectionConfig.children) {\n      // search through properties\n      const childResult: SearchResultType = {\n        section: {\n          startsWith: [],\n          contains: [],\n        },\n        property: {\n          startsWith: [],\n          contains: [],\n        },\n      };\n      let isEmpty = true;\n      for (const child of sectionConfig.children) {\n        if ((child as PropertyPaneControlConfig).invisible) {\n          continue;\n        }\n        if ((child as PropertyPaneControlConfig).label) {\n          const label = (child as PropertyPaneControlConfig).label;\n          const labelMatch = tokenSearch(label, query);\n          if (labelMatch.startsWith) {\n            isEmpty = false;\n            isPropertyStartsWith = true;\n            childResult.property.startsWith.push(child);\n          } else if (labelMatch.contains) {\n            isEmpty = false;\n            childResult.property.contains.push(child);\n          }\n        } else {\n          // search through nested section\n          const result = search([child as PropertyPaneSectionConfig], query);\n          if (result.section.startsWith.length > 0) {\n            isEmpty = false;\n            isPropertyStartsWith = true;\n            childResult.section.startsWith.push(...result.section.startsWith);\n          }\n          if (result.section.contains.length > 0) {\n            isEmpty = false;\n            isPropertyStartsWith = false;\n            childResult.section.contains.push(...result.section.contains);\n          }\n          if (result.property.startsWith.length > 0) {\n            isEmpty = false;\n            isPropertyStartsWith = true;\n            childResult.property.startsWith.push(...result.property.startsWith);\n          }\n          if (result.property.contains.length > 0) {\n            isEmpty = false;\n            isPropertyStartsWith = false;\n            childResult.property.contains.push(...result.property.contains);\n          }\n        }\n      }\n      if (!isEmpty) {\n        sectionConfigCopy.children = sortSearchResult(childResult);\n        if (isPropertyStartsWith) {\n          computeChildrenIdAndInsertSection(\n            searchResult.property.startsWith,\n            sectionConfigCopy,\n          );\n        } else {\n          computeChildrenIdAndInsertSection(\n            searchResult.property.contains,\n            sectionConfigCopy,\n          );\n        }\n      }\n    }\n  }\n  return searchResult;\n}\n\nfunction sortSearchResult(searchResult: SearchResultType) {\n  return [\n    ...searchResult.section.startsWith,\n    ...searchResult.property.startsWith,\n    ...searchResult.section.contains,\n    ...searchResult.property.contains,\n  ];\n}\n\nexport function searchPropertyPaneConfig(\n  config: PropertyPaneSectionConfig[],\n  searchQuery?: string,\n) {\n  if (!searchQuery) return config;\n  const searchResult = search(config, searchQuery);\n  return sortSearchResult(searchResult);\n}\n","import React, { useEffect, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { WidgetProps } from \"widgets/BaseWidget\";\nimport { PanelConfig } from \"constants/PropertyControlConstants\";\nimport PropertyControlsGenerator from \"./PropertyControlsGenerator\";\nimport { getWidgetPropsForPropertyPane } from \"selectors/propertyPaneSelectors\";\nimport { get, isNumber, isPlainObject, isString } from \"lodash\";\nimport { IPanelProps } from \"@blueprintjs/core\";\nimport { EditorTheme } from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport PropertyPaneTitle from \"./PropertyPaneTitle\";\nimport { PropertyPaneTab } from \"./PropertyPaneTab\";\nimport styled from \"styled-components\";\nimport { updateConfigPaths, useSearchText } from \"./helpers\";\nimport { PropertyPaneSearchInput } from \"./PropertyPaneSearchInput\";\nimport { sendPropertyPaneSearchAnalytics } from \"./propertyPaneSearch\";\nimport { unsetSelectedPropertyPanel } from \"actions/propertyPaneActions\";\n\nconst PanelWrapper = styled.div`\n  margin-top: 44px;\n  display: flex;\n  flex-flow: column;\n`;\n\nfunction PanelHeader(props: PanelHeaderProps) {\n  const dispatch = useDispatch();\n  const onBackClick = () => {\n    dispatch(unsetSelectedPropertyPanel(props.parentPropertyPath));\n    props.closePanel();\n  };\n  return (\n    <div\n      onClick={(e: any) => {\n        e.stopPropagation();\n      }}\n    >\n      <PropertyPaneTitle\n        actions={[]}\n        isPanelTitle\n        onBackClick={onBackClick}\n        title={props.title}\n        updatePropertyTitle={props.updatePropertyTitle}\n      />\n    </div>\n  );\n}\n\nexport function PanelPropertiesEditor(\n  props: PanelPropertiesEditorProps &\n    PanelPropertiesEditorPanelProps &\n    IPanelProps,\n) {\n  const widgetProperties: any = useSelector(getWidgetPropsForPropertyPane);\n\n  const {\n    closePanel,\n    panelConfig,\n    panelParentPropertyPath,\n    panelProps,\n    theme,\n  } = props;\n\n  // This could be the id of the parent to access the path\n  // For example: `someProperty[<thisValue>]`\n  // or the index of the parent to access the path\n  // For example: `someProperty.<thisValue>`\n  const currentIndex = useMemo(() => {\n    const parentProperty = get(widgetProperties, panelParentPropertyPath);\n    if (parentProperty) {\n      if (isPlainObject(parentProperty)) {\n        return panelProps[panelConfig.panelIdPropertyName];\n      } else if (Array.isArray(parentProperty)) {\n        const currentIndex = parentProperty.findIndex(\n          (entry) =>\n            panelProps[panelConfig.panelIdPropertyName] ===\n            entry[panelConfig.panelIdPropertyName],\n        );\n        return currentIndex;\n      }\n    }\n    return;\n  }, [widgetProperties, panelParentPropertyPath, panelProps, panelConfig]);\n\n  const panelConfigs = useMemo(() => {\n    if (currentIndex !== undefined && panelConfig.children) {\n      let path: string | undefined = undefined;\n      if (isString(currentIndex)) {\n        path = `${panelParentPropertyPath}.${currentIndex}`;\n      } else if (isNumber(currentIndex)) {\n        path = `${panelParentPropertyPath}[${currentIndex}]`;\n      }\n      const configChildren = [...panelConfig.children];\n      return path ? updateConfigPaths(configChildren, path) : configChildren;\n    }\n  }, [currentIndex, panelConfig, panelParentPropertyPath]);\n\n  const panelConfigsWithStyleAndContent = useMemo(() => {\n    if (\n      currentIndex !== undefined &&\n      panelConfig.contentChildren &&\n      panelConfig.styleChildren\n    ) {\n      let path: string | undefined = undefined;\n      if (isString(currentIndex)) {\n        path = `${panelParentPropertyPath}.${currentIndex}`;\n      } else if (isNumber(currentIndex)) {\n        path = `${panelParentPropertyPath}[${currentIndex}]`;\n      }\n      const contentChildren = [...panelConfig.contentChildren];\n      const styleChildren = [...panelConfig.styleChildren];\n      const searchConfig = [...(panelConfig.searchConfig || [])];\n      return {\n        content: path\n          ? updateConfigPaths(contentChildren, path)\n          : contentChildren,\n        style: path ? updateConfigPaths(styleChildren, path) : styleChildren,\n        searchConfig: path\n          ? updateConfigPaths(searchConfig, path)\n          : searchConfig,\n      };\n    }\n  }, [currentIndex, panelConfig, panelParentPropertyPath]);\n\n  const panel = useMemo(\n    () => ({\n      openPanel: props.openPanel,\n      closePanel: props.closePanel,\n    }),\n    [props.openPanel, props.closePanel],\n  );\n\n  useEffect(() => {\n    if (panelProps.propPaneId !== widgetProperties?.widgetId) {\n      props.closePanel();\n    }\n  }, [widgetProperties?.widgetId]);\n\n  const { searchText, setSearchText } = useSearchText(\"\");\n\n  /**\n   * Analytics for property pane Search\n   */\n  useEffect(() => {\n    const searchPath = `${panelParentPropertyPath}.${\n      panelProps[panelConfig.panelIdPropertyName]\n    }`;\n    sendPropertyPaneSearchAnalytics({\n      widgetType: widgetProperties?.type,\n      searchText,\n      widgetName: widgetProperties?.widgetName,\n      searchPath,\n    });\n  }, [searchText]);\n\n  if (!widgetProperties) return null;\n  const updatePropertyTitle = (title: string) => {\n    if (panelConfig.titlePropertyName) {\n      const propertiesToUpdate: Record<string, unknown> = {};\n      let path: string | undefined = undefined;\n      if (isString(currentIndex)) {\n        path = `${panelParentPropertyPath}.${currentIndex}.${panelConfig.titlePropertyName}`;\n      } else if (isNumber(currentIndex)) {\n        path = `${panelParentPropertyPath}[${currentIndex}].${panelConfig.titlePropertyName}`;\n      }\n      if (path) {\n        propertiesToUpdate[path] = title;\n        if (panelConfig.updateHook) {\n          const additionalPropertiesToUpdate = panelConfig.updateHook(\n            widgetProperties,\n            path,\n            title,\n          );\n          additionalPropertiesToUpdate?.forEach(\n            ({ propertyPath, propertyValue }) => {\n              propertiesToUpdate[propertyPath] = propertyValue;\n            },\n          );\n        }\n        props.onPropertiesChange(propertiesToUpdate);\n      }\n    }\n  };\n\n  const parentPropertyPath = `${\n    widgetProperties ? `${widgetProperties.widgetName}.` : \"\"\n  }${panelParentPropertyPath}`;\n\n  const panelPropertyPath = `${parentPropertyPath}.${\n    panelProps[panelConfig.titlePropertyName]\n  }`;\n\n  return (\n    <div className=\"w-full overflow-y-scroll h-full\">\n      <PanelHeader\n        closePanel={closePanel}\n        isEditable={panelConfig.editableTitle}\n        parentPropertyPath={parentPropertyPath}\n        propertyName={panelConfig.titlePropertyName}\n        title={panelProps[panelConfig.titlePropertyName]}\n        updatePropertyTitle={updatePropertyTitle}\n      />\n      {panelConfigsWithStyleAndContent?.content ||\n      panelConfigsWithStyleAndContent?.style ? (\n        <>\n          <PropertyPaneSearchInput isPanel onTextChange={setSearchText} />\n          {searchText.length > 0 ? (\n            <PanelWrapper>\n              <PropertyControlsGenerator\n                config={panelConfigsWithStyleAndContent.searchConfig}\n                id={widgetProperties.widgetId}\n                panel={panel}\n                panelPropertyPath={panelPropertyPath}\n                searchQuery={searchText}\n                theme={theme}\n                type={widgetProperties.type}\n              />\n            </PanelWrapper>\n          ) : (\n            <PropertyPaneTab\n              contentComponent={\n                panelConfigsWithStyleAndContent?.content.length > 0 ? (\n                  <PanelWrapper>\n                    <PropertyControlsGenerator\n                      config={panelConfigsWithStyleAndContent.content}\n                      id={widgetProperties.widgetId}\n                      isPanelProperty\n                      panel={panel}\n                      panelPropertyPath={panelPropertyPath}\n                      theme={theme}\n                      type={widgetProperties.type}\n                    />\n                  </PanelWrapper>\n                ) : null\n              }\n              isPanelProperty\n              panelPropertyPath={panelPropertyPath}\n              styleComponent={\n                panelConfigsWithStyleAndContent.style.length > 0 ? (\n                  <PanelWrapper>\n                    <PropertyControlsGenerator\n                      config={panelConfigsWithStyleAndContent.style}\n                      id={widgetProperties.widgetId}\n                      isPanelProperty\n                      panel={panel}\n                      panelPropertyPath={panelPropertyPath}\n                      theme={theme}\n                      type={widgetProperties.type}\n                    />\n                  </PanelWrapper>\n                ) : null\n              }\n            />\n          )}\n        </>\n      ) : (\n        panelConfigs && (\n          <PanelWrapper>\n            <PropertyControlsGenerator\n              config={panelConfigs}\n              id={widgetProperties.widgetId}\n              isPanelProperty\n              panel={panel}\n              panelPropertyPath={panelPropertyPath}\n              theme={theme}\n              type={widgetProperties.type}\n            />\n          </PanelWrapper>\n        )\n      )}\n    </div>\n  );\n}\n\ninterface PanelPropertiesEditorProps {\n  panelProps: any;\n  onPropertiesChange: (updates: Record<string, unknown>) => void;\n  panelParentPropertyPath: string;\n  theme: EditorTheme;\n}\n\ninterface PanelPropertiesEditorPanelProps {\n  panelConfig: PanelConfig;\n}\n\ninterface PanelHeaderProps {\n  isEditable: boolean;\n  widgetProperties?: WidgetProps;\n  parentPropertyPath: string;\n  title: string;\n  closePanel: () => void;\n  propertyName: string;\n  updatePropertyTitle: (title: string) => void;\n}\n\nexport default PanelPropertiesEditor;\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgUndo2(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 25,\n    fill: \"none\",\n    viewBox: \"0 0 24 25\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#575757\",\n    d: \"M12.5 8.5C9.85 8.5 7.45 9.49 5.6 11.1L2 7.5V16.5H11L7.38 12.88C8.77 11.72 10.54 11 12.5 11C16.04 11 19.05 13.31 20.1 16.5L22.47 15.72C21.08 11.53 17.15 8.5 12.5 8.5Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUndo2);\nexport default __webpack_public_path__ + \"static/media/undo_2.9aa5ae32901f467f80b4adea09b7c39c.svg\";\nexport { ForwardRef as ReactComponent };","import { Text, TextType } from \"design-system-old\";\nimport React from \"react\";\nimport { Colors } from \"constants/Colors\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  helperText?: string;\n};\nconst StyledHelperText = styled(Text)`\n  font-weight: 400;\n  font-size: 12px;\n  color: ${Colors.GRAY};\n  line-height: 14px;\n`;\n\nconst PropertyPaneHelperText = (props: Props) => {\n  if (!props.helperText) {\n    return null;\n  }\n\n  return (\n    <StyledHelperText\n      className=\"t--property-control-helperText\"\n      type={TextType.P1}\n    >\n      {props.helperText}\n    </StyledHelperText>\n  );\n};\n\nexport default PropertyPaneHelperText;\n","import React, { memo, useCallback, useEffect, useRef } from \"react\";\nimport _, { get, isFunction } from \"lodash\";\nimport equal from \"fast-deep-equal/es6\";\nimport * as log from \"loglevel\";\n\nimport {\n  ControlPropertyLabelContainer,\n  ControlWrapper,\n} from \"components/propertyControls/StyledControls\";\nimport { JSToggleButton } from \"design-system-old\";\nimport PropertyControlFactory from \"utils/PropertyControlFactory\";\nimport PropertyHelpLabel from \"pages/Editor/PropertyPane/PropertyHelpLabel\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport {\n  batchUpdateMultipleWidgetProperties,\n  batchUpdateWidgetProperty,\n  deleteWidgetProperty,\n  setWidgetDynamicProperty,\n  UpdateWidgetPropertyPayload,\n} from \"actions/controlActions\";\nimport {\n  PropertyHookUpdates,\n  PropertyPaneControlConfig,\n} from \"constants/PropertyControlConstants\";\nimport { IPanelProps } from \"@blueprintjs/core\";\nimport PanelPropertiesEditor from \"./PanelPropertiesEditor\";\nimport {\n  DynamicPath,\n  getEvalValuePath,\n  isDynamicValue,\n  THEME_BINDING_REGEX,\n} from \"utils/DynamicBindingUtils\";\nimport {\n  getShouldFocusPropertyPath,\n  getWidgetPropsForPropertyName,\n  WidgetProperties,\n} from \"selectors/propertyPaneSelectors\";\nimport { EnhancementFns } from \"selectors/widgetEnhancementSelectors\";\nimport { EditorTheme } from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport AppsmithConsole from \"utils/AppsmithConsole\";\nimport { ENTITY_TYPE } from \"entities/AppsmithConsole\";\nimport LOG_TYPE from \"entities/AppsmithConsole/logtype\";\nimport { getExpectedValue } from \"utils/validation/common\";\nimport { ControlData } from \"components/propertyControls/BaseControl\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { AutocompleteDataType } from \"utils/autocomplete/CodemirrorTernService\";\nimport { TooltipComponent } from \"design-system-old\";\nimport { ReactComponent as ResetIcon } from \"assets/icons/control/undo_2.svg\";\nimport { JS_TOGGLE_DISABLED_MESSAGE } from \"@appsmith/constants/messages\";\nimport {\n  getPropertyControlFocusElement,\n  shouldFocusOnPropertyControl,\n} from \"utils/editorContextUtils\";\nimport PropertyPaneHelperText from \"./PropertyPaneHelperText\";\nimport { setFocusablePropertyPaneField } from \"actions/propertyPaneActions\";\nimport WidgetFactory from \"utils/WidgetFactory\";\nimport { AdditionalDynamicDataTree } from \"utils/autocomplete/customTreeTypeDefCreator\";\n\ntype Props = PropertyPaneControlConfig & {\n  panel: IPanelProps;\n  theme: EditorTheme;\n  isSearchResult: boolean;\n  enhancements: EnhancementFns | undefined;\n};\n\nconst SHOULD_NOT_REJECT_DYNAMIC_BINDING_LIST_FOR = [\"COLOR_PICKER\"];\n\nconst PropertyControl = memo((props: Props) => {\n  const dispatch = useDispatch();\n\n  const controlRef = useRef<HTMLDivElement | null>(null);\n\n  const propsSelector = getWidgetPropsForPropertyName(\n    props.propertyName,\n    props.dependencies,\n    props.evaluatedDependencies,\n  );\n\n  const widgetProperties: WidgetProperties = useSelector(propsSelector, equal);\n\n  // get the dataTreePath and apply enhancement if exists\n  let dataTreePath: string | undefined =\n    props.dataTreePath || widgetProperties\n      ? `${widgetProperties.widgetName}.${props.propertyName}`\n      : undefined;\n\n  // using hasDispatchedPropertyFocus to make sure\n  // the component does not select the state after dispatching the action,\n  // which might lead to another rerender and reset the component\n  const hasDispatchedPropertyFocus = useRef<boolean>(false);\n  const shouldFocusPropertyPath: boolean = useSelector(\n    (state: AppState) =>\n      getShouldFocusPropertyPath(\n        state,\n        dataTreePath,\n        hasDispatchedPropertyFocus.current,\n      ),\n    (before: boolean, after: boolean) => {\n      return hasDispatchedPropertyFocus.current || before === after;\n    },\n  );\n\n  const { enhancementFns, parentIdWithEnhancementFn } =\n    props.enhancements || {};\n\n  useEffect(() => {\n    // This is required because layered panels like Column Panel have Animation of 300ms\n    const focusTimeout = props.isPanelProperty ? 300 : 0;\n    if (shouldFocusPropertyPath) {\n      setTimeout(() => {\n        if (shouldFocusOnPropertyControl(controlRef.current)) {\n          const focusableElement = getPropertyControlFocusElement(\n            controlRef.current,\n          );\n          focusableElement?.scrollIntoView({\n            block: \"center\",\n            behavior: \"smooth\",\n          });\n          focusableElement?.focus();\n        }\n      }, focusTimeout);\n    }\n  }, [shouldFocusPropertyPath]);\n  /**\n   * A property's stylesheet value can be fetched in 2 ways\n   * 1. If a method is defined on the property config (getStylesheetValue), then\n   *   it's the methods responsibility to resolve the stylesheet value.\n   * 2. If no such method is defined, the value is assumed to be present in the\n   *   theme config and thus it is fetched from there.\n   */\n  const propertyStylesheetValue = (() => {\n    const widgetStylesheet = WidgetFactory.getWidgetStylesheetConfigMap(\n      widgetProperties.type,\n    );\n\n    if (props.getStylesheetValue) {\n      return props.getStylesheetValue(\n        widgetProperties,\n        props.propertyName,\n        widgetStylesheet,\n      );\n    }\n\n    return get(widgetStylesheet, props.propertyName);\n  })();\n\n  const propertyValue = _.get(widgetProperties, props.propertyName);\n\n  /**\n   * checks if property value is deviated or not.\n   * by deviation, we mean if value of property is same as\n   * the one defined in the theme stylesheet. if values are different,\n   * that means the property value is deviated from the theme stylesheet.\n   */\n  const isPropertyDeviatedFromTheme =\n    typeof propertyStylesheetValue === \"string\" &&\n    THEME_BINDING_REGEX.test(propertyStylesheetValue) &&\n    propertyStylesheetValue !== propertyValue;\n\n  /**\n   * resets the value of property to theme stylesheet value\n   * which is a binding to theme object defined in the stylesheet\n   */\n  const resetPropertyValueToTheme = () => {\n    onPropertyChange(props.propertyName, propertyStylesheetValue);\n  };\n\n  const {\n    autoCompleteEnhancementFn: childWidgetAutoCompleteEnhancementFn,\n    customJSControlEnhancementFn: childWidgetCustomJSControlEnhancementFn,\n    hideEvaluatedValueEnhancementFn: childWidgetHideEvaluatedValueEnhancementFn,\n    propertyPaneEnhancementFn: childWidgetPropertyUpdateEnhancementFn,\n    shouldHidePropertyFn: childWidgetShouldHidePropertyFn,\n    updateDataTreePathFn: childWidgetDataTreePathEnhancementFn,\n  } = enhancementFns || {};\n\n  const toggleDynamicProperty = useCallback(\n    (propertyName: string, isDynamic: boolean) => {\n      AnalyticsUtil.logEvent(\"WIDGET_TOGGLE_JS_PROP\", {\n        widgetType: widgetProperties?.type,\n        widgetName: widgetProperties?.widgetName,\n        propertyName: propertyName,\n        propertyState: !isDynamic ? \"JS\" : \"NORMAL\",\n      });\n\n      let shouldRejectDynamicBindingPathList = true;\n\n      // we don't want to remove the path from dynamic binding list\n      // on toggling of js in case of few widgets\n      if (\n        SHOULD_NOT_REJECT_DYNAMIC_BINDING_LIST_FOR.includes(\n          props.controlType,\n        ) &&\n        isDynamicValue(propertyValue)\n      ) {\n        shouldRejectDynamicBindingPathList = false;\n      }\n\n      dispatch(\n        setWidgetDynamicProperty(\n          widgetProperties?.widgetId,\n          propertyName,\n          !isDynamic,\n          shouldRejectDynamicBindingPathList,\n        ),\n      );\n    },\n    [\n      widgetProperties?.widgetId,\n      widgetProperties?.type,\n      widgetProperties?.widgetName,\n    ],\n  );\n\n  const onDeleteProperties = useCallback(\n    (propertyPaths: string[]) => {\n      dispatch(deleteWidgetProperty(widgetProperties.widgetId, propertyPaths));\n    },\n    [widgetProperties.widgetId],\n  );\n  const onBatchUpdateProperties = useCallback(\n    (allUpdates: Record<string, unknown>) =>\n      dispatch(\n        batchUpdateWidgetProperty(widgetProperties.widgetId, {\n          modify: allUpdates,\n        }),\n      ),\n    [widgetProperties.widgetId],\n  );\n  const onBatchUpdatePropertiesOfMultipleWidgets = useCallback(\n    (updatesArray: UpdateWidgetPropertyPayload[]) => {\n      dispatch(batchUpdateMultipleWidgetProperties(updatesArray));\n    },\n    [],\n  );\n\n  const getWidgetsOwnUpdatesOnPropertyChange = (\n    propertyName: string,\n    propertyValue: any,\n  ): UpdateWidgetPropertyPayload | undefined => {\n    let propertiesToUpdate: Array<PropertyHookUpdates> | undefined;\n    // To support updating multiple properties of same widget.\n    if (props.updateHook) {\n      propertiesToUpdate = props.updateHook(\n        widgetProperties,\n        propertyName,\n        propertyValue,\n      );\n    }\n\n    if (propertiesToUpdate) {\n      const allUpdates: Record<string, unknown> = {};\n      const allDeletions: string[] = [];\n      const allDynamicPropertyPathUpdate: DynamicPath[] = [];\n      // TODO(abhinav): DEBUG: Ask Rahul and Ashok, if this causes issues anywhere else.\n\n      // We add the current updated first, so that the updatehooks can override the value\n      // This is needed for transformations in some cases. For example,\n      // the INPUT_TEXT control uses string as default, we can convert this into a number\n      // by calling an updateHook which runs the parseInt over this value.\n      allUpdates[propertyName] = propertyValue;\n      propertiesToUpdate.forEach(\n        ({\n          isDynamicPropertyPath,\n          propertyPath,\n          propertyValue,\n          shouldDeleteProperty,\n        }) => {\n          if (shouldDeleteProperty) {\n            allDeletions.push(propertyPath);\n          } else {\n            allUpdates[propertyPath] = propertyValue;\n          }\n\n          if (isDynamicPropertyPath) {\n            allDynamicPropertyPathUpdate.push({\n              key: propertyPath,\n            });\n          }\n        },\n      );\n      AppsmithConsole.info({\n        logType: LOG_TYPE.WIDGET_UPDATE,\n        text: \"Widget properties were updated\",\n        source: {\n          type: ENTITY_TYPE.WIDGET,\n          name: widgetProperties.widgetName,\n          id: widgetProperties.widgetId,\n          // TODO: Check whether these properties have\n          // dependent properties\n          // We should send the path that the user sends\n          // instead of sending the path that was updated\n          // as a side effect\n          propertyPath: propertiesToUpdate[0].propertyPath,\n        },\n        state: allUpdates,\n      });\n      return {\n        widgetId: widgetProperties.widgetId,\n        updates: {\n          modify: allUpdates,\n          remove: allDeletions,\n          postUpdateAction: props.postUpdateAction,\n        },\n        dynamicUpdates: {\n          dynamicPropertyPathList: allDynamicPropertyPathUpdate,\n        },\n      };\n    }\n    if (!propertiesToUpdate) {\n      const modify: Record<string, unknown> = {\n        [propertyName]: propertyValue,\n      };\n      AppsmithConsole.info({\n        logType: LOG_TYPE.WIDGET_UPDATE,\n        text: \"Widget properties were updated\",\n        source: {\n          type: ENTITY_TYPE.WIDGET,\n          name: widgetProperties.widgetName,\n          id: widgetProperties.widgetId,\n          propertyPath: propertyName,\n        },\n        state: {\n          [propertyName]: propertyValue,\n        },\n      });\n\n      return {\n        widgetId: widgetProperties.widgetId,\n        updates: {\n          modify,\n          postUpdateAction: props.postUpdateAction,\n        },\n      };\n    }\n  };\n\n  const getOtherWidgetPropertyChanges = (\n    propertyName: string,\n    propertyValue: any,\n  ) => {\n    let otherWidgetPropertiesToUpdates: UpdateWidgetPropertyPayload[] = [];\n\n    // enhancements are one way to update property of another widget but will have leaks into the dsl\n    // would recommend NOT TO FOLLOW this path for upcoming widgets.\n\n    // if there are enhancements related to the widget, calling them here\n    // enhancements are basically group of functions that are called before widget property\n    // is changed on propertyPane. For e.g - set/update parent property\n    if (childWidgetPropertyUpdateEnhancementFn) {\n      const hookPropertiesUpdates = childWidgetPropertyUpdateEnhancementFn(\n        widgetProperties.widgetName,\n        propertyName,\n        propertyValue,\n        props.isTriggerProperty,\n      );\n\n      if (\n        Array.isArray(hookPropertiesUpdates) &&\n        hookPropertiesUpdates.length > 0\n      ) {\n        const allUpdates: Record<string, unknown> = {};\n        const triggerPaths: string[] = [];\n        hookPropertiesUpdates.forEach(\n          ({ isDynamicTrigger, propertyPath, propertyValue }) => {\n            allUpdates[propertyPath] = propertyValue;\n            if (isDynamicTrigger) triggerPaths.push(propertyPath);\n          },\n        );\n\n        const parentEnhancementUpdates: UpdateWidgetPropertyPayload = {\n          widgetId: parentIdWithEnhancementFn,\n          updates: {\n            modify: allUpdates,\n            triggerPaths,\n          },\n        };\n        otherWidgetPropertiesToUpdates.push(parentEnhancementUpdates);\n      }\n    }\n    if (props.updateRelatedWidgetProperties) {\n      const relatedWidgetUpdates = props.updateRelatedWidgetProperties(\n        propertyName,\n        propertyValue,\n        widgetProperties,\n      );\n      if (Array.isArray(relatedWidgetUpdates) && relatedWidgetUpdates.length) {\n        otherWidgetPropertiesToUpdates = otherWidgetPropertiesToUpdates.concat(\n          relatedWidgetUpdates,\n        );\n      }\n    }\n    return otherWidgetPropertiesToUpdates;\n  };\n\n  /**\n   * this function is called whenever we change any property in the property pane\n   * it updates the widget property by updateWidgetPropertyRequest\n   * It also calls the beforeChildPropertyUpdate hook\n   */\n  const onPropertyChange = useCallback(\n    (\n      propertyName: string,\n      propertyValue: any,\n      isUpdatedViaKeyboard?: boolean,\n    ) => {\n      AnalyticsUtil.logEvent(\"WIDGET_PROPERTY_UPDATE\", {\n        widgetType: widgetProperties.type,\n        widgetName: widgetProperties.widgetName,\n        propertyName: propertyName,\n        updatedValue: propertyValue,\n        isUpdatedViaKeyboard,\n        isUpdatedFromSearchResult: props.isSearchResult,\n      });\n\n      const selfUpdates:\n        | UpdateWidgetPropertyPayload\n        | undefined = getWidgetsOwnUpdatesOnPropertyChange(\n        propertyName,\n        propertyValue,\n      );\n\n      const enhancementsToOtherWidgets: UpdateWidgetPropertyPayload[] = getOtherWidgetPropertyChanges(\n        propertyName,\n        propertyValue,\n      );\n      let allPropertiesToUpdates: UpdateWidgetPropertyPayload[] = [];\n      if (selfUpdates) {\n        allPropertiesToUpdates.push(selfUpdates);\n        // ideally we should not allow updating another widget without any updates on its own.\n        if (enhancementsToOtherWidgets && enhancementsToOtherWidgets.length) {\n          allPropertiesToUpdates = allPropertiesToUpdates.concat(\n            enhancementsToOtherWidgets,\n          );\n        }\n      }\n\n      if (allPropertiesToUpdates && allPropertiesToUpdates.length) {\n        // updating properties of a widget(s) should be done only once when property value changes.\n        // to make sure dsl updates are atomic which is a necessity for undo/redo.\n        onBatchUpdatePropertiesOfMultipleWidgets(allPropertiesToUpdates);\n      }\n    },\n    [widgetProperties],\n  );\n\n  const openPanel = useCallback(\n    (panelProps: any) => {\n      if (props.panelConfig) {\n        props.panel.openPanel({\n          component: PanelPropertiesEditor,\n          props: {\n            panelProps,\n            panelConfig: props.panelConfig,\n            onPropertiesChange: onBatchUpdateProperties,\n            panelParentPropertyPath: props.propertyName,\n            panel: props.panel,\n            theme: props.theme,\n          },\n        });\n      }\n    },\n    [props.panelConfig, onPropertyChange, props.propertyName],\n  );\n\n  const { propertyName } = props;\n\n  if (widgetProperties) {\n    // Do not render the control if it needs to be hidden\n    if (\n      (props.hidden && props.hidden(widgetProperties, props.propertyName)) ||\n      props.invisible ||\n      (childWidgetShouldHidePropertyFn &&\n        childWidgetShouldHidePropertyFn(widgetProperties, props.propertyName))\n    ) {\n      return null;\n    }\n\n    const label = isFunction(props.label)\n      ? props.label(widgetProperties, propertyName)\n      : props.label;\n\n    const helperText = isFunction(props.helperText)\n      ? props.helperText(widgetProperties)\n      : props.helperText;\n\n    dataTreePath =\n      props.dataTreePath || `${widgetProperties.widgetName}.${propertyName}`;\n\n    if (childWidgetDataTreePathEnhancementFn) {\n      dataTreePath = childWidgetDataTreePathEnhancementFn(\n        dataTreePath,\n      ) as string;\n    }\n\n    const evaluatedValue = _.get(\n      widgetProperties,\n      getEvalValuePath(dataTreePath, {\n        isPopulated: true,\n        fullPath: false,\n      }),\n    );\n\n    const { additionalAutoComplete, ...rest } = props;\n    const config: ControlData = {\n      ...rest,\n      propertyValue,\n      dataTreePath,\n      evaluatedValue,\n      widgetProperties,\n      parentPropertyName: propertyName,\n      parentPropertyValue: propertyValue,\n      additionalDynamicData: {},\n      label,\n    };\n    config.expected = getExpectedValue(props.validation);\n    if (widgetProperties.isPropertyDynamicTrigger) {\n      config.validationMessage = \"\";\n      config.expected = {\n        example: 'showAlert(\"There was an error!\", \"error\")',\n        type: \"Function\",\n        autocompleteDataType: AutocompleteDataType.FUNCTION,\n      };\n      delete config.evaluatedValue;\n    }\n\n    const isDynamic: boolean = widgetProperties.isPropertyDynamicPath;\n    const isConvertible = !!props.isJSConvertible;\n    const className = label\n      .split(\" \")\n      .join(\"\")\n      .toLowerCase();\n\n    let additionAutocomplete: AdditionalDynamicDataTree | undefined;\n    if (additionalAutoComplete) {\n      additionAutocomplete = additionalAutoComplete(widgetProperties);\n    } else if (childWidgetAutoCompleteEnhancementFn) {\n      additionAutocomplete = childWidgetAutoCompleteEnhancementFn() as\n        | AdditionalDynamicDataTree\n        | undefined;\n    }\n\n    /**\n     * if the current widget requires a customJSControl, use that.\n     */\n    const getCustomJSControl = (): string | undefined => {\n      if (childWidgetCustomJSControlEnhancementFn) {\n        return childWidgetCustomJSControlEnhancementFn() as string | undefined;\n      }\n\n      return props.customJSControl;\n    };\n\n    /**\n     * should the property control hide evaluated popover\n     * @returns\n     */\n    const hideEvaluatedValue = (): boolean => {\n      if (childWidgetHideEvaluatedValueEnhancementFn) {\n        return childWidgetHideEvaluatedValueEnhancementFn() as boolean;\n      }\n\n      return false;\n    };\n\n    const handleOnFocus = () => {\n      if (!shouldFocusPropertyPath) {\n        hasDispatchedPropertyFocus.current = true;\n        setTimeout(() => {\n          dispatch(setFocusablePropertyPaneField(dataTreePath));\n        }, 0);\n      }\n    };\n\n    const uniqId = btoa(`${widgetProperties.widgetId}.${propertyName}`);\n    const canDisplayValueInUI = PropertyControlFactory.controlUIToggleValidation.get(\n      config.controlType,\n    );\n\n    const customJSControl = getCustomJSControl();\n\n    let isToggleDisabled = false;\n    if (\n      isDynamic // JS toggle button is ON\n    ) {\n      if (\n        // Check if value is not empty\n        propertyValue !== undefined &&\n        propertyValue !== \"\"\n      ) {\n        let value = propertyValue;\n        // extract out the value from binding, if there is custom JS control (Table & JSONForm widget)\n        if (customJSControl && isDynamicValue(value)) {\n          const extractValue = PropertyControlFactory.inputComputedValueMap.get(\n            customJSControl,\n          );\n          if (extractValue)\n            value = extractValue(value, widgetProperties.widgetName);\n        }\n\n        // disable button if value can't be represented in UI mode\n        if (!canDisplayValueInUI?.(config, value)) isToggleDisabled = true;\n      }\n\n      // Enable button if the value is same as the one defined in theme stylesheet.\n      if (\n        typeof propertyStylesheetValue === \"string\" &&\n        THEME_BINDING_REGEX.test(propertyStylesheetValue) &&\n        propertyStylesheetValue === propertyValue\n      ) {\n        isToggleDisabled = false;\n      }\n    }\n\n    try {\n      return (\n        <ControlWrapper\n          className={`t--property-control-wrapper t--property-control-${className} group`}\n          data-guided-tour-iid={propertyName}\n          id={uniqId}\n          key={config.id}\n          onFocus={handleOnFocus}\n          orientation={\n            config.controlType === \"SWITCH\" && !isDynamic\n              ? \"HORIZONTAL\"\n              : \"VERTICAL\"\n          }\n          ref={controlRef}\n        >\n          <ControlPropertyLabelContainer className=\"gap-1\">\n            <PropertyHelpLabel\n              label={label}\n              theme={props.theme}\n              tooltip={props.helpText}\n            />\n            {isConvertible && (\n              <TooltipComponent\n                content={JS_TOGGLE_DISABLED_MESSAGE}\n                disabled={!isToggleDisabled}\n                hoverOpenDelay={200}\n                openOnTargetFocus={false}\n                position=\"auto\"\n              >\n                <JSToggleButton\n                  handleClick={() =>\n                    toggleDynamicProperty(propertyName, isDynamic)\n                  }\n                  isActive={isDynamic}\n                  isToggleDisabled={isToggleDisabled}\n                />\n              </TooltipComponent>\n            )}\n            {isPropertyDeviatedFromTheme && (\n              <>\n                <TooltipComponent\n                  content=\"Value deviated from theme\"\n                  openOnTargetFocus={false}\n                >\n                  <div className=\"w-2 h-2 rounded-full bg-primary-500\" />\n                </TooltipComponent>\n                <button\n                  className=\"hidden ml-auto focus:ring-2 group-hover:block reset-button\"\n                  onClick={resetPropertyValueToTheme}\n                >\n                  <TooltipComponent\n                    boundary=\"viewport\"\n                    content=\"Reset value\"\n                    openOnTargetFocus={false}\n                    position=\"top-right\"\n                  >\n                    <ResetIcon className=\"w-5 h-5\" />\n                  </TooltipComponent>\n                </button>\n              </>\n            )}\n          </ControlPropertyLabelContainer>\n          {PropertyControlFactory.createControl(\n            config,\n            {\n              onPropertyChange: onPropertyChange,\n              onBatchUpdateProperties: onBatchUpdateProperties,\n              openNextPanel: openPanel,\n              deleteProperties: onDeleteProperties,\n              theme: props.theme,\n            },\n            isDynamic,\n            customJSControl,\n            additionAutocomplete,\n            hideEvaluatedValue(),\n          )}\n          <PropertyPaneHelperText helperText={helperText} />\n        </ControlWrapper>\n      );\n    } catch (e) {\n      log.error(e);\n      return null;\n    }\n  }\n  return null;\n});\n\nPropertyControl.displayName = \"PropertyControl\";\n\n(PropertyControl as any).whyDidYouRender = {\n  logOnDifferentValues: false,\n};\n\nexport default PropertyControl;\n","import React from \"react\";\nimport { IconNames } from \"@blueprintjs/icons\";\nimport { Icon, IconSize } from \"design-system-old\";\nimport { PROPERTY_PANE_EMPTY_SEARCH_RESULT_MESSAGE } from \"@appsmith/constants/messages\";\nimport styled from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\n\nconst EmptySearchResultWrapper = styled.div`\n  color: ${Colors.GRAY_700};\n\n  span {\n    cursor: default;\n  }\n\n  svg {\n    fill: ${Colors.GRAY_400};\n  }\n`;\n\nexport function EmptySearchResult() {\n  return (\n    <EmptySearchResultWrapper className=\"mt-12 p-3 t--property-pane-no-search-results\">\n      <Icon\n        className=\"flex justify-center\"\n        name={IconNames.SEARCH}\n        size={IconSize.XXXL}\n      />\n      <p className=\"pt-3 text-center\">\n        {PROPERTY_PANE_EMPTY_SEARCH_RESULT_MESSAGE}\n      </p>\n    </EmptySearchResultWrapper>\n  );\n}\n","import { createSelector } from \"reselect\";\nimport { get, set } from \"lodash\";\nimport { AppState } from \"@appsmith/reducers\";\n\nimport { CanvasWidgetsReduxState } from \"reducers/entityReducers/canvasWidgetsReducer\";\nimport {\n  getParentWithEnhancementFn,\n  getWidgetEnhancementFn,\n  WidgetEnhancementType,\n} from \"sagas/WidgetEnhancementHelpers\";\nimport { getWidgets } from \"sagas/selectors\";\n\nconst getEvaluationTree = (state: AppState) => state.evaluations.tree;\n\nconst getPropsFromTree = (tree: unknown, widgetName?: string): unknown => {\n  // Get the evaluated data of this widget from the evaluations tree.\n  if (!widgetName) return;\n\n  return get(tree, widgetName, undefined);\n};\n\nexport type EnhancementFns = {\n  enhancementFns: {\n    updateDataTreePathFn: any;\n    propertyPaneEnhancementFn: any;\n    autoCompleteEnhancementFn: any;\n    customJSControlEnhancementFn: any;\n    hideEvaluatedValueEnhancementFn: any;\n    shouldHidePropertyFn: any;\n  };\n  parentIdWithEnhancementFn: any;\n};\n\nexport const getWidgetEnhancementSelector = (widgetId: string | undefined) => {\n  return createSelector(\n    getWidgets,\n    getEvaluationTree,\n    (widgets: CanvasWidgetsReduxState, dataTree: unknown): EnhancementFns => {\n      const enhancementFns = {\n        updateDataTreePathFn: undefined,\n        propertyPaneEnhancementFn: undefined,\n        autoCompleteEnhancementFn: undefined,\n        customJSControlEnhancementFn: undefined,\n        hideEvaluatedValueEnhancementFn: undefined,\n        shouldHidePropertyFn: undefined,\n      };\n\n      // Get the parent which wants to enhance this widget\n      const parentWithEnhancementFn = getParentWithEnhancementFn(\n        widgetId,\n        widgets,\n      );\n      // If such a parent is found\n      // Get the parent's evaluated data from the evaluatedTree\n      const parentDataFromDataTree: unknown = getPropsFromTree(\n        dataTree,\n        parentWithEnhancementFn?.widgetName,\n      );\n\n      if (parentWithEnhancementFn) {\n        // Get the enhancement function based on the enhancementType\n        // from the configs\n        const widgetEnhancementFns = {\n          updateDataTreePathFn: getWidgetEnhancementFn(\n            parentWithEnhancementFn.type,\n            WidgetEnhancementType.UPDATE_DATA_TREE_PATH,\n          ),\n          propertyPaneEnhancementFn: getWidgetEnhancementFn(\n            parentWithEnhancementFn.type,\n            WidgetEnhancementType.PROPERTY_UPDATE,\n          ),\n          autoCompleteEnhancementFn: getWidgetEnhancementFn(\n            parentWithEnhancementFn.type,\n            WidgetEnhancementType.AUTOCOMPLETE,\n          ),\n          customJSControlEnhancementFn: getWidgetEnhancementFn(\n            parentWithEnhancementFn.type,\n            WidgetEnhancementType.CUSTOM_CONTROL,\n          ),\n          hideEvaluatedValueEnhancementFn: getWidgetEnhancementFn(\n            parentWithEnhancementFn.type,\n            WidgetEnhancementType.HIDE_EVALUATED_VALUE,\n          ),\n          shouldHidePropertyFn: getWidgetEnhancementFn(\n            parentWithEnhancementFn.type,\n            WidgetEnhancementType.SHOULD_HIDE_PROPERTY,\n          ),\n        };\n\n        Object.keys(widgetEnhancementFns).map((key: string) => {\n          const enhancementFn = get(widgetEnhancementFns, `${key}`);\n\n          if (parentDataFromDataTree && enhancementFn) {\n            set(enhancementFns, `${key}`, (...args: unknown[]) =>\n              enhancementFn(parentDataFromDataTree, ...args),\n            );\n          }\n        });\n      }\n\n      return {\n        enhancementFns: enhancementFns,\n        parentIdWithEnhancementFn: get(parentWithEnhancementFn, \"widgetId\", \"\"),\n      };\n    },\n  );\n};\n","import { IPanelProps } from \"@blueprintjs/core\";\nimport {\n  PropertyPaneConfig,\n  PropertyPaneControlConfig,\n  PropertyPaneSectionConfig,\n} from \"constants/PropertyControlConstants\";\nimport { WidgetType } from \"constants/WidgetConstants\";\nimport React from \"react\";\nimport PropertyControl from \"./PropertyControl\";\nimport PropertySection from \"./PropertySection\";\nimport { EditorTheme } from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport Boxed from \"../GuidedTour/Boxed\";\nimport { GUIDED_TOUR_STEPS } from \"../GuidedTour/constants\";\nimport { EmptySearchResult } from \"./EmptySearchResult\";\nimport { useSelector } from \"react-redux\";\nimport { getWidgetPropsForPropertyPane } from \"selectors/propertyPaneSelectors\";\nimport { searchPropertyPaneConfig } from \"./propertyPaneSearch\";\nimport { evaluateHiddenProperty } from \"./helpers\";\nimport {\n  EnhancementFns,\n  getWidgetEnhancementSelector,\n} from \"selectors/widgetEnhancementSelectors\";\nimport equal from \"fast-deep-equal/es6\";\n\nexport type PropertyControlsGeneratorProps = {\n  id: string;\n  config: readonly PropertyPaneConfig[];\n  type: WidgetType;\n  panel: IPanelProps;\n  panelPropertyPath?: string;\n  isPanelProperty?: boolean;\n  theme: EditorTheme;\n  searchQuery?: string;\n};\n\nconst generatePropertyControl = (\n  propertyPaneConfig: readonly PropertyPaneConfig[],\n  props: PropertyControlsGeneratorProps,\n  isSearchResult: boolean,\n  enhancements: EnhancementFns,\n) => {\n  if (!propertyPaneConfig) return null;\n  return propertyPaneConfig.map((config: PropertyPaneConfig) => {\n    if ((config as PropertyPaneSectionConfig).sectionName) {\n      const sectionConfig: PropertyPaneSectionConfig = config as PropertyPaneSectionConfig;\n      return (\n        <Boxed\n          key={config.id + props.id}\n          show={\n            sectionConfig.sectionName !== \"General\" &&\n            props.type === \"TABLE_WIDGET\"\n          }\n          step={GUIDED_TOUR_STEPS.TABLE_WIDGET_BINDING}\n        >\n          <PropertySection\n            childrenId={sectionConfig.childrenId}\n            collapsible={sectionConfig.collapsible ?? true}\n            hidden={sectionConfig.hidden}\n            id={config.id || sectionConfig.sectionName}\n            isDefaultOpen={sectionConfig.isDefaultOpen}\n            name={sectionConfig.sectionName}\n            panelPropertyPath={props.panelPropertyPath}\n            propertyPath={sectionConfig.propertySectionPath}\n            tag={sectionConfig.tag}\n          >\n            {config.children &&\n              generatePropertyControl(\n                config.children,\n                props,\n                isSearchResult,\n                enhancements,\n              )}\n          </PropertySection>\n        </Boxed>\n      );\n    } else if ((config as PropertyPaneControlConfig).controlType) {\n      return (\n        <Boxed\n          key={config.id + props.id}\n          show={\n            (config as PropertyPaneControlConfig).propertyName !==\n              \"tableData\" && props.type === \"TABLE_WIDGET\"\n          }\n          step={GUIDED_TOUR_STEPS.TABLE_WIDGET_BINDING}\n        >\n          <PropertyControl\n            isPanelProperty={!!props.isPanelProperty}\n            key={config.id + props.id}\n            {...(config as PropertyPaneControlConfig)}\n            enhancements={enhancements}\n            isSearchResult={isSearchResult}\n            panel={props.panel}\n            theme={props.theme}\n          />\n        </Boxed>\n      );\n    }\n    throw Error(\"Unknown configuration provided: \" + props.type);\n  });\n};\n\nfunction PropertyControlsGenerator(props: PropertyControlsGeneratorProps) {\n  const widgetProps: any = useSelector(getWidgetPropsForPropertyPane);\n\n  const enhancementSelector = getWidgetEnhancementSelector(\n    widgetProps?.widgetId,\n  );\n  const enhancements = useSelector(enhancementSelector, equal);\n\n  if (!widgetProps) return null;\n\n  const finalProps = evaluateHiddenProperty(\n    props.config,\n    widgetProps,\n    enhancements?.enhancementFns?.shouldHidePropertyFn,\n  );\n\n  const searchResults = searchPropertyPaneConfig(\n    finalProps as PropertyPaneSectionConfig[],\n    props.searchQuery,\n  );\n\n  const isSearchResultEmpty = searchResults.length === 0;\n  const isSearchResult = finalProps !== searchResults;\n\n  return isSearchResultEmpty ? (\n    <EmptySearchResult />\n  ) : (\n    <>\n      {generatePropertyControl(\n        searchResults as readonly PropertyPaneConfig[],\n        props,\n        isSearchResult,\n        enhancements,\n      )}\n    </>\n  );\n}\n\nexport default PropertyControlsGenerator;\n","import React, { useCallback } from \"react\";\nimport { Button, Category, getTypographyByKey, Size } from \"design-system-old\";\nimport { AppState } from \"@appsmith/reducers\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { INTEGRATION_EDITOR_MODES, INTEGRATION_TABS } from \"constants/routes\";\nimport history from \"utils/history\";\nimport {\n  setGlobalSearchQuery,\n  toggleShowGlobalSearchModal,\n} from \"actions/globalSearchActions\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { WidgetType } from \"constants/WidgetConstants\";\nimport { integrationEditorURL } from \"RouteBuilder\";\nimport { getCurrentPageId } from \"selectors/editorSelectors\";\n\nconst StyledDiv = styled.div`\n  color: ${(props) => props.theme.colors.propertyPane.ctaTextColor};\n  ${getTypographyByKey(\"p1\")}\n  background-color: ${(props) =>\n    props.theme.colors.propertyPane.ctaBackgroundColor};\n  padding: ${(props) => props.theme.spaces[3]}px ${(props) =>\n  props.theme.spaces[7]}px;\n  margin: ${(props) => props.theme.spaces[2]}px 0.75rem;\n\n  button:first-child {\n    margin-top: ${(props) => props.theme.spaces[2]}px;\n    width: 100%;\n  }\n  button:nth-child(2) {\n    border: none;\n    background-color: transparent;\n    text-transform: none;\n    justify-content: flex-start;\n    padding: 0px;\n    color: ${(props) => props.theme.colors.propertyPane.ctaLearnMoreTextColor};\n    ${getTypographyByKey(\"p3\")}\n    margin-top: ${(props) => props.theme.spaces[2]}px;\n\n    :hover, :focus {\n      text-decoration: underline;\n    }\n  }\n`;\n\nexport const actionsExist = (state: AppState): boolean =>\n  !!state.entities.actions.length;\n\ntype ConnectDataCTAProps = {\n  widgetTitle: string;\n  widgetId?: string;\n  widgetType?: WidgetType;\n};\n\nfunction ConnectDataCTA(props: ConnectDataCTAProps) {\n  const dispatch = useDispatch();\n  const pageId: string = useSelector(getCurrentPageId);\n  const openHelpModal = useCallback(() => {\n    dispatch(setGlobalSearchQuery(\"Connecting to Data Sources\"));\n    dispatch(toggleShowGlobalSearchModal());\n    AnalyticsUtil.logEvent(\"OPEN_OMNIBAR\", {\n      source: \"PROPERTY_PANE_CONNECT_DATA\",\n    });\n  }, []);\n\n  const onClick = () => {\n    const { widgetId, widgetTitle, widgetType } = props;\n    history.push(\n      integrationEditorURL({\n        pageId,\n        selectedTab: INTEGRATION_TABS.NEW,\n        params: { mode: INTEGRATION_EDITOR_MODES.AUTO },\n      }),\n    );\n    AnalyticsUtil.logEvent(\"CONNECT_DATA_CLICK\", {\n      widgetTitle,\n      widgetId,\n      widgetType,\n    });\n  };\n\n  return (\n    <StyledDiv className=\"t--propertypane-connect-cta\">\n      Data Required\n      <Button\n        category={Category.primary}\n        onClick={onClick}\n        size={Size.large}\n        tabIndex={0}\n        tag=\"button\"\n        text=\"CONNECT DATA\"\n      />\n      <Button\n        category={Category.secondary}\n        onClick={openHelpModal}\n        tabIndex={0}\n        tag=\"button\"\n        text=\"Learn more\"\n      />\n    </StyledDiv>\n  );\n}\n\nexport default React.memo(ConnectDataCTA);\n","import React, { memo, useMemo, useCallback, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getDataTree } from \"selectors/dataTreeSelectors\";\nimport {\n  isAction,\n  isWidget,\n} from \"@appsmith/workers/Evaluation/evaluationUtils\";\nimport {\n  Classes,\n  Dropdown,\n  DefaultDropDownValueNodeProps,\n  DropdownOption,\n  getTypographyByKey,\n  Icon,\n  IconSize,\n  Text,\n  TextType,\n  TooltipComponent as Tooltip,\n  RenderDropdownOptionType,\n} from \"design-system-old\";\nimport { useEntityLink } from \"components/editorComponents/Debugger/hooks/debuggerHooks\";\nimport { useGetEntityInfo } from \"components/editorComponents/Debugger/hooks/useGetEntityInfo\";\nimport {\n  doesEntityHaveErrors,\n  getDependenciesFromInverseDependencies,\n} from \"components/editorComponents/Debugger/helpers\";\nimport { getFilteredErrors } from \"selectors/debuggerSelectors\";\nimport { ENTITY_TYPE, Log } from \"entities/AppsmithConsole\";\nimport { DebugButton } from \"components/editorComponents/Debugger/DebugCTA\";\nimport { showDebugger } from \"actions/debuggerActions\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { Colors } from \"constants/Colors\";\nimport { inGuidedTour } from \"selectors/onboardingSelectors\";\nimport {\n  interactionAnalyticsEvent,\n  InteractionAnalyticsEventDetail,\n  INTERACTION_ANALYTICS_EVENT,\n} from \"utils/AppsmithUtils\";\nimport { PopoverPosition } from \"@blueprintjs/core/lib/esnext/components/popover/popoverSharedProps\";\nimport equal from \"fast-deep-equal\";\nimport { mapValues, pick } from \"lodash\";\nimport { createSelector } from \"reselect\";\n\nconst CONNECTION_HEIGHT = 28;\n\nconst TopLayer = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: space-between;\n  padding: 0 1rem;\n\n  .connection-dropdown {\n    box-shadow: none;\n    border: none;\n    background-color: ${Colors.WHITE};\n    padding: 0;\n    width: auto;\n  }\n\n  .error {\n    border: 1px solid\n      ${(props) => props.theme.colors.propertyPane.connections.error};\n    border-bottom: none;\n  }\n`;\n\nconst SelectedNodeWrapper = styled.div<{\n  entityCount: number;\n  hasError: boolean;\n  justifyContent: string;\n}>`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  justify-content: ${(props) => props.justifyContent};\n  color: ${(props) =>\n    props.hasError\n      ? props.theme.colors.propertyPane.connections.error\n      : props.theme.colors.propertyPane.connections.connectionsCount};\n  ${getTypographyByKey(\"p3\")}\n  opacity: ${(props) => (!!props.entityCount ? 1 : 0.5)};\n\n  & > *:nth-child(2) {\n    padding: 0 4px;\n  }\n\n  .${Classes.ICON} {\n    margin-top: 1px;\n\n    ${(props) =>\n      props.hasError &&\n      `\n    svg {\n      path {\n        fill: ${props.theme.colors.propertyPane.connections.error}\n      }\n    }\n    `}\n  }\n`;\n\nconst OptionWrapper = styled.div<{ hasError: boolean; fillIconColor: boolean }>`\n  display: flex;\n  width: 100%;\n  overflow: hidden;\n\n  .debug {\n    height: ${CONNECTION_HEIGHT}px;\n    margin-top: 0px;\n    display: none;\n  }\n\n  ${(props) =>\n    props.fillIconColor &&\n    `&:not(:hover) {\n    svg {\n      path {\n        fill: #6a86ce;\n      }\n    }\n  }`}\n\n  &:hover {\n    .debug {\n      display: flex;\n    }\n\n    background-color: ${(props) =>\n      props.hasError && props.theme.colors.propertyPane.connections.optionBg}};\n\n    &&& svg {\n      rect {\n        fill: ${(props) => props.theme.colors.textOnDarkBG};\n      }\n    }\n  }\n`;\n\nconst OptionContentWrapper = styled.div<{\n  hasError: boolean;\n  isSelected: boolean;\n}>`\n  padding: ${(props) => props.theme.spaces[2] + 1}px\n    ${(props) => props.theme.spaces[5]}px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  line-height: 8px;\n  flex: 1;\n  min-width: 0;\n  background-color: ${(props) =>\n    props.isSelected &&\n    !props.hasError &&\n    props.theme.colors.dropdown.hovered.bg};\n\n  span:first-child {\n    font-size: 10px;\n    font-weight: normal;\n  }\n\n  .${Classes.TEXT} {\n    margin-left: 6px;\n    letter-spacing: 0px;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    color: ${(props) =>\n      props.hasError\n        ? props.theme.colors.propertyPane.connections.error\n        : props.theme.colors.propertyPane.label};\n  }\n\n  .${Classes.ICON} {\n    margin-right: ${(props) => props.theme.spaces[5]}px;\n  }\n\n  &:hover,\n  &.highlighted {\n    background-color: ${(props) =>\n      !props.hasError && props.theme.colors.dropdown.hovered.bg};\n  }\n`;\n\ntype PropertyPaneConnectionsProps = {\n  widgetName: string;\n  widgetType: string;\n};\n\ntype TriggerNodeProps = DefaultDropDownValueNodeProps & {\n  entityCount: number;\n  iconAlignment: \"LEFT\" | \"RIGHT\";\n  connectionType: \"INCOMING\" | \"OUTGOING\";\n  hasError: boolean;\n  justifyContent: string;\n  tooltipPosition?: PopoverPosition;\n};\n\nconst doConnectionsHaveErrors = (\n  options: DropdownOption[],\n  debuggerErrors: Record<string, Log>,\n) => {\n  return options.some((option) =>\n    doesEntityHaveErrors(option.value as string, debuggerErrors),\n  );\n};\n\nconst getDataTreeWithOnlyIds = createSelector(getDataTree, (tree) =>\n  mapValues(tree, (x) => pick(x, [\"ENTITY_TYPE\", \"widgetId\", \"actionId\"])),\n);\n\nconst useDependencyList = (name: string) => {\n  const dataTree = useSelector(getDataTreeWithOnlyIds, equal);\n  const inverseDependencyMap = useSelector(\n    (state: AppState) => state.evaluations.dependencies.inverseDependencyMap,\n    equal,\n  );\n  const guidedTour = useSelector(inGuidedTour);\n\n  const getEntityId = useCallback((name) => {\n    const entity = dataTree[name];\n\n    if (isWidget(entity)) {\n      return entity.widgetId;\n    } else if (isAction(entity)) {\n      return entity.actionId;\n    }\n  }, []);\n\n  const entityDependencies = useMemo(() => {\n    if (guidedTour) return null;\n    return getDependenciesFromInverseDependencies(inverseDependencyMap, name);\n  }, [name, inverseDependencyMap, guidedTour]);\n\n  const dependencyOptions =\n    entityDependencies?.directDependencies.map((e) => ({\n      label: e,\n      value: getEntityId(e) ?? e,\n    })) ?? [];\n  const inverseDependencyOptions =\n    entityDependencies?.inverseDependencies.map((e) => ({\n      label: e,\n      value: getEntityId(e),\n    })) ?? [];\n\n  return {\n    dependencyOptions,\n    inverseDependencyOptions,\n  };\n};\n\nfunction OptionNode(props: any) {\n  const getEntityInfo = useGetEntityInfo(props.option.label);\n  const entityInfo = getEntityInfo();\n  const dispatch = useDispatch();\n  const { navigateToEntity } = useEntityLink();\n\n  const onClick = () => {\n    if (entityInfo?.hasError) {\n      if (entityInfo?.type === ENTITY_TYPE.WIDGET) {\n        dispatch(showDebugger(true));\n      }\n    }\n    navigateToEntity(props.option.label);\n    AnalyticsUtil.logEvent(\"ASSOCIATED_ENTITY_CLICK\", {\n      source: \"PROPERTY_PANE\",\n      entityType: entityInfo?.entityType,\n    });\n  };\n\n  const handleKeyDown = (e: KeyboardEvent) => {\n    if (!props.isSelectedNode && !props.isHighlighted) return;\n    if (\n      (props.isSelectedNode || props.isHighlighted) &&\n      (e.key === \" \" || e.key === \"Enter\")\n    )\n      onClick();\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [props.isSelectedNode, props.isHighlighted]);\n\n  return (\n    <OptionWrapper\n      className={`t--dropdown-option`}\n      fillIconColor={!entityInfo?.datasourceName}\n      hasError={!!entityInfo?.hasError}\n    >\n      <OptionContentWrapper\n        className={`${props.isHighlighted ? \"highlighted\" : \"\"}`}\n        hasError={!!entityInfo?.hasError}\n        isSelected={props.isSelectedNode}\n        onClick={onClick}\n      >\n        <span>{entityInfo?.icon}</span>\n        <Text type={TextType.H6}>\n          {props.option.label}{\" \"}\n          {entityInfo?.datasourceName && (\n            <span>from {entityInfo?.datasourceName}</span>\n          )}\n        </Text>\n      </OptionContentWrapper>\n      {!!entityInfo?.hasError && (\n        <DebugButton className=\"debug\" onClick={onClick} />\n      )}\n    </OptionWrapper>\n  );\n}\n\nconst TriggerNode = memo((props: TriggerNodeProps) => {\n  const ENTITY = props.entityCount > 1 ? \"entities\" : \"entity\";\n  const tooltipText = !!props.entityCount\n    ? `See ${props.connectionType.toLowerCase()} connections`\n    : `No ${props.connectionType.toLowerCase()} connections`;\n  const iconColor = props.hasError ? \"#f22b2b\" : \"\";\n\n  const onClick = () => {\n    AnalyticsUtil.logEvent(\"ASSOCIATED_ENTITY_DROPDOWN_CLICK\");\n  };\n\n  return (\n    <SelectedNodeWrapper\n      className={props.hasError ? \"t--connection-error\" : \"t--connection\"}\n      entityCount={props.entityCount}\n      hasError={props.hasError}\n      justifyContent={props.justifyContent}\n      onClick={onClick}\n    >\n      {props.iconAlignment === \"LEFT\" && (\n        <Icon\n          fillColor={iconColor}\n          keepColors={!props.hasError}\n          name=\"trending-flat\"\n          size={IconSize.MEDIUM}\n        />\n      )}\n      <span>\n        <Tooltip\n          content={tooltipText}\n          disabled={props.isOpen}\n          openOnTargetFocus={false}\n          position={props.tooltipPosition}\n        >\n          {props.entityCount ? `${props.entityCount} ${ENTITY}` : \"No Entity\"}\n        </Tooltip>\n      </span>\n      {props.iconAlignment === \"RIGHT\" && (\n        <Icon\n          fillColor={iconColor}\n          keepColors={!props.hasError}\n          name=\"trending-flat\"\n          size={IconSize.MEDIUM}\n        />\n      )}\n      <Icon keepColors name=\"expand-more\" size={IconSize.XS} />\n    </SelectedNodeWrapper>\n  );\n});\n\nTriggerNode.displayName = \"TriggerNode\";\n\nconst selectedOption = { label: \"\", value: \"\" };\n\nfunction PropertyPaneConnections(props: PropertyPaneConnectionsProps) {\n  const dependencies = useDependencyList(props.widgetName);\n  const { navigateToEntity } = useEntityLink();\n  const debuggerErrors = useSelector(getFilteredErrors);\n  const topLayerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    topLayerRef.current?.addEventListener(\n      INTERACTION_ANALYTICS_EVENT,\n      handleKbdEvent,\n    );\n    return () => {\n      topLayerRef.current?.removeEventListener(\n        INTERACTION_ANALYTICS_EVENT,\n        handleKbdEvent,\n      );\n    };\n  }, []);\n\n  const handleKbdEvent = (e: Event) => {\n    const event = e as CustomEvent<InteractionAnalyticsEventDetail>;\n    if (!event.detail?.propertyName) {\n      e.stopPropagation();\n      topLayerRef.current?.dispatchEvent(\n        interactionAnalyticsEvent({\n          key: event.detail.key,\n          propertyType: \"PROPERTY_PANE_CONNECTION\",\n          propertyName: \"propertyPaneConnections\",\n          widgetType: props.widgetType,\n        }),\n      );\n    }\n  };\n\n  const errorIncomingConnections = useMemo(() => {\n    return doConnectionsHaveErrors(\n      dependencies.dependencyOptions,\n      debuggerErrors,\n    );\n  }, [dependencies.dependencyOptions, debuggerErrors]);\n\n  const errorOutgoingConnections = useMemo(() => {\n    return doConnectionsHaveErrors(\n      dependencies.inverseDependencyOptions,\n      debuggerErrors,\n    );\n  }, [dependencies.inverseDependencyOptions, debuggerErrors]);\n\n  return (\n    <TopLayer ref={topLayerRef}>\n      <Dropdown\n        SelectedValueNode={(\n          selectedValueProps: DefaultDropDownValueNodeProps,\n        ) => (\n          <TriggerNode\n            iconAlignment={\"LEFT\"}\n            justifyContent={\"flex-start\"}\n            {...selectedValueProps}\n            connectionType=\"INCOMING\"\n            entityCount={dependencies.dependencyOptions.length}\n            hasError={errorIncomingConnections}\n            tooltipPosition=\"bottom-left\"\n          />\n        )}\n        className={`connection-dropdown ${\n          errorIncomingConnections ? \"error\" : \"\"\n        }`}\n        disabled={!dependencies.dependencyOptions.length}\n        headerLabel=\"Incoming connections\"\n        height={`${CONNECTION_HEIGHT}px`}\n        options={dependencies.dependencyOptions}\n        renderOption={(optionProps: RenderDropdownOptionType) => {\n          return (\n            <OptionNode\n              isHighlighted={optionProps.isHighlighted}\n              isSelectedNode={optionProps.isSelectedNode}\n              option={optionProps.option}\n            />\n          );\n        }}\n        selected={selectedOption}\n        showDropIcon={false}\n        showLabelOnly\n        width=\"100%\"\n      />\n      {/* <PopperDragHandle /> */}\n      <Dropdown\n        SelectedValueNode={(\n          selectedValueProps: DefaultDropDownValueNodeProps,\n        ) => (\n          <TriggerNode\n            iconAlignment={\"RIGHT\"}\n            justifyContent={\"flex-end\"}\n            {...selectedValueProps}\n            connectionType=\"OUTGOING\"\n            entityCount={dependencies.inverseDependencyOptions.length}\n            hasError={errorOutgoingConnections}\n            tooltipPosition=\"bottom-right\"\n          />\n        )}\n        className={`connection-dropdown ${\n          errorOutgoingConnections ? \"error\" : \"\"\n        }`}\n        disabled={!dependencies.inverseDependencyOptions.length}\n        headerLabel=\"Outgoing connections\"\n        height={`${CONNECTION_HEIGHT}px`}\n        onSelect={navigateToEntity}\n        options={dependencies.inverseDependencyOptions}\n        renderOption={(optionProps: RenderDropdownOptionType) => {\n          return (\n            <OptionNode\n              isHighlighted={optionProps.isHighlighted}\n              isSelectedNode={optionProps.isSelectedNode}\n              option={optionProps.option}\n            />\n          );\n        }}\n        selected={{ label: \"\", value: \"\" }}\n        showDropIcon={false}\n        showLabelOnly\n        width={`100%`}\n      />\n    </TopLayer>\n  );\n}\n\nexport default memo(PropertyPaneConnections);\n","import React, {\n  ReactElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n} from \"react\";\nimport equal from \"fast-deep-equal/es6\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getWidgetPropsForPropertyPaneView } from \"selectors/propertyPaneSelectors\";\nimport { IPanelProps, Position } from \"@blueprintjs/core\";\n\nimport PropertyPaneTitle from \"./PropertyPaneTitle\";\nimport PropertyControlsGenerator from \"./PropertyControlsGenerator\";\nimport { EditorTheme } from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport { deleteSelectedWidget, copyWidget } from \"actions/widgetActions\";\nimport ConnectDataCTA, { actionsExist } from \"./ConnectDataCTA\";\nimport PropertyPaneConnections from \"./PropertyPaneConnections\";\nimport CopyIcon from \"remixicon-react/FileCopyLineIcon\";\nimport DeleteIcon from \"remixicon-react/DeleteBinLineIcon\";\nimport { WidgetType } from \"constants/WidgetConstants\";\nimport {\n  InteractionAnalyticsEventDetail,\n  INTERACTION_ANALYTICS_EVENT,\n} from \"utils/AppsmithUtils\";\nimport { emitInteractionAnalyticsEvent } from \"utils/AppsmithUtils\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { buildDeprecationWidgetMessage, isWidgetDeprecated } from \"../utils\";\nimport { Colors } from \"constants/Colors\";\nimport { BannerMessage, IconSize } from \"design-system-old\";\nimport WidgetFactory from \"utils/WidgetFactory\";\nimport { PropertyPaneTab } from \"./PropertyPaneTab\";\nimport { useSearchText } from \"./helpers\";\nimport { PropertyPaneSearchInput } from \"./PropertyPaneSearchInput\";\nimport { sendPropertyPaneSearchAnalytics } from \"./propertyPaneSearch\";\n\n// TODO(abhinav): The widget should add a flag in their configuration if they donot subscribe to data\n// Widgets where we do not want to show the CTA\nexport const excludeList: WidgetType[] = [\n  \"CONTAINER_WIDGET\",\n  \"TABS_WIDGET\",\n  \"FORM_WIDGET\",\n  \"MODAL_WIDGET\",\n  \"DIVIDER_WIDGET\",\n  \"FILE_PICKER_WIDGET\",\n  \"BUTTON_WIDGET\",\n  \"CANVAS_WIDGET\",\n  \"AUDIO_RECORDER_WIDGET\",\n  \"IFRAME_WIDGET\",\n  \"FILE_PICKER_WIDGET\",\n  \"FILE_PICKER_WIDGET_V2\",\n];\n\nfunction PropertyPaneView(\n  props: {\n    theme: EditorTheme;\n  } & IPanelProps,\n) {\n  const dispatch = useDispatch();\n  const { ...panel } = props;\n  const widgetProperties = useSelector(\n    getWidgetPropsForPropertyPaneView,\n    equal,\n  );\n\n  const doActionsExist = useSelector(actionsExist);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const hideConnectDataCTA = useMemo(() => {\n    if (widgetProperties) {\n      return excludeList.includes(widgetProperties.type);\n    }\n\n    return true;\n  }, [widgetProperties?.type, excludeList]);\n  const { searchText, setSearchText } = useSearchText(\"\");\n\n  const handleKbdEvent = (e: Event) => {\n    const event = e as CustomEvent<InteractionAnalyticsEventDetail>;\n    AnalyticsUtil.logEvent(\"PROPERTY_PANE_KEYPRESS\", {\n      key: event.detail.key,\n      propertyName: event.detail.propertyName,\n      propertyType: event.detail.propertyType,\n      widgetType: event.detail.widgetType,\n    });\n  };\n\n  useEffect(() => {\n    containerRef.current?.addEventListener(\n      INTERACTION_ANALYTICS_EVENT,\n      handleKbdEvent,\n    );\n    return () => {\n      containerRef.current?.removeEventListener(\n        INTERACTION_ANALYTICS_EVENT,\n        handleKbdEvent,\n      );\n    };\n  }, []);\n\n  /**\n   * Analytics for property pane Search\n   */\n  useEffect(() => {\n    sendPropertyPaneSearchAnalytics({\n      widgetType: widgetProperties?.type,\n      searchText,\n      widgetName: widgetProperties.widgetName,\n      searchPath: \"\",\n    });\n  }, [searchText]);\n\n  /**\n   * on delete button click\n   */\n  const onDelete = useCallback(() => {\n    dispatch(deleteSelectedWidget(false));\n  }, [dispatch]);\n\n  /**\n   * on  copy button click\n   */\n  const onCopy = useCallback(() => dispatch(copyWidget(false)), [dispatch]);\n\n  const handleTabKeyDownForButton = useCallback(\n    (propertyName: string) => (e: React.KeyboardEvent) => {\n      if (e.key === \"Tab\")\n        emitInteractionAnalyticsEvent(containerRef?.current, {\n          key: e.key,\n          propertyName,\n          propertyType: \"BUTTON\",\n          widgetType: widgetProperties?.type,\n        });\n    },\n    [],\n  );\n\n  /**\n   * actions shown on the right of title\n   */\n  const actions = useMemo((): Array<{\n    tooltipContent: any;\n    tooltipPosition: Position;\n    icon: ReactElement;\n  }> => {\n    return [\n      {\n        tooltipContent: \"Copy Widget\",\n        tooltipPosition: \"bottom-right\",\n        icon: (\n          <button\n            className=\"p-1 hover:bg-warmGray-100 focus:bg-warmGray-100 group t--copy-widget\"\n            onClick={onCopy}\n            onKeyDown={handleTabKeyDownForButton(\"widgetCopy\")}\n          >\n            <CopyIcon className=\"w-4 h-4 text-gray-500\" />\n          </button>\n        ),\n      },\n      {\n        tooltipContent: \"Delete Widget\",\n        tooltipPosition: \"bottom-right\",\n        icon: (\n          <button\n            className=\"p-1 hover:bg-warmGray-100 focus:bg-warmGray-100 group t--delete-widget\"\n            onClick={onDelete}\n            onKeyDown={handleTabKeyDownForButton(\"widgetDelete\")}\n          >\n            <DeleteIcon className=\"w-4 h-4 text-gray-500\" />\n          </button>\n        ),\n      },\n    ];\n  }, [onCopy, onDelete, handleTabKeyDownForButton]);\n\n  useEffect(() => {\n    setSearchText(\"\");\n  }, [widgetProperties?.widgetId]);\n\n  if (!widgetProperties) return null;\n\n  // Building Deprecation Messages\n  const { isDeprecated, widgetReplacedWith } = isWidgetDeprecated(\n    widgetProperties.type,\n  );\n  // generate messages\n  const deprecationMessage = buildDeprecationWidgetMessage(widgetReplacedWith);\n\n  const isContentConfigAvailable = WidgetFactory.getWidgetPropertyPaneContentConfig(\n    widgetProperties.type,\n  ).length;\n\n  const isStyleConfigAvailable = WidgetFactory.getWidgetPropertyPaneStyleConfig(\n    widgetProperties.type,\n  ).length;\n\n  return (\n    <div\n      className=\"w-full overflow-y-scroll h-full\"\n      key={`property-pane-${widgetProperties.widgetId}`}\n      ref={containerRef}\n    >\n      <PropertyPaneTitle\n        actions={actions}\n        key={widgetProperties.widgetId}\n        title={widgetProperties.widgetName}\n        widgetId={widgetProperties.widgetId}\n        widgetType={widgetProperties?.type}\n      />\n\n      <div style={{ marginTop: \"52px\" }}>\n        <PropertyPaneConnections\n          widgetName={widgetProperties.widgetName}\n          widgetType={widgetProperties.type}\n        />\n        {!doActionsExist && !hideConnectDataCTA && (\n          <ConnectDataCTA\n            widgetId={widgetProperties.widgetId}\n            widgetTitle={widgetProperties.widgetName}\n            widgetType={widgetProperties?.type}\n          />\n        )}\n        {isDeprecated && (\n          <BannerMessage\n            backgroundColor={Colors.WARNING_ORANGE}\n            className=\"t--deprecation-warning\"\n            icon=\"warning-line\"\n            iconColor={Colors.WARNING_SOLID}\n            iconSize={IconSize.XXXXL}\n            message={deprecationMessage}\n            textColor={Colors.BROWN}\n          />\n        )}\n      </div>\n\n      <div\n        className=\"t--property-pane-view\"\n        data-guided-tour-id=\"property-pane\"\n      >\n        {isContentConfigAvailable || isStyleConfigAvailable ? (\n          <>\n            <PropertyPaneSearchInput onTextChange={setSearchText} />\n            {searchText.length > 0 ? (\n              <PropertyControlsGenerator\n                config={WidgetFactory.getWidgetPropertyPaneSearchConfig(\n                  widgetProperties.type,\n                )}\n                id={widgetProperties.widgetId}\n                panel={panel}\n                searchQuery={searchText}\n                theme={EditorTheme.LIGHT}\n                type={widgetProperties.type}\n              />\n            ) : (\n              <PropertyPaneTab\n                contentComponent={\n                  isContentConfigAvailable ? (\n                    <PropertyControlsGenerator\n                      config={WidgetFactory.getWidgetPropertyPaneContentConfig(\n                        widgetProperties.type,\n                      )}\n                      id={widgetProperties.widgetId}\n                      panel={panel}\n                      theme={EditorTheme.LIGHT}\n                      type={widgetProperties.type}\n                    />\n                  ) : null\n                }\n                styleComponent={\n                  isStyleConfigAvailable ? (\n                    <PropertyControlsGenerator\n                      config={WidgetFactory.getWidgetPropertyPaneStyleConfig(\n                        widgetProperties.type,\n                      )}\n                      id={widgetProperties.widgetId}\n                      panel={panel}\n                      theme={EditorTheme.LIGHT}\n                      type={widgetProperties.type}\n                    />\n                  ) : null\n                }\n              />\n            )}\n          </>\n        ) : (\n          <PropertyControlsGenerator\n            config={WidgetFactory.getWidgetPropertyPaneConfig(\n              widgetProperties.type,\n            )}\n            id={widgetProperties.widgetId}\n            panel={panel}\n            theme={EditorTheme.LIGHT}\n            type={widgetProperties.type}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PropertyPaneView;\n","import React, { useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { PanelStack, Classes } from \"@blueprintjs/core\";\n\nimport { get } from \"lodash\";\nimport { getSelectedWidgets } from \"selectors/ui\";\nimport PropertyPaneView from \"./PropertyPaneView\";\n\nconst StyledPanelStack = styled(PanelStack)`\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  &&& .bp3-panel-stack-view {\n    margin: 0;\n    border: none;\n  }\n  overflow: hidden;\n  position: static;\n  &&& .${Classes.PANEL_STACK_VIEW} {\n    position: static;\n    overflow: hidden;\n    height: 100%;\n  }\n`;\n\nfunction PropertyPane() {\n  const selectedWidgets = useSelector(getSelectedWidgets);\n  const panelWrapperRef = useRef<HTMLDivElement>(null);\n\n  // TODO: add analytics code\n  if (\n    selectedWidgets.length === 0 ||\n    get(selectedWidgets, \"0.disablePropertyPane\")\n  ) {\n    return null;\n  }\n\n  return (\n    <div\n      className={\"t--propertypane overflow-y-auto h-full\"}\n      data-testid={\"t--propertypane\"}\n      onClick={(e: any) => {\n        e.stopPropagation();\n      }}\n      ref={panelWrapperRef}\n    >\n      <StyledPanelStack\n        initialPanel={{\n          component: PropertyPaneView,\n        }}\n        onOpen={() => {\n          const parent = panelWrapperRef.current;\n          parent?.scrollTo(0, 0);\n        }}\n        showPanelHeader={false}\n      />\n    </div>\n  );\n}\n\nexport default PropertyPane;\n","import classNames from \"classnames\";\nimport React, { useCallback, useMemo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { updateApplicationLayout } from \"actions/applicationActions\";\nimport { Colors } from \"constants/Colors\";\nimport { Icon, IconName, IconSize, TooltipComponent } from \"design-system-old\";\nimport {\n  AppLayoutConfig,\n  SupportedLayouts,\n} from \"reducers/entityReducers/pageListReducer\";\nimport {\n  getCurrentApplicationId,\n  getCurrentApplicationLayout,\n} from \"selectors/editorSelectors\";\n\ninterface AppsmithLayoutConfigOption {\n  name: string;\n  type: SupportedLayouts;\n  icon?: IconName;\n}\n\nexport const AppsmithDefaultLayout: AppLayoutConfig = {\n  type: \"FLUID\",\n};\n\nconst AppsmithLayouts: AppsmithLayoutConfigOption[] = [\n  {\n    name: \"Fluid Width\",\n    type: \"FLUID\",\n    icon: \"fluid\",\n  },\n  {\n    name: \"Desktop\",\n    type: \"DESKTOP\",\n    icon: \"desktop\",\n  },\n  {\n    name: \"Tablet (Landscape)\",\n    type: \"TABLET_LARGE\",\n    icon: \"tabletLandscape\",\n  },\n  {\n    name: \"Tablet (Portrait)\",\n    type: \"TABLET\",\n    icon: \"tablet\",\n  },\n  {\n    name: \"Mobile Device\",\n    type: \"MOBILE\",\n    icon: \"mobile\",\n  },\n];\n\nexport function MainContainerLayoutControl() {\n  const dispatch = useDispatch();\n  const appId = useSelector(getCurrentApplicationId);\n  const appLayout = useSelector(getCurrentApplicationLayout);\n\n  const buttonRefs: Array<HTMLButtonElement | null> = [];\n\n  /**\n   * return selected layout index. if there is no app\n   * layout, use the default one ( fluid )\n   */\n  const selectedIndex = useMemo(() => {\n    return AppsmithLayouts.findIndex(\n      (each) => each.type === (appLayout?.type || AppsmithDefaultLayout.type),\n    );\n  }, [appLayout]);\n\n  const [focusedIndex, setFocusedIndex] = React.useState(selectedIndex);\n\n  /**\n   * updates the app layout\n   *\n   * @param layoutConfig\n   */\n  const updateAppLayout = useCallback(\n    (layoutConfig: AppLayoutConfig) => {\n      const { type } = layoutConfig;\n\n      dispatch(\n        updateApplicationLayout(appId || \"\", {\n          appLayout: {\n            type,\n          },\n        }),\n      );\n    },\n    [dispatch, appLayout],\n  );\n\n  const handleKeyDown = (event: React.KeyboardEvent, index: number) => {\n    if (!buttonRefs.length) return;\n\n    switch (event.key) {\n      case \"ArrowRight\":\n      case \"Right\":\n        const rightIndex = index === buttonRefs.length - 1 ? 0 : index + 1;\n        buttonRefs[rightIndex]?.focus();\n        setFocusedIndex(rightIndex);\n        break;\n      case \"ArrowLeft\":\n      case \"Left\":\n        const leftIndex = index === 0 ? buttonRefs.length - 1 : index - 1;\n        buttonRefs[leftIndex]?.focus();\n        setFocusedIndex(leftIndex);\n        break;\n    }\n  };\n\n  return (\n    <div className=\"pb-6 space-y-2 t--layout-control-wrapper\">\n      <div\n        className=\"flex justify-around\"\n        onBlur={() => setFocusedIndex(selectedIndex)}\n      >\n        {AppsmithLayouts.map((layoutOption: any, index: number) => {\n          return (\n            <TooltipComponent\n              className=\"flex-grow\"\n              content={layoutOption.name}\n              key={layoutOption.name}\n              position={\n                index === AppsmithLayouts.length - 1 ? \"bottom-right\" : \"bottom\"\n              }\n            >\n              <button\n                className={classNames({\n                  \"border-transparent border flex items-center justify-center p-2 flex-grow  focus:bg-gray-200\": true,\n                  \"bg-white border-gray-300\": selectedIndex === index,\n                  \"bg-gray-100 hover:bg-gray-200\": selectedIndex !== index,\n                })}\n                onClick={() => {\n                  updateAppLayout(layoutOption);\n                  setFocusedIndex(index);\n                }}\n                onKeyDown={(event) => handleKeyDown(event, index)}\n                ref={(input) => buttonRefs.push(input)}\n                tabIndex={index === focusedIndex ? 0 : -1}\n              >\n                <Icon\n                  fillColor={Colors.BLACK}\n                  name={layoutOption.icon}\n                  size={layoutOption.iconSize || IconSize.MEDIUM}\n                />\n              </button>\n            </TooltipComponent>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","// import classNames from \"classnames\";\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\n\n// import { batchUpdateMultipleWidgetProperties } from \"actions/controlActions\";\n// import { ReactComponent as DesktopIcon } from \"assets/icons/ads/app-icons/monitor-alt.svg\";\n// import { ReactComponent as MultiDeviceIcon } from \"assets/icons/ads/app-icons/monitor-smartphone-alt.svg\";\nimport { Colors } from \"constants/Colors\";\n// import { MAIN_CONTAINER_WIDGET_ID } from \"constants/WidgetConstants\";\n// import { IconName } from \"design-system-old\";\nimport {\n  AppPositioningTypeConfig,\n  AppPositioningTypes,\n} from \"reducers/entityReducers/pageListReducer\";\nimport {\n  getCurrentAppPositioningType,\n  // isAutoLayoutEnabled,\n} from \"selectors/editorSelectors\";\n// import { LayoutDirection, Positioning } from \"utils/autoLayout/constants\";\nimport { MainContainerLayoutControl } from \"./MainContainerLayoutControl\";\n// interface ApplicationPositionTypeConfigOption {\n//   name: string;\n//   type: AppPositioningTypes;\n//   icon?: IconName;\n// }\n// const IconObj: any = {\n//   fluid: <MultiDeviceIcon />,\n//   desktop: <DesktopIcon />,\n// };\nexport const AppsmithDefaultPositionType: AppPositioningTypeConfig = {\n  type: AppPositioningTypes.FIXED,\n};\n\n// const AppsmithLayoutTypes: ApplicationPositionTypeConfigOption[] = [\n//   {\n//     name: \"Fixed Layout\",\n//     type: AppPositioningTypes.FIXED,\n//     icon: \"desktop\",\n//   },\n//   {\n//     name: \"Auto Layout\",\n//     type: AppPositioningTypes.AUTO,\n//     icon: \"fluid\",\n//   },\n// ];\n\nexport const Title = styled.p`\n  color: ${Colors.GRAY_800};\n`;\n\nexport function AppPositionTypeControl() {\n  // const dispatch = useDispatch();\n  // const buttonRefs: Array<HTMLButtonElement | null> = [];\n  const selectedOption = useSelector(getCurrentAppPositioningType);\n  // const isAutoLayoutActive = useSelector(isAutoLayoutEnabled);\n  /**\n   * return selected layout index. if there is no app\n   * layout, use the default one ( fluid )\n   */\n  // const selectedIndex = useMemo(() => {\n  //   return AppsmithLayoutTypes.findIndex(\n  //     (each) =>\n  //       each.type === (selectedOption || AppsmithDefaultPositionType.type),\n  //   );\n  // }, [selectedOption]);\n\n  // const [focusedIndex, setFocusedIndex] = React.useState(selectedIndex);\n\n  // useEffect(() => {\n  //   if (!isAutoLayoutActive) {\n  //     /**\n  //      * if feature flag is disabled, set the layout to fixed.\n  //      */\n  //     updateAppPositioningLayout(AppsmithLayoutTypes[0]);\n  //   }\n  // }, [isAutoLayoutActive]);\n\n  // const updateAppPositioningLayout = (\n  //   layoutOption: ApplicationPositionTypeConfigOption,\n  // ) => {\n  //   const selectedType =\n  //     layoutOption.type !== AppPositioningTypes.AUTO\n  //       ? Positioning.Fixed\n  //       : Positioning.Vertical;\n  //   dispatch(\n  //     batchUpdateMultipleWidgetProperties([\n  //       {\n  //         widgetId: MAIN_CONTAINER_WIDGET_ID,\n  //         updates: {\n  //           modify: {\n  //             positioning: selectedType,\n  //             useAutoLayout: selectedType !== Positioning.Fixed,\n  //             direction: LayoutDirection.Vertical,\n  //           },\n  //         },\n  //       },\n  //     ]),\n  //   );\n  // };\n\n  // const handleKeyDown = (event: React.KeyboardEvent, index: number) => {\n  //   if (!buttonRefs.length) return;\n\n  //   switch (event.key) {\n  //     case \"ArrowRight\":\n  //     case \"Right\":\n  //       const rightIndex = index === buttonRefs.length - 1 ? 0 : index + 1;\n  //       buttonRefs[rightIndex]?.focus();\n  //       setFocusedIndex(rightIndex);\n  //       break;\n  //     case \"ArrowLeft\":\n  //     case \"Left\":\n  //       const leftIndex = index === 0 ? buttonRefs.length - 1 : index - 1;\n  //       buttonRefs[leftIndex]?.focus();\n  //       setFocusedIndex(leftIndex);\n  //       break;\n  //   }\n  // };\n\n  return (\n    <>\n      {/* {isAutoLayoutActive ? (\n        <>\n          <Title className=\"text-sm\">App Positioning Type</Title>\n          <div className=\"pb-6 space-y-2 t--layout-control-wrapper\">\n            <div\n              className=\"flex justify-around\"\n              onBlur={() => setFocusedIndex(selectedIndex)}\n            >\n              {AppsmithLayoutTypes.map((layoutOption: any, index: number) => {\n                return (\n                  <TooltipComponent\n                    className=\"flex-grow\"\n                    content={layoutOption.name}\n                    key={layoutOption.name}\n                    position={\n                      index === AppsmithLayoutTypes.length - 1\n                        ? \"bottom-right\"\n                        : \"bottom\"\n                    }\n                  >\n                    <button\n                      className={classNames({\n                        \"border-transparent border flex items-center justify-center p-2 flex-grow  focus:bg-gray-200\": true,\n                        \"bg-white border-gray-300\": selectedIndex === index,\n                        \"bg-gray-100 hover:bg-gray-200\":\n                          selectedIndex !== index,\n                      })}\n                      onClick={() => {\n                        updateAppPositioningLayout(layoutOption);\n                        setFocusedIndex(index);\n                      }}\n                      // onKeyDown={(event) => handleKeyDown(event, index)}\n                      ref={(input) => buttonRefs.push(input)}\n                      tabIndex={index === focusedIndex ? 0 : -1}\n                    >\n                      <div style={{ width: \"16px\", height: \"16px\" }}>\n                        {IconObj[layoutOption.icon]}\n                      </div>\n                    </button>\n                  </TooltipComponent>\n                );\n              })}\n            </div>\n          </div>\n        </>\n      ) : null} */}\n      {selectedOption === AppPositioningTypes.FIXED && (\n        <>\n          <Title className=\"text-sm\">Canvas Size</Title>\n          <MainContainerLayoutControl />\n        </>\n      )}\n    </>\n  );\n}\n","import * as Sentry from \"@sentry/react\";\n\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nimport { PopoverPosition } from \"@blueprintjs/core\";\nimport { Button, Category, Size, TooltipComponent } from \"design-system-old\";\n\nimport { openAppSettingsPaneAction } from \"actions/appSettingsPaneActions\";\nimport { AppPositionTypeControl } from \"../AppPositionTypeControl\";\n\nexport function CanvasPropertyPane() {\n  const dispatch = useDispatch();\n\n  const openAppSettingsPane = () => {\n    dispatch(openAppSettingsPaneAction());\n  };\n  return (\n    <div className=\"relative \">\n      <h3 className=\"px-4 py-3 text-sm font-medium uppercase\">Properties</h3>\n\n      <div className=\"mt-3 space-y-6\">\n        <div className=\"px-4 space-y-2\">\n          <AppPositionTypeControl />\n          <TooltipComponent\n            content={\n              <>\n                <p className=\"text-center\">Update your app theme, URL</p>\n                <p className=\"text-center\">and other settings</p>\n              </>\n            }\n            position={PopoverPosition.BOTTOM}\n          >\n            <Button\n              category={Category.secondary}\n              fill\n              id=\"t--app-settings-cta\"\n              onClick={openAppSettingsPane}\n              size={Size.medium}\n              text=\"App Settings\"\n            />\n          </TooltipComponent>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nCanvasPropertyPane.displayName = \"CanvasPropertyPane\";\n\nexport default Sentry.withProfiler(CanvasPropertyPane);\n","import React from \"react\";\nimport * as Sentry from \"@sentry/react\";\nimport {\n  createMessage,\n  MULTI_SELECT_PROPERTY_PANE_MESSAGE,\n} from \"@appsmith/constants/messages\";\nimport { useSelector } from \"react-redux\";\nimport { getCanvasWidgets } from \"selectors/entitiesSelector\";\nimport { getSelectedWidgets } from \"selectors/ui\";\nimport { useWidgetSelection } from \"utils/hooks/useWidgetSelection\";\nimport { SelectionRequestType } from \"sagas/WidgetSelectUtils\";\n\nfunction MultiSelectPropertyPane() {\n  const { focusWidget, selectWidget } = useWidgetSelection();\n  const selectedWidgets = useSelector(getSelectedWidgets);\n  const canvasWidgets = useSelector(getCanvasWidgets);\n\n  return (\n    <div className=\"relative space-y-3\">\n      <div className=\"px-3 py-3\">\n        <h3 className=\"text-sm font-medium uppercase\">Multi</h3>\n      </div>\n\n      <div className=\"px-3 space-y-3 t--layout-control-wrapper\">\n        <p className=\"text-sm text-gray-700\">\n          {createMessage(MULTI_SELECT_PROPERTY_PANE_MESSAGE)}\n        </p>\n        <div className=\"flex flex-col space-y-3 t-multi-widget-property-pane\">\n          {selectedWidgets.map((selectedWidgetId) => {\n            if (!canvasWidgets[selectedWidgetId]) return;\n            const className = `py-1 border border-gray-300 hover:border-gray-500 t-multi-widget-button-${selectedWidgetId}`;\n            return (\n              <button\n                className={className}\n                key={selectedWidgetId}\n                onClick={() => {\n                  selectWidget(SelectionRequestType.One, [selectedWidgetId]);\n                  focusWidget(selectedWidgetId);\n                }}\n              >\n                {canvasWidgets[selectedWidgetId].widgetName}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nMultiSelectPropertyPane.displayName = \"MultiSelectPropertyPane\";\n\nexport default Sentry.withProfiler(MultiSelectPropertyPane);\n","import { PopoverPosition } from \"@blueprintjs/core\";\nimport { closeAppSettingsPaneAction } from \"actions/appSettingsPaneActions\";\nimport {\n  APP_SETTINGS_CLOSE_TOOLTIP,\n  APP_SETTINGS_PANE_HEADER,\n} from \"@appsmith/constants/messages\";\nimport { Colors } from \"constants/Colors\";\nimport { Icon, IconSize, TooltipComponent } from \"design-system-old\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst StyledHeader = styled.div`\n  height: 48px;\n  padding: 10px 16px 12px;\n  box-shadow: 0 1px 0 0 ${Colors.GRAY_300};\n`;\n\nconst StyledText = styled.div`\n  font-size: 16px;\n`;\n\nfunction PaneHeader() {\n  const dispatch = useDispatch();\n  return (\n    <StyledHeader className=\"flex justify-start items-center\">\n      <TooltipComponent\n        content={APP_SETTINGS_CLOSE_TOOLTIP()}\n        position={PopoverPosition.BOTTOM}\n      >\n        <Icon\n          className=\"pr-2\"\n          fillColor={Colors.GREY_10}\n          id=\"t--close-app-settings-pane\"\n          name=\"double-arrow-right\"\n          onClick={() => dispatch(closeAppSettingsPaneAction())}\n          size={IconSize.SMALL}\n        />\n      </TooltipComponent>\n      <StyledText>{APP_SETTINGS_PANE_HEADER()}</StyledText>\n    </StyledHeader>\n  );\n}\n\nexport default PaneHeader;\n","import { closeAppSettingsPaneAction } from \"actions/appSettingsPaneActions\";\nimport React, { useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useOnClickOutside } from \"utils/hooks/useOnClickOutside\";\nimport AppSettings from \"./AppSettings\";\nimport PaneHeader from \"./PaneHeader\";\n\nfunction AppSettingsPane() {\n  const dispatch = useDispatch();\n  const paneRef = useRef(null);\n  const portalRef = useRef(null);\n\n  useOnClickOutside([paneRef, portalRef], () => {\n    if (document.getElementById(\"save-theme-modal\")) return;\n    if (document.getElementById(\"delete-theme-modal\")) return;\n    if (document.getElementById(\"manual-upgrades-modal\")) return;\n    dispatch(closeAppSettingsPaneAction());\n  });\n\n  return (\n    <div className=\"h-full\" ref={paneRef}>\n      <div\n        className=\"absolute inset-0 h-0\"\n        id=\"app-settings-portal\"\n        ref={portalRef}\n      />\n      <PaneHeader />\n      <AppSettings />\n    </div>\n  );\n}\n\nexport default AppSettingsPane;\n","import classNames from \"classnames\";\nimport * as Sentry from \"@sentry/react\";\nimport { useSelector } from \"react-redux\";\nimport React, { memo, useEffect, useMemo, useRef } from \"react\";\n\nimport PerformanceTracker, {\n  PerformanceTransactionName,\n} from \"utils/PerformanceTracker\";\nimport { getSelectedWidgets } from \"selectors/ui\";\nimport { tailwindLayers } from \"constants/Layers\";\nimport WidgetPropertyPane from \"pages/Editor/PropertyPane\";\nimport { previewModeSelector } from \"selectors/editorSelectors\";\nimport CanvasPropertyPane from \"pages/Editor/CanvasPropertyPane\";\nimport useHorizontalResize from \"utils/hooks/useHorizontalResize\";\nimport { getIsDraggingForSelection } from \"selectors/canvasSelectors\";\nimport MultiSelectPropertyPane from \"pages/Editor/MultiSelectPropertyPane\";\nimport { getIsDraggingOrResizing } from \"selectors/widgetSelectors\";\nimport equal from \"fast-deep-equal\";\nimport { selectedWidgetsPresentInCanvas } from \"selectors/propertyPaneSelectors\";\nimport { getIsAppSettingsPaneOpen } from \"selectors/appSettingsPaneSelectors\";\nimport AppSettingsPane from \"pages/Editor/AppSettingsPane\";\nimport { APP_SETTINGS_PANE_WIDTH } from \"constants/AppConstants\";\nimport { getPaneCount, isMultiPaneActive } from \"selectors/multiPaneSelectors\";\nimport { PaneLayoutOptions } from \"reducers/uiReducers/multiPaneReducer\";\n\ntype Props = {\n  width: number;\n  onDragEnd?: () => void;\n  onWidthChange: (width: number) => void;\n};\n\nexport const PropertyPaneSidebar = memo((props: Props) => {\n  const sidebarRef = useRef<HTMLDivElement>(null);\n  const prevSelectedWidgetId = useRef<string | undefined>();\n\n  const {\n    onMouseDown,\n    onMouseUp,\n    onTouchStart,\n    resizing,\n  } = useHorizontalResize(\n    sidebarRef,\n    props.onWidthChange,\n    props.onDragEnd,\n    true,\n  );\n\n  const isPreviewMode = useSelector(previewModeSelector);\n  const selectedWidgetIds = useSelector(getSelectedWidgets);\n  const isDraggingOrResizing = useSelector(getIsDraggingOrResizing);\n  const isAppSettingsPaneOpen = useSelector(getIsAppSettingsPaneOpen);\n  const isMultiPane = useSelector(isMultiPaneActive);\n  const paneCount = useSelector(getPaneCount);\n\n  //while dragging or resizing and\n  //the current selected WidgetId is not equal to previous widget id,\n  //then don't render PropertyPane\n  const shouldNotRenderPane =\n    isDraggingOrResizing &&\n    selectedWidgetIds[0] !== prevSelectedWidgetId.current;\n\n  // This is to keep the theming properties from changing,\n  // while dragging a widget when no other widgets were selected\n  const keepThemeWhileDragging =\n    prevSelectedWidgetId.current === undefined && shouldNotRenderPane;\n\n  const selectedWidgets = useSelector(selectedWidgetsPresentInCanvas, equal);\n\n  const isDraggingForSelection = useSelector(getIsDraggingForSelection);\n\n  prevSelectedWidgetId.current =\n    selectedWidgetIds.length === 1 ? selectedWidgetIds[0] : undefined;\n\n  PerformanceTracker.startTracking(PerformanceTransactionName.SIDE_BAR_MOUNT);\n  useEffect(() => {\n    PerformanceTracker.stopTracking();\n  });\n\n  /**\n   * renders the property pane:\n   * 1. if isAppSettingsPaneOpen -> AppSettingsPane\n   * 2. if no widget is selected -> CanvasPropertyPane\n   * 3. if more than one widget is selected -> MultiWidgetPropertyPane\n   * 4. if user is dragging for selection -> CanvasPropertyPane\n   * 5. if only one widget is selected -> WidgetPropertyPane\n   */\n  const propertyPane = useMemo(() => {\n    switch (true) {\n      case isAppSettingsPaneOpen:\n        return <AppSettingsPane />;\n      case selectedWidgets.length > 1:\n        return <MultiSelectPropertyPane />;\n      case selectedWidgets.length === 1:\n        if (shouldNotRenderPane) return <CanvasPropertyPane />;\n        else return <WidgetPropertyPane />;\n      case selectedWidgets.length === 0:\n        return <CanvasPropertyPane />;\n      default:\n        return <CanvasPropertyPane />;\n    }\n  }, [\n    isAppSettingsPaneOpen,\n    selectedWidgets.length,\n    isDraggingForSelection,\n    shouldNotRenderPane,\n    keepThemeWhileDragging,\n  ]);\n  const showResizer = isAppSettingsPaneOpen\n    ? false\n    : isMultiPane\n    ? paneCount === PaneLayoutOptions.THREE_PANE\n    : true;\n\n  return (\n    <div className=\"relative h-full\">\n      {/* PROPERTY PANE */}\n      <div\n        className={classNames({\n          [`js-property-pane-sidebar t--property-pane-sidebar bg-white flex h-full  border-l border-gray-200 transform transition duration-300 ${tailwindLayers.propertyPane}`]: true,\n          \"relative \": !isPreviewMode,\n          \"fixed translate-x-full right-0\": isPreviewMode,\n        })}\n        ref={sidebarRef}\n      >\n        {/* RESIZER */}\n        {showResizer && (\n          <div\n            className={`absolute top-0 left-0 w-2 h-full -ml-1 group  cursor-ew-resize ${tailwindLayers.resizer}`}\n            onMouseDown={onMouseDown}\n            onTouchEnd={onMouseUp}\n            onTouchStart={onTouchStart}\n          >\n            <div\n              className={classNames({\n                \"w-1 h-full ml-1 bg-transparent group-hover:bg-gray-300 transform transition\": true,\n                \"bg-gray-300\": resizing,\n              })}\n            />\n          </div>\n        )}\n        <div\n          className={classNames({\n            \"h-full p-0 overflow-y-auto min-w-72\": true,\n            \"max-w-104\": !isAppSettingsPaneOpen,\n            \"transition-all duration-100\": !resizing,\n          })}\n          style={{\n            width: isAppSettingsPaneOpen\n              ? APP_SETTINGS_PANE_WIDTH\n              : props.width,\n          }}\n        >\n          {propertyPane}\n        </div>\n      </div>\n    </div>\n  );\n});\n\nPropertyPaneSidebar.displayName = \"PropertyPaneSidebar\";\n\nexport default Sentry.withProfiler(PropertyPaneSidebar);\n","import { setPropertyPaneWidthAction } from \"actions/propertyPaneActions\";\nimport PropertyPaneSidebar from \"components/editorComponents/PropertyPaneSidebar\";\nimport React, { useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getPropertyPaneWidth } from \"selectors/propertyPaneSelectors\";\n\nfunction PropertyPaneContainer() {\n  const dispatch = useDispatch();\n  const propertyPaneWidth = useSelector(getPropertyPaneWidth);\n\n  /**\n   * on property pane sidebar drag end\n   *\n   * @return void\n   */\n  const onRightSidebarDragEnd = useCallback(() => {\n    dispatch(setPropertyPaneWidthAction(propertyPaneWidth));\n  }, [propertyPaneWidth]);\n\n  /**\n   * on property pane sidebar width change\n   */\n  const onRightSidebarWidthChange = useCallback((newWidth) => {\n    dispatch(setPropertyPaneWidthAction(newWidth));\n  }, []);\n\n  return (\n    <PropertyPaneSidebar\n      onDragEnd={onRightSidebarDragEnd}\n      onWidthChange={onRightSidebarWidthChange}\n      width={propertyPaneWidth}\n    />\n  );\n}\n\nexport default PropertyPaneContainer;\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { setCanvasSelectionFromEditor } from \"actions/canvasSelectionActions\";\nimport { closePropertyPane, closeTableFilterPane } from \"actions/widgetActions\";\nimport Debugger from \"components/editorComponents/Debugger\";\nimport EditorContextProvider from \"components/editorComponents/EditorContextProvider\";\nimport { getCurrentApplication } from \"selectors/applicationSelectors\";\n\nimport {\n  getCurrentPageId,\n  getCurrentPageName,\n} from \"selectors/editorSelectors\";\nimport { isMultiPaneActive } from \"selectors/multiPaneSelectors\";\nimport {\n  getIsOnboardingTasksView,\n  inGuidedTour,\n} from \"selectors/onboardingSelectors\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { useAutoHeightUIState } from \"utils/hooks/autoHeightUIHooks\";\nimport { useAllowEditorDragToSelect } from \"utils/hooks/useAllowEditorDragToSelect\";\nimport { useWidgetSelection } from \"utils/hooks/useWidgetSelection\";\nimport PerformanceTracker, {\n  PerformanceTransactionName,\n} from \"utils/PerformanceTracker\";\nimport OnboardingTasks from \"../FirstTimeUserOnboarding/Tasks\";\nimport CrudInfoModal from \"../GeneratePage/components/CrudInfoModal\";\nimport Guide from \"../GuidedTour/Guide\";\nimport CanvasContainer from \"./CanvasContainer\";\nimport CanvasTopSection from \"./EmptyCanvasSection\";\nimport PageTabs from \"./PageTabs\";\nimport PropertyPaneContainer from \"./PropertyPaneContainer\";\n\nfunction WidgetsEditor() {\n  const { deselectAll, focusWidget } = useWidgetSelection();\n  const dispatch = useDispatch();\n  const currentPageId = useSelector(getCurrentPageId);\n  const currentPageName = useSelector(getCurrentPageName);\n  const currentApp = useSelector(getCurrentApplication);\n  const showOnboardingTasks = useSelector(getIsOnboardingTasksView);\n  const guidedTourEnabled = useSelector(inGuidedTour);\n  const isMultiPane = useSelector(isMultiPaneActive);\n\n  useEffect(() => {\n    PerformanceTracker.stopTracking(PerformanceTransactionName.CLOSE_SIDE_PANE);\n  });\n\n  // log page load\n  useEffect(() => {\n    if (currentPageName !== undefined && currentPageId !== undefined) {\n      AnalyticsUtil.logEvent(\"PAGE_LOAD\", {\n        pageName: currentPageName,\n        pageId: currentPageId,\n        appName: currentApp?.name,\n        mode: \"EDIT\",\n      });\n    }\n  }, [currentPageName, currentPageId]);\n\n  const allowDragToSelect = useAllowEditorDragToSelect();\n  const { isAutoHeightWithLimitsChanging } = useAutoHeightUIState();\n\n  const handleWrapperClick = useCallback(() => {\n    // Making sure that we don't deselect the widget\n    // after we are done dragging the limits in auto height with limits\n    if (allowDragToSelect && !isAutoHeightWithLimitsChanging) {\n      focusWidget && focusWidget();\n      deselectAll && deselectAll();\n      dispatch(closePropertyPane());\n      dispatch(closeTableFilterPane());\n      dispatch(setCanvasSelectionFromEditor(false));\n    }\n  }, [\n    allowDragToSelect,\n    focusWidget,\n    deselectAll,\n    isAutoHeightWithLimitsChanging,\n  ]);\n\n  /**\n   *  drag event handler for selection drawing\n   */\n  const onDragStart = useCallback(\n    (e: any) => {\n      e.preventDefault();\n      e.stopPropagation();\n      if (allowDragToSelect) {\n        const startPoints = {\n          x: e.clientX,\n          y: e.clientY,\n        };\n        dispatch(setCanvasSelectionFromEditor(true, startPoints));\n      }\n    },\n    [allowDragToSelect],\n  );\n\n  PerformanceTracker.stopTracking();\n  return (\n    <EditorContextProvider renderMode=\"CANVAS\">\n      {showOnboardingTasks ? (\n        <OnboardingTasks />\n      ) : (\n        <>\n          {guidedTourEnabled && <Guide />}\n          <div className=\"relative flex flex-row w-full overflow-hidden\">\n            <div className=\"relative flex flex-col w-full overflow-hidden\">\n              <CanvasTopSection />\n              <div\n                className=\"relative flex flex-row w-full overflow-hidden justify-center\"\n                data-testid=\"widgets-editor\"\n                draggable\n                id=\"widgets-editor\"\n                onClick={handleWrapperClick}\n                onDragStart={onDragStart}\n              >\n                <PageTabs />\n                <CanvasContainer />\n                <CrudInfoModal />\n                <Debugger />\n              </div>\n            </div>\n            {!isMultiPane && <PropertyPaneContainer />}\n          </div>\n        </>\n      )}\n    </EditorContextProvider>\n  );\n}\n\nexport default WidgetsEditor;\n","import { AppState } from \"@appsmith/reducers\";\nimport {\n  snipingModeSelector,\n  previewModeSelector,\n} from \"selectors/editorSelectors\";\nimport { useSelector } from \"react-redux\";\n\nexport const useAllowEditorDragToSelect = () => {\n  // This state tells us whether a `ResizableComponent` is resizing\n  const isResizing = useSelector(\n    (state: AppState) => state.ui.widgetDragResize.isResizing,\n  );\n\n  // This state tells us whether a `DraggableComponent` is dragging\n  const isDragging = useSelector(\n    (state: AppState) => state.ui.widgetDragResize.isDragging,\n  );\n\n  // This state tells us if it is already dragging for selection\n  const isSelecting = useSelector(\n    (state: AppState) => state.ui.canvasSelection.isDraggingForSelection,\n  );\n\n  // This state tells us to disable dragging,\n  // This is usually true when widgets themselves implement drag/drop\n  // This flag resolves conflicting drag/drop triggers.\n  const isDraggingDisabled: boolean = useSelector(\n    (state: AppState) => state.ui.widgetDragResize.isDraggingDisabled,\n  );\n\n  // True when any widget is dragging or resizing, including this one\n  const isResizingOrDragging = !!isResizing || !!isDragging || !!isSelecting;\n  const isSnipingMode = useSelector(snipingModeSelector);\n  const isPreviewMode = useSelector(previewModeSelector);\n\n  return (\n    !isResizingOrDragging &&\n    !isDraggingDisabled &&\n    !isSnipingMode &&\n    !isPreviewMode\n  );\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { formValueSelector } from \"redux-form\";\nimport {\n  POST_BODY_FORMAT_OPTIONS,\n  POST_BODY_FORMAT_TITLES,\n} from \"constants/ApiEditorConstants/CommonApiConstants\";\nimport { API_EDITOR_FORM_NAME } from \"@appsmith/constants/forms\";\nimport KeyValueFieldArray from \"components/editorComponents/form/fields/KeyValueFieldArray\";\nimport DynamicTextField from \"components/editorComponents/form/fields/DynamicTextField\";\nimport { AppState } from \"@appsmith/reducers\";\nimport FIELD_VALUES from \"constants/FieldExpectedValue\";\nimport {\n  CodeEditorBorder,\n  EditorModes,\n  EditorSize,\n  EditorTheme,\n  TabBehaviour,\n} from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport { Classes, MultiSwitch } from \"design-system-old\";\nimport { updateBodyContentType } from \"actions/apiPaneActions\";\nimport { CodeEditorExpected } from \"components/editorComponents/CodeEditor\";\nimport { AutocompleteDataType } from \"utils/autocomplete/CodemirrorTernService\";\nimport { createMessage, API_PANE_NO_BODY } from \"@appsmith/constants/messages\";\n\nconst PostBodyContainer = styled.div`\n  padding: 12px 0px 0px;\n  background-color: ${(props) => props.theme.colors.apiPane.tabBg};\n  height: 100%;\n`;\n\nconst JSONEditorFieldWrapper = styled.div`\n  margin: 0 30px;\n  width: 65%;\n  .CodeMirror {\n    height: auto;\n    min-height: 250px;\n  }\n`;\n\nconst NoBodyMessage = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n\n  .${Classes.TEXT} {\n    color: ${(props) => props.theme.colors.apiPane.body.text};\n  }\n`;\n\ninterface PostDataProps {\n  displayFormat: any;\n  dataTreePath: string;\n  theme?: EditorTheme;\n  updateBodyContentType: (contentType: string, apiId: string) => void;\n  apiId: string;\n}\n\ntype Props = PostDataProps;\n\nconst expectedPostBody: CodeEditorExpected = {\n  type: FIELD_VALUES.API_ACTION.body,\n  example: '{\\n  \"color\":\"blue\",\\n  \"isVisible\": true \\n}',\n  autocompleteDataType: AutocompleteDataType.OBJECT,\n};\n\nfunction PostBodyData(props: Props) {\n  const {\n    apiId,\n    dataTreePath,\n    displayFormat,\n    theme,\n    updateBodyContentType,\n  } = props;\n\n  const tabComponentsMap = (key: string, contentType: string): JSX.Element => {\n    return {\n      [POST_BODY_FORMAT_OPTIONS.NONE]: (\n        <NoBodyMessage id=\"NoBodyMessageDiv\">\n          {\" \"}\n          {createMessage(API_PANE_NO_BODY)}{\" \"}\n        </NoBodyMessage>\n      ),\n      [POST_BODY_FORMAT_OPTIONS.JSON]: (\n        <JSONEditorFieldWrapper className={\"t--apiFormPostBody\"} key={key}>\n          <DynamicTextField\n            border={CodeEditorBorder.ALL_SIDE}\n            dataTreePath={`${dataTreePath}.body`}\n            evaluatedPopUpLabel={\"Body\"}\n            expected={expectedPostBody}\n            mode={EditorModes.JSON_WITH_BINDING}\n            name=\"actionConfiguration.body\"\n            placeholder={`{{\\n\\t{name: inputName.property, preference: dropdownName.property}\\n}}`}\n            showLineNumbers\n            size={EditorSize.EXTENDED}\n            tabBehaviour={TabBehaviour.INDENT}\n            theme={theme}\n          />\n        </JSONEditorFieldWrapper>\n      ),\n      [POST_BODY_FORMAT_OPTIONS.FORM_URLENCODED]: (\n        <KeyValueFieldArray\n          dataTreePath={`${dataTreePath}.bodyFormData`}\n          key={key}\n          label=\"\"\n          name=\"actionConfiguration.bodyFormData\"\n          pushFields\n          theme={theme}\n        />\n      ),\n\n      [POST_BODY_FORMAT_OPTIONS.MULTIPART_FORM_DATA]: (\n        <KeyValueFieldArray\n          dataTreePath={`${dataTreePath}.bodyFormData`}\n          hasType\n          key={key}\n          label=\"\"\n          name=\"actionConfiguration.bodyFormData\"\n          pushFields\n          theme={theme}\n        />\n      ),\n\n      [POST_BODY_FORMAT_OPTIONS.RAW]: (\n        <JSONEditorFieldWrapper key={key}>\n          <DynamicTextField\n            border={CodeEditorBorder.ALL_SIDE}\n            dataTreePath={`${dataTreePath}.body`}\n            mode={EditorModes.TEXT_WITH_BINDING}\n            name=\"actionConfiguration.body\"\n            placeholder={`{{\\n\\t{name: inputName.property, preference: dropdownName.property}\\n}}`}\n            size={EditorSize.EXTENDED}\n            tabBehaviour={TabBehaviour.INDENT}\n            theme={theme}\n          />\n        </JSONEditorFieldWrapper>\n      ),\n    }[contentType];\n  };\n\n  return (\n    <PostBodyContainer>\n      <MultiSwitch\n        cypressSelector=\"t--api-body-tab-switch\"\n        onSelect={(title: string) => updateBodyContentType(title, apiId)}\n        selected={displayFormat}\n        tabs={POST_BODY_FORMAT_TITLES.map((el) => {\n          return {\n            key: el.key,\n            title: el.title,\n            panelComponent: tabComponentsMap(el.key, el.key),\n          };\n        })}\n      />\n    </PostBodyContainer>\n  );\n}\n\nconst selector = formValueSelector(API_EDITOR_FORM_NAME);\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  updateBodyContentType: (contentType: string, apiId: string) =>\n    dispatch(updateBodyContentType(contentType, apiId)),\n});\n\nexport default connect((state: AppState) => {\n  const apiId = selector(state, \"id\");\n  const extraFormData = state.ui.apiPane.extraformData[apiId] || {};\n  // Defaults to NONE when extraformData is empty\n  const displayFormat = extraFormData[\"displayFormat\"] || {\n    label: POST_BODY_FORMAT_OPTIONS.NONE,\n    value: POST_BODY_FORMAT_OPTIONS.NONE,\n  };\n\n  return {\n    displayFormat,\n    apiId,\n  };\n}, mapDispatchToProps)(PostBodyData);\n","import { RadioComponent } from \"design-system-old\";\nimport React, { useEffect, useState } from \"react\";\nimport { WrappedFieldInputProps } from \"redux-form\";\n\nexport type RadioGroupWrapperProps = {\n  placeholder: string;\n  input: WrappedFieldInputProps;\n  options: Array<{ value: string; label: string }>;\n  selectedOptionElements?: Array<JSX.Element | null>;\n  className?: string;\n  columns?: number;\n  rows?: number;\n};\n\nfunction RadioGroupWrapper(props: RadioGroupWrapperProps) {\n  const selectedValueHandler = () => {\n    if (\n      props.input &&\n      props.input.value &&\n      Object.keys(props.input.value).length > 0\n    ) {\n      return props.input.value.value;\n    } else if (props.input && typeof props.input.value === \"string\") {\n      return props.input.value;\n    } else if (props.placeholder) {\n      return props.placeholder;\n    }\n  };\n  const [selectedOption, setSelectedOption] = useState<string>(\n    selectedValueHandler(),\n  );\n  const onSelectHandler = (value: string) => {\n    props.input.onChange({ value: value });\n  };\n\n  useEffect(() => {\n    setSelectedOption(selectedValueHandler());\n  }, [props.input.value, props.placeholder]);\n\n  return (\n    <RadioComponent\n      className={props.className}\n      columns={props.columns}\n      defaultValue={selectedOption}\n      onSelect={(value: string) => onSelectHandler(value)}\n      options={props.options}\n      rows={props.rows}\n      selectedOptionElements={props.selectedOptionElements}\n    />\n  );\n}\n\nexport default RadioGroupWrapper;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { Field } from \"redux-form\";\nimport RadioGroupWrapper, { RadioGroupWrapperProps } from \"./RadioGroupWrapper\";\n\ninterface RadioFieldProps {\n  name: string;\n  className?: string;\n  options: Array<{\n    label: string;\n    value: string;\n  }>;\n  placeholder: string;\n}\n\nconst renderComponent = (\n  componentProps: RadioFieldProps & RadioGroupWrapperProps,\n) => {\n  return <RadioGroupWrapper {...componentProps} />;\n};\n\nfunction RadioFieldGroup(\n  props: RadioFieldProps & Partial<RadioGroupWrapperProps>,\n) {\n  return (\n    <Field\n      className={props.className}\n      component={renderComponent}\n      format={(value: string) => _.find(props.options, { value }) || \"\"}\n      normalize={(option: { value: string }) => option.value}\n      {...props}\n    />\n  );\n}\n\nexport default RadioFieldGroup;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport DynamicTextField from \"components/editorComponents/form/fields/DynamicTextField\";\nimport FormRow from \"components/editorComponents/FormRow\";\nimport { PaginationType } from \"entities/Action\";\nimport RadioFieldGroup from \"components/editorComponents/form/fields/RadioGroupField\";\nimport {\n  Button,\n  Category,\n  Classes,\n  Size,\n  Text,\n  TextType,\n} from \"design-system-old\";\nimport {\n  CodeEditorBorder,\n  EditorTheme,\n} from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport { GifPlayer } from \"design-system-old\";\nimport lightmodeGif from \"assets/icons/gifs/config_pagination_lightmode.gif\";\nimport darkmodeGif from \"assets/icons/gifs/config_pagination_darkmode.gif\";\nimport lightmodeThumbnail from \"assets/icons/gifs/lightmode_thumbnail.png\";\nimport darkmodeThumbnail from \"assets/icons/gifs/darkmode_thumbnail.png\";\n\ninterface PaginationProps {\n  actionName: string;\n  onTestClick: (test?: \"PREV\" | \"NEXT\") => void;\n  paginationType: PaginationType;\n  theme?: EditorTheme;\n}\nconst PaginationFieldWrapper = styled.div`\n  display: flex;\n  margin-bottom: ${(props) => props.theme.spaces[5]}px;\n  margin-left: ${(props) => props.theme.spaces[11] + 2}px;\n  width: 420px;\n  button {\n    margin-left: ${(props) => props.theme.spaces[5]}px;\n  }\n`;\n\nconst Step = styled(Text)`\n  display: block;\n  margin-bottom: ${(props) => props.theme.spaces[5]}px;\n  color: ${(props) => props.theme.colors.apiPane.pagination.label};\n  margin-left: ${(props) => props.theme.spaces[11] + 2}px;\n`;\n\nconst StepTitle = styled.div`\n  display: flex;\n  margin-bottom: ${(props) => props.theme.spaces[4]}px;\n  span {\n    color: ${(props) => props.theme.colors.apiPane.pagination.stepTitle};\n  }\n`;\n\nconst PaginationTypeView = styled.div`\n  margin-left: 28px;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: ${(props) => props.theme.spaces[11]}px;\n`;\n\nconst PaginationSection = styled.div`\n  display: flex;\n  padding: ${(props) => props.theme.spaces[8]}px\n    ${(props) => props.theme.spaces[12]}px;\n`;\n\nconst Example = styled(Text)`\n  display: block;\n  margin-left: ${(props) => props.theme.spaces[11] + 2}px;\n  margin-bottom: ${(props) => props.theme.spaces[3]}px;\n  color: ${(props) => props.theme.colors.apiPane.pagination.label};\n`;\n\nconst BindingKey = styled.div`\n  padding: ${(props) => props.theme.spaces[1] - 2}px\n    ${(props) => props.theme.spaces[1]}px;\n  margin-left: ${(props) => props.theme.spaces[11] + 2}px;\n  width: fit-content;\n  span {\n    color: ${(props) => props.theme.colors.apiPane.pagination.label};\n  }\n  background: ${(props) => props.theme.colors.apiPane.pagination.bindingBg};\n`;\n\nconst GifContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  img {\n    width: 320px;\n    height: 161px;\n  }\n\n  .${Classes.TEXT} {\n    margin-top: 12px;\n  }\n`;\n\nexport default function Pagination(props: PaginationProps) {\n  return (\n    <PaginationSection>\n      <FormRow>\n        <RadioFieldGroup\n          className=\"t--apiFormPaginationType\"\n          name=\"actionConfiguration.paginationType\"\n          options={[\n            {\n              label: \"None\",\n              value: PaginationType.NONE,\n            },\n            {\n              label: \"Paginate with Table Page No\",\n              value: PaginationType.PAGE_NO,\n            },\n            {\n              label: \"Paginate with Response Url\",\n              value: PaginationType.URL,\n            },\n          ]}\n          placeholder=\"Method\"\n          rows={3}\n          selectedOptionElements={[\n            null,\n            <PaginationTypeView key={PaginationType.PAGE_NO}>\n              <div>\n                <StepTitle>\n                  <Text type={TextType.P1}>\n                    1. Configure Table for Pagination\n                  </Text>\n                </StepTitle>\n                <Step type={TextType.P1}>1. Enable server side pagination</Step>\n                <Step type={TextType.P1}>2. Configure OnPageChange action</Step>\n                <StepTitle>\n                  <Text type={TextType.P1}>\n                    2. Configure Request Parameters\n                  </Text>\n                </StepTitle>\n                <Step style={{ width: \"336px\" }} type={TextType.P1}>\n                  1. Map appropiate parameter or header in your request to\n                  UsersTable’s page number property\n                </Step>\n                <Example type={TextType.P2}>\n                  Example - Map key <i>pageNo</i> or similar to value\n                </Example>\n                <BindingKey>\n                  <Text type={TextType.P2}>{\"{{UsersTable.pageNo}}\"}</Text>\n                </BindingKey>\n              </div>\n              <GifContainer>\n                <GifPlayer\n                  gif={\n                    props.theme === EditorTheme.LIGHT\n                      ? lightmodeGif\n                      : darkmodeGif\n                  }\n                  thumbnail={\n                    props.theme === EditorTheme.LIGHT\n                      ? lightmodeThumbnail\n                      : darkmodeThumbnail\n                  }\n                />\n                <Text type={TextType.P3}>\n                  1. How to Configure Table for Pagination\n                </Text>\n              </GifContainer>\n            </PaginationTypeView>,\n            <PaginationTypeView key={PaginationType.URL}>\n              <div>\n                <StepTitle>\n                  <Text type={TextType.P1}>\n                    1. Configure Table for Pagination\n                  </Text>\n                </StepTitle>\n                <Step type={TextType.P1}>1. Enable server side pagination</Step>\n                <Step type={TextType.P1}>2. Configure OnPageChange action</Step>\n                <StepTitle>\n                  <Text type={TextType.P1}>\n                    2. Configure Request Parameters\n                  </Text>\n                </StepTitle>\n                <Step type={TextType.P1}>Configure Next and Previous URL </Step>\n                <Step type={TextType.P1}>Previous url</Step>\n                <PaginationFieldWrapper\n                  data-replay-id={btoa(\"actionConfiguration.prev\")}\n                >\n                  <DynamicTextField\n                    border={CodeEditorBorder.ALL_SIDE}\n                    className=\"t--apiFormPaginationPrev\"\n                    evaluatedPopUpLabel=\"Previous Url\"\n                    fill={!!true}\n                    focusElementName={`${props.actionName}.actionConfiguration.prev`}\n                    height=\"100%\"\n                    name=\"actionConfiguration.prev\"\n                    theme={props.theme}\n                  />\n                  <Button\n                    category={Category.secondary}\n                    className=\"t--apiFormPaginationPrevTest\"\n                    height=\"auto\"\n                    onClick={() => {\n                      props.onTestClick(\"PREV\");\n                    }}\n                    size={Size.medium}\n                    tag=\"button\"\n                    text={\"Test\"}\n                    type=\"button\"\n                  />\n                </PaginationFieldWrapper>\n                <Step type={TextType.P1}>Next url</Step>\n                <PaginationFieldWrapper\n                  data-replay-id={btoa(\"actionConfiguration.next\")}\n                >\n                  <DynamicTextField\n                    border={CodeEditorBorder.ALL_SIDE}\n                    className=\"t--apiFormPaginationNext\"\n                    evaluatedPopUpLabel=\"Next Url\"\n                    fill={!!true}\n                    focusElementName={`${props.actionName}.actionConfiguration.next`}\n                    height=\"100%\"\n                    name=\"actionConfiguration.next\"\n                    theme={props.theme}\n                  />\n                  <Button\n                    category={Category.secondary}\n                    className=\"t--apiFormPaginationNextTest\"\n                    height=\"auto\"\n                    onClick={() => {\n                      props.onTestClick(\"NEXT\");\n                    }}\n                    size={Size.medium}\n                    tag=\"button\"\n                    text={\"Test\"}\n                    type=\"button\"\n                  />\n                </PaginationFieldWrapper>\n              </div>\n              <GifContainer>\n                <GifPlayer\n                  gif={\n                    props.theme === EditorTheme.LIGHT\n                      ? lightmodeGif\n                      : darkmodeGif\n                  }\n                  thumbnail={\n                    props.theme === EditorTheme.LIGHT\n                      ? lightmodeThumbnail\n                      : darkmodeThumbnail\n                  }\n                />\n                <Text type={TextType.P3}>\n                  1. How to Configure Table for Pagination\n                </Text>\n              </GifContainer>\n            </PaginationTypeView>,\n          ]}\n        />\n      </FormRow>\n    </PaginationSection>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  change,\n  formValueSelector,\n  InjectedFormProps,\n  reduxForm,\n} from \"redux-form\";\nimport styled from \"styled-components\";\nimport { API_EDITOR_FORM_NAME } from \"@appsmith/constants/forms\";\nimport { Action } from \"entities/Action\";\nimport PostBodyData from \"./PostBodyData\";\nimport { EMPTY_RESPONSE } from \"components/editorComponents/ApiResponseView\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { getApiName } from \"selectors/formSelectors\";\nimport { EditorTheme } from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport { Classes, Text, TextType } from \"design-system-old\";\nimport { createMessage, API_PANE_NO_BODY } from \"@appsmith/constants/messages\";\nimport get from \"lodash/get\";\nimport { Datasource } from \"entities/Datasource\";\nimport {\n  getAction,\n  getActionData,\n  getActionResponses,\n} from \"../../../selectors/entitiesSelector\";\nimport { isEmpty } from \"lodash\";\nimport CommonEditorForm, { CommonFormProps } from \"./CommonEditorForm\";\nimport Pagination from \"./Pagination\";\n\nconst NoBodyMessage = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n\n  .${Classes.TEXT} {\n    color: ${(props) => props.theme.colors.apiPane.body.text};\n  }\n`;\n\ntype APIFormProps = {\n  httpMethodFromForm: string;\n} & CommonFormProps;\n\ntype Props = APIFormProps & InjectedFormProps<Action, APIFormProps>;\n\nfunction ApiEditorForm(props: Props) {\n  const { actionName, httpMethodFromForm } = props;\n  const allowPostBody = httpMethodFromForm;\n  const theme = EditorTheme.LIGHT;\n\n  return (\n    <CommonEditorForm\n      {...props}\n      bodyUIComponent={\n        allowPostBody ? (\n          <PostBodyData dataTreePath={`${actionName}.config`} theme={theme} />\n        ) : (\n          <NoBodyMessage>\n            <Text type={TextType.P2}>{createMessage(API_PANE_NO_BODY)}</Text>\n          </NoBodyMessage>\n        )\n      }\n      formName={API_EDITOR_FORM_NAME}\n      paginationUIComponent={\n        <Pagination\n          actionName={actionName}\n          onTestClick={props.onRunClick}\n          paginationType={props.paginationType}\n          theme={theme}\n        />\n      }\n    />\n  );\n}\n\nconst selector = formValueSelector(API_EDITOR_FORM_NAME);\n\ntype ReduxDispatchProps = {\n  updateDatasource: (datasource: Datasource) => void;\n};\n\nconst mapDispatchToProps = (dispatch: any): ReduxDispatchProps => ({\n  updateDatasource: (datasource) => {\n    dispatch(change(API_EDITOR_FORM_NAME, \"datasource\", datasource));\n  },\n});\n\nexport default connect((state: AppState, props: { pluginId: string }) => {\n  const httpMethodFromForm = selector(state, \"actionConfiguration.httpMethod\");\n  const actionConfigurationHeaders =\n    selector(state, \"actionConfiguration.headers\") || [];\n  const autoGeneratedActionConfigHeaders =\n    selector(state, \"actionConfiguration.autoGeneratedHeaders\") || [];\n  const actionConfigurationParams =\n    selector(state, \"actionConfiguration.queryParameters\") || [];\n  let datasourceFromAction = selector(state, \"datasource\");\n  if (datasourceFromAction && datasourceFromAction.hasOwnProperty(\"id\")) {\n    datasourceFromAction = state.entities.datasources.list.find(\n      (d) => d.id === datasourceFromAction.id,\n    );\n  }\n\n  // get messages from action itself\n  const actionId = selector(state, \"id\");\n  const action = getAction(state, actionId);\n  const hintMessages = action?.messages;\n\n  const datasourceHeaders =\n    get(datasourceFromAction, \"datasourceConfiguration.headers\") || [];\n  const datasourceParams =\n    get(datasourceFromAction, \"datasourceConfiguration.queryParameters\") || [];\n\n  const apiId = selector(state, \"id\");\n  const currentActionDatasourceId = selector(state, \"datasource.id\");\n\n  const actionName = getApiName(state, apiId) || \"\";\n  const headers = selector(state, \"actionConfiguration.headers\");\n  let headersCount = 0;\n\n  if (Array.isArray(headers)) {\n    const validHeaders = headers.filter(\n      (value) => value.key && value.key !== \"\",\n    );\n    headersCount += validHeaders.length;\n  }\n\n  if (Array.isArray(datasourceHeaders)) {\n    const validHeaders = datasourceHeaders.filter(\n      (value: any) => value.key && value.key !== \"\",\n    );\n    headersCount += validHeaders.length;\n  }\n\n  if (Array.isArray(autoGeneratedActionConfigHeaders)) {\n    const validHeaders = autoGeneratedActionConfigHeaders.filter(\n      (value: any) => value.key && value.key !== \"\",\n    );\n    headersCount += validHeaders.length;\n  }\n\n  const params = selector(state, \"actionConfiguration.queryParameters\");\n  let paramsCount = 0;\n\n  if (Array.isArray(params)) {\n    const validParams = params.filter((value) => value.key && value.key !== \"\");\n    paramsCount = validParams.length;\n  }\n\n  if (Array.isArray(datasourceParams)) {\n    const validParams = datasourceParams.filter(\n      (value: any) => value.key && value.key !== \"\",\n    );\n    paramsCount += validParams.length;\n  }\n\n  const responses = getActionResponses(state);\n  let hasResponse = false;\n  let suggestedWidgets;\n  if (apiId && apiId in responses) {\n    const response = responses[apiId] || EMPTY_RESPONSE;\n    hasResponse =\n      !isEmpty(response.statusCode) && response.statusCode[0] === \"2\";\n    suggestedWidgets = response.suggestedWidgets;\n  }\n\n  const actionData = getActionData(state, apiId);\n  let responseDisplayFormat: { title: string; value: string };\n  let responseDataTypes: { key: string; title: string }[];\n  if (!!actionData && actionData.responseDisplayFormat) {\n    responseDataTypes = actionData.dataTypes.map((data) => {\n      return {\n        key: data.dataType,\n        title: data.dataType,\n      };\n    });\n    responseDisplayFormat = {\n      title: actionData.responseDisplayFormat,\n      value: actionData.responseDisplayFormat,\n    };\n  } else {\n    responseDataTypes = [];\n    responseDisplayFormat = {\n      title: \"\",\n      value: \"\",\n    };\n  }\n\n  return {\n    actionName,\n    apiId,\n    httpMethodFromForm,\n    actionConfigurationHeaders,\n    actionConfigurationParams,\n    autoGeneratedActionConfigHeaders,\n    currentActionDatasourceId,\n    datasourceHeaders,\n    datasourceParams,\n    headersCount,\n    paramsCount,\n    hintMessages,\n    datasources: state.entities.datasources.list.filter(\n      (d) => d.pluginId === props.pluginId,\n    ),\n    currentPageId: state.entities.pageList.currentPageId,\n    applicationId: state.entities.pageList.applicationId,\n    responseDataTypes,\n    responseDisplayFormat,\n    suggestedWidgets,\n    hasResponse,\n  };\n}, mapDispatchToProps)(\n  reduxForm<Action, APIFormProps>({\n    form: API_EDITOR_FORM_NAME,\n    enableReinitialize: true,\n  })(ApiEditorForm),\n);\n","import React from \"react\";\nimport { Popover, PopoverInteractionKind } from \"@blueprintjs/core\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\nimport { FormIcons } from \"icons/FormIcons\";\n\nconst CredentialTooltipWrapper = styled.div`\n  .credentialTooltipContainer {\n    display: flex;\n    margin-left: 5px;\n  }\n  .infoIconDiv {\n    margin-top: -2px;\n    margin-left: 2px;\n  }\n  .credentialTitle {\n    color: ${Colors.CADET_BLUE};\n  }\n`;\n\nconst TooltipStyles = createGlobalStyle`\n .credentials-tooltip{\n  .bp3-popover {\n    box-shadow: none;\n    max-width: 340px;\n    .bp3-popover-arrow {\n      display: block;\n      fill: none;\n    }\n    .bp3-popover-arrow-fill {\n      fill:  ${Colors.BLUE_CHARCOAL};\n    }\n    .bp3-popover-content {\n      padding: 15px;\n      background-color: ${Colors.BLUE_CHARCOAL};\n      max-height: 300px;\n      overflow: auto;\n      color: ${Colors.WHITE};\n      text-align: left;\n      border-radius: 4px;\n      text-transform: initial;\n      font-weight: 500;\n      font-size: 14px;\n      line-height: 18px;\n    }\n  }\n }\n`;\n\nconst IconContainer = styled.div`\n  .bp3-icon {\n    border-radius: 4px 0 0 4px;\n    margin: 0;\n    height: 30px;\n    width: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: ${Colors.AQUA_HAZE};\n    svg {\n      height: 20px;\n      width: 20px;\n      path {\n        fill: #979797;\n      }\n    }\n  }\n  .bp3-popover-target {\n    padding-right: 10px;\n  }\n`;\n\ninterface Props {\n  providerCredentialSteps: string;\n}\n\nfunction HelperTooltip(props: Props) {\n  return (\n    <CredentialTooltipWrapper>\n      <div className=\"credentialTooltipContainer\">\n        <div>\n          <span className=\"credentialTitle\">How to get Credentials?</span>\n        </div>\n        <div className=\"infoIconDiv\">\n          <TooltipStyles />\n          <Popover\n            autoFocus\n            canEscapeKeyClose\n            content={\n              <div>\n                <span>How to get credentials: </span>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: props.providerCredentialSteps\n                      .split(\"\\\\n\\\\n\")\n                      .join(\"<br />\")\n                      .split(\"\\\\n\")\n                      .join(\"<br /><br />\"),\n                  }}\n                  style={{ color: \"#d0d7dd\", fontWeight: 100 }}\n                />\n              </div>\n            }\n            defaultIsOpen={false}\n            interactionKind={PopoverInteractionKind.HOVER}\n            portalClassName=\"credentials-tooltip\"\n            position=\"bottom\"\n            usePortal\n          >\n            <IconContainer style={{ display: \"inline-block\" }}>\n              <FormIcons.INFO_ICON\n                height={22}\n                style={{\n                  cursor: \"pointer\",\n                }}\n                width={22}\n              />\n            </IconContainer>\n          </Popover>\n        </div>\n      </div>\n    </CredentialTooltipWrapper>\n  );\n}\n\nexport default HelperTooltip;\n","import React from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport styled from \"styled-components\";\n\nconst TabsWrapper = styled.div<{ shouldOverflow?: boolean }>`\n  height: 100%;\n  .react-tabs {\n    height: 100%;\n  }\n  .react-tabs__tab-panel {\n    height: calc(100% - 46px);\n    scrollbar-width: none;\n  }\n  .react-tabs__tab-list {\n    border-bottom-color: #d0d7dd;\n    color: #a3b3bf;\n    ${(props) =>\n      props.shouldOverflow &&\n      `\n      overflow-y: hidden;\n      overflow-x: auto;\n      white-space: nowrap;\n    `}\n  }\n  .react-tabs__tab {\n    padding: 6px 9px;\n  }\n  .react-tabs__tab:focus {\n    box-shadow: none;\n    border-color: ${(props) => props.theme.colors.primaryOld};\n  }\n  .react-tabs__tab--selected {\n    color: ${(props) => props.theme.colors.primaryOld};\n    border-color: #d0d7dd;\n    border-top: ${(props) => props.theme.colors.primaryOld} 5px solid;\n    border-radius: 0;\n  }\n`;\n\ntype TabbedViewComponentType = {\n  tabs: Array<{\n    key: string;\n    title: string;\n    panelComponent: JSX.Element;\n  }>;\n  selectedIndex?: number;\n  setSelectedIndex?: (selectedIndex: number) => void;\n  overflow?: boolean;\n};\n\nexport function BaseTabbedView(props: TabbedViewComponentType) {\n  return (\n    <TabsWrapper shouldOverflow={props.overflow}>\n      <Tabs\n        onSelect={(index: number) => {\n          props.setSelectedIndex && props.setSelectedIndex(index);\n        }}\n        selectedIndex={props.selectedIndex}\n      >\n        <TabList>\n          {props.tabs.map((tab) => (\n            <Tab key={tab.key}>{tab.title}</Tab>\n          ))}\n        </TabList>\n        {props.tabs.map((tab) => (\n          <TabPanel key={tab.key}>{tab.panelComponent}</TabPanel>\n        ))}\n      </Tabs>\n    </TabsWrapper>\n  );\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, InjectedFormProps, formValueSelector } from \"redux-form\";\nimport { POST_BODY_FORMAT_OPTIONS } from \"constants/ApiEditorConstants/CommonApiConstants\";\nimport styled from \"styled-components\";\nimport FormLabel from \"components/editorComponents/FormLabel\";\nimport FormRow from \"components/editorComponents/FormRow\";\nimport { PaginationField, BodyFormData, Property } from \"api/ActionAPI\";\nimport DynamicTextField from \"components/editorComponents/form/fields/DynamicTextField\";\nimport KeyValueFieldArray from \"components/editorComponents/form/fields/KeyValueFieldArray\";\nimport ApiResponseView from \"components/editorComponents/ApiResponseView\";\nimport { API_EDITOR_FORM_NAME } from \"@appsmith/constants/forms\";\nimport CredentialsTooltip from \"components/editorComponents/form/CredentialsTooltip\";\nimport { FormIcons } from \"icons/FormIcons\";\nimport { BaseTabbedView } from \"components/designSystems/appsmith/TabbedView\";\nimport Pagination from \"./Pagination\";\nimport { PaginationType, Action } from \"entities/Action\";\nimport ActionNameEditor from \"components/editorComponents/ActionNameEditor\";\nimport { NameWrapper } from \"./CommonEditorForm\";\nimport { BaseButton } from \"components/designSystems/appsmith/BaseButton\";\nimport { getActionData } from \"../../../selectors/entitiesSelector\";\nimport { AppState } from \"@appsmith/reducers\";\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  min-height: 95vh;\n  max-height: 95vh;\n  overflow: auto;\n  width: 100%;\n  ${FormLabel} {\n    padding: ${(props) => props.theme.spaces[3]}px;\n  }\n  ${FormRow} {\n    padding: ${(props) => props.theme.spaces[2]}px;\n    & > * {\n      margin-right: 10px;\n    }\n    ${FormLabel} {\n      padding: 0;\n      width: 100%;\n    }\n  }\n`;\n\nconst MainConfiguration = styled.div`\n  padding-top: 10px;\n  padding-left: 17px;\n  span.bp3-popover-target {\n    display: inline-block;\n  }\n`;\n\nconst SecondaryWrapper = styled.div`\n  display: flex;\n  height: calc(100% - 120px);\n  border-top: 1px solid #d0d7dd;\n  margin-top: 10px;\n`;\n\nconst RequestParamsWrapper = styled.div`\n  flex: 4;\n  border-right: 1px solid #d0d7dd;\n  height: 100%;\n  overflow-y: auto;\n  padding-top: 6px;\n  padding-left: 17px;\n  padding-right: 10px;\n`;\n\nconst ActionButtons = styled.div`\n  flex: 1;\n`;\n\nconst ActionButton = styled(BaseButton)`\n  &&& {\n    max-width: 72px;\n    margin: 0 5px;\n    min-height: 30px;\n  }\n`;\n\nconst PostbodyContainer = styled.div`\n  margin-top: 41px;\n`;\n\nconst HeadersSection = styled.div`\n  margin-bottom: 32px;\n`;\n\nconst TabbedViewContainer = styled.div`\n  flex: 1;\n  padding-top: 12px;\n`;\n\ninterface APIFormProps {\n  onRunClick: (paginationField?: PaginationField) => void;\n  onDeleteClick: () => void;\n  isRunning: boolean;\n  isDeleting: boolean;\n  paginationType: PaginationType;\n  appName: string;\n  templateId: string;\n  actionConfiguration?: any;\n  actionConfigurationHeaders?: Property[];\n  displayFormat: string;\n  actionConfigurationBodyFormData: BodyFormData[];\n  providerImage: string;\n  providerURL: string;\n  providerCredentialSteps: string;\n  location: {\n    pathname: string;\n  };\n  apiName: string;\n  apiId: string;\n  dispatch: any;\n  responseDataTypes: { key: string; title: string }[];\n  responseDisplayFormat: { title: string; value: string };\n}\n\ntype Props = APIFormProps & InjectedFormProps<Action, APIFormProps>;\n\nfunction RapidApiEditorForm(props: Props) {\n  const {\n    actionConfiguration,\n    actionConfigurationBodyFormData,\n    actionConfigurationHeaders,\n    handleSubmit,\n    isDeleting,\n    isRunning,\n    onDeleteClick,\n    onRunClick,\n    providerCredentialSteps,\n    providerImage,\n    providerURL,\n    responseDataTypes,\n    responseDisplayFormat,\n    templateId,\n  } = props;\n\n  const postbodyResponsePresent =\n    templateId &&\n    actionConfiguration &&\n    actionConfigurationBodyFormData &&\n    actionConfigurationBodyFormData.length > 0;\n\n  return (\n    <Form\n      onSubmit={handleSubmit}\n      style={{\n        height: \"100%\",\n      }}\n    >\n      <MainConfiguration>\n        <FormRow>\n          <NameWrapper>\n            <ActionNameEditor />\n            <a\n              className=\"t--apiDocumentationLink\"\n              href={providerURL && `http://${providerURL}`}\n              rel=\"noopener noreferrer\"\n              style={{\n                paddingTop: \"7px\",\n              }}\n              target=\"_blank\"\n            >\n              API documentation\n            </a>\n          </NameWrapper>\n\n          <ActionButtons>\n            <ActionButton\n              buttonStyle=\"DANGER\"\n              loading={isDeleting}\n              onClick={onDeleteClick}\n              text=\"Delete\"\n            />\n            <ActionButton\n              buttonStyle=\"PRIMARY\"\n              loading={isRunning}\n              onClick={() => {\n                onRunClick();\n              }}\n              text=\"Run\"\n            />\n          </ActionButtons>\n        </FormRow>\n        <FormRow>\n          <DynamicTextField\n            disabled\n            leftImage={providerImage}\n            name=\"provider.name\"\n            placeholder=\"Provider name\"\n          />\n          <DynamicTextField\n            disabled\n            leftIcon={FormIcons.SLASH_ICON}\n            name=\"actionConfiguration.path\"\n            placeholder=\"v1/method\"\n          />\n        </FormRow>\n        {/* Display How to get Credentials info if it is present */}\n        {providerCredentialSteps && providerCredentialSteps !== \"\" && (\n          <CredentialsTooltip\n            providerCredentialSteps={providerCredentialSteps}\n          />\n        )}\n      </MainConfiguration>\n      <SecondaryWrapper>\n        <TabbedViewContainer>\n          <BaseTabbedView\n            tabs={[\n              {\n                key: \"apiInput\",\n                title: \"API Input\",\n                panelComponent: (\n                  <RequestParamsWrapper>\n                    <HeadersSection>\n                      <KeyValueFieldArray\n                        actionConfig={\n                          actionConfiguration &&\n                          actionConfigurationHeaders &&\n                          actionConfigurationHeaders\n                        }\n                        label=\"Headers\"\n                        name=\"actionConfiguration.headers\"\n                        pushFields={false}\n                      />\n                    </HeadersSection>\n                    <KeyValueFieldArray\n                      label=\"Params\"\n                      name=\"actionConfiguration.queryParameters\"\n                      pushFields={false}\n                    />\n                    {postbodyResponsePresent && (\n                      <PostbodyContainer>\n                        <FormLabel>{\"Body\"}</FormLabel>\n                        {typeof actionConfigurationBodyFormData ===\n                          \"object\" && (\n                          <KeyValueFieldArray\n                            actionConfig={actionConfigurationBodyFormData}\n                            addOrDeleteFields={false}\n                            label=\"\"\n                            name=\"actionConfiguration.bodyFormData\"\n                            pushFields={false}\n                            rightIcon={FormIcons.INFO_ICON}\n                          />\n                        )}\n                      </PostbodyContainer>\n                    )}\n                  </RequestParamsWrapper>\n                ),\n              },\n              {\n                key: \"pagination\",\n                title: \"Pagination\",\n                panelComponent: (\n                  <Pagination\n                    actionName={props.apiName}\n                    onTestClick={props.onRunClick}\n                    paginationType={props.paginationType}\n                  />\n                ),\n              },\n            ]}\n          />\n        </TabbedViewContainer>\n\n        <ApiResponseView\n          apiName={props.apiName}\n          onRunClick={onRunClick}\n          responseDataTypes={responseDataTypes}\n          responseDisplayFormat={responseDisplayFormat}\n        />\n      </SecondaryWrapper>\n    </Form>\n  );\n}\n\nconst selector = formValueSelector(API_EDITOR_FORM_NAME);\n\nexport default connect((state: AppState) => {\n  const displayFormat = selector(state, \"displayFormat\");\n  const providerImage = selector(state, \"provider.imageUrl\");\n  const providerURL = selector(state, \"provider.url\");\n  const providerCredentialSteps = selector(state, \"provider.credentialSteps\");\n  const templateId = selector(state, \"templateId\");\n  const actionConfiguration = selector(state, \"actionConfiguration\");\n  let actionConfigurationBodyFormData = selector(\n    state,\n    \"actionConfiguration.bodyFormData\",\n  );\n  const actionConfigurationHeaders = selector(\n    state,\n    \"actionConfiguration.headers\",\n  );\n\n  if (\n    typeof actionConfigurationBodyFormData === \"string\" &&\n    (displayFormat.value === POST_BODY_FORMAT_OPTIONS.JSON ||\n      displayFormat.value === POST_BODY_FORMAT_OPTIONS.FORM_URLENCODED)\n  ) {\n    actionConfigurationBodyFormData = JSON.parse(\n      `${actionConfigurationBodyFormData}`,\n    );\n  }\n  const actionData = getActionData(state, actionConfiguration.id);\n  let responseDisplayFormat: { title: string; value: string };\n  let responseDataTypes: { key: string; title: string }[];\n  if (!!actionData && actionData.responseDisplayFormat) {\n    responseDataTypes = actionData.dataTypes.map((data) => {\n      return {\n        key: data.dataType,\n        title: data.dataType,\n      };\n    });\n    responseDisplayFormat = {\n      title: actionData.responseDisplayFormat,\n      value: actionData.responseDisplayFormat,\n    };\n  } else {\n    responseDataTypes = [];\n    responseDisplayFormat = {\n      title: \"JSON\",\n      value: \"JSON\",\n    };\n  }\n\n  return {\n    displayFormat,\n    actionConfiguration,\n    actionConfigurationHeaders,\n    actionConfigurationBodyFormData,\n    providerImage,\n    providerURL,\n    responseDataTypes,\n    responseDisplayFormat,\n    templateId,\n    providerCredentialSteps,\n  };\n})(\n  reduxForm<Action, APIFormProps>({\n    form: API_EDITOR_FORM_NAME,\n    destroyOnUnmount: false,\n  })(RapidApiEditorForm),\n);\n","import { Colors } from \"constants/Colors\";\nimport styled from \"styled-components\";\n\nconst QueryWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  /* This CSS is adopted from GraphiQL to maintain the consistency with the GraphiQL playground */\n  /* COLORS */\n\n  /* Comment */\n  .cm-comment {\n    color: #999;\n  }\n\n  /* Punctuation */\n  .cm-punctuation {\n    color: #555;\n  }\n\n  /* Keyword */\n  .cm-keyword,\n  span.cm-m-graphql.cm-attribute {\n    color: #b11a04;\n  }\n\n  /* OperationName, FragmentName */\n  .cm-def {\n    color: #d2054e;\n  }\n\n  /* FieldName */\n  .cm-property {\n    color: #1f61a0;\n  }\n\n  /* FieldAlias */\n  .cm-qualifier {\n    color: #1c92a9;\n  }\n\n  /* ArgumentName and ObjectFieldName */\n  .cm-attribute {\n    color: #8b2bb9;\n  }\n\n  /* Number */\n  .cm-number {\n    color: #2882f9;\n  }\n\n  /* String */\n  .cm-string {\n    color: #d64292;\n  }\n\n  /* Boolean */\n  .cm-builtin {\n    color: #d47509;\n  }\n\n  /* EnumValue */\n  .cm-string-2 {\n    color: #0b7fc7;\n  }\n\n  /* Variable */\n  .cm-variable {\n    color: #397d13;\n  }\n\n  /* Directive */\n  .cm-meta {\n    color: #b33086;\n  }\n\n  /* Type */\n  .cm-atom {\n    color: #ca9800;\n  }\n\n  /* CURSOR */\n\n  /* DEFAULT THEME */\n\n  .cm-s-default .cm-keyword {\n    color: #708;\n  }\n\n  .cm-s-default .cm-atom {\n    color: #219;\n  }\n\n  .cm-s-default .cm-number {\n    color: #164;\n  }\n\n  .cm-s-default .cm-def {\n    color: #00f;\n  }\n\n  .cm-s-default .cm-variable-2 {\n    color: #05a;\n  }\n\n  .cm-s-default .cm-variable-3 {\n    color: #085;\n  }\n\n  .cm-s-default .cm-comment {\n    color: #a50;\n  }\n\n  .cm-s-default .cm-string {\n    color: #a11;\n  }\n\n  .cm-s-default .cm-string-2 {\n    color: #f50;\n  }\n\n  .cm-s-default .cm-meta {\n    color: #555;\n  }\n\n  .cm-s-default .cm-qualifier {\n    color: #555;\n  }\n\n  .cm-s-default .cm-builtin {\n    color: #30a;\n  }\n\n  .cm-s-default .cm-bracket {\n    color: #997;\n  }\n\n  .cm-s-default .cm-tag {\n    color: #170;\n  }\n\n  .cm-s-default .cm-attribute {\n    color: #00c;\n  }\n\n  .cm-s-default .cm-header {\n    color: blue;\n  }\n\n  .cm-s-default .cm-quote {\n    color: #090;\n  }\n\n  .cm-s-default .cm-hr {\n    color: #999;\n  }\n\n  .cm-s-default .cm-link {\n    color: #00c;\n  }\n\n  .cm-negative {\n    color: #d44;\n  }\n\n  .cm-positive {\n    color: #292;\n  }\n\n  .cm-header,\n  .cm-strong {\n    font-weight: bold;\n  }\n\n  .cm-em {\n    font-style: italic;\n  }\n\n  .cm-link {\n    text-decoration: underline;\n  }\n\n  .cm-strikethrough {\n    text-decoration: line-through;\n  }\n\n  .cm-s-default .cm-error {\n    color: #f00;\n  }\n\n  .cm-invalidchar {\n    color: #f00;\n  }\n\n  .CodeMirror-composing {\n    border-bottom: 2px solid;\n  }\n\n  /* Default styles for common addons */\n\n  div.CodeMirror span.CodeMirror-matchingbracket {\n    color: #0f0;\n  }\n\n  .CodeMirror-matchingtag {\n    background: rgba(255, 150, 0, 0.3);\n  }\n\n  .CodeMirror-activeline-background {\n    background: #e8f2ff;\n  }\n\n  /* STOP */\n\n  .CodeMirror-info .type-name {\n    color: #ca9800;\n  }\n\n  .CodeMirror-info .field-name {\n    color: #1f61a0;\n  }\n\n  .CodeMirror-info .enum-value {\n    color: #0b7fc7;\n  }\n\n  .CodeMirror-info .arg-name {\n    color: #8b2bb9;\n  }\n\n  .CodeMirror-info .directive-name {\n    color: #b33086;\n  }\n\n  .CodeMirror-jump-token {\n    text-decoration: underline;\n    cursor: pointer;\n  }\n\n  &&&&& .CodeMirror {\n    border: 0;\n  }\n\n  &&& .CodeMirror-gutters {\n    background: ${Colors.GRAY_50};\n  }\n`;\n\nexport default QueryWrapper;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\n// // Codemirror GraphQL plugins\nimport \"codemirror-graphql/hint\";\nimport \"codemirror-graphql/info\";\nimport \"codemirror-graphql/jump\";\nimport \"codemirror-graphql/mode\";\n\nimport QueryWrapper from \"./QueryWrapperWithCSS\";\nimport CodeEditor from \"components/editorComponents/CodeEditor\";\nimport {\n  EditorModes,\n  EditorSize,\n  EditorTheme,\n  TabBehaviour,\n} from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport styled from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\nimport { Text, TextType } from \"design-system-old\";\n\nconst QueryHeader = styled.div`\n  display: flex;\n  width: 100%;\n  background: ${Colors.SEA_SHELL};\n  padding: 8px 16px;\n`;\n\ntype QueryProps = {\n  // Path to store the value in the actual data object\n  dataTreePath: string;\n  // Height for the editor\n  height: string;\n  // Name of the field of the form\n  name: string;\n  // Theme to be used in CodeEditor\n  theme: EditorTheme;\n};\n\n/**\n * Query Editor is for writing Graphql query using the Codemirror Editor which we use\n * @param props Props that are required by the CodeEditor to render the query editor\n * @returns Component with Editor\n */\nfunction QueryEditor(props: QueryProps) {\n  const editorProps = {\n    mode: EditorModes.GRAPHQL_WITH_BINDING,\n    tabBehaviour: TabBehaviour.INDENT,\n    size: EditorSize.EXTENDED,\n    showLineNumbers: true,\n  };\n\n  return (\n    <QueryWrapper className=\"t--graphql-query-editor\">\n      <QueryHeader>\n        <Text color={Colors.GRAY_700} type={TextType.H6}>\n          Query\n        </Text>\n      </QueryHeader>\n      <Field\n        component={CodeEditor}\n        evaluatedPopUpLabel=\"Query\"\n        {...props}\n        {...editorProps}\n      />\n    </QueryWrapper>\n  );\n}\n\nexport default QueryEditor;\n","import React from \"react\";\nimport {\n  CodeEditorBorder,\n  EditorModes,\n  EditorSize,\n  EditorTheme,\n  TabBehaviour,\n} from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport styled from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\nimport { Text, TextType } from \"design-system-old\";\nimport DynamicTextField from \"components/editorComponents/form/fields/DynamicTextField\";\nimport { AutocompleteDataType } from \"utils/autocomplete/CodemirrorTernService\";\n\nconst VariableWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  flex-shrink: 0;\n  &&&&& .CodeMirror {\n    border: 0px;\n  }\n  &&& .CodeMirror-gutters {\n    background: ${Colors.GRAY_50};\n  }\n`;\n\nconst VariableHeader = styled.div`\n  display: flex;\n  width: 100%;\n  background: ${Colors.SEA_SHELL};\n  padding: 8px 16px;\n`;\n\nconst EXPECTED_VARIABLE = {\n  type: \"object\",\n  example:\n    '{\\n  \"name\":\"{{ inputName.property }}\",\\n  \"preference\":\"{{ dropdownName.property }}\"\\n}',\n  autocompleteDataType: AutocompleteDataType.OBJECT,\n};\n\ntype VariableProps = {\n  // Name of the action to define the path to the config property\n  actionName: string;\n  // Theme to be used in CodeEditor\n  theme: EditorTheme;\n};\n\n/**\n * Variable Editor is for writing Graphql variables using the Codemirror Editor which we use for JSON\n * @param props Props that are required by the CodeEditor to render the variable editor\n * @returns Component with Editor\n */\nfunction VariableEditor(props: VariableProps) {\n  return (\n    <VariableWrapper className=\"t--graphql-variable-editor\">\n      <VariableHeader>\n        <Text color={Colors.GRAY_700} type={TextType.H6}>\n          Query Variables\n        </Text>\n      </VariableHeader>\n      <DynamicTextField\n        border={CodeEditorBorder.ALL_SIDE}\n        dataTreePath={`${props.actionName}.config.pluginSpecifiedTemplates[1].value`}\n        evaluatedPopUpLabel={\"Query Variables\"}\n        expected={EXPECTED_VARIABLE}\n        height=\"100%\"\n        mode={EditorModes.JSON_WITH_BINDING}\n        name=\"actionConfiguration.pluginSpecifiedTemplates[1].value\"\n        placeholder={`${EXPECTED_VARIABLE.example}\\n\\n\\\\\\\\Take widget inputs using {{ }}`}\n        showLightningMenu={false}\n        showLineNumbers\n        size={EditorSize.EXTENDED}\n        tabBehaviour={TabBehaviour.INDENT}\n        theme={props.theme}\n      />\n    </VariableWrapper>\n  );\n}\n\nexport default VariableEditor;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { change, formValueSelector } from \"redux-form\";\nimport FormRow from \"components/editorComponents/FormRow\";\nimport { PaginationType } from \"entities/Action\";\nimport RadioFieldGroup from \"components/editorComponents/form/fields/RadioGroupField\";\nimport {\n  Text,\n  TextType,\n  TooltipComponent as Tooltip,\n  Dropdown,\n  Checkbox,\n  DropdownOption,\n} from \"design-system-old\";\nimport { EditorTheme } from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport { AnyAction, bindActionCreators, Dispatch } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { FormLabel } from \"components/editorComponents/form/fields/StyledFormComponents\";\nimport DynamicTextField from \"components/editorComponents/form/fields/DynamicTextField\";\nimport { Colors } from \"constants/Colors\";\nimport { GRAPHQL_PAGINATION_TYPE } from \"constants/ApiEditorConstants/GraphQLEditorConstants\";\nimport {\n  LIMITBASED_PREFIX,\n  CURSORBASED_PREFIX,\n  CURSOR_PREVIOUS_PREFIX,\n  CURSOR_NEXT_PREFIX,\n} from \"utils/editor/EditorBindingPaths\";\nimport { log } from \"loglevel\";\nimport { PaginationSubComponent } from \"components/formControls/utils\";\n\nconst PAGINATION_PREFIX =\n  \"actionConfiguration.pluginSpecifiedTemplates[2].value\";\ninterface PaginationProps {\n  actionName: string;\n  onTestClick: (test?: \"PREV\" | \"NEXT\") => void;\n  paginationType: PaginationType;\n  theme?: EditorTheme;\n  query: string;\n  formName: string;\n  change: (formName: string, id: string, value: any) => void;\n  cursorBased?: any;\n  limitBased?: any;\n}\n\nconst SubHeading = styled(Text)`\n  display: block;\n  margin-bottom: ${(props) => props.theme.spaces[4]}px;\n  color: ${(props) => props.theme.colors.apiPane.pagination.stepTitle};\n`;\n\nconst PaginationTypeView = styled.div`\n  margin: -16px 0 24px 28px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  width: 100%;\n  padding: ${(props) => props.theme.spaces[8]}px\n    ${(props) => props.theme.spaces[12]}px;\n`;\n\nconst PaginationSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-top: ${(props) => props.theme.spaces[11]}px;\n`;\n\nconst PaginationFieldWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 48%;\n  max-width: 280px;\n`;\n\nconst PaginationFieldContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  &:not(:last-child) {\n    margin-bottom: ${(props) => props.theme.spaces[9]}px;\n  }\n  ${PaginationFieldWrapper}:last-child {\n    margin-left: 24px;\n  }\n`;\n\nconst Step = styled.div`\n  label {\n    width: fit-content;\n    min-width: unset;\n  }\n\n  & label .bp3-popover-target .label-icon-wrapper {\n    border-bottom: 1px dashed ${Colors.LIGHT_GREYISH_BLUE};\n    cursor: help;\n  }\n`;\n\nconst CheckboxFieldWrapper = styled.div`\n  margin-top: 8px;\n  div > span {\n    font-size: ${(props) => props.theme.fontSizes[2]}px;\n  }\n`;\n\nconst RadioFieldGroupWrapper = styled(RadioFieldGroup)`\n  width: 80%;\n  label {\n    width: fit-content;\n  }\n`;\n\nconst DynamicTextFieldWrapper = styled(DynamicTextField)`\n  &&&& .CodeMirror {\n    background-color: ${(props) => props.disabled && \"#eef2f5\"};\n  }\n`;\n\nconst graphqlParseVariables = (queryBody: string) => {\n  const variables: any = {};\n  try {\n    const variableString = queryBody.match(/\\((\\$[^)]*?)\\)/);\n    if (variableString && variableString?.length >= 2) {\n      variableString[1].split(\",\").forEach((variableWithType: string) => {\n        let [name = \"\", vtype = \"\"] = variableWithType.trim().split(\":\");\n        name = name.trim().substring(1);\n        vtype = vtype.trim();\n        if (name.length > 0 && vtype.length > 0) {\n          variables[name] = {\n            name,\n            type: vtype,\n          };\n        }\n      });\n    }\n  } catch (error) {\n    log(error);\n  }\n\n  return variables;\n};\n\ntype PaginationTypeBasedWrapperProps = {\n  actionName: string;\n  className: string;\n  dataReplayId: string;\n  onInputChange?: (value: any) => void;\n  onSelectVariable: (_: any, dropdownOption: any) => void;\n  onSeparateKeyChange?: (value: any) => void;\n  selectedVariable: {\n    label?: string;\n    value?: string;\n  };\n  separateKeyFlag?: boolean;\n  separateKeyLabel?: string;\n  separateKeyPath?: string;\n  // This states that is separate value for any text is enabled or not\n  separateValueFlag?: boolean;\n  valuePath: string;\n  valuePlaceholder?: string;\n  valueLabel: string;\n  variableOptions: Array<any>;\n  variableLabel: string;\n  variableTooltip?: string;\n  valueTooltip?: string;\n};\n\nfunction PaginationTypeBasedWrapper({\n  actionName,\n  className,\n  dataReplayId,\n  onInputChange,\n  onSelectVariable,\n  onSeparateKeyChange,\n  selectedVariable,\n  separateKeyFlag,\n  separateKeyLabel,\n  separateKeyPath,\n  separateValueFlag,\n  valueLabel,\n  valuePath,\n  valuePlaceholder,\n  valueTooltip,\n  variableLabel,\n  variableOptions,\n  variableTooltip,\n}: PaginationTypeBasedWrapperProps) {\n  // Add a disabled option if there are no variables in the dropdown to select.\n  const dropdownOptions: DropdownOption[] =\n    variableOptions.length > 0\n      ? variableOptions\n      : [\n          {\n            label:\n              \"No such variable exists in the query. Please click on the dropdown to select one of the variables defined in the query\",\n            value: \"\",\n            disabled: true,\n            disabledTooltipText: true,\n          },\n        ];\n\n  // creating a datatree path for the evaluated value\n  const dataTreePath = `${actionName}.config.${valuePath\n    .split(\".\")\n    .slice(1)\n    .join(\".\")}`;\n  return (\n    <PaginationFieldContainer>\n      <PaginationFieldWrapper data-replay-id={dataReplayId}>\n        <Step>\n          <FormLabel>\n            {variableTooltip ? (\n              <Tooltip content={variableTooltip} hoverOpenDelay={500}>\n                <span className=\"label-icon-wrapper\">{variableLabel}</span>\n              </Tooltip>\n            ) : (\n              <span className=\"label-icon-wrapper\">{variableLabel}</span>\n            )}\n          </FormLabel>\n        </Step>\n        <Dropdown\n          boundary=\"viewport\"\n          className={`${className}Variable`}\n          dropdownMaxHeight={\"200px\"}\n          errorMsg={\n            !selectedVariable.value ||\n            dropdownOptions.some(\n              (option: DropdownOption) =>\n                option.value === selectedVariable.value,\n            )\n              ? undefined\n              : \"No such variable exist in query\"\n          }\n          fillOptions\n          onSelect={onSelectVariable}\n          options={dropdownOptions}\n          placeholder={\n            dropdownOptions.length > 0\n              ? \"Select a variable\"\n              : \"Add variables in query to select here\"\n          }\n          selected={\n            (selectedVariable.label && selectedVariable.value\n              ? selectedVariable\n              : undefined) as any\n          }\n          showEmptyOptions\n          showLabelOnly\n          width={\"100%\"}\n        />\n      </PaginationFieldWrapper>\n      <PaginationFieldWrapper data-replay-id={dataReplayId}>\n        <Step>\n          <FormLabel>\n            {valueTooltip ? (\n              <Tooltip content={valueTooltip} hoverOpenDelay={500}>\n                <span className=\"label-icon-wrapper\">{valueLabel}</span>\n              </Tooltip>\n            ) : (\n              <span className=\"label-icon-wrapper\">{valueLabel}</span>\n            )}\n          </FormLabel>\n        </Step>\n        <DynamicTextFieldWrapper\n          className={`${className}Value`}\n          dataTreePath={dataTreePath}\n          disabled={separateKeyFlag && !separateValueFlag}\n          evaluatedPopUpLabel={valueLabel}\n          name={valuePath}\n          onChange={onInputChange}\n          placeholder={valuePlaceholder || \"\"}\n          showLightningMenu={!(separateKeyFlag && !separateValueFlag)}\n        />\n        {separateKeyFlag &&\n          separateKeyPath &&\n          separateKeyLabel &&\n          onSeparateKeyChange && (\n            <CheckboxFieldWrapper>\n              <Checkbox\n                fill\n                isDefaultChecked={separateValueFlag}\n                label={separateKeyLabel}\n                name={separateKeyPath}\n                onCheckChange={onSeparateKeyChange}\n              />\n            </CheckboxFieldWrapper>\n          )}\n      </PaginationFieldWrapper>\n    </PaginationFieldContainer>\n  );\n}\n\nfunction Pagination(props: PaginationProps) {\n  const [variablesList, setVariablesList] = useState<any>(\n    graphqlParseVariables(props.query),\n  );\n\n  useEffect(() => {\n    setVariablesList(graphqlParseVariables(props.query));\n  }, [props.query]);\n\n  const variableOptions = Object.keys(variablesList).map((variable: any) => ({\n    label: variable,\n    value: variable,\n  }));\n\n  const setPaginationValue = (keyPath: string, key: string, value: any) => {\n    props.change(\n      props.formName,\n      `${PAGINATION_PREFIX}.${keyPath}.${key}`,\n      value,\n    );\n  };\n\n  const setSeparateOrSameLimitValue = ({\n    actualKeyPath,\n    dependentKeyPath,\n    isSeparateEnabled,\n    value,\n  }: {\n    actualKeyPath: string;\n    dependentKeyPath: string;\n    isSeparateEnabled: boolean;\n    value: any;\n  }) => {\n    if (!isSeparateEnabled) {\n      props.change(\n        props.formName,\n        `${PAGINATION_PREFIX}.${dependentKeyPath}`,\n        value,\n      );\n    }\n\n    props.change(\n      props.formName,\n      `${PAGINATION_PREFIX}.${actualKeyPath}`,\n      value,\n    );\n  };\n\n  const paginationPrev = props.cursorBased?.previous;\n  const paginationNext = props.cursorBased?.next;\n\n  return (\n    <PaginationContainer>\n      <FormRow style={{ flexGrow: 1 }}>\n        <RadioFieldGroupWrapper\n          className=\"t--apiFormPaginationType\"\n          name=\"actionConfiguration.paginationType\"\n          options={[\n            {\n              label: \"None\",\n              value: PaginationType.NONE,\n            },\n            {\n              label: \"Paginate via Limit and Offset\",\n              value: PaginationType.PAGE_NO,\n            },\n            {\n              label: \"Paginate via Cursor based\",\n              value: PaginationType.CURSOR,\n            },\n          ]}\n          placeholder=\"Method\"\n          rows={3}\n          selectedOptionElements={[\n            null,\n            <PaginationTypeView key={`${PaginationType.PAGE_NO}-element`}>\n              <Text type={TextType.P1}>\n                Specify a specific limit (number of results) and offset (the\n                number of records that needed to be skipped).\n              </Text>\n              <PaginationSection>\n                {/* Limit */}\n                <PaginationTypeBasedWrapper\n                  actionName={props.actionName}\n                  className=\"t--apiFormPaginationLimit\"\n                  dataReplayId={btoa(\n                    `${PAGINATION_PREFIX}.${LIMITBASED_PREFIX}.${PaginationSubComponent.Limit}`,\n                  )}\n                  onInputChange={(value: any) => {\n                    setPaginationValue(\n                      `${LIMITBASED_PREFIX}.${PaginationSubComponent.Limit}`,\n                      \"value\",\n                      value,\n                    );\n                  }}\n                  onSelectVariable={(_: any, dropdownOption: any) => {\n                    const values = variablesList[dropdownOption.value];\n                    Object.keys(values).forEach((key: string) => {\n                      setPaginationValue(\n                        `${LIMITBASED_PREFIX}.${PaginationSubComponent.Limit}`,\n                        key,\n                        values[key],\n                      );\n                    });\n                  }}\n                  selectedVariable={{\n                    label: props.limitBased?.limit?.name,\n                    value: props.limitBased?.limit?.name,\n                  }}\n                  valueLabel=\"Limit Value\"\n                  valuePath={`${PAGINATION_PREFIX}.${LIMITBASED_PREFIX}.${PaginationSubComponent.Limit}.value`}\n                  valuePlaceholder=\"{{Table1.pageSize}}\"\n                  valueTooltip=\"Override the value of the limit variable selected i.e. the no of rows returned\"\n                  variableLabel=\"Limit Variable\"\n                  variableOptions={variableOptions}\n                  variableTooltip=\"Select the limit variable from the query\"\n                />\n                {/* Offset */}\n                <PaginationTypeBasedWrapper\n                  actionName={props.actionName}\n                  className=\"t--apiFormPaginationOffset\"\n                  dataReplayId={btoa(\n                    `${PAGINATION_PREFIX}.${LIMITBASED_PREFIX}.${PaginationSubComponent.Offset}`,\n                  )}\n                  onInputChange={(value: any) => {\n                    setPaginationValue(\n                      `${LIMITBASED_PREFIX}.${PaginationSubComponent.Offset}`,\n                      \"value\",\n                      value,\n                    );\n                  }}\n                  onSelectVariable={(_: any, dropdownOption: any) => {\n                    const values = variablesList[dropdownOption.value];\n                    Object.keys(values).forEach((key: string) => {\n                      setPaginationValue(\n                        `${LIMITBASED_PREFIX}.${PaginationSubComponent.Offset}`,\n                        key,\n                        values[key],\n                      );\n                    });\n                  }}\n                  selectedVariable={{\n                    label: props.limitBased?.offset?.name,\n                    value: props.limitBased?.offset?.name,\n                  }}\n                  valueLabel=\"Offset Value\"\n                  valuePath={`${PAGINATION_PREFIX}.${LIMITBASED_PREFIX}.${PaginationSubComponent.Offset}.value`}\n                  valuePlaceholder=\"{{Table1.pageNo * Table1.pageSize}}\"\n                  valueTooltip=\"Override the value of the offset variable selected ie the no of rows omitted from the beginning\"\n                  variableLabel=\"Offset Variable\"\n                  variableOptions={variableOptions}\n                  variableTooltip=\"Select the offset variable from the query\"\n                />\n              </PaginationSection>\n            </PaginationTypeView>,\n            <PaginationTypeView key={`${PaginationType.CURSOR}-element`}>\n              <Text type={TextType.P1}>\n                Specfiy the previous and next cursor variables along with a\n                limit value.{\" \"}\n                <a\n                  href=\"https://graphql.org/learn/pagination/\"\n                  rel=\"noreferrer\"\n                  style={{ textDecoration: \"underline\" }}\n                  target={\"_blank\"}\n                >\n                  Refer documentation\n                </a>{\" \"}\n                for more information\n              </Text>\n              <PaginationSection>\n                <SubHeading type={TextType.P1}>\n                  Configure Previous Page\n                </SubHeading>\n                {/* Previous Limit Value */}\n                <PaginationTypeBasedWrapper\n                  actionName={props.actionName}\n                  className=\"t--apiFormPaginationPrevLimit\"\n                  dataReplayId={btoa(\n                    `${PAGINATION_PREFIX}.${CURSORBASED_PREFIX}.${CURSOR_PREVIOUS_PREFIX}`,\n                  )}\n                  onInputChange={(value: any) => {\n                    setSeparateOrSameLimitValue({\n                      actualKeyPath: `${CURSORBASED_PREFIX}.${CURSOR_PREVIOUS_PREFIX}.${PaginationSubComponent.Limit}.value`,\n                      dependentKeyPath: `${CURSORBASED_PREFIX}.${CURSOR_NEXT_PREFIX}.${PaginationSubComponent.Limit}.value`,\n                      value: value,\n                      isSeparateEnabled: !!paginationNext?.limit?.isSeparate,\n                    });\n                  }}\n                  onSelectVariable={(_: any, dropdownOption: any) => {\n                    const values = variablesList[dropdownOption.value];\n                    Object.keys(values).forEach((key: string) => {\n                      setPaginationValue(\n                        `${CURSORBASED_PREFIX}.${CURSOR_PREVIOUS_PREFIX}.${PaginationSubComponent.Limit}`,\n                        key,\n                        values[key],\n                      );\n                    });\n                  }}\n                  selectedVariable={{\n                    label: paginationPrev?.limit?.name,\n                    value: paginationPrev?.limit?.name,\n                  }}\n                  valueLabel=\"Limit Variable Value\"\n                  valuePath={`${PAGINATION_PREFIX}.${CURSORBASED_PREFIX}.${CURSOR_PREVIOUS_PREFIX}.${PaginationSubComponent.Limit}.value`}\n                  valuePlaceholder=\"{{Table1.pageSize}}\"\n                  valueTooltip=\"Override the value for the previous no of rows to be fetched\"\n                  variableLabel=\"Limit Variable Name\"\n                  variableOptions={variableOptions}\n                  variableTooltip=\"Select the variable from the query that holds the last/previous limit value\"\n                />\n                {/* Previous Cursor Values */}\n                <PaginationTypeBasedWrapper\n                  actionName={props.actionName}\n                  className=\"t--apiFormPaginationPrevCursor\"\n                  dataReplayId={btoa(\n                    `${PAGINATION_PREFIX}.${CURSORBASED_PREFIX}.${CURSOR_PREVIOUS_PREFIX}.${PaginationSubComponent.Cursor}`,\n                  )}\n                  onInputChange={(value: any) => {\n                    setPaginationValue(\n                      `${CURSORBASED_PREFIX}.${CURSOR_PREVIOUS_PREFIX}.${PaginationSubComponent.Cursor}`,\n                      \"value\",\n                      value,\n                    );\n                  }}\n                  onSelectVariable={(_: any, dropdownOption: any) => {\n                    const values = variablesList[dropdownOption.value];\n                    Object.keys(values).forEach((key: string) => {\n                      setPaginationValue(\n                        `${CURSORBASED_PREFIX}.${CURSOR_PREVIOUS_PREFIX}.${PaginationSubComponent.Cursor}`,\n                        key,\n                        values[key],\n                      );\n                    });\n                  }}\n                  selectedVariable={{\n                    label: paginationPrev?.cursor?.name,\n                    value: paginationPrev?.cursor?.name,\n                  }}\n                  valueLabel=\"Start Cursor Value\"\n                  valuePath={`${PAGINATION_PREFIX}.${CURSORBASED_PREFIX}.${CURSOR_PREVIOUS_PREFIX}.${PaginationSubComponent.Cursor}.value`}\n                  valuePlaceholder=\"{{Api1.data.previousCursor}}\"\n                  valueTooltip=\"Binding the widget action to the previous page activity\"\n                  variableLabel=\"Start Cursor Variable\"\n                  variableOptions={variableOptions}\n                  variableTooltip=\"Select the variable which holds the before cursor\"\n                />\n              </PaginationSection>\n              <PaginationSection>\n                <SubHeading type={TextType.P1}>Configure Next Page</SubHeading>\n                {/* Next Limit Value */}\n                <PaginationTypeBasedWrapper\n                  actionName={props.actionName}\n                  className=\"t--apiFormPaginationNextLimit\"\n                  dataReplayId={btoa(\n                    `${PAGINATION_PREFIX}.${CURSOR_NEXT_PREFIX}.${PaginationSubComponent.Limit}`,\n                  )}\n                  onInputChange={(value: any) => {\n                    setPaginationValue(\n                      `${CURSORBASED_PREFIX}.${CURSOR_NEXT_PREFIX}.${PaginationSubComponent.Limit}`,\n                      \"value\",\n                      value,\n                    );\n                  }}\n                  onSelectVariable={(_: any, dropdownOption: any) => {\n                    const values = variablesList[dropdownOption.value];\n                    Object.keys(values).forEach((key: string) => {\n                      setPaginationValue(\n                        `${CURSORBASED_PREFIX}.${CURSOR_NEXT_PREFIX}.${PaginationSubComponent.Limit}`,\n                        key,\n                        values[key],\n                      );\n                    });\n                  }}\n                  onSeparateKeyChange={(value: any) => {\n                    setPaginationValue(\n                      `${CURSORBASED_PREFIX}.${CURSOR_NEXT_PREFIX}.${PaginationSubComponent.Limit}`,\n                      \"isSeparate\",\n                      value,\n                    );\n                  }}\n                  selectedVariable={{\n                    label: paginationNext?.limit?.name,\n                    value: paginationNext?.limit?.name,\n                  }}\n                  separateKeyFlag\n                  separateKeyLabel=\"Enable separate value for first limit variable\"\n                  separateKeyPath={`${PAGINATION_PREFIX}.${CURSORBASED_PREFIX}.${CURSOR_NEXT_PREFIX}.${PaginationSubComponent.Limit}.isSeparate`}\n                  separateValueFlag={!!paginationNext?.limit?.isSeparate}\n                  valueLabel=\"Limit Variable Value\"\n                  valuePath={`${PAGINATION_PREFIX}.${CURSORBASED_PREFIX}.${CURSOR_NEXT_PREFIX}.${PaginationSubComponent.Limit}.value`}\n                  valuePlaceholder=\"{{Table1.pageSize}}\"\n                  valueTooltip=\"Override the value for the next no of rows to be fetched\"\n                  variableLabel=\"Limit Variable Name\"\n                  variableOptions={variableOptions}\n                  variableTooltip=\"Select the variable from the query that holds the first/next limit value\"\n                />\n                {/* Next Cursor Values */}\n                <PaginationTypeBasedWrapper\n                  actionName={props.actionName}\n                  className=\"t--apiFormPaginationNextCursor\"\n                  dataReplayId={btoa(\n                    `${PAGINATION_PREFIX}.${CURSOR_NEXT_PREFIX}.${PaginationSubComponent.Cursor}`,\n                  )}\n                  onInputChange={(value: any) => {\n                    setPaginationValue(\n                      `${CURSORBASED_PREFIX}.${CURSOR_NEXT_PREFIX}.${PaginationSubComponent.Cursor}`,\n                      \"value\",\n                      value,\n                    );\n                  }}\n                  onSelectVariable={(_: any, dropdownOption: any) => {\n                    const values = variablesList[dropdownOption.value];\n                    Object.keys(values).forEach((key: string) => {\n                      setPaginationValue(\n                        `${CURSORBASED_PREFIX}.${CURSOR_NEXT_PREFIX}.${PaginationSubComponent.Cursor}`,\n                        key,\n                        values[key],\n                      );\n                    });\n                  }}\n                  selectedVariable={{\n                    label: paginationNext?.cursor?.name,\n                    value: paginationNext?.cursor?.name,\n                  }}\n                  valueLabel=\"End Cursor Value\"\n                  valuePath={`${PAGINATION_PREFIX}.${CURSORBASED_PREFIX}.${CURSOR_NEXT_PREFIX}.${PaginationSubComponent.Cursor}.value`}\n                  valuePlaceholder=\"{{Api1.data.nextCursor}}\"\n                  valueTooltip=\"Binding the widget action to the next page activity\"\n                  variableLabel=\"End Cursor Variable\"\n                  variableOptions={variableOptions}\n                  variableTooltip=\"Select the variable which holds the after cursor\"\n                />\n              </PaginationSection>\n            </PaginationTypeView>,\n          ]}\n        />\n      </FormRow>\n    </PaginationContainer>\n  );\n}\n\nconst mapStateToProps = (state: AppState, props: { formName: string }) => {\n  const selector = formValueSelector(props.formName);\n  const pluginExtraData: GRAPHQL_PAGINATION_TYPE = selector(\n    state,\n    PAGINATION_PREFIX,\n  );\n  const limitBased = pluginExtraData?.[LIMITBASED_PREFIX];\n  const cursorBased = pluginExtraData?.[CURSORBASED_PREFIX];\n\n  return {\n    cursorBased,\n    limitBased,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: Dispatch<AnyAction>) => {\n  return bindActionCreators({ change }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Pagination);\n","import React, { useCallback, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  change,\n  formValueSelector,\n  InjectedFormProps,\n  reduxForm,\n} from \"redux-form\";\nimport classNames from \"classnames\";\nimport styled from \"styled-components\";\nimport { API_EDITOR_FORM_NAME } from \"@appsmith/constants/forms\";\nimport { Action } from \"entities/Action\";\nimport { EMPTY_RESPONSE } from \"components/editorComponents/ApiResponseView\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { getApiName } from \"selectors/formSelectors\";\nimport { EditorTheme } from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport useHorizontalResize from \"utils/hooks/useHorizontalResize\";\nimport get from \"lodash/get\";\nimport { Datasource } from \"entities/Datasource\";\nimport {\n  getAction,\n  getActionData,\n} from \"../../../../selectors/entitiesSelector\";\nimport { isEmpty } from \"lodash\";\nimport CommonEditorForm, { CommonFormProps } from \"../CommonEditorForm\";\nimport QueryEditor from \"./QueryEditor\";\nimport { tailwindLayers } from \"constants/Layers\";\nimport VariableEditor from \"./VariableEditor\";\nimport Pagination from \"./Pagination\";\nimport { Colors } from \"constants/Colors\";\n\nconst ResizeableDiv = styled.div`\n  display: flex;\n  height: 100%;\n  flex-shrink: 0;\n`;\n\nconst BodyWrapper = styled.div`\n  display: flex;\n  height: 100%;\n  overflow: hidden;\n  &&&& .CodeMirror {\n    height: 100%;\n    border-top: 1px solid var(--appsmith-color-black-250);\n    border-bottom: 1px solid var(--appsmith-color-black-250);\n    border-radius: 0;\n    padding: 0;\n  }\n  & .CodeMirror-scroll {\n    margin: 0px;\n    padding: 0px;\n    overflow: auto !important;\n  }\n`;\n\nconst ResizerHandler = styled.div<{ resizing: boolean }>`\n  width: 6px;\n  height: 100%;\n  margin-left: 2px;\n  border-right: 1px solid ${Colors.GREY_200};\n  background: ${(props) => (props.resizing ? Colors.GREY_4 : \"transparent\")};\n  &:hover {\n    background: ${Colors.GREY_4};\n    border-color: transparent;\n  }\n`;\n\ntype APIFormProps = {\n  httpMethodFromForm: string;\n  actionConfigurationBody: string;\n} & CommonFormProps;\n\ntype Props = APIFormProps & InjectedFormProps<Action, APIFormProps>;\n\nconst DEFAULT_GRAPHQL_VARIABLE_WIDTH = 300;\n\n/**\n * Graphql Editor form which uses the Common Editor and pass on the differentiating components from the API Editor.\n * @param props using type Props\n * @returns Graphql Editor Area which is used to editor APIs using GraphQL datasource.\n */\nfunction GraphQLEditorForm(props: Props) {\n  const { actionName } = props;\n  const theme = EditorTheme.LIGHT;\n  const sizeableRef = useRef<HTMLDivElement>(null);\n  const [variableEditorWidth, setVariableEditorWidth] = React.useState(\n    DEFAULT_GRAPHQL_VARIABLE_WIDTH,\n  );\n\n  /**\n   * Variable Editor's resizeable handler for the changing of width\n   */\n  const onVariableEditorWidthChange = useCallback((newWidth) => {\n    setVariableEditorWidth(newWidth);\n  }, []);\n\n  const {\n    onMouseDown,\n    onMouseUp,\n    onTouchStart,\n    resizing,\n  } = useHorizontalResize(\n    sizeableRef,\n    onVariableEditorWidthChange,\n    undefined,\n    true,\n  );\n\n  return (\n    <CommonEditorForm\n      {...props}\n      bodyUIComponent={\n        <BodyWrapper>\n          <QueryEditor\n            dataTreePath={`${actionName}.config.body`}\n            height=\"100%\"\n            name=\"actionConfiguration.body\"\n            theme={theme}\n          />\n          <div\n            className={`w-2 h-full -ml-2 group  cursor-ew-resize ${tailwindLayers.resizer}`}\n            onMouseDown={onMouseDown}\n            onTouchEnd={onMouseUp}\n            onTouchStart={onTouchStart}\n          >\n            <ResizerHandler\n              className={classNames({\n                \"transform transition\": true,\n              })}\n              resizing={resizing}\n            />\n          </div>\n          <ResizeableDiv\n            ref={sizeableRef}\n            style={{\n              width: `${variableEditorWidth}px`,\n            }}\n          >\n            <VariableEditor actionName={actionName} theme={theme} />\n          </ResizeableDiv>\n        </BodyWrapper>\n      }\n      defaultTabSelected={2}\n      formName={API_EDITOR_FORM_NAME}\n      paginationUIComponent={\n        <Pagination\n          actionName={actionName}\n          formName={API_EDITOR_FORM_NAME}\n          onTestClick={props.onRunClick}\n          paginationType={props.paginationType}\n          query={props.actionConfigurationBody}\n        />\n      }\n    />\n  );\n}\n\nconst selector = formValueSelector(API_EDITOR_FORM_NAME);\n\ntype ReduxDispatchProps = {\n  updateDatasource: (datasource: Datasource) => void;\n};\n\nconst mapDispatchToProps = (dispatch: any): ReduxDispatchProps => ({\n  updateDatasource: (datasource) => {\n    dispatch(change(API_EDITOR_FORM_NAME, \"datasource\", datasource));\n  },\n});\n\nexport default connect(\n  (state: AppState, props: { pluginId: string; match?: any }) => {\n    const httpMethodFromForm = selector(\n      state,\n      \"actionConfiguration.httpMethod\",\n    );\n    const actionConfigurationHeaders =\n      selector(state, \"actionConfiguration.headers\") || [];\n    const actionConfigurationParams =\n      selector(state, \"actionConfiguration.queryParameters\") || [];\n    let datasourceFromAction = selector(state, \"datasource\");\n    if (datasourceFromAction && datasourceFromAction.hasOwnProperty(\"id\")) {\n      datasourceFromAction = state.entities.datasources.list.find(\n        (d) => d.id === datasourceFromAction.id,\n      );\n    }\n\n    // get messages from action itself\n    const { apiId, queryId } = props.match?.params || {};\n    const actionId = queryId || apiId;\n    // const actionId = selector(state, \"id\");\n    const action = getAction(state, actionId);\n    const hintMessages = action?.messages;\n\n    const datasourceHeaders =\n      get(datasourceFromAction, \"datasourceConfiguration.headers\") || [];\n    const datasourceParams =\n      get(datasourceFromAction, \"datasourceConfiguration.queryParameters\") ||\n      [];\n\n    // const apiId = selector(state, \"id\");\n    const currentActionDatasourceId = selector(state, \"datasource.id\");\n\n    const actionName = getApiName(state, apiId) || \"\";\n    const headers = selector(state, \"actionConfiguration.headers\");\n    let headersCount = 0;\n\n    if (Array.isArray(headers)) {\n      const validHeaders = headers.filter(\n        (value) => value.key && value.key !== \"\",\n      );\n      headersCount += validHeaders.length;\n    }\n\n    if (Array.isArray(datasourceHeaders)) {\n      const validHeaders = datasourceHeaders.filter(\n        (value: any) => value.key && value.key !== \"\",\n      );\n      headersCount += validHeaders.length;\n    }\n\n    const params = selector(state, \"actionConfiguration.queryParameters\");\n    let paramsCount = 0;\n\n    if (Array.isArray(params)) {\n      const validParams = params.filter(\n        (value) => value.key && value.key !== \"\",\n      );\n      paramsCount = validParams.length;\n    }\n\n    if (Array.isArray(datasourceParams)) {\n      const validParams = datasourceParams.filter(\n        (value: any) => value.key && value.key !== \"\",\n      );\n      paramsCount += validParams.length;\n    }\n\n    const actionConfigurationBody =\n      selector(state, \"actionConfiguration.body\") || \"\";\n\n    let hasResponse = false;\n    let suggestedWidgets;\n    if (apiId) {\n      const response = getActionData(state, apiId) || EMPTY_RESPONSE;\n      hasResponse =\n        !isEmpty(response.statusCode) && response.statusCode[0] === \"2\";\n      suggestedWidgets = response.suggestedWidgets;\n    }\n\n    const actionData = getActionData(state, apiId);\n    let responseDisplayFormat: { title: string; value: string };\n    let responseDataTypes: { key: string; title: string }[];\n    if (!!actionData && actionData.responseDisplayFormat) {\n      responseDataTypes = actionData.dataTypes.map((data) => {\n        return {\n          key: data.dataType,\n          title: data.dataType,\n        };\n      });\n      responseDisplayFormat = {\n        title: actionData.responseDisplayFormat,\n        value: actionData.responseDisplayFormat,\n      };\n    } else {\n      responseDataTypes = [];\n      responseDisplayFormat = {\n        title: \"\",\n        value: \"\",\n      };\n    }\n\n    return {\n      actionName,\n      apiId,\n      httpMethodFromForm,\n      actionConfigurationHeaders,\n      actionConfigurationParams,\n      actionConfigurationBody,\n      currentActionDatasourceId,\n      datasourceHeaders,\n      datasourceParams,\n      headersCount,\n      paramsCount,\n      hintMessages,\n      datasources: state.entities.datasources.list.filter(\n        (d) => d.pluginId === props.pluginId,\n      ),\n      currentPageId: state.entities.pageList.currentPageId,\n      applicationId: state.entities.pageList.applicationId,\n      responseDataTypes,\n      responseDisplayFormat,\n      suggestedWidgets,\n      hasResponse,\n    };\n  },\n  mapDispatchToProps,\n)(\n  reduxForm<Action, any>({\n    form: API_EDITOR_FORM_NAME,\n    enableReinitialize: true,\n  })(GraphQLEditorForm),\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { submit } from \"redux-form\";\nimport RestApiEditorForm from \"./RestAPIForm\";\nimport RapidApiEditorForm from \"./RapidApiEditorForm\";\nimport { deleteAction, runAction } from \"actions/pluginActionActions\";\nimport { PaginationField } from \"api/ActionAPI\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  ActionData,\n  ActionDataState,\n} from \"reducers/entityReducers/actionsReducer\";\nimport _ from \"lodash\";\nimport { getCurrentApplication } from \"selectors/applicationSelectors\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport {\n  getActionById,\n  getCurrentApplicationId,\n  getCurrentPageName,\n  getIsEditorInitialized,\n} from \"selectors/editorSelectors\";\nimport { Plugin } from \"api/PluginApi\";\nimport {\n  Action,\n  PaginationType,\n  PluginPackageName,\n  RapidApiAction,\n} from \"entities/Action\";\nimport { getApiName } from \"selectors/formSelectors\";\nimport Spinner from \"components/editorComponents/Spinner\";\nimport styled, { CSSProperties } from \"styled-components\";\nimport CenteredWrapper from \"components/designSystems/appsmith/CenteredWrapper\";\nimport { changeApi } from \"actions/apiPaneActions\";\nimport PerformanceTracker, {\n  PerformanceTransactionName,\n} from \"utils/PerformanceTracker\";\nimport * as Sentry from \"@sentry/react\";\nimport EntityNotFoundPane from \"pages/Editor/EntityNotFoundPane\";\nimport { ApplicationPayload } from \"@appsmith/constants/ReduxActionConstants\";\nimport {\n  getPageList,\n  getPlugins,\n  getPluginSettingConfigs,\n} from \"selectors/entitiesSelector\";\nimport history from \"utils/history\";\nimport { saasEditorApiIdURL } from \"RouteBuilder\";\nimport GraphQLEditorForm from \"./GraphQL/GraphQLEditorForm\";\n\nconst LoadingContainer = styled(CenteredWrapper)`\n  height: 50%;\n`;\n\ninterface ReduxStateProps {\n  actions: ActionDataState;\n  isRunning: boolean;\n  isDeleting: boolean;\n  isCreating: boolean;\n  apiName: string;\n  currentApplication?: ApplicationPayload;\n  currentPageName: string | undefined;\n  pages: any;\n  plugins: Plugin[];\n  pluginId: any;\n  settingsConfig: any;\n  apiAction: Action | ActionData | RapidApiAction | undefined;\n  paginationType: PaginationType;\n  isEditorInitialized: boolean;\n  applicationId: string;\n}\ninterface ReduxActionProps {\n  submitForm: (name: string) => void;\n  runAction: (id: string, paginationField?: PaginationField) => void;\n  deleteAction: (id: string, name: string) => void;\n  changeAPIPage: (apiId: string, isSaas: boolean) => void;\n}\n\nfunction getPageName(pages: any, pageId: string) {\n  const page = pages.find((page: any) => page.pageId === pageId);\n  return page ? page.pageName : \"\";\n}\n\nfunction getPackageNameFromPluginId(pluginId: string, plugins: Plugin[]) {\n  const plugin = plugins.find((plugin: Plugin) => plugin.id === pluginId);\n  return plugin?.packageName;\n}\n\ntype Props = ReduxActionProps &\n  ReduxStateProps &\n  RouteComponentProps<{ apiId: string; pageId: string }>;\n\nclass ApiEditor extends React.Component<Props> {\n  componentDidMount() {\n    PerformanceTracker.stopTracking(PerformanceTransactionName.OPEN_ACTION, {\n      actionType: \"API\",\n    });\n    const type = this.getFormName();\n    this.props.changeAPIPage(this.props.match.params.apiId, type === \"SAAS\");\n  }\n  handleDeleteClick = () => {\n    const pageName = getPageName(\n      this.props.pages,\n      this.props.match.params.pageId,\n    );\n    AnalyticsUtil.logEvent(\"DELETE_API_CLICK\", {\n      apiName: this.props.apiName,\n      apiID: this.props.match.params.apiId,\n      pageName: pageName,\n    });\n    this.props.deleteAction(this.props.match.params.apiId, this.props.apiName);\n  };\n\n  getFormName = () => {\n    const plugins = this.props.plugins;\n    const pluginId = this.props.pluginId;\n    const plugin =\n      plugins &&\n      plugins.find((plug) => {\n        if (plug.id === pluginId) return plug;\n      });\n    return plugin && plugin.type;\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.isRunning && !this.props.isRunning) {\n      PerformanceTracker.stopTracking(PerformanceTransactionName.RUN_API_CLICK);\n    }\n    if (prevProps.match.params.apiId !== this.props.match.params.apiId) {\n      const type = this.getFormName();\n      this.props.changeAPIPage(this.props.match.params.apiId, type === \"SAAS\");\n    }\n  }\n\n  handleRunClick = (paginationField?: PaginationField) => {\n    const pageName = getPageName(\n      this.props.pages,\n      this.props.match.params.pageId,\n    );\n    PerformanceTracker.startTracking(PerformanceTransactionName.RUN_API_CLICK, {\n      apiId: this.props.match.params.apiId,\n    });\n    AnalyticsUtil.logEvent(\"RUN_API_CLICK\", {\n      apiName: this.props.apiName,\n      apiID: this.props.match.params.apiId,\n      pageName: pageName,\n    });\n    this.props.runAction(this.props.match.params.apiId, paginationField);\n  };\n\n  getPluginUiComponentOfId = (\n    id: string,\n    plugins: Plugin[],\n  ): string | undefined => {\n    const plugin = plugins.find((plugin) => plugin.id === id);\n    if (!plugin) return undefined;\n    return plugin.uiComponent;\n  };\n\n  getPluginUiComponentOfName = (plugins: Plugin[]): string | undefined => {\n    const plugin = plugins.find(\n      (plugin) => plugin.packageName === PluginPackageName.REST_API,\n    );\n    if (!plugin) return undefined;\n    return plugin.uiComponent;\n  };\n\n  render() {\n    const {\n      isCreating,\n      isDeleting,\n      isEditorInitialized,\n      isRunning,\n      match: {\n        params: { apiId },\n      },\n      paginationType,\n      pluginId,\n      plugins,\n    } = this.props;\n    if (!this.props.pluginId && this.props.match.params.apiId) {\n      return <EntityNotFoundPane />;\n    }\n    if (isCreating || !isEditorInitialized) {\n      return (\n        <LoadingContainer>\n          <Spinner size={30} />\n        </LoadingContainer>\n      );\n    }\n\n    let formUiComponent: string | undefined;\n    if (apiId) {\n      if (pluginId) {\n        formUiComponent = this.getPluginUiComponentOfId(pluginId, plugins);\n      } else {\n        formUiComponent = this.getPluginUiComponentOfName(plugins);\n      }\n    }\n\n    return (\n      <div style={formStyles}>\n        {formUiComponent === \"ApiEditorForm\" && (\n          <RestApiEditorForm\n            apiName={this.props.apiName}\n            appName={\n              this.props.currentApplication\n                ? this.props.currentApplication.name\n                : \"\"\n            }\n            isDeleting={isDeleting}\n            isRunning={isRunning}\n            onDeleteClick={this.handleDeleteClick}\n            onRunClick={this.handleRunClick}\n            paginationType={paginationType}\n            pluginId={pluginId}\n            settingsConfig={this.props.settingsConfig}\n          />\n        )}\n        {formUiComponent === \"GraphQLEditorForm\" && (\n          <GraphQLEditorForm\n            apiName={this.props.apiName}\n            appName={\n              this.props.currentApplication\n                ? this.props.currentApplication.name\n                : \"\"\n            }\n            isDeleting={isDeleting}\n            isRunning={isRunning}\n            match={this.props.match}\n            onDeleteClick={this.handleDeleteClick}\n            onRunClick={this.handleRunClick}\n            paginationType={paginationType}\n            pluginId={pluginId}\n            settingsConfig={this.props.settingsConfig}\n          />\n        )}\n        {formUiComponent === \"RapidApiEditorForm\" && (\n          <RapidApiEditorForm\n            apiId={this.props.match.params.apiId}\n            apiName={this.props.apiName}\n            appName={\n              this.props.currentApplication\n                ? this.props.currentApplication.name\n                : \"\"\n            }\n            isDeleting={isDeleting}\n            isRunning={isRunning}\n            location={this.props.location}\n            onDeleteClick={this.handleDeleteClick}\n            onRunClick={this.handleRunClick}\n            paginationType={paginationType}\n          />\n        )}\n        {formUiComponent === \"SaaSEditorForm\" &&\n          history.push(\n            saasEditorApiIdURL({\n              pageId: this.props.match.params.pageId,\n              pluginPackageName:\n                getPackageNameFromPluginId(\n                  this.props.pluginId,\n                  this.props.plugins,\n                ) ?? \"\",\n              apiId: this.props.match.params.apiId,\n            }),\n          )}\n      </div>\n    );\n  }\n}\n\nconst formStyles: CSSProperties = {\n  position: \"relative\",\n  height: \"100%\",\n  display: \"flex\",\n  flexDirection: \"column\",\n};\n\nconst mapStateToProps = (state: AppState, props: any): ReduxStateProps => {\n  const apiAction = getActionById(state, props);\n  const apiName = getApiName(state, props.match.params.apiId);\n  const { isCreating, isDeleting, isRunning } = state.ui.apiPane;\n  const pluginId = _.get(apiAction, \"pluginId\", \"\");\n  const settingsConfig = getPluginSettingConfigs(state, pluginId);\n  return {\n    actions: state.entities.actions,\n    currentApplication: getCurrentApplication(state),\n    currentPageName: getCurrentPageName(state),\n    pages: getPageList(state),\n    apiName: apiName || \"\",\n    plugins: getPlugins(state),\n    pluginId,\n    settingsConfig,\n    paginationType: _.get(apiAction, \"actionConfiguration.paginationType\"),\n    apiAction,\n    isRunning: isRunning[props.match.params.apiId],\n    isDeleting: isDeleting[props.match.params.apiId],\n    isCreating: isCreating,\n    isEditorInitialized: getIsEditorInitialized(state),\n    applicationId: getCurrentApplicationId(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): ReduxActionProps => ({\n  submitForm: (name: string) => dispatch(submit(name)),\n  runAction: (id: string, paginationField?: PaginationField) =>\n    dispatch(runAction(id, paginationField)),\n  deleteAction: (id: string, name: string) =>\n    dispatch(deleteAction({ id, name })),\n  changeAPIPage: (actionId: string, isSaas: boolean) =>\n    dispatch(changeApi(actionId, isSaas)),\n});\n\nexport default Sentry.withProfiler(\n  connect(mapStateToProps, mapDispatchToProps)(ApiEditor),\n);\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgPlusLogo(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#000\",\n    d: \"M20 10.474V13.5261C20 13.7558 19.8138 13.9423 19.5838 13.9423H13.9423V19.5838C13.9423 19.8139 13.7558 20 13.5261 20H10.474C10.2444 20 10.0578 19.8138 10.0578 19.5838V13.9423H4.41619C4.18625 13.9423 4 13.7558 4 13.5261V10.474C4 10.2442 4.18625 10.0578 4.41619 10.0578H10.0578V4.41619C10.0578 4.18616 10.2443 4 10.474 4H13.5261C13.7558 4 13.9423 4.18616 13.9423 4.41619V10.0578H19.5838C19.8139 10.0578 20 10.2442 20 10.474Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlusLogo);\nexport default __webpack_public_path__ + \"static/media/Plus-logo.c853ddab16bf33b0e77463350b40555e.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback, useEffect, useState } from \"react\";\nimport { connect, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  createDatasourceFromForm,\n  createTempDatasourceFromForm,\n} from \"actions/datasourceActions\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { Colors } from \"constants/Colors\";\nimport CurlLogo from \"assets/images/Curl-logo.svg\";\nimport PlusLogo from \"assets/images/Plus-logo.svg\";\nimport { GenerateCRUDEnabledPluginMap, Plugin } from \"api/PluginApi\";\nimport { createNewApiAction } from \"actions/apiPaneActions\";\nimport AnalyticsUtil, { EventLocation } from \"utils/AnalyticsUtil\";\nimport { CURL } from \"constants/AppsmithActionConstants/ActionConstants\";\nimport { PluginPackageName, PluginType } from \"entities/Action\";\nimport { Spinner } from \"@blueprintjs/core\";\nimport { getQueryParams } from \"utils/URLUtils\";\nimport { getGenerateCRUDEnabledPluginMap } from \"selectors/entitiesSelector\";\nimport { getIsGeneratePageInitiator } from \"utils/GenerateCrudUtil\";\nimport { curlImportPageURL } from \"RouteBuilder\";\n\nconst StyledContainer = styled.div`\n  flex: 1;\n  margin-top: 8px;\n  .textBtn {\n    font-size: 16px;\n    line-height: 24px;\n    margin: 0;\n    justify-content: center;\n    text-align: center;\n    letter-spacing: -0.24px;\n    color: ${Colors.BLACK};\n    font-weight: 400;\n    text-decoration: none !important;\n    flex-wrap: wrap;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n  @media (min-width: 2500px) {\n    .textBtn {\n      font-size: 18px;\n    }\n  }\n  @media (min-width: 2500px) {\n    .eachCard {\n      width: 240px;\n      height: 200px;\n    }\n    .apiImage {\n      margin-top: 25px;\n      margin-bottom: 20px;\n      height: 80px;\n    }\n    .curlImage {\n      width: 100px;\n    }\n    .createIcon {\n      height: 70px;\n    }\n  }\n`;\n\nconst ApiCardsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 16px;\n  text-align: center;\n  min-width: 150px;\n  border-radius: 4px;\n  align-items: center;\n\n  .create-new-api {\n    &:hover {\n      cursor: pointer;\n    }\n  }\n`;\n\nconst ApiCard = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 64px;\n  &:hover {\n    background-color: ${Colors.GREY_1};\n    cursor: pointer;\n  }\n\n  .content-icon-wrapper {\n    width: 48px;\n    height: 48px;\n    border-radius: 50%;\n    background: ${Colors.GREY_2};\n    display: flex;\n    align-items: center;\n\n    .content-icon {\n      height: 28px;\n      width: auto;\n      margin: 0 auto;\n      max-width: 100%;\n    }\n  }\n\n  .cta {\n    display: none;\n    margin-right: 32px;\n  }\n\n  &:hover {\n    .cta {\n      display: flex;\n    }\n  }\n`;\n\nconst CardContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 13px;\n  padding-left: 13.5px;\n`;\n\ntype ApiHomeScreenProps = {\n  createNewApiAction: (\n    pageId: string,\n    from: EventLocation,\n    apiType?: string,\n  ) => void;\n  history: {\n    replace: (data: string) => void;\n    push: (data: string) => void;\n  };\n  location: {\n    search: string;\n  };\n  pageId: string;\n  plugins: Plugin[];\n  createDatasourceFromForm: (data: any) => void;\n  isCreating: boolean;\n  showUnsupportedPluginDialog: (callback: any) => void;\n  createTempDatasourceFromForm: (data: any) => void;\n};\n\ntype Props = ApiHomeScreenProps;\n\nconst API_ACTION = {\n  IMPORT_CURL: \"IMPORT_CURL\",\n  CREATE_NEW_API: \"CREATE_NEW_API\",\n  CREATE_NEW_GRAPHQL_API: \"CREATE_NEW_GRAPHQL_API\",\n  CREATE_DATASOURCE_FORM: \"CREATE_DATASOURCE_FORM\",\n  AUTH_API: \"AUTH_API\",\n};\n\nfunction NewApiScreen(props: Props) {\n  const { createNewApiAction, history, isCreating, pageId, plugins } = props;\n\n  const generateCRUDSupportedPlugin: GenerateCRUDEnabledPluginMap = useSelector(\n    getGenerateCRUDEnabledPluginMap,\n  );\n  const [authApiPlugin, setAuthAPiPlugin] = useState<Plugin | undefined>();\n\n  useEffect(() => {\n    const plugin = plugins.find((p) => p.name === \"REST API\");\n    setAuthAPiPlugin(plugin);\n  }, [plugins]);\n\n  const handleCreateAuthApiDatasource = useCallback(() => {\n    if (authApiPlugin) {\n      AnalyticsUtil.logEvent(\"CREATE_DATA_SOURCE_AUTH_API_CLICK\", {\n        pluginId: authApiPlugin.id,\n      });\n      AnalyticsUtil.logEvent(\"CREATE_DATA_SOURCE_CLICK\", {\n        pluginName: authApiPlugin.name,\n        pluginPackageName: authApiPlugin.packageName,\n      });\n      props.createTempDatasourceFromForm({\n        pluginId: authApiPlugin.id,\n      });\n    }\n  }, [authApiPlugin, props.createTempDatasourceFromForm]);\n\n  const handleCreateNew = (source: string) => {\n    AnalyticsUtil.logEvent(\"CREATE_DATA_SOURCE_CLICK\", {\n      source,\n    });\n    if (pageId) {\n      createNewApiAction(\n        pageId,\n        \"API_PANE\",\n        source === API_ACTION.CREATE_NEW_GRAPHQL_API\n          ? PluginPackageName.GRAPHQL\n          : PluginPackageName.REST_API,\n      );\n    }\n  };\n\n  // On click of any API card, handleOnClick action should be called to check if user came from generate-page flow.\n  // if yes then show UnsupportedDialog for the API which are not supported to generate CRUD page.\n  const handleOnClick = (actionType: string, params?: any) => {\n    const queryParams = getQueryParams();\n    const isGeneratePageInitiator = getIsGeneratePageInitiator(\n      queryParams.isGeneratePageMode,\n    );\n    if (\n      isGeneratePageInitiator &&\n      !params?.skipValidPluginCheck &&\n      !generateCRUDSupportedPlugin[params?.pluginId]\n    ) {\n      // show modal informing user that this will break the generate flow.\n      props?.showUnsupportedPluginDialog(() =>\n        handleOnClick(actionType, { skipValidPluginCheck: true, ...params }),\n      );\n      return;\n    }\n    switch (actionType) {\n      case API_ACTION.CREATE_NEW_API:\n      case API_ACTION.CREATE_NEW_GRAPHQL_API:\n        handleCreateNew(actionType);\n        break;\n      case API_ACTION.IMPORT_CURL: {\n        AnalyticsUtil.logEvent(\"IMPORT_API_CLICK\", {\n          importSource: CURL,\n        });\n        AnalyticsUtil.logEvent(\"CREATE_DATA_SOURCE_CLICK\", {\n          source: CURL,\n        });\n\n        delete queryParams.isGeneratePageMode;\n        const curlImportURL = curlImportPageURL({\n          pageId,\n          params: {\n            from: \"datasources\",\n            ...queryParams,\n          },\n        });\n\n        history.push(curlImportURL);\n        break;\n      }\n      case API_ACTION.CREATE_DATASOURCE_FORM: {\n        props.createTempDatasourceFromForm({\n          pluginId: params.pluginId,\n          type: params.type,\n        });\n        break;\n      }\n      case API_ACTION.AUTH_API: {\n        handleCreateAuthApiDatasource();\n        break;\n      }\n      default:\n    }\n  };\n\n  // Api plugins with Graphql\n  const API_PLUGINS = plugins.filter(\n    (p) => p.packageName === PluginPackageName.GRAPHQL,\n  );\n\n  plugins.forEach((p) => {\n    if (p.type === PluginType.SAAS || p.type === PluginType.REMOTE) {\n      API_PLUGINS.push(p);\n    }\n  });\n\n  return (\n    <StyledContainer>\n      <ApiCardsContainer data-testid=\"newapi-datasource-card-container\">\n        <ApiCard\n          className=\"t--createBlankApiCard create-new-api\"\n          onClick={() => handleOnClick(API_ACTION.CREATE_NEW_API)}\n        >\n          <CardContentWrapper data-testid=\"newapi-datasource-content-wrapper\">\n            <div className=\"content-icon-wrapper\">\n              <img\n                alt=\"New\"\n                className=\"curlImage t--plusImage content-icon\"\n                src={PlusLogo}\n              />\n            </div>\n            <p className=\"textBtn\">REST API</p>\n          </CardContentWrapper>\n          {isCreating && <Spinner className=\"cta\" size={25} />}\n        </ApiCard>\n        <ApiCard\n          className=\"t--createBlankCurlCard\"\n          onClick={() => handleOnClick(API_ACTION.IMPORT_CURL)}\n        >\n          <CardContentWrapper>\n            <div className=\"content-icon-wrapper\">\n              <img\n                alt=\"CURL\"\n                className=\"curlImage t--curlImage content-icon\"\n                src={CurlLogo}\n              />\n            </div>\n            <p className=\"textBtn\">CURL import</p>\n          </CardContentWrapper>\n        </ApiCard>\n        {authApiPlugin && (\n          <ApiCard\n            className=\"t--createAuthApiDatasource\"\n            onClick={() => handleOnClick(API_ACTION.AUTH_API)}\n          >\n            <CardContentWrapper>\n              <div className=\"content-icon-wrapper\">\n                <img\n                  alt=\"OAuth2\"\n                  className=\"authApiImage t--authApiImage content-icon\"\n                  src={authApiPlugin.iconLocation}\n                />\n              </div>\n              <p className=\"t--plugin-name textBtn\">Authenticated API</p>\n            </CardContentWrapper>\n          </ApiCard>\n        )}\n        <ApiCard\n          className=\"t--createBlankApiGraphqlCard\"\n          onClick={() => handleOnClick(API_ACTION.CREATE_NEW_GRAPHQL_API)}\n        >\n          <CardContentWrapper>\n            <div className=\"content-icon-wrapper\">\n              <img\n                alt=\"New\"\n                className=\"curlImage t--plusImage content-icon\"\n                src={PlusLogo}\n              />\n            </div>\n            <p className=\"textBtn\">GraphQL API</p>\n          </CardContentWrapper>\n        </ApiCard>\n        {API_PLUGINS.map((p) => (\n          <ApiCard\n            className={`t--createBlankApi-${p.packageName}`}\n            key={p.id}\n            onClick={() => {\n              AnalyticsUtil.logEvent(\"CREATE_DATA_SOURCE_CLICK\", {\n                pluginName: p.name,\n                pluginPackageName: p.packageName,\n              });\n              handleOnClick(API_ACTION.CREATE_DATASOURCE_FORM, {\n                pluginId: p.id,\n              });\n            }}\n          >\n            <CardContentWrapper>\n              <div className=\"content-icon-wrapper\">\n                <img\n                  alt={p.name}\n                  className={\n                    \"content-icon saasImage t--saas-\" + p.packageName + \"-image\"\n                  }\n                  src={p.iconLocation}\n                />\n              </div>\n              <p className=\"t--plugin-name textBtn\">{p.name}</p>\n            </CardContentWrapper>\n          </ApiCard>\n        ))}\n      </ApiCardsContainer>\n    </StyledContainer>\n  );\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  plugins: state.entities.plugins.list,\n});\n\nconst mapDispatchToProps = {\n  createNewApiAction,\n  createDatasourceFromForm,\n  createTempDatasourceFromForm,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewApiScreen);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { initialize } from \"redux-form\";\nimport { getDBPlugins, getPluginImages } from \"selectors/entitiesSelector\";\nimport { Plugin } from \"api/PluginApi\";\nimport { DATASOURCE_DB_FORM } from \"@appsmith/constants/forms\";\nimport {\n  createDatasourceFromForm,\n  createTempDatasourceFromForm,\n} from \"actions/datasourceActions\";\nimport { AppState } from \"@appsmith/reducers\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { getCurrentApplication } from \"selectors/applicationSelectors\";\nimport { ApplicationPayload } from \"@appsmith/constants/ReduxActionConstants\";\nimport { Colors } from \"constants/Colors\";\nimport { getQueryParams } from \"utils/URLUtils\";\nimport { getGenerateCRUDEnabledPluginMap } from \"selectors/entitiesSelector\";\nimport { GenerateCRUDEnabledPluginMap } from \"api/PluginApi\";\nimport { getIsGeneratePageInitiator } from \"utils/GenerateCrudUtil\";\n\n// This function remove the given key from queryParams and return string\nconst removeQueryParams = (paramKeysToRemove: Array<string>) => {\n  const queryParams = getQueryParams();\n  let queryString = \"\";\n  const queryParamKeys = Object.keys(queryParams);\n  if (queryParamKeys && queryParamKeys.length) {\n    queryParamKeys.map((key) => {\n      if (!paramKeysToRemove.includes(key)) {\n        queryString +=\n          encodeURIComponent(key) + \"=\" + encodeURIComponent(queryParams[key]);\n      }\n    });\n    return \"?\" + queryString;\n  }\n  return \"\";\n};\n\nconst DatasourceHomePage = styled.div`\n  .textBtn {\n    justify-content: center;\n    text-align: center;\n    color: ${Colors.BLACK};\n    font-weight: 400;\n    text-decoration: none !important;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    font-size: 16px;\n    line-height: 24px;\n    letter-spacing: -0.24px;\n    margin: 0;\n  }\n`;\n\nconst DatasourceCardsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 16px;\n  text-align: center;\n  min-width: 150px;\n  border-radius: 4px;\n  align-items: center;\n`;\n\nconst DatasourceCard = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 64px;\n  &:hover {\n    background: ${Colors.GREY_1};\n    cursor: pointer;\n  }\n\n  .dataSourceImageWrapper {\n    width: 48px;\n    height: 48px;\n    border-radius: 50%;\n    background: ${Colors.GREY_2};\n    display: flex;\n    align-items: center;\n    .dataSourceImage {\n      height: 28px;\n      width: auto;\n      margin: 0 auto;\n      max-width: 100%;\n    }\n  }\n\n  .cta {\n    display: none;\n    margin-right: 32px;\n  }\n\n  &:hover {\n    .cta {\n      display: flex;\n    }\n  }\n`;\n\nconst DatasourceContentWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 13px;\n  padding-left: 13.5px;\n`;\n\ninterface DatasourceHomeScreenProps {\n  pageId: string;\n  location: {\n    search: string;\n  };\n  history: {\n    replace: (data: string) => void;\n    push: (data: string) => void;\n  };\n  showUnsupportedPluginDialog: (callback: any) => void;\n}\n\ninterface ReduxDispatchProps {\n  initializeForm: (data: Record<string, any>) => void;\n  createDatasource: (data: any) => void;\n  createTempDatasource: (data: any) => void;\n}\n\ninterface ReduxStateProps {\n  plugins: Plugin[];\n  currentApplication?: ApplicationPayload;\n  pluginImages: Record<string, string>;\n  isSaving: boolean;\n  generateCRUDSupportedPlugin: GenerateCRUDEnabledPluginMap;\n}\n\ntype Props = ReduxStateProps & DatasourceHomeScreenProps & ReduxDispatchProps;\n\nclass DatasourceHomeScreen extends React.Component<Props> {\n  goToCreateDatasource = (\n    pluginId: string,\n    pluginName: string,\n    params?: any,\n  ) => {\n    const {\n      currentApplication,\n      generateCRUDSupportedPlugin,\n      history,\n      showUnsupportedPluginDialog,\n    } = this.props;\n\n    const isGeneratePageInitiator = getIsGeneratePageInitiator();\n\n    /* When isGeneratePageMode is generate page (i.e., Navigating from generate-page) before creating datasource check is it supported datasource for generate template from db?\n        If YES => continue creating datasource\n        If NO =>\n          Show user a UnsupportedPluginDialog to choose\n            1. \"create unsupported datasource\"\n            2. \"continue\" generate page flow by selecting other supported datasource\n        goToCreateDatasource function is passed as a callback with params.skipValidPluginCheck = true.\n        Whenever user click on \"continue\" in UnsupportedPluginDialog, this callback function is invoked.\n    */\n    if (isGeneratePageInitiator && !params?.skipValidPluginCheck) {\n      AnalyticsUtil.logEvent(\"GEN_CRUD_PAGE_DATA_SOURCE_CLICK\", {\n        appName: currentApplication?.name,\n        plugin: pluginName,\n        packageName: params?.packageName,\n      });\n      if (!generateCRUDSupportedPlugin[pluginId]) {\n        // show modal informing user that this will break the generate flow.\n        showUnsupportedPluginDialog(() => {\n          const URL =\n            window.location.pathname +\n            removeQueryParams([\"isGeneratePageMode\"]);\n          history.replace(URL);\n          this.goToCreateDatasource(pluginId, pluginName, {\n            skipValidPluginCheck: true,\n          });\n        });\n        return;\n      }\n    }\n\n    this.props.createTempDatasource({\n      pluginId,\n    });\n  };\n\n  render() {\n    const { currentApplication, pluginImages, plugins } = this.props;\n\n    return (\n      <DatasourceHomePage>\n        <DatasourceCardsContainer data-testid=\"database-datasource-card-container\">\n          {plugins.map((plugin, idx) => {\n            return (\n              <DatasourceCard\n                data-testid=\"database-datasource-card\"\n                key={`${plugin.id}_${idx}`}\n                onClick={() => {\n                  AnalyticsUtil.logEvent(\"CREATE_DATA_SOURCE_CLICK\", {\n                    appName: currentApplication?.name,\n                    pluginName: plugin.name,\n                    pluginPackageName: plugin.packageName,\n                  });\n                  this.goToCreateDatasource(plugin.id, plugin.name, {\n                    packageName: plugin.packageName,\n                  });\n                }}\n              >\n                <DatasourceContentWrapper data-testid=\"database-datasource-content-wrapper\">\n                  <div className=\"dataSourceImageWrapper\">\n                    <img\n                      alt=\"Datasource\"\n                      className=\"dataSourceImage\"\n                      data-testid=\"database-datasource-image\"\n                      src={pluginImages[plugin.id]}\n                    />\n                  </div>\n                  <p className=\"t--plugin-name textBtn\">{plugin.name}</p>\n                </DatasourceContentWrapper>\n              </DatasourceCard>\n            );\n          })}\n        </DatasourceCardsContainer>\n      </DatasourceHomePage>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState): ReduxStateProps => {\n  const { datasources } = state.entities;\n  return {\n    pluginImages: getPluginImages(state),\n    plugins: getDBPlugins(state),\n    currentApplication: getCurrentApplication(state),\n    isSaving: datasources.loading,\n    generateCRUDSupportedPlugin: getGenerateCRUDEnabledPluginMap(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    initializeForm: (data: Record<string, any>) =>\n      dispatch(initialize(DATASOURCE_DB_FORM, data)),\n    createDatasource: (data: any) => dispatch(createDatasourceFromForm(data)),\n    createTempDatasource: (data: any) =>\n      dispatch(createTempDatasourceFromForm(data)),\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(DatasourceHomeScreen);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport DataSourceHome from \"./DatasourceHome\";\n\nconst QueryHomePage = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 8px;\n  .sectionHeader {\n    font-weight: ${(props) => props.theme.fontWeights[2]};\n    font-size: ${(props) => props.theme.fontSizes[4]}px;\n    margin-top: 10px;\n  }\n`;\n\ntype QueryHomeScreenProps = {\n  pageId: string;\n  isCreating: boolean;\n  location: {\n    search: string;\n  };\n  history: {\n    replace: (data: string) => void;\n    push: (data: string) => void;\n  };\n  showUnsupportedPluginDialog: (callback: any) => void;\n};\n\nclass QueryHomeScreen extends React.Component<QueryHomeScreenProps> {\n  render() {\n    const {\n      history,\n      location,\n      pageId,\n      showUnsupportedPluginDialog,\n    } = this.props;\n\n    return (\n      <QueryHomePage>\n        <DataSourceHome\n          history={history}\n          location={location}\n          pageId={pageId}\n          showUnsupportedPluginDialog={showUnsupportedPluginDialog}\n        />\n      </QueryHomePage>\n    );\n  }\n}\n\nexport default QueryHomeScreen;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\nimport { Collapse, Icon } from \"@blueprintjs/core\";\n\nconst CollapseWrapper = styled.div`\n  position: relative;\n  .collapse-title {\n    color: ${Colors.GRAY_700};\n    letter-spacing: 0.04em;\n    text-transform: uppercase;\n    font-weight: 500;\n    font-size: 12px;\n    line-height: 16px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    cursor: pointer;\n    /* justify-content: space-between; */\n    .icon {\n      transition: transform 0.3s;\n      cursor: pointer;\n      &.collapse {\n        transform: rotate(-90deg);\n      }\n    }\n  }\n  && .bp3-collapse-body {\n    position: relative;\n    border: none;\n    box-shadow: none;\n    padding: 0;\n  }\n`;\n\nfunction CollapseComponent(props: {\n  children?: React.ReactNode;\n  title?: string;\n  isOpen?: boolean;\n  titleStyle?: React.CSSProperties;\n}) {\n  const [open, toggleOpen] = React.useState(false);\n  const handleIsOpen = () => {\n    toggleOpen(!open);\n  };\n  if (!props.title) {\n    return <div>{props.children ? props.children : null}</div>;\n  }\n  return (\n    <CollapseWrapper>\n      <div\n        className=\"collapse-title\"\n        data-testid=\"datasource-collapse-wrapper\"\n        onClick={handleIsOpen}\n        style={props.titleStyle}\n      >\n        {props.title}\n        <Icon\n          className={`icon ${open ? \"collapse\" : \"\"}`}\n          color=\"#4B4848\"\n          data-testid=\"datasource-collapse-icon\"\n          icon=\"arrow-right\"\n          iconSize={12}\n        />\n      </div>\n      <Collapse isOpen={open} keepChildrenMounted>\n        <div className=\"inner-content\">\n          {props.children ? props.children : null}\n        </div>\n      </Collapse>\n    </CollapseWrapper>\n  );\n}\n\nexport default CollapseComponent;\n","import { Datasource } from \"entities/Datasource\";\nimport { isStoredDatasource, PluginType } from \"entities/Action\";\nimport React, { memo, useCallback, useEffect, useState } from \"react\";\nimport { isNil } from \"lodash\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Colors } from \"constants/Colors\";\nimport CollapseComponent from \"components/utils/CollapseComponent\";\nimport {\n  getPluginImages,\n  getActionsForCurrentPage,\n} from \"selectors/entitiesSelector\";\nimport styled from \"styled-components\";\nimport { AppState } from \"@appsmith/reducers\";\nimport history from \"utils/history\";\nimport { Position } from \"@blueprintjs/core/lib/esm/common/position\";\nimport RenderDatasourceInformation from \"pages/Editor/DataSourceEditor/DatasourceSection\";\nimport { getQueryParams } from \"utils/URLUtils\";\nimport {\n  Button,\n  Category,\n  Icon,\n  IconSize,\n  Menu,\n  MenuItem,\n} from \"design-system-old\";\nimport { deleteDatasource } from \"actions/datasourceActions\";\nimport { getGenerateCRUDEnabledPluginMap } from \"selectors/entitiesSelector\";\nimport { GenerateCRUDEnabledPluginMap, Plugin } from \"api/PluginApi\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport NewActionButton from \"../DataSourceEditor/NewActionButton\";\nimport {\n  datasourcesEditorIdURL,\n  generateTemplateFormURL,\n  saasEditorDatasourceIdURL,\n} from \"RouteBuilder\";\nimport {\n  CONTEXT_DELETE,\n  CONFIRM_CONTEXT_DELETE,\n  createMessage,\n  CONFIRM_CONTEXT_DELETING,\n  GENERATE_NEW_PAGE_BUTTON_TEXT,\n  RECONNECT_BUTTON_TEXT,\n} from \"@appsmith/constants/messages\";\nimport { isDatasourceAuthorizedForQueryCreation } from \"utils/editorContextUtils\";\nimport {\n  getCurrentPageId,\n  getPagePermissions,\n} from \"selectors/editorSelectors\";\nimport {\n  hasCreateDatasourceActionPermission,\n  hasDeleteDatasourcePermission,\n  hasManageDatasourcePermission,\n} from \"@appsmith/utils/permissionHelpers\";\n\nconst Wrapper = styled.div`\n  padding: 15px;\n  /* margin-top: 18px; */\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${Colors.GREY_1};\n\n    .bp3-collapse-body {\n      background-color: ${Colors.GREY_1};\n    }\n  }\n`;\n\nconst DatasourceCardMainBody = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  width: 100%;\n`;\n\nconst MenuComponent = styled(Menu)`\n  flex: 0;\n`;\n\nconst MenuWrapper = styled.div`\n  display: flex;\n  margin: 8px 0px;\n`;\n\nconst DatasourceImage = styled.img`\n  height: 18px;\n  width: auto;\n  margin: 0 auto;\n  max-width: 100%;\n`;\n\nconst DatasourceIconWrapper = styled.div`\n  width: 34px;\n  height: 34px;\n  border-radius: 50%;\n  background: ${Colors.GREY_2};\n  display: flex;\n  align-items: center;\n`;\n\nconst GenerateTemplateOrReconnect = styled(Button)`\n  padding: 10px 10px;\n  font-size: 12px;\n\n  &&&& {\n    height: 36px;\n    max-width: 200px;\n    border: 1px solid ${Colors.HIT_GRAY};\n    width: auto;\n  }\n`;\n\nconst DatasourceName = styled.span`\n  color: ${Colors.BLACK};\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 24px;\n  letter-spacing: -0.24px;\n`;\n\nconst DatasourceCardHeader = styled.div`\n  flex: 1;\n  justify-content: space-between;\n  display: flex;\n  cursor: pointer;\n`;\n\nconst DatasourceNameWrapper = styled.div`\n  flex-direction: row;\n  align-items: center;\n  display: flex;\n  gap: 13px;\n`;\n\nconst DatasourceInfo = styled.div`\n  padding: 0 10px;\n`;\n\nconst Queries = styled.div`\n  color: ${Colors.DOVE_GRAY};\n  font-size: 14px;\n  display: flex;\n  margin: 4px 0;\n`;\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n`;\n\nconst MoreOptionsContainer = styled.div`\n  width: 22px;\n  height: 22px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst CollapseComponentWrapper = styled.div`\n  display: flex;\n  width: fit-content;\n`;\n\nconst RedMenuItem = styled(MenuItem)`\n  &&,\n  && .cs-text {\n    color: ${Colors.DANGER_SOLID};\n  }\n\n  &&,\n  &&:hover {\n    svg,\n    svg path {\n      fill: ${Colors.DANGER_SOLID};\n    }\n  }\n`;\n\ntype DatasourceCardProps = {\n  datasource: Datasource;\n  plugin: Plugin;\n};\n\nfunction DatasourceCard(props: DatasourceCardProps) {\n  const dispatch = useDispatch();\n  const pluginImages = useSelector(getPluginImages);\n\n  const generateCRUDSupportedPlugin: GenerateCRUDEnabledPluginMap = useSelector(\n    getGenerateCRUDEnabledPluginMap,\n  );\n  const { datasource, plugin } = props;\n  const supportTemplateGeneration = !!generateCRUDSupportedPlugin[\n    datasource.pluginId\n  ];\n\n  const pageId = useSelector(getCurrentPageId);\n\n  const datasourceFormConfigs = useSelector(\n    (state: AppState) => state.entities.plugins.formConfigs,\n  );\n  const queryActions = useSelector(getActionsForCurrentPage);\n  const queriesWithThisDatasource = queryActions.filter(\n    (action) =>\n      isStoredDatasource(action.config.datasource) &&\n      action.config.datasource.id === datasource.id,\n  ).length;\n\n  const datasourcePermissions = datasource?.userPermissions || [];\n\n  const pagePermissions = useSelector(getPagePermissions);\n\n  const canCreateDatasourceActions = hasCreateDatasourceActionPermission([\n    ...datasourcePermissions,\n    ...pagePermissions,\n  ]);\n\n  const canEditDatasource = hasManageDatasourcePermission(\n    datasourcePermissions,\n  );\n\n  const canDeleteDatasource = hasDeleteDatasourcePermission(\n    datasourcePermissions,\n  );\n\n  const [confirmDelete, setConfirmDelete] = useState(false);\n\n  const isDeletingDatasource = !!datasource.isDeleting;\n\n  useEffect(() => {\n    if (confirmDelete && !isDeletingDatasource) {\n      setConfirmDelete(false);\n    }\n  }, [isDeletingDatasource]);\n\n  const currentFormConfig: Array<any> =\n    datasourceFormConfigs[datasource?.pluginId ?? \"\"];\n  const QUERY = queriesWithThisDatasource > 1 ? \"queries\" : \"query\";\n\n  const editDatasource = useCallback(() => {\n    AnalyticsUtil.logEvent(\"DATASOURCE_CARD_EDIT_ACTION\");\n    if (plugin && plugin.type === PluginType.SAAS) {\n      history.push(\n        saasEditorDatasourceIdURL({\n          pageId,\n          pluginPackageName: plugin.packageName,\n          datasourceId: datasource.id,\n          params: {\n            from: \"datasources\",\n            viewMode: \"false\",\n            ...getQueryParams(),\n          },\n        }),\n      );\n    } else {\n      history.push(\n        datasourcesEditorIdURL({\n          pageId,\n          datasourceId: datasource.id,\n          params: {\n            from: \"datasources\",\n            viewMode: \"false\",\n            ...getQueryParams(),\n          },\n        }),\n      );\n    }\n  }, [datasource.id, plugin]);\n\n  const routeToGeneratePage = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    if (!supportTemplateGeneration) {\n      // disable button when it doesn't support page generation\n      return;\n    }\n    AnalyticsUtil.logEvent(\"DATASOURCE_CARD_GEN_CRUD_PAGE_ACTION\");\n    history.push(\n      generateTemplateFormURL({\n        pageId,\n        params: {\n          datasourceId: datasource.id,\n          new_page: true,\n        },\n      }),\n    );\n  };\n\n  const deleteAction = () => {\n    if (isDeletingDatasource) return;\n    AnalyticsUtil.logEvent(\"DATASOURCE_CARD_DELETE_ACTION\");\n    dispatch(deleteDatasource({ id: datasource.id }));\n  };\n\n  return (\n    <Wrapper\n      className=\"t--datasource\"\n      key={datasource.id}\n      onClick={editDatasource}\n    >\n      <DatasourceCardMainBody>\n        <DatasourceCardHeader className=\"t--datasource-name\">\n          <div style={{ flex: 1 }}>\n            <DatasourceNameWrapper>\n              <DatasourceIconWrapper data-testid=\"active-datasource-icon-wrapper\">\n                <DatasourceImage\n                  alt=\"Datasource\"\n                  data-testid=\"active-datasource-image\"\n                  src={pluginImages[datasource.pluginId]}\n                />\n              </DatasourceIconWrapper>\n              <DatasourceName data-testid=\"active-datasource-name\">\n                {datasource.name}\n              </DatasourceName>\n            </DatasourceNameWrapper>\n            <Queries\n              className={`t--queries-for-${plugin.type}`}\n              data-testid=\"active-datasource-queries\"\n            >\n              {queriesWithThisDatasource\n                ? `${queriesWithThisDatasource} ${QUERY} on this page`\n                : \"No query in this application is using this datasource\"}\n            </Queries>\n          </div>\n          <ButtonsWrapper className=\"action-wrapper\">\n            {(!datasource.isConfigured || supportTemplateGeneration) &&\n              isDatasourceAuthorizedForQueryCreation(datasource, plugin) && (\n                <GenerateTemplateOrReconnect\n                  category={Category.secondary}\n                  className={\n                    datasource.isConfigured\n                      ? \"t--generate-template\"\n                      : \"t--reconnect-btn\"\n                  }\n                  onClick={\n                    datasource.isConfigured\n                      ? routeToGeneratePage\n                      : editDatasource\n                  }\n                  text={\n                    datasource.isConfigured\n                      ? createMessage(GENERATE_NEW_PAGE_BUTTON_TEXT)\n                      : createMessage(RECONNECT_BUTTON_TEXT)\n                  }\n                />\n              )}\n            {datasource.isConfigured && (\n              <NewActionButton\n                datasource={datasource}\n                disabled={\n                  !canCreateDatasourceActions ||\n                  !isDatasourceAuthorizedForQueryCreation(datasource, plugin)\n                }\n                eventFrom=\"active-datasources\"\n                plugin={plugin}\n              />\n            )}\n            {(canDeleteDatasource || canEditDatasource) && (\n              <MenuWrapper\n                className=\"t--datasource-menu-option\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                }}\n              >\n                <MenuComponent\n                  menuItemWrapperWidth=\"160px\"\n                  position={Position.BOTTOM_RIGHT}\n                  target={\n                    <MoreOptionsContainer>\n                      <Icon\n                        fillColor={\n                          datasource.isConfigured ? Colors.GREY_8 : Colors.GRAY2\n                        }\n                        name=\"comment-context-menu\"\n                        size={IconSize.XXXL}\n                      />\n                    </MoreOptionsContainer>\n                  }\n                >\n                  {canEditDatasource && (\n                    <MenuItem\n                      className=\"t--datasource-option-edit\"\n                      icon=\"edit\"\n                      onSelect={editDatasource}\n                      text=\"Edit\"\n                    />\n                  )}\n                  {canDeleteDatasource && (\n                    <RedMenuItem\n                      className=\"t--datasource-option-delete\"\n                      icon=\"delete\"\n                      isLoading={isDeletingDatasource}\n                      onSelect={() => {\n                        if (!isDeletingDatasource) {\n                          confirmDelete\n                            ? deleteAction()\n                            : setConfirmDelete(true);\n                        }\n                      }}\n                      text={\n                        isDeletingDatasource\n                          ? createMessage(CONFIRM_CONTEXT_DELETING)\n                          : confirmDelete\n                          ? createMessage(CONFIRM_CONTEXT_DELETE)\n                          : createMessage(CONTEXT_DELETE)\n                      }\n                    />\n                  )}\n                </MenuComponent>\n              </MenuWrapper>\n            )}\n          </ButtonsWrapper>\n        </DatasourceCardHeader>\n      </DatasourceCardMainBody>\n      {!isNil(currentFormConfig) && (\n        <CollapseComponentWrapper\n          onClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <CollapseComponent title=\"Show More\" titleStyle={{ maxWidth: 120 }}>\n            <DatasourceInfo>\n              <RenderDatasourceInformation\n                config={currentFormConfig[0]}\n                datasource={datasource}\n              />\n            </DatasourceInfo>\n          </CollapseComponent>\n        </CollapseComponentWrapper>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default memo(DatasourceCard);\n","import React, { useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { Datasource } from \"entities/Datasource\";\nimport DatasourceCard from \"./DatasourceCard\";\nimport { Button, Category, Size, Text, TextType } from \"design-system-old\";\nimport { thinScrollbar } from \"constants/DefaultTheme\";\nimport { keyBy } from \"lodash\";\nimport {\n  createMessage,\n  EMPTY_ACTIVE_DATA_SOURCES,\n} from \"@appsmith/constants/messages\";\nimport { hasCreateDatasourcePermission } from \"@appsmith/utils/permissionHelpers\";\nimport { getCurrentAppWorkspace } from \"@appsmith/selectors/workspaceSelectors\";\n\nconst QueryHomePage = styled.div`\n  ${thinScrollbar};\n  overflow: auto;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n\n  .sectionHeader {\n    font-weight: ${(props) => props.theme.fontWeights[2]};\n    font-size: ${(props) => props.theme.fontSizes[4]}px;\n    margin-top: 10px;\n  }\n`;\n\nconst CreateButton = styled(Button)`\n  display: inline;\n  padding: 4px 8px;\n`;\n\nconst EmptyActiveDatasource = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\ntype ActiveDataSourcesProps = {\n  dataSources: Datasource[];\n  pageId: string;\n  location: {\n    search: string;\n  };\n  history: {\n    replace: (data: string) => void;\n    push: (data: string) => void;\n  };\n  onCreateNew: () => void;\n};\n\nfunction ActiveDataSources(props: ActiveDataSourcesProps) {\n  const { dataSources } = props;\n  const plugins = useSelector((state: AppState) => {\n    return state.entities.plugins.list;\n  });\n  const pluginGroups = useMemo(() => keyBy(plugins, \"id\"), [plugins]);\n\n  const userWorkspacePermissions = useSelector(\n    (state: AppState) => getCurrentAppWorkspace(state).userPermissions ?? [],\n  );\n\n  const canCreateDatasource = hasCreateDatasourcePermission(\n    userWorkspacePermissions,\n  );\n\n  if (dataSources.length === 0) {\n    return (\n      <EmptyActiveDatasource>\n        <Text cypressSelector=\"t--empty-datasource-list\" type={TextType.H3}>\n          {createMessage(EMPTY_ACTIVE_DATA_SOURCES)}&nbsp;\n          <CreateButton\n            category={Category.primary}\n            disabled={!canCreateDatasource}\n            onClick={props.onCreateNew}\n            size={Size.medium}\n            tag=\"button\"\n            text=\"Create New\"\n          />\n        </Text>\n      </EmptyActiveDatasource>\n    );\n  }\n\n  return (\n    <QueryHomePage className=\"t--active-datasource-list\">\n      {dataSources.map((datasource, idx) => {\n        return (\n          <DatasourceCard\n            datasource={datasource}\n            key={`${datasource.id}_${idx}`}\n            plugin={pluginGroups[datasource.pluginId]}\n          />\n        );\n      })}\n    </QueryHomePage>\n  );\n}\n\nexport default ActiveDataSources;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { MockDatasource } from \"entities/Datasource\";\nimport { getPluginImages } from \"selectors/entitiesSelector\";\nimport { Colors } from \"constants/Colors\";\nimport { addMockDatasourceToWorkspace } from \"actions/datasourceActions\";\nimport { getCurrentWorkspaceId } from \"@appsmith/selectors/workspaceSelectors\";\nimport { getQueryParams } from \"utils/URLUtils\";\nimport { AppState } from \"@appsmith/reducers\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\n\nconst MockDataSourceWrapper = styled.div`\n  overflow: auto;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 16px;\n  min-width: 150px;\n  border-radius: 4px;\n  align-items: center;\n  margin-top: 8px;\n`;\n\nconst Description = styled.div`\n  color: ${Colors.GREY_8};\n  font-size: 13px;\n  font-weight: 400;\n  line-height: 17px;\n  letter-spacing: -0.24px;\n`;\n\nfunction MockDataSources(props: { mockDatasources: MockDatasource[] }) {\n  const workspaceId = useSelector(getCurrentWorkspaceId);\n  return (\n    <MockDataSourceWrapper className=\"t--mock-datasource-list\">\n      {props.mockDatasources.map((datasource: MockDatasource, idx) => {\n        return (\n          <MockDatasourceCard\n            datasource={datasource}\n            key={`${datasource.name}_${datasource.packageName}_${idx}`}\n            workspaceId={workspaceId}\n          />\n        );\n      })}\n    </MockDataSourceWrapper>\n  );\n}\n\nexport default MockDataSources;\n\nconst CardWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: 64px;\n  &:hover {\n    background-color: ${Colors.GREY_1};\n    cursor: pointer;\n  }\n  }\n`;\n\nconst DatasourceImage = styled.img`\n  height: 28px;\n  width: auto;\n  margin: 0 auto;\n  max-width: 100%;\n`;\n\nconst DatasourceName = styled.span`\n  font-size: 16px;\n  font-weight: 400;\n  line-height: 24px;\n  letter-spacing: -0.24px;\n  color: ${Colors.BLACK};\n`;\n\nconst DatasourceCardHeader = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 13px;\n  padding-left: 13.5px;\n`;\n\nconst DatasourceIconWrapper = styled.div`\n  width: 48px;\n  height: 48px;\n  border-radius: 50%;\n  background: ${Colors.GREY_2};\n  display: flex;\n  align-items: center;\n`;\n\nconst DatasourceNameWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\ntype MockDatasourceCardProps = {\n  datasource: MockDatasource;\n  workspaceId: string;\n};\n\nfunction MockDatasourceCard(props: MockDatasourceCardProps) {\n  const { datasource, workspaceId } = props;\n  const dispatch = useDispatch();\n  const pluginImages = useSelector(getPluginImages);\n  const plugins = useSelector((state: AppState) => {\n    return state.entities.plugins.list;\n  });\n  const currentPlugin = plugins.find(\n    (eachPlugin) => eachPlugin.packageName === datasource.packageName,\n  );\n  if (!currentPlugin) {\n    return null;\n  }\n\n  const addMockDataSource = () => {\n    AnalyticsUtil.logEvent(\"ADD_MOCK_DATASOURCE_CLICK\", {\n      datasourceName: datasource.name,\n      workspaceId,\n      packageName: currentPlugin.packageName,\n      pluginName: currentPlugin.name,\n    });\n    AnalyticsUtil.logEvent(\"CREATE_DATA_SOURCE_CLICK\", {\n      mockDatasourceName: datasource.name,\n      pluginName: currentPlugin.name,\n      pluginPackageName: currentPlugin.packageName,\n    });\n    const queryParams = getQueryParams();\n    dispatch(\n      addMockDatasourceToWorkspace(\n        datasource.name,\n        workspaceId,\n        currentPlugin.id,\n        currentPlugin.packageName,\n        queryParams.isGeneratePageMode,\n      ),\n    );\n  };\n\n  return (\n    <CardWrapper className=\"t--mock-datasource\" onClick={addMockDataSource}>\n      <DatasourceCardHeader className=\"t--datasource-name\">\n        <DatasourceIconWrapper data-testid=\"mock-datasource-icon-wrapper\">\n          <DatasourceImage\n            alt=\"Datasource\"\n            data-testid=\"mock-datasource-image\"\n            src={pluginImages[currentPlugin.id]}\n          />\n        </DatasourceIconWrapper>\n        <DatasourceNameWrapper data-testid=\"mock-datasource-name-wrapper\">\n          <DatasourceName data-testid=\"mockdatasource-name\">\n            {datasource.name}\n          </DatasourceName>\n          <Description data-testid=\"mockdatasource-description\">\n            {datasource.description}\n          </Description>\n        </DatasourceNameWrapper>\n      </DatasourceCardHeader>\n    </CardWrapper>\n  );\n}\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgSecure(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 21,\n    height: 25,\n    fill: \"none\",\n    viewBox: \"0 0 21 25\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#03B365\",\n    d: \"M10.2969 24.5156C10.5195 24.5156 10.8359 24.4219 11.1406 24.2695C17.8906 20.8477 20.1641 18.9727 20.1641 14.7773V6.16406C20.1641 4.65234 19.625 4.05469 18.3242 3.50391C17.1055 3 12.8867 1.53516 11.7266 1.16016C11.2812 1.01953 10.7422 0.925781 10.2969 0.925781C9.83984 0.925781 9.3125 1.03125 8.86719 1.16016C7.69531 1.52344 3.47656 3.01172 2.25781 3.50391C0.957031 4.04297 0.417969 4.65234 0.417969 6.16406V14.7773C0.417969 18.9727 2.77344 20.707 9.45312 24.2695C9.75781 24.4336 10.0742 24.5156 10.2969 24.5156ZM8.99609 17.9766C8.50391 17.9766 8.12891 17.7539 7.77734 17.3203L4.96484 13.9336C4.71875 13.6406 4.61328 13.3594 4.61328 13.0312C4.61328 12.375 5.14062 11.8359 5.80859 11.8359C6.19531 11.8359 6.5 11.9883 6.80469 12.375L8.96094 15.0469L13.6719 7.55859C13.9531 7.10156 14.3047 6.87891 14.7148 6.87891C15.3711 6.87891 15.957 7.33594 15.957 8.00391C15.957 8.28516 15.8281 8.60156 15.6406 8.88281L10.168 17.3086C9.88672 17.7422 9.46484 17.9766 8.99609 17.9766Z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSecure);\nexport default __webpack_public_path__ + \"static/media/secure.4cd3a19bf3462bd8edd166fd246ad8fa.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport styled from \"styled-components\";\nimport Secure from \"assets/images/secure.svg\";\nimport AppsmithDatasource from \"assets/images/appsmith-datasource.png\";\nimport { Colors } from \"constants/Colors\";\n\nconst Wrapper = styled.div`\n  border: 2px solid #d6d6d6;\n  padding: 16px 23px;\n  flex-direction: row;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  .datasource-img {\n    height: 128px;\n  }\n`;\n\nconst HeadWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  & > img {\n    margin-right: 10px;\n  }\n`;\n\nconst Header = styled.div`\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 32px;\n  color: ${Colors.OXFORD_BLUE};\n`;\n\nconst Content = styled.p`\n  margin-top: 8px;\n  color: ${Colors.OXFORD_BLUE};\n  max-width: 360px;\n  font-size: 14px;\n  line-height: 20px;\n`;\n\nfunction AddDatasourceSecurely() {\n  return (\n    <Wrapper>\n      <div>\n        <HeadWrapper>\n          <img src={Secure} />\n          <Header>Secure & fast database connection</Header>\n        </HeadWrapper>\n        <Content>\n          Connect your database to start building read/write workflows. Your\n          Passwords are fully encrypted and we never store any of your data.\n          That’s a promise.\n        </Content>\n      </div>\n      <img className=\"datasource-img\" src={AppsmithDatasource} />\n    </Wrapper>\n  );\n}\n\nexport default AddDatasourceSecurely;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Icon } from \"@blueprintjs/core\";\nimport { Text, TextType } from \"design-system-old\";\nimport { useHistory } from \"react-router-dom\";\nimport { getIsGeneratePageInitiator } from \"utils/GenerateCrudUtil\";\nimport { Colors } from \"constants/Colors\";\nimport { builderURL, generateTemplateFormURL } from \"RouteBuilder\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { useSelector } from \"react-redux\";\nimport { getCurrentPageId } from \"selectors/editorSelectors\";\n\nconst Back = styled.span`\n  height: 30px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  padding-left: 16px;\n`;\n\nfunction BackButton() {\n  const history = useHistory();\n  const pageId = useSelector(getCurrentPageId);\n  const goBack = () => {\n    const isGeneratePageInitiator = getIsGeneratePageInitiator();\n    const redirectURL = isGeneratePageInitiator\n      ? generateTemplateFormURL({ pageId })\n      : builderURL({ pageId });\n\n    AnalyticsUtil.logEvent(\"BACK_BUTTON_CLICK\", {\n      type: \"BACK_BUTTON\",\n      fromUrl: location.pathname,\n      toUrl: redirectURL,\n    });\n    history.push(redirectURL);\n  };\n  return (\n    <Back className=\"t--back-button\" onClick={goBack}>\n      <Icon icon=\"chevron-left\" iconSize={16} />\n      <Text\n        style={{ color: Colors.DIESEL, lineHeight: \"14px\" }}\n        type={TextType.P1}\n      >\n        Back\n      </Text>\n    </Back>\n  );\n}\n\nexport default BackButton;\n","import React from \"react\";\nimport { HelpIcons } from \"icons/HelpIcons\";\nimport styled, { useTheme } from \"styled-components\";\nimport { Color } from \"constants/Colors\";\nimport {\n  Button,\n  Category,\n  DialogComponent as Dialog,\n  Icon,\n  IconSize,\n  Size,\n  Text,\n  TextType,\n} from \"design-system-old\";\nimport { IconProps } from \"constants/IconConstants\";\nimport { UNSUPPORTED_PLUGIN_DIALOG_MAIN_HEADING } from \"@appsmith/constants/messages\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport {\n  UNSUPPORTED_PLUGIN_DIALOG_TITLE,\n  UNSUPPORTED_PLUGIN_DIALOG_SUBTITLE,\n} from \"@appsmith/constants/messages\";\nimport { Theme } from \"constants/DefaultTheme\";\n\ntype Props = {\n  isModalOpen: boolean;\n  onClose: () => void;\n  onContinue: () => void;\n};\n\nconst HeaderContents = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: ${(props) => props.theme.spaces[7]}px;\n`;\n\nconst Heading = styled.div`\n  color: ${(props) => props.theme.colors.modal.headerText};\n  display: flex;\n  justify-content: center;\n  font-weight: ${(props) => props.theme.typography.h1.fontWeight};\n  font-size: ${(props) => props.theme.typography.h1.fontSize}px;\n  line-height: ${(props) => props.theme.typography.h1.lineHeight}px;\n  letter-spacing: ${(props) => props.theme.typography.h1.letterSpacing};\n`;\n\nconst HeaderRight = styled.div`\n  display: flex;\n`;\n\nconst CloseIconContainer = styled.div`\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n  &:hover {\n    background-color: ${(props) => props.theme.colors.modal.hoverState};\n  }\n`;\n\nconst ActionButtonWrapper = styled.div`\n  display: flex;\n  margin: 30px 0px 0px;\n`;\n\nexport const StyledSeparator = styled.div`\n  width: 100%;\n  background-color: ${(props) => props.theme.colors.modal.separator};\n  opacity: 0.6;\n  height: 1px;\n`;\n\nconst StyledIcon = styled(Icon)<IconProps>`\n  margin: 0px 8px;\n  svg {\n    .triangle {\n      fill: #efa903;\n    }\n    .symbol {\n      fill: #ffffff;\n    }\n  }\n  &:hover {\n    .triangle {\n      fill: #efa903;\n    }\n    .symbol {\n      fill: #ffffff;\n    }\n  }\n`;\n\nconst ActionButton = styled(Button)`\n  margin-right: 16px;\n`;\n\nconst Content = styled.div`\n  margin: 8px 0px;\n`;\n\nconst CloseIcon = HelpIcons.CLOSE_ICON;\n\nconst Header = ({ onClose }: { onClose: () => void }) => {\n  const theme = useTheme() as Theme;\n\n  return (\n    <>\n      <HeaderContents>\n        <Heading>\n          <StyledIcon\n            className=\"default_cursor\"\n            clickable={false}\n            name=\"warning-triangle\"\n            size={IconSize.XL}\n          />\n          {UNSUPPORTED_PLUGIN_DIALOG_MAIN_HEADING()}\n        </Heading>\n        <HeaderRight>\n          <CloseIconContainer\n            data-cy=\"t--product-updates-close-btn\"\n            onClick={onClose}\n          >\n            <CloseIcon\n              color={theme.colors.text.normal as Color}\n              height={20}\n              width={20}\n            />\n          </CloseIconContainer>\n        </HeaderRight>\n      </HeaderContents>\n      <div>\n        <StyledSeparator />\n      </div>\n    </>\n  );\n};\n\n// Unsupported Plugin for gen CRUD page\nfunction UnsupportedPluginDialog(props: Props) {\n  const { isModalOpen, onContinue } = props;\n  const handleClose = () => {\n    props.onClose();\n  };\n\n  return (\n    <Dialog\n      canEscapeKeyClose\n      canOutsideClickClose\n      getHeader={() => <Header onClose={props.onClose} />}\n      isOpen={isModalOpen}\n      setModalClose={handleClose}\n    >\n      <Content>\n        <Text type={TextType.H5}>{UNSUPPORTED_PLUGIN_DIALOG_TITLE()}</Text>\n        <br />\n        <br />\n        <Text type={TextType.P1}>{UNSUPPORTED_PLUGIN_DIALOG_SUBTITLE()}</Text>\n      </Content>\n\n      <ActionButtonWrapper>\n        <ActionButton\n          category={Category.secondary}\n          onClick={() => {\n            AnalyticsUtil.logEvent(\"UNSUPPORTED_PLUGIN_DIALOG_BACK_ACTION\");\n            handleClose();\n          }}\n          size={Size.medium}\n          text=\"BACK\"\n        />\n        <ActionButton\n          category={Category.primary}\n          onClick={() => {\n            handleClose();\n            AnalyticsUtil.logEvent(\"UNSUPPORTED_PLUGIN_DIALOG_CONTINUE_ACTION\");\n            onContinue();\n          }}\n          size={Size.medium}\n          text=\"CONTINUE BUILDING\"\n        />\n      </ActionButtonWrapper>\n    </Dialog>\n  );\n}\n\nexport default UnsupportedPluginDialog;\n","import React, { useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, InjectedFormProps } from \"redux-form\";\nimport styled from \"styled-components\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { API_HOME_SCREEN_FORM } from \"@appsmith/constants/forms\";\nimport { Colors } from \"constants/Colors\";\nimport NewApiScreen from \"./NewApi\";\nimport NewQueryScreen from \"./NewQuery\";\nimport ActiveDataSources from \"./ActiveDataSources\";\nimport MockDataSources from \"./MockDataSources\";\nimport AddDatasourceSecurely from \"./AddDatasourceSecurely\";\nimport { getDatasources, getMockDatasources } from \"selectors/entitiesSelector\";\nimport { Datasource, MockDatasource } from \"entities/Datasource\";\nimport {\n  IconSize,\n  TabComponent,\n  TabProp,\n  Text,\n  TextType,\n} from \"design-system-old\";\nimport scrollIntoView from \"scroll-into-view-if-needed\";\nimport { INTEGRATION_TABS, INTEGRATION_EDITOR_MODES } from \"constants/routes\";\nimport { thinScrollbar } from \"constants/DefaultTheme\";\nimport BackButton from \"../DataSourceEditor/BackButton\";\nimport UnsupportedPluginDialog from \"./UnsupportedPluginDialog\";\nimport { getQueryParams } from \"utils/URLUtils\";\nimport { getIsGeneratePageInitiator } from \"utils/GenerateCrudUtil\";\nimport { getCurrentApplicationId } from \"selectors/editorSelectors\";\nimport { integrationEditorURL } from \"RouteBuilder\";\nimport { getCurrentAppWorkspace } from \"@appsmith/selectors/workspaceSelectors\";\n\nimport { hasCreateDatasourcePermission } from \"@appsmith/utils/permissionHelpers\";\n\nconst HeaderFlex = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst ApiHomePage = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  font-size: 20px;\n  padding: 20px 20px 0 20px;\n  /* margin-left: 10px; */\n  flex: 1;\n  overflow: hidden !important;\n  .closeBtn {\n    position: absolute;\n    left: 70%;\n  }\n  .bp3-collapse-body {\n    position: absolute;\n    z-index: 99999;\n    background-color: ${Colors.WHITE};\n    border: 1px solid ${Colors.ALTO};\n    box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.1);\n    border-radius: 4px;\n    width: 100%;\n    padding: 20px;\n  }\n  .fontSize16 {\n    font-size: 16px;\n  }\n`;\n\nconst MainTabsContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  .react-tabs__tab-list {\n    margin: 2px;\n  }\n`;\n\nconst SectionGrid = styled.div<{ isActiveTab?: boolean }>`\n  margin-top: 16px;\n  display: grid;\n  grid-template-columns: 1fr ${({ isActiveTab }) => isActiveTab && \"180px\"};\n  grid-template-rows: auto minmax(0, 1fr);\n  gap: 10px 16px;\n  flex: 1;\n  min-height: 0;\n`;\nconst NewIntegrationsContainer = styled.div`\n  ${thinScrollbar};\n  scrollbar-width: thin;\n  overflow: auto;\n  flex: 1;\n  & > div {\n    margin-bottom: 20px;\n  }\n`;\n\ntype IntegrationsHomeScreenProps = {\n  pageId: string;\n  selectedTab: string;\n  location: {\n    search: string;\n    pathname: string;\n  };\n  history: {\n    replace: (data: string) => void;\n    push: (data: string) => void;\n  };\n  isCreating: boolean;\n  dataSources: Datasource[];\n  mockDatasources: MockDatasource[];\n  applicationId: string;\n  canCreateDatasource?: boolean;\n};\n\ntype IntegrationsHomeScreenState = {\n  page: number;\n  activePrimaryMenuId: number;\n  activeSecondaryMenuId: number;\n  unsupportedPluginDialogVisible: boolean;\n};\n\ntype Props = IntegrationsHomeScreenProps &\n  InjectedFormProps<{ category: string }, IntegrationsHomeScreenProps>;\n\nconst PRIMARY_MENU_IDS = {\n  ACTIVE: 0,\n  CREATE_NEW: 1,\n};\n\nconst SECONDARY_MENU: TabProp[] = [\n  {\n    key: \"API\",\n    title: \"API\",\n    panelComponent: <div />,\n  },\n  {\n    key: \"DATABASE\",\n    title: \"Database\",\n    panelComponent: <div />,\n  },\n];\n\nconst getSecondaryMenu = (hasActiveSources: boolean) => {\n  const mockDbMenu = {\n    key: \"MOCK_DATABASE\",\n    title: \"Sample Databases\",\n    panelComponent: <div />,\n  };\n  return hasActiveSources\n    ? [...SECONDARY_MENU, mockDbMenu]\n    : [mockDbMenu, ...SECONDARY_MENU];\n};\n\nconst getSecondaryMenuIds = (hasActiveSources = false) => {\n  return {\n    API: 0 + (hasActiveSources ? 0 : 1),\n    DATABASE: 1 + (hasActiveSources ? 0 : 1),\n    MOCK_DATABASE: 2 - (hasActiveSources ? 0 : 2),\n  };\n};\n\nconst TERTIARY_MENU_IDS = {\n  ACTIVE_CONNECTIONS: 0,\n  MOCK_DATABASE: 1,\n};\n\ninterface MockDataSourcesProps {\n  mockDatasources: MockDatasource[];\n  active: boolean;\n}\n\nfunction UseMockDatasources({ active, mockDatasources }: MockDataSourcesProps) {\n  const useMockRef = useRef<HTMLDivElement>(null);\n  const isMounted = useRef(false);\n  useEffect(() => {\n    if (active && useMockRef.current) {\n      isMounted.current &&\n        scrollIntoView(useMockRef.current, {\n          behavior: \"smooth\",\n          scrollMode: \"always\",\n          block: \"start\",\n          boundary: document.getElementById(\"new-integrations-wrapper\"),\n        });\n    } else {\n      isMounted.current = true;\n    }\n  }, [active]);\n  return (\n    <div id=\"mock-database\" ref={useMockRef}>\n      <Text type={TextType.H2}>Sample Databases</Text>\n      <MockDataSources mockDatasources={mockDatasources} />\n    </div>\n  );\n}\n\nfunction CreateNewAPI({\n  active,\n  history,\n  isCreating,\n  pageId,\n  showUnsupportedPluginDialog,\n}: any) {\n  const newAPIRef = useRef<HTMLDivElement>(null);\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    if (active && newAPIRef.current) {\n      isMounted.current &&\n        scrollIntoView(newAPIRef.current, {\n          behavior: \"smooth\",\n          scrollMode: \"always\",\n          block: \"start\",\n          boundary: document.getElementById(\"new-integrations-wrapper\"),\n        });\n    } else {\n      isMounted.current = true;\n    }\n  }, [active]);\n  return (\n    <div id=\"new-api\" ref={newAPIRef}>\n      <Text type={TextType.H2}>APIs</Text>\n      <NewApiScreen\n        history={history}\n        isCreating={isCreating}\n        location={location}\n        pageId={pageId}\n        showUnsupportedPluginDialog={showUnsupportedPluginDialog}\n      />\n    </div>\n  );\n}\n\nfunction CreateNewDatasource({\n  active,\n  history,\n  isCreating,\n  pageId,\n  showUnsupportedPluginDialog,\n}: any) {\n  const newDatasourceRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (active && newDatasourceRef.current) {\n      scrollIntoView(newDatasourceRef.current, {\n        behavior: \"smooth\",\n        scrollMode: \"always\",\n        block: \"start\",\n        boundary: document.getElementById(\"new-integrations-wrapper\"),\n      });\n    }\n  }, [active]);\n  return (\n    <div id=\"new-datasources\" ref={newDatasourceRef}>\n      <Text type={TextType.H2}>Databases</Text>\n      <NewQueryScreen\n        history={history}\n        isCreating={isCreating}\n        location={location}\n        pageId={pageId}\n        showUnsupportedPluginDialog={showUnsupportedPluginDialog}\n      />\n    </div>\n  );\n}\n\nclass IntegrationsHomeScreen extends React.Component<\n  Props,\n  IntegrationsHomeScreenState\n> {\n  unsupportedPluginContinueAction: () => void;\n\n  constructor(props: Props) {\n    super(props);\n    this.unsupportedPluginContinueAction = () => null;\n    this.state = {\n      page: 1,\n      activePrimaryMenuId: PRIMARY_MENU_IDS.CREATE_NEW,\n      activeSecondaryMenuId: getSecondaryMenuIds(\n        props.mockDatasources.length > 0,\n      ).API,\n      unsupportedPluginDialogVisible: false,\n    };\n  }\n\n  syncActivePrimaryMenu = () => {\n    // on mount/update if syncing the primary active menu.\n    const { selectedTab } = this.props;\n    if (\n      (selectedTab === INTEGRATION_TABS.NEW &&\n        this.state.activePrimaryMenuId !== PRIMARY_MENU_IDS.CREATE_NEW) ||\n      (selectedTab === INTEGRATION_TABS.ACTIVE &&\n        this.state.activePrimaryMenuId !== PRIMARY_MENU_IDS.ACTIVE)\n    ) {\n      this.setState({\n        activePrimaryMenuId:\n          selectedTab === INTEGRATION_TABS.NEW\n            ? PRIMARY_MENU_IDS.CREATE_NEW\n            : PRIMARY_MENU_IDS.ACTIVE,\n      });\n    }\n  };\n\n  componentDidMount() {\n    const { dataSources, history, pageId } = this.props;\n\n    const queryParams = getQueryParams();\n    const redirectMode = queryParams.mode;\n    const isGeneratePageInitiator = getIsGeneratePageInitiator();\n    if (isGeneratePageInitiator) {\n      if (redirectMode === INTEGRATION_EDITOR_MODES.AUTO) {\n        delete queryParams.mode;\n        delete queryParams.from;\n        history.replace(\n          integrationEditorURL({\n            pageId,\n            selectedTab: INTEGRATION_TABS.NEW,\n            params: queryParams,\n          }),\n        );\n      }\n    } else if (\n      dataSources.length > 0 &&\n      redirectMode === INTEGRATION_EDITOR_MODES.AUTO\n    ) {\n      // User will be taken to active tab if there are datasources\n      history.replace(\n        integrationEditorURL({\n          pageId,\n          selectedTab: INTEGRATION_TABS.ACTIVE,\n        }),\n      );\n    } else if (redirectMode === INTEGRATION_EDITOR_MODES.MOCK) {\n      // If there are no datasources -> new user\n      history.replace(\n        integrationEditorURL({\n          pageId,\n          selectedTab: INTEGRATION_TABS.NEW,\n        }),\n      );\n      this.onSelectSecondaryMenu(\n        getSecondaryMenuIds(dataSources.length > 0).MOCK_DATABASE,\n      );\n    } else {\n      this.syncActivePrimaryMenu();\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this.syncActivePrimaryMenu();\n    const { dataSources, history, pageId } = this.props;\n    if (dataSources.length === 0 && prevProps.dataSources.length > 0) {\n      history.replace(\n        integrationEditorURL({\n          pageId,\n          selectedTab: INTEGRATION_TABS.NEW,\n        }),\n      );\n      this.onSelectSecondaryMenu(\n        getSecondaryMenuIds(dataSources.length > 0).MOCK_DATABASE,\n      );\n    }\n  }\n\n  onSelectPrimaryMenu = (activePrimaryMenuId: number) => {\n    const { dataSources, history, pageId } = this.props;\n    if (activePrimaryMenuId === this.state.activePrimaryMenuId) {\n      return;\n    }\n    history.push(\n      integrationEditorURL({\n        pageId,\n        selectedTab:\n          activePrimaryMenuId === PRIMARY_MENU_IDS.ACTIVE\n            ? INTEGRATION_TABS.ACTIVE\n            : INTEGRATION_TABS.NEW,\n      }),\n    );\n    this.setState({\n      activeSecondaryMenuId:\n        activePrimaryMenuId === PRIMARY_MENU_IDS.ACTIVE\n          ? TERTIARY_MENU_IDS.ACTIVE_CONNECTIONS\n          : getSecondaryMenuIds(dataSources.length > 0).API,\n    });\n  };\n\n  onSelectSecondaryMenu = (activeSecondaryMenuId: number) => {\n    this.setState({ activeSecondaryMenuId });\n  };\n\n  showUnsupportedPluginDialog = (callback: () => void) => {\n    this.setState({\n      unsupportedPluginDialogVisible: true,\n    });\n    this.unsupportedPluginContinueAction = callback;\n  };\n\n  render() {\n    const {\n      canCreateDatasource = false,\n      dataSources,\n      history,\n      isCreating,\n      location,\n      pageId,\n    } = this.props;\n    const { unsupportedPluginDialogVisible } = this.state;\n    let currentScreen;\n    const { activePrimaryMenuId, activeSecondaryMenuId } = this.state;\n\n    const PRIMARY_MENU: TabProp[] = [\n      {\n        key: \"ACTIVE\",\n        title: \"Active\",\n        panelComponent: <div />,\n      },\n      ...(canCreateDatasource\n        ? [\n            {\n              key: \"CREATE_NEW\",\n              title: \"Create New\",\n              panelComponent: <div />,\n              icon: \"plus\",\n              iconSize: IconSize.XS,\n            },\n          ]\n        : []),\n    ].filter(Boolean);\n\n    const isGeneratePageInitiator = getIsGeneratePageInitiator();\n    // Avoid user to switch tabs when in generate page flow by hiding the tabs itself.\n    const showTabs = !isGeneratePageInitiator;\n    const mockDataSection =\n      this.props.mockDatasources.length > 0 ? (\n        <UseMockDatasources\n          active={\n            activeSecondaryMenuId ===\n            getSecondaryMenuIds(dataSources.length > 0).MOCK_DATABASE\n          }\n          mockDatasources={this.props.mockDatasources}\n        />\n      ) : null;\n\n    if (activePrimaryMenuId === PRIMARY_MENU_IDS.CREATE_NEW) {\n      currentScreen = (\n        <NewIntegrationsContainer id=\"new-integrations-wrapper\">\n          {dataSources.length === 0 && <AddDatasourceSecurely />}\n          {dataSources.length === 0 &&\n            this.props.mockDatasources.length > 0 &&\n            mockDataSection}\n          <CreateNewAPI\n            active={\n              activeSecondaryMenuId ===\n              getSecondaryMenuIds(dataSources.length > 0).API\n            }\n            history={history}\n            isCreating={isCreating}\n            location={location}\n            pageId={pageId}\n            showUnsupportedPluginDialog={this.showUnsupportedPluginDialog}\n          />\n          <CreateNewDatasource\n            active={\n              activeSecondaryMenuId ===\n              getSecondaryMenuIds(dataSources.length > 0).DATABASE\n            }\n            history={history}\n            isCreating={isCreating}\n            location={location}\n            pageId={pageId}\n            showUnsupportedPluginDialog={this.showUnsupportedPluginDialog}\n          />\n          {dataSources.length > 0 &&\n            this.props.mockDatasources.length > 0 &&\n            mockDataSection}\n        </NewIntegrationsContainer>\n      );\n    } else {\n      currentScreen = (\n        <ActiveDataSources\n          dataSources={dataSources}\n          history={this.props.history}\n          location={location}\n          onCreateNew={() =>\n            this.onSelectPrimaryMenu(PRIMARY_MENU_IDS.CREATE_NEW)\n          }\n          pageId={pageId}\n        />\n      );\n    }\n    return (\n      <>\n        <BackButton />\n        <UnsupportedPluginDialog\n          isModalOpen={unsupportedPluginDialogVisible}\n          onClose={() =>\n            this.setState({ unsupportedPluginDialogVisible: false })\n          }\n          onContinue={this.unsupportedPluginContinueAction}\n        />\n        <ApiHomePage\n          className=\"t--integrationsHomePage\"\n          style={{ overflow: \"auto\" }}\n        >\n          <HeaderFlex>\n            <p className=\"sectionHeadings\">Datasources</p>\n          </HeaderFlex>\n          <SectionGrid\n            isActiveTab={\n              this.state.activePrimaryMenuId !== PRIMARY_MENU_IDS.ACTIVE\n            }\n          >\n            <MainTabsContainer>\n              {showTabs && (\n                <TabComponent\n                  cypressSelector=\"t--datasource-tab\"\n                  onSelect={this.onSelectPrimaryMenu}\n                  selectedIndex={this.state.activePrimaryMenuId}\n                  tabs={PRIMARY_MENU}\n                />\n              )}\n            </MainTabsContainer>\n            {this.state.activePrimaryMenuId !== PRIMARY_MENU_IDS.ACTIVE && (\n              <div />\n            )}\n\n            {currentScreen}\n            {activePrimaryMenuId === PRIMARY_MENU_IDS.CREATE_NEW && (\n              <TabComponent\n                className=\"t--vertical-menu\"\n                onSelect={this.onSelectSecondaryMenu}\n                selectedIndex={this.state.activeSecondaryMenuId}\n                tabs={\n                  this.props.mockDatasources.length > 0\n                    ? getSecondaryMenu(dataSources.length > 0)\n                    : SECONDARY_MENU\n                }\n                vertical\n              />\n            )}\n          </SectionGrid>\n        </ApiHomePage>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState) => {\n  const userWorkspacePermissions =\n    getCurrentAppWorkspace(state).userPermissions ?? [];\n\n  const canCreateDatasource = hasCreateDatasourcePermission(\n    userWorkspacePermissions,\n  );\n  return {\n    dataSources: getDatasources(state),\n    mockDatasources: getMockDatasources(state),\n    isCreating: state.ui.apiPane.isCreating,\n    applicationId: getCurrentApplicationId(state),\n    canCreateDatasource,\n  };\n};\n\nexport default connect(mapStateToProps)(\n  reduxForm<{ category: string }, IntegrationsHomeScreenProps>({\n    form: API_HOME_SCREEN_FORM,\n  })(IntegrationsHomeScreen),\n);\n","import React from \"react\";\nimport IntegrationsHomeScreen from \"./IntegrationsHomeScreen\";\nimport { RouteComponentProps } from \"react-router\";\nimport * as Sentry from \"@sentry/react\";\n\ntype Props = RouteComponentProps<{\n  pageId: string;\n  selectedTab: string;\n}>;\n\nconst integrationsEditor = (props: Props) => {\n  const { history, location, match } = props;\n\n  return (\n    <div\n      style={{\n        position: \"relative\",\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <IntegrationsHomeScreen\n        history={history}\n        location={location}\n        pageId={match.params.pageId}\n        selectedTab={match.params.selectedTab}\n      />\n    </div>\n  );\n};\n\nexport default Sentry.withProfiler(integrationsEditor);\n","import React from \"react\";\nimport Select from \"react-select\";\n\nimport { WrappedFieldInputProps } from \"redux-form\";\nimport { SelectComponentsConfig } from \"react-select/src/components\";\nimport { LayersContext } from \"constants/Layers\";\nimport { Colors } from \"constants/Colors\";\n\nexport type DropdownProps = {\n  options: Array<{\n    value: string;\n    label?: string;\n  }>;\n  input: WrappedFieldInputProps;\n  placeholder: string;\n  width?: number | string;\n  isSearchable?: boolean;\n  isDisabled?: boolean;\n  customSelectStyles?: any;\n  maxMenuHeight: number;\n  components?: SelectComponentsConfig<any>;\n};\n\nconst selectStyles = {\n  placeholder: (provided: any) => ({\n    ...provided,\n    color: \"#a3b3bf\",\n  }),\n  control: (styles: any, state: any) => ({\n    ...styles,\n    width: state.selectProps.width || 100,\n    minHeight: \"36px\",\n    border: state.isFocused\n      ? `var(--appsmith-input-focus-border-color) solid 1px`\n      : `${Colors.ALTO2} solid 1px`,\n    boxShadow: state.isFocused ? 0 : 0,\n    padding: \"1px 3px 1px\",\n    \"border-radius\": \"0px\",\n    \"&:hover\": {\n      background: \"#FAFAFA\",\n    },\n  }),\n  indicatorsContainer: (provided: any) => ({\n    ...provided,\n    height: \"30px\",\n  }),\n  clearIndicator: (provided: any) => ({\n    ...provided,\n    padding: \"5px\",\n  }),\n  dropdownIndicator: (provided: any) => ({\n    ...provided,\n    padding: \"5px\",\n  }),\n  indicatorSeparator: () => ({}),\n  menu: (provided: any) => ({\n    ...provided,\n    zIndex: 2,\n    backgroundColor: Colors.GREY_1,\n    borderRadius: 0,\n  }),\n  menuPortal: (base: any) => ({ ...base, zIndex: 2 }),\n};\n\nexport function BaseDropdown(props: DropdownProps) {\n  const layer = React.useContext(LayersContext);\n  const { customSelectStyles, input, placeholder } = props;\n  const menuPortalStyle = {\n    menuPortal: (styles: any) => ({ ...styles, zIndex: layer.max }),\n  };\n\n  return (\n    <Select\n      menuPortalTarget={document.body}\n      styles={{ ...selectStyles, ...customSelectStyles, ...menuPortalStyle }}\n      {...input}\n      isDisabled={props.isDisabled}\n      isSearchable={props.isSearchable}\n      onChange={(value) => input.onChange(value)}\n      width={props.width}\n      {...props}\n      classNamePrefix=\"appsmith-select\"\n      menuPlacement=\"auto\"\n      placeholder={placeholder}\n    />\n  );\n}\n\nfunction Dropdown(props: DropdownProps) {\n  return <BaseDropdown {...props} />;\n}\n\nexport default Dropdown;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport {\n  BaseDropdown,\n  DropdownProps,\n} from \"components/designSystems/appsmith/Dropdown\";\nimport { Field } from \"redux-form\";\nimport { replayHighlightClass } from \"globalStyles/portals\";\n\ninterface DropdownFieldProps {\n  name: string;\n  className?: string;\n  options: Array<{\n    label: string;\n    value: string;\n  }>;\n  placeholder: string;\n  width?: number | string;\n  isSearchable?: boolean;\n  isDisabled?: boolean;\n  customStyles?: any; // Object to allow for custom styles for the dropdown\n}\n\nfunction DropdownField(props: DropdownFieldProps & Partial<DropdownProps>) {\n  return (\n    <Field\n      className={`${props.className} ${replayHighlightClass}`}\n      component={BaseDropdown}\n      format={(value: string) => _.find(props.options, { value }) || \"\"}\n      normalize={(option: { value: string }) => option.value}\n      {...props}\n      isDisabled={props.isDisabled}\n      isSearchable={props.isSearchable}\n      placeholder={props.placeholder}\n      width={props.width}\n    />\n  );\n}\n\nexport default DropdownField;\n","import { CLICK_ON, createMessage } from \"@appsmith/constants/messages\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { DebugButton } from \"./DebugCTA\";\n\nconst StyledButton = styled(DebugButton)`\n  display: inline-flex;\n`;\n\nconst Container = styled.div`\n  padding: 15px 0px;\n  color: ${(props) => props.theme.colors.debugger.messageTextColor};\n`;\n\ntype DebuggerMessageProps = {\n  onClick: () => void;\n  secondHalfText: string;\n};\n\nfunction DebuggerMessage(props: DebuggerMessageProps) {\n  return (\n    <Container>\n      {createMessage(CLICK_ON)}\n      <StyledButton className=\"message\" onClick={props.onClick} />\n      {props.secondHalfText}\n    </Container>\n  );\n}\n\nexport default DebuggerMessage;\n","import React, { RefObject, useCallback, useRef } from \"react\";\nimport { InjectedFormProps } from \"redux-form\";\nimport { Icon, Tag } from \"@blueprintjs/core\";\nimport { isString } from \"lodash\";\nimport {\n  components,\n  MenuListComponentProps,\n  OptionProps,\n  OptionTypeBase,\n  SingleValueProps,\n} from \"react-select\";\nimport { Datasource } from \"entities/Datasource\";\nimport { getPluginImages } from \"selectors/entitiesSelector\";\nimport { Colors } from \"constants/Colors\";\nimport FormControl from \"../FormControl\";\nimport { Action, QueryAction, SaaSAction, SlashCommand } from \"entities/Action\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ActionNameEditor from \"components/editorComponents/ActionNameEditor\";\nimport DropdownField from \"components/editorComponents/form/fields/DropdownField\";\nimport { ControlProps } from \"components/formControls/BaseControl\";\nimport ActionSettings from \"pages/Editor/ActionSettings\";\nimport log from \"loglevel\";\nimport {\n  Button,\n  Callout,\n  Category,\n  Classes,\n  Icon as AdsIcon,\n  IconSize,\n  SearchSnippet,\n  Size,\n  Spinner,\n  TabComponent,\n  Text,\n  TextType,\n  TooltipComponent,\n  Variant,\n} from \"design-system-old\";\nimport styled from \"styled-components\";\nimport FormRow from \"components/editorComponents/FormRow\";\nimport EditorButton from \"components/editorComponents/Button\";\nimport DebuggerLogs from \"components/editorComponents/Debugger/DebuggerLogs\";\nimport ErrorLogs from \"components/editorComponents/Debugger/Errors\";\nimport Resizable, {\n  ResizerCSS,\n} from \"components/editorComponents/Debugger/Resizer\";\nimport DebuggerMessage from \"components/editorComponents/Debugger/DebuggerMessage\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport CloseEditor from \"components/editorComponents/CloseEditor\";\nimport { setGlobalSearchQuery } from \"actions/globalSearchActions\";\nimport { toggleShowGlobalSearchModal } from \"actions/globalSearchActions\";\nimport EntityDeps from \"components/editorComponents/Debugger/EntityDependecies\";\nimport {\n  checkIfSectionCanRender,\n  checkIfSectionIsEnabled,\n  extractConditionalOutput,\n  isHidden,\n  modifySectionConfig,\n  updateEvaluatedSectionConfig,\n} from \"components/formControls/utils\";\nimport {\n  createMessage,\n  DEBUGGER_ERRORS,\n  DEBUGGER_LOGS,\n  DEBUGGER_QUERY_RESPONSE_SECOND_HALF,\n  DOCUMENTATION,\n  DOCUMENTATION_TOOLTIP,\n  INSPECT_ENTITY,\n  ACTION_EXECUTION_MESSAGE,\n  UNEXPECTED_ERROR,\n  NO_DATASOURCE_FOR_QUERY,\n  ACTION_EDITOR_REFRESH,\n  EXPECTED_ERROR,\n  INVALID_FORM_CONFIGURATION,\n  ACTION_RUN_BUTTON_MESSAGE_FIRST_HALF,\n  ACTION_RUN_BUTTON_MESSAGE_SECOND_HALF,\n  CREATE_NEW_DATASOURCE,\n} from \"@appsmith/constants/messages\";\nimport { useParams } from \"react-router\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { ExplorerURLParams } from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport MoreActionsMenu from \"../Explorer/Actions/MoreActionsMenu\";\nimport { thinScrollbar } from \"constants/DefaultTheme\";\nimport ActionRightPane, {\n  useEntityDependencies,\n} from \"components/editorComponents/ActionRightPane\";\nimport { SuggestedWidget } from \"api/ActionAPI\";\nimport { Plugin, UIComponentTypes } from \"api/PluginApi\";\nimport * as Sentry from \"@sentry/react\";\nimport { ENTITY_TYPE } from \"entities/DataTree/dataTreeFactory\";\nimport EntityBottomTabs from \"components/editorComponents/EntityBottomTabs\";\nimport { DEBUGGER_TAB_KEYS } from \"components/editorComponents/Debugger/helpers\";\nimport { getErrorAsString } from \"sagas/ActionExecution/errorUtils\";\nimport { UpdateActionPropertyActionPayload } from \"actions/pluginActionActions\";\nimport Guide from \"pages/Editor/GuidedTour/Guide\";\nimport { inGuidedTour } from \"selectors/onboardingSelectors\";\nimport { EDITOR_TABS } from \"constants/QueryEditorConstants\";\nimport {\n  FormEvalOutput,\n  isValidFormConfig,\n} from \"reducers/evaluationReducers/formEvaluationReducer\";\nimport {\n  responseTabComponent,\n  InlineButton,\n  CancelRequestButton,\n  LoadingOverlayContainer,\n  handleCancelActionExecution,\n} from \"components/editorComponents/ApiResponseView\";\nimport LoadingOverlayScreen from \"components/editorComponents/LoadingOverlayScreen\";\nimport { EditorTheme } from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport {\n  hasCreateDatasourcePermission,\n  hasDeleteActionPermission,\n  hasExecuteActionPermission,\n  hasManageActionPermission,\n} from \"@appsmith/utils/permissionHelpers\";\nimport { executeCommandAction } from \"actions/apiPaneActions\";\nimport {\n  getQueryPaneConfigSelectedTabIndex,\n  getQueryPaneResponsePaneHeight,\n  getQueryPaneResponseSelectedTab,\n} from \"selectors/queryPaneSelectors\";\nimport {\n  setQueryPaneConfigSelectedTabIndex,\n  setQueryPaneResponsePaneHeight,\n  setQueryPaneResponseSelectedTab,\n} from \"actions/queryPaneActions\";\nimport { ActionExecutionResizerHeight } from \"pages/Editor/APIEditor/constants\";\nimport { getCurrentAppWorkspace } from \"@appsmith/selectors/workspaceSelectors\";\n\nconst QueryFormContainer = styled.form`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  padding: 20px 0px 0px 0px;\n  width: 100%;\n  .statementTextArea {\n    font-size: 14px;\n    line-height: 20px;\n    color: #2e3d49;\n    margin-top: 5px;\n  }\n  .queryInput {\n    max-width: 30%;\n    padding-right: 10px;\n  }\n  .executeOnLoad {\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 10px;\n  }\n`;\n\nconst ErrorMessage = styled.p`\n  font-size: 14px;\n  color: ${Colors.RED};\n  display: inline-block;\n  margin-right: 10px;\n`;\n\nexport const TabbedViewContainer = styled.div`\n  ${ResizerCSS}\n  height: ${ActionExecutionResizerHeight}px;\n  // Minimum height of bottom tabs as it can be resized\n  min-height: 36px;\n  width: 100%;\n  .react-tabs__tab-panel {\n    overflow: hidden;\n  }\n  .react-tabs__tab-list {\n    margin: 0px;\n\n  }\n  &&& {\n    ul.react-tabs__tab-list {\n      margin: 0px ${(props) => props.theme.spaces[11]}px;\n      background-color: ${(props) =>\n        props.theme.colors.apiPane.responseBody.bg};\n    }\n    .react-tabs__tab-panel {\n      height: calc(100% - 36px);\n    }\n  }\n  background-color: ${(props) => props.theme.colors.apiPane.responseBody.bg};\n  border-top: 1px solid #e8e8e8;\n`;\n\nconst SettingsWrapper = styled.div`\n  padding: 16px 30px;\n  height: 100%;\n  ${thinScrollbar};\n`;\n\nconst ResultsCount = styled.div`\n  position: absolute;\n  right: ${(props) => props.theme.spaces[17] + 1}px;\n  top: ${(props) => props.theme.spaces[2] + 1}px;\n  color: #716e6e;\n`;\n\nconst FieldWrapper = styled.div`\n  margin-top: 15px;\n`;\n\nconst DocumentationLink = styled.a`\n  position: absolute;\n  right: 23px;\n  top: -6px;\n  color: black;\n  display: flex;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 14px;\n  span {\n    display: flex;\n    margin-left: 5px;\n  }\n  &:hover {\n    color: black;\n  }\n`;\n\nconst SecondaryWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: hidden;\n`;\n\nconst HelpSection = styled.div``;\n\nconst ResponseContentWrapper = styled.div`\n  padding: 10px 0px;\n  overflow-y: auto;\n  height: 100%;\n  display: grid;\n\n  ${HelpSection} {\n    margin-bottom: 10px;\n  }\n`;\n\nconst NoResponseContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  .${Classes.ICON} {\n    margin-right: 0px;\n    svg {\n      width: 150px;\n      height: 150px;\n    }\n  }\n  .${Classes.TEXT} {\n    margin-top: ${(props) => props.theme.spaces[9]}px;\n  }\n`;\n\nconst ErrorContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex: 1;\n  align-items: center;\n  justify-content: center;\n  padding-top: 10px;\n  flex-direction: column;\n  & > .${Classes.ICON} {\n    margin-right: 0px;\n    svg {\n      width: 75px;\n      height: 75px;\n    }\n  }\n  .${Classes.TEXT} {\n    margin-top: ${(props) => props.theme.spaces[9]}px;\n  }\n`;\n\nconst ErrorDescriptionText = styled(Text)`\n  width: 500px;\n  text-align: center;\n  line-height: 25px;\n  letter-spacing: -0.195px;\n`;\n\nexport const StyledFormRow = styled(FormRow)`\n  padding: 0px 20px;\n  flex: 0;\n`;\n\nconst NameWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  input {\n    margin: 0;\n    box-sizing: border-box;\n  }\n`;\n\nconst ActionsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1 1 50%;\n  justify-content: flex-end;\n\n  & > div {\n    margin: 0 0 0 ${(props) => props.theme.spaces[7]}px;\n  }\n\n  button:last-child {\n    margin-left: ${(props) => props.theme.spaces[7]}px;\n  }\n`;\n\nconst DropdownSelect = styled.div`\n  font-size: 14px;\n  margin-right: 10px;\n\n  .t--switch-datasource > div {\n    min-height: 30px;\n    height: 30px;\n\n    & > div {\n      height: 100%;\n    }\n\n    & .appsmith-select__input > input {\n      position: relative;\n      bottom: 4px;\n    }\n\n    & .appsmith-select__input > input[value=\"\"] {\n      caret-color: transparent;\n    }\n  }\n`;\n\nconst CreateDatasource = styled.div`\n  height: 44px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 500;\n  border-top: 1px solid ${Colors.ATHENS_GRAY};\n  :hover {\n    cursor: pointer;\n  }\n  .createIcon {\n    margin-right: 6px;\n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  .plugin-image {\n    height: 20px;\n    width: auto;\n  }\n  .selected-value {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: no-wrap;\n    margin-left: 6px;\n  }\n`;\n\nconst StyledSpinner = styled.div`\n  display: flex;\n  padding: 5px;\n  height: 2vw;\n  align-items: center;\n  justify-content: space-between;\n  width: 5vw;\n`;\n\nconst NoDataSourceContainer = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  margin-top: 62px;\n  flex: 1;\n  .font18 {\n    width: 50%;\n    text-align: center;\n    margin-bottom: 23px;\n    font-size: 18px;\n    color: #2e3d49;\n  }\n`;\n\nconst TabContainerView = styled.div`\n  flex: 1;\n  overflow: auto;\n  border-top: 1px solid ${(props) => props.theme.colors.apiPane.dividerBg};\n  ${thinScrollbar}\n  a {\n    font-size: 14px;\n    line-height: 20px;\n    margin-top: 12px;\n  }\n  .react-tabs__tab-panel {\n    overflow: auto;\n  }\n  .react-tabs__tab-list {\n    margin: 0px;\n  }\n  &&& {\n    ul.react-tabs__tab-list {\n      margin-left: 24px;\n    }\n  }\n  position: relative;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: calc(100% - 50px);\n  width: 100%;\n`;\n\nconst SidebarWrapper = styled.div<{ show: boolean }>`\n  border: 1px solid #e8e8e8;\n  border-bottom: 0;\n  display: ${(props) => (props.show ? \"flex\" : \"none\")};\n  width: ${(props) => props.theme.actionSidePane.width}px;\n`;\n\ntype QueryFormProps = {\n  onDeleteClick: () => void;\n  onRunClick: () => void;\n  onCreateDatasourceClick: () => void;\n  isDeleting: boolean;\n  isRunning: boolean;\n  dataSources: Datasource[];\n  uiComponent: UIComponentTypes;\n  executedQueryData?: {\n    body: any;\n    isExecutionSuccess?: boolean;\n    messages?: Array<string>;\n    suggestedWidgets?: SuggestedWidget[];\n    readableError?: string;\n  };\n  runErrorMessage: string | undefined;\n  location: {\n    state: any;\n  };\n  editorConfig?: any;\n  formName: string;\n  settingConfig: any;\n  formData: SaaSAction | QueryAction;\n  responseDisplayFormat: { title: string; value: string };\n  responseDataTypes: { key: string; title: string }[];\n  updateActionResponseDisplayFormat: ({\n    field,\n    id,\n    value,\n  }: UpdateActionPropertyActionPayload) => void;\n};\n\ntype ReduxProps = {\n  actionName: string;\n  plugin?: Plugin;\n  pluginId: string;\n  documentationLink: string | undefined;\n  formEvaluationState: FormEvalOutput;\n};\n\nexport type EditorJSONtoFormProps = QueryFormProps & ReduxProps;\n\ntype Props = EditorJSONtoFormProps &\n  InjectedFormProps<Action, EditorJSONtoFormProps>;\n\nexport function EditorJSONtoForm(props: Props) {\n  const {\n    actionName,\n    dataSources,\n    documentationLink,\n    editorConfig,\n    executedQueryData,\n    formName,\n    handleSubmit,\n    isRunning,\n    onCreateDatasourceClick,\n    onRunClick,\n    plugin,\n    responseDataTypes,\n    responseDisplayFormat,\n    runErrorMessage,\n    settingConfig,\n    uiComponent,\n    updateActionResponseDisplayFormat,\n  } = props;\n  let error = runErrorMessage;\n  let output: Record<string, any>[] | null = null;\n  let hintMessages: Array<string> = [];\n  const panelRef: RefObject<HTMLDivElement> = useRef(null);\n\n  const params = useParams<{ apiId?: string; queryId?: string }>();\n\n  const actions: Action[] = useSelector((state: AppState) =>\n    state.entities.actions.map((action) => action.config),\n  );\n  const guidedTourEnabled = useSelector(inGuidedTour);\n  const currentActionConfig: Action | undefined = actions.find(\n    (action) => action.id === params.apiId || action.id === params.queryId,\n  );\n  const { pageId } = useParams<ExplorerURLParams>();\n  const isChangePermitted = hasManageActionPermission(\n    currentActionConfig?.userPermissions,\n  );\n  const isExecutePermitted = hasExecuteActionPermission(\n    currentActionConfig?.userPermissions,\n  );\n  const isDeletePermitted = hasDeleteActionPermission(\n    currentActionConfig?.userPermissions,\n  );\n\n  const userWorkspacePermissions = useSelector(\n    (state: AppState) => getCurrentAppWorkspace(state).userPermissions ?? [],\n  );\n\n  const canCreateDatasource = hasCreateDatasourcePermission(\n    userWorkspacePermissions,\n  );\n\n  // Query is executed even once during the session, show the response data.\n  if (executedQueryData) {\n    if (!executedQueryData.isExecutionSuccess) {\n      // Pass the error to be shown in the error tab\n      error = executedQueryData.readableError\n        ? getErrorAsString(executedQueryData.readableError)\n        : getErrorAsString(executedQueryData.body);\n    } else if (isString(executedQueryData.body)) {\n      try {\n        // Try to parse response as JSON array to be displayed in the Response tab\n        output = JSON.parse(executedQueryData.body);\n      } catch (e) {\n        // In case the string is not a JSON, wrap it in a response object\n        output = [\n          {\n            response: executedQueryData.body,\n          },\n        ];\n      }\n    } else {\n      output = executedQueryData.body;\n    }\n    if (executedQueryData.messages && executedQueryData.messages.length) {\n      hintMessages = executedQueryData.messages;\n    }\n  }\n\n  const dispatch = useDispatch();\n\n  function MenuList(props: MenuListComponentProps<{ children: Node }>) {\n    return (\n      <>\n        <components.MenuList {...props}>{props.children}</components.MenuList>\n        {canCreateDatasource ? (\n          <CreateDatasource onClick={() => onCreateDatasourceClick()}>\n            <Icon className=\"createIcon\" icon=\"plus\" iconSize={11} />\n            {createMessage(CREATE_NEW_DATASOURCE)}\n          </CreateDatasource>\n        ) : null}\n      </>\n    );\n  }\n\n  function SingleValue(props: SingleValueProps<OptionTypeBase>) {\n    return (\n      <components.SingleValue {...props}>\n        <Container>\n          <img\n            alt=\"Datasource\"\n            className=\"plugin-image\"\n            src={props.data.image}\n          />\n          <div className=\"selected-value\">{props.children}</div>\n        </Container>\n      </components.SingleValue>\n    );\n  }\n\n  function CustomOption(props: OptionProps<OptionTypeBase>) {\n    return (\n      <components.Option {...props}>\n        <Container className=\"t--datasource-option\">\n          <img\n            alt=\"Datasource\"\n            className=\"plugin-image\"\n            src={props.data.image}\n          />\n          <div style={{ marginLeft: \"6px\" }}>{props.children}</div>\n        </Container>\n      </components.Option>\n    );\n  }\n\n  const handleDocumentationClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    const query = plugin?.name || \"Connecting to datasources\";\n    dispatch(setGlobalSearchQuery(query));\n    dispatch(toggleShowGlobalSearchModal());\n    AnalyticsUtil.logEvent(\"OPEN_OMNIBAR\", {\n      source: \"DATASOURCE_DOCUMENTATION_CLICK\",\n      query,\n    });\n  };\n\n  // Added function to handle the render of the configs\n  const renderConfig = (editorConfig: any) => {\n    try {\n      // Selectively rendering form based on uiComponent prop\n      if (uiComponent === UIComponentTypes.UQIDbEditorForm) {\n        // If the formEvaluation is not ready yet, just show loading state.\n        if (\n          props.hasOwnProperty(\"formEvaluationState\") &&\n          !!props.formEvaluationState &&\n          Object.keys(props.formEvaluationState).length > 0\n        ) {\n          return editorConfig.map((config: any, idx: number) => {\n            return renderEachConfigV2(formName, config, idx);\n          });\n        } else {\n          return (\n            <StyledSpinner>\n              <Spinner size={IconSize.LARGE} />\n              <p>Loading..</p>\n            </StyledSpinner>\n          );\n        }\n      } else {\n        return editorConfig.map(renderEachConfig(formName));\n      }\n    } catch (e) {\n      log.error(e);\n      Sentry.captureException(e);\n      return (\n        <>\n          <ErrorMessage>\n            {createMessage(INVALID_FORM_CONFIGURATION)}\n          </ErrorMessage>\n          <Tag\n            intent=\"warning\"\n            interactive\n            minimal\n            onClick={() => window.location.reload()}\n            round\n          >\n            {createMessage(ACTION_EDITOR_REFRESH)}\n          </Tag>\n        </>\n      );\n    }\n  };\n\n  // Render function to render the V2 of form editor type (UQI)\n  // Section argument is a nested config object, this function recursively renders the UI based on the config\n  const renderEachConfigV2 = (formName: string, section: any, idx: number) => {\n    let enabled = true;\n    if (!!section) {\n      // If the section is a nested component, recursively check for conditional statements\n      if (\n        \"schema\" in section &&\n        Array.isArray(section.schema) &&\n        section.schema.length > 0\n      ) {\n        section.schema = section.schema.map((subSection: any) => {\n          const conditionalOutput = extractConditionalOutput(\n            subSection,\n            props.formEvaluationState,\n          );\n          if (!checkIfSectionCanRender(conditionalOutput)) {\n            subSection.hidden = true;\n          } else {\n            subSection.hidden = false;\n          }\n          enabled = checkIfSectionIsEnabled(conditionalOutput);\n          subSection = updateEvaluatedSectionConfig(\n            subSection,\n            conditionalOutput,\n            enabled,\n          );\n          if (!isValidFormConfig(subSection)) return null;\n          return subSection;\n        });\n      }\n      // If the component is not allowed to render, return null\n      const conditionalOutput = extractConditionalOutput(\n        section,\n        props.formEvaluationState,\n      );\n      if (!checkIfSectionCanRender(conditionalOutput)) return null;\n      section = updateEvaluatedSectionConfig(section, conditionalOutput);\n      enabled = checkIfSectionIsEnabled(conditionalOutput);\n      if (!isValidFormConfig(section)) return null;\n    }\n    if (section.hasOwnProperty(\"controlType\")) {\n      // If component is type section, render it's children\n      if (\n        section.controlType === \"SECTION\" &&\n        section.hasOwnProperty(\"children\")\n      ) {\n        return section.children.map((section: any, idx: number) => {\n          return renderEachConfigV2(formName, section, idx);\n        });\n      }\n      try {\n        const { configProperty } = section;\n        const modifiedSection = modifySectionConfig(section, enabled);\n        return (\n          <FieldWrapper key={`${configProperty}_${idx}`}>\n            <FormControl config={modifiedSection} formName={formName} />\n          </FieldWrapper>\n        );\n      } catch (e) {\n        log.error(e);\n      }\n    } else {\n      return section.map((section: any, idx: number) => {\n        renderEachConfigV2(formName, section, idx);\n      });\n    }\n    return null;\n  };\n\n  // Recursive call to render forms pre UQI\n  const renderEachConfig = (formName: string) => (section: any): any => {\n    return section.children.map(\n      (formControlOrSection: ControlProps, idx: number) => {\n        if (isHidden(props.formData, section.hidden)) return null;\n        if (formControlOrSection.hasOwnProperty(\"children\")) {\n          return renderEachConfig(formName)(formControlOrSection);\n        } else {\n          try {\n            const { configProperty } = formControlOrSection;\n            return (\n              <FieldWrapper key={`${configProperty}_${idx}`}>\n                <FormControl\n                  config={formControlOrSection}\n                  formName={formName}\n                />\n              </FieldWrapper>\n            );\n          } catch (e) {\n            log.error(e);\n          }\n        }\n        return null;\n      },\n    );\n  };\n\n  const responeTabOnRunClick = () => {\n    props.onRunClick();\n\n    AnalyticsUtil.logEvent(\"RESPONSE_TAB_RUN_ACTION_CLICK\", {\n      source: \"QUERY_PANE\",\n    });\n  };\n\n  const responsePaneHeight = useSelector(getQueryPaneResponsePaneHeight);\n  const setResponsePaneHeight = useCallback((height: number) => {\n    dispatch(setQueryPaneResponsePaneHeight(height));\n  }, []);\n\n  const responseBodyTabs =\n    responseDataTypes &&\n    responseDataTypes.map((dataType, index) => {\n      return {\n        index: index,\n        key: dataType.key,\n        title: dataType.title,\n        panelComponent: responseTabComponent(\n          dataType.key,\n          output,\n          responsePaneHeight,\n        ),\n      };\n    });\n\n  const onResponseTabSelect = (tabKey: string) => {\n    if (tabKey === DEBUGGER_TAB_KEYS.ERROR_TAB) {\n      AnalyticsUtil.logEvent(\"OPEN_DEBUGGER\", {\n        source: \"QUERY_PANE\",\n      });\n    }\n    updateActionResponseDisplayFormat({\n      id: currentActionConfig?.id || \"\",\n      field: \"responseDisplayFormat\",\n      value: tabKey,\n    });\n  };\n\n  const selectedTabIndex =\n    responseDataTypes &&\n    responseDataTypes.findIndex(\n      (dataType) => dataType.title === responseDisplayFormat?.title,\n    );\n\n  const responseTabs = [\n    {\n      key: \"response\",\n      title: \"Response\",\n      panelComponent: (\n        <ResponseContentWrapper>\n          {error && (\n            <ErrorContainer>\n              <AdsIcon keepColors name=\"warning-triangle\" />\n              <Text style={{ color: \"#F22B2B\" }} type={TextType.H3}>\n                {createMessage(EXPECTED_ERROR)}\n              </Text>\n\n              <ErrorDescriptionText\n                className=\"t--query-error\"\n                type={TextType.P1}\n              >\n                {error}\n              </ErrorDescriptionText>\n              <DebuggerMessage\n                onClick={() => {\n                  AnalyticsUtil.logEvent(\"OPEN_DEBUGGER\", {\n                    source: \"QUERY\",\n                  });\n                  dispatch(\n                    setQueryPaneResponseSelectedTab(\n                      DEBUGGER_TAB_KEYS.ERROR_TAB,\n                    ),\n                  );\n                }}\n                secondHalfText={createMessage(\n                  DEBUGGER_QUERY_RESPONSE_SECOND_HALF,\n                )}\n              />\n            </ErrorContainer>\n          )}\n          {hintMessages && hintMessages.length > 0 && (\n            <HelpSection>\n              {hintMessages.map((msg, index) => (\n                <Callout\n                  fill\n                  key={index}\n                  text={msg}\n                  variant={Variant.warning}\n                />\n              ))}\n            </HelpSection>\n          )}\n          {currentActionConfig &&\n            output &&\n            responseBodyTabs &&\n            responseBodyTabs.length > 0 &&\n            selectedTabIndex !== -1 && (\n              <EntityBottomTabs\n                onSelect={onResponseTabSelect}\n                responseViewer\n                selectedTabKey={responseDisplayFormat.value}\n                tabs={responseBodyTabs}\n              />\n            )}\n          {!output && !error && (\n            <NoResponseContainer>\n              <AdsIcon name=\"no-response\" />\n              <Text type={TextType.P1}>\n                {createMessage(ACTION_RUN_BUTTON_MESSAGE_FIRST_HALF)}\n                <InlineButton\n                  disabled={!isExecutePermitted}\n                  isLoading={isRunning}\n                  onClick={responeTabOnRunClick}\n                  size={Size.medium}\n                  tag=\"button\"\n                  text=\"Run\"\n                  type=\"button\"\n                />\n                {createMessage(ACTION_RUN_BUTTON_MESSAGE_SECOND_HALF)}\n              </Text>\n            </NoResponseContainer>\n          )}\n        </ResponseContentWrapper>\n      ),\n    },\n    {\n      key: DEBUGGER_TAB_KEYS.ERROR_TAB,\n      title: createMessage(DEBUGGER_ERRORS),\n      panelComponent: <ErrorLogs />,\n    },\n    {\n      key: DEBUGGER_TAB_KEYS.LOGS_TAB,\n      title: createMessage(DEBUGGER_LOGS),\n      panelComponent: <DebuggerLogs searchQuery={actionName} />,\n    },\n    {\n      key: DEBUGGER_TAB_KEYS.INSPECT_TAB,\n      title: createMessage(INSPECT_ENTITY),\n      panelComponent: <EntityDeps />,\n    },\n  ];\n\n  const { entityDependencies, hasDependencies } = useEntityDependencies(\n    props.actionName,\n  );\n\n  const pluginImages = useSelector(getPluginImages);\n\n  type DATASOURCES_OPTIONS_TYPE = {\n    label: string;\n    value: string;\n    image: string;\n  };\n\n  // Filtering the datasources for listing the similar datasources only rather than having all the active datasources in the list, which on switching resulted in error.\n  const DATASOURCES_OPTIONS: Array<DATASOURCES_OPTIONS_TYPE> = dataSources.reduce(\n    (acc: Array<DATASOURCES_OPTIONS_TYPE>, dataSource: Datasource) => {\n      if (dataSource.pluginId === plugin?.id) {\n        acc.push({\n          label: dataSource.name,\n          value: dataSource.id,\n          image: pluginImages[dataSource.pluginId],\n        });\n      }\n      return acc;\n    },\n    [],\n  );\n\n  const selectedConfigTab = useSelector(getQueryPaneConfigSelectedTabIndex);\n\n  const setSelectedConfigTab = useCallback((selectedIndex: number) => {\n    dispatch(setQueryPaneConfigSelectedTabIndex(selectedIndex));\n  }, []);\n\n  const selectedResponseTab = useSelector(getQueryPaneResponseSelectedTab);\n\n  const setSelectedResponseTab = useCallback((tabKey: string) => {\n    dispatch(setQueryPaneResponseSelectedTab(tabKey));\n  }, []);\n\n  // when switching between different redux forms, make sure this redux form has been initialized before rendering anything.\n  // the initialized prop below comes from redux-form.\n  if (!props.initialized) {\n    return null;\n  }\n\n  return (\n    <>\n      {!guidedTourEnabled && <CloseEditor />}\n      {guidedTourEnabled && <Guide className=\"query-page\" />}\n      <QueryFormContainer onSubmit={handleSubmit}>\n        <StyledFormRow>\n          <NameWrapper>\n            <ActionNameEditor disabled={!isChangePermitted} />\n          </NameWrapper>\n          <ActionsWrapper>\n            <MoreActionsMenu\n              className=\"t--more-action-menu\"\n              id={currentActionConfig ? currentActionConfig.id : \"\"}\n              isChangePermitted={isChangePermitted}\n              isDeletePermitted={isDeletePermitted}\n              name={currentActionConfig ? currentActionConfig.name : \"\"}\n              pageId={pageId}\n            />\n            <SearchSnippet\n              className=\"search-snippets\"\n              entityId={currentActionConfig?.id}\n              entityType={ENTITY_TYPE.ACTION}\n              onClick={() => {\n                dispatch(\n                  executeCommandAction({\n                    actionType: SlashCommand.NEW_SNIPPET,\n                    args: {\n                      entityId: currentActionConfig?.id,\n                      entityType: ENTITY_TYPE.ACTION,\n                    },\n                  }),\n                );\n              }}\n            />\n            <DropdownSelect>\n              <DropdownField\n                className={\"t--switch-datasource\"}\n                components={{ MenuList, Option: CustomOption, SingleValue }}\n                isDisabled={!isChangePermitted}\n                maxMenuHeight={200}\n                name=\"datasource.id\"\n                options={DATASOURCES_OPTIONS}\n                placeholder=\"Datasource\"\n                width={232}\n              />\n            </DropdownSelect>\n            <Button\n              className=\"t--run-query\"\n              data-guided-tour-iid=\"run-query\"\n              disabled={!isExecutePermitted}\n              isLoading={isRunning}\n              onClick={onRunClick}\n              size={Size.medium}\n              tag=\"button\"\n              text=\"Run\"\n              type=\"button\"\n            />\n          </ActionsWrapper>\n        </StyledFormRow>\n        <Wrapper>\n          <SecondaryWrapper>\n            <TabContainerView>\n              {documentationLink && (\n                <DocumentationLink>\n                  <TooltipComponent\n                    content={createMessage(DOCUMENTATION_TOOLTIP)}\n                    hoverOpenDelay={50}\n                    position=\"top\"\n                  >\n                    <span\n                      className=\"t--datasource-documentation-link\"\n                      onClick={(e: React.MouseEvent) =>\n                        handleDocumentationClick(e)\n                      }\n                    >\n                      <AdsIcon\n                        keepColors\n                        name=\"book-line\"\n                        size={IconSize.XXXL}\n                      />\n                      &nbsp;\n                      {createMessage(DOCUMENTATION)}\n                    </span>\n                  </TooltipComponent>\n                </DocumentationLink>\n              )}\n              <TabComponent\n                onSelect={setSelectedConfigTab}\n                selectedIndex={selectedConfigTab}\n                tabs={[\n                  {\n                    key: EDITOR_TABS.QUERY,\n                    title: \"Query\",\n                    panelComponent: (\n                      <SettingsWrapper>\n                        {editorConfig && editorConfig.length > 0 ? (\n                          renderConfig(editorConfig)\n                        ) : (\n                          <>\n                            <ErrorMessage>\n                              {createMessage(UNEXPECTED_ERROR)}\n                            </ErrorMessage>\n                            <Tag\n                              intent=\"warning\"\n                              interactive\n                              minimal\n                              onClick={() => window.location.reload()}\n                              round\n                            >\n                              {createMessage(ACTION_EDITOR_REFRESH)}\n                            </Tag>\n                          </>\n                        )}\n                        {dataSources.length === 0 && (\n                          <NoDataSourceContainer>\n                            <p className=\"font18\">\n                              {createMessage(NO_DATASOURCE_FOR_QUERY)}\n                            </p>\n                            <EditorButton\n                              disabled={!canCreateDatasource}\n                              filled\n                              icon=\"plus\"\n                              intent=\"primary\"\n                              onClick={() => onCreateDatasourceClick()}\n                              size=\"small\"\n                              text=\"Add a Datasource\"\n                            />\n                          </NoDataSourceContainer>\n                        )}\n                      </SettingsWrapper>\n                    ),\n                  },\n                  {\n                    key: EDITOR_TABS.SETTINGS,\n                    title: \"Settings\",\n                    panelComponent: (\n                      <SettingsWrapper>\n                        <ActionSettings\n                          actionSettingsConfig={settingConfig}\n                          formName={formName}\n                        />\n                      </SettingsWrapper>\n                    ),\n                  },\n                ]}\n              />\n            </TabContainerView>\n\n            <TabbedViewContainer\n              className=\"t--query-bottom-pane-container\"\n              ref={panelRef}\n            >\n              <Resizable\n                initialHeight={responsePaneHeight}\n                onResizeComplete={(height: number) =>\n                  setResponsePaneHeight(height)\n                }\n                openResizer={isRunning}\n                panelRef={panelRef}\n                snapToHeight={ActionExecutionResizerHeight}\n              />\n              {isRunning && (\n                <>\n                  <LoadingOverlayScreen theme={EditorTheme.LIGHT} />\n                  <LoadingOverlayContainer>\n                    <div>\n                      <Text textAlign={\"center\"} type={TextType.P1}>\n                        {createMessage(ACTION_EXECUTION_MESSAGE, \"Query\")}\n                      </Text>\n                      <CancelRequestButton\n                        category={Category.secondary}\n                        className={`t--cancel-action-button`}\n                        onClick={() => {\n                          handleCancelActionExecution();\n                        }}\n                        size={Size.medium}\n                        tag=\"button\"\n                        text=\"Cancel Request\"\n                        type=\"button\"\n                      />\n                    </div>\n                  </LoadingOverlayContainer>\n                </>\n              )}\n\n              {output && !!output.length && (\n                <ResultsCount>\n                  <Text type={TextType.P3}>\n                    Result:\n                    <Text type={TextType.H5}>{` ${output.length} Record${\n                      output.length > 1 ? \"s\" : \"\"\n                    }`}</Text>\n                  </Text>\n                </ResultsCount>\n              )}\n\n              <EntityBottomTabs\n                containerRef={panelRef}\n                expandedHeight={`${ActionExecutionResizerHeight}px`}\n                onSelect={setSelectedResponseTab}\n                selectedTabKey={selectedResponseTab}\n                tabs={responseTabs}\n              />\n            </TabbedViewContainer>\n          </SecondaryWrapper>\n          <SidebarWrapper\n            show={(hasDependencies || !!output) && !guidedTourEnabled}\n          >\n            <ActionRightPane\n              actionName={actionName}\n              entityDependencies={entityDependencies}\n              hasConnections={hasDependencies}\n              hasResponse={!!output}\n              suggestedWidgets={executedQueryData?.suggestedWidgets}\n            />\n          </SidebarWrapper>\n        </Wrapper>\n      </QueryFormContainer>\n    </>\n  );\n}\n","import { formValueSelector, reduxForm } from \"redux-form\";\nimport { QUERY_EDITOR_FORM_NAME } from \"@appsmith/constants/forms\";\nimport { Action } from \"entities/Action\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"@appsmith/reducers\";\nimport {\n  getPluginResponseTypes,\n  getPluginDocumentationLinks,\n  getPlugin,\n  getActionData,\n} from \"selectors/entitiesSelector\";\nimport { EditorJSONtoForm, EditorJSONtoFormProps } from \"./EditorJSONtoForm\";\nimport { getFormEvaluationState } from \"selectors/formSelectors\";\n\nconst valueSelector = formValueSelector(QUERY_EDITOR_FORM_NAME);\nconst mapStateToProps = (state: AppState, props: any) => {\n  const actionId = valueSelector(state, \"id\");\n  const actionName = valueSelector(state, \"name\");\n  const pluginId = valueSelector(state, \"datasource.pluginId\");\n  const selectedDbId = valueSelector(state, \"datasource.id\");\n  const actionData = getActionData(state, actionId);\n  let responseDisplayFormat: { title: string; value: string };\n  let responseDataTypes: { key: string; title: string }[];\n  if (actionData && actionData.responseDisplayFormat) {\n    responseDataTypes = actionData.dataTypes.map((data) => {\n      return {\n        key: data.dataType,\n        title: data.dataType,\n      };\n    });\n    responseDisplayFormat = {\n      title: actionData.responseDisplayFormat,\n      value: actionData.responseDisplayFormat,\n    };\n  } else {\n    responseDataTypes = [];\n    responseDisplayFormat = {\n      title: \"\",\n      value: \"\",\n    };\n  }\n\n  const responseTypes = getPluginResponseTypes(state);\n  const documentationLinks = getPluginDocumentationLinks(state);\n  const plugin = getPlugin(state, pluginId);\n  // State to manage the evaluations for the form\n  let formEvaluationState = {};\n\n  // Fetching evaluations state only once the formData is populated\n  if (!!props.formData) {\n    formEvaluationState = getFormEvaluationState(state)[props.formData.id];\n  }\n\n  return {\n    actionName,\n    plugin,\n    pluginId,\n    selectedDbId,\n    responseDataTypes,\n    responseDisplayFormat,\n    responseType: responseTypes[pluginId],\n    documentationLink: documentationLinks[pluginId],\n    formName: QUERY_EDITOR_FORM_NAME,\n    formEvaluationState,\n  };\n};\n\nexport default connect(mapStateToProps)(\n  reduxForm<Action, EditorJSONtoFormProps>({\n    form: QUERY_EDITOR_FORM_NAME,\n    enableReinitialize: true,\n  })(EditorJSONtoForm),\n);\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { connect } from \"react-redux\";\nimport { getFormValues } from \"redux-form\";\nimport styled from \"styled-components\";\nimport { INTEGRATION_TABS, QueryEditorRouteParams } from \"constants/routes\";\nimport history from \"utils/history\";\nimport QueryEditorForm from \"./Form\";\nimport {\n  deleteAction,\n  runAction,\n  setActionResponseDisplayFormat,\n  UpdateActionPropertyActionPayload,\n  setActionProperty,\n} from \"actions/pluginActionActions\";\nimport { AppState } from \"@appsmith/reducers\";\nimport {\n  getCurrentApplicationId,\n  getIsEditorInitialized,\n} from \"selectors/editorSelectors\";\nimport { QUERY_EDITOR_FORM_NAME } from \"@appsmith/constants/forms\";\nimport { Plugin, UIComponentTypes } from \"api/PluginApi\";\nimport { Datasource } from \"entities/Datasource\";\nimport {\n  getPluginIdsOfPackageNames,\n  getPlugins,\n  getAction,\n  getActionResponses,\n  getDatasourceByPluginId,\n  getDBAndRemoteDatasources,\n} from \"selectors/entitiesSelector\";\nimport { PLUGIN_PACKAGE_DBS } from \"constants/QueryEditorConstants\";\nimport { QueryAction, SaaSAction } from \"entities/Action\";\nimport Spinner from \"components/editorComponents/Spinner\";\nimport CenteredWrapper from \"components/designSystems/appsmith/CenteredWrapper\";\nimport {\n  changeQuery,\n  setQueryPaneResponsePaneHeight,\n} from \"actions/queryPaneActions\";\nimport PerformanceTracker, {\n  PerformanceTransactionName,\n} from \"utils/PerformanceTracker\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { initFormEvaluations } from \"actions/evaluationActions\";\nimport { getUIComponent } from \"./helpers\";\nimport { diff, Diff } from \"deep-diff\";\nimport EntityNotFoundPane from \"pages/Editor/EntityNotFoundPane\";\nimport { integrationEditorURL } from \"RouteBuilder\";\nimport { getConfigInitialValues } from \"components/formControls/utils\";\nimport { merge } from \"lodash\";\nimport { getPathAndValueFromActionDiffObject } from \"../../../utils/getPathAndValueFromActionDiffObject\";\nimport { ActionExecutionResizerHeight } from \"../APIEditor/constants\";\n\nconst EmptyStateContainer = styled.div`\n  display: flex;\n  height: 100%;\n  font-size: 20px;\n`;\n\nconst LoadingContainer = styled(CenteredWrapper)`\n  height: 50%;\n`;\n\ntype ReduxDispatchProps = {\n  runAction: (actionId: string) => void;\n  deleteAction: (id: string, name: string) => void;\n  changeQueryPage: (queryId: string) => void;\n  initFormEvaluation: (\n    editorConfig: any,\n    settingConfig: any,\n    formId: string,\n  ) => void;\n  updateActionResponseDisplayFormat: ({\n    field,\n    id,\n    value,\n  }: UpdateActionPropertyActionPayload) => void;\n  setActionProperty: (\n    actionId: string,\n    propertyName: string,\n    value: string,\n  ) => void;\n  setQueryPaneResponsePaneHeight: (height: number) => void;\n};\n\ntype ReduxStateProps = {\n  plugins: Plugin[];\n  dataSources: Datasource[];\n  isRunning: boolean;\n  isDeleting: boolean;\n  formData: QueryAction | SaaSAction;\n  runErrorMessage: Record<string, string>;\n  pluginId: string | undefined;\n  pluginIds: Array<string> | undefined;\n  responses: any;\n  isCreating: boolean;\n  editorConfig: any;\n  settingConfig: any;\n  isEditorInitialized: boolean;\n  uiComponent: UIComponentTypes;\n  applicationId: string;\n  actionId: string;\n  actionObjectDiff?: any;\n  isSaas: boolean;\n};\n\ntype StateAndRouteProps = RouteComponentProps<QueryEditorRouteParams>;\n\ntype Props = StateAndRouteProps & ReduxDispatchProps & ReduxStateProps;\n\nclass QueryEditor extends React.Component<Props> {\n  constructor(props: Props) {\n    super(props);\n    // Call the first evaluations when the page loads\n    // call evaluations only for queries and not google sheets (which uses apiId)\n    if (this.props.match.params.queryId) {\n      this.props.initFormEvaluation(\n        this.props.editorConfig,\n        this.props.settingConfig,\n        this.props.match.params.queryId,\n      );\n    }\n  }\n\n  componentDidMount() {\n    // if the current action is non existent, do not dispatch change query page action\n    // this action should only be dispatched when switching from an existent action.\n    if (!this.props.pluginId) return;\n    this.props.changeQueryPage(this.props.actionId);\n\n    // fixes missing where key issue by populating the action with a where object when the component is mounted.\n    if (this.props.isSaas) {\n      const { path = \"\", value = \"\" } = {\n        ...getPathAndValueFromActionDiffObject(this.props.actionObjectDiff),\n      };\n      if (value && path) {\n        this.props.setActionProperty(this.props.actionId, path, value);\n      }\n    }\n\n    PerformanceTracker.stopTracking(PerformanceTransactionName.OPEN_ACTION, {\n      actionType: \"QUERY\",\n    });\n  }\n\n  handleDeleteClick = () => {\n    const { formData } = this.props;\n    this.props.deleteAction(this.props.actionId, formData.name);\n  };\n\n  handleRunClick = () => {\n    const { dataSources } = this.props;\n    PerformanceTracker.startTracking(\n      PerformanceTransactionName.RUN_QUERY_CLICK,\n      { actionId: this.props.actionId },\n    );\n    AnalyticsUtil.logEvent(\"RUN_QUERY_CLICK\", {\n      actionId: this.props.actionId,\n      dataSourceSize: dataSources.length,\n    });\n    this.props.runAction(this.props.actionId);\n\n    // reset response pane height back to original\n    this.props.setQueryPaneResponsePaneHeight(ActionExecutionResizerHeight);\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.isRunning === true && this.props.isRunning === false) {\n      PerformanceTracker.stopTracking(\n        PerformanceTransactionName.RUN_QUERY_CLICK,\n      );\n    }\n    // Update the page when the queryID is changed by changing the\n    // URL or selecting new query from the query pane\n    // reusing same logic for changing query panes for switching query editor datasources, since the operations are similar.\n    if (\n      prevProps.actionId !== this.props.actionId ||\n      prevProps.pluginId !== this.props.pluginId\n    ) {\n      this.props.changeQueryPage(this.props.actionId);\n    }\n  }\n\n  onCreateDatasourceClick = () => {\n    const { pageId } = this.props.match.params;\n    history.push(\n      integrationEditorURL({\n        pageId,\n        selectedTab: INTEGRATION_TABS.NEW,\n      }),\n    );\n  };\n\n  render() {\n    const {\n      actionId,\n      dataSources,\n      editorConfig,\n      isCreating,\n      isDeleting,\n      isEditorInitialized,\n      isRunning,\n      pluginId,\n      pluginIds,\n      responses,\n      runErrorMessage,\n      settingConfig,\n      uiComponent,\n      updateActionResponseDisplayFormat,\n    } = this.props;\n    const { pageId } = this.props.match.params;\n\n    // custom function to return user to integrations page if action is not found\n    const goToDatasourcePage = () =>\n      history.push(\n        integrationEditorURL({\n          pageId,\n          selectedTab: INTEGRATION_TABS.ACTIVE,\n        }),\n      );\n\n    // if the action can not be found, generate a entity not found page\n    if (!pluginId && actionId) {\n      return <EntityNotFoundPane goBackFn={goToDatasourcePage} />;\n    }\n\n    if (!pluginIds?.length) {\n      return (\n        <EmptyStateContainer>{\"Plugin is not installed\"}</EmptyStateContainer>\n      );\n    }\n\n    if (isCreating || !isEditorInitialized) {\n      return (\n        <LoadingContainer>\n          <Spinner size={30} />\n        </LoadingContainer>\n      );\n    }\n\n    return (\n      <QueryEditorForm\n        dataSources={dataSources}\n        editorConfig={editorConfig}\n        executedQueryData={responses[actionId]}\n        formData={this.props.formData}\n        isDeleting={isDeleting}\n        isRunning={isRunning}\n        location={this.props.location}\n        onCreateDatasourceClick={this.onCreateDatasourceClick}\n        onDeleteClick={this.handleDeleteClick}\n        onRunClick={this.handleRunClick}\n        runErrorMessage={runErrorMessage[actionId]}\n        settingConfig={settingConfig}\n        uiComponent={uiComponent}\n        updateActionResponseDisplayFormat={updateActionResponseDisplayFormat}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState, props: any): ReduxStateProps => {\n  const { apiId, queryId } = props.match.params;\n  const actionId = queryId || apiId;\n  const { runErrorMessage } = state.ui.queryPane;\n  const { plugins } = state.entities;\n\n  const { editorConfigs, settingConfigs } = plugins;\n\n  const action = getAction(state, actionId) as QueryAction | SaaSAction;\n  let pluginId;\n  if (action) {\n    pluginId = action.pluginId;\n  }\n\n  let editorConfig: any;\n\n  if (editorConfigs && pluginId) {\n    editorConfig = editorConfigs[pluginId];\n  }\n\n  let settingConfig: any;\n\n  if (settingConfigs && pluginId) {\n    settingConfig = settingConfigs[pluginId];\n  }\n\n  const initialValues = {};\n\n  if (editorConfig) {\n    merge(initialValues, getConfigInitialValues(editorConfig));\n  }\n\n  if (settingConfig) {\n    merge(initialValues, getConfigInitialValues(settingConfig));\n  }\n\n  // initialValues contains merge of action, editorConfig, settingsConfig and will be passed to redux form\n  merge(initialValues, action);\n\n  // @ts-expect-error: Types are not available\n  const actionObjectDiff: undefined | Diff<Action | undefined, Action>[] = diff(\n    action,\n    initialValues,\n  );\n\n  const allPlugins = getPlugins(state);\n  let uiComponent = UIComponentTypes.DbEditorForm;\n  if (!!pluginId) uiComponent = getUIComponent(pluginId, allPlugins);\n\n  const formData = getFormValues(QUERY_EDITOR_FORM_NAME)(state) as\n    | QueryAction\n    | SaaSAction;\n\n  return {\n    actionId,\n    pluginId,\n    plugins: allPlugins,\n    runErrorMessage,\n    pluginIds: getPluginIdsOfPackageNames(state, PLUGIN_PACKAGE_DBS),\n    dataSources: !!apiId\n      ? getDatasourceByPluginId(state, action?.pluginId)\n      : getDBAndRemoteDatasources(state),\n    responses: getActionResponses(state),\n    isRunning: state.ui.queryPane.isRunning[actionId],\n    isDeleting: state.ui.queryPane.isDeleting[actionId],\n    isSaas: !!apiId,\n    formData,\n    editorConfig,\n    settingConfig,\n    isCreating: state.ui.apiPane.isCreating,\n    isEditorInitialized: getIsEditorInitialized(state),\n    uiComponent,\n    applicationId: getCurrentApplicationId(state),\n    actionObjectDiff,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): ReduxDispatchProps => ({\n  deleteAction: (id: string, name: string) =>\n    dispatch(deleteAction({ id, name })),\n  runAction: (actionId: string) => dispatch(runAction(actionId)),\n  changeQueryPage: (queryId: string) => {\n    dispatch(changeQuery(queryId));\n  },\n  initFormEvaluation: (\n    editorConfig: any,\n    settingsConfig: any,\n    formId: string,\n  ) => {\n    dispatch(initFormEvaluations(editorConfig, settingsConfig, formId));\n  },\n  updateActionResponseDisplayFormat: ({\n    field,\n    id,\n    value,\n  }: UpdateActionPropertyActionPayload) => {\n    dispatch(setActionResponseDisplayFormat({ id, field, value }));\n  },\n  setActionProperty: (\n    actionId: string,\n    propertyName: string,\n    value: string,\n  ) => {\n    dispatch(setActionProperty({ actionId, propertyName, value }));\n  },\n  setQueryPaneResponsePaneHeight: (height) => {\n    dispatch(setQueryPaneResponsePaneHeight(height));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QueryEditor);\n","import * as Sentry from \"@sentry/react\";\n\n//Following function is the fix for the missing where key\n/**\n * NOTE:\n * Action object returned by getAction comes from state.entities.action\n * action api's payload is created from state.entities.action and response is saved in the same key\n * Data passed to redux form is the merge of values present in state.entities.action, editorConfig, settingsConfig and has the correct datastrucure\n * Data structure in state.entities.action is not correct\n * Q. What does the following fix do?\n * A. It calculates the diff between merged values and state.entities.action and saves the same in state.entities.action\n * There is another key form that holds the formData\n */\nexport function getPathAndValueFromActionDiffObject(actionObjectDiff: any) {\n  if (!actionObjectDiff) {\n    return {\n      path: undefined,\n      value: undefined,\n    };\n  } else {\n    let path = \"\";\n    let value = \"\";\n    // Loop through the diff objects in difference Array\n    for (let i = 0; i < actionObjectDiff.length; i++) {\n      //kind = N indicates a newly added property/element\n      //This property is present in initialValues but not in action object\n      if (\n        actionObjectDiff &&\n        actionObjectDiff[i].hasOwnProperty(\"kind\") &&\n        actionObjectDiff[i].path &&\n        Array.isArray(actionObjectDiff[i].path) &&\n        actionObjectDiff[i].path.length &&\n        actionObjectDiff[i]?.kind === \"N\"\n      ) {\n        // Calculate path from path[] in diff\n        path = actionObjectDiff[i].path.reduce(\n          (acc: string, item: number | string) => {\n            try {\n              if (typeof item === \"string\" && acc) {\n                acc += `${path}.${item}`;\n              } else if (typeof item === \"string\" && !acc) {\n                acc += `${item}`;\n              } else acc += `${path}[${item}]`;\n              return acc;\n            } catch (error) {\n              Sentry.captureException({\n                message: `Adding key: where failed, cannot create path`,\n                oldData: actionObjectDiff,\n              });\n            }\n          },\n          \"\",\n        );\n        // get value from diff object\n        value = actionObjectDiff[i]?.rhs;\n      }\n      return { path, value };\n    }\n  }\n}\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  moveJSCollectionRequest,\n  copyJSCollectionRequest,\n  deleteJSCollection,\n} from \"actions/jsActionActions\";\nimport { ContextMenuPopoverModifiers } from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport noop from \"lodash/noop\";\nimport TreeDropdown from \"pages/Editor/Explorer/TreeDropdown\";\nimport { getJSEntityName } from \"./helpers\";\nimport styled from \"styled-components\";\nimport { Icon, IconSize } from \"design-system-old\";\nimport { Intent, Position } from \"@blueprintjs/core\";\nimport {\n  CONTEXT_COPY,\n  CONTEXT_DELETE,\n  CONFIRM_CONTEXT_DELETE,\n  CONTEXT_MOVE,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { getPageListAsOptions } from \"selectors/entitiesSelector\";\nimport {\n  autoIndentCode,\n  getAutoIndentShortcutKeyText,\n} from \"components/editorComponents/CodeEditor/utils/autoIndentUtils\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { updateJSCollectionBody } from \"../../../../actions/jsPaneActions\";\nimport { IconName } from \"@blueprintjs/icons\";\n\ntype EntityContextMenuProps = {\n  id: string;\n  name: string;\n  className?: string;\n  pageId: string;\n  isChangePermitted?: boolean;\n  isDeletePermitted?: boolean;\n};\n\nexport const MoreActionablesContainer = styled.div<{ isOpen?: boolean }>`\n  width: 34px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: transparent;\n\n  &&&& span {\n    width: auto;\n  }\n\n  &&&& svg > path {\n    fill: ${(props) => props.theme.colors.treeDropdown.targetIcon.normal};\n  }\n\n  ${(props) =>\n    props.isOpen\n      ? `\n\t\tbackground-color: ${props.theme.colors.treeDropdown.targetBg};\n\n    &&&& svg > path {\n      fill: ${props.theme.colors.treeDropdown.targetIcon.hover};\n    }\n\t`\n      : null}\n\n  &:hover {\n    background-color: ${(props) => props.theme.colors.treeDropdown.targetBg};\n\n    &&&& svg > path {\n      fill: ${(props) => props.theme.colors.treeDropdown.targetIcon.hover};\n    }\n  }\n`;\n\nconst prettifyCodeKeyboardShortCut = getAutoIndentShortcutKeyText();\n\nexport function MoreJSCollectionsMenu(props: EntityContextMenuProps) {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(false);\n  const dispatch = useDispatch();\n  const { isChangePermitted = false, isDeletePermitted = false } = props;\n\n  const copyJSCollectionToPage = useCallback(\n    (actionId: string, actionName: string, pageId: string) => {\n      const nextEntityName = getJSEntityName();\n      dispatch(\n        copyJSCollectionRequest({\n          id: actionId,\n          destinationPageId: pageId,\n          name: nextEntityName(`${actionName}Copy`, pageId),\n        }),\n      );\n    },\n    [dispatch],\n  );\n\n  const moveJSCollectionToPage = useCallback(\n    (actionId: string, actionName: string, destinationPageId: string) => {\n      const nextEntityName = getJSEntityName();\n      dispatch(\n        moveJSCollectionRequest({\n          id: actionId,\n          destinationPageId,\n          name: nextEntityName(actionName, destinationPageId, false),\n        }),\n      );\n    },\n    [dispatch],\n  );\n  const deleteJSCollectionFromPage = useCallback(\n    (actionId: string, actionName: string) =>\n      dispatch(deleteJSCollection({ id: actionId, name: actionName })),\n    [dispatch],\n  );\n\n  const menuPages = useSelector(getPageListAsOptions);\n\n  const options = [\n    ...(isChangePermitted\n      ? [\n          {\n            icon: \"duplicate\" as IconName,\n            value: \"copy\",\n            onSelect: noop,\n            label: createMessage(CONTEXT_COPY),\n            children: menuPages.map((page) => {\n              return {\n                ...page,\n                onSelect: () =>\n                  copyJSCollectionToPage(props.id, props.name, page.id),\n              };\n            }),\n          },\n        ]\n      : []),\n    ...(isChangePermitted\n      ? [\n          {\n            icon: \"swap-horizontal\" as IconName,\n            value: \"move\",\n            onSelect: noop,\n            label: createMessage(CONTEXT_MOVE),\n            children:\n              menuPages.length > 1\n                ? menuPages\n                    .filter((page) => page.id !== props.pageId) // Remove current page from the list\n                    .map((page) => {\n                      return {\n                        ...page,\n                        onSelect: () =>\n                          moveJSCollectionToPage(props.id, props.name, page.id),\n                      };\n                    })\n                : [{ value: \"No Pages\", onSelect: noop, label: \"No Pages\" }],\n          },\n        ]\n      : []),\n    ...(isChangePermitted\n      ? [\n          {\n            value: \"prettify\",\n            icon: \"code\" as IconName,\n            subText: prettifyCodeKeyboardShortCut,\n            onSelect: () => {\n              /*\n              PS: Please do not remove ts-ignore from here, TS keeps suggesting that\n              the object is null, but that is not the case, and we need an\n              instance of the editor to pass to autoIndentCode function\n              */\n              // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n              // @ts-ignore\n              const editor = document.querySelector(\".CodeMirror\").CodeMirror;\n              autoIndentCode(editor);\n              dispatch(updateJSCollectionBody(editor.getValue(), props.id));\n              AnalyticsUtil.logEvent(\"PRETTIFY_CODE_MANUAL_TRIGGER\");\n            },\n            label: \"Prettify Code\",\n          },\n        ]\n      : []),\n    ...(isDeletePermitted\n      ? [\n          {\n            confirmDelete: confirmDelete,\n            icon: \"trash\" as IconName,\n            value: \"delete\",\n            onSelect: () => {\n              confirmDelete\n                ? deleteJSCollectionFromPage(props.id, props.name)\n                : setConfirmDelete(true);\n            },\n            label: confirmDelete\n              ? createMessage(CONFIRM_CONTEXT_DELETE)\n              : createMessage(CONTEXT_DELETE),\n            intent: Intent.DANGER,\n            className: \"t--apiFormDeleteBtn\",\n          },\n        ]\n      : []),\n  ];\n\n  return options.length > 0 ? (\n    <TreeDropdown\n      className={props.className}\n      defaultText=\"\"\n      menuWidth={260}\n      modifiers={ContextMenuPopoverModifiers}\n      onMenuToggle={(isOpen: boolean) => setIsMenuOpen(isOpen)}\n      onSelect={noop}\n      optionTree={options}\n      position={Position.LEFT_TOP}\n      selectedValue=\"\"\n      setConfirmDelete={setConfirmDelete}\n      toggle={\n        <MoreActionablesContainer\n          className={props.className}\n          isOpen={isMenuOpen}\n        >\n          <Icon name=\"context-menu\" size={IconSize.XXXL} />\n        </MoreActionablesContainer>\n      }\n    />\n  ) : null;\n}\n\nexport default MoreJSCollectionsMenu;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { removeSpecialChars } from \"utils/helpers\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { JSCollection } from \"entities/JSCollection\";\nimport { Classes } from \"@blueprintjs/core\";\nimport { saveJSObjectName } from \"actions/jsActionActions\";\nimport { getJSCollection, getPlugin } from \"selectors/entitiesSelector\";\nimport NameEditorComponent from \"components/utils/NameEditorComponent\";\nimport {\n  ACTION_NAME_PLACEHOLDER,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { PluginType } from \"entities/Action\";\nimport { Plugin } from \"api/PluginApi\";\nimport { Spinner } from \"@blueprintjs/core\";\nimport EditableText, {\n  EditInteractionKind,\n} from \"components/editorComponents/EditableText\";\n\nconst JSObjectNameWrapper = styled.div<{ page?: string }>`\n  min-width: 50%;\n  margin-right: 10px;\n  display: flex;\n  justify-content: flex-start;\n  align-content: center;\n  & > div {\n    display: flex;\n    max-width: 100%;\n    flex: 0 1 auto;\n    font-size: ${(props) => props.theme.fontSizes[5]}px;\n    font-weight: ${(props) => props.theme.fontWeights[2]};\n  }\n\n  ${(props) =>\n    props.page === \"JS_PANE\"\n      ? `  &&& .${Classes.EDITABLE_TEXT_CONTENT}, &&& .${Classes.EDITABLE_TEXT_INPUT} {\n    font-size: ${props.theme.typography.h3.fontSize}px;\n    line-height: ${props.theme.typography.h3.lineHeight}px !important;\n    letter-spacing: ${props.theme.typography.h3.letterSpacing}px;\n    font-weight: ${props.theme.typography.h3.fontWeight};\n  }`\n      : null}\n`;\n\ntype JSObjectNameEditorProps = {\n  /*\n    This prop checks if page is API Pane or Query Pane or Curl Pane\n    So, that we can toggle between ads editable-text component and existing editable-text component\n    Right now, it's optional so that it doesn't impact any other pages other than API Pane.\n    In future, when default component will be ads editable-text, then we can remove this prop.\n  */\n  page?: string;\n  disabled?: boolean;\n};\n\nconst JSIconWrapper = styled.img`\n  width: 24px;\n  height: 24px;\n  margin-right: 8px;\n  align-self: center;\n`;\n\nexport function JSObjectNameEditor(props: JSObjectNameEditorProps) {\n  const params = useParams<{ collectionId?: string; queryId?: string }>();\n\n  const currentJSObjectConfig:\n    | JSCollection\n    | undefined = useSelector((state: AppState) =>\n    getJSCollection(state, params.collectionId || \"\"),\n  );\n\n  const currentPlugin: Plugin | undefined = useSelector((state: AppState) =>\n    getPlugin(state, currentJSObjectConfig?.pluginId || \"\"),\n  );\n\n  return (\n    <NameEditorComponent\n      currentActionConfig={currentJSObjectConfig}\n      dispatchAction={saveJSObjectName}\n      pluginType={PluginType.JS}\n    >\n      {({\n        forceUpdate,\n        handleNameChange,\n        isInvalidNameForEntity,\n        isNew,\n        saveStatus,\n      }: {\n        forceUpdate: boolean;\n        handleNameChange: (value: string) => void;\n        isInvalidNameForEntity: (value: string) => string | boolean;\n        isNew: boolean;\n        saveStatus: { isSaving: boolean; error: boolean };\n      }) => (\n        <JSObjectNameWrapper page={props.page}>\n          <div>\n            {currentPlugin && (\n              <JSIconWrapper\n                alt={currentPlugin.name}\n                src={currentPlugin.iconLocation}\n              />\n            )}\n            <EditableText\n              className=\"t--js-action-name-edit-field\"\n              defaultValue={\n                currentJSObjectConfig ? currentJSObjectConfig.name : \"\"\n              }\n              disabled={props.disabled}\n              editInteractionKind={EditInteractionKind.SINGLE}\n              errorTooltipClass=\"t--action-name-edit-error\"\n              forceDefault={forceUpdate}\n              isEditingDefault={isNew}\n              isInvalid={isInvalidNameForEntity}\n              onTextChanged={handleNameChange}\n              placeholder={createMessage(ACTION_NAME_PLACEHOLDER, \"JS object\")}\n              type=\"text\"\n              updating={saveStatus.isSaving}\n              valueTransform={removeSpecialChars}\n            />\n            {saveStatus.isSaving && <Spinner size={16} />}\n          </div>\n        </JSObjectNameWrapper>\n      )}\n    </NameEditorComponent>\n  );\n}\n\nexport default JSObjectNameEditor;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Flag = styled.span`\n  padding: 2px 5px;\n  border: 1px solid #716e6e;\n  color: #716e6e;\n  text-transform: uppercase;\n  font-size: 10px;\n  font-weight: 600;\n  margin-right: 10px;\n`;\n\nfunction FlagBadge(props: { name: string }) {\n  return <Flag>{props.name}</Flag>;\n}\n\nexport default FlagBadge;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport FlagBadge from \"components/utils/FlagBadge\";\nimport { JSCollection } from \"entities/JSCollection\";\nimport {\n  Button,\n  Dropdown,\n  DropdownOnSelect,\n  DropdownContainer,\n  Size,\n  StyledButton,\n  TooltipComponent as Tooltip,\n} from \"design-system-old\";\nimport {\n  createMessage,\n  NO_JS_FUNCTION_TO_RUN,\n} from \"@appsmith/constants/messages\";\nimport { JSActionDropdownOption } from \"./utils\";\nimport { RUN_BUTTON_DEFAULTS, testLocators } from \"./constants\";\n\ntype Props = {\n  disabled: boolean;\n  isLoading: boolean;\n  jsCollection: JSCollection;\n  onButtonClick: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n  onSelect: DropdownOnSelect;\n  options: JSActionDropdownOption[];\n  selected: JSActionDropdownOption;\n  showTooltip: boolean;\n};\n\nexport type DropdownWithCTAWrapperProps = {\n  isDisabled: boolean;\n};\nconst disabledStyles = `\nopacity: 0.5;\npointer-events:none;\n`;\n\nconst DropdownWithCTAWrapper = styled.div<DropdownWithCTAWrapperProps>`\n  display: flex;\n\n  ${StyledButton} {\n    ${(props) =>\n      props.isDisabled &&\n      `\n    ${disabledStyles}\n    `}\n  }\n  ${DropdownContainer} {\n    ${(props) =>\n      props.isDisabled &&\n      `\n      ${disabledStyles}\n    `}\n  }\n`;\n\nexport function JSFunctionRun({\n  disabled,\n  isLoading,\n  jsCollection,\n  onButtonClick,\n  onSelect,\n  options,\n  selected,\n  showTooltip,\n}: Props) {\n  return (\n    <DropdownWithCTAWrapper isDisabled={disabled}>\n      <Dropdown\n        customBadge={<FlagBadge name=\"Async\" />}\n        cypressSelector=\"function-select-dropdown\"\n        height={RUN_BUTTON_DEFAULTS.HEIGHT}\n        onSelect={onSelect}\n        options={options}\n        selected={selected}\n        selectedHighlightBg={RUN_BUTTON_DEFAULTS.DROPDOWN_HIGHLIGHT_BG}\n        showLabelOnly\n        truncateOption\n        width=\"232px\"\n      />\n\n      <Tooltip\n        content={createMessage(NO_JS_FUNCTION_TO_RUN, jsCollection.name)}\n        disabled={!showTooltip}\n        hoverOpenDelay={50}\n      >\n        <Button\n          className={testLocators.runJSAction}\n          height={RUN_BUTTON_DEFAULTS.HEIGHT}\n          isLoading={isLoading}\n          onClick={onButtonClick}\n          size={Size.medium}\n          tag=\"button\"\n          text={RUN_BUTTON_DEFAULTS.CTA_TEXT}\n          type=\"button\"\n        />\n      </Tooltip>\n    </DropdownWithCTAWrapper>\n  );\n}\n","import { parse, Node } from \"acorn\";\nimport { ancestor } from \"acorn-walk\";\nimport { CodeEditorGutter } from \"components/editorComponents/CodeEditor\";\nimport { JSAction, JSCollection } from \"entities/JSCollection\";\nimport {\n  RUN_GUTTER_CLASSNAME,\n  RUN_GUTTER_ID,\n  NO_FUNCTION_DROPDOWN_OPTION,\n} from \"./constants\";\nimport { DropdownOption } from \"design-system-old\";\nimport { find, memoize } from \"lodash\";\nimport {\n  isLiteralNode,\n  isPropertyNode,\n  PropertyNode,\n  ECMA_VERSION,\n  NodeTypes,\n  SourceType,\n} from \"@shared/ast\";\nimport { EventLocation } from \"utils/AnalyticsUtil\";\n\nexport interface JSActionDropdownOption extends DropdownOption {\n  data: JSAction | null;\n}\n\nexport const getAST = memoize((code: string, sourceType: SourceType) =>\n  parse(code, {\n    ecmaVersion: ECMA_VERSION,\n    sourceType: sourceType,\n    locations: true, // Adds location data to each node\n  }),\n);\n\nexport const isCursorWithinNode = (\n  nodeLocation: acorn.SourceLocation,\n  cursorLineNumber: number,\n) => {\n  return (\n    nodeLocation.start.line <= cursorLineNumber &&\n    nodeLocation.end.line >= cursorLineNumber\n  );\n};\n\nconst getNameFromPropertyNode = (node: PropertyNode): string =>\n  isLiteralNode(node.key) ? String(node.key.value) : node.key.name;\n\n// Function to get start line of js function from code, returns null if function not found\nexport const getJSFunctionStartLineFromCode = (\n  code: string,\n  cursorLine: number,\n): { line: number; actionName: string } | null => {\n  let ast: Node = { end: 0, start: 0, type: \"\" };\n  let result: { line: number; actionName: string } | null = null;\n  try {\n    ast = getAST(code, SourceType.module);\n  } catch (e) {\n    return result;\n  }\n\n  ancestor(ast, {\n    Property(node, ancestors: Node[]) {\n      // We are only interested in identifiers at this depth (exported object keys)\n      const depth = ancestors.length - 3;\n      if (\n        isPropertyNode(node) &&\n        (node.value.type === NodeTypes.ArrowFunctionExpression ||\n          node.value.type === NodeTypes.FunctionExpression) &&\n        node.loc &&\n        isCursorWithinNode(node.loc, cursorLine + 1) &&\n        ancestors[depth] &&\n        ancestors[depth].type === NodeTypes.ExportDefaultDeclaration\n      ) {\n        // 1 is subtracted because codeMirror's line is zero-indexed, this isn't\n        result = {\n          line: node.loc.start.line - 1,\n          actionName: getNameFromPropertyNode(node),\n        };\n      }\n    },\n  });\n  return result;\n};\n\nexport const getJSPropertyLineFromName = (\n  code: string,\n  functionName: string,\n): { line: number; ch: number } | null => {\n  let ast: Node = { end: 0, start: 0, type: \"\" };\n  let result: { line: number; ch: number } | null = null;\n  try {\n    ast = getAST(code, SourceType.module);\n  } catch (e) {\n    return result;\n  }\n\n  ancestor(ast, {\n    Property(node, ancestors: Node[]) {\n      // We are only interested in identifiers at this depth (exported object keys)\n      const depth = ancestors.length - 3;\n      if (\n        isPropertyNode(node) &&\n        node.loc &&\n        getNameFromPropertyNode(node) === functionName &&\n        ancestors[depth] &&\n        ancestors[depth].type === NodeTypes.ExportDefaultDeclaration\n      ) {\n        // 1 is subtracted because codeMirror's line is zero-indexed, this isn't\n        result = {\n          line: node.loc.start.line - 1,\n          ch: node.loc.start.column,\n        };\n      }\n    },\n  });\n  return result;\n};\n\nexport const createGutterMarker = (gutterOnclick: () => void) => {\n  const marker = document.createElement(\"button\");\n  // For most browsers the default type of button is submit, this causes the page to reload when marker is clicked\n  // Set type to button, to prevent this behaviour\n  marker.type = \"button\";\n  marker.innerHTML = \"&#9654;\";\n  marker.classList.add(RUN_GUTTER_CLASSNAME);\n  marker.onmousedown = function(e) {\n    e.preventDefault();\n    gutterOnclick();\n  };\n  // Allows executing functions (via run gutter) when devtool is open\n  marker.ontouchstart = function(e) {\n    e.preventDefault();\n    gutterOnclick();\n  };\n  return marker;\n};\n\nexport const getJSFunctionLineGutter = (\n  jsActions: JSAction[],\n  runFunction: (jsAction: JSAction, from: EventLocation) => void,\n  showGutters: boolean,\n  onFocusAction: (jsAction: JSAction) => void,\n  isExecutePermitted: boolean,\n): CodeEditorGutter => {\n  const gutter: CodeEditorGutter = {\n    getGutterConfig: null,\n    gutterId: RUN_GUTTER_ID,\n  };\n  if (!showGutters || !jsActions.length) return gutter;\n\n  return {\n    getGutterConfig: (code: string, lineNumber: number) => {\n      const config = getJSFunctionStartLineFromCode(code, lineNumber);\n      const action = find(jsActions, [\"name\", config?.actionName]);\n      return config && action && isExecutePermitted\n        ? {\n            line: config.line,\n            element: createGutterMarker(() =>\n              runFunction(action, \"JS_OBJECT_GUTTER_RUN_BUTTON\"),\n            ),\n            isFocusedAction: () => {\n              onFocusAction(action);\n            },\n          }\n        : null;\n    },\n    gutterId: RUN_GUTTER_ID,\n  };\n};\n\nexport const convertJSActionsToDropdownOptions = (\n  JSActions: JSAction[],\n): JSActionDropdownOption[] => {\n  return JSActions.map(convertJSActionToDropdownOption);\n};\n\nexport const convertJSActionToDropdownOption = (\n  JSAction: JSAction,\n): JSActionDropdownOption => ({\n  label: JSAction.name,\n  value: JSAction.id,\n  data: JSAction,\n  hasCustomBadge: !!JSAction.actionConfiguration.isAsync,\n});\n\nexport const getActionFromJsCollection = (\n  actionId: string | null,\n  jsCollection: JSCollection,\n): JSAction | null => {\n  if (!actionId) return null;\n  return jsCollection.actions.find((action) => action.id === actionId) || null;\n};\n\n/**\n * Returns dropdown option based on priority and availability\n */\nexport const getJSActionOption = (\n  activeJSAction: JSAction | null,\n  jsActions: JSAction[],\n): JSActionDropdownOption => {\n  let jsActionOption = NO_FUNCTION_DROPDOWN_OPTION;\n  if (activeJSAction) {\n    jsActionOption = convertJSActionToDropdownOption(activeJSAction);\n  } else if (jsActions.length) {\n    jsActionOption = convertJSActionToDropdownOption(jsActions[0]);\n  }\n  return jsActionOption;\n};\n","import { updateFunctionProperty } from \"actions/jsPaneActions\";\nimport {\n  ASYNC_FUNCTION_SETTINGS_HEADING,\n  createMessage,\n  NO_ASYNC_FUNCTIONS,\n} from \"@appsmith/constants/messages\";\nimport {\n  AppIcon,\n  Radio,\n  RadioComponent,\n  TooltipComponent,\n} from \"design-system-old\";\nimport { JSAction } from \"entities/JSCollection\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { RADIO_OPTIONS, SETTINGS_HEADINGS } from \"./constants\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\n\ntype SettingsHeadingProps = {\n  text: string;\n  hasInfo?: boolean;\n  info?: string;\n  grow: boolean;\n};\n\ntype SettingsItemProps = {\n  action: JSAction;\n  disabled?: boolean;\n};\n\ntype JSFunctionSettingsProps = {\n  actions: JSAction[];\n  disabled?: boolean;\n};\n\nconst SettingRow = styled.div<{ isHeading?: boolean; noBorder?: boolean }>`\n  display: flex;\n  padding: 8px;\n  ${(props) =>\n    !props.noBorder &&\n    `\n  border-bottom: solid 1px ${props.theme.colors.table.border}};\n  `}\n\n  ${(props) =>\n    props.isHeading &&\n    `\n  background: #f8f8f8;\n  font-size: ${props.theme.typography.h5.fontSize}px;\n  `};\n`;\n\nconst StyledIcon = styled(AppIcon)`\n  width: max-content;\n  height: max-content;\n  & > svg {\n    width: 13px;\n    height: auto;\n  }\n`;\n\nconst SettingColumn = styled.div<{ grow?: boolean; isHeading?: boolean }>`\n  display: flex;\n  align-items: center;\n  flex-grow: ${(props) => (props.grow ? 1 : 0)};\n  padding: 5px 12px;\n  min-width: 250px;\n\n  ${(props) =>\n    props.isHeading &&\n    `\n  text-transform: uppercase;\n  font-weight: ${props.theme.fontWeights[2]};\n  font-size: ${props.theme.fontSizes[2]}px\n  margin-right: 9px;\n  `}\n\n  ${StyledIcon} {\n    margin-left: 8px;\n  }\n\n  ${Radio} {\n    margin-right: 20px;\n  }\n`;\n\nconst JSFunctionSettingsWrapper = styled.div`\n  display: flex;\n  height: 100%;\n  border-bottom: 1px solid ${(props) => props.theme.colors.apiPane.dividerBg};\n  border-top: 1px solid ${(props) => props.theme.colors.apiPane.dividerBg};\n  overflow: auto;\n`;\n\nconst SettingsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0px ${(props) => props.theme.spaces[13] - 2}px;\n  width: max-content;\n  min-width: 700px;\n  height: 100%;\n\n  & > h3 {\n    margin: 20px 0;\n    text-transform: capitalize;\n    font-size: ${(props) => props.theme.fontSizes[5]}px;\n    font-weight: ${(props) => props.theme.fontWeights[2]};\n  }\n`;\n\nfunction SettingsHeading({ grow, hasInfo, info, text }: SettingsHeadingProps) {\n  return (\n    <SettingColumn grow={grow} isHeading>\n      <span>{text}</span>\n      {hasInfo && info && (\n        <TooltipComponent content={createMessage(() => info)}>\n          <StyledIcon name=\"help\" />\n        </TooltipComponent>\n      )}\n    </SettingColumn>\n  );\n}\n\nfunction SettingsItem({ action, disabled = false }: SettingsItemProps) {\n  const dispatch = useDispatch();\n  const [executeOnPageLoad, setExecuteOnPageLoad] = useState(\n    String(!!action.executeOnLoad),\n  );\n  const [confirmBeforeExecute, setConfirmBeforeExecute] = useState(\n    String(!!action.confirmBeforeExecute),\n  );\n\n  const updateProperty = (value: boolean | number, propertyName: string) => {\n    dispatch(\n      updateFunctionProperty({\n        action: action,\n        propertyName: propertyName,\n        value: value,\n      }),\n    );\n  };\n  const onChangeExecuteOnPageLoad = (value: string) => {\n    setExecuteOnPageLoad(value);\n    updateProperty(value === \"true\", \"executeOnLoad\");\n\n    AnalyticsUtil.logEvent(\"JS_OBJECT_SETTINGS_CHANGED\", {\n      toggleSetting: \"ON_PAGE_LOAD\",\n      toggleValue: value,\n    });\n  };\n  const onChangeConfirmBeforeExecute = (value: string) => {\n    setConfirmBeforeExecute(value);\n    updateProperty(value === \"true\", \"confirmBeforeExecute\");\n\n    AnalyticsUtil.logEvent(\"JS_OBJECT_SETTINGS_CHANGED\", {\n      toggleSetting: \"CONFIRM_BEFORE_RUN\",\n      toggleValue: value,\n    });\n  };\n\n  return (\n    <SettingRow\n      className=\"t--async-js-function-settings\"\n      id={`${action.name}-settings`}\n    >\n      <SettingColumn grow>\n        <span>{action.name}</span>\n      </SettingColumn>\n      <SettingColumn className={`${action.name}-on-page-load-setting`}>\n        <RadioComponent\n          backgroundColor=\"#191919\"\n          defaultValue={executeOnPageLoad}\n          disabled={disabled}\n          name={`execute-on-page-load-${action.id}`}\n          onSelect={onChangeExecuteOnPageLoad}\n          options={RADIO_OPTIONS}\n        />\n      </SettingColumn>\n      <SettingColumn className={`${action.name}-confirm-before-execute`}>\n        <RadioComponent\n          backgroundColor=\"#191919\"\n          defaultValue={confirmBeforeExecute}\n          disabled={disabled}\n          name={`confirm-before-execute-${action.id}`}\n          onSelect={onChangeConfirmBeforeExecute}\n          options={RADIO_OPTIONS}\n        />\n      </SettingColumn>\n    </SettingRow>\n  );\n}\n\nfunction JSFunctionSettingsView({\n  actions,\n  disabled = false,\n}: JSFunctionSettingsProps) {\n  const asyncActions = actions.filter(\n    (action) => action.actionConfiguration.isAsync,\n  );\n  return (\n    <JSFunctionSettingsWrapper>\n      <SettingsContainer>\n        <h3>{createMessage(ASYNC_FUNCTION_SETTINGS_HEADING)}</h3>\n        <SettingRow isHeading>\n          {SETTINGS_HEADINGS.map((setting, index) => (\n            <SettingsHeading\n              grow={index === 0}\n              hasInfo={setting.hasInfo}\n              info={setting.info}\n              key={setting.key}\n              text={setting.text}\n            />\n          ))}\n        </SettingRow>\n        {asyncActions && asyncActions.length ? (\n          asyncActions.map((action) => (\n            <SettingsItem action={action} disabled={disabled} key={action.id} />\n          ))\n        ) : (\n          <SettingRow noBorder>\n            <SettingColumn>{createMessage(NO_ASYNC_FUNCTIONS)}</SettingColumn>\n          </SettingRow>\n        )}\n      </SettingsContainer>\n    </JSFunctionSettingsWrapper>\n  );\n}\n\nexport default JSFunctionSettingsView;\n","import React from \"react\";\nimport { Hotkey, Hotkeys } from \"@blueprintjs/core\";\nimport { HotkeysTarget } from \"@blueprintjs/core/lib/esnext/components/hotkeys/hotkeysTarget.js\";\nimport { JS_OBJECT_HOTKEYS_CLASSNAME } from \"./constants\";\n\ntype Props = {\n  runActiveJSFunction: (e: KeyboardEvent) => void;\n  children: React.ReactNode;\n};\n\n@HotkeysTarget\nclass JSObjectHotKeys extends React.Component<Props> {\n  public renderHotkeys() {\n    return (\n      <Hotkeys>\n        <Hotkey\n          allowInInput\n          combo=\"mod + enter\"\n          global\n          label=\"Run Js Function\"\n          onKeyDown={this.props.runActiveJSFunction}\n        />\n      </Hotkeys>\n    );\n  }\n\n  render() {\n    /* \n    Blueprint's v3 decorated component must return a single DOM element in its render() method, not a custom React component. \n    This constraint allows HotkeysTarget to inject event handlers without creating an extra wrapper element.\n    */\n    return (\n      <div className={JS_OBJECT_HOTKEYS_CLASSNAME}>{this.props.children}</div>\n    );\n  }\n}\n\nexport default JSObjectHotKeys;\n","import styled, { css } from \"styled-components\";\nimport FormRow from \"components/editorComponents/FormRow\";\nimport {\n  JS_OBJECT_HOTKEYS_CLASSNAME,\n  RUN_GUTTER_CLASSNAME,\n  RUN_GUTTER_ID,\n} from \"./constants\";\nimport { thinScrollbar } from \"constants/DefaultTheme\";\n\nexport const CodeEditorWithGutterStyles = css`\n  .${RUN_GUTTER_ID} {\n    width: 0.5em;\n    background: #f0f0f0;\n    margin-left: 5px;\n  }\n  .${RUN_GUTTER_CLASSNAME} {\n    cursor: pointer;\n    color: #f86a2b;\n  }\n  .CodeMirror-linenumbers {\n    width: max-content;\n  }\n  .CodeMirror-linenumber {\n    text-align: right;\n    padding-left: 0;\n  }\n\n  .cm-s-duotone-light.CodeMirror {\n    padding: 0;\n  }\n`;\n\nexport const FormWrapper = styled.div`\n  height: ${({ theme }) =>\n    `calc(100vh - ${theme.smallHeaderHeight} - ${theme.backBanner})`};\n  overflow: hidden;\n  .${JS_OBJECT_HOTKEYS_CLASSNAME} {\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  height: ${({ theme }) => `calc(100% - ${theme.backBanner})`};\n  overflow: hidden;\n  .t--no-binding-prompt {\n    display: none;\n  }\n  flex: 1;\n  padding: 20px 0px 0px 0px;\n`;\n\nexport const StyledFormRow = styled(FormRow)`\n  padding: 0px 20px;\n  flex: 0;\n`;\n\nexport const NameWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  input {\n    margin: 0;\n    box-sizing: border-box;\n  }\n`;\n\nexport const ActionButtons = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1 1 50%;\n  justify-content: flex-end;\n\n  & > div {\n    margin: 0 0 0 ${(props) => props.theme.spaces[7]}px;\n  }\n\n  button:last-child {\n    margin-left: ${(props) => props.theme.spaces[7]}px;\n    height: 30px;\n  }\n`;\n\nexport const SecondaryWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 50px);\n  overflow: hidden;\n`;\n\nexport const TabbedViewContainer = styled.div<{ isExecuting: boolean }>`\n  flex: 1;\n  overflow: auto;\n  position: relative;\n  border-top: 1px solid ${(props) => props.theme.colors.apiPane.dividerBg};\n  ${thinScrollbar}\n  ${FormRow} {\n    min-height: auto;\n    padding: ${(props) => props.theme.spaces[0]}px;\n    & > * {\n      margin-right: 0px;\n    }\n  }\n  &&& {\n    ul.react-tabs__tab-list {\n      padding: 0px ${(props) => props.theme.spaces[11]}px;\n      background-color: ${(props) =>\n        props.theme.colors.apiPane.responseBody.bg};\n    }\n    .react-tabs__tab-panel {\n      ${CodeEditorWithGutterStyles}\n      height: calc(100% - 32px);\n      background-color: ${(props) => props.theme.colors.apiPane.bg};\n      .CodeEditorTarget {\n        outline: none;\n      }\n      ${(props) =>\n        props.isExecuting &&\n        `\n        .${RUN_GUTTER_CLASSNAME} {\n        cursor: progress;\n      }\n      `}\n    }\n  }\n`;\n","import React, {\n  ChangeEvent,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { JSAction, JSCollection } from \"entities/JSCollection\";\nimport CloseEditor from \"components/editorComponents/CloseEditor\";\nimport MoreJSCollectionsMenu from \"../Explorer/JSActions/MoreJSActionsMenu\";\nimport {\n  DropdownOnSelect,\n  SearchSnippet,\n  TabComponent,\n} from \"design-system-old\";\nimport CodeEditor from \"components/editorComponents/CodeEditor\";\nimport {\n  EditorModes,\n  EditorSize,\n  EditorTheme,\n  TabBehaviour,\n} from \"components/editorComponents/CodeEditor/EditorConfig\";\nimport JSObjectNameEditor from \"./JSObjectNameEditor\";\nimport {\n  setActiveJSAction,\n  setJsPaneConfigSelectedTabIndex,\n  startExecutingJSFunction,\n  updateJSCollectionBody,\n} from \"actions/jsPaneActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useParams } from \"react-router\";\nimport { ExplorerURLParams } from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport JSResponseView from \"components/editorComponents/JSResponseView\";\nimport { isEmpty } from \"lodash\";\nimport equal from \"fast-deep-equal/es6\";\nimport { ENTITY_TYPE } from \"entities/DataTree/dataTreeFactory\";\nimport { JSFunctionRun } from \"./JSFunctionRun\";\nimport { AppState } from \"@appsmith/reducers\";\nimport {\n  getActiveJSActionId,\n  getIsExecutingJSAction,\n  getJSActions,\n  getJSCollectionParseErrors,\n} from \"selectors/entitiesSelector\";\nimport {\n  convertJSActionsToDropdownOptions,\n  convertJSActionToDropdownOption,\n  getActionFromJsCollection,\n  getJSActionOption,\n  getJSFunctionLineGutter,\n  getJSPropertyLineFromName,\n  JSActionDropdownOption,\n} from \"./utils\";\nimport JSFunctionSettingsView from \"./JSFunctionSettings\";\nimport JSObjectHotKeys from \"./JSObjectHotKeys\";\nimport {\n  ActionButtons,\n  Form,\n  FormWrapper,\n  NameWrapper,\n  SecondaryWrapper,\n  StyledFormRow,\n  TabbedViewContainer,\n} from \"./styledComponents\";\nimport { getJSPaneConfigSelectedTabIndex } from \"selectors/jsPaneSelectors\";\nimport { EventLocation } from \"utils/AnalyticsUtil\";\nimport {\n  hasDeleteActionPermission,\n  hasExecuteActionPermission,\n  hasManageActionPermission,\n} from \"@appsmith/utils/permissionHelpers\";\nimport { executeCommandAction } from \"actions/apiPaneActions\";\nimport { SlashCommand } from \"entities/Action\";\nimport {\n  setCodeEditorCursorAction,\n  setFocusableInputField,\n} from \"actions/editorContextActions\";\nimport history from \"utils/history\";\nimport { CursorPositionOrigin } from \"reducers/uiReducers/editorContextReducer\";\n\ninterface JSFormProps {\n  jsCollection: JSCollection;\n}\n\ntype Props = JSFormProps;\n\nfunction JSEditorForm({ jsCollection: currentJSCollection }: Props) {\n  const theme = EditorTheme.LIGHT;\n  const dispatch = useDispatch();\n  const { pageId } = useParams<ExplorerURLParams>();\n  const { hash } = useLocation();\n\n  const [disableRunFunctionality, setDisableRunFunctionality] = useState(false);\n\n  // Currently active response (only changes upon execution)\n  const [activeResponse, setActiveResponse] = useState<JSAction | null>(null);\n  const parseErrors = useSelector(\n    (state: AppState) =>\n      getJSCollectionParseErrors(state, currentJSCollection.name),\n    equal,\n  );\n  const jsActions = useSelector(\n    (state: AppState) => getJSActions(state, currentJSCollection.id),\n    equal,\n  );\n  const activeJSActionId = useSelector((state: AppState) =>\n    getActiveJSActionId(state, currentJSCollection.id),\n  );\n\n  const activeJSAction = getActionFromJsCollection(\n    activeJSActionId,\n    currentJSCollection,\n  );\n\n  const [selectedJSActionOption, setSelectedJSActionOption] = useState<\n    JSActionDropdownOption\n  >(getJSActionOption(activeJSAction, jsActions));\n\n  const isExecutingCurrentJSAction = useSelector((state: AppState) =>\n    getIsExecutingJSAction(\n      state,\n      currentJSCollection.id,\n      selectedJSActionOption.data?.id || \"\",\n    ),\n  );\n\n  useEffect(() => {\n    if (hash) {\n      // Hash here could mean to navigate (set cursor/focus) to a particular function\n      // If the hash has a function name in this JS object, we will set that\n      const actionName = hash.substring(1);\n      const position = getJSPropertyLineFromName(\n        currentJSCollection.body,\n        actionName,\n      );\n      if (position) {\n        // Resetting the focus and position based on the cmd click navigation\n        dispatch(setFocusableInputField(`${currentJSCollection.name}.body`));\n        dispatch(\n          setCodeEditorCursorAction(\n            `${currentJSCollection.name}.body`,\n            position,\n            CursorPositionOrigin.Navigation,\n          ),\n        );\n        // Replace to remove the hash and set back the original URL\n        history.replace(window.location.pathname + window.location.search);\n      }\n    }\n  }, [hash]);\n\n  const isChangePermitted = hasManageActionPermission(\n    currentJSCollection?.userPermissions || [],\n  );\n  const isExecutePermitted = hasExecuteActionPermission(\n    currentJSCollection?.userPermissions || [],\n  );\n  const isDeletePermitted = hasDeleteActionPermission(\n    currentJSCollection?.userPermissions || [],\n  );\n\n  // Triggered when there is a change in the code editor\n  const handleEditorChange = (valueOrEvent: ChangeEvent<any> | string) => {\n    const value: string =\n      typeof valueOrEvent === \"string\"\n        ? valueOrEvent\n        : valueOrEvent.target.value;\n\n    dispatch(updateJSCollectionBody(value, currentJSCollection.id));\n  };\n\n  // Executes JS action\n  const executeJSAction = (jsAction: JSAction, from: EventLocation) => {\n    setActiveResponse(jsAction);\n    if (jsAction.id !== selectedJSActionOption.data?.id)\n      setSelectedJSActionOption(convertJSActionToDropdownOption(jsAction));\n    dispatch(\n      setActiveJSAction({\n        jsCollectionId: currentJSCollection.id || \"\",\n        jsActionId: jsAction.id || \"\",\n      }),\n    );\n    dispatch(\n      startExecutingJSFunction({\n        collectionName: currentJSCollection.name || \"\",\n        action: jsAction,\n        collectionId: currentJSCollection.id || \"\",\n        from: from,\n      }),\n    );\n  };\n\n  const handleActiveActionChange = useCallback(\n    (jsAction: JSAction) => {\n      if (!jsAction) return;\n\n      // only update when there is a new active action\n      if (jsAction.id !== selectedJSActionOption.data?.id) {\n        setSelectedJSActionOption(convertJSActionToDropdownOption(jsAction));\n      }\n    },\n    [selectedJSActionOption],\n  );\n\n  const JSGutters = useMemo(\n    () =>\n      getJSFunctionLineGutter(\n        jsActions,\n        executeJSAction,\n        !parseErrors.length,\n        handleActiveActionChange,\n        isExecutePermitted,\n      ),\n    [jsActions, parseErrors, handleActiveActionChange, isExecutePermitted],\n  );\n\n  const handleJSActionOptionSelection: DropdownOnSelect = (\n    value,\n    dropDownOption: JSActionDropdownOption,\n  ) => {\n    dropDownOption.data &&\n      setSelectedJSActionOption(\n        convertJSActionToDropdownOption(dropDownOption.data),\n      );\n  };\n\n  const handleRunAction = (\n    event: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent,\n    from: EventLocation,\n  ) => {\n    event.preventDefault();\n    if (\n      !disableRunFunctionality &&\n      !isExecutingCurrentJSAction &&\n      selectedJSActionOption.data\n    ) {\n      executeJSAction(selectedJSActionOption.data, from);\n    }\n  };\n\n  useEffect(() => {\n    if (parseErrors.length || isEmpty(jsActions)) {\n      setDisableRunFunctionality(true);\n    } else {\n      setDisableRunFunctionality(false);\n    }\n  }, [parseErrors, jsActions, activeJSActionId]);\n\n  useEffect(() => {\n    // update the selectedJSActionOption when there is addition or removal of jsAction or function\n    setSelectedJSActionOption(getJSActionOption(activeJSAction, jsActions));\n  }, [jsActions, activeJSActionId]);\n\n  const blockCompletions = useMemo(() => {\n    if (selectedJSActionOption.label) {\n      const funcName = `${selectedJSActionOption.label}()`;\n      return [\n        {\n          parentPath: \"this\",\n          subPath: funcName,\n        },\n        {\n          parentPath: currentJSCollection.name,\n          subPath: funcName,\n        },\n      ];\n    }\n    return [];\n  }, [selectedJSActionOption.label, currentJSCollection.name]);\n\n  const selectedConfigTab = useSelector(getJSPaneConfigSelectedTabIndex);\n\n  const setSelectedConfigTab = useCallback((selectedIndex: number) => {\n    dispatch(setJsPaneConfigSelectedTabIndex(selectedIndex));\n  }, []);\n\n  return (\n    <FormWrapper>\n      <JSObjectHotKeys\n        runActiveJSFunction={(\n          event: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent,\n        ) => {\n          handleRunAction(event, \"KEYBOARD_SHORTCUT\");\n        }}\n      >\n        <CloseEditor />\n        <Form>\n          <StyledFormRow className=\"form-row-header\">\n            <NameWrapper className=\"t--nameOfJSObject\">\n              <JSObjectNameEditor\n                disabled={!isChangePermitted}\n                page=\"JS_PANE\"\n              />\n            </NameWrapper>\n            <ActionButtons className=\"t--formActionButtons\">\n              <MoreJSCollectionsMenu\n                className=\"t--more-action-menu\"\n                id={currentJSCollection.id}\n                isChangePermitted={isChangePermitted}\n                isDeletePermitted={isDeletePermitted}\n                name={currentJSCollection.name}\n                pageId={pageId}\n              />\n              <SearchSnippet\n                entityId={currentJSCollection?.id}\n                entityType={ENTITY_TYPE.JSACTION}\n                onClick={() => {\n                  dispatch(\n                    executeCommandAction({\n                      actionType: SlashCommand.NEW_SNIPPET,\n                      args: {\n                        entityId: currentJSCollection?.id,\n                        entityType: ENTITY_TYPE.JSACTION,\n                      },\n                    }),\n                  );\n                }}\n              />\n              <JSFunctionRun\n                disabled={disableRunFunctionality || !isExecutePermitted}\n                isLoading={isExecutingCurrentJSAction}\n                jsCollection={currentJSCollection}\n                onButtonClick={(\n                  event:\n                    | React.MouseEvent<HTMLElement, MouseEvent>\n                    | KeyboardEvent,\n                ) => {\n                  handleRunAction(event, \"JS_OBJECT_MAIN_RUN_BUTTON\");\n                }}\n                onSelect={handleJSActionOptionSelection}\n                options={convertJSActionsToDropdownOptions(jsActions)}\n                selected={selectedJSActionOption}\n                showTooltip={!selectedJSActionOption.data}\n              />\n            </ActionButtons>\n          </StyledFormRow>\n          <SecondaryWrapper>\n            <TabbedViewContainer isExecuting={isExecutingCurrentJSAction}>\n              <TabComponent\n                onSelect={setSelectedConfigTab}\n                selectedIndex={selectedConfigTab}\n                tabs={[\n                  {\n                    key: \"code\",\n                    title: \"Code\",\n                    panelComponent: (\n                      <CodeEditor\n                        blockCompletions={blockCompletions}\n                        className={\"js-editor\"}\n                        customGutter={JSGutters}\n                        dataTreePath={`${currentJSCollection.name}.body`}\n                        disabled={!isChangePermitted}\n                        folding\n                        height={\"100%\"}\n                        hideEvaluatedValue\n                        input={{\n                          value: currentJSCollection.body,\n                          onChange: handleEditorChange,\n                        }}\n                        isJSObject\n                        mode={EditorModes.JAVASCRIPT}\n                        placeholder=\"Let's write some code!\"\n                        showLightningMenu={false}\n                        showLineNumbers\n                        size={EditorSize.EXTENDED}\n                        tabBehaviour={TabBehaviour.INDENT}\n                        theme={theme}\n                      />\n                    ),\n                  },\n                  {\n                    key: \"settings\",\n                    title: \"Settings\",\n                    panelComponent: (\n                      <JSFunctionSettingsView\n                        actions={jsActions}\n                        disabled={!isChangePermitted}\n                      />\n                    ),\n                  },\n                ]}\n              />\n            </TabbedViewContainer>\n            <JSResponseView\n              currentFunction={activeResponse}\n              disabled={disableRunFunctionality || !isExecutePermitted}\n              errors={parseErrors}\n              isLoading={isExecutingCurrentJSAction}\n              jsObject={currentJSCollection}\n              onButtonClick={(\n                event:\n                  | React.MouseEvent<HTMLElement, MouseEvent>\n                  | KeyboardEvent,\n              ) => {\n                handleRunAction(event, \"JS_OBJECT_RESPONSE_RUN_BUTTON\");\n              }}\n              theme={theme}\n            />\n          </SecondaryWrapper>\n        </Form>\n      </JSObjectHotKeys>\n    </FormWrapper>\n  );\n}\n\nexport default JSEditorForm;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { JSCollection } from \"entities/JSCollection\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { connect } from \"react-redux\";\nimport JsEditorForm from \"./Form\";\nimport * as Sentry from \"@sentry/react\";\nimport { getJSCollectionById } from \"selectors/editorSelectors\";\nimport CenteredWrapper from \"components/designSystems/appsmith/CenteredWrapper\";\nimport Spinner from \"components/editorComponents/Spinner\";\nimport styled from \"styled-components\";\nimport EntityNotFoundPane from \"../EntityNotFoundPane\";\n\nconst LoadingContainer = styled(CenteredWrapper)`\n  height: 50%;\n`;\ninterface ReduxStateProps {\n  jsCollection: JSCollection | undefined;\n  isCreating: boolean;\n}\n\ntype Props = ReduxStateProps &\n  RouteComponentProps<{ apiId: string; pageId: string }>;\n\nclass JSEditor extends React.Component<Props> {\n  render() {\n    const { isCreating, jsCollection } = this.props;\n    if (isCreating) {\n      return (\n        <LoadingContainer>\n          <Spinner size={30} />\n        </LoadingContainer>\n      );\n    }\n    if (!!jsCollection) {\n      return <JsEditorForm jsCollection={jsCollection} />;\n    }\n    return <EntityNotFoundPane />;\n  }\n}\n\nconst mapStateToProps = (state: AppState, props: Props): ReduxStateProps => {\n  const jsCollection = getJSCollectionById(state, props);\n  const { isCreating } = state.ui.jsPane;\n\n  return {\n    jsCollection,\n    isCreating: isCreating,\n  };\n};\n\nexport default Sentry.withProfiler(connect(mapStateToProps)(JSEditor));\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\nimport { useSelector } from \"react-redux\";\nimport { getPluginImages } from \"selectors/entitiesSelector\";\nimport {\n  Classes,\n  DropdownOption,\n  RenderDropdownOptionType,\n  Text,\n  TextType,\n  TooltipComponent,\n} from \"design-system-old\";\nimport { FormIcons } from \"icons/FormIcons\";\nimport _ from \"lodash\";\n\n// ---------- Helpers and constants ----------\n\nexport const CONNECT_NEW_DATASOURCE_OPTION_ID = _.uniqueId();\n\n//  ---------- Styles ----------\n\nconst OptionWrapper = styled.div<{\n  disabled?: boolean;\n  selected?: boolean;\n  width?: string;\n}>`\n  padding: ${(props) =>\n    `${props.theme.spaces[3]}px ${props.theme.spaces[5]}px`};\n  ${(props) => (!props.disabled ? \"cursor: pointer\" : \"\")};\n  display: flex;\n  align-items: center;\n  user-select: none;\n  width: 100%;\n\n  &&& svg {\n    rect {\n      fill: ${(props) => props.theme.colors.dropdownIconBg};\n    }\n  }\n\n  .${Classes.TEXT} {\n    color: ${(props) =>\n      props.disabled ? Colors.GRAY2 : props.theme.colors.propertyPane.label};\n  }\n\n  .${Classes.ICON} {\n    margin-right: ${(props) => props.theme.spaces[5]}px;\n    svg {\n      path {\n        ${(props) => `fill: ${props.theme.colors.dropdown.icon}`};\n      }\n    }\n  }\n\n  &:hover,\n  &.highlight-option {\n    background-color: ${Colors.GALLERY_1};\n\n    &&& svg {\n      rect {\n        fill: ${(props) => props.theme.colors.textOnDarkBG};\n      }\n    }\n\n    .${Classes.ICON} {\n      svg {\n        path {\n          fill: ${(props) => props.theme.colors.dropdown.hovered.icon};\n        }\n      }\n    }\n  }\n`;\n\nconst CreateIconWrapper = styled.div`\n  margin: 0px 8px 0px 0px;\n  cursor: pointer;\n`;\n\nconst ImageWrapper = styled.div`\n  height: 20px;\n  width: auto;\n  display: flex;\n  align-items: center;\n  margin: 0px 8px 0px 0px;\n`;\n\nconst DatasourceImage = styled.img`\n  height: 20px;\n  width: auto;\n`;\n\ninterface DataSourceOptionType extends RenderDropdownOptionType {\n  cypressSelector: string;\n  optionWidth: string;\n}\n\nfunction DataSourceOption({\n  cypressSelector,\n  extraProps,\n  isHighlighted,\n  isSelectedNode,\n  option: dropdownOption,\n  optionClickHandler,\n  optionWidth,\n}: DataSourceOptionType) {\n  const { label } = dropdownOption as DropdownOption;\n  const { routeToCreateNewDatasource = () => null } = extraProps;\n  const pluginImages = useSelector(getPluginImages);\n  const isConnectNewDataSourceBtn =\n    CONNECT_NEW_DATASOURCE_OPTION_ID === (dropdownOption as DropdownOption).id;\n\n  const isSupportedForTemplate = (dropdownOption as DropdownOption).data\n    .isSupportedForTemplate;\n  const isNotSupportedDatasource =\n    !isSupportedForTemplate && !isSelectedNode && !isConnectNewDataSourceBtn;\n\n  const optionCypressSelector = isConnectNewDataSourceBtn\n    ? \".t--connectNewDatasource-option\"\n    : isSelectedNode\n    ? \"\"\n    : cypressSelector;\n  return (\n    <TooltipComponent\n      content=\"Not supported for template generation\"\n      disabled={\n        isSupportedForTemplate || isSelectedNode || isConnectNewDataSourceBtn\n      }\n      styles={{\n        width: \"100%\",\n      }}\n    >\n      <OptionWrapper\n        className={`t--dropdown-option ${\n          isHighlighted ? \"highlight-option\" : \"\"\n        }`}\n        data-cy={optionCypressSelector}\n        disabled={isNotSupportedDatasource}\n        key={(dropdownOption as DropdownOption).id}\n        onClick={() => {\n          if (isNotSupportedDatasource) {\n            return;\n          }\n          if (isConnectNewDataSourceBtn) {\n            routeToCreateNewDatasource(dropdownOption);\n          } else if (optionClickHandler) {\n            optionClickHandler(dropdownOption as DropdownOption);\n          }\n        }}\n        selected={isSelectedNode}\n        width={optionWidth}\n      >\n        {isConnectNewDataSourceBtn ? (\n          <CreateIconWrapper>\n            <FormIcons.CREATE_NEW_ICON\n              color={Colors.GRAY2}\n              height={20}\n              width={20}\n            />\n          </CreateIconWrapper>\n        ) : pluginImages[(dropdownOption as DropdownOption).data.pluginId] ? (\n          <ImageWrapper>\n            <DatasourceImage\n              alt=\"\"\n              className=\"dataSourceImage\"\n              src={\n                pluginImages[(dropdownOption as DropdownOption).data.pluginId]\n              }\n            />\n          </ImageWrapper>\n        ) : null}\n\n        <Text type={TextType.P1}>{label}</Text>\n      </OptionWrapper>\n    </TooltipComponent>\n  );\n}\n\nexport default DataSourceOption;\n","import { DropdownOption } from \"design-system-old\";\nimport { DatasourceTable } from \"entities/Datasource\";\nimport { PluginPackageName } from \"entities/Action\";\n\nexport type DropdownOptions = Array<DropdownOption>;\n\nexport interface DatasourceTableDropdownOption extends DropdownOption {\n  data: DatasourceTable;\n}\n\nexport const PluginFormInputFieldMap: Record<\n  string,\n  { DATASOURCE: string; TABLE: string; COLUMN: string }\n> = {\n  [PluginPackageName.MONGO]: {\n    DATASOURCE: \"MongoDB\",\n    TABLE: \"collection\",\n    COLUMN: \"field\",\n  },\n  [PluginPackageName.S3]: {\n    DATASOURCE: \"S3\",\n    TABLE: \"bucket\",\n    COLUMN: \"keys\",\n  },\n  [PluginPackageName.GOOGLE_SHEETS]: {\n    DATASOURCE: \"Google Sheets\",\n    TABLE: \"spreadsheet\",\n    COLUMN: \"keys\",\n  },\n  DEFAULT: {\n    DATASOURCE: \"SQL Based\",\n    TABLE: \"table\",\n    COLUMN: \"column\",\n  },\n};\n\nexport const DROPDOWN_DIMENSION = {\n  HEIGHT: \"36px\",\n  WIDTH: \"404px\",\n};\n\nexport const DEFAULT_DROPDOWN_OPTION = {\n  id: \"- Select -\",\n  label: \"- Select -\",\n  value: \"\",\n  onSelect: () => null,\n  data: {},\n};\n\nexport const ALLOWED_SEARCH_DATATYPE = [\n  \"text\",\n  \"string\",\n  \"char\",\n  \"varchar\",\n  \"character\",\n  \"text string\",\n];\n","import styled from \"styled-components\";\nimport { getTypographyByKey } from \"design-system-old\";\n\nexport const SelectWrapper = styled.div<{ width: string }>`\n  display: inline-block;\n  margin: 10px;\n  max-width: ${(props) => props.width};\n  width: 100%;\n`;\n\nexport const Label = styled.p`\n  flex: 1;\n  ${getTypographyByKey(\"p1\")};\n  white-space: nowrap;\n`;\n\nexport const Bold = styled.span`\n  font-weight: 500;\n`;\n","import React, { useState, useEffect, ReactElement, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getEditorConfig } from \"selectors/entitiesSelector\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { fetchPluginFormConfig } from \"actions/pluginActions\";\nimport { DROPDOWN_DIMENSION, DEFAULT_DROPDOWN_OPTION } from \"../constants\";\nimport { SelectWrapper, Label, Bold } from \"./styles\";\nimport { GeneratePagePayload } from \"./types\";\nimport styled from \"styled-components\";\nimport {\n  UseSheetListReturn,\n  UseSpreadSheetsReturn,\n  UseSheetColumnHeadersReturn,\n} from \"./hooks\";\nimport {\n  Dropdown,\n  DropdownOption,\n  FontWeight,\n  getTypographyByKey,\n  Icon,\n  IconSize,\n  Text,\n  TextType,\n  TextInput,\n  TooltipComponent as Tooltip,\n} from \"design-system-old\";\nimport { Colors } from \"constants/Colors\";\nimport { debounce } from \"lodash\";\nimport {\n  createMessage,\n  GEN_CRUD_TABLE_HEADER_LABEL,\n  GEN_CRUD_COLUMN_HEADER_TITLE,\n  GEN_CRUD_NO_COLUMNS,\n  GEN_CRUD_TABLE_HEADER_TOOLTIP_DESC,\n} from \"@appsmith/constants/messages\";\n\ntype Props = {\n  googleSheetPluginId: string;\n  selectedDatasource: DropdownOption;\n  selectedSpreadsheet: DropdownOption;\n  generatePageAction: (payload: GeneratePagePayload) => void;\n  renderSubmitButton: ({\n    disabled,\n    isLoading,\n    onSubmit,\n  }: {\n    onSubmit: () => void;\n    disabled: boolean;\n    isLoading: boolean;\n  }) => ReactElement<any, any>;\n  sheetsListProps: UseSheetListReturn;\n  spreadSheetsProps: UseSpreadSheetsReturn;\n  sheetColumnsHeaderProps: UseSheetColumnHeadersReturn;\n};\n\n// styles\n\nconst RoundBg = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 16px;\n  background-color: ${Colors.GRAY};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n`;\n\nconst ColumnName = styled.span`\n  ${getTypographyByKey(\"p3\")};\n  color: ${Colors.GRAY};\n  text-align: center;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst ColumnInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding: 0px 8px;\n  margin-bottom: 10px;\n  width: ${DROPDOWN_DIMENSION.WIDTH};\n  overflow: hidden;\n  flex-wrap: wrap;\n`;\n\nconst ColumnNameWrapper = styled.div`\n  display: flex;\n`;\n\nconst TooltipWrapper = styled.div`\n  margin-top: 2px;\n`;\n\nconst RowHeading = styled.p`\n  ${getTypographyByKey(\"p1\")};\n  margin-right: 10px;\n`;\n\n// As TextInput with dataType as number allows `e` as input, hence adding a number validator\n// to check for only whole numbers.\nexport function isNumberValidator(value: string) {\n  const isValid = (/^\\d+$/.test(value) && Number(value) > 0) || value === \"\";\n  return {\n    isValid: isValid,\n    message: !isValid ? \"Only numeric value allowed\" : \"\",\n  };\n}\n\n// constants\n\nconst MAX_COLUMNS_VISIBLE = 3;\n\n// ---------- GoogleSheetForm Component -------\n\nfunction GoogleSheetForm(props: Props) {\n  const {\n    generatePageAction,\n    googleSheetPluginId,\n    renderSubmitButton,\n    selectedDatasource,\n    selectedSpreadsheet,\n    sheetColumnsHeaderProps,\n    sheetsListProps,\n    spreadSheetsProps,\n  } = props;\n\n  const { fetchSheetsList, isFetchingSheetsList, sheetsList } = sheetsListProps;\n  const { fetchAllSpreadsheets } = spreadSheetsProps;\n  const {\n    columnHeaderList,\n    errorFetchingColumnHeaderList,\n    fetchColumnHeaderList,\n    isFetchingColumnHeaderList,\n  } = sheetColumnsHeaderProps;\n\n  const [tableHeaderIndex, setTableHeaderIndex] = useState<string>(\"1\");\n  const [selectedSheet, setSelectedSheet] = useState<DropdownOption>(\n    DEFAULT_DROPDOWN_OPTION,\n  );\n  const dispatch = useDispatch();\n\n  const googleSheetEditorConfig = useSelector((state: AppState) =>\n    getEditorConfig(state, googleSheetPluginId),\n  );\n\n  const [sheetQueryRequest, setSheetQueryRequest] = useState<\n    Record<any, string>\n  >({});\n\n  useEffect(() => {\n    // Check if google sheet editor config is fetched.\n    // if not, fetch it.\n\n    if (!googleSheetEditorConfig) {\n      dispatch(\n        fetchPluginFormConfig({\n          pluginId: selectedDatasource.data?.pluginId,\n        }),\n      );\n    }\n  }, [googleSheetEditorConfig]);\n\n  useEffect(() => {\n    if (googleSheetEditorConfig && googleSheetEditorConfig[0]) {\n      const requestObject: Record<any, string> = {};\n      const configs = googleSheetEditorConfig[0]?.children;\n      if (Array.isArray(configs)) {\n        for (let index = 0; index < configs.length; index += 2) {\n          const keyConfig = configs[index];\n          const valueConfig = configs[index + 1];\n          if (keyConfig && valueConfig) {\n            const key = keyConfig?.initialValue;\n            const value = valueConfig?.initialValue;\n            if (key && value !== undefined) requestObject[key] = value;\n          }\n        }\n      }\n      setSheetQueryRequest(requestObject);\n    }\n  }, [googleSheetEditorConfig]);\n\n  useEffect(() => {\n    // On change of datasource selection\n    // if googleSheetEditorConfig if fetched then get all spreadsheets\n    if (\n      selectedDatasource.value &&\n      selectedDatasource.id &&\n      googleSheetEditorConfig\n    ) {\n      fetchAllSpreadsheets({\n        selectedDatasourceId: selectedDatasource.id,\n        pluginId: selectedDatasource?.data?.pluginId,\n        requestObject: sheetQueryRequest,\n      });\n    }\n  }, [selectedDatasource.value, googleSheetEditorConfig, dispatch]);\n\n  // When user selects a spreadsheet\n  // Fetch all sheets inside that spreadsheet\n  useEffect(() => {\n    if (\n      selectedDatasource.value &&\n      selectedDatasource.id &&\n      selectedSpreadsheet.value\n    ) {\n      setSelectedSheet(DEFAULT_DROPDOWN_OPTION);\n      fetchSheetsList({\n        requestObject: sheetQueryRequest,\n        selectedDatasourceId: selectedDatasource.id,\n        selectedSpreadsheetUrl: selectedSpreadsheet.value,\n        pluginId: selectedDatasource?.data?.pluginId,\n      });\n    }\n  }, [\n    selectedSpreadsheet.value,\n    selectedDatasource.id,\n    selectedDatasource.value,\n    dispatch,\n    fetchSheetsList,\n  ]);\n\n  const onSelectSheetOption = (\n    sheetValue: string | undefined,\n    sheetObj: DropdownOption | undefined,\n  ) => {\n    if (sheetValue && sheetObj) {\n      setSelectedSheet(sheetObj);\n      if (selectedDatasource.id && selectedSpreadsheet.value) {\n        fetchColumnHeaderList({\n          selectedDatasourceId: selectedDatasource.id,\n          selectedSpreadsheetUrl: selectedSpreadsheet.value,\n          sheetName: sheetValue,\n          tableHeaderIndex,\n          pluginId: selectedDatasource?.data?.pluginId,\n          requestObject: sheetQueryRequest,\n        });\n      }\n    }\n  };\n\n  const onSubmit = () => {\n    if (selectedSpreadsheet.value) {\n      const columns: string[] = [];\n      columnHeaderList.forEach(({ value }) => {\n        if (value) columns.push(value);\n      });\n      const payload = {\n        columns,\n        searchColumn: \"\",\n        tableName: selectedSheet.value || \"\",\n        pluginSpecificParams: {\n          sheetUrl: selectedSpreadsheet.value,\n          tableHeaderIndex,\n          sheetName: selectedSheet.value,\n        },\n      };\n      generatePageAction(payload);\n    }\n  };\n\n  const debouncedFetchColumns = useCallback(\n    debounce((value: string) => {\n      if (\n        selectedDatasource.id &&\n        selectedSpreadsheet.value &&\n        selectedSheet.value\n      ) {\n        fetchColumnHeaderList({\n          selectedDatasourceId: selectedDatasource.id,\n          selectedSpreadsheetUrl: selectedSpreadsheet.value,\n          pluginId: selectedDatasource?.data?.pluginId,\n          sheetName: selectedSheet.value,\n          tableHeaderIndex: value,\n          requestObject: sheetQueryRequest,\n        });\n      }\n    }, 200),\n    [selectedSheet, selectedDatasource, selectedSheet],\n  );\n\n  const tableHeaderIndexChangeHandler = (value: string) => {\n    if (isNumberValidator(value).isValid) {\n      setTableHeaderIndex(value);\n      debouncedFetchColumns(value);\n    }\n  };\n\n  return (\n    <>\n      {selectedSpreadsheet.value ? (\n        <SelectWrapper className=\"space-y-2\" width={DROPDOWN_DIMENSION.WIDTH}>\n          <Label>\n            Select sheet from <Bold>{selectedSpreadsheet.label}</Bold>\n          </Label>\n          <Dropdown\n            cypressSelector=\"t--sheetName-dropdown\"\n            dropdownMaxHeight={\"300px\"}\n            height={DROPDOWN_DIMENSION.HEIGHT}\n            isLoading={isFetchingSheetsList}\n            onSelect={onSelectSheetOption}\n            optionWidth={DROPDOWN_DIMENSION.WIDTH}\n            options={sheetsList}\n            selected={selectedSheet}\n            showLabelOnly\n            width={DROPDOWN_DIMENSION.WIDTH}\n          />\n        </SelectWrapper>\n      ) : null}\n\n      {selectedSheet.value ? (\n        <>\n          <SelectWrapper className=\"space-y-2\" width={DROPDOWN_DIMENSION.WIDTH}>\n            <Row>\n              <RowHeading>\n                {createMessage(GEN_CRUD_TABLE_HEADER_LABEL)}\n              </RowHeading>\n              <TooltipWrapper>\n                <Tooltip\n                  content={createMessage(GEN_CRUD_TABLE_HEADER_TOOLTIP_DESC)}\n                  hoverOpenDelay={200}\n                >\n                  <RoundBg>\n                    <Icon\n                      fillColor={Colors.WHITE}\n                      hoverFillColor={Colors.WHITE}\n                      name=\"help\"\n                      size={IconSize.XXS}\n                    />\n                  </RoundBg>\n                </Tooltip>\n              </TooltipWrapper>\n            </Row>\n            <TextInput\n              cypressSelector=\"t--tableHeaderIndex\"\n              dataType=\"text\"\n              fill\n              onChange={tableHeaderIndexChangeHandler}\n              placeholder=\"Table Header Index\"\n              value={tableHeaderIndex}\n            />\n          </SelectWrapper>\n          <ColumnInfoWrapper>\n            {columnHeaderList.length ? (\n              <>\n                <Text type={TextType.P3} weight={FontWeight.BOLD}>\n                  {createMessage(GEN_CRUD_COLUMN_HEADER_TITLE)} :&nbsp;\n                </Text>\n                {columnHeaderList\n                  .slice(0, MAX_COLUMNS_VISIBLE)\n                  .map((column, index) => (\n                    <ColumnNameWrapper key={column.id}>\n                      <ColumnName>{column.label}</ColumnName>\n                      {columnHeaderList.length - 1 === index ? null : (\n                        <ColumnName>,&nbsp;</ColumnName>\n                      )}\n                    </ColumnNameWrapper>\n                  ))}\n                {columnHeaderList.length > MAX_COLUMNS_VISIBLE ? (\n                  <ColumnName>\n                    and +{columnHeaderList.length - MAX_COLUMNS_VISIBLE} more.\n                  </ColumnName>\n                ) : (\n                  \"\"\n                )}\n              </>\n            ) : (\n              <ColumnName>{createMessage(GEN_CRUD_NO_COLUMNS)}</ColumnName>\n            )}\n          </ColumnInfoWrapper>\n        </>\n      ) : null}\n\n      {selectedSheet.value\n        ? renderSubmitButton({\n            onSubmit,\n            disabled:\n              !columnHeaderList.length ||\n              isFetchingColumnHeaderList ||\n              !!errorFetchingColumnHeaderList,\n            isLoading: isFetchingColumnHeaderList,\n          })\n        : null}\n    </>\n  );\n}\n\nexport default GoogleSheetForm;\n","import { useEffect, useState, useCallback } from \"react\";\nimport { DropdownOptions } from \"../constants\";\nimport { Datasource } from \"entities/Datasource\";\nimport { GenerateCRUDEnabledPluginMap } from \"api/PluginApi\";\nimport { CONNECT_NEW_DATASOURCE_OPTION_ID } from \"../DataSourceOption\";\nimport {\n  executeDatasourceQuery,\n  executeDatasourceQuerySuccessPayload,\n} from \"actions/datasourceActions\";\nimport { DropdownOption } from \"design-system-old\";\nimport { useDispatch } from \"react-redux\";\n\nexport const FAKE_DATASOURCE_OPTION = {\n  CONNECT_NEW_DATASOURCE_OPTION: {\n    id: CONNECT_NEW_DATASOURCE_OPTION_ID,\n    label: \"Connect New Datasource\",\n    value: \"Connect New Datasource\",\n    data: {\n      pluginId: \"\",\n    },\n  },\n};\n\nexport const useDatasourceOptions = ({\n  datasources,\n  generateCRUDSupportedPlugin,\n}: {\n  datasources: Datasource[];\n  generateCRUDSupportedPlugin: GenerateCRUDEnabledPluginMap;\n}) => {\n  const [dataSourceOptions, setDataSourceOptions] = useState<DropdownOptions>(\n    [],\n  );\n\n  useEffect(() => {\n    // On mount of component and on change of datasources, Update the list.\n    const unSupportedDatasourceOptions: DropdownOptions = [];\n    const supportedDatasourceOptions: DropdownOptions = [];\n    let newDataSourceOptions: DropdownOptions = [];\n    newDataSourceOptions.push(\n      FAKE_DATASOURCE_OPTION.CONNECT_NEW_DATASOURCE_OPTION,\n    );\n    datasources.forEach(({ id, isValid, name, pluginId }) => {\n      const datasourceObject = {\n        id,\n        label: name,\n        value: name,\n        data: {\n          pluginId,\n          isSupportedForTemplate: !!generateCRUDSupportedPlugin[pluginId],\n          isValid,\n        },\n      };\n      if (generateCRUDSupportedPlugin[pluginId])\n        supportedDatasourceOptions.push(datasourceObject);\n      else {\n        unSupportedDatasourceOptions.push(datasourceObject);\n      }\n    });\n    newDataSourceOptions = newDataSourceOptions.concat(\n      supportedDatasourceOptions,\n      unSupportedDatasourceOptions,\n    );\n    setDataSourceOptions(newDataSourceOptions);\n  }, [datasources, setDataSourceOptions, generateCRUDSupportedPlugin]);\n  return dataSourceOptions;\n};\n\n// const GOOGLE_SHEET_METHODS = {\n//   GET_ALL_SPREADSHEETS: \"LIST\", // Get all the spreadsheets\n//   GET_ALL_SHEETS: \"INFO\", // fetch all the sub-sheets\n//   GET_ALL_COLUMNS: \"GET_STRUCTURE\", // Get column names\n// };\n\n// const demoRequest: Record<any, string> = {\n//   method: \"\",\n//   sheetUrl: \"\",\n//   range: \"\",\n//   spreadsheetName: \"\",\n//   tableHeaderIndex: \"1\",\n//   queryFormat: \"ROWS\",\n//   rowLimit: \"\",\n//   sheetName: \"\",\n//   rowOffset: \"\",\n//   rowObject: \"\",\n//   rowObjects: \"\",\n//   rowIndex: \"\",\n//   deleteFormat: \"SHEET\",\n// };\n\ntype FetchAllSpreadSheets = {\n  selectedDatasourceId: string;\n  pluginId: string;\n  requestObject?: Record<any, string>;\n};\n\nexport type UseSpreadSheetsReturn = {\n  fetchAllSpreadsheets: ({\n    requestObject,\n    selectedDatasourceId,\n  }: FetchAllSpreadSheets) => void;\n  isFetchingSpreadsheets: boolean;\n  failedFetchingSpreadsheets: boolean;\n};\n\nexport const useSpreadSheets = ({\n  setSelectedDatasourceIsInvalid,\n  setSelectedDatasourceTableOptions,\n}: {\n  setSelectedDatasourceIsInvalid: (isInvalid: boolean) => void;\n  setSelectedDatasourceTableOptions: (tableOptions: DropdownOptions) => void;\n}): UseSpreadSheetsReturn => {\n  const dispatch = useDispatch();\n\n  // const [spreadsheetsList, setSpreadsheets] = useState<DropdownOption[]>([]);\n\n  const [isFetchingSpreadsheets, setIsFetchingSpreadsheets] = useState<boolean>(\n    false,\n  );\n  const [failedFetchingSpreadsheets, setFailedFetchingSpreadsheets] = useState<\n    boolean\n  >(false);\n\n  // TODO :- Create loading state and set Loading state false on success or error\n  const onFetchAllSpreadsheetFailure = useCallback(() => {\n    setIsFetchingSpreadsheets(false);\n    setFailedFetchingSpreadsheets(true);\n  }, [setIsFetchingSpreadsheets]);\n\n  const onFetchAllSpreadsheetSuccess = useCallback(\n    (\n      payload: executeDatasourceQuerySuccessPayload<\n        Array<{ label: string; value: string }>\n      >,\n    ) => {\n      setIsFetchingSpreadsheets(false);\n      if (payload.data && payload.data.trigger) {\n        const spreadSheets = payload.data.trigger;\n\n        if (Array.isArray(spreadSheets)) {\n          setSelectedDatasourceTableOptions(spreadSheets);\n        } else {\n          // to handle error like \"401 Unauthorized\"\n          setSelectedDatasourceIsInvalid(true);\n        }\n      }\n    },\n    [\n      setSelectedDatasourceIsInvalid,\n      setSelectedDatasourceTableOptions,\n      setIsFetchingSpreadsheets,\n    ],\n  );\n\n  const fetchAllSpreadsheets = useCallback(\n    ({\n      pluginId,\n      requestObject,\n      selectedDatasourceId,\n    }: FetchAllSpreadSheets) => {\n      setIsFetchingSpreadsheets(true);\n      setFailedFetchingSpreadsheets(false);\n      const formattedRequestData = {\n        datasourceId: selectedDatasourceId,\n        displayType: \"DROP_DOWN\",\n        pluginId,\n        requestType: \"SPREADSHEET_SELECTOR\",\n        ...requestObject,\n      };\n      dispatch(\n        executeDatasourceQuery({\n          payload: {\n            datasourceId: selectedDatasourceId,\n            data: formattedRequestData,\n          },\n          onSuccessCallback: onFetchAllSpreadsheetSuccess,\n          onErrorCallback: onFetchAllSpreadsheetFailure,\n        }),\n      );\n    },\n    [\n      onFetchAllSpreadsheetSuccess,\n      onFetchAllSpreadsheetFailure,\n      setIsFetchingSpreadsheets,\n      setFailedFetchingSpreadsheets,\n    ],\n  );\n\n  return {\n    fetchAllSpreadsheets,\n    // spreadsheetsList,\n    isFetchingSpreadsheets,\n    failedFetchingSpreadsheets,\n  };\n};\n\n// Types\n\nexport interface GridProperties {\n  rowCount: number;\n  columnCount: number;\n}\n\nexport interface Sheet {\n  sheetId: number;\n  title: string;\n  index: number;\n  sheetType: string;\n  gridProperties: GridProperties;\n}\n\nexport type Sheets = Sheet[];\n\nexport const getSheetUrl = (sheetId: string): string =>\n  `https://docs.google.com/spreadsheets/d/${sheetId}/edit#gid=0`;\n\nexport type FetchSheetsList = {\n  selectedDatasourceId: string;\n  selectedSpreadsheetUrl: string;\n  pluginId: string;\n  requestObject?: Record<any, string>;\n};\n\nexport type UseSheetListReturn = {\n  sheetsList: DropdownOption[];\n  isFetchingSheetsList: boolean;\n  failedFetchingSheetsList: boolean;\n  fetchSheetsList: ({\n    requestObject,\n    selectedDatasourceId,\n    selectedSpreadsheetUrl,\n  }: FetchSheetsList) => void;\n};\n\nexport const useSheetsList = (): UseSheetListReturn => {\n  const dispatch = useDispatch();\n\n  const [sheetsList, setSheetsList] = useState<DropdownOption[]>([]);\n\n  const [isFetchingSheetsList, setIsFetchingSheetsList] = useState<boolean>(\n    false,\n  );\n  const [failedFetchingSheetsList, setFailedFetchingSheetsList] = useState<\n    boolean\n  >(false);\n\n  const onFetchAllSheetFailure = useCallback(() => {\n    setIsFetchingSheetsList(false);\n    setFailedFetchingSheetsList(true);\n  }, [setIsFetchingSheetsList]);\n\n  const onFetchAllSheetSuccess = useCallback(\n    (\n      payload: executeDatasourceQuerySuccessPayload<\n        Array<{ label: string; value: string }>\n      >,\n    ) => {\n      setIsFetchingSheetsList(false);\n      if (payload.data && payload.data.trigger) {\n        const responseBody = payload.data.trigger;\n        if (Array.isArray(responseBody)) {\n          setSheetsList(responseBody);\n        } else {\n          // to handle error like \"401 Unauthorized\"\n        }\n      }\n    },\n    [setSheetsList, setIsFetchingSheetsList],\n  );\n\n  const fetchSheetsList = useCallback(\n    ({\n      pluginId,\n      // requestObject,\n      selectedDatasourceId,\n      selectedSpreadsheetUrl,\n    }: FetchSheetsList) => {\n      setSheetsList([]);\n      setIsFetchingSheetsList(true);\n      setFailedFetchingSheetsList(false);\n      const formattedRequestData = {\n        datasourceId: selectedDatasourceId,\n        displayType: \"DROP_DOWN\",\n        parameters: {\n          sheetUrl: selectedSpreadsheetUrl,\n        },\n        pluginId: pluginId,\n        requestType: \"SHEET_SELECTOR\",\n      };\n      dispatch(\n        executeDatasourceQuery({\n          payload: {\n            datasourceId: selectedDatasourceId,\n            data: formattedRequestData,\n          },\n          onSuccessCallback: onFetchAllSheetSuccess,\n          onErrorCallback: onFetchAllSheetFailure,\n        }),\n      );\n    },\n    [\n      setSheetsList,\n      onFetchAllSheetSuccess,\n      onFetchAllSheetFailure,\n      setIsFetchingSheetsList,\n      setFailedFetchingSheetsList,\n    ],\n  );\n\n  return {\n    sheetsList,\n    isFetchingSheetsList,\n    failedFetchingSheetsList,\n    fetchSheetsList,\n  };\n};\n\nexport type FetchColumnHeaderListParams = {\n  selectedDatasourceId: string;\n  selectedSpreadsheetUrl: string;\n  sheetName: string;\n  pluginId: string;\n  tableHeaderIndex: string;\n  requestObject?: Record<any, string>; //possily unneccesary\n};\n\nexport type UseSheetColumnHeadersReturn = {\n  columnHeaderList: DropdownOption[];\n  isFetchingColumnHeaderList: boolean;\n  errorFetchingColumnHeaderList: string;\n  fetchColumnHeaderList: ({\n    selectedDatasourceId,\n    selectedSpreadsheetUrl,\n    sheetName,\n    tableHeaderIndex,\n  }: FetchColumnHeaderListParams) => void;\n};\n\nexport const useSheetColumnHeaders = () => {\n  const dispatch = useDispatch();\n\n  const [columnHeaderList, setColumnHeaderList] = useState<DropdownOption[]>(\n    [],\n  );\n\n  const [isFetchingColumnHeaderList, setIsFetchingColumnHeaderList] = useState<\n    boolean\n  >(false);\n  const [\n    errorFetchingColumnHeaderList,\n    setErrorFetchingColumnHeaderList,\n  ] = useState<string>(\"\");\n\n  const onFetchColumnHeadersFailure = useCallback(\n    (error: string) => {\n      setIsFetchingColumnHeaderList(false);\n      setErrorFetchingColumnHeaderList(error);\n      setColumnHeaderList([]);\n    },\n    [setErrorFetchingColumnHeaderList, setIsFetchingColumnHeaderList],\n  );\n\n  const onFetchColumnHeadersSuccess = useCallback(\n    (\n      payload: executeDatasourceQuerySuccessPayload<Record<string, string>[]>,\n    ) => {\n      setIsFetchingColumnHeaderList(false);\n\n      if (payload.data && payload.data.trigger) {\n        const responseBody = payload.data.trigger;\n        if (Array.isArray(responseBody)) {\n          setColumnHeaderList(responseBody);\n        } else {\n          let error = \"Failed fetching Column headers\";\n          if (typeof responseBody === \"string\") {\n            error = responseBody;\n          }\n          setColumnHeaderList([]);\n          setErrorFetchingColumnHeaderList(error);\n        }\n      }\n    },\n    [\n      setColumnHeaderList,\n      setIsFetchingColumnHeaderList,\n      setErrorFetchingColumnHeaderList,\n    ],\n  );\n\n  const fetchColumnHeaderList = useCallback(\n    (params: FetchColumnHeaderListParams) => {\n      setIsFetchingColumnHeaderList(true);\n      setErrorFetchingColumnHeaderList(\"\");\n      const formattedRequestData = {\n        datasourceId: params.selectedDatasourceId,\n        displayType: \"DROP_DOWN\",\n        parameters: {\n          sheetName: params.sheetName,\n          sheetUrl: params.selectedSpreadsheetUrl,\n          tableHeaderIndex: params.tableHeaderIndex,\n        },\n        pluginId: params.pluginId,\n        requestType: \"COLUMNS_SELECTOR\",\n      };\n\n      dispatch(\n        executeDatasourceQuery({\n          payload: {\n            datasourceId: params.selectedDatasourceId,\n            data: formattedRequestData,\n          },\n          onSuccessCallback: onFetchColumnHeadersSuccess,\n          onErrorCallback: onFetchColumnHeadersFailure,\n        }),\n      );\n    },\n    [\n      onFetchColumnHeadersSuccess,\n      onFetchColumnHeadersFailure,\n      setIsFetchingColumnHeaderList,\n      setErrorFetchingColumnHeaderList,\n    ],\n  );\n\n  return {\n    columnHeaderList,\n    isFetchingColumnHeaderList,\n    errorFetchingColumnHeaderList,\n    fetchColumnHeaderList,\n  };\n};\n\nconst payload = [\n  {\n    value: \"LIST_BUCKETS\",\n  },\n];\n\nexport const useS3BucketList = () => {\n  const dispatch = useDispatch();\n\n  const [bucketList, setBucketList] = useState<Array<string>>([]);\n  const [isFetchingBucketList, setIsFetchingBucketList] = useState<boolean>(\n    false,\n  );\n  const [failedFetchingBucketList, setFailedFetchingBucketList] = useState<\n    boolean\n  >(false);\n  const onFetchBucketSuccess = useCallback(\n    (\n      payload: executeDatasourceQuerySuccessPayload<{\n        bucketList: Array<string>;\n      }>,\n    ) => {\n      setIsFetchingBucketList(false);\n      if (payload.data && payload.data.body) {\n        const payloadBody = payload.data.body;\n        if (Array.isArray(payloadBody.bucketList)) {\n          const { bucketList: list = [] } = payloadBody;\n          setBucketList(list);\n        }\n      }\n    },\n    [setBucketList, setIsFetchingBucketList],\n  );\n\n  const onFetchBucketFailure = useCallback(() => {\n    setIsFetchingBucketList(false);\n    setFailedFetchingBucketList(true);\n  }, [setIsFetchingBucketList]);\n\n  const fetchBucketList = useCallback(\n    ({ selectedDatasource }: { selectedDatasource: DropdownOption }) => {\n      if (selectedDatasource.id) {\n        setIsFetchingBucketList(true);\n        setFailedFetchingBucketList(false);\n        dispatch(\n          executeDatasourceQuery({\n            payload: {\n              datasourceId: selectedDatasource.id,\n              data: payload,\n            },\n            onSuccessCallback: onFetchBucketSuccess,\n            onErrorCallback: onFetchBucketFailure,\n          }),\n        );\n      }\n    },\n    [onFetchBucketSuccess, onFetchBucketFailure, setIsFetchingBucketList],\n  );\n\n  return {\n    bucketList,\n    isFetchingBucketList,\n    failedFetchingBucketList,\n    fetchBucketList,\n  };\n};\n","import React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Colors } from \"constants/Colors\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  getDatasources,\n  getIsFetchingDatasourceStructure,\n  getGenerateCRUDEnabledPluginMap,\n  getIsFetchingSinglePluginForm,\n  getDatasourcesStructure,\n  getNumberOfEntitiesInCurrentPage,\n} from \"selectors/entitiesSelector\";\n\nimport { Datasource } from \"entities/Datasource\";\nimport { fetchDatasourceStructure } from \"actions/datasourceActions\";\nimport { generateTemplateToUpdatePage } from \"actions/pageActions\";\nimport { useParams, useLocation } from \"react-router\";\nimport { ExplorerURLParams } from \"@appsmith/pages/Editor/Explorer/helpers\";\nimport { INTEGRATION_TABS } from \"constants/routes\";\nimport history from \"utils/history\";\nimport { getQueryParams } from \"utils/URLUtils\";\nimport { getIsGeneratingTemplatePage } from \"selectors/pageListSelectors\";\nimport DataSourceOption from \"../DataSourceOption\";\nimport { getQueryStringfromObject } from \"RouteBuilder\";\nimport {\n  Button,\n  Category,\n  Dropdown,\n  DropdownOption,\n  getTypographyByKey,\n  IconName,\n  IconSize,\n  RenderDropdownOptionType,\n  Size,\n  TooltipComponent as Tooltip,\n} from \"design-system-old\";\nimport GoogleSheetForm from \"./GoogleSheetForm\";\nimport {\n  GENERATE_PAGE_FORM_TITLE,\n  createMessage,\n  GEN_CRUD_DATASOURCE_DROPDOWN_LABEL,\n} from \"@appsmith/constants/messages\";\nimport { GenerateCRUDEnabledPluginMap } from \"api/PluginApi\";\nimport {\n  useDatasourceOptions,\n  useSheetsList,\n  useSpreadSheets,\n  useSheetColumnHeaders,\n  useS3BucketList,\n} from \"./hooks\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { AppState } from \"@appsmith/reducers\";\nimport {\n  DropdownOptions,\n  DatasourceTableDropdownOption,\n  PluginFormInputFieldMap,\n  DEFAULT_DROPDOWN_OPTION,\n  DROPDOWN_DIMENSION,\n  ALLOWED_SEARCH_DATATYPE,\n} from \"../constants\";\nimport { Bold, Label, SelectWrapper } from \"./styles\";\nimport { GeneratePagePayload } from \"./types\";\nimport { Icon } from \"design-system-old\";\nimport { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport { getCurrentApplicationId } from \"selectors/editorSelectors\";\n\nimport {\n  getFirstTimeUserOnboardingComplete,\n  getIsFirstTimeUserOnboardingEnabled,\n} from \"selectors/onboardingSelectors\";\nimport { datasourcesEditorIdURL, integrationEditorURL } from \"RouteBuilder\";\nimport { PluginPackageName } from \"entities/Action\";\n\n//  ---------- Styles ----------\n\nconst RoundBg = styled.div`\n  width: 16px;\n  height: 16px;\n  border-radius: 16px;\n  background-color: ${Colors.GRAY};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst TooltipWrapper = styled.div`\n  margin-top: 2px;\n  margin-left: 6px;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 10px 20px 0px;\n  border: none;\n`;\n\nconst FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst FormSubmitButton = styled(Button)<{ disabled?: boolean }>`\n  ${getTypographyByKey(\"btnLarge\")};\n  color: ${Colors.DOVE_GRAY2};\n  margin: 10px 0px;\n`;\n\nconst EditDatasourceButton = styled(Button)`\n  margin-top: 30px;\n`;\n\nconst DescWrapper = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.p`\n  ${getTypographyByKey(\"p1\")};\n  font-weight: 500;\n  color: ${Colors.CODE_GRAY};\n  font-size: 24px;\n`;\n\nconst Row = styled.p`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  white-space: nowrap;\n`;\n\n// Constants\n\nconst datasourceIcon: IconName = \"tables\";\nconst columnIcon: IconName = \"column\";\n\nconst GENERATE_PAGE_MODE = {\n  NEW: \"NEW\", // a new page is created for the template. (new pageId created)\n  REPLACE_EMPTY: \"REPLACE_EMPTY\", // current page's content (DSL) is updated to template DSL. (same pageId)\n};\n\nfunction GeneratePageSubmitBtn({\n  disabled,\n  isLoading,\n  onSubmit,\n  showSubmitButton,\n}: {\n  onSubmit: () => void;\n  isLoading: boolean;\n  showSubmitButton: boolean;\n  disabled: boolean;\n}) {\n  return showSubmitButton ? (\n    <FormSubmitButton\n      category={Category.secondary}\n      data-cy=\"t--generate-page-form-submit\"\n      disabled={disabled}\n      isLoading={isLoading}\n      onClick={() => !disabled && onSubmit()}\n      size={Size.large}\n      text=\"Generate Page\"\n      type=\"button\"\n    />\n  ) : null;\n}\n\n// ---------- GeneratePageForm Component ----------\n\nfunction GeneratePageForm() {\n  const dispatch = useDispatch();\n  const querySearch = useLocation().search;\n\n  const { pageId: currentPageId } = useParams<ExplorerURLParams>();\n\n  const applicationId = useSelector(getCurrentApplicationId);\n\n  const datasources: Datasource[] = useSelector(getDatasources);\n  const isGeneratingTemplatePage = useSelector(getIsGeneratingTemplatePage);\n  const numberOfEntities = useSelector(getNumberOfEntitiesInCurrentPage);\n  const currentMode = useRef(\n    numberOfEntities > 0\n      ? GENERATE_PAGE_MODE.NEW\n      : GENERATE_PAGE_MODE.REPLACE_EMPTY,\n  );\n\n  const [datasourceIdToBeSelected, setDatasourceIdToBeSelected] = useState<\n    string\n  >(\"\");\n  const datasourcesStructure = useSelector(getDatasourcesStructure);\n\n  const isFetchingDatasourceStructure = useSelector(\n    getIsFetchingDatasourceStructure,\n  );\n\n  const generateCRUDSupportedPlugin: GenerateCRUDEnabledPluginMap = useSelector(\n    getGenerateCRUDEnabledPluginMap,\n  );\n\n  const [datasourceTableOptions, setSelectedDatasourceTableOptions] = useState<\n    DropdownOptions\n  >([]);\n\n  const [selectedTableColumnOptions, setSelectedTableColumnOptions] = useState<\n    DropdownOptions\n  >([]);\n\n  const [selectedDatasource, selectDataSource] = useState<DropdownOption>(\n    DEFAULT_DROPDOWN_OPTION,\n  );\n\n  const [isSelectedTableEmpty, setIsSelectedTableEmpty] = useState<boolean>(\n    false,\n  );\n\n  const selectedDatasourcePluginId: string = selectedDatasource.data?.pluginId;\n  const selectedDatasourcePluginPackageName: string =\n    generateCRUDSupportedPlugin[selectedDatasourcePluginId];\n\n  const isGoogleSheetPlugin =\n    selectedDatasourcePluginPackageName === PluginPackageName.GOOGLE_SHEETS;\n\n  const isS3Plugin =\n    selectedDatasourcePluginPackageName === PluginPackageName.S3;\n\n  const isFetchingSheetPluginForm = useSelector((state: AppState) => {\n    if (isGoogleSheetPlugin) {\n      return getIsFetchingSinglePluginForm(\n        state,\n        selectedDatasource.data?.pluginId,\n      );\n    }\n    return false;\n  });\n\n  const [selectedTable, selectTable] = useState<DropdownOption>(\n    DEFAULT_DROPDOWN_OPTION,\n  );\n\n  const [\n    selectedDatasourceIsInvalid,\n    setSelectedDatasourceIsInvalid,\n  ] = useState(false);\n\n  const [selectedColumn, selectColumn] = useState<DropdownOption>(\n    DEFAULT_DROPDOWN_OPTION,\n  );\n\n  const {\n    bucketList,\n    failedFetchingBucketList,\n    isFetchingBucketList,\n  } = useS3BucketList();\n\n  const isFirstTimeUserOnboardingEnabled = useSelector(\n    getIsFirstTimeUserOnboardingEnabled,\n  );\n  const isFirstTimeUserOnboardingComplete = useSelector(\n    getFirstTimeUserOnboardingComplete,\n  );\n\n  const onSelectDataSource = useCallback(\n    (\n      datasource: string | undefined,\n      dataSourceObj: DropdownOption | undefined,\n    ) => {\n      if (\n        datasource &&\n        dataSourceObj &&\n        selectedDatasource.id !== dataSourceObj.id\n      ) {\n        const pluginId: string = dataSourceObj.data.pluginId;\n        const pluginPackageName: string = generateCRUDSupportedPlugin[pluginId];\n        AnalyticsUtil.logEvent(\"GEN_CRUD_PAGE_SELECT_DATASOURCE\", {\n          datasourceType: pluginPackageName,\n        });\n        selectDataSource(dataSourceObj);\n        setSelectedDatasourceTableOptions([]);\n        setSelectedTableColumnOptions([]);\n        selectTable(DEFAULT_DROPDOWN_OPTION);\n        selectColumn(DEFAULT_DROPDOWN_OPTION);\n        setSelectedDatasourceIsInvalid(false);\n        if (dataSourceObj.id) {\n          switch (pluginPackageName) {\n            case PluginPackageName.GOOGLE_SHEETS:\n              break;\n            default: {\n              if (dataSourceObj.id) {\n                dispatch(fetchDatasourceStructure(dataSourceObj.id, true));\n              }\n            }\n          }\n        }\n      }\n    },\n    [\n      generateCRUDSupportedPlugin,\n      selectDataSource,\n      setSelectedDatasourceTableOptions,\n      setSelectedTableColumnOptions,\n      selectTable,\n      selectColumn,\n      dispatch,\n      setSelectedDatasourceIsInvalid,\n      selectedDatasource,\n      generateCRUDSupportedPlugin,\n    ],\n  );\n\n  const onSelectTable = useCallback(\n    (table: string | undefined, TableObj: DatasourceTableDropdownOption) => {\n      if (table && TableObj) {\n        AnalyticsUtil.logEvent(\"GEN_CRUD_PAGE_SELECT_TABLE\");\n        selectTable(TableObj);\n        selectColumn(DEFAULT_DROPDOWN_OPTION);\n        if (!isGoogleSheetPlugin && !isS3Plugin) {\n          const { data } = TableObj;\n\n          if (Array.isArray(data.columns)) {\n            if (data.columns.length === 0) setIsSelectedTableEmpty(true);\n            else {\n              if (isSelectedTableEmpty) setIsSelectedTableEmpty(false);\n              const newSelectedTableColumnOptions: DropdownOption[] = [];\n              data.columns.map((column) => {\n                if (\n                  column.type &&\n                  ALLOWED_SEARCH_DATATYPE.includes(column.type.toLowerCase())\n                ) {\n                  newSelectedTableColumnOptions.push({\n                    id: column.name,\n                    label: column.name,\n                    value: column.name,\n                    subText: column.type,\n                    icon: columnIcon,\n                    iconSize: IconSize.LARGE,\n                    iconColor: Colors.GOLD,\n                  });\n                }\n              });\n              setSelectedTableColumnOptions(newSelectedTableColumnOptions);\n            }\n          } else {\n            setSelectedTableColumnOptions([]);\n          }\n        }\n      }\n    },\n    [\n      isSelectedTableEmpty,\n      selectTable,\n      setSelectedTableColumnOptions,\n      selectColumn,\n      setIsSelectedTableEmpty,\n      isGoogleSheetPlugin,\n      isS3Plugin,\n    ],\n  );\n\n  const onSelectColumn = useCallback(\n    (table: string | undefined, ColumnObj: DropdownOption | undefined) => {\n      if (table && ColumnObj) {\n        AnalyticsUtil.logEvent(\"GEN_CRUD_PAGE_SELECT_SEARCH_COLUMN\");\n        selectColumn(ColumnObj);\n      }\n    },\n    [selectColumn],\n  );\n\n  const dataSourceOptions = useDatasourceOptions({\n    datasources,\n    generateCRUDSupportedPlugin,\n  });\n\n  const spreadSheetsProps = useSpreadSheets({\n    setSelectedDatasourceTableOptions,\n    setSelectedDatasourceIsInvalid,\n  });\n\n  const sheetsListProps = useSheetsList();\n\n  const sheetColumnsHeaderProps = useSheetColumnHeaders();\n\n  useEffect(() => {\n    if (isS3Plugin && bucketList && bucketList.length) {\n      const tables = bucketList.map((bucketName) => ({\n        id: bucketName,\n        label: bucketName,\n        value: bucketName,\n        icon: datasourceIcon,\n        iconSize: IconSize.LARGE,\n        iconColor: Colors.BURNING_ORANGE,\n      }));\n      setSelectedDatasourceTableOptions(tables);\n    }\n  }, [bucketList, isS3Plugin, setSelectedDatasourceTableOptions]);\n\n  useEffect(() => {\n    if (\n      selectedDatasource.id &&\n      selectedDatasource.value &&\n      !isFetchingDatasourceStructure\n    ) {\n      // when finished fetching datasource structure\n      const selectedDatasourceStructure =\n        datasourcesStructure[selectedDatasource.id] || {};\n\n      const hasError = selectedDatasourceStructure?.error;\n\n      if (hasError) {\n        setSelectedDatasourceIsInvalid(true);\n      } else {\n        setSelectedDatasourceIsInvalid(false);\n        const tables = selectedDatasourceStructure?.tables;\n        if (tables) {\n          const newTables = tables.map(({ columns, name }) => ({\n            id: name,\n            label: name,\n            value: name,\n            icon: datasourceIcon,\n            iconSize: IconSize.LARGE,\n            iconColor: Colors.BURNING_ORANGE,\n            data: {\n              columns,\n            },\n          }));\n          setSelectedDatasourceTableOptions(newTables);\n        }\n      }\n    }\n  }, [\n    datasourcesStructure,\n    selectedDatasource,\n    isFetchingDatasourceStructure,\n    setSelectedDatasourceIsInvalid,\n    setSelectedDatasourceTableOptions,\n  ]);\n\n  useEffect(() => {\n    // If there is any datasource id passed in queryParams which needs to be selected\n    if (datasourceIdToBeSelected) {\n      if (selectedDatasource.id !== datasourceIdToBeSelected) {\n        for (let i = 0; i < dataSourceOptions.length; i++) {\n          if (dataSourceOptions[i].id === datasourceIdToBeSelected) {\n            onSelectDataSource(\n              dataSourceOptions[i].value,\n              dataSourceOptions[i],\n            );\n            setDatasourceIdToBeSelected(\"\");\n            break;\n          }\n        }\n      }\n    }\n  }, [\n    dataSourceOptions,\n    datasourceIdToBeSelected,\n    onSelectDataSource,\n    setDatasourceIdToBeSelected,\n  ]);\n\n  useEffect(() => {\n    if (querySearch) {\n      const queryParams = getQueryParams();\n      const datasourceId = queryParams.datasourceId;\n      const generateNewPage = queryParams.new_page;\n      if (datasourceId) {\n        if (generateNewPage || numberOfEntities > 0) {\n          currentMode.current = GENERATE_PAGE_MODE.NEW;\n        } else {\n          currentMode.current = GENERATE_PAGE_MODE.REPLACE_EMPTY;\n        }\n        setDatasourceIdToBeSelected(datasourceId);\n        delete queryParams.datasourceId;\n        delete queryParams.new_page;\n        const redirectURL =\n          window.location.pathname + getQueryStringfromObject(queryParams);\n        history.replace(redirectURL);\n      }\n    }\n  }, [numberOfEntities, querySearch, setDatasourceIdToBeSelected]);\n\n  const routeToCreateNewDatasource = () => {\n    AnalyticsUtil.logEvent(\"GEN_CRUD_PAGE_CREATE_NEW_DATASOURCE\");\n    history.push(\n      integrationEditorURL({\n        pageId: currentPageId,\n        selectedTab: INTEGRATION_TABS.NEW,\n        params: { isGeneratePageMode: \"generate-page\" },\n      }),\n    );\n  };\n\n  const generatePageAction = (data: GeneratePagePayload) => {\n    let extraParams = {};\n    if (data.pluginSpecificParams) {\n      extraParams = {\n        pluginSpecificParams: data.pluginSpecificParams,\n      };\n    }\n\n    const payload = {\n      applicationId: applicationId || \"\",\n      pageId:\n        currentMode.current === GENERATE_PAGE_MODE.NEW\n          ? \"\"\n          : currentPageId || \"\",\n      columns: data.columns || [],\n      searchColumn: data.searchColumn,\n      tableName: data.tableName,\n      datasourceId: selectedDatasource.id || \"\",\n      mode: currentMode.current,\n      ...extraParams,\n    };\n\n    AnalyticsUtil.logEvent(\"GEN_CRUD_PAGE_FORM_SUBMIT\");\n    dispatch(generateTemplateToUpdatePage(payload));\n    if (isFirstTimeUserOnboardingEnabled) {\n      dispatch({\n        type: ReduxActionTypes.SET_FIRST_TIME_USER_ONBOARDING_APPLICATION_ID,\n        payload: \"\",\n      });\n    }\n    if (isFirstTimeUserOnboardingComplete) {\n      dispatch({\n        type: ReduxActionTypes.SET_FIRST_TIME_USER_ONBOARDING_COMPLETE,\n        payload: false,\n      });\n    }\n  };\n\n  const handleFormSubmit = () => {\n    const payload = {\n      columns: [],\n      searchColumn: selectedColumn.value,\n      tableName: selectedTable.value || \"\",\n    };\n    generatePageAction(payload);\n  };\n\n  const goToEditDatasource = () => {\n    AnalyticsUtil.logEvent(\"GEN_CRUD_PAGE_EDIT_DATASOURCE_CONFIG\", {\n      datasourceId: selectedDatasource.id,\n    });\n    const redirectURL = datasourcesEditorIdURL({\n      pageId: currentPageId,\n      datasourceId: selectedDatasource.id as string,\n      params: { isGeneratePageMode: \"generate-page\" },\n    });\n    history.push(redirectURL);\n  };\n\n  // if the datasource has basic information to connect to db it is considered as a valid structure hence isValid true.\n  const isValidDatasourceConfig = selectedDatasource.data?.isValid;\n\n  const pluginField: {\n    TABLE: string;\n    COLUMN: string;\n  } =\n    selectedDatasourcePluginPackageName &&\n    PluginFormInputFieldMap[selectedDatasourcePluginPackageName]\n      ? PluginFormInputFieldMap[selectedDatasourcePluginPackageName]\n      : PluginFormInputFieldMap.DEFAULT;\n\n  let tableDropdownErrorMsg = \"\";\n\n  const fetchingDatasourceConfigs =\n    isFetchingDatasourceStructure ||\n    (isFetchingBucketList && isS3Plugin) ||\n    ((isFetchingSheetPluginForm || spreadSheetsProps.isFetchingSpreadsheets) &&\n      isGoogleSheetPlugin);\n\n  const fetchingDatasourceConfigError =\n    selectedDatasourceIsInvalid ||\n    !isValidDatasourceConfig ||\n    (failedFetchingBucketList && isS3Plugin);\n\n  if (!fetchingDatasourceConfigs) {\n    if (datasourceTableOptions.length === 0) {\n      tableDropdownErrorMsg = `Couldn't find any ${pluginField.TABLE}, Please select another datasource`;\n    }\n    if (fetchingDatasourceConfigError) {\n      tableDropdownErrorMsg = `Failed fetching datasource structure, Please check your datasource configuration`;\n    }\n    if (isSelectedTableEmpty) {\n      tableDropdownErrorMsg = `Couldn't find any columns, Please select table with columns.`;\n    }\n  }\n\n  const showEditDatasourceBtn =\n    !isFetchingDatasourceStructure &&\n    (selectedDatasourceIsInvalid || !isValidDatasourceConfig) &&\n    !!selectedDatasource.value;\n\n  const showSearchableColumn =\n    !!selectedTable.value &&\n    PluginPackageName.S3 !== selectedDatasourcePluginPackageName;\n\n  const showSubmitButton =\n    selectedTable.value &&\n    !showEditDatasourceBtn &&\n    !fetchingDatasourceConfigs &&\n    !fetchingDatasourceConfigError &&\n    !!selectedDatasource.value;\n\n  const submitButtonDisable =\n    !selectedTable.value || !showSubmitButton || isSelectedTableEmpty;\n\n  return (\n    <div className=\"space-y-4\">\n      <Wrapper>\n        <DescWrapper>\n          <Title>{GENERATE_PAGE_FORM_TITLE()}</Title>\n        </DescWrapper>\n      </Wrapper>\n      <FormWrapper>\n        <SelectWrapper className=\"space-y-2\" width={DROPDOWN_DIMENSION.WIDTH}>\n          <Label>{createMessage(GEN_CRUD_DATASOURCE_DROPDOWN_LABEL)}</Label>\n          <Dropdown\n            cypressSelector=\"t--datasource-dropdown\"\n            dropdownMaxHeight={\"300px\"}\n            height={DROPDOWN_DIMENSION.HEIGHT}\n            onSelect={onSelectDataSource}\n            optionWidth={DROPDOWN_DIMENSION.WIDTH}\n            options={dataSourceOptions}\n            renderOption={({\n              isHighlighted,\n              isSelectedNode,\n              option,\n              optionClickHandler,\n            }: RenderDropdownOptionType) => (\n              <DataSourceOption\n                cypressSelector=\"t--datasource-dropdown-option\"\n                extraProps={{ routeToCreateNewDatasource }}\n                isHighlighted={isHighlighted}\n                isSelectedNode={isSelectedNode}\n                key={(option as DropdownOption).id}\n                option={option}\n                optionClickHandler={optionClickHandler}\n                optionWidth={DROPDOWN_DIMENSION.WIDTH}\n              />\n            )}\n            selected={selectedDatasource}\n            showLabelOnly\n            width={DROPDOWN_DIMENSION.WIDTH}\n          />\n        </SelectWrapper>\n        {selectedDatasource.value ? (\n          <SelectWrapper className=\"space-y-2\" width={DROPDOWN_DIMENSION.WIDTH}>\n            <Label>\n              Select {pluginField.TABLE} from{\" \"}\n              <Bold>{selectedDatasource.label}</Bold>\n            </Label>\n            <Dropdown\n              cypressSelector=\"t--table-dropdown\"\n              dropdownMaxHeight={\"300px\"}\n              errorMsg={tableDropdownErrorMsg}\n              height={DROPDOWN_DIMENSION.HEIGHT}\n              isLoading={fetchingDatasourceConfigs}\n              onSelect={onSelectTable}\n              optionWidth={DROPDOWN_DIMENSION.WIDTH}\n              options={datasourceTableOptions}\n              selected={selectedTable}\n              showLabelOnly\n              width={DROPDOWN_DIMENSION.WIDTH}\n            />\n          </SelectWrapper>\n        ) : null}\n        {showEditDatasourceBtn && (\n          <EditDatasourceButton\n            category={Category.secondary}\n            onClick={goToEditDatasource}\n            size={Size.medium}\n            text=\"Edit Datasource\"\n            type=\"button\"\n          />\n        )}\n        {!isGoogleSheetPlugin ? (\n          <>\n            {showSearchableColumn && (\n              <SelectWrapper\n                className=\"space-y-2\"\n                width={DROPDOWN_DIMENSION.WIDTH}\n              >\n                <Row>\n                  Select a searchable {pluginField.COLUMN} from the\n                  selected&nbsp;\n                  {pluginField.TABLE}\n                  <TooltipWrapper>\n                    <Tooltip\n                      content=\"Only string values are allowed for searchable column\"\n                      hoverOpenDelay={200}\n                    >\n                      <RoundBg>\n                        <Icon\n                          fillColor={Colors.WHITE}\n                          hoverFillColor={Colors.WHITE}\n                          name=\"help\"\n                          size={IconSize.XXS}\n                        />\n                      </RoundBg>\n                    </Tooltip>\n                  </TooltipWrapper>\n                </Row>\n                <Dropdown\n                  cypressSelector=\"t--searchColumn-dropdown\"\n                  disabled={selectedTableColumnOptions.length === 0}\n                  dropdownMaxHeight={\"300px\"}\n                  helperText={\n                    selectedTableColumnOptions.length === 0\n                      ? `* Optional (No searchable ${pluginField.COLUMN} to select)`\n                      : \"* Optional\"\n                  }\n                  onSelect={onSelectColumn}\n                  optionWidth={DROPDOWN_DIMENSION.WIDTH}\n                  options={selectedTableColumnOptions}\n                  selected={selectedColumn}\n                  showLabelOnly\n                  width={DROPDOWN_DIMENSION.WIDTH}\n                />\n              </SelectWrapper>\n            )}\n            <div className=\"mt-4\">\n              <GeneratePageSubmitBtn\n                disabled={submitButtonDisable}\n                isLoading={!!isGeneratingTemplatePage}\n                onSubmit={handleFormSubmit}\n                showSubmitButton={!!showSubmitButton}\n              />\n            </div>\n          </>\n        ) : (\n          <GoogleSheetForm\n            generatePageAction={generatePageAction}\n            googleSheetPluginId={selectedDatasourcePluginId}\n            renderSubmitButton={({\n              disabled,\n              isLoading,\n              onSubmit,\n            }: {\n              onSubmit: () => void;\n              disabled: boolean;\n              isLoading: boolean;\n            }) => (\n              <GeneratePageSubmitBtn\n                disabled={disabled}\n                isLoading={!!isGeneratingTemplatePage || isLoading}\n                onSubmit={onSubmit}\n                showSubmitButton={!!showSubmitButton}\n              />\n            )}\n            selectedDatasource={selectedDatasource}\n            selectedSpreadsheet={selectedTable}\n            sheetColumnsHeaderProps={sheetColumnsHeaderProps}\n            sheetsListProps={sheetsListProps}\n            spreadSheetsProps={spreadSheetsProps}\n          />\n        )}\n      </FormWrapper>\n    </div>\n  );\n}\n\nexport default GeneratePageForm;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport GeneratePageForm from \"./GeneratePageForm/GeneratePageForm\";\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n  margin-top: 40px;\n`;\n\nfunction PageContent() {\n  return (\n    <Container>\n      <GeneratePageForm />\n    </Container>\n  );\n}\n\nexport default PageContent;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport PageContent from \"./components/PageContent\";\nimport { Colors } from \"constants/Colors\";\nimport { Icon } from \"@blueprintjs/core\";\nimport { getTypographyByKey, Text, TextType } from \"design-system-old\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  height: 100%;\n`;\n\nconst HeadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-top: 50px;\n`;\n\nconst Heading = styled.h1`\n  font-size: 40px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 48px;\n  letter-spacing: 0px;\n  text-align: center;\n  margin: 0;\n  font-family: ${(props) => props.theme.fonts.text};\n`;\n\nconst SubHeading = styled.p`\n  ${getTypographyByKey(\"p1\")};\n  margin: 20px 0px;\n  color: ${Colors.BLACK};\n  text-align: center;\n`;\n\nconst Back = styled.span`\n  height: 30px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  padding-left: 16px;\n`;\n\nconst Header = styled.div`\n  width: 100%;\n`;\n\nfunction GeneratePage() {\n  const isGenerateFormPage = window.location.pathname.includes(\"/form\");\n  const heading = isGenerateFormPage ? \"Quick Page Wizard\" : \"New Page\";\n\n  return (\n    <Container>\n      {isGenerateFormPage ? (\n        <Header>\n          <Back onClick={() => history.back()}>\n            <Icon icon=\"chevron-left\" iconSize={16} />\n            <Text\n              style={{ color: Colors.DIESEL, lineHeight: \"14px\" }}\n              type={TextType.P1}\n            >\n              Back\n            </Text>\n          </Back>\n        </Header>\n      ) : null}\n\n      <HeadingContainer>\n        <Heading> {heading}</Heading>\n      </HeadingContainer>\n      {isGenerateFormPage ? (\n        <SubHeading>\n          Auto create a simple CRUD interface on top of your data\n        </SubHeading>\n      ) : null}\n\n      <PageContent />\n    </Container>\n  );\n}\n\nexport default GeneratePage;\n","import React from \"react\";\nimport { reduxForm, InjectedFormProps, Form, Field } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { withRouter, RouteComponentProps } from \"react-router\";\nimport styled from \"styled-components\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { ActionDataState } from \"reducers/entityReducers/actionsReducer\";\nimport { CURL_IMPORT_FORM } from \"@appsmith/constants/forms\";\nimport { BuilderRouteParams } from \"constants/routes\";\nimport { curlImportFormValues, curlImportSubmitHandler } from \"./helpers\";\nimport { createNewApiName } from \"utils/AppsmithUtils\";\nimport { Colors } from \"constants/Colors\";\nimport CurlLogo from \"assets/images/Curl-logo.svg\";\nimport CloseEditor from \"components/editorComponents/CloseEditor\";\nimport { Button, Size } from \"design-system-old\";\nimport FormRow from \"components/editorComponents/FormRow\";\n\nconst MainConfiguration = styled.div`\n  padding: ${(props) => props.theme.spaces[7]}px\n    ${(props) => props.theme.spaces[10]}px 0px\n    ${(props) => props.theme.spaces[10]}px;\n  ${FormRow} {\n    align-items: flex-start;\n  }\n`;\n\nconst ActionButtons = styled.div`\n  justify-self: flex-end;\n  display: flex;\n  align-items: center;\n\n  button:last-child {\n    margin-left: ${(props) => props.theme.spaces[7]}px;\n  }\n`;\n\nconst CurlIconWrapper = styled.div`\n  width: 24px;\n  height: 24px;\n  margin-right: ${(props) => props.theme.spaces[3]}px;\n  align-self: center;\n  background-color: ${Colors.GREY_2};\n  border-radius: 9999px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: ${(props) => props.theme.spaces[1]}px;\n`;\n\nconst CurlImportText = styled.p`\n  max-width: 100%;\n  flex: 0 1 auto;\n  font-size: ${(props) => props.theme.fontSizes[5]}px;\n  font-weight: ${(props) => props.theme.fontWeights[1]};\n  color: ${Colors.CODE_GRAY};\n`;\n\nconst StyledForm = styled(Form)`\n  flex: 1;\n  overflow: auto;\n  border-top: 2px solid ${(props) => props.theme.colors.apiPane.dividerBg};\n  padding: ${(props) => props.theme.spaces[7]}px\n    ${(props) => props.theme.spaces[10]}px 0px\n    ${(props) => props.theme.spaces[10]}px;\n  color: var(--appsmith-color-black-800);\n  label {\n    font-size: ${(props) => props.theme.fontSizes[4]}px;\n    font-weight: ${(props) => props.theme.fontWeights[1]};\n  }\n`;\n\nconst CurlHintText = styled.div`\n  font-size: ${(props) => props.theme.fontSizes[3]}px;\n  font-weight: ${(props) => props.theme.fontWeights[1]};\n  margin: ${(props) => props.theme.spaces[2]}px 0px\n    ${(props) => props.theme.spaces[9]}px 0px;\n`;\n\nconst CurlImportFormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: flex-end;\n  overflow: auto;\n\n  .textAreaStyles {\n    min-height: 50vh;\n    max-height: 50vh;\n    padding: ${(props) => props.theme.spaces[4]}px;\n    min-width: 100%;\n    max-width: 100%;\n    overflow: auto;\n    border: 1px solid ${Colors.GREY_5};\n    font-size: ${(props) => props.theme.fontSizes[3]}px;\n  }\n`;\n\ninterface ReduxStateProps {\n  actions: ActionDataState;\n  initialValues: Record<string, unknown>;\n  isImportingCurl: boolean;\n}\n\nexport type StateAndRouteProps = ReduxStateProps &\n  RouteComponentProps<BuilderRouteParams>;\n\ntype Props = StateAndRouteProps &\n  InjectedFormProps<curlImportFormValues, StateAndRouteProps>;\n\nclass CurlImportForm extends React.Component<Props> {\n  render() {\n    const { handleSubmit, isImportingCurl } = this.props;\n    return (\n      <>\n        <CloseEditor />\n        <MainConfiguration>\n          <FormRow className=\"form-row-header\">\n            <div\n              style={{\n                display: \"flex\",\n              }}\n            >\n              <CurlIconWrapper>\n                <img alt=\"CURL\" src={CurlLogo} />\n              </CurlIconWrapper>\n              <CurlImportText className=\"text\">Import from CURL</CurlImportText>\n            </div>\n            <ActionButtons className=\"t--formActionButtons\">\n              <Button\n                className=\"t--importBtn\"\n                isLoading={isImportingCurl}\n                onClick={handleSubmit(curlImportSubmitHandler)}\n                size={Size.medium}\n                tag=\"button\"\n                text=\"Import\"\n                type=\"button\"\n              />\n            </ActionButtons>\n          </FormRow>\n        </MainConfiguration>\n        <StyledForm onSubmit={handleSubmit(curlImportSubmitHandler)}>\n          <label className=\"inputLabel\">Paste CURL Code Here</label>\n          <CurlHintText>\n            Hint: Try typing in the following curl command and then click on the\n            &apos;Import&apos; button: curl -X GET\n            https://mock-api.appsmith.com/users\n          </CurlHintText>\n          <CurlImportFormContainer>\n            <Field\n              autoFocus\n              className=\"textAreaStyles\"\n              component=\"textarea\"\n              name=\"curl\"\n            />\n            <Field component=\"input\" name=\"pageId\" type=\"hidden\" />\n            <Field component=\"input\" name=\"name\" type=\"hidden\" />\n          </CurlImportFormContainer>\n        </StyledForm>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState, props: Props): ReduxStateProps => {\n  const { pageId: destinationPageId } = props.match.params;\n\n  if (destinationPageId) {\n    return {\n      actions: state.entities.actions,\n      initialValues: {\n        pageId: destinationPageId,\n        name: createNewApiName(state.entities.actions, destinationPageId),\n      },\n      isImportingCurl: state.ui.imports.isImportingCurl,\n    };\n  }\n  return {\n    actions: state.entities.actions,\n    initialValues: {},\n    isImportingCurl: state.ui.imports.isImportingCurl,\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps)(\n    reduxForm<curlImportFormValues, StateAndRouteProps>({\n      form: CURL_IMPORT_FORM,\n    })(CurlImportForm),\n  ),\n);\n","import { ApiResponse } from \"api/ApiResponses\";\n\nexport type ProvidersDataArray = ApiResponse & {\n  id: string;\n  name: string;\n  description: string;\n  url: string;\n  imageUrl: string;\n};\n\nexport type ProvidersCategoriesResponse = ApiResponse & {\n  data: string[];\n};\n\nexport type FetchProviderDetailsResponse = ApiResponse & {\n  data: ProvidersDataArray;\n};\n\nexport type Providers = ApiResponse & {\n  providers: ProvidersDataArray[];\n  total: number;\n};\n\nexport type ProviderTemplates = ApiResponse & {\n  data: Array<ProviderTemplateArray>;\n  length: number;\n  templateId: string;\n};\n\nexport type ApiTemplates = {\n  id: string;\n  deleted: boolean;\n  name: string;\n  providerId: string;\n  publisher: string;\n  packageName: string;\n  versionId: string;\n  apiTemplateConfiguration: {\n    documentation: string;\n    sampleResponse: {\n      body: string;\n    };\n  };\n  actionConfiguration: {\n    timeoutInMillisecond: number;\n    paginationType: string;\n    path: string;\n    httpMethod: string;\n    headers: any[];\n    routeParameters: any[];\n  };\n  datasourceConfiguration: {\n    url: string;\n  };\n};\n\nexport type ProviderTemplateArray = ApiResponse & {\n  templateData: {\n    id: string;\n    deleted: boolean;\n    name: string;\n    providerId: string;\n    publisher: string;\n    packageName: string;\n    versionId: string;\n    apiTemplateConfiguration: {\n      documentation: string;\n      sampleResponse: {\n        body: string;\n      };\n    };\n    actionConfiguration: {\n      timeoutInMillisecond: number;\n      paginationType: string;\n      path: string;\n      httpMethod: string;\n      headers: any[];\n      routeParameters: any[];\n    };\n    datasourceConfiguration: {\n      url: string;\n    };\n  };\n  isOpen: boolean;\n  addToPageStatus: boolean;\n  addToPageLoading: boolean;\n};\n\nexport type SearchResultsProviders = {\n  id: string;\n  name: string;\n  description: string;\n  imageUrl: string;\n  url: string;\n  documentationUrl: string;\n};\n\nexport const DEFAULT_TEMPLATE_TYPE = \"TEMPLATE\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon, Collapse } from \"@blueprintjs/core\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport ReactJson from \"react-json-view\";\nimport { AppState } from \"@appsmith/reducers\";\nimport Button from \"components/editorComponents/Button\";\nimport { ProviderViewerRouteParams } from \"constants/routes\";\nimport {\n  getProviderTemplates,\n  getProvidersTemplatesLoadingState,\n} from \"selectors/applicationSelectors\";\nimport CenteredWrapper from \"components/designSystems/appsmith/CenteredWrapper\";\nimport { ActionDataState } from \"reducers/entityReducers/actionsReducer\";\nimport {\n  ProviderTemplateArray,\n  DEFAULT_TEMPLATE_TYPE,\n} from \"constants/providerConstants\";\nimport { AddApiToPageRequest } from \"api/ProvidersApi\";\nimport {\n  setLastUsedEditorPage,\n  setLastSelectedPage,\n} from \"actions/apiPaneActions\";\nimport {\n  getProviderDetailsByProviderId,\n  fetchProviderTemplates,\n  addApiToPage,\n} from \"actions/providerActions\";\nimport { getDuplicateName } from \"utils/AppsmithUtils\";\nimport { INTEGRATION_TABS } from \"constants/routes\";\nimport Spinner from \"components/editorComponents/Spinner\";\nimport { getInitialsAndColorCode } from \"utils/AppsmithUtils\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { getAppCardColorPalette } from \"selectors/themeSelectors\";\nimport { getCurrentApplicationId } from \"selectors/editorSelectors\";\nimport { integrationEditorURL } from \"RouteBuilder\";\n\nconst TEMPLATES_TOP_SECTION_HEIGHT = \"83px\";\n\nconst ProviderInfo = styled.div`\n  display: flex;\n  padding: 10px;\n  .providerImage {\n    height: 40px;\n    width: auto;\n    margin-right: 11px;\n  }\n  .providerName {\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 32px;\n  }\n`;\n\nconst TemplateDetailPage = styled.div`\n  max-height: 95vh;\n  font-size: 20px;\n  padding: 20px;\n\n  .react-tabs__tab-list {\n    border-bottom-color: transparent;\n    color: #4e5d78;\n    font-size: 14px;\n    font-weight: 500;\n  }\n\n  .react-tabs__tab--selected {\n    color: #2e3d49;\n    font-size: 14px;\n    font-weight: 500;\n    border-color: transparent;\n    border: transparent;\n    border-bottom: 3px solid #2e3d49;\n    border-radius: 0;\n  }\n  .backBtn {\n    padding-bottom: 3px;\n    cursor: pointer;\n  }\n  .backBtnText {\n    font-size: 16px;\n    font-weight: 500;\n    cursor: pointer;\n  }\n`;\n\nconst LoadingContainer = styled(CenteredWrapper)`\n  height: 50%;\n`;\n\nconst ProviderInfoTopSection = styled.div`\n  height: ${TEMPLATES_TOP_SECTION_HEIGHT};\n`;\n\nconst TemplatesCardsContainer = styled.div`\n  height: calc(\n    100vh - ${TEMPLATES_TOP_SECTION_HEIGHT} -\n      ${(props) => props.theme.headerHeight}\n  );\n  overflow: auto;\n  .noProvidersMessage {\n    margin-top: 30px;\n    text-align: center;\n    color: #666666;\n    font-size: 14px;\n    line-height: 24px;\n  }\n`;\n\nconst TemplateCard = styled.div`\n  border: 1px solid #e8e8e8;\n  min-height: 150px;\n  padding: 17px;\n  display: block;\n  margin-bottom: 10px;\n  .extraDescription {\n    background: #363e44;\n    border-radius: 4px;\n    color: #fff;\n  }\n  .string-value {\n    word-break: break-word !important;\n  }\n  .variable-value {\n    word-break: break-word !important;\n  }\n`;\n\nconst CardTopContent = styled.div`\n  display: flex;\n`;\n\nconst TemplateCardLeftContent = styled.div`\n  width: 70%;\n\n  .apiName {\n    font-size: 16px;\n    line-height: 24px;\n  }\n\n  .desc {\n    font-size: 14px;\n    line-height: 24px;\n  }\n`;\n\nconst TemplateCardRightContent = styled.div`\n  width: 30%;\n  display: flex;\n  margin: auto;\n  justify-content: center;\n  .dropIcon {\n    margin-left: 50px;\n    color: #bcccd9;\n    cursor: pointer;\n  }\n  .addToPageBtn {\n    width: 100px !important;\n    height: 30px !important;\n  }\n`;\n\nconst URLContainer = styled.div`\n  background: #ebeef0;\n  padding: 1px;\n  align-self: center;\n  justify-content: center;\n  border-radius: 4px;\n\n  .urlText {\n    color: #4e5d78;\n    font-size: 14px;\n    line-height: 24px;\n    padding-top: 10px !important;\n    padding-left: 11px;\n    display: flex;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    max-width: 98%;\n  }\n  .endpoint {\n    padding-left: 11px;\n  }\n`;\n\ntype ProviderTemplatesProps = {\n  providerTemplates: ProviderTemplateArray[];\n  providerDetails: any;\n  actions: ActionDataState;\n  isFetchingProviderTemplates: boolean;\n  getProviderDetailsByProviderId: (providerId: string) => void;\n  getProviderTemplates: (providerId: string) => void;\n  setLastUsedEditorPage: (path: string) => void;\n  setLastSelectedPage: (selectedPageId: string) => void;\n  addApiToPage: (templateData: AddApiToPageRequest) => void;\n  appCardColors: string[];\n  applicationId: string;\n} & RouteComponentProps<ProviderViewerRouteParams>;\n\nclass ProviderTemplates extends React.Component<ProviderTemplatesProps> {\n  public state = {\n    isOpen: false,\n    addedTemplates: Array<string>(),\n    toggeledTemplates: Array<string>(),\n  };\n\n  handleClick = () => {\n    this.setState({ isOpen: !this.state.isOpen });\n  };\n\n  componentDidMount() {\n    const { pageId, providerId } = this.props.match.params;\n    let destinationPageId = new URLSearchParams(this.props.location.search).get(\n      \"importTo\",\n    );\n    if (!destinationPageId) {\n      destinationPageId = pageId;\n    }\n    this.props.getProviderDetailsByProviderId(providerId);\n    this.props.getProviderTemplates(providerId);\n    this.props.setLastUsedEditorPage(this.props.match.url);\n    this.props.setLastSelectedPage(destinationPageId);\n  }\n\n  addApiToPage = (templateData: ProviderTemplateArray) => {\n    const { pageId } = this.props.match.params;\n    let destinationPageId = new URLSearchParams(this.props.location.search).get(\n      \"importTo\",\n    );\n    if (!destinationPageId) {\n      destinationPageId = pageId;\n    }\n    const pageApiNames = this.props.actions\n      .filter((a) => a.config.pageId === destinationPageId)\n      .map((a) => a.config.name);\n    let name = templateData.templateData.name.replace(/ /g, \"\");\n    if (pageApiNames.indexOf(name) > -1) {\n      name = getDuplicateName(name, pageApiNames);\n    }\n\n    const addApiRequestObject: AddApiToPageRequest = {\n      name,\n      pageId: destinationPageId,\n      marketplaceElement: {\n        type: DEFAULT_TEMPLATE_TYPE,\n        item: templateData.templateData,\n      },\n      source: \"BROWSE\",\n    };\n    const { addedTemplates } = this.state;\n    this.props.addApiToPage(addApiRequestObject);\n    this.setState({ addedTemplates });\n  };\n\n  handleIsOpen = (templateId: string) => {\n    const { toggeledTemplates } = this.state;\n\n    const toggleCheck = toggeledTemplates.includes(templateId);\n    if (toggleCheck) {\n      toggeledTemplates.splice(toggeledTemplates.indexOf(templateId), 1);\n      this.setState({ toggeledTemplates });\n    } else {\n      toggeledTemplates.push(templateId);\n      this.setState({ toggeledTemplates });\n    }\n  };\n\n  render() {\n    const {\n      history,\n      isFetchingProviderTemplates,\n      providerDetails,\n      providerTemplates,\n    } = this.props;\n    const { pageId } = this.props.match.params;\n\n    let destinationPageId = new URLSearchParams(this.props.location.search).get(\n      \"importTo\",\n    );\n    if (destinationPageId === null || destinationPageId === undefined) {\n      destinationPageId = pageId;\n    }\n\n    if (isFetchingProviderTemplates) {\n      return (\n        <LoadingContainer>\n          <Spinner size={30} />\n        </LoadingContainer>\n      );\n    }\n    return (\n      <TemplateDetailPage>\n        <ProviderInfoTopSection>\n          <Icon\n            className=\"backBtn\"\n            icon=\"chevron-left\"\n            iconSize={16}\n            onClick={() =>\n              history.push(\n                integrationEditorURL({\n                  pageId,\n                  selectedTab: INTEGRATION_TABS.ACTIVE,\n                }),\n              )\n            }\n          />\n          <span\n            className=\"backBtnText\"\n            onClick={() =>\n              history.push(\n                integrationEditorURL({\n                  pageId,\n                  selectedTab: INTEGRATION_TABS.ACTIVE,\n                }),\n              )\n            }\n          >\n            {\" Back\"}\n          </span>\n          <br />\n\n          <ProviderInfo>\n            {providerDetails.imageUrl ? (\n              <img\n                alt=\"provider\"\n                className=\"providerImage\"\n                src={providerDetails.imageUrl}\n              />\n            ) : (\n              <div>\n                {providerDetails.name && (\n                  <div\n                    style={{\n                      backgroundColor: getInitialsAndColorCode(\n                        providerDetails.name,\n                        this.props.appCardColors,\n                      )[1],\n                      padding: 5,\n                      margin: \"auto\",\n                      width: 60,\n                      color: \"#fff\",\n                      borderRadius: 2,\n                      fontSize: 18,\n                      fontWeight: \"bold\",\n                      textAlign: \"center\",\n                      marginRight: 10,\n                    }}\n                  >\n                    <span>\n                      {\n                        getInitialsAndColorCode(\n                          providerDetails.name,\n                          this.props.appCardColors,\n                        )[0]\n                      }\n                    </span>\n                  </div>\n                )}\n              </div>\n            )}\n            <p className=\"providerName\">{providerDetails.name}</p>\n          </ProviderInfo>\n        </ProviderInfoTopSection>\n        <TemplatesCardsContainer>\n          {providerTemplates.length === 0 && !isFetchingProviderTemplates ? (\n            <p className=\"noProvidersMessage\">\n              No API templates for this provider yet.\n            </p>\n          ) : (\n            <>\n              {providerTemplates.map((template) => (\n                <TemplateCard key={template.templateData.id}>\n                  <CardTopContent>\n                    <TemplateCardLeftContent>\n                      <p className=\"apiName\">{template.templateData.name}</p>\n                      <p className=\"desc\">\n                        {\n                          template.templateData.apiTemplateConfiguration\n                            .documentation\n                        }\n                      </p>\n                      <URLContainer>\n                        <p className=\"urlText\">\n                          <strong>\n                            {\n                              template.templateData.actionConfiguration\n                                .httpMethod\n                            }\n                          </strong>{\" \"}\n                          <span\n                            className=\"endpoint\"\n                            title={\n                              template.templateData.actionConfiguration.path\n                            }\n                          >\n                            {template.templateData.actionConfiguration.path}\n                          </span>\n                        </p>\n                      </URLContainer>\n                    </TemplateCardLeftContent>\n\n                    <TemplateCardRightContent className=\"t--addToPageButtons\">\n                      {template.addToPageStatus ? (\n                        <Button\n                          className=\"addToPageBtn t--addToPageBtn\"\n                          disabled\n                          filled\n                          intent=\"none\"\n                          size=\"small\"\n                          text=\"Added\"\n                        />\n                      ) : (\n                        <Button\n                          className=\"addToPageBtn t--addToPageBtn\"\n                          disabled={false}\n                          filled\n                          intent=\"primary\"\n                          loading={template.addToPageLoading}\n                          onClick={() => this.addApiToPage(template)}\n                          size=\"small\"\n                          text=\"Add to page\"\n                        />\n                      )}\n                      <Icon\n                        className=\"dropIcon\"\n                        icon=\"chevron-down\"\n                        iconSize={20}\n                        onClick={() => {\n                          AnalyticsUtil.logEvent(\"EXPAND_API\", {\n                            apiName: template.templateData.name,\n                          });\n                          this.handleIsOpen(template.templateData.id);\n                        }}\n                      />\n                    </TemplateCardRightContent>\n                  </CardTopContent>\n\n                  <Collapse\n                    isOpen={this.state.toggeledTemplates.includes(\n                      template.templateData.id,\n                    )}\n                    transitionDuration={0}\n                  >\n                    <ReactJson\n                      displayDataTypes={false}\n                      displayObjectSize={false}\n                      enableClipboard={false}\n                      name=\"Request header\"\n                      src={template.templateData.actionConfiguration.headers}\n                      style={{\n                        marginTop: \"12px\",\n                        fontSize: \"14px\",\n                        padding: \"15px\",\n                        borderTopLeftRadius: \"4px\",\n                        borderTopRightRadius: \"4px\",\n                        width: \"90%\",\n                        wordWrap: \"break-word\",\n                      }}\n                      theme=\"grayscale\"\n                    />\n                    {template.templateData.apiTemplateConfiguration\n                      .sampleResponse ? (\n                      <ReactJson\n                        displayDataTypes={false}\n                        displayObjectSize={false}\n                        enableClipboard={false}\n                        name=\"Response Body\"\n                        src={\n                          template.templateData.apiTemplateConfiguration\n                            .sampleResponse\n                        }\n                        style={{\n                          fontSize: \"14px\",\n                          padding: \"15px\",\n                          borderBottomLeftRadius: \"4px\",\n                          borderBottomRightRadius: \"4px\",\n                          maxWidth: \"90%\",\n                          wordWrap: \"break-word\",\n                        }}\n                        theme=\"grayscale\"\n                      />\n                    ) : (\n                      <p />\n                    )}\n                  </Collapse>\n                </TemplateCard>\n              ))}\n            </>\n          )}\n        </TemplatesCardsContainer>\n      </TemplateDetailPage>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  providerTemplates: getProviderTemplates(state),\n  isFetchingProviderTemplates: getProvidersTemplatesLoadingState(state),\n  actions: state.entities.actions,\n  providerDetails: state.ui.providers.providerDetailsByProviderId,\n  appCardColors: getAppCardColorPalette(state),\n  applicationId: getCurrentApplicationId(state),\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  getProviderDetailsByProviderId: (providerId: string) =>\n    dispatch(getProviderDetailsByProviderId(providerId)),\n\n  getProviderTemplates: (providerId: string) =>\n    dispatch(fetchProviderTemplates(providerId)),\n\n  setLastUsedEditorPage: (path: string) =>\n    dispatch(setLastUsedEditorPage(path)),\n\n  setLastSelectedPage: (selectedPageId: string) =>\n    dispatch(setLastSelectedPage(selectedPageId)),\n\n  addApiToPage: (templateData: AddApiToPageRequest) =>\n    dispatch(addApiToPage(templateData)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProviderTemplates);\n","import { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\n\nimport {\n  AddApiToPageRequest,\n  FetchProviderWithCategoryRequest,\n  SearchApiOrProviderRequest,\n} from \"api/ProvidersApi\";\n\nexport const fetchProviders = () => {\n  return {\n    type: ReduxActionTypes.FETCH_PROVIDERS_INIT,\n  };\n};\n\nexport const searchApiOrProvider = (payload: SearchApiOrProviderRequest) => {\n  return {\n    type: ReduxActionTypes.SEARCH_APIORPROVIDERS_INIT,\n    payload,\n  };\n};\n\nexport const fetchProviderCategories = () => {\n  return {\n    type: ReduxActionTypes.FETCH_PROVIDERS_CATEGORIES_INIT,\n  };\n};\n\nexport const getProviderDetailsByProviderId = (providerId: string) => {\n  return {\n    type: ReduxActionTypes.FETCH_PROVIDER_DETAILS_BY_PROVIDER_ID_INIT,\n    payload: { providerId },\n  };\n};\nexport const fetchProviderTemplates = (providerId: string) => {\n  return {\n    type: ReduxActionTypes.FETCH_PROVIDER_TEMPLATES_INIT,\n    payload: { providerId },\n  };\n};\n\nexport const addApiToPage = (payload: AddApiToPageRequest) => {\n  return {\n    type: ReduxActionTypes.ADD_API_TO_PAGE_INIT,\n    payload,\n  };\n};\n\nexport const fetchProvidersWithCategory = (\n  payload: FetchProviderWithCategoryRequest,\n) => {\n  return {\n    type: ReduxActionTypes.FETCH_PROVIDERS_WITH_CATEGORY_INIT,\n    payload,\n  };\n};\n\nexport const clearProviders = () => {\n  return {\n    type: ReduxActionTypes.CLEAR_PROVIDERS,\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"components/editorComponents/Button\";\nimport IntegrationUnavailableImage from \"assets/images/404-image.png\";\n\nconst Wrapper = styled.div`\n  text-align: center;\n  margin-top: 5%;\n  .bold-text {\n    font-weight: ${(props) => props.theme.fontWeights[3]};\n    font-size: 24px;\n  }\n  .unavailable-img {\n    width: 35%;\n  }\n  .button-position {\n    margin: auto;\n  }\n`;\n\ninterface Props {\n  title: string;\n  subtitle?: string;\n  buttonText: string;\n  onBackButton: () => void;\n}\n\nfunction NotFound(props: Props) {\n  const { buttonText, onBackButton, subtitle, title } = props;\n\n  return (\n    <Wrapper>\n      <img\n        alt={title || \"Unavailable\"}\n        className=\"unavailable-img\"\n        src={IntegrationUnavailableImage}\n      />\n      <div>\n        <p className=\"bold-text\">{title}</p>\n        {subtitle && <p>{subtitle}</p>}\n        <Button\n          className=\"button-position\"\n          filled\n          icon=\"arrow-right\"\n          iconAlignment=\"right\"\n          intent=\"primary\"\n          onClick={() => onBackButton()}\n          size=\"small\"\n          text={buttonText}\n        />\n      </div>\n    </Wrapper>\n  );\n}\n\nexport default NotFound;\n","import { Datasource } from \"entities/Datasource\";\nimport { isStoredDatasource } from \"entities/Action\";\nimport React from \"react\";\nimport { isNil } from \"lodash\";\nimport { useSelector } from \"react-redux\";\nimport { Colors } from \"constants/Colors\";\nimport { useParams } from \"react-router\";\n\nimport {\n  getActionsForCurrentPage,\n  getPluginImages,\n} from \"selectors/entitiesSelector\";\nimport styled from \"styled-components\";\nimport { AppState } from \"@appsmith/reducers\";\nimport history from \"utils/history\";\n\nimport RenderDatasourceInformation from \"pages/Editor/DataSourceEditor/DatasourceSection\";\nimport { BaseButton } from \"components/designSystems/appsmith/BaseButton\";\nimport { saasEditorDatasourceIdURL } from \"RouteBuilder\";\n\nconst Wrapper = styled.div`\n  border: 2px solid #d6d6d6;\n  padding: 18px;\n  margin-top: 18px;\n`;\n\nconst ActionButton = styled(BaseButton)`\n  &&&& {\n    height: 36px;\n    max-width: 120px;\n    width: auto;\n  }\n\n  span > svg > path {\n    stroke: white;\n  }\n`;\n\nconst DatasourceImage = styled.img`\n  height: 24px;\n  width: auto;\n`;\n\nconst EditDatasourceButton = styled(BaseButton)`\n  &&&& {\n    height: 36px;\n    max-width: 160px;\n    border: 1px solid ${Colors.GEYSER_LIGHT};\n    width: auto;\n  }\n`;\n\nconst DatasourceName = styled.span`\n  margin-left: 10px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nconst DatasourceCardHeader = styled.div`\n  justify-content: space-between;\n  display: flex;\n`;\n\nconst DatasourceNameWrapper = styled.div`\n  flex-direction: row;\n  align-items: center;\n  display: flex;\n`;\n\nconst Queries = styled.div`\n  color: ${Colors.DOVE_GRAY};\n  font-size: 14px;\n  display: inline-block;\n  margin-top: 11px;\n`;\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\ntype DatasourceCardProps = {\n  datasource: Datasource;\n  onCreate: (datasource: Datasource) => void;\n};\n\n// TODO: This is largely a quick copy pasta and edit of QueryEditor/DatasourceCard.tsx\n// When we move Google Sheets over to regular oauth2 integrations, we will need to refactor this.\nfunction DatasourceCard(props: DatasourceCardProps) {\n  const pluginImages = useSelector(getPluginImages);\n  const params = useParams<{\n    pageId: string;\n    pluginPackageName: string;\n  }>();\n  const { datasource } = props;\n  const datasourceFormConfigs = useSelector(\n    (state: AppState) => state.entities.plugins.formConfigs,\n  );\n  const queryActions = useSelector(getActionsForCurrentPage);\n  const queriesWithThisDatasource = queryActions.filter(\n    (action) =>\n      isStoredDatasource(action.config.datasource) &&\n      action.config.datasource.id === datasource.id,\n  ).length;\n\n  const currentFormConfig: Array<any> =\n    datasourceFormConfigs[datasource?.pluginId ?? \"\"];\n  const QUERY = queriesWithThisDatasource > 1 ? \"APIs\" : \"API\";\n\n  const editDatasource = () => {\n    history.push(\n      saasEditorDatasourceIdURL({\n        ...params,\n        datasourceId: datasource.id,\n      }),\n    );\n  };\n\n  return (\n    <Wrapper>\n      <DatasourceCardHeader className=\"t--datasource-name\">\n        <div style={{ flex: 1 }}>\n          <DatasourceNameWrapper>\n            <DatasourceImage\n              alt=\"Datasource\"\n              className=\"dataSourceImage\"\n              src={pluginImages[datasource.pluginId]}\n            />\n            <DatasourceName>{datasource.name}</DatasourceName>\n          </DatasourceNameWrapper>\n          <Queries>\n            {queriesWithThisDatasource\n              ? `${queriesWithThisDatasource} ${QUERY} on this page`\n              : \"No API is using this datasource\"}\n          </Queries>\n        </div>\n        <ButtonsWrapper>\n          <EditDatasourceButton\n            className=\"t--edit-datasource\"\n            icon={\"edit\"}\n            onClick={editDatasource}\n            text=\"Edit Datasource\"\n          />\n          <ActionButton\n            buttonStyle=\"PRIMARY\"\n            className=\"t--create-api\"\n            icon={\"plus\"}\n            onClick={() => props.onCreate(datasource)}\n            text=\"New API\"\n          />\n        </ButtonsWrapper>\n      </DatasourceCardHeader>\n      {!isNil(currentFormConfig) ? (\n        <RenderDatasourceInformation\n          config={currentFormConfig[0]}\n          datasource={datasource}\n        />\n      ) : (\n        undefined\n      )}\n    </Wrapper>\n  );\n}\n\nexport default DatasourceCard;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Plugin } from \"api/PluginApi\";\nimport {\n  getDatasourcesByPluginId,\n  getPluginByPackageName,\n} from \"selectors/entitiesSelector\";\nimport NotFound from \"pages/common/NotFound\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { createDatasourceFromForm } from \"actions/datasourceActions\";\nimport { SaaSAction } from \"entities/Action\";\nimport { createActionRequest } from \"actions/pluginActionActions\";\nimport { Datasource } from \"entities/Datasource\";\nimport { createNewApiName } from \"utils/AppsmithUtils\";\nimport { ActionDataState } from \"reducers/entityReducers/actionsReducer\";\n\n// Design\nimport CenteredWrapper from \"components/designSystems/appsmith/CenteredWrapper\";\nimport styled from \"styled-components\";\nimport { Spinner, Button } from \"@blueprintjs/core\";\nimport DatasourceCard from \"pages/Editor/SaaSEditor/DatasourceCard\";\nimport {\n  getCurrentApplicationId,\n  getIsEditorInitialized,\n  selectURLSlugs,\n} from \"selectors/editorSelectors\";\nimport { INTEGRATION_TABS } from \"constants/routes\";\nimport { integrationEditorURL } from \"RouteBuilder\";\n\nconst IntegrationHomePage = styled.div`\n  padding: 20px;\n  padding-top: 30px;\n  overflow: auto;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n\n  .sectionHeader {\n    font-weight: ${(props) => props.theme.fontWeights[2]};\n    font-size: ${(props) => props.theme.fontSizes[4]}px;\n  }\n`;\n\nconst LoadingContainer = styled(CenteredWrapper)`\n  height: 50%;\n`;\n\nconst AddDatasource = styled(Button)`\n  padding: 23px;\n  border: 2px solid #d6d6d6;\n  justify-content: flex-start;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nconst Boundary = styled.hr`\n  border: 1px solid #d0d7dd;\n  margin-top: 16px;\n`;\n\ninterface StateProps {\n  plugin?: Plugin;\n  actions: ActionDataState;\n  datasources: Datasource[];\n  isCreating: boolean;\n  isEditorInitialized: boolean;\n  applicationId: string;\n  applicationSlug: string;\n  pageSlug: string;\n}\n\ninterface DispatchFunctions {\n  createDatasource: (data: any) => void;\n  createAction: (data: Partial<SaaSAction>) => void;\n}\n\ntype RouteProps = RouteComponentProps<{\n  pageId: string;\n  pluginPackageName: string;\n}>;\n\ntype Props = StateProps & DispatchFunctions & RouteProps;\nclass ListView extends React.Component<Props> {\n  handleCreateNewDatasource = (pluginId: string) => {\n    this.props.createDatasource({ pluginId });\n  };\n\n  handleCreateNewAPI = (datasource: Datasource) => {\n    const {\n      actions,\n      location,\n      match: {\n        params: { pageId },\n      },\n    } = this.props;\n    const params: string = location.search;\n    let pgId = new URLSearchParams(params).get(\"importTo\");\n    if (!pgId) {\n      pgId = pageId;\n    }\n    if (pgId) {\n      const newApiName = createNewApiName(actions, pgId);\n\n      this.props.createAction({\n        name: newApiName,\n        pageId: pgId,\n        pluginId: datasource.pluginId,\n        datasource: {\n          id: datasource.id,\n        },\n      });\n    }\n  };\n\n  render() {\n    const { isCreating, isEditorInitialized, plugin } = this.props;\n    if (!plugin) {\n      return this.renderNotFound();\n    }\n    if (isCreating || !isEditorInitialized) {\n      return this.renderLoading();\n    }\n    return this.renderPage();\n  }\n\n  renderPage() {\n    const { datasources, plugin } = this.props;\n    if (!plugin) {\n      return this.renderNotFound();\n    }\n    return (\n      <IntegrationHomePage>\n        <p className=\"sectionHeader\">Select a datasource or create a new one</p>\n        <Boundary />\n\n        <AddDatasource\n          className=\"t--add-datasource\"\n          fill\n          icon={\"plus\"}\n          minimal\n          onClick={() => this.handleCreateNewDatasource(plugin.id)}\n          text=\"New Datasource\"\n        />\n\n        {datasources.map((datasource) => {\n          return (\n            <DatasourceCard\n              datasource={datasource}\n              key={datasource.id}\n              onCreate={this.handleCreateNewAPI}\n            />\n          );\n        })}\n      </IntegrationHomePage>\n    );\n  }\n\n  renderLoading() {\n    return (\n      <LoadingContainer>\n        <Spinner size={30} />\n      </LoadingContainer>\n    );\n  }\n\n  renderNotFound() {\n    const {\n      history,\n      match: {\n        params: { pageId },\n      },\n    } = this.props;\n    return (\n      <IntegrationHomePage>\n        <NotFound\n          buttonText=\"Go back to Datasources\"\n          onBackButton={() =>\n            history.push(\n              integrationEditorURL({\n                pageId,\n                selectedTab: INTEGRATION_TABS.ACTIVE,\n              }),\n            )\n          }\n          title=\"Datasources/Queries Not found\"\n        />\n      </IntegrationHomePage>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppState, props: RouteProps): StateProps => {\n  const plugin = getPluginByPackageName(\n    state,\n    props.match.params.pluginPackageName,\n  );\n  let datasources: Datasource[] = [];\n  if (plugin) {\n    datasources = getDatasourcesByPluginId(state, plugin.id);\n  }\n  const { applicationSlug, pageSlug } = selectURLSlugs(state);\n  return {\n    plugin,\n    actions: state.entities.actions,\n    isCreating: state.ui.apiPane.isCreating,\n    isEditorInitialized: getIsEditorInitialized(state),\n    datasources: datasources,\n    applicationId: getCurrentApplicationId(state),\n    applicationSlug,\n    pageSlug,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any): DispatchFunctions => {\n  return {\n    createDatasource: (data: any) => dispatch(createDatasourceFromForm(data)),\n    createAction: (data: Partial<SaaSAction>) => {\n      dispatch(createActionRequest(data));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ListView);\n","import {\n  SAAS_EDITOR_PATH,\n  SAAS_EDITOR_DATASOURCE_ID_PATH,\n  SAAS_EDITOR_API_ID_PATH,\n} from \"pages/Editor/SaaSEditor/constants\";\nimport ListView from \"pages/Editor/SaaSEditor/ListView\";\nimport DatasourceForm from \"pages/Editor/SaaSEditor/DatasourceForm\";\nimport QueryEditor from \"../QueryEditor\";\n\nexport const SaaSEditorRoutes = [\n  {\n    path: SAAS_EDITOR_PATH,\n    component: ListView,\n  },\n  {\n    path: SAAS_EDITOR_DATASOURCE_ID_PATH,\n    component: DatasourceForm,\n  },\n  {\n    path: SAAS_EDITOR_API_ID_PATH,\n    component: QueryEditor,\n  },\n];\n","import React from \"react\";\nimport { Icon } from \"@blueprintjs/core\";\nimport { Button, Category, Text, TextType } from \"design-system-old\";\nimport styled from \"styled-components\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCanvasWidgets,\n  getDatasources,\n  getPageActions,\n} from \"selectors/entitiesSelector\";\nimport { getCurrentThemeDetails } from \"selectors/themeSelectors\";\nimport { useIsWidgetActionConnectionPresent } from \"pages/Editor/utils\";\nimport { getEvaluationInverseDependencyMap } from \"selectors/dataTreeSelectors\";\nimport { APPLICATIONS_URL, INTEGRATION_TABS } from \"constants/routes\";\nimport {\n  getApplicationLastDeployedAt,\n  getCurrentApplicationId,\n  getCurrentPageId,\n} from \"selectors/editorSelectors\";\nimport history from \"utils/history\";\nimport { toggleInOnboardingWidgetSelection } from \"actions/onboardingActions\";\nimport { ReduxActionTypes } from \"@appsmith/constants/ReduxActionConstants\";\nimport {\n  getFirstTimeUserOnboardingComplete,\n  getEnableFirstTimeUserOnboarding,\n} from \"selectors/onboardingSelectors\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { Colors } from \"constants/Colors\";\nimport { forceOpenWidgetPanel } from \"actions/widgetSidebarActions\";\nimport { bindDataOnCanvas } from \"actions/pluginActionActions\";\nimport { Redirect } from \"react-router\";\nimport {\n  ONBOARDING_CHECKLIST_ACTIONS,\n  ONBOARDING_CHECKLIST_BANNER_BODY,\n  ONBOARDING_CHECKLIST_BANNER_HEADER,\n  ONBOARDING_CHECKLIST_HEADER,\n  ONBOARDING_CHECKLIST_BODY,\n  ONBOARDING_CHECKLIST_COMPLETE_TEXT,\n  ONBOARDING_CHECKLIST_CONNECT_DATA_SOURCE,\n  ONBOARDING_CHECKLIST_CREATE_A_QUERY,\n  ONBOARDING_CHECKLIST_ADD_WIDGETS,\n  ONBOARDING_CHECKLIST_CONNECT_DATA_TO_WIDGET,\n  ONBOARDING_CHECKLIST_DEPLOY_APPLICATIONS,\n  ONBOARDING_CHECKLIST_FOOTER,\n  ONBOARDING_CHECKLIST_BANNER_BUTTON,\n  createMessage,\n} from \"@appsmith/constants/messages\";\nimport { Datasource } from \"entities/Datasource\";\nimport { ActionDataState } from \"reducers/entityReducers/actionsReducer\";\nimport { CanvasWidgetsReduxState } from \"reducers/entityReducers/canvasWidgetsReducer\";\nimport { triggerWelcomeTour } from \"./Utils\";\nimport { builderURL, integrationEditorURL } from \"RouteBuilder\";\n\nconst Wrapper = styled.div`\n  padding: ${(props) => props.theme.spaces[7]}px 55px;\n  background: #fff;\n  height: calc(100vh - ${(props) => props.theme.smallHeaderHeight});\n  overflow: auto;\n`;\n\nconst Pageheader = styled.h4`\n  font-size: ${(props) => props.theme.fontSizes[6]}px;\n`;\n\nconst PageSubHeader = styled.p`\n  width: 100%;\n  margin-bottom: ${(props) => props.theme.spaces[12]}px;\n`;\n\nconst StatusWrapper = styled.p`\n  width: 100%;\n  margin-bottom: ${(props) => props.theme.spaces[12]}px;\n  & span {\n    font-weight: 700;\n  }\n`;\n\nconst LIST_WIDTH_OFFSET = 160;\n\nconst StyledList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style-type: none;\n  width: calc(100% - ${LIST_WIDTH_OFFSET}px);\n  overflow: auto;\n`;\n\nconst StyledListItem = styled.li`\n  width: 100%;\n  display: flex;\n  padding: ${(props) => props.theme.spaces[12]}px 0px;\n  align-items: center;\n  border-bottom: 1px solid ${(props) => props.theme.colors.grid};\n  &:first-child {\n    border-top: 1px solid ${(props) => props.theme.colors.grid};\n  }\n`;\n\nconst CHECKLIST_WIDTH_OFFSET = 268;\n\nconst ChecklistText = styled.div<{ active: boolean }>`\n  flex-basis: calc(100% - ${CHECKLIST_WIDTH_OFFSET}px);\n  color: ${(props) => (props.active ? props.theme.colors.text.normal : \"\")};\n  & span {\n    font-weight: 700;\n  }\n`;\n\nconst CompeleteMarkerIcon = styled.div<{ success: boolean }>`\n  width: 25px;\n  height: 25px;\n  border-radius: 30px;\n  border: 2px solid;\n  border-color: ${(props) =>\n    props.success ? props.theme.colors.success.main : Colors.SILVER_CHALICE};\n  padding: 2px 2px;\n\n  .bp3-icon {\n    vertical-align: initial;\n  }\n`;\n\nconst StyledCompleteMarker = styled.div`\n  flex-basis: 40px;\n`;\n\nconst StyledButton = styled(Button)`\n  width: 218px;\n  height: 30px;\n`;\n\nconst Backbutton = styled.span`\n  color: ${Colors.DIESEL};\n  cursor: pointer;\n`;\n\nconst Banner = styled.div`\n  width: calc(100% - 113px);\n  border: 1px solid ${(props) => props.theme.colors.table.border};\n  padding: ${(props) => props.theme.spaces[7]}px;\n  margin-top: ${(props) => props.theme.spaces[7]}px;\n`;\n\nconst BannerHeader = styled.h5`\n  font-size: 20px;\n  margin: 0;\n`;\n\nconst BannerText = styled.p`\n  margin: ${(props) => props.theme.spaces[3]}px 0px\n    ${(props) => props.theme.spaces[7]}px;\n`;\n\nconst StyledImg = styled.img`\n  width: 20px;\n  margin-right: 5px;\n`;\n\nconst StyledFooter = styled.div`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  margin-top: ${(props) => props.theme.spaces[9]}px;\n  margin-bottom: ${(props) => props.theme.spaces[9]}px;\n`;\n\nfunction getSuggestedNextActionAndCompletedTasks(\n  datasources: Datasource[],\n  actions: ActionDataState,\n  widgets: CanvasWidgetsReduxState,\n  isConnectionPresent: boolean,\n  isDeployed: boolean,\n) {\n  let suggestedNextAction;\n  if (!datasources.length) {\n    suggestedNextAction = createMessage(\n      () => ONBOARDING_CHECKLIST_ACTIONS.CONNECT_A_DATASOURCE,\n    );\n  } else if (!actions.length) {\n    suggestedNextAction = createMessage(\n      () => ONBOARDING_CHECKLIST_ACTIONS.CREATE_A_QUERY,\n    );\n  } else if (Object.keys(widgets).length === 1) {\n    suggestedNextAction = createMessage(\n      () => ONBOARDING_CHECKLIST_ACTIONS.ADD_WIDGETS,\n    );\n  } else if (!isConnectionPresent) {\n    suggestedNextAction = createMessage(\n      () => ONBOARDING_CHECKLIST_ACTIONS.CONNECT_DATA_TO_WIDGET,\n    );\n  } else if (!isDeployed) {\n    suggestedNextAction = createMessage(\n      () => ONBOARDING_CHECKLIST_ACTIONS.DEPLOY_APPLICATIONS,\n    );\n  }\n  let completedTasks = 0;\n\n  if (datasources.length) {\n    completedTasks++;\n  }\n  if (actions.length) {\n    completedTasks++;\n  }\n  if (Object.keys(widgets).length > 1) {\n    completedTasks++;\n  }\n  if (isConnectionPresent) {\n    completedTasks++;\n  }\n  if (isDeployed) {\n    completedTasks++;\n  }\n\n  return { suggestedNextAction, completedTasks };\n}\n\nexport default function OnboardingChecklist() {\n  const dispatch = useDispatch();\n  const datasources = useSelector(getDatasources);\n  const pageId = useSelector(getCurrentPageId);\n  const actions = useSelector(getPageActions(pageId));\n  const widgets = useSelector(getCanvasWidgets);\n  const deps = useSelector(getEvaluationInverseDependencyMap);\n  const isConnectionPresent = useIsWidgetActionConnectionPresent(\n    widgets,\n    actions,\n    deps,\n  );\n  const theme = useSelector(getCurrentThemeDetails);\n  const applicationId = useSelector(getCurrentApplicationId);\n  const isDeployed = !!useSelector(getApplicationLastDeployedAt);\n  const isCompleted = useSelector(getFirstTimeUserOnboardingComplete);\n  const isFirstTimeUserOnboardingEnabled = useSelector(\n    getEnableFirstTimeUserOnboarding,\n  );\n  if (!isFirstTimeUserOnboardingEnabled && !isCompleted) {\n    return <Redirect to={builderURL({ pageId })} />;\n  }\n  const {\n    completedTasks,\n    suggestedNextAction,\n  } = getSuggestedNextActionAndCompletedTasks(\n    datasources,\n    actions,\n    widgets,\n    isConnectionPresent,\n    isDeployed,\n  );\n  const onconnectYourWidget = () => {\n    const action = actions[0];\n    if (action && applicationId && pageId) {\n      dispatch(\n        bindDataOnCanvas({\n          queryId: action.config.id,\n          applicationId,\n          pageId,\n        }),\n      );\n    } else {\n      history.push(builderURL({ pageId }));\n    }\n    AnalyticsUtil.logEvent(\"SIGNPOSTING_CONNECT_WIDGET_CLICK\");\n  };\n  return (\n    <Wrapper data-testid=\"checklist-wrapper\">\n      <Backbutton\n        className=\"t--checklist-back\"\n        onClick={() => history.push(builderURL({ pageId }))}\n      >\n        <Icon color={Colors.DIESEL} icon=\"chevron-left\" iconSize={16} />\n        <Text style={{ lineHeight: \"14px\" }} type={TextType.P1}>\n          Back\n        </Text>\n      </Backbutton>\n      {isCompleted && (\n        <Banner data-testid=\"checklist-completion-banner\">\n          <BannerHeader>\n            {createMessage(ONBOARDING_CHECKLIST_BANNER_HEADER)}\n          </BannerHeader>\n          <BannerText>\n            {createMessage(ONBOARDING_CHECKLIST_BANNER_BODY)}\n          </BannerText>\n          <StyledButton\n            category={Category.primary}\n            onClick={() => history.push(APPLICATIONS_URL)}\n            text={createMessage(ONBOARDING_CHECKLIST_BANNER_BUTTON)}\n            type=\"button\"\n          />\n        </Banner>\n      )}\n      <Pageheader className=\"font-bold py-6\">\n        {createMessage(ONBOARDING_CHECKLIST_HEADER)}\n      </Pageheader>\n      <PageSubHeader>{createMessage(ONBOARDING_CHECKLIST_BODY)}</PageSubHeader>\n      <StatusWrapper>\n        <span\n          className=\"t--checklist-complete-status\"\n          data-testid=\"checklist-completion-info\"\n        >\n          {completedTasks} of 5\n        </span>\n        &nbsp;{createMessage(ONBOARDING_CHECKLIST_COMPLETE_TEXT)}\n      </StatusWrapper>\n      <StyledList>\n        <StyledListItem>\n          <StyledCompleteMarker>\n            <CompeleteMarkerIcon\n              success={!!datasources.length || !!actions.length}\n            >\n              <Icon\n                className=\"flex\"\n                color={\n                  datasources.length || actions.length\n                    ? theme.colors.success.main\n                    : Colors.SILVER_CHALICE\n                }\n                data-testid=\"checklist-datasource-complete-icon\"\n                icon={\n                  datasources.length || actions.length\n                    ? \"tick-circle\"\n                    : \"small-tick\"\n                }\n                iconSize={17}\n              />\n            </CompeleteMarkerIcon>\n          </StyledCompleteMarker>\n          <ChecklistText active={!!datasources.length || !!actions.length}>\n            <span>\n              {createMessage(ONBOARDING_CHECKLIST_CONNECT_DATA_SOURCE.bold)}\n            </span>\n            &nbsp;\n            {createMessage(ONBOARDING_CHECKLIST_CONNECT_DATA_SOURCE.normal)}\n          </ChecklistText>\n          {!datasources.length && !actions.length && (\n            <StyledButton\n              category={\n                suggestedNextAction ===\n                createMessage(\n                  () => ONBOARDING_CHECKLIST_ACTIONS.CONNECT_A_DATASOURCE,\n                )\n                  ? Category.primary\n                  : Category.secondary\n              }\n              className=\"t--checklist-datasource-button\"\n              data-testid=\"checklist-datasource-button\"\n              onClick={() => {\n                AnalyticsUtil.logEvent(\"SIGNPOSTING_CREATE_DATASOURCE_CLICK\", {\n                  from: \"CHECKLIST\",\n                });\n                history.push(\n                  integrationEditorURL({\n                    pageId,\n                    selectedTab: INTEGRATION_TABS.NEW,\n                  }),\n                );\n              }}\n              text={createMessage(\n                () => ONBOARDING_CHECKLIST_ACTIONS.CONNECT_A_DATASOURCE,\n              )}\n              type=\"button\"\n            />\n          )}\n        </StyledListItem>\n        <StyledListItem>\n          <StyledCompleteMarker>\n            <CompeleteMarkerIcon success={!!actions.length}>\n              <Icon\n                className=\"flex\"\n                color={\n                  actions.length\n                    ? theme.colors.success.main\n                    : Colors.SILVER_CHALICE\n                }\n                data-testid=\"checklist-action-complete-icon\"\n                icon={actions.length ? \"tick-circle\" : \"small-tick\"}\n                iconSize={17}\n              />\n            </CompeleteMarkerIcon>\n          </StyledCompleteMarker>\n          <ChecklistText active={!!actions.length}>\n            <span>\n              {createMessage(ONBOARDING_CHECKLIST_CREATE_A_QUERY.bold)}\n            </span>\n            &nbsp;{createMessage(ONBOARDING_CHECKLIST_CREATE_A_QUERY.normal)}\n          </ChecklistText>\n          {!actions.length && (\n            <StyledButton\n              category={\n                suggestedNextAction ===\n                createMessage(() => ONBOARDING_CHECKLIST_ACTIONS.CREATE_A_QUERY)\n                  ? Category.primary\n                  : Category.secondary\n              }\n              className=\"t--checklist-action-button\"\n              data-testid=\"checklist-action-button\"\n              disabled={!datasources.length}\n              onClick={() => {\n                AnalyticsUtil.logEvent(\"SIGNPOSTING_CREATE_QUERY_CLICK\", {\n                  from: \"CHECKLIST\",\n                });\n                history.push(\n                  integrationEditorURL({\n                    pageId,\n                    selectedTab: INTEGRATION_TABS.ACTIVE,\n                  }),\n                );\n              }}\n              tag=\"button\"\n              text={createMessage(\n                () => ONBOARDING_CHECKLIST_ACTIONS.CREATE_A_QUERY,\n              )}\n              type=\"button\"\n            />\n          )}\n        </StyledListItem>\n        <StyledListItem>\n          <StyledCompleteMarker>\n            <CompeleteMarkerIcon success={Object.keys(widgets).length > 1}>\n              <Icon\n                className=\"flex\"\n                color={\n                  Object.keys(widgets).length > 1\n                    ? theme.colors.success.main\n                    : Colors.SILVER_CHALICE\n                }\n                data-testid=\"checklist-widget-complete-icon\"\n                icon={\n                  Object.keys(widgets).length > 1 ? \"tick-circle\" : \"small-tick\"\n                }\n                iconSize={17}\n              />\n            </CompeleteMarkerIcon>\n          </StyledCompleteMarker>\n          <ChecklistText active={Object.keys(widgets).length > 1}>\n            <span>{createMessage(ONBOARDING_CHECKLIST_ADD_WIDGETS.bold)}</span>\n            &nbsp;{createMessage(ONBOARDING_CHECKLIST_ADD_WIDGETS.normal)}\n          </ChecklistText>\n          {Object.keys(widgets).length === 1 && (\n            <StyledButton\n              category={\n                suggestedNextAction ===\n                createMessage(() => ONBOARDING_CHECKLIST_ACTIONS.ADD_WIDGETS)\n                  ? Category.primary\n                  : Category.secondary\n              }\n              className=\"t--checklist-widget-button\"\n              data-testid=\"checklist-widget-button\"\n              onClick={() => {\n                AnalyticsUtil.logEvent(\"SIGNPOSTING_ADD_WIDGET_CLICK\", {\n                  from: \"CHECKLIST\",\n                });\n                dispatch(toggleInOnboardingWidgetSelection(true));\n                dispatch(forceOpenWidgetPanel(true));\n                history.push(builderURL({ pageId }));\n              }}\n              text={createMessage(\n                () => ONBOARDING_CHECKLIST_ACTIONS.ADD_WIDGETS,\n              )}\n              type=\"button\"\n            />\n          )}\n        </StyledListItem>\n        <StyledListItem>\n          <StyledCompleteMarker>\n            <CompeleteMarkerIcon success={!!isConnectionPresent}>\n              <Icon\n                className=\"flex\"\n                color={\n                  isConnectionPresent\n                    ? theme.colors.success.main\n                    : Colors.SILVER_CHALICE\n                }\n                data-testid=\"checklist-connection-complete-icon\"\n                icon={isConnectionPresent ? \"tick-circle\" : \"small-tick\"}\n                iconSize={17}\n              />\n            </CompeleteMarkerIcon>\n          </StyledCompleteMarker>\n          <ChecklistText active={!!isConnectionPresent}>\n            <span>\n              {createMessage(ONBOARDING_CHECKLIST_CONNECT_DATA_TO_WIDGET.bold)}\n            </span>\n            &nbsp;\n            {createMessage(ONBOARDING_CHECKLIST_CONNECT_DATA_TO_WIDGET.normal)}\n          </ChecklistText>\n          {!isConnectionPresent && (\n            <StyledButton\n              category={\n                suggestedNextAction ===\n                createMessage(\n                  () => ONBOARDING_CHECKLIST_ACTIONS.CONNECT_DATA_TO_WIDGET,\n                )\n                  ? Category.primary\n                  : Category.secondary\n              }\n              className=\"t--checklist-connection-button\"\n              data-testid=\"checklist-connection-button\"\n              disabled={Object.keys(widgets).length === 1 || !actions.length}\n              onClick={onconnectYourWidget}\n              tag=\"button\"\n              text={createMessage(\n                () => ONBOARDING_CHECKLIST_ACTIONS.CONNECT_DATA_TO_WIDGET,\n              )}\n              type=\"button\"\n            />\n          )}\n        </StyledListItem>\n        <StyledListItem>\n          <StyledCompleteMarker>\n            <CompeleteMarkerIcon success={!!isDeployed}>\n              <Icon\n                className=\"flex\"\n                color={\n                  isDeployed ? theme.colors.success.main : Colors.SILVER_CHALICE\n                }\n                data-testid=\"checklist-deploy-complete-icon\"\n                icon={isDeployed ? \"tick-circle\" : \"small-tick\"}\n                iconSize={17}\n              />\n            </CompeleteMarkerIcon>\n          </StyledCompleteMarker>\n          <ChecklistText active={!!isDeployed}>\n            <span>\n              {createMessage(ONBOARDING_CHECKLIST_DEPLOY_APPLICATIONS.bold)}\n            </span>\n            &nbsp;\n            {createMessage(ONBOARDING_CHECKLIST_DEPLOY_APPLICATIONS.normal)}\n          </ChecklistText>\n          {!isDeployed && (\n            <StyledButton\n              category={\n                suggestedNextAction ===\n                createMessage(\n                  () => ONBOARDING_CHECKLIST_ACTIONS.DEPLOY_APPLICATIONS,\n                )\n                  ? Category.primary\n                  : Category.secondary\n              }\n              className=\"t--checklist-deploy-button\"\n              data-testid=\"checklist-deploy-button\"\n              onClick={() => {\n                AnalyticsUtil.logEvent(\"SIGNPOSTING_PUBLISH_CLICK\", {\n                  from: \"CHECKLIST\",\n                });\n                dispatch({\n                  type: ReduxActionTypes.PUBLISH_APPLICATION_INIT,\n                  payload: {\n                    applicationId,\n                  },\n                });\n              }}\n              text={createMessage(\n                () => ONBOARDING_CHECKLIST_ACTIONS.DEPLOY_APPLICATIONS,\n              )}\n              type=\"button\"\n            />\n          )}\n        </StyledListItem>\n      </StyledList>\n      <StyledFooter\n        className=\"flex\"\n        onClick={() => triggerWelcomeTour(dispatch)}\n      >\n        <StyledImg src=\"https://assets.appsmith.com/Rocket.png\" />\n        <Text style={{ lineHeight: \"14px\" }} type={TextType.P1}>\n          {createMessage(ONBOARDING_CHECKLIST_FOOTER)}\n        </Text>\n        <Icon\n          color={theme.colors.applications.iconColor}\n          icon=\"chevron-right\"\n          iconSize={16}\n        />\n      </StyledFooter>\n    </Wrapper>\n  );\n}\n","import { DATA_SOURCES_EDITOR_ID_PATH } from \"constants/routes\";\nimport DataSourceEditor from \"pages/Editor/DataSourceEditor\";\n\nexport const DatasourceEditorRoutes = [\n  {\n    path: DATA_SOURCES_EDITOR_ID_PATH,\n    component: DataSourceEditor,\n  },\n];\n","import React, { useEffect } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useLocation, useRouteMatch } from \"react-router\";\nimport ApiEditor from \"./APIEditor\";\nimport IntegrationEditor from \"./IntegrationEditor\";\nimport QueryEditor from \"./QueryEditor\";\nimport JSEditor from \"./JSEditor\";\nimport GeneratePage from \"./GeneratePage\";\nimport CurlImportForm from \"./APIEditor/CurlImportForm\";\nimport ProviderTemplates from \"./APIEditor/ProviderTemplates\";\nimport {\n  API_EDITOR_ID_PATH,\n  BUILDER_CHECKLIST_PATH,\n  BUILDER_CUSTOM_PATH,\n  CURL_IMPORT_PAGE_PATH,\n  GENERATE_TEMPLATE_FORM_PATH,\n  INTEGRATION_EDITOR_PATH,\n  JS_COLLECTION_EDITOR_PATH,\n  JS_COLLECTION_ID_PATH,\n  PROVIDER_TEMPLATE_PATH,\n  QUERIES_EDITOR_ID_PATH,\n} from \"constants/routes\";\nimport styled from \"styled-components\";\nimport { useSelector } from \"react-redux\";\nimport PerformanceTracker, {\n  PerformanceTransactionName,\n} from \"utils/PerformanceTracker\";\nimport * as Sentry from \"@sentry/react\";\nimport { SaaSEditorRoutes } from \"./SaaSEditor/routes\";\nimport OnboardingChecklist from \"./FirstTimeUserOnboarding/Checklist\";\nimport { DatasourceEditorRoutes } from \"@appsmith/pages/routes\";\nimport PropertyPaneContainer from \"pages/Editor/WidgetsEditor/PropertyPaneContainer\";\nimport { getPaneCount, isMultiPaneActive } from \"selectors/multiPaneSelectors\";\nimport { PaneLayoutOptions } from \"reducers/uiReducers/multiPaneReducer\";\n\nconst SentryRoute = Sentry.withSentryRouting(Route);\n\nconst Wrapper = styled.div<{ isVisible: boolean }>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: ${(props) => (!props.isVisible ? \"0px\" : \"100%\")};\n  height: 100%;\n  background-color: ${(props) => (props.isVisible ? \"white\" : \"transparent\")};\n  z-index: ${(props) => (props.isVisible ? 2 : -1)};\n  width: ${(props) => (!props.isVisible ? \"0\" : \"100%\")};\n  display: flex;\n  flex-direction: column;\n`;\n\nfunction EditorsRouter() {\n  const { path } = useRouteMatch();\n  const { pathname } = useLocation();\n  const isMultiPane = useSelector(isMultiPaneActive);\n  const paneCount = useSelector(getPaneCount);\n\n  useEffect(() => {\n    return () => {\n      PerformanceTracker.startTracking(\n        PerformanceTransactionName.CLOSE_SIDE_PANE,\n        { path: pathname },\n      );\n    };\n  });\n\n  const showPropertyPane = isMultiPane\n    ? paneCount === PaneLayoutOptions.TWO_PANE\n    : false;\n\n  return (\n    <Wrapper isVisible>\n      <Switch key={path}>\n        {showPropertyPane && (\n          <SentryRoute\n            component={PropertyPaneContainer}\n            exact\n            path={BUILDER_CUSTOM_PATH}\n          />\n        )}\n        <SentryRoute\n          component={IntegrationEditor}\n          exact\n          path={`${path}${INTEGRATION_EDITOR_PATH}`}\n        />\n        <SentryRoute\n          component={OnboardingChecklist}\n          exact\n          path={`${path}${BUILDER_CHECKLIST_PATH}`}\n        />\n        <SentryRoute\n          component={ApiEditor}\n          exact\n          path={`${path}${API_EDITOR_ID_PATH}`}\n        />\n        <SentryRoute\n          component={QueryEditor}\n          exact\n          path={`${path}${QUERIES_EDITOR_ID_PATH}`}\n        />\n        <SentryRoute\n          component={JSEditor}\n          exact\n          path={`${path}${JS_COLLECTION_EDITOR_PATH}`}\n        />\n        <SentryRoute\n          component={JSEditor}\n          exact\n          path={`${path}${JS_COLLECTION_ID_PATH}`}\n        />\n\n        <SentryRoute\n          component={CurlImportForm}\n          exact\n          path={`${path}${CURL_IMPORT_PAGE_PATH}`}\n        />\n        {SaaSEditorRoutes.map(({ component, path: childPath }) => (\n          <SentryRoute\n            component={component}\n            exact\n            key={path}\n            path={`${path}${childPath}`}\n          />\n        ))}\n        {DatasourceEditorRoutes.map(({ component, path: childPath }) => (\n          <SentryRoute\n            component={component}\n            exact\n            key={childPath}\n            path={`${path}${childPath}`}\n          />\n        ))}\n        <SentryRoute\n          component={ProviderTemplates}\n          exact\n          path={`${path}${PROVIDER_TEMPLATE_PATH}`}\n        />\n        <SentryRoute\n          component={GeneratePage}\n          exact\n          path={`${path}${GENERATE_TEMPLATE_FORM_PATH}`}\n        />\n      </Switch>\n    </Wrapper>\n  );\n}\n\nexport default EditorsRouter;\n","import * as Sentry from \"@sentry/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React, { useCallback } from \"react\";\nimport { Route, Switch, useRouteMatch } from \"react-router\";\n\nimport { updateExplorerWidthAction } from \"actions/explorerActions\";\nimport classNames from \"classnames\";\nimport EntityExplorerSidebar from \"components/editorComponents/Sidebar\";\nimport {\n  BUILDER_CUSTOM_PATH,\n  BUILDER_PATH,\n  BUILDER_PATH_DEPRECATED,\n  WIDGETS_EDITOR_BASE_PATH,\n  WIDGETS_EDITOR_ID_PATH,\n} from \"constants/routes\";\nimport { previewModeSelector } from \"selectors/editorSelectors\";\nimport { Installer } from \"pages/Editor/Explorer/Libraries/Installer\";\nimport { getExplorerWidth } from \"selectors/explorerSelector\";\nimport BottomBar from \"./BottomBar\";\nimport WidgetsEditor from \"./WidgetsEditor\";\nimport EditorsRouter from \"./routes\";\nimport styled from \"styled-components\";\n\nconst SentryRoute = Sentry.withSentryRouting(Route);\n\nconst Container = styled.div`\n  display: flex;\n  height: calc(\n    100vh - ${(props) => props.theme.smallHeaderHeight} -\n      ${(props) => props.theme.bottomBarHeight}\n  );\n  background-color: ${(props) => props.theme.appBackground};\n`;\n\nfunction MainContainer() {\n  const dispatch = useDispatch();\n  const sidebarWidth = useSelector(getExplorerWidth);\n  const { path } = useRouteMatch();\n\n  /**\n   * on entity explorer sidebar width change\n   *\n   * @return void\n   */\n  const onLeftSidebarWidthChange = useCallback((newWidth) => {\n    dispatch(updateExplorerWidthAction(newWidth));\n  }, []);\n\n  /**\n   * on entity explorer sidebar drag end\n   *\n   * @return void\n   */\n  const onLeftSidebarDragEnd = useCallback(() => {\n    dispatch(updateExplorerWidthAction(sidebarWidth));\n  }, [sidebarWidth]);\n\n  const isPreviewMode = useSelector(previewModeSelector);\n\n  return (\n    <>\n      <Container className=\"relative w-full overflow-x-hidden\">\n        <EntityExplorerSidebar\n          onDragEnd={onLeftSidebarDragEnd}\n          onWidthChange={onLeftSidebarWidthChange}\n          width={sidebarWidth}\n        />\n        <div\n          className=\"relative flex flex-col w-full overflow-auto\"\n          id=\"app-body\"\n        >\n          <Switch key={BUILDER_PATH}>\n            <SentryRoute\n              component={WidgetsEditor}\n              exact\n              path={BUILDER_PATH_DEPRECATED}\n            />\n            <SentryRoute component={WidgetsEditor} exact path={BUILDER_PATH} />\n            <SentryRoute\n              component={WidgetsEditor}\n              exact\n              path={BUILDER_CUSTOM_PATH}\n            />\n            <SentryRoute\n              component={WidgetsEditor}\n              exact\n              path={`${path}${WIDGETS_EDITOR_BASE_PATH}`}\n            />\n            <SentryRoute\n              component={WidgetsEditor}\n              exact\n              path={`${path}${WIDGETS_EDITOR_ID_PATH}`}\n            />\n            <SentryRoute component={EditorsRouter} />\n          </Switch>\n        </div>\n      </Container>\n      <BottomBar\n        className={classNames({\n          \"translate-y-full bottom-0\": isPreviewMode,\n          \"translate-y-0 opacity-100\": !isPreviewMode,\n          \"transition-all transform duration-400\": true,\n        })}\n      />\n      <Installer left={sidebarWidth} />\n    </>\n  );\n}\n\nMainContainer.displayName = \"MainContainer\";\n\nexport default MainContainer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"@appsmith/reducers\";\nimport { Hotkey, Hotkeys } from \"@blueprintjs/core\";\nimport { HotkeysTarget } from \"@blueprintjs/core/lib/esnext/components/hotkeys/hotkeysTarget.js\";\nimport {\n  closePropertyPane,\n  closeTableFilterPane,\n  copyWidget,\n  cutWidget,\n  deleteSelectedWidget,\n  groupWidgets,\n  pasteWidget,\n} from \"actions/widgetActions\";\nimport { selectWidgetInitAction } from \"actions/widgetSelectionActions\";\nimport { setGlobalSearchCategory } from \"actions/globalSearchActions\";\nimport { getSelectedText, isMacOrIOS } from \"utils/helpers\";\nimport { getLastSelectedWidget, getSelectedWidgets } from \"selectors/ui\";\nimport { MAIN_CONTAINER_WIDGET_ID } from \"constants/WidgetConstants\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\nimport { WIDGETS_SEARCH_ID } from \"constants/Explorer\";\nimport { resetSnipingMode as resetSnipingModeAction } from \"actions/propertyPaneActions\";\nimport { showDebugger } from \"actions/debuggerActions\";\n\nimport { runActionViaShortcut } from \"actions/pluginActionActions\";\nimport {\n  filterCategories,\n  SEARCH_CATEGORY_ID,\n  SearchCategory,\n} from \"components/editorComponents/GlobalSearch/utils\";\nimport { redoAction, undoAction } from \"actions/pageActions\";\nimport { Toaster, Variant } from \"design-system-old\";\n\nimport { getAppMode } from \"selectors/applicationSelectors\";\nimport { APP_MODE } from \"entities/App\";\n\nimport {\n  createMessage,\n  SAVE_HOTKEY_TOASTER_MESSAGE,\n} from \"@appsmith/constants/messages\";\nimport { setPreviewModeAction } from \"actions/editorActions\";\nimport { previewModeSelector } from \"selectors/editorSelectors\";\nimport { getExplorerPinned } from \"selectors/explorerSelector\";\nimport { setExplorerPinnedAction } from \"actions/explorerActions\";\nimport { setIsGitSyncModalOpen } from \"actions/gitSyncActions\";\nimport { GitSyncModalTab } from \"entities/GitSync\";\nimport { matchBuilderPath } from \"constants/routes\";\nimport { toggleInstaller } from \"actions/JSLibraryActions\";\nimport { SelectionRequestType } from \"sagas/WidgetSelectUtils\";\n\ntype Props = {\n  copySelectedWidget: () => void;\n  pasteCopiedWidget: (mouseLocation: { x: number; y: number }) => void;\n  deleteSelectedWidget: () => void;\n  cutSelectedWidget: () => void;\n  groupSelectedWidget: () => void;\n  setGlobalSearchCategory: (category: SearchCategory) => void;\n  resetSnipingMode: () => void;\n  openDebugger: () => void;\n  closeProppane: () => void;\n  closeTableFilterProppane: () => void;\n  executeAction: () => void;\n  selectAllWidgetsInit: () => void;\n  deselectAllWidgets: () => void;\n  selectedWidget?: string;\n  selectedWidgets: string[];\n  isDebuggerOpen: boolean;\n  children: React.ReactNode;\n  undo: () => void;\n  redo: () => void;\n  appMode?: APP_MODE;\n  isPreviewMode: boolean;\n  setPreviewModeAction: (shouldSet: boolean) => void;\n  isExplorerPinned: boolean;\n  setExplorerPinnedAction: (shouldPinned: boolean) => void;\n  showCommitModal: () => void;\n  getMousePosition: () => { x: number; y: number };\n  hideInstaller: () => void;\n};\n\n@HotkeysTarget\nclass GlobalHotKeys extends React.Component<Props> {\n  public stopPropagationIfWidgetSelected(e: KeyboardEvent): boolean {\n    const multipleWidgetsSelected =\n      this.props.selectedWidgets && this.props.selectedWidgets.length;\n    const singleWidgetSelected =\n      this.props.selectedWidget &&\n      this.props.selectedWidget != MAIN_CONTAINER_WIDGET_ID;\n    if (\n      (singleWidgetSelected || multipleWidgetsSelected) &&\n      !getSelectedText()\n    ) {\n      e.preventDefault();\n      e.stopPropagation();\n      return true;\n    }\n    return false;\n  }\n\n  public onOnmnibarHotKeyDown(\n    e: KeyboardEvent,\n    categoryId: SEARCH_CATEGORY_ID = SEARCH_CATEGORY_ID.NAVIGATION,\n  ) {\n    e.preventDefault();\n\n    // don't open omnibar if preview mode is on\n    if (this.props.isPreviewMode) return;\n\n    const category = filterCategories[categoryId];\n    this.props.setGlobalSearchCategory(category);\n    this.props.hideInstaller();\n    AnalyticsUtil.logEvent(\"OPEN_OMNIBAR\", {\n      source: \"HOTKEY_COMBO\",\n      category: category.title,\n    });\n  }\n\n  public renderHotkeys() {\n    return (\n      <Hotkeys>\n        <Hotkey\n          combo=\"mod + f\"\n          global\n          label=\"Search entities\"\n          onKeyDown={(e: any) => {\n            const widgetSearchInput = document.getElementById(\n              WIDGETS_SEARCH_ID,\n            );\n            if (widgetSearchInput) {\n              widgetSearchInput.focus();\n              e.preventDefault();\n              e.stopPropagation();\n            }\n          }}\n        />\n        <Hotkey\n          allowInInput\n          combo=\"mod + p\"\n          global\n          label=\"Navigate\"\n          onKeyDown={(e) => this.onOnmnibarHotKeyDown(e)}\n        />\n        <Hotkey\n          allowInInput\n          combo=\"mod + plus\"\n          global\n          label=\"Create New\"\n          onKeyDown={(e) =>\n            this.onOnmnibarHotKeyDown(e, SEARCH_CATEGORY_ID.ACTION_OPERATION)\n          }\n        />\n        <Hotkey\n          allowInInput\n          combo=\"mod + j\"\n          global\n          label=\"Lookup code snippets\"\n          onKeyDown={(e) => {\n            this.onOnmnibarHotKeyDown(e, SEARCH_CATEGORY_ID.SNIPPETS);\n            AnalyticsUtil.logEvent(\"SNIPPET_LOOKUP\", {\n              source: \"HOTKEY_COMBO\",\n            });\n          }}\n        />\n        <Hotkey\n          allowInInput\n          combo=\"mod + l\"\n          global\n          label=\"Search documentation\"\n          onKeyDown={(e) =>\n            this.onOnmnibarHotKeyDown(e, SEARCH_CATEGORY_ID.DOCUMENTATION)\n          }\n        />\n        <Hotkey\n          allowInInput\n          combo=\"mod + k\"\n          global\n          label=\"Show omnibar\"\n          onKeyDown={(e) =>\n            this.onOnmnibarHotKeyDown(e, SEARCH_CATEGORY_ID.INIT)\n          }\n        />\n        <Hotkey\n          allowInInput\n          combo=\"mod + d\"\n          global\n          group=\"Canvas\"\n          label=\"Open Debugger\"\n          onKeyDown={() => {\n            this.props.openDebugger();\n            if (this.props.isDebuggerOpen) {\n              AnalyticsUtil.logEvent(\"OPEN_DEBUGGER\", {\n                source: \"CANVAS\",\n              });\n            }\n          }}\n          preventDefault\n        />\n        <Hotkey\n          combo=\"mod + c\"\n          global\n          group=\"Canvas\"\n          label=\"Copy Widget\"\n          onKeyDown={(e: any) => {\n            if (this.stopPropagationIfWidgetSelected(e)) {\n              this.props.copySelectedWidget();\n            }\n          }}\n        />\n        <Hotkey\n          combo=\"mod + v\"\n          global\n          group=\"Canvas\"\n          label=\"Paste Widget\"\n          onKeyDown={() => {\n            if (matchBuilderPath(window.location.pathname)) {\n              this.props.pasteCopiedWidget(\n                this.props.getMousePosition() || { x: 0, y: 0 },\n              );\n            }\n          }}\n        />\n        <Hotkey\n          combo=\"backspace\"\n          global\n          group=\"Canvas\"\n          label=\"Delete Widget\"\n          onKeyDown={(e: any) => {\n            if (this.stopPropagationIfWidgetSelected(e) && isMacOrIOS()) {\n              this.props.deleteSelectedWidget();\n            }\n          }}\n        />\n        <Hotkey\n          combo=\"del\"\n          global\n          group=\"Canvas\"\n          label=\"Delete Widget\"\n          onKeyDown={(e: any) => {\n            if (this.stopPropagationIfWidgetSelected(e)) {\n              this.props.deleteSelectedWidget();\n            }\n          }}\n        />\n        <Hotkey\n          combo=\"mod + x\"\n          global\n          group=\"Canvas\"\n          label=\"Cut Widget\"\n          onKeyDown={(e: any) => {\n            if (this.stopPropagationIfWidgetSelected(e)) {\n              this.props.cutSelectedWidget();\n            }\n          }}\n        />\n\n        <Hotkey\n          combo=\"mod + a\"\n          global\n          group=\"Canvas\"\n          label=\"Select all Widget\"\n          onKeyDown={(e: any) => {\n            if (matchBuilderPath(window.location.pathname)) {\n              this.props.selectAllWidgetsInit();\n              e.preventDefault();\n            }\n          }}\n        />\n        <Hotkey\n          combo=\"esc\"\n          global\n          group=\"Canvas\"\n          label=\"Deselect all Widget\"\n          onKeyDown={(e: any) => {\n            this.props.resetSnipingMode();\n            this.props.deselectAllWidgets();\n            this.props.closeProppane();\n            this.props.closeTableFilterProppane();\n            e.preventDefault();\n            this.props.setPreviewModeAction(false);\n          }}\n        />\n        <Hotkey\n          combo=\"v\"\n          global\n          label=\"Edit Mode\"\n          onKeyDown={(e: any) => {\n            this.props.resetSnipingMode();\n            e.preventDefault();\n          }}\n        />\n        <Hotkey\n          allowInInput\n          combo=\"mod + enter\"\n          global\n          label=\"Execute Action\"\n          onKeyDown={this.props.executeAction}\n          preventDefault\n          stopPropagation\n        />\n        <Hotkey\n          combo=\"mod + z\"\n          global\n          label=\"Undo change in canvas\"\n          onKeyDown={this.props.undo}\n          preventDefault\n          stopPropagation\n        />\n        <Hotkey\n          combo=\"mod + shift + z\"\n          global\n          label=\"Redo change in canvas\"\n          onKeyDown={this.props.redo}\n          preventDefault\n          stopPropagation\n        />\n        <Hotkey\n          combo=\"mod + y\"\n          global\n          label=\"Redo change in canvas\"\n          onKeyDown={this.props.redo}\n          preventDefault\n          stopPropagation\n        />\n        <Hotkey\n          combo=\"mod + g\"\n          global\n          group=\"Canvas\"\n          label=\"Cut Widgets for grouping\"\n          onKeyDown={(e: any) => {\n            if (this.stopPropagationIfWidgetSelected(e)) {\n              this.props.groupSelectedWidget();\n            }\n          }}\n        />\n        <Hotkey\n          combo=\"mod + s\"\n          global\n          label=\"Save progress\"\n          onKeyDown={() => {\n            Toaster.show({\n              text: createMessage(SAVE_HOTKEY_TOASTER_MESSAGE),\n              variant: Variant.info,\n            });\n          }}\n          preventDefault\n          stopPropagation\n        />\n        <Hotkey\n          combo=\"p\"\n          global\n          label=\"Preview Mode\"\n          onKeyDown={() => {\n            this.props.setPreviewModeAction(!this.props.isPreviewMode);\n          }}\n        />\n        <Hotkey\n          combo=\"mod + /\"\n          global\n          label=\"Pin/Unpin Entity Explorer\"\n          onKeyDown={() => {\n            this.props.setExplorerPinnedAction(!this.props.isExplorerPinned);\n            this.props.hideInstaller();\n          }}\n        />\n        <Hotkey\n          combo=\"ctrl + shift + g\"\n          global\n          label=\"Show git commit modal\"\n          onKeyDown={() => {\n            this.props.showCommitModal();\n          }}\n        />\n      </Hotkeys>\n    );\n  }\n\n  render() {\n    return <div>{this.props.children}</div>;\n  }\n}\n\nconst mapStateToProps = (state: AppState) => ({\n  selectedWidget: getLastSelectedWidget(state),\n  selectedWidgets: getSelectedWidgets(state),\n  isDebuggerOpen: state.ui.debugger.isOpen,\n  appMode: getAppMode(state),\n  isPreviewMode: previewModeSelector(state),\n  isExplorerPinned: getExplorerPinned(state),\n});\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    copySelectedWidget: () => dispatch(copyWidget(true)),\n    pasteCopiedWidget: (mouseLocation: { x: number; y: number }) =>\n      dispatch(pasteWidget(false, mouseLocation)),\n    deleteSelectedWidget: () => dispatch(deleteSelectedWidget(true)),\n    cutSelectedWidget: () => dispatch(cutWidget()),\n    groupSelectedWidget: () => dispatch(groupWidgets()),\n    setGlobalSearchCategory: (category: SearchCategory) =>\n      dispatch(setGlobalSearchCategory(category)),\n    resetSnipingMode: () => dispatch(resetSnipingModeAction()),\n    openDebugger: () => dispatch(showDebugger()),\n    closeProppane: () => dispatch(closePropertyPane()),\n    closeTableFilterProppane: () => dispatch(closeTableFilterPane()),\n    selectAllWidgetsInit: () =>\n      dispatch(selectWidgetInitAction(SelectionRequestType.All)),\n    deselectAllWidgets: () =>\n      dispatch(selectWidgetInitAction(SelectionRequestType.Empty)),\n    executeAction: () => dispatch(runActionViaShortcut()),\n    undo: () => dispatch(undoAction()),\n    redo: () => dispatch(redoAction()),\n    setPreviewModeAction: (shouldSet: boolean) =>\n      dispatch(setPreviewModeAction(shouldSet)),\n    setExplorerPinnedAction: (shouldSet: boolean) =>\n      dispatch(setExplorerPinnedAction(shouldSet)),\n    showCommitModal: () =>\n      dispatch(\n        setIsGitSyncModalOpen({ isOpen: true, tab: GitSyncModalTab.DEPLOY }),\n      ),\n    hideInstaller: () => dispatch(toggleInstaller(false)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(GlobalHotKeys);\n","import GlobalHotKeys from \"./GlobalHotKeys\";\nimport React from \"react\";\nimport { useMouseLocation } from \"./useMouseLocation\";\n\n//HOC to track user's mouse location, separated out so that it doesn't render the component on every mouse move\nfunction HotKeysHOC(props: any) {\n  const getMousePosition = useMouseLocation();\n\n  return (\n    <GlobalHotKeys {...props} getMousePosition={getMousePosition}>\n      {props.children}\n    </GlobalHotKeys>\n  );\n}\n\nexport default HotKeysHOC;\n","import { useEffect, useRef } from \"react\";\n\nexport const useMouseLocation = () => {\n  const mousePosition = useRef<{ x: number; y: number }>({\n    x: 0,\n    y: 0,\n  });\n\n  const setMousePosition = (e: any) => {\n    if (e) {\n      mousePosition.current = { x: e.clientX, y: e.clientY };\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", setMousePosition);\n\n    () => {\n      window.removeEventListener(\"mousemove\", setMousePosition);\n    };\n  }, []);\n\n  return function() {\n    return mousePosition.current;\n  };\n};\n","import { useSelector } from \"react-redux\";\nimport {\n  enableGuidedTour,\n  toggleShowDeviationDialog,\n  toggleShowEndTourDialog,\n} from \"actions/onboardingActions\";\nimport { Button, Category, DialogComponent, Size } from \"design-system-old\";\nimport {\n  CANCEL_DIALOG,\n  createMessage,\n  DEVIATION,\n  END_CONFIRMATION,\n} from \"@appsmith/constants/messages\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  showDeviatingDialogSelector,\n  showEndTourDialogSelector,\n} from \"selectors/onboardingSelectors\";\nimport styled from \"styled-components\";\nimport AnalyticsUtil from \"utils/AnalyticsUtil\";\n\nconst ButtonsWrapper = styled.div`\n  display: flex;\n  gap: ${(props) => props.theme.spaces[9]}px;\n  justify-content: flex-end;\n  margin-top: ${(props) => props.theme.spaces[12]}px;\n\n  .cancel {\n    color: ${(props) => props.theme.colors.guidedTour.cancelButton.color};\n    border-color: ${(props) =>\n      props.theme.colors.guidedTour.cancelButton.borderColor};\n\n    :hover {\n      background-color: ${(props) =>\n        props.theme.colors.guidedTour.cancelButton.hoverBackgroundColor};\n    }\n  }\n\n  .end {\n    background-color: ${(props) =>\n      props.theme.colors.guidedTour.endButton.backgroundColor};\n    border-color: ${(props) =>\n      props.theme.colors.guidedTour.endButton.borderColor};\n\n    :hover {\n      background-color: ${(props) =>\n        props.theme.colors.guidedTour.endButton.hoverBackgroundColor};\n    }\n  }\n`;\n\nfunction GuidedTourDialog() {\n  const showDeviatingDialog = useSelector(showDeviatingDialogSelector);\n  const showEndTourDialog = useSelector(showEndTourDialogSelector);\n  const dispatch = useDispatch();\n  const title = showDeviatingDialog\n    ? createMessage(DEVIATION)\n    : createMessage(END_CONFIRMATION);\n\n  const onClose = () => {\n    if (showDeviatingDialog) {\n      dispatch(toggleShowDeviationDialog(false));\n    }\n    if (showEndTourDialog) {\n      dispatch(toggleShowEndTourDialog(false));\n    }\n  };\n\n  const endTour = () => {\n    onClose();\n    dispatch(enableGuidedTour(false));\n    AnalyticsUtil.logEvent(\"END_GUIDED_TOUR_CLICK\");\n  };\n\n  return (\n    <DialogComponent\n      canEscapeKeyClose\n      isOpen={showEndTourDialog || showDeviatingDialog}\n      onClose={onClose}\n      title={title}\n    >\n      <span>\n        You will be able to restart this tutorial at any time by clicking on{\" \"}\n        <b>Welcome Tour</b> at the bottom left of the home page\n      </span>\n      <ButtonsWrapper>\n        <Button\n          category={Category.secondary}\n          className=\"cancel\"\n          onClick={onClose}\n          size={Size.large}\n          tag=\"button\"\n          text={createMessage(CANCEL_DIALOG)}\n        />\n        <Button\n          className=\"end\"\n          onClick={endTour}\n          size={Size.large}\n          tag=\"button\"\n          text={createMessage(END_CONFIRMATION)}\n        />\n      </ButtonsWrapper>\n    </DialogComponent>\n  );\n}\n\nexport default GuidedTourDialog;\n","export const getPageLevelSocketRoomId = (\n  pageId: string,\n  currentGitBranch?: string,\n) => {\n  return currentGitBranch\n    ? `${pageId}-${currentGitBranch}`\n    : (pageId as string);\n};\n","import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport styled, { useTheme } from \"styled-components\";\nimport { DialogComponent as Dialog, Text, TextType } from \"design-system-old\";\nimport { Colors } from \"constants/Colors\";\nimport {\n  createMessage,\n  APPLICATION_IMPORT_SUCCESS,\n  APPLICATION_IMPORT_SUCCESS_DESCRIPTION,\n} from \"@appsmith/constants/messages\";\nimport { Icon } from \"design-system-old\";\nimport { getCurrentUser } from \"selectors/usersSelectors\";\nimport { Button, Category, Size } from \"design-system-old\";\nimport { Theme } from \"constants/DefaultTheme\";\n\nconst Container = styled.div`\n  height: 461px;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  overflow-y: hidden;\n  justify-content: center;\n  align-content: center;\n`;\n\nconst BodyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  .cs-icon {\n    margin: auto;\n    svg {\n      width: 68px;\n      height: 68px;\n    }\n  }\n\n  .cs-text {\n    text-align: center;\n  }\n`;\n\nconst ActionButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 30px 0px 0px;\n  position: absolute;\n  width: 100%;\n  bottom: 0px;\n`;\n\nconst ActionButton = styled(Button)`\n  margin-right: 16px;\n`;\n\nfunction ImportedApplicationSuccessModal() {\n  const importedAppSuccess = localStorage.getItem(\"importApplicationSuccess\");\n  // const isOpen = importedAppSuccess === \"true\";\n  const [isOpen, setIsOpen] = useState(importedAppSuccess === \"true\");\n  const currentUser = useSelector(getCurrentUser);\n\n  const onClose = () => {\n    setIsOpen(false);\n    localStorage.setItem(\"importApplicationSuccess\", \"false\");\n  };\n  const theme = useTheme() as Theme;\n  return (\n    <Dialog\n      canEscapeKeyClose\n      canOutsideClickClose\n      className=\"t--import-app-success-modal\"\n      isOpen={isOpen}\n      maxWidth={\"900px\"}\n      noModalBodyMarginTop\n      onClose={onClose}\n      width={\"600px\"}\n    >\n      <Container>\n        <BodyContainer>\n          <Icon fillColor={Colors.GREEN_1} name=\"oval-check-fill\" />\n          <Text\n            color={Colors.BLACK}\n            style={{ marginTop: 64 }}\n            type={TextType.DANGER_HEADING}\n            weight=\"bold\"\n          >\n            {createMessage(\n              APPLICATION_IMPORT_SUCCESS,\n              currentUser?.name || currentUser?.username,\n            )}\n          </Text>\n          <Text\n            color={Colors.GRAY_700}\n            style={{ marginTop: theme.spaces[3] }}\n            type={TextType.P1}\n          >\n            {createMessage(APPLICATION_IMPORT_SUCCESS_DESCRIPTION)}\n          </Text>\n          <ActionButtonWrapper>\n            <ActionButton\n              category={Category.primary}\n              className=\"t--import-success-modal-got-it\"\n              onClick={() => {\n                onClose();\n              }}\n              size={Size.medium}\n              text=\"GOT IT\"\n            />\n          </ActionButtonWrapper>\n        </BodyContainer>\n      </Container>\n    </Dialog>\n  );\n}\n\nexport default ImportedApplicationSuccessModal;\n","import {\n  createMessage,\n  TEMPLATES_BACK_BUTTON,\n} from \"@appsmith/constants/messages\";\nimport { Icon, IconSize, Text, TextType } from \"design-system-old\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst BackButtonWrapper = styled.div<{ width?: number; hidden?: boolean }>`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: ${(props) => props.theme.spaces[2]}px;\n  ${(props) => props.width && `width: ${props.width};`}\n  ${(props) => props.hidden && \"visibility: hidden;\"}\n`;\n\nconst CloseIcon = styled(Icon)`\n  svg {\n    height: 24px;\n    width: 24px;\n  }\n`;\n\nconst HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding-bottom: ${(props) => props.theme.spaces[9]}px;\n`;\n\ntype TemplateModalHeaderProps = {\n  onBackPress?: () => void;\n  onClose: () => void;\n  hideBackButton?: boolean;\n  className?: string;\n};\n\nfunction TemplateModalHeader(props: TemplateModalHeaderProps) {\n  return (\n    <HeaderWrapper className={props.className}>\n      <BackButtonWrapper\n        hidden={props.hideBackButton}\n        onClick={props.onBackPress}\n      >\n        <Icon name=\"view-less\" size={IconSize.XL} />\n        <Text type={TextType.P4}>{createMessage(TEMPLATES_BACK_BUTTON)}</Text>\n      </BackButtonWrapper>\n      <CloseIcon name=\"close-x\" onClick={props.onClose} />\n    </HeaderWrapper>\n  );\n}\n\nexport default TemplateModalHeader;\n","import { importTemplateIntoApplication } from \"actions/templateActions\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  isFetchingTemplatesSelector,\n  isImportingTemplateToAppSelector,\n} from \"selectors/templatesSelectors\";\nimport styled from \"styled-components\";\nimport { TemplatesContent } from \"..\";\nimport Filters from \"../Filters\";\nimport LoadingScreen from \"./LoadingScreen\";\nimport { Template } from \"api/TemplatesApi\";\nimport TemplateModalHeader from \"./Header\";\nimport {\n  createMessage,\n  FETCHING_TEMPLATE_LIST,\n  FORKING_TEMPLATE,\n} from \"@appsmith/constants/messages\";\n\nconst Wrapper = styled.div`\n  display: flex;\n  height: 85vh;\n  overflow: auto;\n\n  .modal-header {\n    padding-bottom: ${(props) => props.theme.spaces[4]}px;\n  }\n`;\n\nconst FilterWrapper = styled.div`\n  .filter-wrapper {\n    width: 200px;\n  }\n`;\n\nconst ListWrapper = styled.div`\n  height: 79vh;\n  overflow: auto;\n  &&::-webkit-scrollbar-thumb {\n    background-color: ${(props) => props.theme.colors.modal.scrollbar};\n  }\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n`;\n\ntype TemplateListProps = {\n  onTemplateClick: (id: string) => void;\n  onClose: () => void;\n};\n\nfunction TemplateList(props: TemplateListProps) {\n  const dispatch = useDispatch();\n  const onForkTemplateClick = (template: Template) => {\n    dispatch(importTemplateIntoApplication(template.id, template.title));\n  };\n  const isImportingTemplateToApp = useSelector(\n    isImportingTemplateToAppSelector,\n  );\n  const isFetchingTemplates = useSelector(isFetchingTemplatesSelector);\n\n  if (isFetchingTemplates) {\n    return <LoadingScreen text={createMessage(FETCHING_TEMPLATE_LIST)} />;\n  }\n\n  if (isImportingTemplateToApp) {\n    return <LoadingScreen text={createMessage(FORKING_TEMPLATE)} />;\n  }\n\n  return (\n    <Wrapper className=\"flex flex-col\">\n      <TemplateModalHeader\n        className=\"modal-header\"\n        hideBackButton\n        onClose={props.onClose}\n      />\n      <div className=\"flex\">\n        <FilterWrapper>\n          <Filters />\n        </FilterWrapper>\n        <ListWrapper>\n          <TemplatesContent\n            isForkingEnabled\n            onForkTemplateClick={onForkTemplateClick}\n            onTemplateClick={props.onTemplateClick}\n            stickySearchBar\n          />\n        </ListWrapper>\n      </div>\n    </Wrapper>\n  );\n}\n\nexport default TemplateList;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport PagesLineIcon from \"remixicon-react/PagesLineIcon\";\nimport {\n  Button,\n  CheckboxType,\n  Checkmark,\n  Classes,\n  Size,\n  Text,\n  TextType,\n  IconWrapper,\n} from \"design-system-old\";\nimport { useDispatch } from \"react-redux\";\nimport { importTemplateIntoApplication } from \"actions/templateActions\";\nimport { Template } from \"api/TemplatesApi\";\nimport { ApplicationPagePayload } from \"api/ApplicationApi\";\nimport {\n  createMessage,\n  FILTER_SELECTALL,\n  FILTER_SELECT_PAGES,\n  PAGE,\n  PAGES,\n} from \"@appsmith/constants/messages\";\nimport { Colors } from \"constants/Colors\";\n\nconst Wrapper = styled.div`\n  width: max(300px, 25%);\n  padding-left: ${(props) => props.theme.spaces[9]}px;\n  position: sticky;\n  top: 0;\n  position: -webkit-sticky;\n  height: fit-content;\n`;\n\nconst Card = styled.div`\n  box-shadow: 0 2px 4px -2px rgba(0, 0, 0, 0.06),\n    0 4px 8px -2px rgba(0, 0, 0, 0.1);\n  padding: ${(props) => props.theme.spaces[9]}px;\n  border: solid 1px ${Colors.GREY_4};\n\n  hr {\n    background-color: ${Colors.GRAY_400};\n    margin-top: ${(props) => props.theme.spaces[3]}px;\n  }\n`;\n\nconst CardHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  .checkbox {\n    margin-left: ${(props) => props.theme.spaces[3]}px;\n  }\n`;\n\nconst StyledCheckMark = styled(Checkmark)`\n  width: 16px;\n  height: 16px;\n  ${(props) => !props.isChecked && `border: 1.8px solid ${Colors.GRAY_400};`}\n\n  &::after {\n    width: 5px;\n    height: 9px;\n    top: 1px;\n  }\n`;\n\nconst CheckboxWrapper = styled.label`\n  position: relative;\n  display: block;\n  width: 16px;\n  height: 16px;\n  cursor: pointer;\n  color: ${(props) => props.theme.colors.checkbox.labelColor};\n  input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n  }\n\n  input:checked ~ ${StyledCheckMark}:after {\n    display: block;\n  }\n`;\n\nconst Page = styled.div`\n  .${Classes.ICON} {\n    svg {\n      height: 20px;\n      width: 20px;\n    }\n    margin-right: ${(props) => props.theme.spaces[1]}px;\n  }\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: ${(props) => props.theme.spaces[11]}px;\n`;\n\nconst PageName = styled.div`\n  cursor: pointer;\n  &:hover {\n    text-decoration: underline;\n    text-underline-offset: 2px;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spaces[11]}px;\n`;\n\ntype PageSelectionProps = {\n  pages: ApplicationPagePayload[];\n  template: Template;\n  onPageSelection: (pageId: string) => void;\n};\n\ntype CustomCheckboxProps = {\n  onChange: (checked: boolean) => void;\n  checked: boolean;\n};\n\nfunction CustomCheckbox(props: CustomCheckboxProps) {\n  return (\n    <CheckboxWrapper className=\"checkbox\">\n      <input\n        checked={props.checked}\n        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n          props.onChange(e.target.checked);\n        }}\n        type=\"checkbox\"\n      />\n      <StyledCheckMark\n        backgroundColor={Colors.GREY_900}\n        isChecked={props.checked}\n        type={CheckboxType.PRIMARY}\n      />\n    </CheckboxWrapper>\n  );\n}\n\nfunction PageSelection(props: PageSelectionProps) {\n  const dispatch = useDispatch();\n  const [selectedPages, setSelectedPages] = useState(\n    props.pages.map((page) => page.name),\n  );\n  const pagesText =\n    props.pages.length > 1 || props.pages.length === 0\n      ? createMessage(PAGES)\n      : createMessage(PAGE);\n\n  useEffect(() => {\n    setSelectedPages(props.pages.map((page) => page.name));\n  }, [props.pages]);\n\n  const onSelection = (selectedPageName: string, checked: boolean) => {\n    if (checked) {\n      if (!selectedPages.includes(selectedPageName)) {\n        setSelectedPages((pages) => [...pages, selectedPageName]);\n      }\n    } else {\n      setSelectedPages((pages) =>\n        pages.filter((pageName) => pageName !== selectedPageName),\n      );\n    }\n  };\n\n  const onSelectAllToggle = (checked: boolean) => {\n    if (checked) {\n      setSelectedPages(props.pages.map((page) => page.name));\n    } else {\n      setSelectedPages([]);\n    }\n  };\n\n  const importPagesToApp = () => {\n    dispatch(\n      importTemplateIntoApplication(\n        props.template.id,\n        props.template.title,\n        selectedPages,\n      ),\n    );\n  };\n\n  return (\n    <Wrapper>\n      <Card>\n        <CardHeader>\n          <Text type={TextType.H1}>\n            {props.pages.length} {pagesText}\n          </Text>\n          <div className=\"flex\">\n            <Text type={TextType.P4}>{createMessage(FILTER_SELECTALL)}</Text>\n            <CustomCheckbox\n              checked={selectedPages.length === props.pages.length}\n              onChange={onSelectAllToggle}\n            />\n          </div>\n        </CardHeader>\n        <hr />\n        {props.pages.map((page) => {\n          return (\n            <Page key={page.id}>\n              <PageName\n                className=\"flex items-center\"\n                onClick={() => props.onPageSelection(page.id)}\n              >\n                <IconWrapper className={Classes.ICON}>\n                  <PagesLineIcon />\n                </IconWrapper>\n                <Text type={TextType.P4}>{page.name.toUpperCase()}</Text>\n              </PageName>\n              <CustomCheckbox\n                checked={selectedPages.includes(page.name)}\n                onChange={(checked) => onSelection(page.name, checked)}\n              />\n            </Page>\n          );\n        })}\n        <StyledButton\n          data-cy=\"template-fork-button\"\n          disabled={!selectedPages.length}\n          onClick={importPagesToApp}\n          size={Size.large}\n          tag=\"button\"\n          text={createMessage(FILTER_SELECT_PAGES)}\n          width=\"100%\"\n        />\n      </Card>\n    </Wrapper>\n  );\n}\n\nexport default PageSelection;\n","import {\n  createMessage,\n  FETCHING_TEMPLATES,\n  FORKING_TEMPLATE,\n} from \"@appsmith/constants/messages\";\nimport {\n  getSimilarTemplatesInit,\n  getTemplateInformation,\n  importTemplateIntoApplication,\n} from \"actions/templateActions\";\nimport { Text, TextType } from \"design-system-old\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getActiveTemplateSelector,\n  isFetchingTemplateSelector,\n  isImportingTemplateToAppSelector,\n} from \"selectors/templatesSelectors\";\nimport styled from \"styled-components\";\nimport { IframeTopBar, IframeWrapper } from \"../TemplateView\";\nimport PageSelection from \"./PageSelection\";\nimport LoadingScreen from \"./LoadingScreen\";\nimport { Template } from \"api/TemplatesApi\";\nimport { generatePath, matchPath } from \"react-router\";\nimport { isURLDeprecated, trimQueryString } from \"utils/helpers\";\nimport { VIEWER_PATH, VIEWER_PATH_DEPRECATED } from \"constants/routes\";\nimport TemplateModalHeader from \"./Header\";\nimport TemplateDescription from \"../Template/TemplateDescription\";\nimport SimilarTemplates from \"../Template/SimilarTemplates\";\nimport { AppState } from \"@appsmith/reducers\";\n\nconst breakpointColumns = {\n  default: 4,\n  2100: 3,\n  1600: 2,\n  1100: 1,\n};\n\nconst Wrapper = styled.div`\n  height: 85vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Body = styled.div`\n  padding: 0 ${(props) => props.theme.spaces[11]}px;\n  padding-top: ${(props) => props.theme.spaces[7]}px;\n  height: 80vh;\n  overflow: auto;\n  &&::-webkit-scrollbar-thumb {\n    background-color: ${(props) => props.theme.colors.modal.scrollbar};\n  }\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n`;\n\nconst StyledSimilarTemplatesWrapper = styled(SimilarTemplates)`\n  padding: 0px;\n`;\n\nconst TemplateDescriptionWrapper = styled.div`\n  padding-bottom: 52px;\n`;\n\ntype TemplateDetailedViewProps = {\n  templateId: string;\n  onBackPress: () => void;\n  onClose: () => void;\n};\n\nfunction TemplateDetailedView(props: TemplateDetailedViewProps) {\n  const [currentTemplateId, setCurrentTemplateId] = useState(props.templateId);\n  const [previewUrl, setPreviewUrl] = useState(\"\");\n  const dispatch = useDispatch();\n  const similarTemplates = useSelector(\n    (state: AppState) => state.ui.templates.similarTemplates,\n  );\n  const isFetchingTemplate = useSelector(isFetchingTemplateSelector);\n  const isImportingTemplateToApp = useSelector(\n    isImportingTemplateToAppSelector,\n  );\n  const currentTemplate = useSelector(getActiveTemplateSelector);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const LoadingText = isImportingTemplateToApp\n    ? createMessage(FORKING_TEMPLATE)\n    : createMessage(FETCHING_TEMPLATES);\n\n  useEffect(() => {\n    dispatch(getTemplateInformation(currentTemplateId));\n    dispatch(getSimilarTemplatesInit(currentTemplateId));\n  }, [currentTemplateId]);\n\n  useEffect(() => {\n    if (currentTemplate?.appUrl) {\n      setPreviewUrl(currentTemplate.appUrl);\n    }\n  }, [currentTemplate?.id]);\n\n  const onSimilarTemplateClick = (template: Template) => {\n    setCurrentTemplateId(template.id);\n    if (containerRef.current) {\n      containerRef.current.scrollTo({ top: 0 });\n    }\n  };\n\n  const onForkTemplateClick = (template: Template) => {\n    dispatch(importTemplateIntoApplication(template.id, template.title));\n  };\n\n  if (isFetchingTemplate || isImportingTemplateToApp) {\n    return <LoadingScreen text={LoadingText} />;\n  }\n\n  if (!currentTemplate) {\n    return null;\n  }\n\n  // Update the page id in the url\n  const onPageSelection = (pageId: string) => {\n    const url = new URL(currentTemplate.appUrl);\n    const path = isURLDeprecated(url.pathname)\n      ? VIEWER_PATH_DEPRECATED\n      : VIEWER_PATH;\n    const matchViewerPath = matchPath(url.pathname, {\n      path: [trimQueryString(path)],\n    });\n    url.pathname = generatePath(path, {\n      ...matchViewerPath?.params,\n      pageId,\n    });\n    setPreviewUrl(url.toString());\n  };\n\n  return (\n    <Wrapper ref={containerRef}>\n      <TemplateModalHeader\n        onBackPress={props.onBackPress}\n        onClose={props.onClose}\n      />\n      <Body className=\"flex flex-row\">\n        <div className=\"flex flex-col flex-1\">\n          <Text type={TextType.DANGER_HEADING}>{currentTemplate.title}</Text>\n          <IframeWrapper>\n            <IframeTopBar>\n              <div className=\"round red\" />\n              <div className=\"round yellow\" />\n              <div className=\"round green\" />\n            </IframeTopBar>\n            <iframe src={`${previewUrl}?embed=true`} />\n          </IframeWrapper>\n          <TemplateDescriptionWrapper>\n            <TemplateDescription hideForkButton template={currentTemplate} />\n          </TemplateDescriptionWrapper>\n          <StyledSimilarTemplatesWrapper\n            breakpointCols={breakpointColumns}\n            isForkingEnabled\n            onBackPress={props.onBackPress}\n            onClick={onSimilarTemplateClick}\n            onFork={onForkTemplateClick}\n            similarTemplates={similarTemplates}\n          />\n        </div>\n        <PageSelection\n          onPageSelection={onPageSelection}\n          pages={currentTemplate.pages || []}\n          template={currentTemplate}\n        />\n      </Body>\n    </Wrapper>\n  );\n}\n\nexport default TemplateDetailedView;\n","import React, { useEffect, useState } from \"react\";\nimport { DialogComponent } from \"design-system-old\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  templateModalOpenSelector,\n  templatesCountSelector,\n} from \"selectors/templatesSelectors\";\nimport {\n  getAllTemplates,\n  getTemplateFilters,\n  showTemplatesModal,\n} from \"actions/templateActions\";\nimport TemplatesList from \"./TemplateList\";\nimport { fetchDefaultPlugins } from \"actions/pluginActions\";\nimport TemplateDetailedView from \"./TemplateDetailedView\";\nimport { isEmpty } from \"lodash\";\nimport { AppState } from \"@appsmith/reducers\";\n\nfunction TemplatesModal() {\n  const templatesModalOpen = useSelector(templateModalOpenSelector);\n  const dispatch = useDispatch();\n  const templatesCount = useSelector(templatesCountSelector);\n  const pluginListLength = useSelector(\n    (state: AppState) => state.entities.plugins.defaultPluginList.length,\n  );\n  const filters = useSelector(\n    (state: AppState) => state.ui.templates.allFilters,\n  );\n  const [showTemplateDetails, setShowTemplateDetails] = useState(\"\");\n\n  useEffect(() => {\n    setShowTemplateDetails(\"\");\n  }, [templatesModalOpen]);\n\n  useEffect(() => {\n    if (!templatesCount && templatesModalOpen) {\n      dispatch(getAllTemplates());\n    }\n  }, [templatesCount, templatesModalOpen]);\n\n  useEffect(() => {\n    if (!pluginListLength) {\n      dispatch(fetchDefaultPlugins());\n    }\n  }, [pluginListLength]);\n\n  useEffect(() => {\n    if (isEmpty(filters.functions)) {\n      dispatch(getTemplateFilters());\n    }\n  }, [filters]);\n\n  const onClose = () => {\n    dispatch(showTemplatesModal(false));\n    setShowTemplateDetails(\"\");\n  };\n\n  const onTemplateClick = (id: string) => {\n    setShowTemplateDetails(id);\n  };\n\n  return (\n    <DialogComponent\n      canEscapeKeyClose\n      canOutsideClickClose\n      isOpen={templatesModalOpen}\n      noModalBodyMarginTop\n      onClose={onClose}\n      width={\"90%\"}\n    >\n      {!!showTemplateDetails ? (\n        <TemplateDetailedView\n          onBackPress={() => setShowTemplateDetails(\"\")}\n          onClose={onClose}\n          templateId={showTemplateDetails}\n        />\n      ) : (\n        <TemplatesList onClose={onClose} onTemplateClick={onTemplateClick} />\n      )}\n    </DialogComponent>\n  );\n}\n\nexport default TemplatesModal;\n","import { useEffect, useState } from \"react\";\n\nconst useWindowHeight = () => {\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      setWindowHeight(window.innerHeight);\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener(\"resize\", handleWindowResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowResize);\n    };\n  }, []);\n\n  return [windowWidth, windowHeight];\n};\n\nexport default useWindowHeight;\n","import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport useHorizontalResize from \"utils/hooks/useHorizontalResize\";\nimport { tailwindLayers } from \"constants/Layers\";\nimport classNames from \"classnames\";\nimport { useSelector } from \"react-redux\";\nimport { previewModeSelector } from \"selectors/editorSelectors\";\nimport EditorsRouter from \"pages/Editor/routes\";\nimport * as Sentry from \"@sentry/react\";\nimport { Route } from \"react-router\";\nimport { TABS_PANE_MIN_WIDTH } from \"reducers/uiReducers/multiPaneReducer\";\nimport useWindowDimensions from \"utils/hooks/useWindowDimensions\";\nimport { SIDE_NAV_WIDTH } from \"pages/common/SideNav\";\n\nconst TabsContainer = styled.div`\n  height: calc(\n    100vh - ${(props) => props.theme.smallHeaderHeight} -\n      ${(props) => props.theme.bottomBarHeight}\n  );\n`;\n\nconst SentryRoute = Sentry.withSentryRouting(Route);\n\ntype Props = {\n  width: number;\n  onWidthChange: (width: number) => void;\n};\n\nconst TabsPane = (props: Props) => {\n  const { onWidthChange, width } = props;\n  const sidebarRef = useRef<HTMLDivElement>(null);\n  const isPreviewMode = useSelector(previewModeSelector);\n  const [windowWidth] = useWindowDimensions();\n\n  const resizer = useHorizontalResize(sidebarRef, onWidthChange);\n\n  useEffect(() => {\n    // Tabs width should be 1/3 of the screen but not less than minimum\n    const initialWidth = Math.max(\n      (windowWidth - SIDE_NAV_WIDTH) / 3,\n      TABS_PANE_MIN_WIDTH,\n    );\n    onWidthChange(initialWidth);\n  }, []);\n\n  return (\n    <TabsContainer\n      className={classNames({\n        \"transition-all transform duration-400 border-r border-gray-200\": true,\n        \"translate-x-0 opacity-0\": isPreviewMode,\n        \"opacity-100\": !isPreviewMode,\n        [`w-[${width}px] min-w-[${TABS_PANE_MIN_WIDTH}px] translate-x-${width}`]: !isPreviewMode,\n      })}\n      ref={sidebarRef}\n    >\n      <div\n        className=\"overflow-x-hidden overflow-y-auto\"\n        style={{ width: width }}\n      >\n        <SentryRoute component={EditorsRouter} />\n      </div>\n      {/* RESIZER */}\n      <div\n        className={`absolute w-2 h-full -mr-1 ${tailwindLayers.resizer} group cursor-ew-resize`}\n        onMouseDown={resizer.onMouseDown}\n        onTouchEnd={resizer.onMouseUp}\n        onTouchStart={resizer.onTouchStart}\n        style={{\n          left: width,\n          display: isPreviewMode ? \"none\" : \"initial\",\n        }}\n      >\n        <div\n          className={classNames({\n            \"w-2 h-full bg-transparent group-hover:bg-gray-300 transform transition flex items-center\": true,\n            \"bg-blue-500\": resizer.resizing,\n          })}\n        />\n      </div>\n    </TabsContainer>\n  );\n};\n\nexport default TabsPane;\n","import React from \"react\";\nimport WidgetsEditor from \"pages/Editor/WidgetsEditor\";\nimport { useSelector } from \"react-redux\";\nimport { getPropertyPaneWidth } from \"selectors/propertyPaneSelectors\";\nimport { getPaneCount, getTabsPaneWidth } from \"selectors/multiPaneSelectors\";\nimport { SIDE_NAV_WIDTH } from \"pages/common/SideNav\";\nimport { PaneLayoutOptions } from \"reducers/uiReducers/multiPaneReducer\";\n\nconst CanvasPane = () => {\n  const propertyPaneWidth = useSelector(getPropertyPaneWidth);\n  const paneCount = useSelector(getPaneCount);\n  const tabPaneWidth = useSelector(getTabsPaneWidth);\n  const screenWidth = window.screen.width;\n  let width = screenWidth - tabPaneWidth - SIDE_NAV_WIDTH;\n  if (paneCount === PaneLayoutOptions.THREE_PANE) {\n    width -= propertyPaneWidth;\n  }\n  return (\n    <div className=\"ml-5\" style={{ width: width.toFixed(0) + \"px\" }}>\n      <WidgetsEditor />\n    </div>\n  );\n};\n\nexport default CanvasPane;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SideNav from \"pages/common/SideNav\";\nimport classNames from \"classnames\";\nimport BottomBar from \"pages/Editor/BottomBar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { previewModeSelector } from \"selectors/editorSelectors\";\nimport TabsPane from \"pages/Editor/TabsPane\";\nimport { EntityExplorerSidebar } from \"components/editorComponents/Sidebar\";\nimport CanvasPane from \"pages/Editor/CanvasPane\";\nimport {\n  getPaneCount,\n  getTabsPaneWidth,\n  isMultiPaneActive,\n} from \"selectors/multiPaneSelectors\";\nimport { setTabsPaneWidth } from \"actions/multiPaneActions\";\nimport PropertyPaneContainer from \"pages/Editor/WidgetsEditor/PropertyPaneContainer\";\nimport { PaneLayoutOptions } from \"reducers/uiReducers/multiPaneReducer\";\n\nconst Container = styled.div`\n  height: calc(\n    100vh - ${(props) => props.theme.smallHeaderHeight} -\n      ${(props) => props.theme.bottomBarHeight}\n  );\n  background-color: ${(props) => props.theme.appBackground};\n`;\n\nconst PropertyPanePane = styled.div`\n  height: calc(\n    100vh - ${(props) => props.theme.smallHeaderHeight} -\n      ${(props) => props.theme.bottomBarHeight}\n  );\n  background-color: ${(props) => props.theme.appBackground};\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nconst MultiPaneContainer = () => {\n  const dispatch = useDispatch();\n  const isPreviewMode = useSelector(previewModeSelector);\n  const tabsPaneWidth = useSelector(getTabsPaneWidth);\n  const updatePaneWidth = (width: number) => dispatch(setTabsPaneWidth(width));\n  const isMultiPane = useSelector(isMultiPaneActive);\n  const paneCount = useSelector(getPaneCount);\n  const showPropertyPane = isMultiPane\n    ? paneCount === PaneLayoutOptions.THREE_PANE\n    : true;\n  return (\n    <>\n      <Container className=\"relative w-full overflow-x-hidden flex\">\n        <EntityExplorerSidebar width={250} />\n        <SideNav />\n        <TabsPane onWidthChange={updatePaneWidth} width={tabsPaneWidth} />\n        <CanvasPane />\n        {showPropertyPane && (\n          <PropertyPanePane>\n            <PropertyPaneContainer />\n          </PropertyPanePane>\n        )}\n      </Container>\n      <BottomBar\n        className={classNames({\n          \"translate-y-full fixed bottom-0\": isPreviewMode,\n          \"translate-y-0 relative opacity-100\": !isPreviewMode,\n          \"transition-all transform duration-400\": true,\n        })}\n      />\n    </>\n  );\n};\n\nexport default MultiPaneContainer;\n","import React, { Component } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { Spinner } from \"@blueprintjs/core\";\nimport { BuilderRouteParams } from \"constants/routes\";\nimport { AppState } from \"@appsmith/reducers\";\nimport MainContainer from \"./MainContainer\";\nimport { DndProvider } from \"react-dnd\";\nimport TouchBackend from \"react-dnd-touch-backend\";\nimport {\n  getCurrentApplicationId,\n  getIsEditorInitialized,\n  getIsEditorLoading,\n  getIsPublishingApplication,\n  getPublishingError,\n} from \"selectors/editorSelectors\";\nimport {\n  initEditor,\n  InitializeEditorPayload,\n  resetEditorRequest,\n} from \"actions/initActions\";\nimport { editorInitializer } from \"utils/editor/EditorUtils\";\nimport CenteredWrapper from \"components/designSystems/appsmith/CenteredWrapper\";\nimport { getCurrentUser } from \"selectors/usersSelectors\";\nimport { User } from \"constants/userConstants\";\nimport RequestConfirmationModal from \"pages/Editor/RequestConfirmationModal\";\nimport * as Sentry from \"@sentry/react\";\nimport { getTheme, ThemeMode } from \"selectors/themeSelectors\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Theme } from \"constants/DefaultTheme\";\nimport GlobalHotKeys from \"./GlobalHotKeys\";\nimport GitSyncModal from \"pages/Editor/gitSync/GitSyncModal\";\nimport DisconnectGitModal from \"pages/Editor/gitSync/DisconnectGitModal\";\nimport { fetchPage, updateCurrentPage } from \"actions/pageActions\";\nimport { getCurrentPageId } from \"selectors/editorSelectors\";\nimport { getSearchQuery } from \"utils/helpers\";\nimport { getIsPageLevelSocketConnected } from \"selectors/websocketSelectors\";\nimport {\n  collabStartSharingPointerEvent,\n  collabStopSharingPointerEvent,\n} from \"actions/appCollabActions\";\nimport { loading } from \"selectors/onboardingSelectors\";\nimport GuidedTourModal from \"./GuidedTour/DeviationModal\";\nimport { getPageLevelSocketRoomId } from \"sagas/WebsocketSagas/utils\";\nimport RepoLimitExceededErrorModal from \"./gitSync/RepoLimitExceededErrorModal\";\nimport ImportedApplicationSuccessModal from \"./gitSync/ImportedAppSuccessModal\";\nimport { getIsBranchUpdated } from \"../utils\";\nimport { APP_MODE } from \"entities/App\";\nimport { GIT_BRANCH_QUERY_KEY } from \"constants/routes\";\nimport TemplatesModal from \"pages/Templates/TemplatesModal\";\nimport ReconnectDatasourceModal from \"./gitSync/ReconnectDatasourceModal\";\nimport MultiPaneContainer from \"pages/Editor/MultiPaneContainer\";\nimport { isMultiPaneActive } from \"selectors/multiPaneSelectors\";\n\ntype EditorProps = {\n  currentApplicationId?: string;\n  currentApplicationName?: string;\n  initEditor: (payload: InitializeEditorPayload) => void;\n  isPublishing: boolean;\n  isEditorLoading: boolean;\n  isEditorInitialized: boolean;\n  isEditorInitializeError: boolean;\n  errorPublishing: boolean;\n  loadingGuidedTour: boolean;\n  user?: User;\n  lightTheme: Theme;\n  resetEditorRequest: () => void;\n  fetchPage: (pageId: string) => void;\n  updateCurrentPage: (pageId: string) => void;\n  handleBranchChange: (branch: string) => void;\n  currentPageId?: string;\n  isPageLevelSocketConnected: boolean;\n  collabStartSharingPointerEvent: (pageId: string) => void;\n  collabStopSharingPointerEvent: (pageId?: string) => void;\n  pageLevelSocketRoomId: string;\n  isMultiPane: boolean;\n};\n\ntype Props = EditorProps & RouteComponentProps<BuilderRouteParams>;\n\nclass Editor extends Component<Props> {\n  public state = {\n    registered: false,\n  };\n\n  componentDidMount() {\n    editorInitializer().then(() => {\n      this.setState({ registered: true });\n    });\n\n    const {\n      location: { search },\n    } = this.props;\n    const branch = getSearchQuery(search, GIT_BRANCH_QUERY_KEY);\n\n    const { applicationId, pageId } = this.props.match.params;\n    if (pageId)\n      this.props.initEditor({\n        applicationId,\n        pageId,\n        branch,\n        mode: APP_MODE.EDIT,\n      });\n\n    if (this.props.isPageLevelSocketConnected && pageId) {\n      this.props.collabStartSharingPointerEvent(\n        getPageLevelSocketRoomId(pageId, branch),\n      );\n    }\n  }\n\n  shouldComponentUpdate(nextProps: Props, nextState: { registered: boolean }) {\n    const isBranchUpdated = getIsBranchUpdated(\n      this.props.location,\n      nextProps.location,\n    );\n\n    return (\n      isBranchUpdated ||\n      nextProps.currentApplicationName !== this.props.currentApplicationName ||\n      nextProps.match?.params?.pageId !== this.props.match?.params?.pageId ||\n      nextProps.currentApplicationId !== this.props.currentApplicationId ||\n      nextProps.isEditorInitialized !== this.props.isEditorInitialized ||\n      nextProps.isPublishing !== this.props.isPublishing ||\n      nextProps.isEditorLoading !== this.props.isEditorLoading ||\n      nextProps.errorPublishing !== this.props.errorPublishing ||\n      nextProps.isEditorInitializeError !==\n        this.props.isEditorInitializeError ||\n      nextProps.loadingGuidedTour !== this.props.loadingGuidedTour ||\n      nextState.registered !== this.state.registered ||\n      (nextProps.isPageLevelSocketConnected &&\n        !this.props.isPageLevelSocketConnected)\n    );\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const { applicationId, pageId } = this.props.match.params || {};\n    const { pageId: prevPageId } = prevProps.match.params || {};\n    const isBranchUpdated = getIsBranchUpdated(\n      this.props.location,\n      prevProps.location,\n    );\n\n    const branch = getSearchQuery(\n      this.props.location.search,\n      GIT_BRANCH_QUERY_KEY,\n    );\n    const prevBranch = getSearchQuery(\n      prevProps.location.search,\n      GIT_BRANCH_QUERY_KEY,\n    );\n\n    const isPageIdUpdated = pageId !== prevPageId;\n\n    // to prevent re-init during connect\n    if (prevBranch && isBranchUpdated && pageId) {\n      this.props.initEditor({\n        applicationId,\n        pageId,\n        branch,\n        mode: APP_MODE.EDIT,\n      });\n    } else {\n      /**\n       * First time load is handled by init sagas\n       * If we don't check for `prevPageId`: fetch page is re triggered\n       * when redirected to the default page\n       */\n      if (prevPageId && pageId && isPageIdUpdated) {\n        this.props.updateCurrentPage(pageId);\n        this.props.fetchPage(pageId);\n      }\n    }\n\n    if (this.props.isPageLevelSocketConnected && isPageIdUpdated) {\n      this.props.collabStartSharingPointerEvent(\n        getPageLevelSocketRoomId(pageId, branch),\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    const { pageId } = this.props.match.params || {};\n    const {\n      location: { search },\n    } = this.props;\n    const branch = getSearchQuery(search, GIT_BRANCH_QUERY_KEY);\n    this.props.resetEditorRequest();\n    this.props.collabStopSharingPointerEvent(\n      getPageLevelSocketRoomId(pageId, branch),\n    );\n  }\n\n  public render() {\n    if (\n      !this.props.isEditorInitialized ||\n      !this.state.registered ||\n      this.props.loadingGuidedTour\n    ) {\n      return (\n        <CenteredWrapper\n          style={{ height: `calc(100vh - ${theme.smallHeaderHeight})` }}\n        >\n          <Spinner />\n        </CenteredWrapper>\n      );\n    }\n    return (\n      <ThemeProvider theme={theme}>\n        <DndProvider\n          backend={TouchBackend}\n          options={{\n            enableMouseEvents: true,\n          }}\n        >\n          <div>\n            <Helmet>\n              <meta charSet=\"utf-8\" />\n              <title>\n                {`${this.props.currentApplicationName} |`} Editor | Appsmith\n              </title>\n            </Helmet>\n            <GlobalHotKeys>\n              {this.props.isMultiPane ? (\n                <MultiPaneContainer />\n              ) : (\n                <MainContainer />\n              )}\n              <GitSyncModal />\n              <DisconnectGitModal />\n              <GuidedTourModal />\n              <RepoLimitExceededErrorModal />\n              <TemplatesModal />\n              <ImportedApplicationSuccessModal />\n              <ReconnectDatasourceModal />\n            </GlobalHotKeys>\n          </div>\n          <RequestConfirmationModal />\n        </DndProvider>\n      </ThemeProvider>\n    );\n  }\n}\n\nconst theme = getTheme(ThemeMode.LIGHT);\n\nconst mapStateToProps = (state: AppState) => ({\n  currentApplicationId: getCurrentApplicationId(state),\n  errorPublishing: getPublishingError(state),\n  isPublishing: getIsPublishingApplication(state),\n  isEditorLoading: getIsEditorLoading(state),\n  isEditorInitialized: getIsEditorInitialized(state),\n  user: getCurrentUser(state),\n  currentApplicationName: state.ui.applications.currentApplication?.name,\n  currentPageId: getCurrentPageId(state),\n  isPageLevelSocketConnected: getIsPageLevelSocketConnected(state),\n  loadingGuidedTour: loading(state),\n  isMultiPane: isMultiPaneActive(state),\n});\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    initEditor: (payload: InitializeEditorPayload) =>\n      dispatch(initEditor(payload)),\n    resetEditorRequest: () => dispatch(resetEditorRequest()),\n    fetchPage: (pageId: string) => dispatch(fetchPage(pageId)),\n    updateCurrentPage: (pageId: string) => dispatch(updateCurrentPage(pageId)),\n    collabStartSharingPointerEvent: (pageId: string) =>\n      dispatch(collabStartSharingPointerEvent(pageId)),\n    collabStopSharingPointerEvent: (pageId?: string) =>\n      dispatch(collabStopSharingPointerEvent(pageId)),\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(Sentry.withProfiler(Editor)),\n);\n"],"names":["Wrapper","styled","div","_templateObject","_taggedTemplateLiteral","Colors","CHARCOAL","Gallery","props","theme","fonts","text","fontSizes","BetaLabel","_templateObject2","TUNDORA","IconLabel","h5","_templateObject3","fontWeights","lineHeights","setDraggingNewWidget","useWidgetDragResize","deselectAll","useWidgetSelection","type","concat","details","split","join","toLowerCase","className","_jsx","draggable","onDragStart","e","preventDefault","stopPropagation","AnalyticsUtil","logEvent","widgetType","widgetName","displayName","_objectSpread","widgetId","generateReactKey","children","_jsxs","IconWrapper","src","icon","isBeta","forwardRef","ref","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","focussed","setFocussed","onChange","useCallback","persist","currentTarget","isFunction","onClear","clear","classNames","hidden","isHidden","SearchIcon","autoComplete","autoFocus","id","ENTITY_EXPLORER_SEARCH_ID","onBlur","onFocus","placeholder","onClick","CrossIcon","WidgetSidebar","_ref","fuse","isActive","cards","useSelector","getWidgetCards","filteredCards","setFilteredCards","searchInputRef","useRef","useEffect","Fuse","keys","name","weight","threshold","distance","filterCards","keyword","trim","length","searchResult","search","_searchInputRef$curre","current","focus","debounce","target","ExplorerSearch","_searchInputRef$curre2","createMessage","WIDGET_SIDEBAR_CAPTION","map","card","WidgetCard","key","Divider","writeToClipboard","_asyncToGenerator","_regeneratorRuntime","mark","_callee","el","wrap","_context","prev","next","navigator","clipboard","writeText","childNodes","textContent","classList","add","append","t0","setTimeout","_ref$current","removeChild","stop","_x","_x2","_x3","apply","arguments","document","createElement","content","createTextNode","appendChild","docsURLMap","recommendedLibraries","reduce","acc","lib","url","docsURL","Library","li","GRAY_700","SEA_SHELL","ENTERPRISE_DARK","SHARK2","WHITE","Name","Version","version","PrimaryCTA","installationStatus","selectInstallationStatus","dispatch","useDispatch","uninstallLibrary","uninstallLibraryInit","InstallState","Queued","Spinner","size","IconSize","MEDIUM","Icon","LibraryEntity","_ref2","openDocs","window","open","propertyRef","write","useClipboard","copyToClipboard","accessor","Toaster","show","variant","Variant","success","_React$useState","React","_React$useState2","isOpen","fillColor","GREY_7","XXXL","SMALL","Collapse","CopyIcon","JSDependencies","libraries","selectLibrariesForExplorer","dependencyList","useTransition","from","opacity","enter","leave","transitions","style","animated","selectIsInstallerOpen","pagePermissions","getPagePermissions","canCreateActions","hasCreateActionPermission","openInstaller","toggleInstaller","Entity","customAddButton","TooltipComponent","boundary","EntityClassNames","TOOLTIP","customJSLibraryMessages","ADD_JS_LIBRARY","disabled","hoverOpenDelay","TOOLTIP_HOVER_ON_DELAY","position","EntityAddButton","ADD_BUTTON","entityId","isDefaultExpanded","isSticky","showAddButton","step","ToggleIcon","ControlIcons","MORE_VERTICAL_CONTROL","GRAY","useTheme","EntityTogglesWrapper","ENTITY_MORE_ACTIONS_TOOLTIP","height","width","dispatchDelete","deleteDatasource","datasourceId","editDatasourceName","initExplorerEntityNameEdit","dispatchRefresh","refreshDatasourceStructure","confirmDelete","setConfirmDelete","datasource","state","getDatasource","datasourcePermissions","userPermissions","canDeleteDatasource","hasDeleteDatasourcePermission","treeOptions","hasManageDatasourcePermission","onSelect","label","CONTEXT_EDIT_NAME","CONTEXT_REFRESH","CONFIRM_CONTEXT_DELETE","CONTEXT_DELETE","intent","filter","Boolean","TreeDropdown","defaultText","modifiers","ContextMenuPopoverModifiers","noop","optionTree","selectedValue","toggle","ContextMenuTrigger","spaces","DOVE_GRAY2","_path","Object","assign","bind","i","source","prototype","hasOwnProperty","call","this","excluded","sourceKeys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgLightning","svgRef","title","titleId","xmlns","fill","viewBox","fillOpacity","d","Container","colors","queryTemplate","bg","textOnDarkBG","TemplateType","color","applicationId","getCurrentApplicationId","actions","entities","currentPageId","getCurrentPageId","dataSource","createQueryAction","template","newQueryName","createNewQueryName","queryactionConfiguration","actionConfiguration","body","pluginSpecifiedTemplates","formData","configuration","createActionRequest","pageId","pluginId","eventData","actionType","history","push","integrationEditorURL","selectedTab","INTEGRATION_TABS","ACTIVE","templates","Classes","FieldName","GREY_9","FieldValue","Content","_templateObject4","PopoverContent","_templateObject5","_templateObject6","PopupValue","_templateObject7","field","fieldName","fieldType","DATASOURCE_FIELD_ICONS_MAP","datasourceColumnIcon","Popover","hoverCloseDelay","interactionKind","PopoverInteractionKind","HOVER","minimal","Position","RIGHT_TOP","GRAY2","StyledEntity","dbStructure","templateMenu","active","setActive","useCloseMenuOnScroll","SIDEBAR_ID","canCreateDatasourceActions","hasCreateDatasourceActionPermission","_toConsumableArray","lightningMenu","CONTEXT_MENU","LightningIcon","columnsAndKeys","columns","canEscapeKeyClose","onInteraction","nextOpenState","popoverClassName","action","contextMenu","datasourceTableIcon","index","DatasourceField","QueryTemplates","_props$datasourceStru","_props$datasourceStru2","isLoading","useEntityUpdateState","view","datasourceStructure","tables","_Fragment","structure","DatasourceStructure","EntityPlaceholder","error","message","SCHEMA_NOT_AVAILABLE","DatasourceStructureContainer","memo","ExplorerDatasourceEntity","guidedTourEnabled","inGuidedTour","getPluginIcon","plugin","location","useLocation","switchDatasource","PluginType","SAAS","saasEditorDatasourceIdURL","pluginPackageName","packageName","datasourcesEditorIdURL","params","omit","getQueryParams","fromUrl","pathname","toUrl","invokedBy","NavigationMethod","EntityExplorer","queryId","getQueryIdFromURL","queryAction","getAction","datasources","expandDatasourceId","ui","datasourcePane","debounceFetchDatasourceRequest","fetchDatasourceStructure","getDatasourceStructure","expandDatasourceEntity","nameTransformFn","input","slice","isStoredDatasource","canEditEntityName","canManageDatasource","DataSourceContextMenu","onNameEdit","onToggle","searchKeyword","updateEntityName","updateDatasourceName","ECContainer","ECMainText","span","ECAddButton","GEYSER_LIGHT","EmptyComponent","showAddCta","addFunction","addBtnText","mainText","AddEntity","ShowAll","Datasources","_useAppWideAndOtherDa","useAppWideAndOtherDatasource","appWideDS","otherDS","plugins","getPlugins","isDatasourcesOpen","getExplorerStatus","pluginGroups","keyBy","userWorkspacePermissions","_getCurrentAppWorkspa","getCurrentAppWorkspace","canCreateDatasource","hasCreateDatasourcePermission","addDatasource","NEW","activeDatasourceId","useDatasourceIdFromURL","datasourceSuggestions","useDatasourceSuggestions","listDatasource","datasourceElements","onDatasourcesToggle","saveExplorerStatus","addButtonHelptext","CREATE_DATASOURCE_TOOLTIP","undefined","onCreate","EMPTY_DATASOURCE_MAIN_TEXT","EMPTY_DATASOURCE_BUTTON_TEXT","ADD_DATASOURCE_BUTTON","ArrowRightLineIcon","_props$canDeleteActio","canDeleteAction","_props$canManageActio","canManageAction","nextEntityName","useNewActionName","copyActionToPage","actionId","actionName","copyActionRequest","destinationPageId","moveActionToPage","moveActionRequest","originalPageId","deleteActionFromPage","onSuccess","toggleShowDeviationDialog","deleteAction","menuPages","getPageListAsOptions","editActionName","showBinding","ReduxActionTypes","SET_ENTITY_INFO","payload","entityName","entityType","ENTITY_TYPE","ACTION","optionsTree","CONTEXT_SHOW_BINDING","CONTEXT_COPY","page","CONTEXT_MOVE","CONTEXT_NO_PAGE","builderURL","getUpdateActionNameReduxAction","saveActionName","ExplorerActionEntity","useMemo","config","getActionConfig","getURL","pluginType","getIcon","switchToAction","PerformanceTracker","startTracking","PerformanceTransactionName","OPEN_ACTION","actionPermissions","hasDeleteActionPermission","hasManageActionPermission","ActionEntityContextMenu","getJSEntityName","store","getState","jsCollections","selectJSCollections","isCopyOperation","actionNames","groupBy","getNextEntityName","_props$canDelete","canDelete","_props$canManage","canManage","JSACTION","copyJSCollectionToPage","copyJSCollectionRequest","moveJSCollectionToPage","moveJSCollectionRequest","deleteJSCollectionFromPage","deleteJSCollection","editJSCollectionName","getUpdateJSObjectName","saveJSObjectName","ExplorerJSCollectionEntity","jsAction","getJSCollection","navigateToUrl","jsCollectionIdURL","collectionId","navigateToJSCollection","jsActionPermissions","canDeleteJSAction","canManageJSAction","JSCollectionEntityContextMenu","JsFileIconV2","SubmenuHotKeys","HotkeysTarget","_class","_React$Component","_inherits","_super","_createSuper","_classCallCheck","_createClass","get","_this","combo","onKeyDown","handleUpKey","allowInInput","handleDownKey","handleSubmitKey","Hotkeys","hotKeysConfig","Hotkey","global","SubMenuContainer","GREY_2","ExplorerSubMenu","onMenuClose","openMenu","query","setQuery","setShow","filteredFileOperations","useFilteredFileOperations","item","kind","SEARCH_ITEM_TYPES","sectionTitle","list","_useState5","_useState6","activeItemIdx","setActiveItemIdx","element","getElementById","scrollIntoView","scrollMode","currentActiveIndex","Math","max","min","handleClick","redirect","Popover2","idx","EntityIcon","shortTitle","onClose","placement","transitionDuration","ADD_QUERY_JS_TOOLTIP","comboHelpText","SEARCH_CATEGORY_ID","ACTION_OPERATION","Files","files","selectFilesForExplorer","isFilesOpen","isMenuOpen","activeActionId","useActiveAction","_document$getElementB","block","inline","onFilesToggle","fileEntities","entity","CODE_GRAY","alwaysShowRightIcon","EMPTY_QUERY_JS_MAIN_TEXT","EMPTY_QUERY_JS_BUTTON_TEXT","ADD_QUERY_JS_BUTTON","WidgetTypes","WidgetFactory","widgetTypes","WidgetContextMenu","parentId","pageWidgets","widget","parentWidget","tabName","TABS_WIDGET","tabsObj","filteredTabs","values","WIDGET_DELETE_TAB_CHILD","tabId","WidgetReduxActionTypes","WIDGET_DELETE","WIDGET","editWidgetName","canManagePages","option","isDeletable","UNREGISTERED_WIDGETS","WidgetEntity","_props$childWidgets","widgetsToExpand","widgetDragResize","selectedWidgetAncestry","WidgetIcon","forceExpand","includes","hasManagePagePermission","_useWidget","selectedWidgets","getSelectedWidgets","lastSelectedWidget","getLastSelectedWidget","isWidgetSelected","multipleWidgetsSelected","navigateToWidget","useNavigateToWidget","isMultiSelect","metaKey","ctrlKey","isShiftSelect","shiftKey","useWidget","parentModalId","parentModalIdForChildren","switchWidget","hash","showContextMenu","widgetsInStep","childWidgets","child","highlight","updateWidgetName","ExplorerWidgetGroup","_widgets$children3","_widgets$children4","_widgets$children","widgets","selectWidgetsForCurrentPage","guidedTour","isWidgetsOpen","_widgets$children2","onWidgetToggle","ADD_WIDGET_TOOLTIP","addWidgetsFn","EMPTY_WIDGET_BUTTON_TEXT","EMPTY_WIDGET_MAIN_TEXT","ADD_WIDGET_BUTTON","whyDidYouRender","logOnDifferentValues","StyledDivider","NonIdealState","textOnWhiteBG","setSearchKeyword","ENTITY_EXPLORER","stopTracking","explorerRef","isFirstTimeUserOnboardingEnabled","getIsFirstTimeUserOnboardingEnabled","showWidgetsSidebar","forceOpenWidgetPanel","toggleInOnboardingWidgetSelection","currentWorkspaceId","getCurrentWorkspaceId","fetchWorkspace","Search","SEARCH_ENTITY","ScrollIndicator","containerRef","selectForceOpenWidgetPanel","onBoarding","switches","trimQueryString","setExplorerSwitchIndex","activeSwitchIndex","getExplorerSwitchIndex","openWidgetPanel","currentIndex","tailwindLayers","entityExplorer","Switcher","activeObj","onWidthChange","onDragEnd","inverse","MIN_WIDTH","MAX_WIDTH","resizing","setResizing","setPosition","parseInt","getComputedStyle","minWidth","replace","maxWidth","addEventListener","onMouseUp","onMouseMove","onTouchMove","removeEventListener","onMouseDown","event","eventWithTouches","touches","clientX","clientY","onTouchStart","unFocus","remove","clientWidth","positionDelta","newWidth","welcomeTourStickySidebarBackground","onboarding","statusBarHeight","TitleWrapper","p","GREY_10","getTypographyByKey","StatusText","ProgressContainer","radii","Progressbar","percentage","StyledClose","StatusProgressbar","withRouter","_useStatus","getDatasources","getPageActions","getCanvasWidgets","deps","getEvaluationInverseDependencyMap","isConnectionPresent","useIsWidgetActionConnectionPresent","isDeployed","getApplicationLastDeployedAt","isFirstTimeUserOnboardingComplete","getFirstTimeUserOnboardingComplete","inOnboardingWidgetSelection","getInOnboardingWidgetSelection","ONBOARDING_STATUS_STEPS_SIXTH","ONBOARDING_STATUS_STEPS_THIRD","ONBOARDING_STATUS_STEPS_THIRD_ALT","ONBOARDING_STATUS_STEPS_FIVETH","ONBOARDING_STATUS_STEPS_FOURTH","ONBOARDING_STATUS_STEPS_SECOND","ONBOARDING_STATUS_STEPS_FIRST","ONBOARDING_STATUS_STEPS_FIRST_ALT","useStatus","isChecklistPage","isGenerateAppPage","SET_ENABLE_FIRST_TIME_USER_ONBOARDING","SET_FIRST_TIME_USER_ONBOARDING_APPLICATION_ID","SET_FIRST_TIME_USER_ONBOARDING_COMPLETE","onboardingCheckListUrl","iconSize","END_FIRST_TIME_USER_ONBOARDING","ONBOARDING_STATUS_GET_STARTED","deleteIconConfig","DANGER_SOLID","hoverColor","DANGER_SOLID_HOVER","onDelete","Dialog","canOutsideClickClose","headerIcon","DELETE_CONFIRMATION_MODAL_TITLE","DELETE_APP_THEME_WARNING","Button","category","Category","secondary","Size","medium","primary","danger","MainContainer","main","backgroundColor","HeaderContainer","primaryColor","_ref3","getComplementaryGrayscaleColor","MainText","_ref4","ThemeColorCircle","_ref5","ThemeName","h3","ThemeColorButton","_ref6","_ref7","boxShadow","_ref8","borderColor","_ref9","borderRadius","_ref10","ThemeCard","deletable","selectable","themingStack","getAppThemingStack","themingMode","last","isThemeSelectionMode","AppThemingMode","APP_THEME_SELECTION","isDeleteModalOpen","toggleDeleteModal","userDefinedColors","properties","primaryBorderRadius","primaryBoxShadow","closeDeleteModalFn","DeleteIcon","themeId","themeName","changeSelectedAppThemeAction","colorKey","DeleteThemeModal","deleteAppThemeAction","Sentry","SettingsWrapper","StyledIcon","Title","GRAY_800","SettingSection","_props$className","_props$collapsible","collapsible","isDefaultOpen","setOpen","small","setName","isValid","isDirty","inputValidator","setInputValidator","themes","getAppThemes","onSubmit","saveSelectedThemeAction","noValidate","TextInput","errorMsg","validator","errorMessage","ERROR_MESSAGE_NAME_EMPTY","find","UNIQUE_NAME_ERROR","test","APLHANUMERIC_HYPHEN_SLASH_SPACE_ERROR","createThemeValidator","options","sectionName","selectedOption","updateTheme","Dropdown","portalContainer","renderOption","isHighlighted","isSelectedNode","fontFamily","_defineProperty","selected","showLabelOnly","ColorBox","background","setAutoFocus","selectedColor","setSelectedColor","colorName","startCase","ColorPickerComponent","changeColor","onChangeShadow","optionKey","selectedOptionKey","invertedBoxShadowOptions","buttonGroupOptions","openOnTargetFocus","CloseLineIcon","ButtonGroup","selectButton","onChangeBorder","invertedBorderRadiusOptions","borderTopLeftRadius","THEMING_BETA_CARD_POPOVER_CLASSNAME","PopoverStyles","createGlobalStyle","CsClasses","BP3_POPOVER_ARROW_BORDER","BP3_POPOVER_ARROW_FILL","selectedTheme","getSelectedAppTheme","isSaveModalOpen","setSaveModalOpen","updateSelectedTheme","updateSelectedAppThemeAction","onClickChangeThemeButton","setAppThemingModeStackAction","onOpenSaveModal","onCloseSaveModal","onResetTheme","resetThemeAction","BetaCard","DropdownV2","DropdownTrigger","MoreIcon","DropdownList","DropdownItem","Save2LineIcon","ArrowGoBackIcon","fontFamilySectionName","ThemeFontControl","ThemeColorControl","borderRadiusSectionName","ThemeBorderRadiusControl","boxShadowSectionName","ThemeBoxShadowControl","SaveThemeModal","userSavedThemes","isSystemTheme","systemThemes","ArrowLeft","ThemePropertyPane","propertyPane","APP_THEME_EDIT","ThemeEditor","ThemeSelector","XL","IconSelectorWrapper","application","getCurrentApplication","isSavingAppName","getIsSavingAppName","applicationName","setApplicationName","isAppNameValid","setIsAppNameValid","applicationIcon","setApplicationIcon","updateAppSettings","isAppNameUpdated","currentApp","updateApplication","Text","TextType","P1","GENERAL_SETTINGS_APP_NAME_LABEL","TextLoaderIcon","defaultValue","onKeyPress","ev","result","GENERAL_SETTINGS_NAME_EMPTY_MESSAGE","GENERAL_SETTINGS_APP_ICON_LABEL","IconSelector","selectedIcon","StyledWrapper","SectionHeader","_classNames","isSelected","subText","DefaultPageIcon","MenuIcons","DEFAULT_HOMEPAGE_ICON","PageIcon","PAGE_ICON","PageListHeader","DragIcon","DRAG_CONTROL","dragContainerRef","selectedPage","pageName","onPageSelect","GRAY_400","cursor","isDefault","DraggableList","ItemRenderer","itemHeight","items","pages","keyAccessor","onUpdate","newOrder","originalIndex","newIndex","setPageOrder","shouldReRender","BottomBarCTAStyles","css","bottomBarHeight","GRAY_100","StyledList","ul","StyledIconContainer","DisclaimerContainer","WARNING_ORANGE","BROWN","BodyContainer","StyledTrigger","UpdatesModal","applicationVersion","closeModal","latestVersion","showModal","updates","setIsLoading","ModalComponent","hasBackDrop","overlayClassName","portalClassName","scrollContents","SCORPION","H1","update","H3","description","desc","dangerouslySetInnerHTML","__html","DisclaimerIcon","WARNING_SOLID","disclaimer","large","tag","reload","selectApplicationVersion","_useSelector","selectURLSlugs","applicationSlug","pageSlug","CLEAN_URL_UPDATE","shortDesc","formatter","href","severity","ApplicationVersion","SLUG_URL","u","setShowModal","tooltipContent","relative","showTooltip","preventOverflow","enabled","toolTipDefined","tooltip","Tooltip","lineHeight","borderBottom","display","top","getPageListState","pageList","getIsGeneratingTemplatePage","createSelector","isGeneratingTemplatePage","getUrlPreview","newPageName","currentPageName","newCustomSlug","currentCustomSlug","relativePath","filterAccentedAndSpecialCharacters","urlBuilder","getCustomSlugPathPreview","getPagePathPreview","generateBasePath","APP_MODE","PUBLISHED","splitRelativePath","splitPathPreview","decodeURI","replaceAll","UrlPreviewWrapper","UrlPreviewScroll","specialCharacterCheckRegex","isPageLoading","loading","isUpdatingEntity","getUpdatingEntity","appNeedsUpdate","setCanManagePages","setPageName","isPageNameSaving","setIsPageNameSaving","_useState7","_useState8","isPageNameValid","setIsPageNameValid","_useState9","customSlug","_useState10","setCustomSlug","_useState11","_useState12","isCustomSlugSaving","setIsCustomSlugSaving","_useState13","_useState14","isShown","setIsShown","_useState15","_useState16","isShownSaving","setIsShownSaving","_useState17","_useState18","setIsDefault","_useState19","_useState20","isDefaultSaving","setIsDefaultSaving","pathPreview","conflictingNames","getUsedActionNames","shallowEqual","hasActionNameConflict","isNameValid","savePageName","updatePage","saveCustomSlug","saveIsShown","PAGE_SETTINGS_PAGE_NAME_LABEL","resolveAsSpaceChar","PAGE_SETTINGS_ACTION_NAME_CONFLICT_ERROR","PAGE_SETTINGS_NAME_EMPTY_MESSAGE","PAGE_SETTINGS_PAGE_URL_LABEL","PAGE_SETTINGS_PAGE_URL_VERSION_UPDATE_1","ManualUpgrades","PAGE_SETTINGS_PAGE_URL_VERSION_UPDATE_2","PAGE_SETTINGS_PAGE_URL_VERSION_UPDATE_3","readOnly","onCopy","protocol","hostname","Array","isArray","PropertyHelpLabel","PAGE_SETTINGS_SHOW_PAGE_NAV","PAGE_SETTINGS_SHOW_PAGE_NAV_TOOLTIP","SwitchWrapper","AdsSwitch","checked","PAGE_SETTINGS_SET_AS_HOMEPAGE","PAGE_SETTINGS_SET_AS_HOMEPAGE_TOOLTIP","PAGE_SETTINGS_SET_AS_HOMEPAGE_TOOLTIP_NON_HOME_PAGE","setPageAsDefault","StyledLink","a","TEXT","StyledPropertyHelpLabel","AppSettingsTabs","_application$userPerm","_embedSnippet$current","_embedSnippet$current3","isChangingViewAccess","getIsChangingViewAccess","isFetchingApplication","getIsFetchingApplications","embedSnippet","useUpdateEmbedSnippet","userAppPermissions","canShareWithPublic","isPermitted","PERMISSION_TYPE","MAKE_PUBLIC_APPLICATION","IN_APP_EMBED_SETTING","sectionContentHeader","MAKE_APPLICATION_PUBLIC","MAKE_APPLICATION_PUBLIC_TOOLTIP","Switch","isPublic","changeAppViewAccessInit","embed","isSuperUser","embedSettingContent","XXL","case","Case","UPPERCASE","BUTTON_SMALL","change","showNavigationBar","defaultChecked","currentEmbedSetting","_embedSnippet$current2","embedSize","DimensionsInput","prefix","embedSnippetTitle","EmbedCodeSnippet","snippet","SectionContent","GRAY_300","paneTextUnderline","ThemeContentWrapper","_selectedTab$page3","_selectedTab$page4","context","getAppSettingsPane","selectAllPages","General","setSelectedTab","_selectedTab$page","_selectedTab$page2","SectionHeadersConfig","GENERAL_SETTINGS_SECTION_HEADER","GENERAL_SETTINGS_SECTION_HEADER_DESC","Embed","sectionHeader","sectionHeaderDesc","Theme","THEME_SETTINGS_SECTION_HEADER","THEME_SETTINGS_SECTION_HEADER_DESC","PAGE_SETTINGS_SECTION_HEADER","DraggablePageList","Page","GENERAL_SETTINGS_SECTION_CONTENT_HEADER","GeneralSettings","THEME_SETTINGS_SECTION_CONTENT_HEADER","PAGE_SETTINGS_SECTION_CONTENT_HEADER","PageSettings","EmbedSettings","CustomLabel","DIRECTION","deletePageCallback","deletePage","setPageAsDefaultCallback","editPageName","clonePage","clonePageInit","setHiddenField","getPageById","_getCurrentApplicatio","_getCurrentApplicatio2","canCreatePages","hasCreatePagePermission","canDeletePages","hasDeletePagePermission","CONTEXT_CLONE","isDefaultPage","CONTEXT_SET_AS_HOME_PAGE","openAppSettingsPaneAction","CONTEXT_SETTINGS","direction","afterResizeCallback","mouseDown","setMouseDown","pointer","vertical","_ref$current$getBound","getBoundingClientRect","bottom","left","right","newHeight","MenuItem","createPageCallback","useParams","featureFlags","selectFeatureFlags","menuRef","node","ContextMenuItems","CREATE_PAGE","FileAddIcon","GENERATE_PAGE_ACTION_TITLE","Database2LineIcon","generateTemplateFormURL","TEMPLATES_PHASE_2","ADD_PAGE_FROM_TEMPLATE","Layout2LineIcon","showTemplatesModal","onMenuItemClick","HotKeys","tabIndex","autofocus","H5","CANVAS_NEW_PAGE_CARD","MenuIcon","MIRAGE","ADD_PAGE_TOOLTIP","RIGHT","pagesSize","PRE_RIGHT_ICON","RelativeContainer","Pages","pinned","getExplorerPinned","isPagesOpen","pageResizeRef","storedHeightKey","storedHeight","localStorage","getItem","_useResize","useResize","data","setItem","toString","_document$getElements","getElementsByClassName","switchPage","defaultPageLayouts","dsl","extractCurrentDSL","layoutOnLoadActions","createPage","onPin","setExplorerPinnedAction","onPageToggle","pageElements","defaultPageIcon","pageIcon","rightIcon","hiddenPageIcon","isCurrentPage","PageContextMenu","preRightIcon","currentPageIcon","collapseRef","AddPageContextMenu","onClickPreRightIcon","resizer","RED","SYNTAX_HIGHLIGHTING_SUPPORTED_LANGUAGES","APPSMITH","CopyBox","StyledHighlightedCode","HighlightedCode","setIsOpen","codeText","propertyName","isString","copyBindingToClipboard","toggleChildren","PROPERTY","CollapseToggle","COLLAPSE_TOGGLE","isVisible","language","skin","Skin","LIGHT","COPY_ELEMENT","CurrentValueViewer","evaluatedValue","hideLabel","EditorTheme","CloseIcon","CLOSE_CONTROL","EntityInfoContainer","selectEntityInfo","explorer","entityInfo","EntityProperties","ENTITY_EXPLORER_ENTITY","widgetEntity","handleOutsideClick","actionEntity","jsActionEntity","jsActions","js","closeContainer","appBody","paths","composedPath","rect","_rect$width","innerHeight","entityProperties","jsCollection","getPropsForJSActionEntity","actionProperty","entityDefinitions","k","isEmpty","widgetProperty","entityProperty","EntityProperty","EntityExplorerSidebar","tooltipTimeout","getExplorerActive","sidebarRef","isMultiPaneActive","isPreviewMode","previewModeSelector","enableFirstTimeUserOnboarding","useHorizontalResize","tooltipIsOpen","setTooltipIsOpen","SIDE_BAR_MOUNT","currentX","setExplorerActiveAction","onHoverResizer","onHoverEndResizer","clearTimeout","resizerLeft","OnboardingStatusbar","Explorer","onMouseEnter","onMouseLeave","onTouchEnd","openDoc","InstallationProgressWrapper","addBorder","StatusIconWrapper","addHoverState","StatusIcon","_props$isInstalled","isInstalled","status","actionProps","Success","SaveSuccessIcon","GREEN","Failed","ProgressTracker","isFirst","isLast","UNSUPPORTED_LIB","UNSUPPORTED_LIB_DESC","EXT_LINK","reportIssue","REPORT_ISSUE","learnMore","LEARN_MORE","InstallationProgress","installStatusMap","urls","reverse","SectionDivider","MenuDivider","jsDelivr","Installer","URL","setURL","setIsValid","installedLibraries","selectInstalledLibraries","queuedLibraries","selectQueuedLibraries","installerRef","closeInstaller","clearInstalls","updateURL","validate","valid","installLibrary","libURL","libInstalled","INSTALLED_ALREADY","info","installLibraryInit","FormGroup","$padding","leftIcon","padding","LEARN_MORE_DESC","REC_LIBRARY","LibraryCard","isLastCard","selectStatusForURL","selectIsLibraryInstalled","P0","ProfileImage","P3","author","GlobalSearchHotKeys","group","handleEscKey","flex","flexDirection","minHeight","overflow","BranchListItemContainer","GREY_3","RemoteBranchListItem","branch","textRef","isEllipsisActive","StyledButton","DefaultTag","xxs","DeleteButton","branchToDelete","gitMetaData","currentBranch","branchName","defaultBranchName","DangerMenuItem","DELETE_BRANCH_WARNING_DEFAULT","DELETE_BRANCH_WARNING_CHECKED_OUT","deleteBranchInit","DELETE","BranchMoreMenu","buttons","getCurrentAppGitMetaData","menuButton","DARK_GRAY","hoverFillColor","GRAY_900","XXXXL","MenuButton","Menu","dontUsePortal","menuItemWrapperWidth","BranchListItem","shouldScrollIntoView","itemRef","_useHover","useHover","hover","ListContainer","BranchDropdownContainer","CreateNewBranchContainer","BLACK","SpinnerContainer","CreateNewBranch","hovered","isCreatingNewBranch","alignItems","LoadingRow","Skeleton","BranchesLoading","Header","closePopup","fetchBranches","SWITCH_BRANCHES","justifyContent","marginLeft","SYNC_BRANCHES","flip","BranchList","branches","getGitBranches","branchNames","getGitBranchNames","getCurrentGitBranch","fetchingBranches","getFetchingBranches","defaultBranch","getDefaultGitBranchName","searchText","changeSearchTextInState","isCreateNewBranchInputValid","filteredBranches","useFilteredBranches","localBranches","b","isLocalBranch","remoteBranches","isRemoteBranch","_useActiveHoverIndex","useActiveHoverIndex","activeHoverIndex","setActiveHoverIndex","setIsCreatingNewBranch","handleCreateNewBranch","createNewBranchInit","onErrorCallback","onSuccessCallback","setIsPopupOpen","switchBranch","switchGitBranchInit","remoteBranchList","SegmentHeader","REMOTE_BRANCHES","RemoteBranchList","localBranchList","LOCAL_BRANCHES","getIsActiveItem","LocalBranchList","BranchListHotkeys","fetchBranchesInit","pruneBranches","Space","removeSpecialChars","FIND_OR_CREATE_A_BRANCH","ButtonContainer","editorBottomBar","branchBtnText","labelTarget","getGitStatus","hasBackdrop","offset","nextState","isClean","SvgGitCommitLine","QuickActionButtonContainer","buttonBackgroundHover","QuickActionButton","_ref$className","_ref$count","count","_ref$disabled","string","charAt","toUpperCase","capitalizeFirstLetter","tooltipText","SpinnerLoader","GitCommitLine","PlaceholderButton","MERCURY","ALABASTER_ALT","ConnectGitPlaceholder","isInGuidedTour","isTooltipEnabled","CONNECTING_TO_REPO_DISABLED","DURING_ONBOARDING_TOUR","NOT_LIVE_FOR_YOU_YET","COMING_SOON","isGitConnectionEnabled","showConnectGitModal","CONNECT_GIT_BETA","CONNECT_GIT","QuickGitActions","isGitConnected","getIsGitConnected","gitStatus","_getPullBtnStatus","pullFailed","behindCount","NO_COMMITS_TO_PULL","CONFLICTS_FOUND","PULL_CHANGES","CANNOT_PULL_WITH_LOCAL_UNCOMMITTED_CHANGES","getPullBtnStatus","getPullFailed","pullDisabled","pullTooltipMessage","isPullInProgress","getPullInProgress","isFetchingGitStatus","getIsFetchingGitStatus","quickActionButtons","changesToCommit","commit","connect","merge","pull","showPullLoadingState","COMMIT_CHANGES","MERGE","GIT_SETTINGS","getQuickActionButtons","setIsGitSyncModalOpen","tab","GitSyncModalTab","DEPLOY","GIT_CONNECTION","gitPullInit","triggeredFromBottomBar","getCountOfChangesToCommit","BranchButton","button","ResizerCSS","ActionExecutionResizerHeight","debugger","ALTO","DEBUGGER_TABS","DEBUGGER_TAB_KEYS","ERROR_TAB","DEBUGGER_ERRORS","panelComponent","Errors","hasShortCut","LOGS_TAB","DEBUGGER_LOGS","DebuggerLogs","INSPECT_TAB","INSPECT_ENTITY","EntityDeps","panelRef","getSelectedCanvasDebuggerTab","stopEventPropagation","Resizer","EntityBottomTabs","expandedHeight","tabKey","setCanvasDebuggerSelectedTab","selectedTabKey","tabs","showDebugger","TriggerContainer","errorCount","warningCount","floatingButton","noErrorCount","DebuggerTrigger","messageCounters","getMessageCount","totalMessageCount","errors","warnings","hideDebuggerIcon","hideDebuggerIconSelector","matchBuilderPath","showDebuggerAction","DebuggerTabs","getDefaultRefinement","help","defaultRefinement","_getAppsmithConfigs","getAppsmithConfigs","algolia","appVersion","cloudHosting","intercomAppID","searchClient","algoliasearch","apiId","apiKey","OenLinkIcon","HelpIcons","OPEN_LINK","DocumentIcon","DOCUMENT","GithubIcon","GITHUB","ChatIcon","CHAT","DiscordIcon","DISCORD","StyledOpenLinkIcon","StyledDocumentIcon","StyledGithubIcon","StyledChatIcon","StyledDiscordIcon","Hit","hit","path","HelpBaseURL","Highlight","attribute","DefaultHelpMenuItem","link","Intercom","SearchContainer","helpModal","itemHighlight","StyledPoweredBy","PoweredBy","_templateObject8","HelpContainer","_templateObject9","HelpFooter","_templateObject10","HelpBody","_templateObject11","hideSearch","HELP_MENU_ITEMS","DocumentationSearch","onSearchValueChange","showResults","setState","handleClose","SET_HELP_MODAL_OPEN","setHelpModalVisibility","SET_DEFAULT_REFINEMENT","setHelpDefaultRefinement","_this2","hideMinimizeBtn","zIndex","InstantSearch","indexName","Configure","hitsPerPage","SearchBox","Hits","hitComponent","APPSMITH_DISPLAY_VERSION","edition","moment","releaseDate","fromNow","user","getCurrentUser","HelpPopoverStyle","Trigger","tooltipsDisabled","HELP_RESOURCE_TOOLTIP","globalSearch","helpIcon","isHelpOpen","setIsHelpOpen","bootIntercom","email","onOpened","onClosed","BOTTOM_RIGHT","HELP_MODAL_WIDTH","paneCount","getPaneCount","updateCount","SET_PANE_COUNT","setPaneCount","PaneLayoutOptions","TWO_PANE","THREE_PANE","alt","MultiPaneSwitch2","MultiPaneSwitch3","Layers","bottomBar","BottomBar","isMultiPane","HelpButton","PaneCountSwitcher","triggerWelcomeTour","APPLICATIONS_URL","ONBOARDING_CREATE_APPLICATION","CenteredContainer","ModalHeaderWrapper","ModalHeader","ModalSubHeader","ModalBody","ModalContentWrapper","ModalContentRow","border","ModalContentTextWrapper","StyledImgWrapper","StyledImg","img","StyledCount","_templateObject12","ModalContent","_templateObject13","ModalContentHeader","_templateObject14","ModalContentDescription","_templateObject15","ModalFooter","_templateObject16","ModalFooterText","_templateObject17","_templateObject18","_templateObject19","IntroductionModal","close","onBuildApp","GET_ALL_APPLICATION_INIT","Overlay","usePortal","WELCOME_TO_APPSMITH","HOW_APPSMITH_WORKS","ONBOARDING_INTRO_CONNECT_YOUR_DATABASE","QUERY_YOUR_DATABASE","ASSETS_CDN_URL","DRAG_AND_DROP","CUSTOMIZE_WIDGET_STYLING","ONBOARDING_INTRO_PUBLISH","CHOOSE_ACCESS_CONTROL_ROLES","ONBOARDING_INTRO_FOOTER","START_TUTORIAL","BUILD_MY_FIRST_APP","TaskImageContainer","TaskImage","TaskHeader","TaskSubText","TaskButtonWrapper","Taskfootnote","OnboardingTasks","getFirstTimeUserOnboardingModal","ONBOARDING_TASK_WIDGET_HEADER","ONBOARDING_TASK_WIDGET_BODY","ONBOARDING_TASK_WIDGET_BUTTON","ONBOARDING_TASK_FOOTER","PUBLISH_APPLICATION_INIT","ONBOARDING_TASK_WIDGET_FOOTER_ACTION","ONBOARDING_TASK_QUERY_HEADER","ONBOARDING_TASK_QUERY_BODY","ONBOARDING_TASK_QUERY_BUTTON","ONBOARDING_TASK_QUERY_FOOTER_ACTION","ONBOARDING_TASK_DATASOURCE_HEADER","ONBOARDING_TASK_DATASOURCE_BODY","ONBOARDING_TASK_DATASOURCE_BUTTON","ONBOARDING_TASK_DATASOURCE_FOOTER_ACTION","ONBOARDING_TASK_DATASOURCE_FOOTER","SET_SHOW_FIRST_TIME_USER_ONBOARDING_MODAL","getCrudInfoModalData","crudInfoModal","crudInfoModalOpen","generateCRUDSuccessInfo","Heading","ActionButtonWrapper","ActionButton","modal","separator","ImageWrapper","ProgressiveImageContainer","SuccessContentWrapper","STEP","InfoContent","successImageUrl","successMessage","ProgressiveImage","imageSource","thumbnailSource","setStep","setCrudInfoModalData","GEN_CRUD_INFO_DIALOG_SUBTITLE","timerId","setModalClose","SuccessTick","GEN_CRUD_SUCCESS_MESSAGE","showInfoMessage","meta","completedSubSteps","hintCount","hadReachedStep","getHadReachedStep","queryExecutedSuccessfully","isQueryExecutionSuccessful","tableWidgetSelected","isTableWidgetSelected","isTableWidgetBound","tableWidgetHasBinding","isContainerWidgetPreset","containerWidgetAdded","nameInputWidgetId","nameInputSelector","isNameInputBound","isNameInputBoundSelector","countryInputBound","isCountryInputBound","isCountryInputSelected","countryInputSelector","emailInputBound","isEmailInputBound","buttonWidgetPresent","isButtonWidgetPresent","buttonWidgetonClickBinding","buttonWidgetHasOnClickBinding","buttonWidgetSuccessBinding","buttonWidgetHasOnSuccessBinding","GUIDED_TOUR_STEPS","RUN_QUERY","SELECT_TABLE_WIDGET","TABLE_WIDGET_BINDING","NAME_INPUT_BINDING","BIND_OTHER_FORM_WIDGETS","ADD_BUTTON_WIDGET","BUTTON_ONCLICK_BINDING","BUTTON_ONSUCCESS_BINDING","setCurrentStepInit","forceShowContent","hideIndicator","markStepComplete","Steps","elementSelector","highlightSection","closeSidebar","showIndicator","tableWidgetWasSelected","focusWidgetProperty","getBaseWidgetClassName","updateButtonWidgetText","enableGuidedTour","GuideWrapper","CardWrapper","StepCount","stepCountBackground","Description","addLeftSpacing","UpperContent","ContentWrapper","GuideButton","_ref$isVisible","SubContentWrapper","Hint","cancelButton","HintTextWrapper","SuccessMessageWrapper","InitialContent","getQueryAction","TITLE","DESCRIPTION","toggleLoader","setUpTourApp","BUTTON_TEXT","GuideStepsContent","useComputeCurrentStep","currentStep","setHintCount","currentHint","hints","hintSteps","steps","COMPLETE","image","PROCEED","completed","CompletionContent","showSuccess","setShowSuccess","showSuccessButton","setShowSuccessButton","tickMarkRef","anim","lottie","animationData","indicator","autoplay","container","renderer","loop","_anim","destroy","timed","_Steps$props$step$suc","_success$buttonText","_info$buttonText","buttonText","CONTINUE","PROCEED_TO_NEXT_STEP","GuideBody","showSuccessMessage","exploring","isExploringSelector","getCurrentStep","showInfoMessageSelector","section","backgroundForCanvas","canvasWidth","focusRef","useWidgetFocus","widgetsStructure","createWidget","RenderModes","CANVAS","log","_path2","_path3","_path4","_path5","isFetchingPage","getIsFetchingPage","getCanvasWidth","getCanvasWidgetsStructure","equal","getViewModePageList","getCurrentThemeDetails","shouldHaveTopMargin","isAppThemeChanging","getAppThemeIsChanging","showCanvasTopSection","showCanvasTopSectionSelector","isLayoutingInitialized","useDynamicAppLayout","isPageInitializing","useGoogleFont","appFont","pageLoading","Centered","Canvas","heightWithTopMargin","smallHeaderHeight","getCanvasClassName","WidgetGlobaStyles","SvgLayout","SvgDatabase","Card","GREY_4","centerAlign","inPreviewMode","deleteCanvasCardsState","showTemplatesModalAction","Layout","COD_GRAY","TEMPLATE_CARD_TITLE","TEMPLATE_CARD_DESCRIPTION","goToGenPageForm","Database","GENERATE_PAGE","GENERATE_PAGE_DESCRIPTION","currentApplicationDetails","PageTabsContainer","updating","editor","loadingStates","updatingWidgetName","isCurrentWidgetRecentlyAdded","getIsCurrentWidgetRecentlyAdded","_useInteractionAnalyt","useInteractionAnalyticsEvent","dispatchInteractionAnalyticsEvent","eventEmitterRef","getExistingWidgetNames","toggleEditWidgetName","useToggleEditWidgetName","valueRef","updatePropertyTitle","updateNewTitle","updateTitle","isPanelTitle","_containerRef$current","REMOVE_FROM_RECENTLY_ADDED_WIDGET","isEditingDefault","setIsEditingDefault","handleKeyDown","onBackClick","BackIcon","propertyType","EditableText","editInteractionKind","EditInteractionKind","SINGLE","hideEditIcon","onBlurEverytime","onTextChanged","savingState","SavingState","STARTED","NOT_STARTED","underline","valueTransform","wrapperRef","tooltipPosition","StyledTabComponent","TabComponent","StyledTabs","Tabs","GREY_900","PropertyPaneTab","selectedIndex","getSelectedPropertyTabIndex","panelPropertyPath","arr","contentComponent","styleComponent","setSelectedPropertyTabIndex","TabList","Tab","TabTitle","TabPanel","useSearchText","initialVal","setSearchText","maxWait","evaluateHiddenProperty","widgetProps","shouldHidePropertyFn","_step","finalConfig","_iterator","_createForOfIteratorHelper","s","n","done","conf","sectionConfig","controlConfig","propertySectionPath","childrenId","configItem","controlType","appPositioningBasedPropertyFilter","err","f","updateConfigPaths","basePath","_childConfig","childConfig","SearchInputWrapper","GRAY_50","StyledSearchInput","SearchInput","InputWrapper","PropertyPaneSearchInput","inputRef","shouldFocusSearch","getShouldFocusPropertySearch","shouldFocusPanelSearch","getShouldFocusPanelPropertySearch","isPanel","_wrapperRef$current","isCurrentFocusOnInput","handleInputKeydown","_wrapperRef$current2","handleWrapperKeydown","_inputRef$current","_inputRef$current2","_inputRef$current3","onTextChange","PROPERTY_SEARCH_INPUT_PLACEHOLDER","SearchVariant","BACKGROUND","sendPropertyPaneSearchAnalytics","param","tokenSearch","searchQuery","noMatch","startsWith","contains","escapedSearchQuery","regEx","RegExp","matchPosition","computeChildrenIdAndInsertSection","configArray","_len","_key","sectionConfigs","property","sectionConfigCopy","isPropertyStartsWith","sectionNameMatch","_step2","childResult","_iterator2","invisible","labelMatch","_childResult$section$","_childResult$section$2","_childResult$property","_childResult$property2","sortSearchResult","searchPropertyPaneConfig","PanelWrapper","PanelHeader","PropertyPaneTitle","unsetSelectedPropertyPanel","parentPropertyPath","closePanel","widgetProperties","getWidgetPropsForPropertyPane","panelConfig","panelParentPropertyPath","panelProps","parentProperty","isPlainObject","panelIdPropertyName","findIndex","entry","panelConfigs","isNumber","configChildren","panelConfigsWithStyleAndContent","contentChildren","styleChildren","searchConfig","panel","openPanel","propPaneId","_useSearchText","searchPath","titlePropertyName","isEditable","editableTitle","propertiesToUpdate","updateHook","additionalPropertiesToUpdate","forEach","propertyPath","propertyValue","onPropertiesChange","PropertyControlsGenerator","isPanelProperty","SvgUndo2","StyledHelperText","helperText","SHOULD_NOT_REJECT_DYNAMIC_BINDING_LIST_FOR","PropertyControl","controlRef","propsSelector","getWidgetPropsForPropertyName","dependencies","evaluatedDependencies","dataTreePath","hasDispatchedPropertyFocus","shouldFocusPropertyPath","getShouldFocusPropertyPath","before","after","enhancements","enhancementFns","parentIdWithEnhancementFn","focusTimeout","shouldFocusOnPropertyControl","focusableElement","getPropertyControlFocusElement","behavior","propertyStylesheetValue","widgetStylesheet","getWidgetStylesheetConfigMap","getStylesheetValue","_","isPropertyDeviatedFromTheme","THEME_BINDING_REGEX","childWidgetAutoCompleteEnhancementFn","autoCompleteEnhancementFn","childWidgetCustomJSControlEnhancementFn","customJSControlEnhancementFn","childWidgetHideEvaluatedValueEnhancementFn","hideEvaluatedValueEnhancementFn","childWidgetPropertyUpdateEnhancementFn","propertyPaneEnhancementFn","childWidgetShouldHidePropertyFn","childWidgetDataTreePathEnhancementFn","updateDataTreePathFn","toggleDynamicProperty","isDynamic","propertyState","shouldRejectDynamicBindingPathList","isDynamicValue","setWidgetDynamicProperty","onDeleteProperties","propertyPaths","deleteWidgetProperty","onBatchUpdateProperties","allUpdates","batchUpdateWidgetProperty","modify","onBatchUpdatePropertiesOfMultipleWidgets","updatesArray","batchUpdateMultipleWidgetProperties","onPropertyChange","isUpdatedViaKeyboard","updatedValue","isUpdatedFromSearchResult","isSearchResult","selfUpdates","allDeletions","allDynamicPropertyPathUpdate","isDynamicPropertyPath","shouldDeleteProperty","AppsmithConsole","logType","LOG_TYPE","WIDGET_UPDATE","postUpdateAction","dynamicUpdates","dynamicPropertyPathList","getWidgetsOwnUpdatesOnPropertyChange","enhancementsToOtherWidgets","otherWidgetPropertiesToUpdates","hookPropertiesUpdates","isTriggerProperty","triggerPaths","isDynamicTrigger","parentEnhancementUpdates","updateRelatedWidgetProperties","relatedWidgetUpdates","getOtherWidgetPropertyChanges","allPropertiesToUpdates","component","PanelPropertiesEditor","getEvalValuePath","isPopulated","fullPath","additionalAutoComplete","rest","_objectWithoutProperties","_excluded","parentPropertyName","parentPropertyValue","additionalDynamicData","expected","getExpectedValue","validation","isPropertyDynamicTrigger","validationMessage","example","autocompleteDataType","AutocompleteDataType","FUNCTION","additionAutocomplete","isPropertyDynamicPath","isConvertible","isJSConvertible","uniqId","btoa","canDisplayValueInUI","PropertyControlFactory","controlUIToggleValidation","customJSControl","isToggleDisabled","extractValue","inputComputedValueMap","ControlWrapper","setFocusablePropertyPaneField","orientation","ControlPropertyLabelContainer","helpText","JS_TOGGLE_DISABLED_MESSAGE","JSToggleButton","ResetIcon","createControl","openNextPanel","deleteProperties","PropertyPaneHelperText","EmptySearchResultWrapper","EmptySearchResult","IconNames","PROPERTY_PANE_EMPTY_SEARCH_RESULT_MESSAGE","getEvaluationTree","evaluations","tree","getWidgetEnhancementSelector","getWidgets","dataTree","parentWithEnhancementFn","getParentWithEnhancementFn","parentDataFromDataTree","getPropsFromTree","widgetEnhancementFns","getWidgetEnhancementFn","WidgetEnhancementType","UPDATE_DATA_TREE_PATH","PROPERTY_UPDATE","AUTOCOMPLETE","CUSTOM_CONTROL","HIDE_EVALUATED_VALUE","SHOULD_HIDE_PROPERTY","enhancementFn","set","args","generatePropertyControl","propertyPaneConfig","_sectionConfig$collap","Boxed","PropertySection","Error","_enhancements$enhance","enhancementSelector","finalProps","searchResults","StyledDiv","ctaTextColor","ctaBackgroundColor","ctaLearnMoreTextColor","actionsExist","ConnectDataCTA","openHelpModal","setGlobalSearchQuery","toggleShowGlobalSearchModal","widgetTitle","mode","INTEGRATION_EDITOR_MODES","AUTO","TopLayer","connections","SelectedNodeWrapper","hasError","connectionsCount","entityCount","ICON","OptionWrapper","fillIconColor","optionBg","OptionContentWrapper","dropdown","doConnectionsHaveErrors","debuggerErrors","some","doesEntityHaveErrors","getDataTreeWithOnlyIds","getDataTree","mapValues","x","pick","OptionNode","useGetEntityInfo","getEntityInfo","navigateToEntity","useEntityLink","datasourceName","H6","DebugButton","TriggerNode","ENTITY","connectionType","iconColor","iconAlignment","keepColors","XS","PropertyPaneConnections","_entityDependencies$d","_entityDependencies$i","inverseDependencyMap","getEntityId","isWidget","isAction","entityDependencies","getDependenciesFromInverseDependencies","dependencyOptions","directDependencies","_getEntityId","inverseDependencyOptions","inverseDependencies","useDependencyList","getFilteredErrors","topLayerRef","_topLayerRef$current","INTERACTION_ANALYTICS_EVENT","handleKbdEvent","_topLayerRef$current2","_event$detail","_topLayerRef$current3","detail","dispatchEvent","interactionAnalyticsEvent","errorIncomingConnections","errorOutgoingConnections","SelectedValueNode","selectedValueProps","headerLabel","optionProps","showDropIcon","excludeList","_objectDestructuringEmpty","getWidgetPropsForPropertyPaneView","doActionsExist","hideConnectDataCTA","_containerRef$current2","deleteSelectedWidget","copyWidget","handleTabKeyDownForButton","emitInteractionAnalyticsEvent","_isWidgetDeprecated","isWidgetDeprecated","isDeprecated","widgetReplacedWith","deprecationMessage","buildDeprecationWidgetMessage","isContentConfigAvailable","getWidgetPropertyPaneContentConfig","isStyleConfigAvailable","getWidgetPropertyPaneStyleConfig","marginTop","BannerMessage","textColor","getWidgetPropertyPaneSearchConfig","getWidgetPropertyPaneConfig","StyledPanelStack","PanelStack","panelWrapperRef","initialPanel","PropertyPaneView","onOpen","parent","scrollTo","showPanelHeader","AppsmithDefaultLayout","AppsmithLayouts","MainContainerLayoutControl","appId","appLayout","getCurrentApplicationLayout","buttonRefs","each","focusedIndex","setFocusedIndex","updateAppLayout","layoutConfig","updateApplicationLayout","layoutOption","_buttonRefs$rightInde","_buttonRefs$leftIndex","rightIndex","leftIndex","AppPositioningTypes","FIXED","AppPositionTypeControl","getCurrentAppPositioningType","CanvasPropertyPane","PopoverPosition","BOTTOM","MultiSelectPropertyPane","_useWidgetSelection","focusWidget","selectWidget","canvasWidgets","MULTI_SELECT_PROPERTY_PANE_MESSAGE","selectedWidgetId","SelectionRequestType","One","StyledHeader","StyledText","APP_SETTINGS_CLOSE_TOOLTIP","closeAppSettingsPaneAction","APP_SETTINGS_PANE_HEADER","paneRef","portalRef","useOnClickOutside","PaneHeader","AppSettings","PropertyPaneSidebar","prevSelectedWidgetId","_useHorizontalResize","selectedWidgetIds","isDraggingOrResizing","getIsDraggingOrResizing","isAppSettingsPaneOpen","getIsAppSettingsPaneOpen","shouldNotRenderPane","keepThemeWhileDragging","selectedWidgetsPresentInCanvas","isDraggingForSelection","getIsDraggingForSelection","AppSettingsPane","WidgetPropertyPane","showResizer","APP_SETTINGS_PANE_WIDTH","propertyPaneWidth","getPropertyPaneWidth","onRightSidebarDragEnd","setPropertyPaneWidthAction","onRightSidebarWidthChange","getCurrentPageName","showOnboardingTasks","getIsOnboardingTasksView","CLOSE_SIDE_PANE","appName","allowDragToSelect","isResizing","isDragging","isSelecting","canvasSelection","isDraggingDisabled","isResizingOrDragging","isSnipingMode","snipingModeSelector","useAllowEditorDragToSelect","isAutoHeightWithLimitsChanging","useAutoHeightUIState","handleWrapperClick","closePropertyPane","closeTableFilterPane","setCanvasSelectionFromEditor","startPoints","y","EditorContextProvider","renderMode","Guide","CanvasTopSection","PageTabs","CanvasContainer","CrudInfoModal","Debugger","PropertyPaneContainer","PostBodyContainer","apiPane","tabBg","JSONEditorFieldWrapper","NoBodyMessage","expectedPostBody","FIELD_VALUES","API_ACTION","OBJECT","selector","formValueSelector","API_EDITOR_FORM_NAME","displayFormat","extraformData","POST_BODY_FORMAT_OPTIONS","NONE","updateBodyContentType","contentType","tabComponentsMap","_POST_BODY_FORMAT_OPT","API_PANE_NO_BODY","JSON","DynamicTextField","CodeEditorBorder","ALL_SIDE","evaluatedPopUpLabel","EditorModes","JSON_WITH_BINDING","showLineNumbers","EditorSize","EXTENDED","tabBehaviour","TabBehaviour","INDENT","FORM_URLENCODED","KeyValueFieldArray","pushFields","MULTIPART_FORM_DATA","hasType","RAW","TEXT_WITH_BINDING","MultiSwitch","cypressSelector","POST_BODY_FORMAT_TITLES","selectedValueHandler","setSelectedOption","RadioComponent","onSelectHandler","rows","selectedOptionElements","renderComponent","componentProps","RadioGroupWrapper","Field","format","normalize","PaginationFieldWrapper","Step","pagination","StepTitle","stepTitle","PaginationTypeView","PaginationSection","Example","BindingKey","bindingBg","GifContainer","Pagination","FormRow","RadioFieldGroup","PaginationType","PAGE_NO","P2","GifPlayer","gif","lightmodeGif","darkmodeGif","thumbnail","lightmodeThumbnail","darkmodeThumbnail","focusElementName","onTestClick","httpMethodFromForm","actionConfigurationHeaders","autoGeneratedActionConfigHeaders","actionConfigurationParams","datasourceFromAction","hintMessages","messages","datasourceHeaders","datasourceParams","currentActionDatasourceId","getApiName","headers","headersCount","paramsCount","suggestedWidgets","responses","getActionResponses","hasResponse","response","EMPTY_RESPONSE","statusCode","responseDisplayFormat","responseDataTypes","actionData","getActionData","dataTypes","dataType","updateDatasource","reduxForm","form","enableReinitialize","allowPostBody","CommonEditorForm","bodyUIComponent","PostBodyData","formName","paginationUIComponent","onRunClick","paginationType","CredentialTooltipWrapper","CADET_BLUE","TooltipStyles","BLUE_CHARCOAL","IconContainer","AQUA_HAZE","providerCredentialSteps","fontWeight","defaultIsOpen","FormIcons","INFO_ICON","TabsWrapper","shouldOverflow","primaryOld","BaseTabbedView","setSelectedIndex","Form","FormLabel","MainConfiguration","SecondaryWrapper","RequestParamsWrapper","ActionButtons","BaseButton","PostbodyContainer","HeadersSection","TabbedViewContainer","providerImage","providerURL","templateId","actionConfigurationBodyFormData","parse","destroyOnUnmount","handleSubmit","isDeleting","isRunning","onDeleteClick","postbodyResponsePresent","NameWrapper","ActionNameEditor","rel","paddingTop","buttonStyle","leftImage","SLASH_ICON","CredentialsTooltip","actionConfig","addOrDeleteFields","apiName","ApiResponseView","QueryHeader","editorProps","GRAPHQL_WITH_BINDING","QueryWrapper","CodeEditor","VariableWrapper","VariableHeader","EXPECTED_VARIABLE","showLightningMenu","PAGINATION_PREFIX","SubHeading","PaginationContainer","PaginationFieldContainer","LIGHT_GREYISH_BLUE","CheckboxFieldWrapper","RadioFieldGroupWrapper","DynamicTextFieldWrapper","graphqlParseVariables","queryBody","variables","variableString","match","variableWithType","_variableWithType$tri","_variableWithType$tri2","_variableWithType$tri3","_variableWithType$tri4","vtype","substring","PaginationTypeBasedWrapper","dataReplayId","onInputChange","onSelectVariable","onSeparateKeyChange","selectedVariable","separateKeyFlag","separateKeyLabel","separateKeyPath","separateValueFlag","valueLabel","valuePath","valuePlaceholder","valueTooltip","variableLabel","variableOptions","variableTooltip","dropdownOptions","disabledTooltipText","dropdownMaxHeight","fillOptions","showEmptyOptions","Checkbox","isDefaultChecked","onCheckChange","pluginExtraData","limitBased","LIMITBASED_PREFIX","cursorBased","CURSORBASED_PREFIX","bindActionCreators","_props$cursorBased","_props$cursorBased2","_props$limitBased","_props$limitBased$lim","_props$limitBased2","_props$limitBased2$li","_props$limitBased3","_props$limitBased3$of","_props$limitBased4","_props$limitBased4$of","_paginationPrev$limit","_paginationPrev$limit2","_paginationPrev$curso","_paginationPrev$curso2","_paginationNext$limit2","_paginationNext$limit3","_paginationNext$limit4","_paginationNext$curso","_paginationNext$curso2","variablesList","setVariablesList","variable","setPaginationValue","keyPath","paginationPrev","previous","paginationNext","flexGrow","CURSOR","PaginationSubComponent","Limit","dropdownOption","limit","Offset","textDecoration","CURSOR_PREVIOUS_PREFIX","_paginationNext$limit","actualKeyPath","dependentKeyPath","isSeparateEnabled","setSeparateOrSameLimitValue","CURSOR_NEXT_PREFIX","isSeparate","Cursor","ResizeableDiv","BodyWrapper","ResizerHandler","GREY_200","_props$match","actionConfigurationBody","sizeableRef","variableEditorWidth","setVariableEditorWidth","onVariableEditorWidthChange","QueryEditor","VariableEditor","defaultTabSelected","LoadingContainer","CenteredWrapper","getPageName","getPackageNameFromPluginId","ApiEditor","handleDeleteClick","apiID","getFormName","plug","handleRunClick","paginationField","RUN_API_CLICK","runAction","getPluginUiComponentOfId","uiComponent","getPluginUiComponentOfName","PluginPackageName","REST_API","changeAPIPage","prevProps","_getPackageNameFromPl","formUiComponent","_this$props","isCreating","isEditorInitialized","EntityNotFoundPane","formStyles","RestApiEditorForm","currentApplication","settingsConfig","GraphQLEditorForm","RapidApiEditorForm","saasEditorApiIdURL","apiAction","getActionById","_state$ui$apiPane","getPluginSettingConfigs","getPageList","getIsEditorInitialized","submitForm","submit","isSaas","changeApi","StyledContainer","ApiCardsContainer","ApiCard","GREY_1","CardContentWrapper","mapDispatchToProps","createNewApiAction","createDatasourceFromForm","createTempDatasourceFromForm","generateCRUDSupportedPlugin","getGenerateCRUDEnabledPluginMap","authApiPlugin","setAuthAPiPlugin","handleCreateAuthApiDatasource","pluginName","handleOnClick","queryParams","getIsGeneratePageInitiator","isGeneratePageMode","skipValidPluginCheck","GRAPHQL","importSource","CURL","curlImportURL","curlImportPageURL","showUnsupportedPluginDialog","API_PLUGINS","REMOTE","PlusLogo","CurlLogo","iconLocation","removeQueryParams","paramKeysToRemove","queryString","queryParamKeys","encodeURIComponent","DatasourceHomePage","DatasourceCardsContainer","DatasourceCard","DatasourceContentWrapper","DatasourceHomeScreen","goToCreateDatasource","createTempDatasource","_this$props2","pluginImages","getPluginImages","getDBPlugins","isSaving","initializeForm","initialize","DATASOURCE_DB_FORM","createDatasource","QueryHomePage","QueryHomeScreen","DataSourceHome","CollapseWrapper","toggleOpen","titleStyle","keepChildrenMounted","DatasourceCardMainBody","MenuComponent","MenuWrapper","DatasourceImage","DatasourceIconWrapper","GenerateTemplateOrReconnect","HIT_GRAY","DatasourceName","DatasourceCardHeader","DatasourceNameWrapper","DatasourceInfo","Queries","DOVE_GRAY","ButtonsWrapper","MoreOptionsContainer","CollapseComponentWrapper","RedMenuItem","_datasource$pluginId","supportTemplateGeneration","datasourceFormConfigs","formConfigs","queriesWithThisDatasource","getActionsForCurrentPage","canEditDatasource","isDeletingDatasource","currentFormConfig","QUERY","editDatasource","viewMode","isConfigured","isDatasourceAuthorizedForQueryCreation","new_page","GENERATE_NEW_PAGE_BUTTON_TEXT","RECONNECT_BUTTON_TEXT","NewActionButton","eventFrom","GREY_8","CONFIRM_CONTEXT_DELETING","isNil","CollapseComponent","RenderDatasourceInformation","thinScrollbar","CreateButton","EmptyActiveDatasource","dataSources","EMPTY_ACTIVE_DATA_SOURCES","onCreateNew","MockDataSourceWrapper","workspaceId","mockDatasources","MockDatasourceCard","currentPlugin","eachPlugin","mockDatasourceName","addMockDatasourceToWorkspace","HeadWrapper","OXFORD_BLUE","Secure","AppsmithDatasource","Back","useHistory","redirectURL","DIESEL","HeaderContents","headerText","typography","h1","fontSize","letterSpacing","HeaderRight","CloseIconContainer","hoverState","StyledSeparator","CLOSE_ICON","clickable","UNSUPPORTED_PLUGIN_DIALOG_MAIN_HEADING","normal","isModalOpen","onContinue","getHeader","UNSUPPORTED_PLUGIN_DIALOG_TITLE","UNSUPPORTED_PLUGIN_DIALOG_SUBTITLE","HeaderFlex","ApiHomePage","MainTabsContainer","SectionGrid","isActiveTab","NewIntegrationsContainer","PRIMARY_MENU_IDS","SECONDARY_MENU","getSecondaryMenu","hasActiveSources","mockDbMenu","getSecondaryMenuIds","API","DATABASE","MOCK_DATABASE","TERTIARY_MENU_IDS","UseMockDatasources","useMockRef","isMounted","H2","MockDataSources","CreateNewAPI","newAPIRef","NewApiScreen","CreateNewDatasource","newDatasourceRef","NewQueryScreen","IntegrationsHomeScreen","unsupportedPluginContinueAction","syncActivePrimaryMenu","activePrimaryMenuId","onSelectPrimaryMenu","activeSecondaryMenuId","onSelectSecondaryMenu","callback","unsupportedPluginDialogVisible","redirectMode","MOCK","_this$props3","currentScreen","_this$props4","_this$props4$canCreat","_this$state","PRIMARY_MENU","showTabs","mockDataSection","AddDatasourceSecurely","ActiveDataSources","BackButton","UnsupportedPluginDialog","getMockDatasources","API_HOME_SCREEN_FORM","selectStyles","provided","control","styles","selectProps","isFocused","ALTO2","indicatorsContainer","clearIndicator","dropdownIndicator","indicatorSeparator","menu","menuPortal","base","BaseDropdown","layer","LayersContext","customSelectStyles","menuPortalStyle","Select","menuPortalTarget","isDisabled","isSearchable","classNamePrefix","menuPlacement","replayHighlightClass","messageTextColor","CLICK_ON","secondHalfText","QueryFormContainer","ErrorMessage","responseBody","ResultsCount","FieldWrapper","DocumentationLink","HelpSection","ResponseContentWrapper","NoResponseContainer","ErrorContainer","ErrorDescriptionText","StyledFormRow","ActionsWrapper","DropdownSelect","CreateDatasource","ATHENS_GRAY","StyledSpinner","_templateObject20","NoDataSourceContainer","_templateObject21","TabContainerView","_templateObject22","dividerBg","_templateObject23","SidebarWrapper","_templateObject24","actionSidePane","valueSelector","QUERY_EDITOR_FORM_NAME","selectedDbId","responseTypes","getPluginResponseTypes","documentationLinks","getPluginDocumentationLinks","getPlugin","formEvaluationState","getFormEvaluationState","responseType","documentationLink","editorConfig","executedQueryData","onCreateDatasourceClick","runErrorMessage","settingConfig","updateActionResponseDisplayFormat","output","currentActionConfig","isChangePermitted","isExecutePermitted","hasExecuteActionPermission","isDeletePermitted","isExecutionSuccess","readableError","getErrorAsString","renderEachConfigV2","schema","subSection","conditionalOutput","extractConditionalOutput","checkIfSectionCanRender","checkIfSectionIsEnabled","updateEvaluatedSectionConfig","isValidFormConfig","configProperty","modifiedSection","modifySectionConfig","FormControl","renderEachConfig","formControlOrSection","responsePaneHeight","getQueryPaneResponsePaneHeight","setResponsePaneHeight","setQueryPaneResponsePaneHeight","responseBodyTabs","responseTabComponent","selectedTabIndex","responseTabs","AdsIcon","EXPECTED_ERROR","DebuggerMessage","setQueryPaneResponseSelectedTab","DEBUGGER_QUERY_RESPONSE_SECOND_HALF","msg","Callout","warning","responseViewer","ACTION_RUN_BUTTON_MESSAGE_FIRST_HALF","InlineButton","ACTION_RUN_BUTTON_MESSAGE_SECOND_HALF","ErrorLogs","_useEntityDependencie","useEntityDependencies","hasDependencies","DATASOURCES_OPTIONS","selectedConfigTab","getQueryPaneConfigSelectedTabIndex","setSelectedConfigTab","setQueryPaneConfigSelectedTabIndex","selectedResponseTab","getQueryPaneResponseSelectedTab","setSelectedResponseTab","initialized","CloseEditor","MoreActionsMenu","SearchSnippet","executeCommandAction","SlashCommand","NEW_SNIPPET","DropdownField","components","MenuList","CREATE_NEW_DATASOURCE","Option","SingleValue","maxMenuHeight","DOCUMENTATION_TOOLTIP","handleDocumentationClick","DOCUMENTATION","EDITOR_TABS","UIComponentTypes","UQIDbEditorForm","LARGE","INVALID_FORM_CONFIGURATION","Tag","interactive","round","ACTION_EDITOR_REFRESH","renderConfig","UNEXPECTED_ERROR","NO_DATASOURCE_FOR_QUERY","EditorButton","filled","SETTINGS","ActionSettings","actionSettingsConfig","Resizable","initialHeight","onResizeComplete","openResizer","snapToHeight","LoadingOverlayScreen","LoadingOverlayContainer","textAlign","ACTION_EXECUTION_MESSAGE","CancelRequestButton","handleCancelActionExecution","ActionRightPane","hasConnections","EmptyStateContainer","RUN_QUERY_CLICK","dataSourceSize","initFormEvaluation","changeQueryPage","_getPathAndValueFromA","actionObjectDiff","_actionObjectDiff$i","_actionObjectDiff$i2","oldData","rhs","getPathAndValueFromActionDiffObject","_getPathAndValueFromA2","_getPathAndValueFromA3","setActionProperty","pluginIds","goBackFn","QueryEditorForm","_props$match$params","queryPane","editorConfigs","settingConfigs","initialValues","getConfigInitialValues","diff","allPlugins","DbEditorForm","getUIComponent","getFormValues","getPluginIdsOfPackageNames","PLUGIN_PACKAGE_DBS","getDatasourceByPluginId","getDBAndRemoteDatasources","changeQuery","formId","initFormEvaluations","setActionResponseDisplayFormat","MoreActionablesContainer","treeDropdown","targetIcon","targetBg","prettifyCodeKeyboardShortCut","getAutoIndentShortcutKeyText","setIsMenuOpen","_props$isChangePermit","_props$isDeletePermit","querySelector","CodeMirror","autoIndentCode","updateJSCollectionBody","getValue","Intent","DANGER","menuWidth","onMenuToggle","LEFT_TOP","JSObjectNameWrapper","JSIconWrapper","currentJSObjectConfig","NameEditorComponent","dispatchAction","JS","forceUpdate","handleNameChange","isInvalidNameForEntity","isNew","saveStatus","errorTooltipClass","forceDefault","isInvalid","ACTION_NAME_PLACEHOLDER","Flag","disabledStyles","DropdownWithCTAWrapper","DropdownContainer","JSFunctionRun","onButtonClick","customBadge","FlagBadge","RUN_BUTTON_DEFAULTS","HEIGHT","selectedHighlightBg","DROPDOWN_HIGHLIGHT_BG","truncateOption","NO_JS_FUNCTION_TO_RUN","testLocators","runJSAction","CTA_TEXT","getAST","memoize","code","sourceType","ecmaVersion","ECMA_VERSION","locations","getNameFromPropertyNode","isLiteralNode","String","createGutterMarker","gutterOnclick","marker","innerHTML","RUN_GUTTER_CLASSNAME","onmousedown","ontouchstart","getJSFunctionLineGutter","runFunction","showGutters","onFocusAction","gutter","getGutterConfig","gutterId","RUN_GUTTER_ID","lineNumber","cursorLine","ast","end","start","SourceType","module","ancestor","Property","ancestors","nodeLocation","cursorLineNumber","depth","isPropertyNode","NodeTypes","ArrowFunctionExpression","FunctionExpression","loc","line","ExportDefaultDeclaration","getJSFunctionStartLineFromCode","isFocusedAction","convertJSActionToDropdownOption","JSAction","hasCustomBadge","isAsync","getJSActionOption","activeJSAction","jsActionOption","NO_FUNCTION_DROPDOWN_OPTION","SettingRow","noBorder","table","isHeading","AppIcon","SettingColumn","grow","Radio","JSFunctionSettingsWrapper","SettingsContainer","SettingsHeading","hasInfo","SettingsItem","_ref2$disabled","executeOnLoad","executeOnPageLoad","setExecuteOnPageLoad","confirmBeforeExecute","setConfirmBeforeExecute","updateProperty","updateFunctionProperty","toggleSetting","toggleValue","RADIO_OPTIONS","_ref3$disabled","asyncActions","ASYNC_FUNCTION_SETTINGS_HEADING","SETTINGS_HEADINGS","setting","NO_ASYNC_FUNCTIONS","JSObjectHotKeys","runActiveJSFunction","JS_OBJECT_HOTKEYS_CLASSNAME","CodeEditorWithGutterStyles","FormWrapper","backBanner","isExecuting","currentJSCollection","disableRunFunctionality","setDisableRunFunctionality","activeResponse","setActiveResponse","parseErrors","getJSCollectionParseErrors","getJSActions","activeJSActionId","getActiveJSActionId","selectedJSActionOption","setSelectedJSActionOption","isExecutingCurrentJSAction","_selectedJSActionOpti","getIsExecutingJSAction","functionName","ch","column","getJSPropertyLineFromName","setFocusableInputField","setCodeEditorCursorAction","CursorPositionOrigin","Navigation","executeJSAction","_selectedJSActionOpti2","setActiveJSAction","jsCollectionId","jsActionId","startExecutingJSFunction","collectionName","handleActiveActionChange","_selectedJSActionOpti3","JSGutters","handleRunAction","JSActions","blockCompletions","funcName","parentPath","subPath","getJSPaneConfigSelectedTabIndex","setJsPaneConfigSelectedTabIndex","JSObjectNameEditor","MoreJSCollectionsMenu","dropDownOption","customGutter","folding","hideEvaluatedValue","valueOrEvent","isJSObject","JAVASCRIPT","JSFunctionSettingsView","JSResponseView","currentFunction","jsObject","JSEditor","JsEditorForm","getJSCollectionById","jsPane","CONNECT_NEW_DATASOURCE_OPTION_ID","dropdownIconBg","GALLERY_1","CreateIconWrapper","extraProps","optionClickHandler","optionWidth","_extraProps$routeToCr","routeToCreateNewDatasource","isConnectNewDataSourceBtn","isSupportedForTemplate","isNotSupportedDatasource","optionCypressSelector","CREATE_NEW_ICON","PluginFormInputFieldMap","_PluginFormInputField","MONGO","DATASOURCE","TABLE","COLUMN","S3","GOOGLE_SHEETS","DROPDOWN_DIMENSION","DEFAULT_DROPDOWN_OPTION","ALLOWED_SEARCH_DATATYPE","SelectWrapper","Label","Bold","RoundBg","Row","ColumnName","ColumnInfoWrapper","ColumnNameWrapper","TooltipWrapper","RowHeading","generatePageAction","googleSheetPluginId","renderSubmitButton","selectedDatasource","selectedSpreadsheet","sheetColumnsHeaderProps","sheetsListProps","spreadSheetsProps","fetchSheetsList","isFetchingSheetsList","sheetsList","fetchAllSpreadsheets","columnHeaderList","errorFetchingColumnHeaderList","fetchColumnHeaderList","isFetchingColumnHeaderList","tableHeaderIndex","setTableHeaderIndex","selectedSheet","setSelectedSheet","googleSheetEditorConfig","getEditorConfig","sheetQueryRequest","setSheetQueryRequest","_selectedDatasource$d","fetchPluginFormConfig","_googleSheetEditorCon","requestObject","configs","keyConfig","valueConfig","initialValue","_selectedDatasource$d2","selectedDatasourceId","_selectedDatasource$d3","selectedSpreadsheetUrl","debouncedFetchColumns","_selectedDatasource$d5","sheetName","sheetValue","sheetObj","_selectedDatasource$d4","GEN_CRUD_TABLE_HEADER_LABEL","GEN_CRUD_TABLE_HEADER_TOOLTIP_DESC","XXS","Number","isNumberValidator","FontWeight","BOLD","GEN_CRUD_COLUMN_HEADER_TITLE","GEN_CRUD_NO_COLUMNS","searchColumn","tableName","pluginSpecificParams","sheetUrl","FAKE_DATASOURCE_OPTION","CONNECT_NEW_DATASOURCE_OPTION","FormSubmitButton","EditDatasourceButton","DescWrapper","datasourceIcon","GENERATE_PAGE_MODE","GeneratePageSubmitBtn","showSubmitButton","querySearch","numberOfEntities","getNumberOfEntitiesInCurrentPage","currentMode","datasourceIdToBeSelected","setDatasourceIdToBeSelected","datasourcesStructure","getDatasourcesStructure","isFetchingDatasourceStructure","getIsFetchingDatasourceStructure","datasourceTableOptions","setSelectedDatasourceTableOptions","selectedTableColumnOptions","setSelectedTableColumnOptions","selectDataSource","isSelectedTableEmpty","setIsSelectedTableEmpty","selectedDatasourcePluginId","selectedDatasourcePluginPackageName","isGoogleSheetPlugin","isS3Plugin","isFetchingSheetPluginForm","getIsFetchingSinglePluginForm","selectedTable","selectTable","selectedDatasourceIsInvalid","setSelectedDatasourceIsInvalid","selectedColumn","selectColumn","_useS3BucketList","bucketList","setBucketList","_useState21","_useState22","isFetchingBucketList","setIsFetchingBucketList","_useState23","_useState24","failedFetchingBucketList","setFailedFetchingBucketList","onFetchBucketSuccess","payloadBody","_payloadBody$bucketLi","onFetchBucketFailure","fetchBucketList","executeDatasourceQuery","useS3BucketList","onSelectDataSource","dataSourceObj","datasourceType","onSelectTable","TableObj","newSelectedTableColumnOptions","GOLD","onSelectColumn","ColumnObj","dataSourceOptions","setDataSourceOptions","unSupportedDatasourceOptions","supportedDatasourceOptions","newDataSourceOptions","datasourceObject","useDatasourceOptions","isFetchingSpreadsheets","setIsFetchingSpreadsheets","failedFetchingSpreadsheets","setFailedFetchingSpreadsheets","onFetchAllSpreadsheetFailure","onFetchAllSpreadsheetSuccess","trigger","spreadSheets","formattedRequestData","displayType","requestType","useSpreadSheets","setSheetsList","setIsFetchingSheetsList","failedFetchingSheetsList","setFailedFetchingSheetsList","onFetchAllSheetFailure","onFetchAllSheetSuccess","parameters","useSheetsList","setColumnHeaderList","setIsFetchingColumnHeaderList","setErrorFetchingColumnHeaderList","onFetchColumnHeadersFailure","onFetchColumnHeadersSuccess","useSheetColumnHeaders","bucketName","BURNING_ORANGE","selectedDatasourceStructure","newTables","generateNewPage","getQueryStringfromObject","extraParams","generateTemplateToUpdatePage","isValidDatasourceConfig","pluginField","DEFAULT","tableDropdownErrorMsg","fetchingDatasourceConfigs","fetchingDatasourceConfigError","showEditDatasourceBtn","showSearchableColumn","submitButtonDisable","GENERATE_PAGE_FORM_TITLE","GEN_CRUD_DATASOURCE_DROPDOWN_LABEL","DataSourceOption","GoogleSheetForm","GeneratePageForm","HeadingContainer","isGenerateFormPage","heading","back","PageContent","CurlIconWrapper","CurlImportText","StyledForm","CurlHintText","CurlImportFormContainer","GREY_5","CurlImportForm","isImportingCurl","curlImportSubmitHandler","createNewApiName","imports","CURL_IMPORT_FORM","DEFAULT_TEMPLATE_TYPE","TEMPLATES_TOP_SECTION_HEIGHT","ProviderInfo","TemplateDetailPage","ProviderInfoTopSection","TemplatesCardsContainer","headerHeight","TemplateCard","CardTopContent","TemplateCardLeftContent","TemplateCardRightContent","URLContainer","ProviderTemplates","addedTemplates","toggeledTemplates","addApiToPage","templateData","URLSearchParams","pageApiNames","getDuplicateName","addApiRequestObject","marketplaceElement","handleIsOpen","splice","_this$props$match$par","providerId","getProviderDetailsByProviderId","getProviderTemplates","setLastUsedEditorPage","setLastSelectedPage","isFetchingProviderTemplates","providerDetails","providerTemplates","imageUrl","getInitialsAndColorCode","appCardColors","margin","marginRight","apiTemplateConfiguration","documentation","httpMethod","addToPageStatus","addToPageLoading","ReactJson","displayDataTypes","displayObjectSize","enableClipboard","borderTopRightRadius","wordWrap","sampleResponse","borderBottomLeftRadius","borderBottomRightRadius","getProvidersTemplatesLoadingState","providers","providerDetailsByProviderId","getAppCardColorPalette","FETCH_PROVIDER_DETAILS_BY_PROVIDER_ID_INIT","FETCH_PROVIDER_TEMPLATES_INIT","fetchProviderTemplates","selectedPageId","ADD_API_TO_PAGE_INIT","onBackButton","subtitle","IntegrationUnavailableImage","IntegrationHomePage","AddDatasource","Boundary","hr","ListView","handleCreateNewDatasource","handleCreateNewAPI","pgId","newApiName","createAction","renderLoading","renderPage","renderNotFound","NotFound","getPluginByPackageName","getDatasourcesByPluginId","_selectURLSlugs","SaaSEditorRoutes","SAAS_EDITOR_PATH","SAAS_EDITOR_DATASOURCE_ID_PATH","DatasourceForm","SAAS_EDITOR_API_ID_PATH","Pageheader","h4","PageSubHeader","StatusWrapper","StyledListItem","grid","ChecklistText","CompeleteMarkerIcon","SILVER_CHALICE","StyledCompleteMarker","Backbutton","Banner","BannerHeader","BannerText","StyledFooter","OnboardingChecklist","isCompleted","getEnableFirstTimeUserOnboarding","Redirect","to","_getSuggestedNextActi","suggestedNextAction","ONBOARDING_CHECKLIST_ACTIONS","ADD_WIDGETS","DEPLOY_APPLICATIONS","CONNECT_DATA_TO_WIDGET","CREATE_A_QUERY","CONNECT_A_DATASOURCE","completedTasks","getSuggestedNextActionAndCompletedTasks","ONBOARDING_CHECKLIST_BANNER_HEADER","ONBOARDING_CHECKLIST_BANNER_BODY","ONBOARDING_CHECKLIST_BANNER_BUTTON","ONBOARDING_CHECKLIST_HEADER","ONBOARDING_CHECKLIST_BODY","ONBOARDING_CHECKLIST_COMPLETE_TEXT","ONBOARDING_CHECKLIST_CONNECT_DATA_SOURCE","bold","ONBOARDING_CHECKLIST_CREATE_A_QUERY","ONBOARDING_CHECKLIST_ADD_WIDGETS","ONBOARDING_CHECKLIST_CONNECT_DATA_TO_WIDGET","bindDataOnCanvas","ONBOARDING_CHECKLIST_DEPLOY_APPLICATIONS","ONBOARDING_CHECKLIST_FOOTER","applications","DatasourceEditorRoutes","DATA_SOURCES_EDITOR_ID_PATH","DataSourceEditor","SentryRoute","Route","useRouteMatch","showPropertyPane","exact","BUILDER_CUSTOM_PATH","IntegrationEditor","INTEGRATION_EDITOR_PATH","BUILDER_CHECKLIST_PATH","API_EDITOR_ID_PATH","QUERIES_EDITOR_ID_PATH","JS_COLLECTION_EDITOR_PATH","JS_COLLECTION_ID_PATH","CURL_IMPORT_PAGE_PATH","childPath","PROVIDER_TEMPLATE_PATH","GeneratePage","GENERATE_TEMPLATE_FORM_PATH","appBackground","sidebarWidth","getExplorerWidth","onLeftSidebarWidthChange","updateExplorerWidthAction","onLeftSidebarDragEnd","WidgetsEditor","BUILDER_PATH_DEPRECATED","BUILDER_PATH","WIDGETS_EDITOR_BASE_PATH","WIDGETS_EDITOR_ID_PATH","EditorsRouter","GlobalHotKeys","selectedWidget","MAIN_CONTAINER_WIDGET_ID","getSelectedText","categoryId","NAVIGATION","filterCategories","setGlobalSearchCategory","hideInstaller","widgetSearchInput","WIDGETS_SEARCH_ID","onOnmnibarHotKeyDown","SNIPPETS","INIT","openDebugger","isDebuggerOpen","stopPropagationIfWidgetSelected","copySelectedWidget","pasteCopiedWidget","getMousePosition","isMacOrIOS","cutSelectedWidget","selectAllWidgetsInit","resetSnipingMode","deselectAllWidgets","closeProppane","closeTableFilterProppane","setPreviewModeAction","executeAction","undo","redo","groupSelectedWidget","SAVE_HOTKEY_TOASTER_MESSAGE","isExplorerPinned","showCommitModal","appMode","getAppMode","mouseLocation","pasteWidget","cutWidget","groupWidgets","resetSnipingModeAction","selectWidgetInitAction","All","Empty","runActionViaShortcut","undoAction","redoAction","shouldSet","mousePosition","setMousePosition","useMouseLocation","hoverBackgroundColor","endButton","showDeviatingDialog","showDeviatingDialogSelector","showEndTourDialog","showEndTourDialogSelector","DEVIATION","END_CONFIRMATION","toggleShowEndTourDialog","DialogComponent","CANCEL_DIALOG","getPageLevelSocketRoomId","currentGitBranch","importedAppSuccess","currentUser","noModalBodyMarginTop","GREEN_1","DANGER_HEADING","APPLICATION_IMPORT_SUCCESS","username","APPLICATION_IMPORT_SUCCESS_DESCRIPTION","BackButtonWrapper","HeaderWrapper","hideBackButton","onBackPress","P4","TEMPLATES_BACK_BUTTON","FilterWrapper","ListWrapper","scrollbar","isImportingTemplateToApp","isImportingTemplateToAppSelector","isFetchingTemplatesSelector","LoadingScreen","FETCHING_TEMPLATE_LIST","FORKING_TEMPLATE","TemplateModalHeader","Filters","TemplatesContent","isForkingEnabled","onForkTemplateClick","importTemplateIntoApplication","onTemplateClick","stickySearchBar","CardHeader","StyledCheckMark","Checkmark","isChecked","CheckboxWrapper","checkbox","labelColor","PageName","CustomCheckbox","CheckboxType","PRIMARY","selectedPages","setSelectedPages","pagesText","PAGES","PAGE","FILTER_SELECTALL","onPageSelection","PagesLineIcon","selectedPageName","onSelection","FILTER_SELECT_PAGES","breakpointColumns","default","Body","StyledSimilarTemplatesWrapper","SimilarTemplates","TemplateDescriptionWrapper","currentTemplateId","setCurrentTemplateId","previewUrl","setPreviewUrl","similarTemplates","isFetchingTemplate","isFetchingTemplateSelector","currentTemplate","getActiveTemplateSelector","LoadingText","FETCHING_TEMPLATES","getTemplateInformation","getSimilarTemplatesInit","appUrl","IframeWrapper","IframeTopBar","TemplateDescription","hideForkButton","breakpointCols","onFork","PageSelection","isURLDeprecated","VIEWER_PATH_DEPRECATED","VIEWER_PATH","matchViewerPath","matchPath","generatePath","templatesModalOpen","templateModalOpenSelector","templatesCount","templatesCountSelector","pluginListLength","defaultPluginList","filters","allFilters","showTemplateDetails","setShowTemplateDetails","getAllTemplates","fetchDefaultPlugins","functions","getTemplateFilters","TemplateDetailedView","TemplatesList","windowHeight","setWindowHeight","innerWidth","windowWidth","setWindowWidth","handleWindowResize","TabsContainer","_useWindowDimensions","useWindowDimensions","initialWidth","SIDE_NAV_WIDTH","TABS_PANE_MIN_WIDTH","tabPaneWidth","getTabsPaneWidth","screen","toFixed","PropertyPanePane","tabsPaneWidth","SideNav","TabsPane","SET_TABS_PANE_WIDTH","setTabsPaneWidth","CanvasPane","Editor","_Component","registered","editorInitializer","then","getSearchQuery","GIT_BRANCH_QUERY_KEY","initEditor","EDIT","isPageLevelSocketConnected","collabStartSharingPointerEvent","nextProps","_nextProps$match","_nextProps$match$para","_this$props$match","_this$props$match$par2","getIsBranchUpdated","currentApplicationName","currentApplicationId","isPublishing","isEditorLoading","errorPublishing","isEditorInitializeError","loadingGuidedTour","prevPageId","isBranchUpdated","isPageIdUpdated","updateCurrentPage","fetchPage","resetEditorRequest","collabStopSharingPointerEvent","ThemeProvider","DndProvider","backend","TouchBackend","enableMouseEvents","Helmet","charSet","MultiPaneContainer","GitSyncModal","DisconnectGitModal","GuidedTourModal","RepoLimitExceededErrorModal","TemplatesModal","ImportedApplicationSuccessModal","ReconnectDatasourceModal","RequestConfirmationModal","Component","getTheme","ThemeMode","_state$ui$application","getPublishingError","getIsPublishingApplication","getIsEditorLoading","getIsPageLevelSocketConnected"],"sourceRoot":""}